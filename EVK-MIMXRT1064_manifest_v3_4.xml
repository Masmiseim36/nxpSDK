<?xml version="1.0" encoding="UTF-8"?>
<ksdk:manifest xmlns:ksdk="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="SDK_2.x_EVK-MIMXRT1064" name="EVK-MIMXRT1064" brief="This is SDK version 2.6.0 manifest file. It describes the content of the EVK-MIMXRT1064 and additional settings for tools that support SDK version 2.6.0" format_version="3.4" api_version="2.0.0" configuration="bd246aaf310cdffb520e02a04cb755f3" xsi:schemaLocation="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd http://nxp.com/mcuxpresso/sdk/sdk_manifest_v3.4.xsd">
  <!--Timestamp (UTC): 2019-06-17 06:43:29.679892-->
  <defines>
    <define name="CPU_$|package|" value=""/>
    <define name="CPU_$|package|_$|core|" value=""/>
  </defines>
  <externalDefinitions>
    <definition extID="BOARD_FLASH_evkmimxrt1064"/>
  </externalDefinitions>
  <ksdk id="MCUXpresso260" name="MCUXpresso260" version="2.6.0" revision="228 2019-06-14"/>
  <compilers>
    <compiler id="compiler_arm" name="arm" type="arm"/>
    <compiler id="compiler_gcc" name="gcc" type="gcc"/>
    <compiler id="compiler_iar" name="iar" type="iar"/>
  </compilers>
  <toolchainSettings>
    <toolchainSetting id="com.nxp.mcuxpresso" name="mcuxpresso" version="11.0.0" full_name="MCUXpresso IDE" compiler="compiler_gcc" toolchain="mcuxpresso">
      <option id="gnu.cpp.compiler.option.optimization.flags" type="string" user_name="">
        <value>-fno-common</value>
      </option>
      <option id="gnu.c.compiler.option.optimization.flags" type="string" user_name="">
        <value>-fno-common</value>
      </option>
      <option id="gnu.cpp.link.option.nostdlibs" type="boolean" user_name="">
        <value>true</value>
      </option>
      <option id="com.crt.advproject.link.cpp.flashconfigenable" type="boolean" user_name="">
        <value>true</value>
      </option>
      <option id="com.crt.advproject.link.flashconfigenable" type="boolean" user_name="">
        <value>true</value>
      </option>
      <option id="gnu.c.link.option.nostdlibs" type="boolean" user_name="">
        <value>true</value>
      </option>
    </toolchainSetting>
  </toolchainSettings>
  <toolchains>
    <toolchain id="armgcc" name="GCC_ARM_Embedded" version="8.2.1" full_name="GCC ARM Embedded" compiler="compiler_gcc" type="armgcc" vendor="GCC ARM Embedded" vendor_url="http://launchpad.net/gcc-arm-embedded"/>
    <toolchain id="mdk" name="Keil_MDK" version="5.27" full_name="Keil MDK" compiler="compiler_arm" type="mdk" vendor="ARM" vendor_url="http://www.arm.com"/>
    <toolchain id="iar" name="IAR_Embedded_Workbench_for_ARM" version="8.32.3" full_name="IAR Embedded Workbench for ARM" compiler="compiler_iar" type="iar" vendor="IAR Systems" vendor_url="http://www.iar.com"/>
    <toolchain id="mcuxpresso" name="MCUXpresso_IDE" version="11.0.0" full_name="MCUXpresso IDE" compiler="compiler_gcc" type="mcuxpresso" vendor="NXP Semiconductors" vendor_url="http://www.nxp.com">
      <debug>
        <debug_configuration id="com.crt.advproject.config.exe.release" name="Release Configuration" probe="LinkServer">
          <scripts>
            <script type="init" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>
set remotetimeout 60000
##target_extended_remote##
set mem inaccessible-by-default ${mem.access}
mon ondisconnect ${ondisconnect}
set arm force-mode thumb
${load}</script>
            </script>
            <script type="run" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>${run}</script>
            </script>
          </scripts>
          <params>
            <params id="vector.catch.release.mcuxpresso" name="vector.catch" value="false"/>
            <params id="internal.cache.release.mcuxpresso" name="internal.cache" value="Disable"/>
          </params>
        </debug_configuration>
        <debug_configuration id="com.crt.advproject.config.exe.debug" name="Debug Configuration" probe="LinkServer">
          <scripts>
            <script type="init" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>
set remotetimeout 60000
##target_extended_remote##
set mem inaccessible-by-default ${mem.access}
mon ondisconnect ${ondisconnect}
set arm force-mode thumb
${load}</script>
            </script>
            <script type="run" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>${run}</script>
            </script>
          </scripts>
          <params>
            <params id="vector.catch.debug.mcuxpresso" name="vector.catch" value="false"/>
            <params id="internal.cache.debug.mcuxpresso" name="internal.cache" value="Disable"/>
          </params>
        </debug_configuration>
        <debug_configuration id="com.nxp.mcuxpresso.core.debug.support.segger.debug" name="Debug Configuration" probe="Segger"/>
        <debug_configuration id="com.nxp.mcuxpresso.core.debug.support.segger.release" name="Release Configuration" probe="Segger"/>
      </debug>
    </toolchain>
  </toolchains>
  <boards>
    <board id="evkmimxrt1064" name="EVK-MIMXRT1064" href="https://www.nxp.com/mimxrt1064-evk" version="1.0.0" package="MIMXRT1064DVL6A">
      <description>MIMXRT1064-EVK: EVK Development Platform for i.MX MIMXRT1064 MCUs</description>
      <image path="docs/images" type="image">
        <files mask="EVK-MIMXRT1064.gif"/>
      </image>
      <metadataSet>
        <metadata key="html">
          <specific>
            <content>The NXP MIMXRT1064-EVK is a development board for the i.MX MIMXRT1064 600 MHz 32-bit ARM® Cortex®-M7 MCUs.</content>
          </specific>
        </metadata>
      </metadataSet>
      <memory>
        <memoryBlock id="PROGRAM_FLASH_evkmimxrt1064" name="PROGRAM_FLASH" addr="70000000" size="00400000" type="Flash" access="RO"/>
        <memoryBlock id="BOARD_SDRAM_evkmimxrt1064" name="BOARD_SDRAM" addr="80000000" size="02000000" type="RAM" access="RW"/>
      </memory>
      <total_memory flash_size_kb="8192" ram_size_kb="32768"/>
      <examples>
        <example id="evkmimxrt1064_adc_12b1msps_sar_interrupt" name="adc_12b1msps_sar_interrupt" brief="The adc_interrupt example shows how to use interrupt with adc driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the adc'ssample input. When running the project, typing any key into debug console would trigger the conversion. ADC interrupt would be asserted once the conversion is completed. In ADC ISR, the conversion completed flag would be cleared by reading the conversion result value. Also, the conversion result value is stored, and the ISR counter is increased. These information would be printed when the execution return to the main loop.The point is that the adc interrupt configuration is set when configuring the adc's conversion channel. When in software trigger mode, the conversion would be launched by the operation of configuring channel, just like writing aconversion command. So if user wants to generate the interrupt every time the conversion is completed, the channel's configuration with enabling interrupt setting would be used for each conversion." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/adc" path="boards/evkmimxrt1064/driver_examples/adc/interrupt">
          <external path="boards/evkmimxrt1064/driver_examples/adc/interrupt" type="xml">
            <files mask="adc_12b1msps_sar_interrupt.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_adc_12b1msps_sar_polling" name="adc_12b1msps_sar_polling" brief="The adc_polling example shows the simplest way to use adc driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the adc'ssample input. When running the project, typing any key into debug console would trigger the conversion. The execution would check the conversion completed flag in loop until the flag is asserted, which means the conversion is completed. Then read the conversion result value and print it to debug console.Note, the default setting of initialization for the ADC converter is just an available configuration. User can changethe configuration structure's setting in application to fit the special requirement.The auto-calibration is not essential but strongly recommended. It can help to adjust the converter itself and improvethe adc's performance." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/adc" path="boards/evkmimxrt1064/driver_examples/adc/polling">
          <external path="boards/evkmimxrt1064/driver_examples/adc/polling" type="xml">
            <files mask="adc_12b1msps_sar_polling.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_adc_etc_hardware_trigger_conv" name="adc_etc_hardware_trigger_conv" brief="The adc_etc_software_trigger_conv example shows how to use the ADC_ETC to generate a ADC trigger by PIT channel0 trigger.Every 1 second, PIT channel0 would send a trigger signal to ADC_ETC, which can arbitrate and manage multiple external triggers,and ADC_ETC would generate ADC trigger.In this example, the ADC is configured with hardware trigger. Once ADC gets the trigger from the ADC_ETC, the conversion goes,then the ADC_ETC ISR would be executed." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/adc_etc" path="boards/evkmimxrt1064/driver_examples/adc_etc/adc_etc_hardware_trigger_conv">
          <external path="boards/evkmimxrt1064/driver_examples/adc_etc/adc_etc_hardware_trigger_conv" type="xml">
            <files mask="adc_etc_hardware_trigger_conv.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_adc_etc_software_trigger_conv" name="adc_etc_software_trigger_conv" brief="The adc_etc_software_trigger_conv example shows how to use the ADC_ETC to generate a ADC trigger by software trigger.In this example, the ADC is configured with hardware trigger. Once ADC gets the trigger from the ADC_ETC, the conversion goes,then the ADC_ETC ISR would be executed." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/adc_etc" path="boards/evkmimxrt1064/driver_examples/adc_etc/adc_etc_software_trigger_conv">
          <external path="boards/evkmimxrt1064/driver_examples/adc_etc/adc_etc_software_trigger_conv" type="xml">
            <files mask="adc_etc_software_trigger_conv.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_aws_greengrass_discovery_enet" name="aws_greengrass_discovery_enet" brief="This example demonstrates how the board can discover Greengrass core and communicate with AWS IoT cloud through it. You will need device (A Mac, Windows PC, or UNIX-like system) for running AWS Greengrass. Example will connect to WiFi network, try to discover your AWS Greengrass device and send Hello World message to AWS IoT cloud through it. This demo needs WiFi network with internet access and opened 8883 and 8443 ports." toolchain="armgcc iar mcuxpresso mdk" category="aws_examples" path="boards/evkmimxrt1064/aws_examples/greengrass_discovery_enet">
          <external path="boards/evkmimxrt1064/aws_examples/greengrass_discovery_enet" type="xml">
            <files mask="aws_greengrass_discovery_enet.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_aws_greengrass_discovery_wiced" name="aws_greengrass_discovery_wiced" brief="This example demonstrates how the board can discover Greengrass core and communicate with AWS IoT cloud through it. You will need device (A Mac, Windows PC, or UNIX-like system) for running AWS Greengrass. Example will connect to WiFi network, try to discover your AWS Greengrass device and send Hello World message to AWS IoT cloud through it. This demo needs WiFi network with internet access and opened 8883 and 8443 ports." toolchain="armgcc iar mcuxpresso" category="aws_examples" path="boards/evkmimxrt1064/aws_examples/greengrass_discovery_wifi_wiced_4343W">
          <external path="boards/evkmimxrt1064/aws_examples/greengrass_discovery_wifi_wiced_4343W" type="xml">
            <files mask="aws_greengrass_discovery_wiced.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_aws_remote_control_wiced" name="aws_remote_control_wiced" brief="This example demonstrates how the board can be controlled by Android mobile application with usage the AWS IoT. User LEDs on the board can be controlled and also an action can be invoked to read data from accelerometer and report it to AWS IoT device shadow." toolchain="armgcc iar mcuxpresso" category="aws_examples" path="boards/evkmimxrt1064/aws_examples/remote_control_wifi_wiced_4343W">
          <external path="boards/evkmimxrt1064/aws_examples/remote_control_wifi_wiced_4343W" type="xml">
            <files mask="aws_remote_control_wiced.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_aws_shadow_enet" name="aws_shadow_enet" brief="The simple Shadow lightbulb example to illustrate how client application and things communicate with the Shadow service." toolchain="armgcc iar mcuxpresso mdk" category="aws_examples" path="boards/evkmimxrt1064/aws_examples/shadow_enet">
          <external path="boards/evkmimxrt1064/aws_examples/shadow_enet" type="xml">
            <files mask="aws_shadow_enet.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_aws_shadow_wiced" name="aws_shadow_wiced" brief="The simple Shadow lightbulb example to illustrate how client application and things communicate with the Shadow service." toolchain="armgcc iar mcuxpresso" category="aws_examples" path="boards/evkmimxrt1064/aws_examples/shadow_wifi_wiced_4343W">
          <external path="boards/evkmimxrt1064/aws_examples/shadow_wifi_wiced_4343W" type="xml">
            <files mask="aws_shadow_wiced.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_aws_tests_wiced" name="aws_tests_wiced" brief="The aws_tests_wiced application performs set of network and cryptographic tests required by Amazon for certification." toolchain="armgcc iar mcuxpresso" category="aws_examples" path="boards/evkmimxrt1064/aws_examples/aws_tests_wifi_wiced_4343W">
          <external path="boards/evkmimxrt1064/aws_examples/aws_tests_wifi_wiced_4343W" type="xml">
            <files mask="aws_tests_wiced.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_bee" name="bee" brief="This driver example should demonstrate how to setup BEE driver for on the fly decryption of data stored in QSPI memory region. The BEE is configuerd to decrypt all data starting from location 0x6000_0000 to 0x6001_0000 using AES ECB mode with user specified key. If the BEE_KEY_SEL fuse is programmed, then OTPMK key will be used instead.The example itself does not perform any data decryption operation over QSPI. It is used only as a BEE setup guide." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/bee" path="boards/evkmimxrt1064/driver_examples/bee">
          <external path="boards/evkmimxrt1064/driver_examples/bee" type="xml">
            <files mask="bee.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_bubble" name="bubble" brief="The bubble level demo demonstrates basic usage of the on-board accelerometer to implement a bubble level. A bubble level utilizes two axes to visually show deviation from a level plane (0 degrees) on a given axis." toolchain="armgcc iar mcuxpresso mdk" category="demo_apps" path="boards/evkmimxrt1064/demo_apps/bubble">
          <external path="boards/evkmimxrt1064/demo_apps/bubble" type="xml">
            <files mask="bubble.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_bubble_peripheral" name="bubble_peripheral" brief="The bubble level demo demonstrates basic usage of the on-board accelerometer to implement a bubble level. A bubble level utilizes two axes to visually show deviation from a level plane (0 degrees) on a given axis. You can open the mex file with MCUXpresso Config Tool to do further configuration of pin, clock and peripheral." toolchain="armgcc iar mcuxpresso mdk" category="demo_apps" path="boards/evkmimxrt1064/demo_apps/bubble_peripheral">
          <external path="boards/evkmimxrt1064/demo_apps/bubble_peripheral" type="xml">
            <files mask="bubble_peripheral.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_cache" name="cache" brief="The cache example shows how to use memory cache driver.In this example, many memory (such as SDRAM, etc) and DMA will be used to show the example.Those memory is both accessible for cpu and DMA. For the memory data alignment, cache driver should be used rightly. For cache enabled case, the cache invalidate operation should be done before cpu access the memory. The cache clean opeartion should be done after CPU verify the memorymemory and before DMA access the memory." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples" path="boards/evkmimxrt1064/driver_examples/cache">
          <external path="boards/evkmimxrt1064/driver_examples/cache" type="xml">
            <files mask="cache.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_canfd_interrupt_transfer" name="canfd_interrupt_transfer" brief="The canfd_interrupt example shows how to use FlexCAN driver in none-blocking interrupt way:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send a CAN Message toEndpoint B(board B) when user press space key in terminal. Endpoint B receive the message, printthe message content to terminal and echo back the message. Endpoint A will increase the receivedmessage and waiting for the next transmission of the user initiated." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/canfd" path="boards/evkmimxrt1064/driver_examples/canfd/interrupt_transfer">
          <external path="boards/evkmimxrt1064/driver_examples/canfd/interrupt_transfer" type="xml">
            <files mask="canfd_interrupt_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_canfd_loopback" name="canfd_loopback" brief="The canfd_loopback_functional example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrouth internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/canfd" path="boards/evkmimxrt1064/driver_examples/canfd/loopback">
          <external path="boards/evkmimxrt1064/driver_examples/canfd/loopback" type="xml">
            <files mask="canfd_loopback.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_canfd_loopback_transfer" name="canfd_loopback_transfer" brief="The canfd_loopback example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrough internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/canfd" path="boards/evkmimxrt1064/driver_examples/canfd/loopback_transfer">
          <external path="boards/evkmimxrt1064/driver_examples/canfd/loopback_transfer" type="xml">
            <files mask="canfd_loopback_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_cmp_interrupt" name="cmp_interrupt" brief="The CMP interrupt Example shows how to use interrupt with CMP driver.In this example, user should indicate an input channel to capture a voltage signal (can be controlled by user) as the CMP's positive channel input. On the negative side, the internal 6-bit DAC is used to generate the fixed voltage abouthalf value of reference voltage.When running the project, change the input voltage of user-defined channel, then the comparator's output would changebetween logic one and zero when the user-defined channel's voltage crosses the internal DAC's value. The change ofcomparator's output would generate the falling and rising edge events with their interrupts enabled. When any CMP interrupt happens, the CMP's ISR would turn on the LED light if detecting the output's rising edge, or turn off it whendetecting the output's falling edge." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/cmp" path="boards/evkmimxrt1064/driver_examples/cmp/interrupt">
          <external path="boards/evkmimxrt1064/driver_examples/cmp/interrupt" type="xml">
            <files mask="cmp_interrupt.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_cmp_polling" name="cmp_polling" brief="The CMP polling Example shows the simplest way to use CMP driver and help user with a quick start.In this example, user should indicate an input channel to capture a voltage signal (can be controlled by user) as the CMP's positive channel input. On the negative side, the internal 6-bit DAC is used to generate the fixed voltage abouthalf value of reference voltage.When running the project, change the input voltage of user-defined channel, then the comparator's output would changebetween logic one and zero when the user's voltage crosses the internal DAC's value. The endless loop in main() functionwould detect the logic value of comparator's output, and change the LED. The LED would be turned on when the compareoutput is logic one, or turned off when zero." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/cmp" path="boards/evkmimxrt1064/driver_examples/cmp/polling">
          <external path="boards/evkmimxrt1064/driver_examples/cmp/polling" type="xml">
            <files mask="cmp_polling.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_cmsis_lpi2c_edma_b2b_transfer_master" name="cmsis_lpi2c_edma_b2b_transfer_master" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_edma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with EDMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" category="cmsis_driver_examples/lpi2c" path="boards/evkmimxrt1064/cmsis_driver_examples/lpi2c/edma_b2b_transfer/master">
          <external path="boards/evkmimxrt1064/cmsis_driver_examples/lpi2c/edma_b2b_transfer/master" type="xml">
            <files mask="cmsis_lpi2c_edma_b2b_transfer_master.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_cmsis_lpi2c_edma_b2b_transfer_slave" name="cmsis_lpi2c_edma_b2b_transfer_slave" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_edma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with EDMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" category="cmsis_driver_examples/lpi2c" path="boards/evkmimxrt1064/cmsis_driver_examples/lpi2c/edma_b2b_transfer/slave">
          <external path="boards/evkmimxrt1064/cmsis_driver_examples/lpi2c/edma_b2b_transfer/slave" type="xml">
            <files mask="cmsis_lpi2c_edma_b2b_transfer_slave.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_cmsis_lpi2c_int_b2b_transfer_master" name="cmsis_lpi2c_int_b2b_transfer_master" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The lpi2c_int_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" category="cmsis_driver_examples/lpi2c" path="boards/evkmimxrt1064/cmsis_driver_examples/lpi2c/int_b2b_transfer/master">
          <external path="boards/evkmimxrt1064/cmsis_driver_examples/lpi2c/int_b2b_transfer/master" type="xml">
            <files mask="cmsis_lpi2c_int_b2b_transfer_master.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_cmsis_lpi2c_int_b2b_transfer_slave" name="cmsis_lpi2c_int_b2b_transfer_slave" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The lpi2c_int_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" category="cmsis_driver_examples/lpi2c" path="boards/evkmimxrt1064/cmsis_driver_examples/lpi2c/int_b2b_transfer/slave">
          <external path="boards/evkmimxrt1064/cmsis_driver_examples/lpi2c/int_b2b_transfer/slave" type="xml">
            <files mask="cmsis_lpi2c_int_b2b_transfer_slave.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_cmsis_lpspi_edma_b2b_transfer_master" name="cmsis_lpspi_edma_b2b_transfer_master" brief="The cmsis_lpspi_edma_b2b_transfer example shows how to use LPSPI CMSIS driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_edma_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in edma . " toolchain="armgcc iar mcuxpresso mdk" category="cmsis_driver_examples/lpspi" path="boards/evkmimxrt1064/cmsis_driver_examples/lpspi/edma_b2b_transfer/master">
          <external path="boards/evkmimxrt1064/cmsis_driver_examples/lpspi/edma_b2b_transfer/master" type="xml">
            <files mask="cmsis_lpspi_edma_b2b_transfer_master.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_cmsis_lpspi_edma_b2b_transfer_slave" name="cmsis_lpspi_edma_b2b_transfer_slave" brief="The cmsis_lpspi_edma_b2b_transfer example shows how to use LPSPI CMSIS driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_edma_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in edma . " toolchain="armgcc iar mcuxpresso mdk" category="cmsis_driver_examples/lpspi" path="boards/evkmimxrt1064/cmsis_driver_examples/lpspi/edma_b2b_transfer/slave">
          <external path="boards/evkmimxrt1064/cmsis_driver_examples/lpspi/edma_b2b_transfer/slave" type="xml">
            <files mask="cmsis_lpspi_edma_b2b_transfer_slave.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_cmsis_lpspi_int_b2b_transfer_master" name="cmsis_lpspi_int_b2b_transfer_master" brief="The cmsis_lpspi_int_b2b_transfer example shows how to use LPSPI CMSIS driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_int_b2b_transfer_master.c' includes the LPSPI master code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . " toolchain="armgcc iar mcuxpresso mdk" category="cmsis_driver_examples/lpspi" path="boards/evkmimxrt1064/cmsis_driver_examples/lpspi/int_b2b_transfer/master">
          <external path="boards/evkmimxrt1064/cmsis_driver_examples/lpspi/int_b2b_transfer/master" type="xml">
            <files mask="cmsis_lpspi_int_b2b_transfer_master.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_cmsis_lpspi_int_b2b_transfer_slave" name="cmsis_lpspi_int_b2b_transfer_slave" brief="The lpspi_int_b2b_transfer example shows how to use LPSPI CMSIS driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_int_b2b_transfer_slave.c' includes the LPSPI slave code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . " toolchain="armgcc iar mcuxpresso mdk" category="cmsis_driver_examples/lpspi" path="boards/evkmimxrt1064/cmsis_driver_examples/lpspi/int_b2b_transfer/slave">
          <external path="boards/evkmimxrt1064/cmsis_driver_examples/lpspi/int_b2b_transfer/slave" type="xml">
            <files mask="cmsis_lpspi_int_b2b_transfer_slave.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_cmsis_lpuart_edma_transfer" name="cmsis_lpuart_edma_transfer" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_edma_transfer example shows how to use uart cmsis  driver with EDMA:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar mcuxpresso mdk" category="cmsis_driver_examples/lpuart" path="boards/evkmimxrt1064/cmsis_driver_examples/lpuart/edma_transfer">
          <external path="boards/evkmimxrt1064/cmsis_driver_examples/lpuart/edma_transfer" type="xml">
            <files mask="cmsis_lpuart_edma_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_cmsis_lpuart_interrupt_transfer" name="cmsis_lpuart_interrupt_transfer" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_interrupt_transfer example shows how to use uart cmsis driver in interrupt way:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar mcuxpresso mdk" category="cmsis_driver_examples/lpuart" path="boards/evkmimxrt1064/cmsis_driver_examples/lpuart/interrupt_transfer">
          <external path="boards/evkmimxrt1064/cmsis_driver_examples/lpuart/interrupt_transfer" type="xml">
            <files mask="cmsis_lpuart_interrupt_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_csi_ccir656" name="csi_ccir656" brief="The CSI CCIR656 project shows how to receive the camera data using CSI driver,the camera interface is CCIR656. In this example, you will see the camera inputimage shown in the LCD. Please note that the camera input image resolutionmight be smaller than the LCD panel, so part of the LCD panel might be blank." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/csi" path="boards/evkmimxrt1064/driver_examples/csi/ccir656">
          <external path="boards/evkmimxrt1064/driver_examples/csi/ccir656" type="xml">
            <files mask="csi_ccir656.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_csi_rgb565" name="csi_rgb565" brief="The CSI RGB565 project shows how to receive the camera data using CSI driver.In this example, you will see the camera input image shown in the LCD. Pleasenote that the camera input image resolution might be smaller than the LCDpanel, so part of the LCD panel might be blank." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/csi" path="boards/evkmimxrt1064/driver_examples/csi/rgb565">
          <external path="boards/evkmimxrt1064/driver_examples/csi/rgb565" type="xml">
            <files mask="csi_rgb565.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dcp" name="dcp" brief="The DCP Example project is a demonstration program that uses the KSDK software implementseveral cryptography algorithms using the DCP software driver." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples" path="boards/evkmimxrt1064/driver_examples/dcp">
          <external path="boards/evkmimxrt1064/driver_examples/dcp" type="xml">
            <files mask="dcp.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_audio_generator_bm" name="dev_audio_generator_bm" brief="The USB Audio Generator application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a recording device and users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_audio_generator/bm">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_audio_generator/bm" type="xml">
            <files mask="dev_audio_generator_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_audio_generator_freertos" name="dev_audio_generator_freertos" brief="The USB Audio Generator application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a recording device and users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_audio_generator/freertos">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_audio_generator/freertos" type="xml">
            <files mask="dev_audio_generator_freertos.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_audio_generator_lite_bm" name="dev_audio_generator_lite_bm" brief="The USB Audio Generator application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a recording device and users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_audio_generator_lite/bm">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_audio_generator_lite/bm" type="xml">
            <files mask="dev_audio_generator_lite_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_audio_speaker_bm" name="dev_audio_speaker_bm" brief="The USB Audio Speaker application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a playback device and users can play music using the device." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_audio_speaker/bm">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_audio_speaker/bm" type="xml">
            <files mask="dev_audio_speaker_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_audio_speaker_freertos" name="dev_audio_speaker_freertos" brief="The USB Audio Speaker application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a playback device and users can play music using the device." toolchain="armgcc iar mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_audio_speaker/freertos">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_audio_speaker/freertos" type="xml">
            <files mask="dev_audio_speaker_freertos.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_audio_speaker_lite_bm" name="dev_audio_speaker_lite_bm" brief="The USB Audio Speaker application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a playback device and users can play music using the device." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_audio_speaker_lite/bm">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_audio_speaker_lite/bm" type="xml">
            <files mask="dev_audio_speaker_lite_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_cdc_vcom_bm" name="dev_cdc_vcom_bm" brief="The Virtual COM project is enumerated as a COM port, which the users can open using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_cdc_vcom/bm">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_cdc_vcom/bm" type="xml">
            <files mask="dev_cdc_vcom_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_cdc_vcom_freertos" name="dev_cdc_vcom_freertos" brief="The Virtual COM project is  enumerated as a COM port, which the users can open using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_cdc_vcom/freertos">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_cdc_vcom/freertos" type="xml">
            <files mask="dev_cdc_vcom_freertos.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_cdc_vcom_lite_bm" name="dev_cdc_vcom_lite_bm" brief="The Virtual COM project enumerated as a COM port, which the users can open using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_cdc_vcom_lite/bm">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_cdc_vcom_lite/bm" type="xml">
            <files mask="dev_cdc_vcom_lite_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_cdc_vnic_bm" name="dev_cdc_vnic_bm" brief="The Virtual NIC project is enumerated as a network adapter. Users can access the network by properly configuring this network adapter." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_cdc_vnic/bm">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_cdc_vnic/bm" type="xml">
            <files mask="dev_cdc_vnic_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_cdc_vnic_freertos" name="dev_cdc_vnic_freertos" brief="The Virtual NIC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a network adapter. Users can access the network by properly configuring this network adapter." toolchain="armgcc iar mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_cdc_vnic/freertos">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_cdc_vnic/freertos" type="xml">
            <files mask="dev_cdc_vnic_freertos.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_cdc_vnic_lite_bm" name="dev_cdc_vnic_lite_bm" brief="The Virtual NIC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a network adapter. Users can access the network by properly configuring this network adapter." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_cdc_vnic_lite/bm">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_cdc_vnic_lite/bm" type="xml">
            <files mask="dev_cdc_vnic_lite_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_composite_cdc_msc_bm" name="dev_composite_cdc_msc_bm" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted.." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_composite_cdc_msc/bm">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_composite_cdc_msc/bm" type="xml">
            <files mask="dev_composite_cdc_msc_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_composite_cdc_msc_freertos" name="dev_composite_cdc_msc_freertos" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted." toolchain="armgcc iar mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_composite_cdc_msc/freertos">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_composite_cdc_msc/freertos" type="xml">
            <files mask="dev_composite_cdc_msc_freertos.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_composite_cdc_msc_lite_bm" name="dev_composite_cdc_msc_lite_bm" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_composite_cdc_msc_lite/bm">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_composite_cdc_msc_lite/bm" type="xml">
            <files mask="dev_composite_cdc_msc_lite_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_composite_cdc_msc_sdcard_bm" name="dev_composite_cdc_msc_sdcard_bm" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_composite_cdc_msc_sdcard/bm">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_composite_cdc_msc_sdcard/bm" type="xml">
            <files mask="dev_composite_cdc_msc_sdcard_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_composite_cdc_msc_sdcard_freertos" name="dev_composite_cdc_msc_sdcard_freertos" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted." toolchain="armgcc iar mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_composite_cdc_msc_sdcard/freertos">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_composite_cdc_msc_sdcard/freertos" type="xml">
            <files mask="dev_composite_cdc_msc_sdcard_freertos.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_composite_cdc_msc_sdcard_lite_bm" name="dev_composite_cdc_msc_sdcard_lite_bm" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a U-disk. The COM  port can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The U-disk can be read and write as a standard SD card." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_composite_cdc_msc_sdcard_lite/bm">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_composite_cdc_msc_sdcard_lite/bm" type="xml">
            <files mask="dev_composite_cdc_msc_sdcard_lite_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_composite_cdc_vcom_cdc_vcom_bm" name="dev_composite_cdc_vcom_cdc_vcom_bm" brief="The Composite CDC_VCOM_CDC_VCOM project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as two COM port, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom/bm">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom/bm" type="xml">
            <files mask="dev_composite_cdc_vcom_cdc_vcom_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_composite_cdc_vcom_cdc_vcom_freertos" name="dev_composite_cdc_vcom_cdc_vcom_freertos" brief="The Composite CDC_VCOM_CDC_VCOM project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as two COM port, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom/freertos">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom/freertos" type="xml">
            <files mask="dev_composite_cdc_vcom_cdc_vcom_freertos.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_composite_cdc_vcom_cdc_vcom_lite_bm" name="dev_composite_cdc_vcom_cdc_vcom_lite_bm" brief="The Composite CDC_VCOM_CDC_VCOM project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as two COM port, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom_lite/bm">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom_lite/bm" type="xml">
            <files mask="dev_composite_cdc_vcom_cdc_vcom_lite_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_composite_hid_audio_unified_bm" name="dev_composite_hid_audio_unified_bm" brief="The USB Composite device application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a recording device. Users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories with an HID mouse device." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_composite_hid_audio_unified/bm">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_composite_hid_audio_unified/bm" type="xml">
            <files mask="dev_composite_hid_audio_unified_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_composite_hid_audio_unified_freertos" name="dev_composite_hid_audio_unified_freertos" brief="The USB Composite device application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a recording device. Users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories with an HID mouse device." toolchain="armgcc iar mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_composite_hid_audio_unified/freertos">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_composite_hid_audio_unified/freertos" type="xml">
            <files mask="dev_composite_hid_audio_unified_freertos.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_composite_hid_audio_unified_lite_bm" name="dev_composite_hid_audio_unified_lite_bm" brief="The USB Composite HID and Audio Unified application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a playback and recording device. Users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories and play music with the device." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_composite_hid_audio_unified_lite/bm">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_composite_hid_audio_unified_lite/bm" type="xml">
            <files mask="dev_composite_hid_audio_unified_lite_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_composite_hid_mouse_hid_keyboard_bm" name="dev_composite_hid_mouse_hid_keyboard_bm" brief="The application is a simple demonstration program based on the MCUXpresso SDK. The application is enumerated as HID-compliant mouse and keyboard devices." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/bm">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/bm" type="xml">
            <files mask="dev_composite_hid_mouse_hid_keyboard_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_composite_hid_mouse_hid_keyboard_freertos" name="dev_composite_hid_mouse_hid_keyboard_freertos" brief="The application is a simple demonstration program based on the MCUXpresso SDK. The application is enumerated as HID-compliant mouse and keyboard devices." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/freertos">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/freertos" type="xml">
            <files mask="dev_composite_hid_mouse_hid_keyboard_freertos.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_composite_hid_mouse_hid_keyboard_lite_bm" name="dev_composite_hid_mouse_hid_keyboard_lite_bm" brief="The application is a simple demonstration program based on the MCUXpresso SDK. The application is enumerated as HID-compliant mouse and keyboard devices." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_composite_hid_mouse_hid_keyboard_lite/bm">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_composite_hid_mouse_hid_keyboard_lite/bm" type="xml">
            <files mask="dev_composite_hid_mouse_hid_keyboard_lite_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_dfu_bm" name="dev_dfu_bm" brief="The DFU project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a compoiste dfu device, users can download one firmware to the dfu device with the tool called &quot;dfu-util&quot;. the dfu example write the firmware content to flash and will check the CRC32 which stored in the last 4 byte of the firmware.if the CRC32 check is right, then the dfu example will run the new firmware.Generally speaking, the firmware doesn't have CRC32. sothe following content will introduce how to add CRC32 to the firmware." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_dfu/bm">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_dfu/bm" type="xml">
            <files mask="dev_dfu_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_dfu_freertos" name="dev_dfu_freertos" brief="The DFU project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a compoiste dfu device, users can download one firmware to the dfu device with the tool called &quot;dfu-util&quot;. the dfu example write the firmware content to flash and will check the CRC32 which stored in the last 4 byte of the firmware.if the CRC32 check is right, then the dfu example will run the new firmware.Generally speaking, the firmware doesn't have CRC32. sothe following content will introduce how to add CRC32 to the firmware." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_dfu/freertos">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_dfu/freertos" type="xml">
            <files mask="dev_dfu_freertos.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_dfu_lite_bm" name="dev_dfu_lite_bm" brief="The DFU project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a compoiste dfu device, users can download one firmware to the dfu device with the tool called &quot;dfu-util&quot;. the dfu example write the firmware content to flash and will check the CRC32 which stored in the last 4 byte of the firmware.if the CRC32 check is right, then the dfu example will run the new firmware.Generally speaking, the firmware doesn't have CRC32. sothe following content will introduce how to add CRC32 to the firmware." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_dfu_lite/bm">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_dfu_lite/bm" type="xml">
            <files mask="dev_dfu_lite_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_hid_generic_bm" name="dev_hid_generic_bm" brief="The USB HID generic application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a HID-compliant device. A PC application can be used to exchange data with the device." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_hid_generic/bm">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_hid_generic/bm" type="xml">
            <files mask="dev_hid_generic_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_hid_generic_freertos" name="dev_hid_generic_freertos" brief="The USB HID generic application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a HID-compliant device. A PC application can be used to exchange data with the device." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_hid_generic/freertos">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_hid_generic/freertos" type="xml">
            <files mask="dev_hid_generic_freertos.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_hid_generic_lite_bm" name="dev_hid_generic_lite_bm" brief="The USB HID generic application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a HID-compliant device. A PC application can be used to exchange data with the device." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_hid_generic_lite/bm">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_hid_generic_lite/bm" type="xml">
            <files mask="dev_hid_generic_lite_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_hid_mouse_bm" name="dev_hid_mouse_bm" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_hid_mouse/bm">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_hid_mouse/bm" type="xml">
            <files mask="dev_hid_mouse_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_hid_mouse_freertos" name="dev_hid_mouse_freertos" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_hid_mouse/freertos">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_hid_mouse/freertos" type="xml">
            <files mask="dev_hid_mouse_freertos.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_hid_mouse_lite_bm" name="dev_hid_mouse_lite_bm" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_hid_mouse_lite/bm">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_hid_mouse_lite/bm" type="xml">
            <files mask="dev_hid_mouse_lite_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_msc_ramdisk_bm" name="dev_msc_ramdisk_bm" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk and can be read and written to as a normal U-disk ." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_msc_ramdisk/bm">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_msc_ramdisk/bm" type="xml">
            <files mask="dev_msc_ramdisk_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_msc_ramdisk_freertos" name="dev_msc_ramdisk_freertos" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk and can be read and written to as a normal U-disk ." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_msc_ramdisk/freertos">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_msc_ramdisk/freertos" type="xml">
            <files mask="dev_msc_ramdisk_freertos.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_msc_ramdisk_lite_bm" name="dev_msc_ramdisk_lite_bm" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk and can be read and written to as a normal U-disk ." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_msc_ramdisk_lite/bm">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_msc_ramdisk_lite/bm" type="xml">
            <files mask="dev_msc_ramdisk_lite_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_msc_sdcard_bm" name="dev_msc_sdcard_bm" brief="The USB MSC RAM SD card application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk. Users can read and write the SD card as a standard U-disk." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_msc_sdcard/bm">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_msc_sdcard/bm" type="xml">
            <files mask="dev_msc_sdcard_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_msc_sdcard_freertos" name="dev_msc_sdcard_freertos" brief="The USB MSC RAM SD card application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk. Users can read and write the SD card as a standard U-disk." toolchain="armgcc iar mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_msc_sdcard/freertos">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_msc_sdcard/freertos" type="xml">
            <files mask="dev_msc_sdcard_freertos.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_msc_sdcard_lite_bm" name="dev_msc_sdcard_lite_bm" brief="The USB MSC RAM SD card application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk. Users can read and write the SD card as a standard U-disk." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_msc_sdcard_lite/bm">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_msc_sdcard_lite/bm" type="xml">
            <files mask="dev_msc_sdcard_lite_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_phdc_weighscale_bm" name="dev_phdc_weighscale_bm" brief="The USB PHDC WeighScale application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a weight scale device and the HealthLink software is used to interact with thisdevice to simulate the personal weight scale data, such as body mass and body mass index." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_phdc_weighscale/bm">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_phdc_weighscale/bm" type="xml">
            <files mask="dev_phdc_weighscale_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_phdc_weighscale_freertos" name="dev_phdc_weighscale_freertos" brief="The USB PHDC WeighScale application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a weight scale device and the HealthLink software is used to interact with thisdevice to simulate the personal weight scale data, such as body mass and body mass index." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_phdc_weighscale/freertos">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_phdc_weighscale/freertos" type="xml">
            <files mask="dev_phdc_weighscale_freertos.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_phdc_weighscale_lite_bm" name="dev_phdc_weighscale_lite_bm" brief="The USB PHDC WeighScale application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a weight scale device and the HealthLink software is used to interact with thisdevice to simulate the personal weight scale data, such as body mass and body mass index." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_phdc_weighscale_lite/bm">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_phdc_weighscale_lite/bm" type="xml">
            <files mask="dev_phdc_weighscale_lite_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_printer_virtual_plain_text_bm" name="dev_printer_virtual_plain_text_bm" brief="The USB virtual printer application is a simple application to demonstrate a virtual printer functionality.Because there is no printer language parsing, the received raw data is output directly in the debug console.As a result, only plain text is suitable for testing. For other printer language support, such as postscript, implement the corresponding parser." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_printer_virtual_plain_text/bm">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_printer_virtual_plain_text/bm" type="xml">
            <files mask="dev_printer_virtual_plain_text_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_printer_virtual_plain_text_freertos" name="dev_printer_virtual_plain_text_freertos" brief="The USB virtual printer application is a simple application to demonstrate a virtual printer functionality.Because there is no printer language parsing, the received raw data is output directly in the debug console.As a result, only plain text is suitable for testing. For other printer language support, such as postscript, implement the corresponding parser." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_printer_virtual_plain_text/freertos">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_printer_virtual_plain_text/freertos" type="xml">
            <files mask="dev_printer_virtual_plain_text_freertos.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_printer_virtual_plain_text_lite_bm" name="dev_printer_virtual_plain_text_lite_bm" brief="The USB virtual printer application is a simple application to demonstrate a virtual printer functionality.Because there is no printer language parsing, the received raw data is output directly in the debug console.As a result, only plain text is suitable for testing. For other printer language support, such as postscript, implement the corresponding parser." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_printer_virtual_plain_text_lite/bm">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_printer_virtual_plain_text_lite/bm" type="xml">
            <files mask="dev_printer_virtual_plain_text_lite_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_suspend_resume_hid_mouse_bm" name="dev_suspend_resume_hid_mouse_bm" brief="the application is enumerated as a mouse. When host releases the USB Bus, the device will enter into low power mode. The device can be waked up when resume signal is detected on the bus. Or the device can remote wake-up the host by delivering the resume signal when the remote wake-up is enabled by the host." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_suspend_resume_device_hid_mouse/bm">
          <external path="boards/evkmimxrt1064/usb_examples/usb_suspend_resume_device_hid_mouse/bm" type="xml">
            <files mask="dev_suspend_resume_hid_mouse_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_suspend_resume_hid_mouse_freertos" name="dev_suspend_resume_hid_mouse_freertos" brief="the application is enumerated as a mouse. When host releases the USB Bus, the device will enter into low power mode. The device can be waked up when resume signal is detected on the bus. Or the device can remote wake-up the host by delivering the resume signal when the remote wake-up is enabled by the host." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_suspend_resume_device_hid_mouse/freertos">
          <external path="boards/evkmimxrt1064/usb_examples/usb_suspend_resume_device_hid_mouse/freertos" type="xml">
            <files mask="dev_suspend_resume_hid_mouse_freertos.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_suspend_resume_hid_mouse_lite_bm" name="dev_suspend_resume_hid_mouse_lite_bm" brief="the application is enumerated as a mouse. When host releases the USB Bus, the device will enter into low power mode. The device can be waked up when resume signal is detected on the bus. Or the device can remote wake-up the host by delivering the resume signal when the remote wake-up is enabled by the host." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_suspend_resume_device_hid_mouse_lite/bm">
          <external path="boards/evkmimxrt1064/usb_examples/usb_suspend_resume_device_hid_mouse_lite/bm" type="xml">
            <files mask="dev_suspend_resume_hid_mouse_lite_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_video_virtual_camera_bm" name="dev_video_virtual_camera_bm" brief="The USB video virtual camera application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a camera and users can see the video of the device by using a PC test tool." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_video_virtual_camera/bm">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_video_virtual_camera/bm" type="xml">
            <files mask="dev_video_virtual_camera_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_video_virtual_camera_freertos" name="dev_video_virtual_camera_freertos" brief="The USB video virtual camera application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a camera and users can see the video of the device by using a PC test tool." toolchain="armgcc iar mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_video_virtual_camera/freertos">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_video_virtual_camera/freertos" type="xml">
            <files mask="dev_video_virtual_camera_freertos.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_dev_video_virtual_camera_lite_bm" name="dev_video_virtual_camera_lite_bm" brief="The USB video virtual camera application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a camera and users can see the video of the device by using a PC test tool." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_device_video_virtual_camera_lite/bm">
          <external path="boards/evkmimxrt1064/usb_examples/usb_device_video_virtual_camera_lite/bm" type="xml">
            <files mask="dev_video_virtual_camera_lite_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_edma_memory_to_memory" name="edma_memory_to_memory" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/edma" path="boards/evkmimxrt1064/driver_examples/edma/memory_to_memory">
          <external path="boards/evkmimxrt1064/driver_examples/edma/memory_to_memory" type="xml">
            <files mask="edma_memory_to_memory.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_edma_scatter_gather" name="edma_scatter_gather" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/edma" path="boards/evkmimxrt1064/driver_examples/edma/scatter_gather">
          <external path="boards/evkmimxrt1064/driver_examples/edma/scatter_gather" type="xml">
            <files mask="edma_scatter_gather.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_elcdif_lut" name="elcdif_lut" brief="The ELCDIF LUT project shows how to use the ELCDIF LUT to convert 8-bit input pixelto 24-bit output pixel. There are two LUT memories, this project uses one inputframe buffer, and swithes between the two memories, so from the LCD panel, twodifferent pictures are shown one by one." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/elcdif/lut" path="boards/evkmimxrt1064/driver_examples/elcdif/lut">
          <external path="boards/evkmimxrt1064/driver_examples/elcdif/lut" type="xml">
            <files mask="elcdif_lut.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_elcdif_rgb" name="elcdif_rgb" brief="The ELCDIF RGB project shows how to drive the RGB interface LCD using eLCDIF driver.If this example runs correctly, a rectangle is moving in the screen, and the colorchanges every time it reaches the edges of the screen.The rectangle moving speed might be different with Debug target and Release target,because these two targets spend different time to fill the frame buffer." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/elcdif" path="boards/evkmimxrt1064/driver_examples/elcdif/rgb">
          <external path="boards/evkmimxrt1064/driver_examples/elcdif/rgb" type="xml">
            <files mask="elcdif_rgb.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_emwin_gui_demo" name="emwin_gui_demo" brief="The example demonstrates graphical widgets of the emWin library." toolchain="armgcc iar mcuxpresso mdk" category="emwin_examples" path="boards/evkmimxrt1064/emwin_examples/emwin_gui_demo">
          <external path="boards/evkmimxrt1064/emwin_examples/emwin_gui_demo" type="xml">
            <files mask="emwin_gui_demo.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_enc_basic" name="enc_basic" brief="The enc_basic example shows how to quickly start using ENC driver.In this example, user needs to connect a real encoder to the board. Actually, only PHASE A and PHASE B are enough for the basic application. When running the project, user can turn the encoder so that ENC module can monitor the position change. Then, the internal counter would also count for the position. User can also type keys into terminal, and the current position values recorded by ENC would display. The ENC hardware is created with a special synchronize mechanism. There are actually 4 counters (the 32-bit position counter is combined with the two 16-bit counter registers) for position with responding hold registers. When any of the counter registers is read, the contents of each counter register is written to the corresponding hold register. Taking a snapshot of the counters' values provides a consistent view of a system position and a velocity to be attained." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/enc" path="boards/evkmimxrt1064/driver_examples/enc/basic">
          <external path="boards/evkmimxrt1064/driver_examples/enc/basic" type="xml">
            <files mask="enc_basic.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_enc_index_interrupt" name="enc_index_interrupt" brief="The enc_index_interrupt example shows how to use the interrupt of ENC module with ENC driver.In this example, user needs to connect a real encoder to the board. Actually, only PHASE A and PHASE B are enough for the basic application. However, the additional INDEX/HOME/TRIGGER could be used as the event detector. INDEX: This pulse can optionally reset the position counter and the pulse accumulator of the quadrature decoder module. It also causes a change of state on the revolution counter. The direction of this change, increment or decrement, is calculated from the PHASEA and PHASEB inputs.HOME: This input can be used to trigger the initialization of the position counters. Often this signal is connected to a sensor signalling the motor or machine, sending notification that it has reached a defined home position.TRIGGER: This input can be used to clear the position counters or to take a snapshot of the POS, REV, and POSD registers. Often this signal is connected to a periodic pulse generator or timer to indicate an elapsed time period.This example uses INDEX to response the external event. When running the project, user can turn the encoder so that ENC module can monitor the position change. Also, a variable counter would count the time of INDEX interrupt for rising edge on INDEX signal line." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/enc" path="boards/evkmimxrt1064/driver_examples/enc/index_interrupt">
          <external path="boards/evkmimxrt1064/driver_examples/enc/index_interrupt" type="xml">
            <files mask="enc_index_interrupt.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_enet_txrx_ptp1588_transfer" name="enet_txrx_ptp1588_transfer" brief="The enet_rxtx_ptp1588 example shows the way to use ENET driver to   receive and transmit frame in the 1588 feature required cases.1. This example shows how to initialize the ENET MAC.2. How to use ENET MAC to receive and transmit frame.3. How to add to the multicast group to receive PTP 1588 message.4. How to get the time stamp of the PTP 1588 timer.4. How to use Get the ENET transmit and receive frame time stamp.The example transmits 20 number PTP event frame, shows the timestamp of the transmitted frame.The length, source MAC address and destination MAC address of the received frame will be print. The time stamp of the received timestamp will be print when the PTP message frame is received. Note, The RMII mode is used for default setting to initialize the ENET interface between MAC and the external PHY. you can change it to MII mode as you wish. Please make sure the MII Mode setting in the MAC is synchronize to the settingin TWR-SERIAL board for the external PHY." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/enet" path="boards/evkmimxrt1064/driver_examples/enet/txrx_ptp1588_transfer">
          <external path="boards/evkmimxrt1064/driver_examples/enet/txrx_ptp1588_transfer" type="xml">
            <files mask="enet_txrx_ptp1588_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_enet_txrx_transfer" name="enet_txrx_transfer" brief="The enet_rxtx example shows the simplest way to use ENET driver for simple frame receive and transmit.1. This example shows how to initialize the ENET MAC.2. How to use ENET MAC to receive and transmit frame.The example transmits 20 number broadcast frame, print the frame length, source MAC addressand destination MAC address when receive frame.Note, The RMII mode is used for default setting to initialize the ENET interface between MAC and the external PHY. youcan change it to MII mode as you wish. Please make sure the MII Mode setting in the MAC is synchronize to the settingin TWR-SERIAL board for the external PHY." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/enet" path="boards/evkmimxrt1064/driver_examples/enet/txrx_transfer">
          <external path="boards/evkmimxrt1064/driver_examples/enet/txrx_transfer" type="xml">
            <files mask="enet_txrx_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_ewm" name="ewm" brief="The EWM Example project is to demonstrate usage of the KSDK EWM driver.In the example, EWM counter is continuously refreshed until button is pressed.Once the button is pressed, EWM counter will expire and interrupt will be generated.After the first pressing, another interrupt can be triggered by pressing button again." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples" path="boards/evkmimxrt1064/driver_examples/ewm">
          <external path="boards/evkmimxrt1064/driver_examples/ewm" type="xml">
            <files mask="ewm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_fatfs_usdcard" name="fatfs_usdcard" brief="The SDCARD FATFS project is a demonstration program that uses the SDK software. Tt mounts a file system based on a SD card then does &quot;creat directory/read directory/create file/write file/read file&quot;operation. The file sdhc_config.h has default SDHC configuration which can be adjusted to let carddriver has different performance. The purpose of this example is to show how to use SDCARD driver based FATFS disk in SDK software." toolchain="armgcc iar mcuxpresso mdk" category="fatfs_examples/fatfs_sdcard" path="boards/evkmimxrt1064/fatfs_examples/fatfs_sdcard">
          <external path="boards/evkmimxrt1064/fatfs_examples/fatfs_sdcard" type="xml">
            <files mask="fatfs_usdcard.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_flashloader" name="flashloader" brief="The flashloader is a bootloader that executes from target RAM memory on the platform. The bootloader is a configurable flash programming utility that operates over a serial connection on MCU devices. It enables quick and easy programming of MCU devices through the entire product life cycle, including application development, final product manufacturing, and more.Host-side command line and GUI tools are available to communicate with the bootloader. Users can utilize host tools to upload and/or download application code via the bootloader." toolchain="iar mcuxpresso mdk" category="bootloader_examples" path="boards/evkmimxrt1064/bootloader_examples/flashloader">
          <external path="boards/evkmimxrt1064/bootloader_examples/flashloader" type="xml">
            <files mask="flashloader.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_flexcan_interrupt_transfer" name="flexcan_interrupt_transfer" brief="The flexcan_interrupt example shows how to use FlexCAN driver in none-blocking interrupt way:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send a CAN Message toEndpoint B(board B) when user press space key in terminal. Endpoint B receive the message, printthe message content to terminal and echo back the message. Endpoint A will increase the receivedmessage and waiting for the next transmission of the user initiated." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/flexcan" path="boards/evkmimxrt1064/driver_examples/flexcan/interrupt_transfer">
          <external path="boards/evkmimxrt1064/driver_examples/flexcan/interrupt_transfer" type="xml">
            <files mask="flexcan_interrupt_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_flexcan_loopback" name="flexcan_loopback" brief="The flexcan_loopback_functional example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrouth internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/flexcan" path="boards/evkmimxrt1064/driver_examples/flexcan/loopback">
          <external path="boards/evkmimxrt1064/driver_examples/flexcan/loopback" type="xml">
            <files mask="flexcan_loopback.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_flexcan_loopback_transfer" name="flexcan_loopback_transfer" brief="The flexcan_loopback example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrough internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/flexcan" path="boards/evkmimxrt1064/driver_examples/flexcan/loopback_transfer">
          <external path="boards/evkmimxrt1064/driver_examples/flexcan/loopback_transfer" type="xml">
            <files mask="flexcan_loopback_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_flexio3_i2c_interrupt_lpi2c_transfer" name="flexio3_i2c_interrupt_lpi2c_transfer" brief="The flexio3_lpi2c_interrupt example shows how to use flexio i2c master  driver in interrupt way:In this example, a flexio simulated i2c master connect to a LPI2C slave" toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/flexio" path="boards/evkmimxrt1064/driver_examples/flexio3/i2c/interrupt_lpi2c_transfer">
          <external path="boards/evkmimxrt1064/driver_examples/flexio3/i2c/interrupt_lpi2c_transfer" type="xml">
            <files mask="flexio3_i2c_interrupt_lpi2c_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_flexio3_i2s_interrupt_transfer" name="flexio3_i2s_interrupt_transfer" brief="The flexio3_i2s_interrupt example shows how to use flexio_i2s driver with interrupt:In this example, flexio acts as I2S module to record data from line-in line and playbacks the recorded data at the same time using interrupt." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/flexio" path="boards/evkmimxrt1064/driver_examples/flexio3/i2s/interrupt_transfer">
          <external path="boards/evkmimxrt1064/driver_examples/flexio3/i2s/interrupt_transfer" type="xml">
            <files mask="flexio3_i2s_interrupt_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_flexio3_pwm" name="flexio3_pwm" brief="This demo describes how to use SDK drivers to implement the PWM feature by FLEXIO IP module. It outputs the PWM singal with fixed frequency defined by &quot;DEMO_FLEXIO_FREQUENCY&quot; in source code and dynamic duty from 99 to 1 to one of the FLEXIO pin." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/flexio" path="boards/evkmimxrt1064/driver_examples/flexio3/pwm">
          <external path="boards/evkmimxrt1064/driver_examples/flexio3/pwm" type="xml">
            <files mask="flexio3_pwm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_flexio3_spi_int_lpspi_transfer_master" name="flexio3_spi_int_lpspi_transfer_master" brief="The flexio3_spi_master_interrupt_lpspi_slave example shows how to use flexio spi master driver in interrupt way. In this example, a flexio simulated master connect to a lpspi slave ." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/flexio" path="boards/evkmimxrt1064/driver_examples/flexio3/spi/int_lpspi_transfer/master">
          <external path="boards/evkmimxrt1064/driver_examples/flexio3/spi/int_lpspi_transfer/master" type="xml">
            <files mask="flexio3_spi_int_lpspi_transfer_master.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_flexio3_spi_int_lpspi_transfer_slave" name="flexio3_spi_int_lpspi_transfer_slave" brief="The flexio3_spi_slave_interrupt_lpspi_master example shows how to use flexio spi slave driver in interrupt way. In this example, a flexio simulated slave connect to a lpspi master." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/flexio" path="boards/evkmimxrt1064/driver_examples/flexio3/spi/int_lpspi_transfer/slave">
          <external path="boards/evkmimxrt1064/driver_examples/flexio3/spi/int_lpspi_transfer/slave" type="xml">
            <files mask="flexio3_spi_int_lpspi_transfer_slave.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_flexio3_uart_int_rb_transfer" name="flexio3_uart_int_rb_transfer" brief="The flexio3_uart_interrupt_ring_buffer example shows how to use flexio uart driver in interrupt way withRX ring buffer enabled:In this example, a flexio simulated uart connect to PC through USB-Serial, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/flexio" path="boards/evkmimxrt1064/driver_examples/flexio3/uart/int_rb_transfer">
          <external path="boards/evkmimxrt1064/driver_examples/flexio3/uart/int_rb_transfer" type="xml">
            <files mask="flexio3_uart_int_rb_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_flexio3_uart_interrupt_transfer" name="flexio3_uart_interrupt_transfer" brief="The flexio3_uart_interrupt example shows how to use flexio uart driver in interrupt way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send back all charactersthat PC send to the board. Note: two queued transfer in this example, so please input even number characters." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/flexio" path="boards/evkmimxrt1064/driver_examples/flexio3/uart/interrupt_transfer">
          <external path="boards/evkmimxrt1064/driver_examples/flexio3/uart/interrupt_transfer" type="xml">
            <files mask="flexio3_uart_interrupt_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_flexio3_uart_polling_transfer" name="flexio3_uart_polling_transfer" brief="The flexio3_uart_polling example shows how to use flexio uart driver in polling way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send backall characters that PC send to the board." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/flexio" path="boards/evkmimxrt1064/driver_examples/flexio3/uart/polling_transfer">
          <external path="boards/evkmimxrt1064/driver_examples/flexio3/uart/polling_transfer" type="xml">
            <files mask="flexio3_uart_polling_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_flexio_i2c_interrupt_lpi2c_transfer" name="flexio_i2c_interrupt_lpi2c_transfer" brief="The flexio_lpi2c_interrupt example shows how to use flexio i2c master  driver in interrupt way:In this example, a flexio simulated i2c master connect to a LPI2C slave" toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/flexio" path="boards/evkmimxrt1064/driver_examples/flexio/i2c/interrupt_lpi2c_transfer">
          <external path="boards/evkmimxrt1064/driver_examples/flexio/i2c/interrupt_lpi2c_transfer" type="xml">
            <files mask="flexio_i2c_interrupt_lpi2c_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_flexio_i2s_edma_transfer" name="flexio_i2s_edma_transfer" brief="The flexio_i2s_EDMA example shows how to use flexio_i2s driver with EDMA:In this example, flexio acts as I2S module to record data from line-in line and playbacks the recorded data at the same time using EDMA." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/flexio" path="boards/evkmimxrt1064/driver_examples/flexio/i2s/edma_transfer">
          <external path="boards/evkmimxrt1064/driver_examples/flexio/i2s/edma_transfer" type="xml">
            <files mask="flexio_i2s_edma_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_flexio_i2s_interrupt_transfer" name="flexio_i2s_interrupt_transfer" brief="The flexio_i2s_interrupt example shows how to use flexio_i2s driver with interrupt:In this example, flexio acts as I2S module to record data from line-in line and playbacks the recorded data at the same time using interrupt." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/flexio" path="boards/evkmimxrt1064/driver_examples/flexio/i2s/interrupt_transfer">
          <external path="boards/evkmimxrt1064/driver_examples/flexio/i2s/interrupt_transfer" type="xml">
            <files mask="flexio_i2s_interrupt_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_flexio_pwm" name="flexio_pwm" brief="This demo describes how to use SDK drivers to implement the PWM feature by FLEXIO IP module. It outputs the PWM singal with fixed frequency defined by &quot;DEMO_FLEXIO_FREQUENCY&quot; in source code and dynamic duty from 99 to 1 to one of the FLEXIO pin." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/flexio" path="boards/evkmimxrt1064/driver_examples/flexio/pwm">
          <external path="boards/evkmimxrt1064/driver_examples/flexio/pwm" type="xml">
            <files mask="flexio_pwm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_flexio_spi_edma_lpspi_transfer_master" name="flexio_spi_edma_lpspi_transfer_master" brief="The flexio_spi_master_edma_lpspi_slave example shows how to use flexio spi master driver in edma way:In this example, a flexio simulated master connect to a lpspi slave ." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/flexio" path="boards/evkmimxrt1064/driver_examples/flexio/spi/edma_lpspi_transfer/master">
          <external path="boards/evkmimxrt1064/driver_examples/flexio/spi/edma_lpspi_transfer/master" type="xml">
            <files mask="flexio_spi_edma_lpspi_transfer_master.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_flexio_spi_edma_lpspi_transfer_slave" name="flexio_spi_edma_lpspi_transfer_slave" brief="The flexio_spi_slave_edma_lpspi_master example shows how to use flexio spi slave driver in edma way:In this example, a flexio simulated slave connect to a lpspi master." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/flexio" path="boards/evkmimxrt1064/driver_examples/flexio/spi/edma_lpspi_transfer/slave">
          <external path="boards/evkmimxrt1064/driver_examples/flexio/spi/edma_lpspi_transfer/slave" type="xml">
            <files mask="flexio_spi_edma_lpspi_transfer_slave.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_flexio_spi_int_lpspi_transfer_master" name="flexio_spi_int_lpspi_transfer_master" brief="The flexio_spi_master_interrupt_lpspi_slave example shows how to use flexio spi master driver in interrupt way. In this example, a flexio simulated master connect to a lpspi slave ." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/flexio" path="boards/evkmimxrt1064/driver_examples/flexio/spi/int_lpspi_transfer/master">
          <external path="boards/evkmimxrt1064/driver_examples/flexio/spi/int_lpspi_transfer/master" type="xml">
            <files mask="flexio_spi_int_lpspi_transfer_master.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_flexio_spi_int_lpspi_transfer_slave" name="flexio_spi_int_lpspi_transfer_slave" brief="The flexio_spi_slave_interrupt_lpspi_master example shows how to use flexio spi slave driver in interrupt way. In this example, a flexio simulated slave connect to a lpspi master." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/flexio" path="boards/evkmimxrt1064/driver_examples/flexio/spi/int_lpspi_transfer/slave">
          <external path="boards/evkmimxrt1064/driver_examples/flexio/spi/int_lpspi_transfer/slave" type="xml">
            <files mask="flexio_spi_int_lpspi_transfer_slave.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_flexio_uart_edma_transfer" name="flexio_uart_edma_transfer" brief="The flexio_uart_edma example shows how to use flexio uart driver in edma way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send back all charactersthat PC send to the board." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/flexio" path="boards/evkmimxrt1064/driver_examples/flexio/uart/edma_transfer">
          <external path="boards/evkmimxrt1064/driver_examples/flexio/uart/edma_transfer" type="xml">
            <files mask="flexio_uart_edma_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_flexio_uart_int_rb_transfer" name="flexio_uart_int_rb_transfer" brief="The flexio_uart_interrupt_ring_buffer example shows how to use flexio uart driver in interrupt way withRX ring buffer enabled:In this example, a flexio simulated uart connect to PC through USB-Serial, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/flexio" path="boards/evkmimxrt1064/driver_examples/flexio/uart/int_rb_transfer">
          <external path="boards/evkmimxrt1064/driver_examples/flexio/uart/int_rb_transfer" type="xml">
            <files mask="flexio_uart_int_rb_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_flexio_uart_interrupt_transfer" name="flexio_uart_interrupt_transfer" brief="The flexio_uart_interrupt example shows how to use flexio uart driver in interrupt way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send back all charactersthat PC send to the board. Note: two queued transfer in this example, so please input even number characters." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/flexio" path="boards/evkmimxrt1064/driver_examples/flexio/uart/interrupt_transfer">
          <external path="boards/evkmimxrt1064/driver_examples/flexio/uart/interrupt_transfer" type="xml">
            <files mask="flexio_uart_interrupt_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_flexio_uart_polling_transfer" name="flexio_uart_polling_transfer" brief="The flexio_uart_polling example shows how to use flexio uart driver in polling way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send backall characters that PC send to the board." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/flexio" path="boards/evkmimxrt1064/driver_examples/flexio/uart/polling_transfer">
          <external path="boards/evkmimxrt1064/driver_examples/flexio/uart/polling_transfer" type="xml">
            <files mask="flexio_uart_polling_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_flexram_ram_access" name="flexram_ram_access" brief="The FLEXRAM project is a simple demonstration program of the SDK FLEXRAM driver. It allocate the on-chip ram and then access the OCRAM to demo magic address and access error interrupt." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/flexram" path="boards/evkmimxrt1064/driver_examples/flexram/ram_access">
          <external path="boards/evkmimxrt1064/driver_examples/flexram/ram_access" type="xml">
            <files mask="flexram_ram_access.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_flexram_ram_allocate" name="flexram_ram_allocate" brief="The FLEXRAM project is a simple demonstration program of the SDK FLEXRAM driver. It allocate the on-chip ram and then access the OCRAM to demo magic address and access error interrupt." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/flexram" path="boards/evkmimxrt1064/driver_examples/flexram/ram_allocate">
          <external path="boards/evkmimxrt1064/driver_examples/flexram/ram_allocate" type="xml">
            <files mask="flexram_ram_allocate.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_flexspi_hyper_flash_polling_transfer" name="flexspi_hyper_flash_polling_transfer" brief="The flexspi_hyper_flash_polling_transfer example shows how to use flexspi driver with polling:In this example, flexspi will send data and operate the external Hyper flash connected with FLEXSPI. Some simple flash command willbe executed, such as Read ID, Erase Sector and Program Buffer.Example will first configures hyper flash to enter ASO mode, read ID-CFI parameters, then exit ASO mode.Second, the example erase a sector in flash, check if the erase is successful and program the same sector, then read backthe sector data. At last check if the data read back is correct." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/flexspi" path="boards/evkmimxrt1064/driver_examples/flexspi/hyper_flash/polling_transfer">
          <external path="boards/evkmimxrt1064/driver_examples/flexspi/hyper_flash/polling_transfer" type="xml">
            <files mask="flexspi_hyper_flash_polling_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_flexspi_nor_polling_transfer" name="flexspi_nor_polling_transfer" brief="The flexspi_nor_polling_transfer example shows how to use flexspi driver with polling:In this example, flexspi will send data and operate the external Nor flash connected with FLEXSPI. Some simple flash command willbe executed, such as Write Enable, Erase sector, Program page.Example will first erase the sector and program a page into the flash, at last check if the data in flash is correct." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/flexspi" path="boards/evkmimxrt1064/driver_examples/flexspi/nor/polling_transfer">
          <external path="boards/evkmimxrt1064/driver_examples/flexspi/nor/polling_transfer" type="xml">
            <files mask="flexspi_nor_polling_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_freertos_event" name="freertos_event" brief="This document explains the freertos_event example. It shows how task waits for an event (defined setof bits in event group). This event can be set by any other process or interrupt in the system.The example application creates three tasks. Two write tasks write_task_1 and write_task_2continuously setting event bit 0 and bit 1.Read_task is waiting for any event bit and printing actual state on console. Event bits areautomatically cleared after read task is entered.Three possible states can occurre:Both bits are set.zBit B0 is set.Bit B1 is set." toolchain="armgcc iar mcuxpresso mdk" category="rtos_examples" path="boards/evkmimxrt1064/rtos_examples/freertos_event">
          <external path="boards/evkmimxrt1064/rtos_examples/freertos_event" type="xml">
            <files mask="freertos_event.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_freertos_generic" name="freertos_generic" brief="This document explains the freertos_generic example. It is based on code FreeRTOS documentation fromhttp://www.freertos.org/Hardware-independent-RTOS-example.html. It shows combination of severaltasks with queue, software timer, tick hook and semaphore.The example application creates three tasks. The prvQueueSendTask periodically sending data toxQueue queue. The prvQueueReceiveTask is waiting for incoming message and counting number ofreceived messages. Task prvEventSemaphoreTask is waiting for xEventSemaphore semaphore given fromvApplicationTickHook. Tick hook give semaphore every 500 ms.Other hook types used for RTOS and resource statistics are also demonstrated in example:* vApplicationIdleHook* vApplicationStackOverflowHook* vApplicationMallocFailedHook" toolchain="armgcc iar mcuxpresso mdk" category="rtos_examples" path="boards/evkmimxrt1064/rtos_examples/freertos_generic">
          <external path="boards/evkmimxrt1064/rtos_examples/freertos_generic" type="xml">
            <files mask="freertos_generic.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_freertos_hello" name="freertos_hello" brief="The Hello World project is a simple demonstration program that uses the SDK UART drivere incombination with FreeRTOS. The purpose of this demo is to show how to use the debug console and toprovide a simple project for debugging and further development.The example application creates one task called hello_task. This task print &quot;Hello world.&quot; messagevia debug console utility and suspend itself." toolchain="armgcc iar mcuxpresso mdk" category="rtos_examples" path="boards/evkmimxrt1064/rtos_examples/freertos_hello">
          <external path="boards/evkmimxrt1064/rtos_examples/freertos_hello" type="xml">
            <files mask="freertos_hello.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_freertos_lpi2c" name="freertos_lpi2c" brief="The LPI2C Example project is a demonstration program that uses the KSDK software to manipulate the Low Power Inter-Integrated Circuit.The example uses two instances of LPI2C, one in configured as master and the other one as slave.The LPI2C master sends data to LPI2C slave. The slave will check the data it receives and shows the log." toolchain="armgcc iar mcuxpresso mdk" category="rtos_examples" path="boards/evkmimxrt1064/rtos_examples/freertos_lpi2c">
          <external path="boards/evkmimxrt1064/rtos_examples/freertos_lpi2c" type="xml">
            <files mask="freertos_lpi2c.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_freertos_lpuart" name="freertos_lpuart" brief="The LPUART example for FreeRTOS demonstrates the possibility to use the LPUART driver in the RTOS.The example uses single instance of LPUART IP and writes string into, then reads back chars.After every 4B received, these are sent back on LPUART." toolchain="armgcc iar mcuxpresso mdk" category="rtos_examples" path="boards/evkmimxrt1064/rtos_examples/freertos_lpuart">
          <external path="boards/evkmimxrt1064/rtos_examples/freertos_lpuart" type="xml">
            <files mask="freertos_lpuart.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_freertos_mutex" name="freertos_mutex" brief="This document explains the freertos_mutex example. It shows how mutex manage access to commonresource (terminal output).The example application creates two identical instances of write_task. Each task will lock the mutexbefore printing and unlock it after printing to ensure that the outputs from tasks are not mixedtogether.The test_task accept output message during creation as function parameter. Output message have twoparts. If xMutex is unlocked, the write_task_1 acquire xMutex and print first part of message. Thenrescheduling is performed. In this moment scheduler check if some other task could run, but secondtask write_task+_2 is blocked because xMutex is already locked by first write task. The firstwrite_task_1 continue from last point by printing of second message part. Finaly the xMutex isunlocked and second instance of write_task_2 is executed." toolchain="armgcc iar mcuxpresso mdk" category="rtos_examples" path="boards/evkmimxrt1064/rtos_examples/freertos_mutex">
          <external path="boards/evkmimxrt1064/rtos_examples/freertos_mutex" type="xml">
            <files mask="freertos_mutex.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_freertos_queue" name="freertos_queue" brief="This document explains the freertos_queue example. This example introduce simple logging mechanismbased on message passing.Example could be devided in two parts. First part is logger. It contain three tasks:log_add().....Add new message into the log. Call xQueueSend function to pass new message into              message queue.log_init()....Initialize logger (create logging task and message queue log_queue).log_task()....Task responsible for printing of log output.Second part is application of this simple logging mechanism. Each of two tasks write_task_1 andwrite_task_2 print 5 messages into log." toolchain="armgcc iar mcuxpresso mdk" category="rtos_examples" path="boards/evkmimxrt1064/rtos_examples/freertos_queue">
          <external path="boards/evkmimxrt1064/rtos_examples/freertos_queue" type="xml">
            <files mask="freertos_queue.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_freertos_sdcard" name="freertos_sdcard" brief="The SDCARD FreeRTOS project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver with FreeRTOS in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="armgcc iar mcuxpresso mdk" category="rtos_examples/freertos_sdcard" path="boards/evkmimxrt1064/rtos_examples/freertos_sdcard">
          <external path="boards/evkmimxrt1064/rtos_examples/freertos_sdcard" type="xml">
            <files mask="freertos_sdcard.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_freertos_sem" name="freertos_sem" brief="This document explains the freertos_sem example, what to expect when running it and a briefintroduction to the API. The freertos_sem example code shows how semaphores works. Two differenttasks are synchronized in bilateral rendezvous model.The example uses four tasks. One producer_task and three consumer_tasks. The producer_task starts bycreating of two semaphores (xSemaphore_producer and xSemaphore_consumer). These semaphores controlaccess to virtual item. The synchronization is based on bilateral rendezvous pattern. Both ofconsumer and producer must be prepared to enable transaction." toolchain="armgcc iar mcuxpresso mdk" category="rtos_examples" path="boards/evkmimxrt1064/rtos_examples/freertos_sem">
          <external path="boards/evkmimxrt1064/rtos_examples/freertos_sem" type="xml">
            <files mask="freertos_sem.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_freertos_sem_static" name="freertos_sem_static" brief="This document explains the freertos_sem example, what to expect when running it and a briefintroduction to the API. The freertos_sem example code shows how semaphores works. Two differenttasks are synchronized in bilateral rendezvous model.The example uses four tasks. One producer_task and three consumer_tasks. The producer_task starts bycreating of two semaphores (xSemaphore_producer and xSemaphore_consumer). These semaphores controlaccess to virtual item. The synchronization is based on bilateral rendezvous pattern. Both ofconsumer and producer must be prepared to enable transaction." toolchain="armgcc iar mcuxpresso mdk" category="rtos_examples" path="boards/evkmimxrt1064/rtos_examples/freertos_sem_static">
          <external path="boards/evkmimxrt1064/rtos_examples/freertos_sem_static" type="xml">
            <files mask="freertos_sem_static.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_freertos_swtimer" name="freertos_swtimer" brief="This document explains the freertos_swtimer example. It shows usage of software timer and itscallback.The example application creates one software timer SwTimer. The timer's callback SwTimerCallback isperiodically executed and text &quot;Tick.&quot; is printed to terminal." toolchain="armgcc iar mcuxpresso mdk" category="rtos_examples" path="boards/evkmimxrt1064/rtos_examples/freertos_swtimer">
          <external path="boards/evkmimxrt1064/rtos_examples/freertos_swtimer" type="xml">
            <files mask="freertos_swtimer.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_freertos_tickless" name="freertos_tickless" brief="This document explains the freertos_tickless example. It shows the CPU enter at sleep mode and then it is waked up by expired time delay that using GPT module." toolchain="armgcc iar mcuxpresso mdk" category="rtos_examples" path="boards/evkmimxrt1064/rtos_examples/freertos_tickless">
          <external path="boards/evkmimxrt1064/rtos_examples/freertos_tickless" type="xml">
            <files mask="freertos_tickless.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_gpt_timer" name="gpt_timer" brief="The gpt_timer project is a simple demonstration program of the SDK GPT driver. It sets up the GPThardware block to trigger a periodic interrupt after every 1 second. When the GPT interrupt is triggereda message a printed on the UART terminal." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/gpt" path="boards/evkmimxrt1064/driver_examples/gpt/timer">
          <external path="boards/evkmimxrt1064/driver_examples/gpt/timer" type="xml">
            <files mask="gpt_timer.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_hello_world" name="hello_world" brief="The Hello World demo application provides a sanity check for the new SDK build environments and board bring up. The HelloWorld demo prints the &quot;Hello World&quot; string to the terminal using the SDK UART drivers. The purpose of this demo is toshow how to use the UART, and to provide a simple project for debugging and further development." toolchain="armgcc iar mcuxpresso mdk" category="demo_apps" path="boards/evkmimxrt1064/demo_apps/hello_world">
          <external path="boards/evkmimxrt1064/demo_apps/hello_world" type="xml">
            <files mask="hello_world.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_hello_world_virtual_com" name="hello_world_virtual_com" brief="The Hello World demo application provides a sanity check for the new SDK build environments and board bring up. The HelloWorld demo prints the &quot;Hello World&quot; string to the terminal using the SDK UART drivers. The purpose of this demo is toshow how to use the UART, and to provide a simple project for debugging and further development." toolchain="armgcc iar mcuxpresso mdk" category="demo_apps" path="boards/evkmimxrt1064/demo_apps/hello_world_virtual_com">
          <external path="boards/evkmimxrt1064/demo_apps/hello_world_virtual_com" type="xml">
            <files mask="hello_world_virtual_com.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_host_audio_speaker_bm" name="host_audio_speaker_bm" brief="The Host Audio example supports the audio speaker device. @n The application prints the audio speaker information when the USB speaker device is attached." toolchain="armgcc iar mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_host_audio_speaker/bm">
          <external path="boards/evkmimxrt1064/usb_examples/usb_host_audio_speaker/bm" type="xml">
            <files mask="host_audio_speaker_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_host_audio_speaker_freertos" name="host_audio_speaker_freertos" brief="The Host Audio example supports the audio speaker device. @n The application prints the audio speaker information when the USB speaker device is attached." toolchain="armgcc iar mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_host_audio_speaker/freertos">
          <external path="boards/evkmimxrt1064/usb_examples/usb_host_audio_speaker/freertos" type="xml">
            <files mask="host_audio_speaker_freertos.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_host_cdc_bm" name="host_cdc_bm" brief="The host CDC project is a simple demonstration program based on the MCUXpresso SDK. It enumerates a COM port and echoes back the data from the UART." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_host_cdc/bm">
          <external path="boards/evkmimxrt1064/usb_examples/usb_host_cdc/bm" type="xml">
            <files mask="host_cdc_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_host_cdc_freertos" name="host_cdc_freertos" brief="The host CDC project is a simple demonstration program based on the MCUXpresso SDK. It enumerates a COM port and echoes back the data from the UART ." toolchain="armgcc iar mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_host_cdc/freertos">
          <external path="boards/evkmimxrt1064/usb_examples/usb_host_cdc/freertos" type="xml">
            <files mask="host_cdc_freertos.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_host_hid_generic_bm" name="host_hid_generic_bm" brief="This application implements a simple HID interrupt in-and-out endpoint bi-directional communication.The application sends one test string to the device. The device receives and sends back the string. The application receives the string and prints it." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_host_hid_generic/bm">
          <external path="boards/evkmimxrt1064/usb_examples/usb_host_hid_generic/bm" type="xml">
            <files mask="host_hid_generic_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_host_hid_generic_freertos" name="host_hid_generic_freertos" brief="This application implements a simple HID interrupt in-and-out endpoint bi-directional communication.The application sends one test string to the device. The device receives and sends back the string. The application receives the string and prints it." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_host_hid_generic/freertos">
          <external path="boards/evkmimxrt1064/usb_examples/usb_host_hid_generic/freertos" type="xml">
            <files mask="host_hid_generic_freertos.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_host_hid_mouse_bm" name="host_hid_mouse_bm" brief="The application supports the mouse device. It prints the mouse operation when the mouse device is attached." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_host_hid_mouse/bm">
          <external path="boards/evkmimxrt1064/usb_examples/usb_host_hid_mouse/bm" type="xml">
            <files mask="host_hid_mouse_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_host_hid_mouse_freertos" name="host_hid_mouse_freertos" brief="The application supports the mouse device. It prints the mouse operation when the mouse device is attached." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_host_hid_mouse/freertos">
          <external path="boards/evkmimxrt1064/usb_examples/usb_host_hid_mouse/freertos" type="xml">
            <files mask="host_hid_mouse_freertos.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_host_hid_mouse_keyboard_bm" name="host_hid_mouse_keyboard_bm" brief="This example supports the mouse device and the keyboard device." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_host_hid_mouse_keyboard/bm">
          <external path="boards/evkmimxrt1064/usb_examples/usb_host_hid_mouse_keyboard/bm" type="xml">
            <files mask="host_hid_mouse_keyboard_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_host_hid_mouse_keyboard_freertos" name="host_hid_mouse_keyboard_freertos" brief="This example supports the mouse device and the keyboard device." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_host_hid_mouse_keyboard/freertos">
          <external path="boards/evkmimxrt1064/usb_examples/usb_host_hid_mouse_keyboard/freertos" type="xml">
            <files mask="host_hid_mouse_keyboard_freertos.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_host_msd_command_bm" name="host_msd_command_bm" brief="This Host MSD example supports the UFI and SCSI U-disk device. The application prints the attached device information when the U-disk device is attached.The application executes UFI commands to test the attached device." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_host_msd_command/bm">
          <external path="boards/evkmimxrt1064/usb_examples/usb_host_msd_command/bm" type="xml">
            <files mask="host_msd_command_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_host_msd_command_freertos" name="host_msd_command_freertos" brief="This Host MSD example supports the UFI and SCSI U-disk device.  The application prints the attached device information when the U-disk device is attached.The application executes UFI commands to test the attached device." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_host_msd_command/freertos">
          <external path="boards/evkmimxrt1064/usb_examples/usb_host_msd_command/freertos" type="xml">
            <files mask="host_msd_command_freertos.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_host_msd_fatfs_bm" name="host_msd_fatfs_bm" brief="This Host FatFs example supports UFI and SCSI U-disk device. The application prints the attached device information when U-disk device is attached.The application executes some FatFs APIs to test the attached device." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_host_msd_fatfs/bm">
          <external path="boards/evkmimxrt1064/usb_examples/usb_host_msd_fatfs/bm" type="xml">
            <files mask="host_msd_fatfs_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_host_msd_fatfs_freertos" name="host_msd_fatfs_freertos" brief="This Host FatFs example supports UFI and SCSI U-disk device. The application prints the attached device information when U-disk device is attached.The application executes some FatFs APIs to test the attached device." toolchain="armgcc iar mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_host_msd_fatfs/freertos">
          <external path="boards/evkmimxrt1064/usb_examples/usb_host_msd_fatfs/freertos" type="xml">
            <files mask="host_msd_fatfs_freertos.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_host_phdc_manager_bm" name="host_phdc_manager_bm" brief="The Host PHDC Manager Example is a simple demonstration program based on the MCUXpresso SDK.The application supports the USB weight scale device. It prints out the body mass and body mass index information when the USB weight scale device is attached." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_host_phdc_manager/bm">
          <external path="boards/evkmimxrt1064/usb_examples/usb_host_phdc_manager/bm" type="xml">
            <files mask="host_phdc_manager_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_host_phdc_manager_freertos" name="host_phdc_manager_freertos" brief="The Host PHDC Manager Example is a simple demonstration program based on the MCUXpresso SDK.The application supports the USB weight scale device. It prints out the body mass and body mass index information when the USB weight scale device is attached." toolchain="armgcc iar mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_host_phdc_manager/freertos">
          <external path="boards/evkmimxrt1064/usb_examples/usb_host_phdc_manager/freertos" type="xml">
            <files mask="host_phdc_manager_freertos.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_host_printer_plain_text_bm" name="host_printer_plain_text_bm" brief="The host printer example demonstrates how to get the status of the printer deviceand how to print a certain test string." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_host_printer_plain_text/bm">
          <external path="boards/evkmimxrt1064/usb_examples/usb_host_printer_plain_text/bm" type="xml">
            <files mask="host_printer_plain_text_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_host_printer_plain_text_freertos" name="host_printer_plain_text_freertos" brief="The host printer example demonstrates how to get the status of the printer deviceand how to print a certain test string.." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_host_printer_plain_text/freertos">
          <external path="boards/evkmimxrt1064/usb_examples/usb_host_printer_plain_text/freertos" type="xml">
            <files mask="host_printer_plain_text_freertos.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_host_suspend_resume_hid_mouse_bm" name="host_suspend_resume_hid_mouse_bm" brief="This is one example support suspend/resume." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_suspend_resume_host_hid_mouse/bm">
          <external path="boards/evkmimxrt1064/usb_examples/usb_suspend_resume_host_hid_mouse/bm" type="xml">
            <files mask="host_suspend_resume_hid_mouse_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_host_suspend_resume_hid_mouse_freertos" name="host_suspend_resume_hid_mouse_freertos" brief="This is one example support suspend/resume." toolchain="armgcc iar mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_suspend_resume_host_hid_mouse/freertos">
          <external path="boards/evkmimxrt1064/usb_examples/usb_suspend_resume_host_hid_mouse/freertos" type="xml">
            <files mask="host_suspend_resume_hid_mouse_freertos.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_igpio_input_interrupt" name="igpio_input_interrupt" brief="The GPIO Example project is a demonstration program that uses the KSDK software to manipulate the general-purposeoutputs.The example is supported by the set, clear registers for each GPIO pin output register. " toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/gpio" path="boards/evkmimxrt1064/driver_examples/gpio/input_interrupt">
          <external path="boards/evkmimxrt1064/driver_examples/gpio/input_interrupt" type="xml">
            <files mask="igpio_input_interrupt.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_igpio_led_output" name="igpio_led_output" brief="The GPIO Example project is a demonstration program that uses the KSDK software to manipulate the general-purposeoutputs.The example is supported by the set, clear, and toggle write-only registers for each port output data register. The example take turns to shine the LED." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/gpio" path="boards/evkmimxrt1064/driver_examples/gpio/led_output">
          <external path="boards/evkmimxrt1064/driver_examples/gpio/led_output" type="xml">
            <files mask="igpio_led_output.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_iled_blinky" name="iled_blinky" brief="The LED Blinky demo application provides a sanity check for the new SDK build environments and board bring up. The LED Blinky demo uses the systick interrupt to realize the function of timing delay. The example takes turns to shine the LED. The purpose of this demo is to provide a simple project for debugging and further development." toolchain="armgcc iar mcuxpresso mdk" category="demo_apps" path="boards/evkmimxrt1064/demo_apps/led_blinky">
          <external path="boards/evkmimxrt1064/demo_apps/led_blinky" type="xml">
            <files mask="iled_blinky.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_keyboard2mouse_bm" name="keyboard2mouse_bm" brief="This example implements the host and the device, where the one controller works as a host and the other controller works as a device." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_keyboard2mouse/bm">
          <external path="boards/evkmimxrt1064/usb_examples/usb_keyboard2mouse/bm" type="xml">
            <files mask="keyboard2mouse_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_keyboard2mouse_freertos" name="keyboard2mouse_freertos" brief="This example implements the host and the device, where the one controller works as a host and the other controller works as a device." toolchain="armgcc iar mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_keyboard2mouse/freertos">
          <external path="boards/evkmimxrt1064/usb_examples/usb_keyboard2mouse/freertos" type="xml">
            <files mask="keyboard2mouse_freertos.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_kpp" name="kpp" brief="The KPP Example project is a demonstration program that uses the KSDK software to manipulate the Keypad MATRIX.The example is use the continuous column and rows as 4*4 or 8*8 matrix to show the example." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples" path="boards/evkmimxrt1064/driver_examples/kpp">
          <external path="boards/evkmimxrt1064/driver_examples/kpp" type="xml">
            <files mask="kpp.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_littlefs_shell" name="littlefs_shell" brief="Demonstrates littlefs functionality by commands executed from shell." toolchain="armgcc iar mcuxpresso mdk" category="littlefs_examples" path="boards/evkmimxrt1064/littlefs_examples/littlefs_shell">
          <external path="boards/evkmimxrt1064/littlefs_examples/littlefs_shell" type="xml">
            <files mask="littlefs_shell.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_littlevgl_demo" name="littlevgl_demo" brief="A demo application with Keyboard, Text area, List and Chart placed on Tab view" toolchain="armgcc iar mcuxpresso mdk" category="littlevgl_examples" path="boards/evkmimxrt1064/littlevgl_examples/littlevgl_demo">
          <external path="boards/evkmimxrt1064/littlevgl_examples/littlevgl_demo" type="xml">
            <files mask="littlevgl_demo.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_littlevgl_terminal" name="littlevgl_terminal" brief="A terminal to display received characters." toolchain="armgcc iar mcuxpresso mdk" category="littlevgl_examples" path="boards/evkmimxrt1064/littlevgl_examples/littlevgl_terminal">
          <external path="boards/evkmimxrt1064/littlevgl_examples/littlevgl_terminal" type="xml">
            <files mask="littlevgl_terminal.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_lpi2c_interrupt" name="lpi2c_interrupt" brief="The lpi2c_functional_interrupt example shows how to use lpi2c functional driver to build a interrupt based application:In this example , one lpi2c instance used as lpi2c master and another lpi2c instance used as lpi2c slave .1. lpi2c master send data using interrupt to lpi2c slave in interrupt .2. lpi2c master read data using interrupt from lpi2c slave in interrupt .3. The example assumes that the connection is OK between master and slave, so there's NO error handling code." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/lpi2c" path="boards/evkmimxrt1064/driver_examples/lpi2c/interrupt">
          <external path="boards/evkmimxrt1064/driver_examples/lpi2c/interrupt" type="xml">
            <files mask="lpi2c_interrupt.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_lpi2c_interrupt_b2b_transfer_master" name="lpi2c_interrupt_b2b_transfer_master" brief="The lpi2c_interrupt_b2b_transfer_master example shows how to use lpi2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/lpi2c" path="boards/evkmimxrt1064/driver_examples/lpi2c/interrupt_b2b_transfer/master">
          <external path="boards/evkmimxrt1064/driver_examples/lpi2c/interrupt_b2b_transfer/master" type="xml">
            <files mask="lpi2c_interrupt_b2b_transfer_master.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_lpi2c_interrupt_b2b_transfer_slave" name="lpi2c_interrupt_b2b_transfer_slave" brief="The lpi2c_interrupt_b2b_transfer_slave example shows how to use lpi2c driver as slave to do board to board transfer with interrupt:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/lpi2c" path="boards/evkmimxrt1064/driver_examples/lpi2c/interrupt_b2b_transfer/slave">
          <external path="boards/evkmimxrt1064/driver_examples/lpi2c/interrupt_b2b_transfer/slave" type="xml">
            <files mask="lpi2c_interrupt_b2b_transfer_slave.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_lpi2c_polling_b2b_transfer_master" name="lpi2c_polling_b2b_transfer_master" brief="The lpi2c_polling_b2b_transfer_master example shows how to use lpi2c driver as master to do board to board transfer using polling method:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/lpi2c" path="boards/evkmimxrt1064/driver_examples/lpi2c/polling_b2b_transfer/master">
          <external path="boards/evkmimxrt1064/driver_examples/lpi2c/polling_b2b_transfer/master" type="xml">
            <files mask="lpi2c_polling_b2b_transfer_master.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_lpi2c_polling_b2b_transfer_slave" name="lpi2c_polling_b2b_transfer_slave" brief="The lpi2c_polling_b2b_transfer_slave example shows how to use lpi2c driver as slave to do board to board transfer with a polling master:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/lpi2c" path="boards/evkmimxrt1064/driver_examples/lpi2c/polling_b2b_transfer/slave">
          <external path="boards/evkmimxrt1064/driver_examples/lpi2c/polling_b2b_transfer/slave" type="xml">
            <files mask="lpi2c_polling_b2b_transfer_slave.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_lpspi_interrupt_b2b_master" name="lpspi_interrupt_b2b_master" brief="The lpspi_interrupt_b2b example shows how to use LPSPI driver in interrupt way:In this example , we need two boards , one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_interrupt_b2b_master.c' includes the LPSPI master code.This example does not use the transactional API in LPSPI driver. It's a demonstration that how to use the interrupt in KSDK driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/lpspi" path="boards/evkmimxrt1064/driver_examples/lpspi/interrupt_b2b/master">
          <external path="boards/evkmimxrt1064/driver_examples/lpspi/interrupt_b2b/master" type="xml">
            <files mask="lpspi_interrupt_b2b_master.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_lpspi_interrupt_b2b_slave" name="lpspi_interrupt_b2b_slave" brief="The lpspi_interrupt_b2b example shows how to use LPSPI driver in interrupt way:In this example , we need two boards , one board used as LPSPI master and another board used as LPSPI slave.The file 'dspi_interrupt_b2b_slave.c' includes the LPSPI slave code.This example does not use the transactional API in LPSPI driver. It's a demonstration that how to use the interrupt in KSDK driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/lpspi" path="boards/evkmimxrt1064/driver_examples/lpspi/interrupt_b2b/slave">
          <external path="boards/evkmimxrt1064/driver_examples/lpspi/interrupt_b2b/slave" type="xml">
            <files mask="lpspi_interrupt_b2b_slave.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_lpuart_edma_transfer" name="lpuart_edma_transfer" brief="The lpuart_edma Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/lpuart" path="boards/evkmimxrt1064/driver_examples/lpuart/edma_transfer">
          <external path="boards/evkmimxrt1064/driver_examples/lpuart/edma_transfer" type="xml">
            <files mask="lpuart_edma_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_lpuart_interrupt" name="lpuart_interrupt" brief="The lpuart_functioncal_interrupt example shows how to use lpuart driver functionalAPI to receive data with interrupt method:In this example, one lpuart instance connect to PC, the board willsend back all characters that PC send to the board." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/lpuart" path="boards/evkmimxrt1064/driver_examples/lpuart/interrupt">
          <external path="boards/evkmimxrt1064/driver_examples/lpuart/interrupt" type="xml">
            <files mask="lpuart_interrupt.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_lpuart_interrupt_rb_transfer" name="lpuart_interrupt_rb_transfer" brief="The lpuart_interrupt_ring_buffer Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/lpuart" path="boards/evkmimxrt1064/driver_examples/lpuart/interrupt_rb_transfer">
          <external path="boards/evkmimxrt1064/driver_examples/lpuart/interrupt_rb_transfer" type="xml">
            <files mask="lpuart_interrupt_rb_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_lpuart_interrupt_transfer" name="lpuart_interrupt_transfer" brief="The lpuart_interrupt Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/lpuart" path="boards/evkmimxrt1064/driver_examples/lpuart/interrupt_transfer">
          <external path="boards/evkmimxrt1064/driver_examples/lpuart/interrupt_transfer" type="xml">
            <files mask="lpuart_interrupt_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_lpuart_interrupt_transfer_seven_bits" name="lpuart_interrupt_transfer_seven_bits" brief="The lpuart_interrupt_transfer_seven_bits Example project is to demonstrate usage of the KSDK lpuart driver with seven data bits feature enabled.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters.NOTE: Please set com port format to &quot;7 data bits without parity bit&quot; in PC's com port tool" toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/lpuart" path="boards/evkmimxrt1064/driver_examples/lpuart/interrupt_transfer_seven_bits">
          <external path="boards/evkmimxrt1064/driver_examples/lpuart/interrupt_transfer_seven_bits" type="xml">
            <files mask="lpuart_interrupt_transfer_seven_bits.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_lpuart_polling" name="lpuart_polling" brief="The lpuart_polling Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console instantly." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/lpuart" path="boards/evkmimxrt1064/driver_examples/lpuart/polling">
          <external path="boards/evkmimxrt1064/driver_examples/lpuart/polling" type="xml">
            <files mask="lpuart_polling.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_lpuart_polling_seven_bits" name="lpuart_polling_seven_bits" brief="The lpuart_polling_seven_bits Example project is to demonstrate usage of the KSDK lpuart driver with seven data bits feature enabled.In the example, you can send characters to the console back and they will be printed out onto console instantly.NOTE: Please set com port format to &quot;7 data bits without parity bit&quot; in PC's com port tool" toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/lpuart" path="boards/evkmimxrt1064/driver_examples/lpuart/polling_seven_bits">
          <external path="boards/evkmimxrt1064/driver_examples/lpuart/polling_seven_bits" type="xml">
            <files mask="lpuart_polling_seven_bits.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_lwip_dhcp_bm" name="lwip_dhcp_bm" brief="The lwip_dhcp demo application demonstrates a DHCP demo on the lwIP TCP/IP stack.The application acts as a DHCP client and prints the status as it is progressing.Once the interface is being bound to an IP address obtained from DHCP server, address information is printed." toolchain="armgcc iar mcuxpresso mdk" category="lwip_examples" path="boards/evkmimxrt1064/lwip_examples/lwip_dhcp/bm">
          <external path="boards/evkmimxrt1064/lwip_examples/lwip_dhcp/bm" type="xml">
            <files mask="lwip_dhcp_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_lwip_dhcp_freertos" name="lwip_dhcp_freertos" brief="The lwip_dhcp demo application demonstrates a DHCP demo on the lwIP TCP/IP stack.The application acts as a DHCP client and prints the status as it is progressing.Once the interface is being bound to an IP address obtained from DHCP server, address information is printed." toolchain="armgcc iar mcuxpresso mdk" category="lwip_examples" path="boards/evkmimxrt1064/lwip_examples/lwip_dhcp/freertos">
          <external path="boards/evkmimxrt1064/lwip_examples/lwip_dhcp/freertos" type="xml">
            <files mask="lwip_dhcp_freertos.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_lwip_httpscli_mbedTLS_freertos" name="lwip_httpscli_mbedTLS_freertos" brief="The lwip_https_client_mbedTLS demo application demonstrates an HTTPS client set up on lwIP TCP/IP and the MbedTLS stack withFreeRTOS. The board acts as an HTTP client and sends a request to the HTTPServer.Demo requires DHCP and DNS servers." toolchain="armgcc iar mdk" category="lwip_examples" path="boards/evkmimxrt1064/lwip_examples/lwip_httpscli_mbedTLS/freertos">
          <external path="boards/evkmimxrt1064/lwip_examples/lwip_httpscli_mbedTLS/freertos" type="xml">
            <files mask="lwip_httpscli_mbedTLS_freertos.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_lwip_httpsrv_bm" name="lwip_httpsrv_bm" brief="The lwip_httpsrv demo application demonstrates an HTTPServer on the lwIP TCP/IP stack with bare metal SDK or FreeRTOS.The user uses an Internet browser to send a request for connection. The board acts as an HTTP server and sends a Webpage back to the PC." toolchain="armgcc iar mcuxpresso mdk" category="lwip_examples" path="boards/evkmimxrt1064/lwip_examples/lwip_httpsrv/bm">
          <external path="boards/evkmimxrt1064/lwip_examples/lwip_httpsrv/bm" type="xml">
            <files mask="lwip_httpsrv_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_lwip_httpsrv_freertos" name="lwip_httpsrv_freertos" brief="The lwip_httpsrv demo application demonstrates an HTTPServer on the lwIP TCP/IP stack with bare metal SDK or FreeRTOS.The user uses an Internet browser to send a request for connection. The board acts as an HTTP server and sends a Webpage back to the PC." toolchain="armgcc iar mcuxpresso mdk" category="lwip_examples" path="boards/evkmimxrt1064/lwip_examples/lwip_httpsrv/freertos">
          <external path="boards/evkmimxrt1064/lwip_examples/lwip_httpsrv/freertos" type="xml">
            <files mask="lwip_httpsrv_freertos.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_lwip_httpssrv_mbedTLS_bm" name="lwip_httpssrv_mbedTLS_bm" brief="The lwip_httpsrv_mbedTSL_bm demo application demonstrates an HTTPS Serverset up on lwIP TCP/IP and the mbedTLS stack with bare metal. The useruses an Internet browser to send an https request for connection.The board acts as an HTTPS server and sends a Web page back to the PC." toolchain="armgcc iar mcuxpresso mdk" category="lwip_examples" path="boards/evkmimxrt1064/lwip_examples/lwip_httpssrv_mbedTLS/bm">
          <external path="boards/evkmimxrt1064/lwip_examples/lwip_httpssrv_mbedTLS/bm" type="xml">
            <files mask="lwip_httpssrv_mbedTLS_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_lwip_httpssrv_mbedTLS_freertos" name="lwip_httpssrv_mbedTLS_freertos" brief="The lwip_httpsrv_mbedTLS demo application demonstrates an HTTPServer set up on lwIP TCP/IP and the MbedTLS stack withFreeRTOS. The user uses an Internet browser to send an https request for connection. The board acts as an HTTP serverand sends a Web page back to the PC." toolchain="armgcc iar mcuxpresso mdk" category="lwip_examples" path="boards/evkmimxrt1064/lwip_examples/lwip_httpssrv_mbedTLS/freertos">
          <external path="boards/evkmimxrt1064/lwip_examples/lwip_httpssrv_mbedTLS/freertos" type="xml">
            <files mask="lwip_httpssrv_mbedTLS_freertos.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_lwip_iperf_bm" name="lwip_iperf_bm" brief="This is the IPerf server example to check your bandwidth using the network performance measurement IPerf application on a PC as a client.It is currently a minimal implementation providing an IPv4 TCP server only.Instead of the command line IPerf application, for more convenience, it is recommended to use the JPerf2 graphical tool, which can be downloaded here: https://sourceforge.net/projects/iperf/files/jperf/jperf%202.0.0/jperf-2.0.0.zip/download" toolchain="armgcc iar mcuxpresso mdk" category="lwip_examples" path="boards/evkmimxrt1064/lwip_examples/lwip_iperf/bm">
          <external path="boards/evkmimxrt1064/lwip_examples/lwip_iperf/bm" type="xml">
            <files mask="lwip_iperf_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_lwip_mqtt_freertos" name="lwip_mqtt_freertos" brief="The lwip_mqtt demo application demonstrates MQTT client connecting to MQTT broker via unsecured socket. The application obtains IP and DNS addresses from DHCP and resolves broker's hostname if needed. Then it connects to the broker and subscribes to the &quot;lwip_topic/#&quot; and &quot;lwip_other/#&quot; topics. Further it publishes five messages to the &quot;lwip_topic/100&quot; which are also received back as the board is subscribed to the &quot;lwip_topic/#&quot;. Meanwhile it continues to receive messages published to the subscribed topics from other clients." toolchain="armgcc iar mcuxpresso mdk" category="lwip_examples" path="boards/evkmimxrt1064/lwip_examples/lwip_mqtt/freertos">
          <external path="boards/evkmimxrt1064/lwip_examples/lwip_mqtt/freertos" type="xml">
            <files mask="lwip_mqtt_freertos.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_lwip_ping_bm" name="lwip_ping_bm" brief="The lwip_ping demo application demonstrates a Ping Demo on the lwIP TCP/IP stack, which uses the ICMP protocol. Theapplication periodically sends the ICMP echo request to a PC, and processes the PC reply. Type &quot;ping $board_address&quot;in the PC command window to send an ICMP echo request to the board. The lwIP stack sends the ICMP echo reply back to thePC." toolchain="armgcc iar mcuxpresso mdk" category="lwip_examples" path="boards/evkmimxrt1064/lwip_examples/lwip_ping/bm">
          <external path="boards/evkmimxrt1064/lwip_examples/lwip_ping/bm" type="xml">
            <files mask="lwip_ping_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_lwip_ping_freertos" name="lwip_ping_freertos" brief="The lwip_ping demo application demonstrates a Ping Demo on the lwIP TCP/IP stack which using the ICMP protocol. Theapplication periodically sends the ICMP echo request to a PC and processes the PC reply. Type the &quot;ping $board_address&quot;in the PC command window to send an ICMP echo request to the board. The lwIP stack sends the ICMP echo reply back to thePC." toolchain="armgcc iar mcuxpresso mdk" category="lwip_examples" path="boards/evkmimxrt1064/lwip_examples/lwip_ping/freertos">
          <external path="boards/evkmimxrt1064/lwip_examples/lwip_ping/freertos" type="xml">
            <files mask="lwip_ping_freertos.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_lwip_tcpecho_bm" name="lwip_tcpecho_bm" brief="The lwip_tcpecho demo application demonstrates a TCP echo demo on the lwIP TCP/IP stack with bare metal KSDK orFreeRTOS. The demo uses the TCP protocol and acts as an echo server. The application sends back the received TCPpackets from the PC, which can be used to test whether a TCP connection is available." toolchain="armgcc iar mcuxpresso mdk" category="lwip_examples" path="boards/evkmimxrt1064/lwip_examples/lwip_tcpecho/bm">
          <external path="boards/evkmimxrt1064/lwip_examples/lwip_tcpecho/bm" type="xml">
            <files mask="lwip_tcpecho_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_lwip_tcpecho_freertos" name="lwip_tcpecho_freertos" brief="The lwip_tcpecho demo application demonstrates a TCP echo demo on the lwIP TCP/IP stack with bare metal KSDK orFreeRTOS. The demo uses the TCP protocol and acts as an echo server. The application sends back the received TCPpackets from the PC, which can be used to test whether a TCP connection is available." toolchain="armgcc iar mcuxpresso mdk" category="lwip_examples" path="boards/evkmimxrt1064/lwip_examples/lwip_tcpecho/freertos">
          <external path="boards/evkmimxrt1064/lwip_examples/lwip_tcpecho/freertos" type="xml">
            <files mask="lwip_tcpecho_freertos.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_lwip_udpecho_bm" name="lwip_udpecho_bm" brief="The lwip_udpecho demo application demonstrates a UDP echo demo on the lwIP TCP/IP stack with bare metal KSDK orFreeRTOS, which uses the UDP protocol and acts as an echo server. The application sends back the received UDP packetsfrom the PC, which can be used to test whether a UDP connection is available." toolchain="armgcc iar mcuxpresso mdk" category="lwip_examples" path="boards/evkmimxrt1064/lwip_examples/lwip_udpecho/bm">
          <external path="boards/evkmimxrt1064/lwip_examples/lwip_udpecho/bm" type="xml">
            <files mask="lwip_udpecho_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_lwip_udpecho_freertos" name="lwip_udpecho_freertos" brief="The lwip_udpecho demo application demonstrates a UDP echo demo on the lwIP TCP/IP stack with bare metal KSDK orFreeRTOS, which uses the UDP protocol and acts as an echo server. The application sends back the received UDP packetsfrom the PC, which can be used to test whether a UDP connection is available." toolchain="armgcc iar mcuxpresso mdk" category="lwip_examples" path="boards/evkmimxrt1064/lwip_examples/lwip_udpecho/freertos">
          <external path="boards/evkmimxrt1064/lwip_examples/lwip_udpecho/freertos" type="xml">
            <files mask="lwip_udpecho_freertos.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_mbedtls_benchmark" name="mbedtls_benchmark" brief="The mbdedTLS Benchmark demo application performs cryptographic algorithm benchmarking and prints results to theterminal." toolchain="armgcc iar mcuxpresso mdk" category="mbedtls_examples" path="boards/evkmimxrt1064/mbedtls_examples/mbedtls_benchmark">
          <external path="boards/evkmimxrt1064/mbedtls_examples/mbedtls_benchmark" type="xml">
            <files mask="mbedtls_benchmark.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_mbedtls_selftest" name="mbedtls_selftest" brief="The mbdedTLS SelfTest program performs cryptographic algorithm testing and prints results to theterminal." toolchain="armgcc iar mcuxpresso mdk" category="mbedtls_examples" path="boards/evkmimxrt1064/mbedtls_examples/mbedtls_selftest">
          <external path="boards/evkmimxrt1064/mbedtls_examples/mbedtls_selftest" type="xml">
            <files mask="mbedtls_selftest.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_ocotp_example" name="ocotp_example" brief="The ocotp driver example shows how to operation the OCOTP register with driver API." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/ocotp" path="boards/evkmimxrt1064/driver_examples/ocotp">
          <external path="boards/evkmimxrt1064/driver_examples/ocotp" type="xml">
            <files mask="ocotp_example.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_pin_detect_hid_mouse_bm" name="pin_detect_hid_mouse_bm" brief="This pin detect HID example supports the mouse device. The application prints the operation information when the mouse device is attached or plugged in to the PC host." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_pin_detect_hid_mouse/bm">
          <external path="boards/evkmimxrt1064/usb_examples/usb_pin_detect_hid_mouse/bm" type="xml">
            <files mask="pin_detect_hid_mouse_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_pin_detect_hid_mouse_freertos" name="pin_detect_hid_mouse_freertos" brief="This pin detect HID example supports the mouse device. The application prints the operation information when the mouse device is attached or plugged in to the PC host." toolchain="armgcc iar mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_pin_detect_hid_mouse/freertos">
          <external path="boards/evkmimxrt1064/usb_examples/usb_pin_detect_hid_mouse/freertos" type="xml">
            <files mask="pin_detect_hid_mouse_freertos.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_pin_detect_hid_msd_bm" name="pin_detect_hid_msd_bm" brief="This pin detect HID MSD example can become a HID mouse device or a MSD host that supports U-disk. The application prints the operation information when the U-disk is attached or is plugged into the PC host." toolchain="armgcc iar mcuxpresso mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_pin_detect_hid_msd/bm">
          <external path="boards/evkmimxrt1064/usb_examples/usb_pin_detect_hid_msd/bm" type="xml">
            <files mask="pin_detect_hid_msd_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_pin_detect_hid_msd_freertos" name="pin_detect_hid_msd_freertos" brief="This pin detect HID MSD example can become a HID mouse device or a MSD host that supports U-disk. The application prints the operation information when the U-disk is attached or is plugged into the PC host." toolchain="armgcc iar mdk" category="usb_examples" path="boards/evkmimxrt1064/usb_examples/usb_pin_detect_hid_msd/freertos">
          <external path="boards/evkmimxrt1064/usb_examples/usb_pin_detect_hid_msd/freertos" type="xml">
            <files mask="pin_detect_hid_msd_freertos.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_pit" name="pit" brief="The PIT project is a simple demonstration program of the SDK PIT driver. It sets up the PIThardware block to trigger a periodic interrupt after every 1 second. When the PIT interrupt is triggereda message a printed on the UART terminal and an LED is toggled on the board." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples" path="boards/evkmimxrt1064/driver_examples/pit">
          <external path="boards/evkmimxrt1064/driver_examples/pit" type="xml">
            <files mask="pit.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_power_mode_switch_bm" name="power_mode_switch_bm" brief="The Power mode switch demo application demonstrates the use of power modes in the KSDK. The demo prints the power mode menuthrough the debug console, where the user can set the MCU to a specific power mode. The user can also set the wakeupsource by following the debug console prompts. The purpose of this demo is to show how to switch between different power modes, and how to configure a wakeup source and wakeup the MCU from low power modes. Tips: This demo is to show how the various power mode can switch to each other. However, in actual low power use case, to save energy and reduce the consumption even more, many things can be done including: - Disable the clock for unnecessary module during low power mode. That means, programmer can disable the clocks before entering the low power mode and re-enable them after exiting the low power mode when necessary. - Disable the function for unnecessary part of a module when other part would keep working in low power mode. At the most time, more powerful function means more power consumption. For example, disable the digital function for the unnecessary pin mux, and so on. - Set the proper pin state (direction and logic level) according to the actual application hardware. Otherwise, the pin cirrent would be activied unexpectedly waste some energy. - Other low power consideration based on the actual application hardware. - Debug pins(e.g SWD_DIO) would consume addtional power, had better to disable related pins or disconnect them. " toolchain="armgcc iar mcuxpresso mdk" category="demo_apps" path="boards/evkmimxrt1064/demo_apps/power_mode_switch_bm">
          <external path="boards/evkmimxrt1064/demo_apps/power_mode_switch_bm" type="xml">
            <files mask="power_mode_switch_bm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_power_mode_switch_ca" name="power_mode_switch_ca" brief="The Power mode switch demo application demonstrates the use of power modes in the KSDK. The demo prints the power mode menuthrough the debug console, where the user can set the MCU to a specific power mode. The user can also set the wakeupsource by following the debug console prompts. The purpose of this demo is to show how to switch between different power modes, and how to configure a wakeup source and wakeup the MCU from low power modes. Tips: This demo is to show how the various power mode can switch to each other. However, in actual low power use case, to save energy and reduce the consumption even more, many things can be done including: - Disable the clock for unnecessary module during low power mode. That means, programmer can disable the clocks before entering the low power mode and re-enable them after exiting the low power mode when necessary. - Disable the function for unnecessary part of a module when other part would keep working in low power mode. At the most time, more powerful function means more power consumption. For example, disable the digital function for the unnecessary pin mux, and so on. - Set the proper pin state (direction and logic level) according to the actual application hardware. Otherwise, the pin cirrent would be activied unexpectedly waste some energy. - Other low power consideration based on the actual application hardware. - Debug pins(e.g SWD_DIO) would consume addtional power, had better to disable related pins or disconnect them. " toolchain="armgcc iar mcuxpresso mdk" category="demo_apps/power_mode_switch" path="boards/evkmimxrt1064/demo_apps/power_mode_switch">
          <external path="boards/evkmimxrt1064/demo_apps/power_mode_switch" type="xml">
            <files mask="power_mode_switch_ca.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_pwm" name="pwm" brief="The PWM project is a simple demonstration program of the SDK PWM driver.The pulse width modulator (PWM) module contains PWM submodules, each of which is set up to control a single half-bridge power stage.Fault channel support is provided. This PWM module can generate various switching patterns, including highly sophisticated waveforms.It can be used to control all known Switched Mode Power Supplies (SMPS) topologies." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples" path="boards/evkmimxrt1064/driver_examples/pwm">
          <external path="boards/evkmimxrt1064/driver_examples/pwm" type="xml">
            <files mask="pwm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_pxp_blend" name="pxp_blend" brief="The PXP blend project shows how to blend process surface and alpha surface usingPXP. If this example runs correctly, you will see two rectangles moving in thescreen. One rectangle is process surface output, and the other is alpha surfaceoutput, the overlay region color is OR'ed value of process surface and alpha surface." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/pxp" path="boards/evkmimxrt1064/driver_examples/pxp/blend">
          <external path="boards/evkmimxrt1064/driver_examples/pxp/blend" type="xml">
            <files mask="pxp_blend.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_pxp_flip" name="pxp_flip" brief="The PXP flip project shows how to use the PXP flip function. If this exampleruns correctly, you will see a square with three color(red, green and blue).The flip mode is changing." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/pxp" path="boards/evkmimxrt1064/driver_examples/pxp/flip">
          <external path="boards/evkmimxrt1064/driver_examples/pxp/flip" type="xml">
            <files mask="pxp_flip.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_pxp_lcdif_handshake" name="pxp_lcdif_handshake" brief="The PXP LCDIF hand shake project shows how to enable the hand shake betweenPXP and LCDIF. If this example runs correctly, you will see two rectangles moving in thescreen. One rectangle is process surface output, and the other is alpha surfaceoutput, the overlay region color is OR'ed value of process surface and alpha surface.NOTE:This example must run continously to get the right result, breaking during debugwill results to handshake fail. Because the PXP must be started before every LCDframe, if system is halt, the PXP does not start correctly." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/pxp" path="boards/evkmimxrt1064/driver_examples/pxp/lcdif_handshake">
          <external path="boards/evkmimxrt1064/driver_examples/pxp/lcdif_handshake" type="xml">
            <files mask="pxp_lcdif_handshake.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_pxp_queue" name="pxp_queue" brief="The PXP queue project shows how to use the PXP command queue. This exampleuse the command queue to rotate the process surface. If this exampleruns correctly, you will see a square with three color(red, green and blue).The rotate degree is changing." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/pxp" path="boards/evkmimxrt1064/driver_examples/pxp/queue">
          <external path="boards/evkmimxrt1064/driver_examples/pxp/queue" type="xml">
            <files mask="pxp_queue.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_pxp_rotate" name="pxp_rotate" brief="The PXP rotate project shows how to use the PXP rotate function. If this exampleruns correctly, you will see a square with three color(red, green and blue).The rotate degree is changing." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/pxp" path="boards/evkmimxrt1064/driver_examples/pxp/rotate">
          <external path="boards/evkmimxrt1064/driver_examples/pxp/rotate" type="xml">
            <files mask="pxp_rotate.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_pxp_scale" name="pxp_scale" brief="The PXP scale project shows how to use the PXP scale function. If this exampleruns correctly, you will see a square with three color(red, green and blue).The square size is changing." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/pxp" path="boards/evkmimxrt1064/driver_examples/pxp/scale">
          <external path="boards/evkmimxrt1064/driver_examples/pxp/scale" type="xml">
            <files mask="pxp_scale.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_qtmr_inputcapture_outputpwm" name="qtmr_inputcapture_outputpwm" brief="The QTMR project is a demonstration program of the SDK QTMR driver's input capture and output pwm feature.The example sets up a QTMR channel for input capture. Once the input signal is received,this example will enter interrupt and print the capture value.The example also sets up one QTMR channel to output pwm. The user should probe a 50Khz PWM signal output with50% dutycycle with a oscilloscope. " toolchain="armgcc iar mcuxpresso mdk" category="driver_examples" path="boards/evkmimxrt1064/driver_examples/qtmr/inputcapture_outputpwm">
          <external path="boards/evkmimxrt1064/driver_examples/qtmr/inputcapture_outputpwm" type="xml">
            <files mask="qtmr_inputcapture_outputpwm.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_qtmr_inputcapture_outputpwm_dma" name="qtmr_inputcapture_outputpwm_dma" brief="The QTMR project is a demonstration program of the SDK QTMR driver's input capture and output pwm feature by DMA.The example sets up a QTMR channel for input capture. Once the input signal is received,this example will print the capture value.The example also sets up one QTMR channel to output pwm. The user should probe a 50Khz PWM signal output with50% dutycycle with a oscilloscope.The user can enter a value to update the Duty cycle." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples" path="boards/evkmimxrt1064/driver_examples/qtmr/inputcapture_outputpwm_dma">
          <external path="boards/evkmimxrt1064/driver_examples/qtmr/inputcapture_outputpwm_dma" type="xml">
            <files mask="qtmr_inputcapture_outputpwm_dma.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_qtmr_timer" name="qtmr_timer" brief="The QTMR project is a simple demonstration program of the SDK QTMR driver to use QTMR as a timer.The quad-timer module provides four timer channels with a variety of controls affecting both individualand multi-channel features. It sets up the QTMR hardware block to trigger an interrupt every 50 millisecond.When chaining the first channel and the second channel, Timer interrupt occur every 10 second.When the QTMR interrupt is triggered a message a printed on the UART terminal." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples" path="boards/evkmimxrt1064/driver_examples/qtmr/timer">
          <external path="boards/evkmimxrt1064/driver_examples/qtmr/timer" type="xml">
            <files mask="qtmr_timer.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_rtwdog" name="rtwdog" brief="The RTWDOG Example project is to demonstrate usage of the KSDK rtwdog driver.In this example, fast testing is first implemented to test the rtwdog.After this, refreshing the watchdog in None-window mode and window mode is executed.Note rtwdog is disabled in SystemInit function which means rtwdog is disabledafter chip emerges from reset." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/rtwdog" path="boards/evkmimxrt1064/driver_examples/rtwdog">
          <external path="boards/evkmimxrt1064/driver_examples/rtwdog" type="xml">
            <files mask="rtwdog.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_sai" name="sai" brief="The SAI Demo application demonstrates complicated digital audio playback and record case. The demo provide these features below:1. Duplex audio transfer, record and playback at same time.2. Playback a 250 Hz sine wave data generated by CMSIS-DSP library. Also compute the fundamental frequency using Fast Fourier Transform with CMSIS-DSP library.3. Record a 5 seconds audio to sdcard with a FatFs system. After record, playback it. This feature may only existed in platform which support sdhc." toolchain="armgcc iar mcuxpresso mdk" category="demo_apps" path="boards/evkmimxrt1064/demo_apps/sai">
          <external path="boards/evkmimxrt1064/demo_apps/sai" type="xml">
            <files mask="sai.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_sai_edma_record_playback" name="sai_edma_record_playback" brief="The sai_edma_record_playback example shows how to use sai driver with EDMA: In this example, one sai instance record the audio data from input and playbacks the audio data." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/sai" path="boards/evkmimxrt1064/driver_examples/sai/edma_record_playback">
          <external path="boards/evkmimxrt1064/driver_examples/sai/edma_record_playback" type="xml">
            <files mask="sai_edma_record_playback.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_sai_edma_transfer" name="sai_edma_transfer" brief="The sai_edma_transfer example shows how to use sai driver with EDMA:In this example, one sai instance playbacks the audio data stored in flash/SRAM using EDMA channel." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/sai" path="boards/evkmimxrt1064/driver_examples/sai/edma_transfer">
          <external path="boards/evkmimxrt1064/driver_examples/sai/edma_transfer" type="xml">
            <files mask="sai_edma_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_sai_interrupt" name="sai_interrupt" brief="The sai_interrupt example shows how to use sai functional API to implement interrupt playback:In this example, one sai instance playbacks the audio data stored in flash/SRAM using interrupt." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/sai" path="boards/evkmimxrt1064/driver_examples/sai/interrupt">
          <external path="boards/evkmimxrt1064/driver_examples/sai/interrupt" type="xml">
            <files mask="sai_interrupt.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_sai_interrupt_record_playback" name="sai_interrupt_record_playback" brief="The sai_interrupt_record_playback example shows how to use sai driver with record and playback features: In this example, one sai instance record the audio data from input and playbacks the audio data." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/sai" path="boards/evkmimxrt1064/driver_examples/sai/interrupt_record_playback">
          <external path="boards/evkmimxrt1064/driver_examples/sai/interrupt_record_playback" type="xml">
            <files mask="sai_interrupt_record_playback.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_sai_interrupt_transfer" name="sai_interrupt_transfer" brief="The sai_interrupt_transfer example shows how to use sai driver with interrupt:In this example, one sai instance playbacks the audio data stored in flash/SRAM using interrupt." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/sai" path="boards/evkmimxrt1064/driver_examples/sai/interrupt_transfer">
          <external path="boards/evkmimxrt1064/driver_examples/sai/interrupt_transfer" type="xml">
            <files mask="sai_interrupt_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_sd_jpeg" name="sd_jpeg" brief="The SD JPEG Demo application reads the JPEG pictures from the SD card, decodesthem, and shows them in the LCD panel one by one." toolchain="armgcc iar mcuxpresso mdk" category="demo_apps" path="boards/evkmimxrt1064/demo_apps/sd_jpeg">
          <external path="boards/evkmimxrt1064/demo_apps/sd_jpeg" type="xml">
            <files mask="sd_jpeg.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_sdcard_fatfs_freertos" name="sdcard_fatfs_freertos" brief="The SDCARD FATFS FREERTOS project is a demonstration program that uses the SDK software. The purpose of this example is to show how to use SDCARD with fatfs and freertos." toolchain="armgcc iar mcuxpresso mdk" category="demo_apps/sdcard_fatfs_freertos" path="boards/evkmimxrt1064/demo_apps/sdcard_fatfs_freertos">
          <external path="boards/evkmimxrt1064/demo_apps/sdcard_fatfs_freertos" type="xml">
            <files mask="sdcard_fatfs_freertos.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_sdcard_interrupt" name="sdcard_interrupt" brief="The SDCARD Interrupt project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver andshow how to use interrupt based transfer API in SDHC driver in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/sdcard" path="boards/evkmimxrt1064/driver_examples/sdcard/interrupt">
          <external path="boards/evkmimxrt1064/driver_examples/sdcard/interrupt" type="xml">
            <files mask="sdcard_interrupt.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_sdcard_polling" name="sdcard_polling" brief="The SDCARD Polling project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver andshow how to use polling based transfer API in SDHC driver in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/sdcard" path="boards/evkmimxrt1064/driver_examples/sdcard/polling">
          <external path="boards/evkmimxrt1064/driver_examples/sdcard/polling" type="xml">
            <files mask="sdcard_polling.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_semc" name="semc" brief="The sdramc example shows how to use SEMC controller driver to initialize the external SDRAM chip." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/semc" path="boards/evkmimxrt1064/driver_examples/semc/sdram">
          <external path="boards/evkmimxrt1064/driver_examples/semc/sdram" type="xml">
            <files mask="semc.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_shell" name="shell" brief="The Shell Demo application demonstrates to control Leds by commands." toolchain="armgcc iar mcuxpresso mdk" category="demo_apps" path="boards/evkmimxrt1064/demo_apps/shell">
          <external path="boards/evkmimxrt1064/demo_apps/shell" type="xml">
            <files mask="shell.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_snvs_hp_hac" name="snvs_hp_hac" brief="The SNVS HP HAC project shows how to use the High Assurance Counter (HAC) based on SDK SNVS HP driver. In this example, The HAC is enabled and set a initial value. Software fatal security violation is triggered, and the SSM switches to soft fail mode. In soft fail mode, software stops the HAC counter, and clear the HAC to make SSM switch to hard fail mode. The system resets when enters hard fail mode." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/snvs" path="boards/evkmimxrt1064/driver_examples/snvs/snvs_hp_hac">
          <external path="boards/evkmimxrt1064/driver_examples/snvs/snvs_hp_hac" type="xml">
            <files mask="snvs_hp_hac.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_snvs_hp_rtc" name="snvs_hp_rtc" brief="The SNVS HP RTC project is a simple demonstration program of the SDK SNVS HP driver. The test will set up RTC date and time to a predefined value and starts the counter. RTC then triggers an alarm after a user specified time period. The alarm will be set with reference to this predefined date and time." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/snvs" path="boards/evkmimxrt1064/driver_examples/snvs/snvs_hp_rtc">
          <external path="boards/evkmimxrt1064/driver_examples/snvs/snvs_hp_rtc" type="xml">
            <files mask="snvs_hp_rtc.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_snvs_lp_mc" name="snvs_lp_mc" brief="The SNVS LP MC project shows how to use the Monotonic Counter (MC) based on SDK SNVS LP driver. In this example, the MC value is increased and checked several times." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/snvs" path="boards/evkmimxrt1064/driver_examples/snvs/snvs_lp_mc">
          <external path="boards/evkmimxrt1064/driver_examples/snvs/snvs_lp_mc" type="xml">
            <files mask="snvs_lp_mc.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_snvs_lp_srtc" name="snvs_lp_srtc" brief="The SNVS LP SRTC project is a simple demonstration program of the SDK SNVS LP driver. The test will set up secure RTC (SRTC) date and time to a predefined value and starts the counter, then the SRTC counter value is synchronized with non secure RTC (RTC). RTC then triggers an alarm after a user specified time period. The alarm will be set with reference to this predefined dateand time." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/snvs" path="boards/evkmimxrt1064/driver_examples/snvs/snvs_lp_srtc">
          <external path="boards/evkmimxrt1064/driver_examples/snvs/snvs_lp_srtc" type="xml">
            <files mask="snvs_lp_srtc.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_snvs_sw_zmk" name="snvs_sw_zmk" brief="The SNVS SW ZMK project shows how to provision the zeroizable master key (ZMK) by software based on SDK SNVS driver. In this example, ZMK key value is set and ECC is enabled. When change the ZMK key value, violation detected and ZMK key is zeroized." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/snvs" path="boards/evkmimxrt1064/driver_examples/snvs/snvs_sw_zmk">
          <external path="boards/evkmimxrt1064/driver_examples/snvs/snvs_sw_zmk" type="xml">
            <files mask="snvs_sw_zmk.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_src_reset_source" name="src_reset_source" brief="The src_reset_source example shows how to check the reset source and boot option with SRC driver.When run this example firstly on the board after power up, the POR reset or IPP reset flag would be asserted. But when running it again, the flag would be cleared, since it is no longer a reset.Usually, the reset flags are used and cleared by ROM code or bootloader to check which reset occurred. With the boot mode words, the initial boot code would go to the right way to execute the start code. For example, when the SoC is waked up from some low power mode, all necessary data are already staying in the RAM, the CPU would not have to reload the program to RAM and execute the application directly." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/src" path="boards/evkmimxrt1064/driver_examples/src/src_reset_source">
          <external path="boards/evkmimxrt1064/driver_examples/src/src_reset_source" type="xml">
            <files mask="src_reset_source.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_temperaturemonitor" name="temperaturemonitor" brief="The TEMPMON project is a simple demonstration program of the SDK TEMPMON driver.The temperatue monitor (TEMPMON) module features alarm functions that can raise independent interrupt signals if the temperature is above two high-temperature thresholds and below a low temperature threshold, the system can then use this module to monitor the on-die temperature and take appropriate actions such as throttling back the core frequency when a the high temperature interrupt is set." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples" path="boards/evkmimxrt1064/driver_examples/tempmon">
          <external path="boards/evkmimxrt1064/driver_examples/tempmon" type="xml">
            <files mask="temperaturemonitor.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_trng_random" name="trng_random" brief="The True Random Number Generator (TRNG) is a hardware accelerator module that generates a 512-bitentropy as needed by an entropy consuming module or by other post processing functions. The TRNGExample project is a demonstration program that uses the KSDK software to generate random numbersand prints them to the terminal." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/trng" path="boards/evkmimxrt1064/driver_examples/trng/random">
          <external path="boards/evkmimxrt1064/driver_examples/trng/random" type="xml">
            <files mask="trng_random.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_wdog01" name="wdog01" brief="The WDOG Example project is to demonstrate usage of the KSDK wdog driver.In this example,implemented to test the wdog.And then after 10 times of refreshing the watchdog, a timeout reset is generated.We also try to refresh out of window to trigger reset after 10 times of refreshing.Please notice that because WDOG control registers are write-once only, so the WDOG_Init function and the WDOG_Disable function can be called only once after reset." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples/wdog" path="boards/evkmimxrt1064/driver_examples/wdog">
          <external path="boards/evkmimxrt1064/driver_examples/wdog" type="xml">
            <files mask="wdog01.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_wiced_iperf_4343W" name="wiced_iperf_4343W" brief="Demonstrates Cypress WiFi connected over USDHC/SDIO" toolchain="armgcc iar mcuxpresso" category="wifi_examples" path="boards/evkmimxrt1064/wifi_cypress_examples/wiced_iperf_4343W">
          <external path="boards/evkmimxrt1064/wifi_cypress_examples/wiced_iperf_4343W" type="xml">
            <files mask="wiced_iperf_4343W.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_wiced_mfg_test_4343W" name="wiced_mfg_test_4343W" brief="Manufacturing Test Application" toolchain="armgcc iar mcuxpresso" category="wifi_examples" path="boards/evkmimxrt1064/wifi_cypress_examples/wiced_mfg_test_4343W">
          <external path="boards/evkmimxrt1064/wifi_cypress_examples/wiced_mfg_test_4343W" type="xml">
            <files mask="wiced_mfg_test_4343W.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_xbar_aoi" name="xbar_aoi" brief="The XBAR AOI demo application demonstrates the usage of the XBAR, AOI peripheral to combine interruptfrom CMP and PIT. If the button is pressed(CMP interrupt) and the PIT periodic interrupt occurs a message is printed." toolchain="armgcc iar mcuxpresso mdk" category="demo_apps" path="boards/evkmimxrt1064/demo_apps/xbar_aoi">
          <external path="boards/evkmimxrt1064/demo_apps/xbar_aoi" type="xml">
            <files mask="xbar_aoi.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_xbara" name="xbara" brief="The Xbara project is a simple demonstration program of the SDK Xbara driver.The intended applicationof this module is to provide a flexible crossbar switch function that allows any input to beconnected to any output under user control.It sets up the Xbara hardware block to trigger a periodicinterrupt after every 1 second. When the Xbar interrupt is triggered a message a printed on the UARTterminal." toolchain="armgcc iar mcuxpresso mdk" category="driver_examples" path="boards/evkmimxrt1064/driver_examples/xbara">
          <external path="boards/evkmimxrt1064/driver_examples/xbara" type="xml">
            <files mask="xbara.xml"/>
          </external>
        </example>
      </examples>
      <debug_configurations>
        <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
          <drivers>
            <driver id_refs="BOARD_FLASH_evkmimxrt1064">
              <driverBinary path="devices/MIMXRT1064/mcuxpresso" type="binary">
                <files mask="MIMXRT1064.cfx"/>
              </driverBinary>
            </driver>
          </drivers>
        </debug_configuration>
      </debug_configurations>
    </board>
    <board id="evkmimxrt1064_agm01" name="EVK-MIMXRT1064-AGM01" href="http://www.nxp.com/FRDM-STBC-AGM01" version="1.0.0" package="MIMXRT1064DVL6A" type="kit">
      <description>
Sensor Toolbox Development Platform for FXAS21002C and FXOS8700C 9-Axis Solution
        </description>
      <image path="docs/images" type="image">
        <files mask="EVK-MIMXRT1064-AGM01.gif"/>
      </image>
      <metadataSet>
        <metadata key="vendor" value="NXP"/>
        <metadata key="html">
          <specific>
            <content>
EVK-MIMXRT1064 with FRDM-STBC-AGM01 Custom Kit (FRDM-STBC-AGM01 Sensor Shield Development Board with EVK-MIMXRT1064 Board):
&lt;ul&gt;
&lt;li&gt; FRDM-STBC-AGM01 Sensor Shield board is a sensor expansion board enabling NXP’s 9-axis solution (FXAS21002C 3-Axis Gyroscope with FXOS8700CQ 3-Axis Accelerometer + 3-Axis Magnetometer).&lt;/li&gt;
&lt;/ul&gt;
</content>
          </specific>
        </metadata>
      </metadataSet>
      <examples>
        <example id="evkmimxrt1064_agm01_fxas21002_fifo" name="fxas21002_fifo" brief="The FXAS21002 FIFO example application demonstrates the use of the FXAS21002 sensor in Buffered (FIFO) Mode.The example demonstrates configuration of all registers reguired to put the sensor in FIFO Mode and read out samples.The sensor reads samples and are buffered upto the configured Water Mark Level and then a Flag is set.The application consistently checks the Flag and when set, reads out all(count=Water Mark Level) samples." toolchain="armgcc iar mcuxpresso mdk" category="issdk/sensors" path="boards/evkmimxrt1064_agm01/issdk_examples/sensors/fxas21002/fxas21002_fifo">
          <external path="boards/evkmimxrt1064_agm01/issdk_examples/sensors/fxas21002/fxas21002_fifo" type="xml">
            <files mask="fxas21002_fifo.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_agm01_fxas21002_poll" name="fxas21002_poll" brief="The FXAS21002 Poll example application demonstrates the use of the FXAS21002 sensor in the Poll (Non-Buffered) Mode. The example demonstrates configuration of all registers reguired to put the sensor into Poll Mode and read out a sample." toolchain="armgcc iar mcuxpresso mdk" category="issdk/sensors" path="boards/evkmimxrt1064_agm01/issdk_examples/sensors/fxas21002/fxas21002_poll">
          <external path="boards/evkmimxrt1064_agm01/issdk_examples/sensors/fxas21002/fxas21002_poll" type="xml">
            <files mask="fxas21002_poll.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_agm01_fxos8700_fifo" name="fxos8700_fifo" brief="The FXAS8700 FIFO example application demonstrates the use of the FXAS8700 sensor in Buffered (FIFO) Mode.The example demonstrates configuration of all registers reguired to put the sensor in FIFO Mode and read out samples.The sensor reads samples and are buffered upto the configured Water Mark Level and then a Flag is set.The application consistently checks the Flag and when set, reads out all(count=Water Mark Level) samples." toolchain="armgcc iar mcuxpresso mdk" category="issdk/sensors" path="boards/evkmimxrt1064_agm01/issdk_examples/sensors/fxos8700/fxos8700_fifo">
          <external path="boards/evkmimxrt1064_agm01/issdk_examples/sensors/fxos8700/fxos8700_fifo" type="xml">
            <files mask="fxos8700_fifo.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1064_agm01_fxos8700_poll" name="fxos8700_poll" brief="The FXOS8700 Poll example application demonstrates the use of the FXOS8700 sensor in the Poll (Non-Buffered) Mode. The example demonstrates configuration of all registers reguired to put the sensor into Poll Mode and read out a sample." toolchain="armgcc iar mcuxpresso mdk" category="issdk/sensors" path="boards/evkmimxrt1064_agm01/issdk_examples/sensors/fxos8700/fxos8700_poll">
          <external path="boards/evkmimxrt1064_agm01/issdk_examples/sensors/fxos8700/fxos8700_poll" type="xml">
            <files mask="fxos8700_poll.xml"/>
          </external>
        </example>
      </examples>
    </board>
  </boards>
  <devices>
    <device id="MIMXRT1064xxxxA" name="MIMXRT1064" href="http://www.nxp.com/kinetis" version="1.0.0" full_name="MIMXRT1064xxxxA">
      <description>MIMXRT1064: i.MX® MIMXRT1064 600MHz, 512KB SRAM Microcontrollers (MCUs) based on ARM® Cortex®-M7 Core</description>
      <image path="docs/images" type="image">
        <files mask="device.jpg"/>
      </image>
      <metadataSet>
        <metadata key="vendor" value="NXP"/>
        <metadata key="vendor.device.type" value="i.MX"/>
        <metadata key="vendor.device.family" value="MIMXRT1064"/>
        <metadata key="compatible_device.segger" value="MIMXRT1064xxx6A"/>
        <metadata key="compatible_device.pemicro" value="IMXRT1064"/>
        <metadata key="html">
          <specific>
            <content>The MIMXRT1064 are ARM Cortex-M7 based microcontrollers for embedded applications.</content>
          </specific>
        </metadata>
      </metadataSet>
      <core id="core0_MIMXRT1064xxxxA" name="core0" fpu="true" type="cm7"/>
      <memory>
        <memoryBlock id="PROGRAM_FLASH_MIMXRT1064xxxxA" name="PROGRAM_FLASH" addr="70000000" size="00400000" type="Flash" access="RO"/>
        <memoryBlock id="SRAM_DTC_MIMXRT1064xxxxA" name="SRAM_DTC" addr="20000000" size="00020000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM_ITC_MIMXRT1064xxxxA" name="SRAM_ITC" addr="00000000" size="00020000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM_OC_MIMXRT1064xxxxA" name="SRAM_OC" addr="20200000" size="000c0000" type="RAM" access="RW"/>
      </memory>
      <total_memory flash_size_kb="4096" ram_size_kb="1024"/>
      <package id="MIMXRT1064CVL5A" name="MIMXRT1064CVL5A"/>
      <package id="MIMXRT1064CVJ5A" name="MIMXRT1064CVJ5A"/>
      <package id="MIMXRT1064DVL6A" name="MIMXRT1064DVL6A"/>
      <package id="MIMXRT1064DVJ6A" name="MIMXRT1064DVJ6A"/>
      <evaluation_boards>
        <evaluation_board name="evkmimxrt1064"/>
      </evaluation_boards>
      <debug_configurations>
        <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
          <params>
            <params id="misc.options.MIMXRT1064xxxxA" name="misc.options" value="--no-packed"/>
          </params>
        </debug_configuration>
        <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
          <params>
            <params id="internal.wiretype.release.MIMXRT1064xxxxA" name="internal.wiretype" value="SWD"/>
            <params id="internal.has_swo.release.MIMXRT1064xxxxA" name="internal.has_swo" value="true"/>
          </params>
        </debug_configuration>
      </debug_configurations>
      <linkerSettings nature="c_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
      <linkerSettings nature="cpp_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
    </device>
  </devices>
  <components>
    <component id="project_template.evkmimxrt1064.MIMXRT1064" name="evkmimxrt1064" version="1.0.0" devices="MIMXRT1064xxxxA" dependency="component.lists.MIMXRT1064 component.lpuart_adapter.MIMXRT1064 component.serial_manager.MIMXRT1064 component.serial_manager_uart.MIMXRT1064 device.MIMXRT1064_CMSIS.MIMXRT1064 device.MIMXRT1064_startup.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064 platform.drivers.igpio.MIMXRT1064 platform.drivers.iomuxc.MIMXRT1064 platform.drivers.lpuart.MIMXRT1064 platform.drivers.xip_board.MIMXRT1064 platform.drivers.xip_device.MIMXRT1064 utility.debug_console.MIMXRT1064" category="Board Support/SDK Project Template" user_visible="true" type="project_template">
      <source path="boards/evkmimxrt1064/project_template" target_path="board/boards" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="peripherals.c"/>
        <files mask="pin_mux.c"/>
      </source>
      <source path="boards/evkmimxrt1064/project_template" target_path="board/boards" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="peripherals.h"/>
        <files mask="pin_mux.h"/>
      </source>
    </component>
    <component id="project_template.evkmimxrt1064_agm01.MIMXRT1064" name="evkmimxrt1064_agm01" version="1.0.0" devices="MIMXRT1064xxxxA" dependency="component.lists.MIMXRT1064 component.lpuart_adapter.MIMXRT1064 component.serial_manager.MIMXRT1064 component.serial_manager_uart.MIMXRT1064 device.MIMXRT1064_CMSIS.MIMXRT1064 device.MIMXRT1064_startup.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064 platform.drivers.igpio.MIMXRT1064 platform.drivers.iomuxc.MIMXRT1064 platform.drivers.lpuart.MIMXRT1064 platform.drivers.xip_board.MIMXRT1064 platform.drivers.xip_device.MIMXRT1064 utility.debug_console.MIMXRT1064" category="Board Support/SDK Project Template" user_visible="true" type="project_template">
      <source path="boards/evkmimxrt1064_agm01/project_template" target_path="src" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="peripherals.c"/>
        <files mask="pin_mux.c"/>
      </source>
      <source path="boards/evkmimxrt1064_agm01/project_template" target_path="src" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="peripherals.h"/>
        <files mask="pin_mux.h"/>
      </source>
    </component>
    <component id="platform.CMSIS.MIMXRT1064" name="CMSIS" version="5.1.1" devices="MIMXRT1064xxxxA" dependency="platform.CMSIS_Driver platform.CMSIS_Driver_Include.CAN_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.Ethernet_MAC_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.Ethernet_PHY_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.Flash_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.MCI_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.NAND_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.SAI_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.USART_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.USB_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.USB_Device_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.USB_Host_CMSISInclude.MIMXRT1064 platform.Include_common.MIMXRT1064" user_visible="true" type="CMSIS">
      <source path="CMSIS/Include" target_path="src" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_math.h"/>
        <files mask="cmsis_armcc.h"/>
        <files mask="cmsis_armclang.h"/>
        <files mask="cmsis_compiler.h"/>
        <files mask="cmsis_gcc.h"/>
        <files mask="cmsis_iccarm.h"/>
        <files mask="cmsis_version.h"/>
        <files mask="core_armv8mbl.h"/>
        <files mask="core_armv8mml.h"/>
        <files mask="core_cm0.h"/>
        <files mask="core_cm0plus.h"/>
        <files mask="core_cm23.h"/>
        <files mask="core_cm3.h"/>
        <files mask="core_cm33.h"/>
        <files mask="core_cm4.h"/>
        <files mask="core_cm7.h"/>
        <files mask="core_dsp.h"/>
        <files mask="core_sc000.h"/>
        <files mask="core_sc300.h"/>
        <files mask="mpu_armv7.h"/>
        <files mask="mpu_armv8.h"/>
        <files mask="tz_context.h"/>
      </source>
      <source path="CMSIS" target_path="src" type="doc">
        <files mask="LICENSE.txt"/>
      </source>
    </component>
    <component id="platform.CMSIS_DSP_Lib.MIMXRT1064" name="CMSIS_DSP_Lib" version="5.1.1" devices="MIMXRT1064xxxxA" user_visible="false" type="CMSIS">
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example" target_path="src" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM0" target_path="src" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM0" target_path="src" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM3" target_path="src" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM3" target_path="src" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM4_FP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM4_FP" target_path="src" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM7_SP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM7_SP" target_path="src" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example/RTE" target_path="src" type="c_include">
        <files mask="RTE_Components.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example" target_path="src" type="configuration">
        <files mask="arm_class_marks_example.ini"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example" target_path="src" type="project">
        <files mask="arm_class_marks_example.uvoptx"/>
        <files mask="arm_class_marks_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example" target_path="src" type="src">
        <files mask="arm_class_marks_example_f32.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example" target_path="src" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM0" target_path="src" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM0" target_path="src" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM3" target_path="src" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM3" target_path="src" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM4_FP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM4_FP" target_path="src" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM7_SP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM7_SP" target_path="src" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example/RTE" target_path="src" type="c_include">
        <files mask="RTE_Components.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example" target_path="src" type="configuration">
        <files mask="arm_convolution_example.ini"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example" target_path="src" type="project">
        <files mask="arm_convolution_example.uvoptx"/>
        <files mask="arm_convolution_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example" target_path="src" type="src">
        <files mask="arm_convolution_example_f32.c"/>
        <files mask="math_helper.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example" target_path="src" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example" target_path="src" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM0" target_path="src" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM0" target_path="src" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM3" target_path="src" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM3" target_path="src" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM4_FP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM4_FP" target_path="src" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM7_SP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM7_SP" target_path="src" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example/RTE" target_path="src" type="c_include">
        <files mask="RTE_Components.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example" target_path="src" type="configuration">
        <files mask="arm_dotproduct_example.ini"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example" target_path="src" type="project">
        <files mask="arm_dotproduct_example.uvoptx"/>
        <files mask="arm_dotproduct_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example" target_path="src" type="src">
        <files mask="arm_dotproduct_example_f32.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example" target_path="src" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM0" target_path="src" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM0" target_path="src" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM3" target_path="src" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM3" target_path="src" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM4_FP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM4_FP" target_path="src" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM7_SP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM7_SP" target_path="src" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example/RTE" target_path="src" type="c_include">
        <files mask="RTE_Components.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example" target_path="src" type="src">
        <files mask="arm_fft_bin_data.c"/>
        <files mask="arm_fft_bin_example_f32.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example" target_path="src" type="configuration">
        <files mask="arm_fft_bin_example.ini"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example" target_path="src" type="project">
        <files mask="arm_fft_bin_example.uvoptx"/>
        <files mask="arm_fft_bin_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example" target_path="src" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example/RTE/Device/ARMCM0" target_path="src" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example/RTE/Device/ARMCM0" target_path="src" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example/RTE/Device/ARMCM3" target_path="src" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example/RTE/Device/ARMCM3" target_path="src" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example/RTE/Device/ARMCM4_FP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example/RTE/Device/ARMCM4_FP" target_path="src" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example/RTE/Device/ARMCM7_SP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example/RTE/Device/ARMCM7_SP" target_path="src" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example/RTE" target_path="src" type="c_include">
        <files mask="RTE_Components.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example" target_path="src" type="src">
        <files mask="arm_fir_data.c"/>
        <files mask="arm_fir_example_f32.c"/>
        <files mask="math_helper.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example" target_path="src" type="configuration">
        <files mask="arm_fir_example.ini"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example" target_path="src" type="project">
        <files mask="arm_fir_example.uvoptx"/>
        <files mask="arm_fir_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example" target_path="src" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example" target_path="src" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM0" target_path="src" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM0" target_path="src" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM3" target_path="src" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM3" target_path="src" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM4_FP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM4_FP" target_path="src" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM7_SP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM7_SP" target_path="src" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example/RTE" target_path="src" type="c_include">
        <files mask="RTE_Components.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example" target_path="src" type="src">
        <files mask="arm_graphic_equalizer_data.c"/>
        <files mask="arm_graphic_equalizer_example_q31.c"/>
        <files mask="math_helper.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example" target_path="src" type="configuration">
        <files mask="arm_graphic_equalizer_example.ini"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example" target_path="src" type="project">
        <files mask="arm_graphic_equalizer_example.uvoptx"/>
        <files mask="arm_graphic_equalizer_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example" target_path="src" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example" target_path="src" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM0" target_path="src" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM0" target_path="src" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM3" target_path="src" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM3" target_path="src" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM4_FP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM4_FP" target_path="src" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM7_SP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM7_SP" target_path="src" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example/RTE" target_path="src" type="c_include">
        <files mask="RTE_Components.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example" target_path="src" type="src">
        <files mask="arm_linear_interp_data.c"/>
        <files mask="arm_linear_interp_example_f32.c"/>
        <files mask="math_helper.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example" target_path="src" type="configuration">
        <files mask="arm_linear_interp_example.ini"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example" target_path="src" type="project">
        <files mask="arm_linear_interp_example.uvoptx"/>
        <files mask="arm_linear_interp_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example" target_path="src" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example" target_path="src" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM0" target_path="src" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM0" target_path="src" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM3" target_path="src" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM3" target_path="src" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM4_FP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM4_FP" target_path="src" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM7_SP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM7_SP" target_path="src" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example/RTE" target_path="src" type="c_include">
        <files mask="RTE_Components.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example" target_path="src" type="configuration">
        <files mask="arm_matrix_example.ini"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example" target_path="src" type="project">
        <files mask="arm_matrix_example.uvoptx"/>
        <files mask="arm_matrix_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example" target_path="src" type="src">
        <files mask="arm_matrix_example_f32.c"/>
        <files mask="math_helper.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example" target_path="src" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example" target_path="src" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM0" target_path="src" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM0" target_path="src" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM3" target_path="src" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM3" target_path="src" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM4_FP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM4_FP" target_path="src" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM7_SP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM7_SP" target_path="src" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example/RTE" target_path="src" type="c_include">
        <files mask="RTE_Components.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example" target_path="src" type="src">
        <files mask="arm_signal_converge_data.c"/>
        <files mask="arm_signal_converge_example_f32.c"/>
        <files mask="math_helper.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example" target_path="src" type="configuration">
        <files mask="arm_signal_converge_example.ini"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example" target_path="src" type="project">
        <files mask="arm_signal_converge_example.uvoptx"/>
        <files mask="arm_signal_converge_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example" target_path="src" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example" target_path="src" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM0" target_path="src" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM0" target_path="src" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM3" target_path="src" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM3" target_path="src" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM4_FP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM4_FP" target_path="src" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM7_SP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM7_SP" target_path="src" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example/RTE" target_path="src" type="c_include">
        <files mask="RTE_Components.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example" target_path="src" type="configuration">
        <files mask="arm_sin_cos_example.ini"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example" target_path="src" type="project">
        <files mask="arm_sin_cos_example.uvoptx"/>
        <files mask="arm_sin_cos_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example" target_path="src" type="src">
        <files mask="arm_sin_cos_example_f32.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example" target_path="src" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example/RTE/Device/ARMCM0" target_path="src" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example/RTE/Device/ARMCM0" target_path="src" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example/RTE/Device/ARMCM3" target_path="src" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example/RTE/Device/ARMCM3" target_path="src" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example/RTE/Device/ARMCM4_FP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example/RTE/Device/ARMCM4_FP" target_path="src" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example/RTE/Device/ARMCM7_SP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example/RTE/Device/ARMCM7_SP" target_path="src" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example/RTE" target_path="src" type="c_include">
        <files mask="RTE_Components.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example" target_path="src" type="configuration">
        <files mask="arm_variance_example.ini"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example" target_path="src" type="project">
        <files mask="arm_variance_example.uvoptx"/>
        <files mask="arm_variance_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example" target_path="src" type="src">
        <files mask="arm_variance_example_f32.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/ARM" target_path="src" type="project">
        <files mask="arm_cortexM_math.uvoptx"/>
        <files mask="arm_cortexM_math.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/ARM" target_path="src" type="script">
        <files mask="arm_cortexM_math_Build.bat"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/BasicMathFunctions" target_path="src" type="src">
        <files mask="arm_abs_f32.c"/>
        <files mask="arm_abs_q15.c"/>
        <files mask="arm_abs_q31.c"/>
        <files mask="arm_abs_q7.c"/>
        <files mask="arm_add_f32.c"/>
        <files mask="arm_add_q15.c"/>
        <files mask="arm_add_q31.c"/>
        <files mask="arm_add_q7.c"/>
        <files mask="arm_dot_prod_f32.c"/>
        <files mask="arm_dot_prod_q15.c"/>
        <files mask="arm_dot_prod_q31.c"/>
        <files mask="arm_dot_prod_q7.c"/>
        <files mask="arm_mult_f32.c"/>
        <files mask="arm_mult_q15.c"/>
        <files mask="arm_mult_q31.c"/>
        <files mask="arm_mult_q7.c"/>
        <files mask="arm_negate_f32.c"/>
        <files mask="arm_negate_q15.c"/>
        <files mask="arm_negate_q31.c"/>
        <files mask="arm_negate_q7.c"/>
        <files mask="arm_offset_f32.c"/>
        <files mask="arm_offset_q15.c"/>
        <files mask="arm_offset_q31.c"/>
        <files mask="arm_offset_q7.c"/>
        <files mask="arm_scale_f32.c"/>
        <files mask="arm_scale_q15.c"/>
        <files mask="arm_scale_q31.c"/>
        <files mask="arm_scale_q7.c"/>
        <files mask="arm_shift_q15.c"/>
        <files mask="arm_shift_q31.c"/>
        <files mask="arm_shift_q7.c"/>
        <files mask="arm_sub_f32.c"/>
        <files mask="arm_sub_q15.c"/>
        <files mask="arm_sub_q31.c"/>
        <files mask="arm_sub_q7.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/CommonTables" target_path="src" type="src">
        <files mask="arm_common_tables.c"/>
        <files mask="arm_const_structs.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/ComplexMathFunctions" target_path="src" type="src">
        <files mask="arm_cmplx_conj_f32.c"/>
        <files mask="arm_cmplx_conj_q15.c"/>
        <files mask="arm_cmplx_conj_q31.c"/>
        <files mask="arm_cmplx_dot_prod_f32.c"/>
        <files mask="arm_cmplx_dot_prod_q15.c"/>
        <files mask="arm_cmplx_dot_prod_q31.c"/>
        <files mask="arm_cmplx_mag_f32.c"/>
        <files mask="arm_cmplx_mag_q15.c"/>
        <files mask="arm_cmplx_mag_q31.c"/>
        <files mask="arm_cmplx_mag_squared_f32.c"/>
        <files mask="arm_cmplx_mag_squared_q15.c"/>
        <files mask="arm_cmplx_mag_squared_q31.c"/>
        <files mask="arm_cmplx_mult_cmplx_f32.c"/>
        <files mask="arm_cmplx_mult_cmplx_q15.c"/>
        <files mask="arm_cmplx_mult_cmplx_q31.c"/>
        <files mask="arm_cmplx_mult_real_f32.c"/>
        <files mask="arm_cmplx_mult_real_q15.c"/>
        <files mask="arm_cmplx_mult_real_q31.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/ControllerFunctions" target_path="src" type="src">
        <files mask="arm_pid_init_f32.c"/>
        <files mask="arm_pid_init_q15.c"/>
        <files mask="arm_pid_init_q31.c"/>
        <files mask="arm_pid_reset_f32.c"/>
        <files mask="arm_pid_reset_q15.c"/>
        <files mask="arm_pid_reset_q31.c"/>
        <files mask="arm_sin_cos_f32.c"/>
        <files mask="arm_sin_cos_q31.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/FastMathFunctions" target_path="src" type="src">
        <files mask="arm_cos_f32.c"/>
        <files mask="arm_cos_q15.c"/>
        <files mask="arm_cos_q31.c"/>
        <files mask="arm_sin_f32.c"/>
        <files mask="arm_sin_q15.c"/>
        <files mask="arm_sin_q31.c"/>
        <files mask="arm_sqrt_q15.c"/>
        <files mask="arm_sqrt_q31.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/FilteringFunctions" target_path="src" type="src">
        <files mask="arm_biquad_cascade_df1_32x64_init_q31.c"/>
        <files mask="arm_biquad_cascade_df1_32x64_q31.c"/>
        <files mask="arm_biquad_cascade_df1_f32.c"/>
        <files mask="arm_biquad_cascade_df1_fast_q15.c"/>
        <files mask="arm_biquad_cascade_df1_fast_q31.c"/>
        <files mask="arm_biquad_cascade_df1_init_f32.c"/>
        <files mask="arm_biquad_cascade_df1_init_q15.c"/>
        <files mask="arm_biquad_cascade_df1_init_q31.c"/>
        <files mask="arm_biquad_cascade_df1_q15.c"/>
        <files mask="arm_biquad_cascade_df1_q31.c"/>
        <files mask="arm_biquad_cascade_df2T_f32.c"/>
        <files mask="arm_biquad_cascade_df2T_f64.c"/>
        <files mask="arm_biquad_cascade_df2T_init_f32.c"/>
        <files mask="arm_biquad_cascade_df2T_init_f64.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_f32.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_init_f32.c"/>
        <files mask="arm_conv_f32.c"/>
        <files mask="arm_conv_fast_opt_q15.c"/>
        <files mask="arm_conv_fast_q15.c"/>
        <files mask="arm_conv_fast_q31.c"/>
        <files mask="arm_conv_opt_q15.c"/>
        <files mask="arm_conv_opt_q7.c"/>
        <files mask="arm_conv_partial_f32.c"/>
        <files mask="arm_conv_partial_fast_opt_q15.c"/>
        <files mask="arm_conv_partial_fast_q15.c"/>
        <files mask="arm_conv_partial_fast_q31.c"/>
        <files mask="arm_conv_partial_opt_q15.c"/>
        <files mask="arm_conv_partial_opt_q7.c"/>
        <files mask="arm_conv_partial_q15.c"/>
        <files mask="arm_conv_partial_q31.c"/>
        <files mask="arm_conv_partial_q7.c"/>
        <files mask="arm_conv_q15.c"/>
        <files mask="arm_conv_q31.c"/>
        <files mask="arm_conv_q7.c"/>
        <files mask="arm_correlate_f32.c"/>
        <files mask="arm_correlate_fast_opt_q15.c"/>
        <files mask="arm_correlate_fast_q15.c"/>
        <files mask="arm_correlate_fast_q31.c"/>
        <files mask="arm_correlate_opt_q15.c"/>
        <files mask="arm_correlate_opt_q7.c"/>
        <files mask="arm_correlate_q15.c"/>
        <files mask="arm_correlate_q31.c"/>
        <files mask="arm_correlate_q7.c"/>
        <files mask="arm_fir_decimate_f32.c"/>
        <files mask="arm_fir_decimate_fast_q15.c"/>
        <files mask="arm_fir_decimate_fast_q31.c"/>
        <files mask="arm_fir_decimate_init_f32.c"/>
        <files mask="arm_fir_decimate_init_q15.c"/>
        <files mask="arm_fir_decimate_init_q31.c"/>
        <files mask="arm_fir_decimate_q15.c"/>
        <files mask="arm_fir_decimate_q31.c"/>
        <files mask="arm_fir_f32.c"/>
        <files mask="arm_fir_fast_q15.c"/>
        <files mask="arm_fir_fast_q31.c"/>
        <files mask="arm_fir_init_f32.c"/>
        <files mask="arm_fir_init_q15.c"/>
        <files mask="arm_fir_init_q31.c"/>
        <files mask="arm_fir_init_q7.c"/>
        <files mask="arm_fir_interpolate_f32.c"/>
        <files mask="arm_fir_interpolate_init_f32.c"/>
        <files mask="arm_fir_interpolate_init_q15.c"/>
        <files mask="arm_fir_interpolate_init_q31.c"/>
        <files mask="arm_fir_interpolate_q15.c"/>
        <files mask="arm_fir_interpolate_q31.c"/>
        <files mask="arm_fir_lattice_f32.c"/>
        <files mask="arm_fir_lattice_init_f32.c"/>
        <files mask="arm_fir_lattice_init_q15.c"/>
        <files mask="arm_fir_lattice_init_q31.c"/>
        <files mask="arm_fir_lattice_q15.c"/>
        <files mask="arm_fir_lattice_q31.c"/>
        <files mask="arm_fir_q15.c"/>
        <files mask="arm_fir_q31.c"/>
        <files mask="arm_fir_q7.c"/>
        <files mask="arm_fir_sparse_f32.c"/>
        <files mask="arm_fir_sparse_init_f32.c"/>
        <files mask="arm_fir_sparse_init_q15.c"/>
        <files mask="arm_fir_sparse_init_q31.c"/>
        <files mask="arm_fir_sparse_init_q7.c"/>
        <files mask="arm_fir_sparse_q15.c"/>
        <files mask="arm_fir_sparse_q31.c"/>
        <files mask="arm_fir_sparse_q7.c"/>
        <files mask="arm_iir_lattice_f32.c"/>
        <files mask="arm_iir_lattice_init_f32.c"/>
        <files mask="arm_iir_lattice_init_q15.c"/>
        <files mask="arm_iir_lattice_init_q31.c"/>
        <files mask="arm_iir_lattice_q15.c"/>
        <files mask="arm_iir_lattice_q31.c"/>
        <files mask="arm_lms_f32.c"/>
        <files mask="arm_lms_init_f32.c"/>
        <files mask="arm_lms_init_q15.c"/>
        <files mask="arm_lms_init_q31.c"/>
        <files mask="arm_lms_norm_f32.c"/>
        <files mask="arm_lms_norm_init_f32.c"/>
        <files mask="arm_lms_norm_init_q15.c"/>
        <files mask="arm_lms_norm_init_q31.c"/>
        <files mask="arm_lms_norm_q15.c"/>
        <files mask="arm_lms_norm_q31.c"/>
        <files mask="arm_lms_q15.c"/>
        <files mask="arm_lms_q31.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/GCC" target_path="src" type="project">
        <files mask="arm_cortexM_math.uvoptx"/>
        <files mask="arm_cortexM_math.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/GCC" target_path="src" type="script">
        <files mask="arm_cortexM_math_Build.bat"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/MatrixFunctions" target_path="src" type="src">
        <files mask="arm_mat_add_f32.c"/>
        <files mask="arm_mat_add_q15.c"/>
        <files mask="arm_mat_add_q31.c"/>
        <files mask="arm_mat_cmplx_mult_f32.c"/>
        <files mask="arm_mat_cmplx_mult_q15.c"/>
        <files mask="arm_mat_cmplx_mult_q31.c"/>
        <files mask="arm_mat_init_f32.c"/>
        <files mask="arm_mat_init_q15.c"/>
        <files mask="arm_mat_init_q31.c"/>
        <files mask="arm_mat_inverse_f32.c"/>
        <files mask="arm_mat_inverse_f64.c"/>
        <files mask="arm_mat_mult_f32.c"/>
        <files mask="arm_mat_mult_fast_q15.c"/>
        <files mask="arm_mat_mult_fast_q31.c"/>
        <files mask="arm_mat_mult_q15.c"/>
        <files mask="arm_mat_mult_q31.c"/>
        <files mask="arm_mat_scale_f32.c"/>
        <files mask="arm_mat_scale_q15.c"/>
        <files mask="arm_mat_scale_q31.c"/>
        <files mask="arm_mat_sub_f32.c"/>
        <files mask="arm_mat_sub_q15.c"/>
        <files mask="arm_mat_sub_q31.c"/>
        <files mask="arm_mat_trans_f32.c"/>
        <files mask="arm_mat_trans_q15.c"/>
        <files mask="arm_mat_trans_q31.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/StatisticsFunctions" target_path="src" type="src">
        <files mask="arm_max_f32.c"/>
        <files mask="arm_max_q15.c"/>
        <files mask="arm_max_q31.c"/>
        <files mask="arm_max_q7.c"/>
        <files mask="arm_mean_f32.c"/>
        <files mask="arm_mean_q15.c"/>
        <files mask="arm_mean_q31.c"/>
        <files mask="arm_mean_q7.c"/>
        <files mask="arm_min_f32.c"/>
        <files mask="arm_min_q15.c"/>
        <files mask="arm_min_q31.c"/>
        <files mask="arm_min_q7.c"/>
        <files mask="arm_power_f32.c"/>
        <files mask="arm_power_q15.c"/>
        <files mask="arm_power_q31.c"/>
        <files mask="arm_power_q7.c"/>
        <files mask="arm_rms_f32.c"/>
        <files mask="arm_rms_q15.c"/>
        <files mask="arm_rms_q31.c"/>
        <files mask="arm_std_f32.c"/>
        <files mask="arm_std_q15.c"/>
        <files mask="arm_std_q31.c"/>
        <files mask="arm_var_f32.c"/>
        <files mask="arm_var_q15.c"/>
        <files mask="arm_var_q31.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/SupportFunctions" target_path="src" type="src">
        <files mask="arm_copy_f32.c"/>
        <files mask="arm_copy_q15.c"/>
        <files mask="arm_copy_q31.c"/>
        <files mask="arm_copy_q7.c"/>
        <files mask="arm_fill_f32.c"/>
        <files mask="arm_fill_q15.c"/>
        <files mask="arm_fill_q31.c"/>
        <files mask="arm_fill_q7.c"/>
        <files mask="arm_float_to_q15.c"/>
        <files mask="arm_float_to_q31.c"/>
        <files mask="arm_float_to_q7.c"/>
        <files mask="arm_q15_to_float.c"/>
        <files mask="arm_q15_to_q31.c"/>
        <files mask="arm_q15_to_q7.c"/>
        <files mask="arm_q31_to_float.c"/>
        <files mask="arm_q31_to_q15.c"/>
        <files mask="arm_q31_to_q7.c"/>
        <files mask="arm_q7_to_float.c"/>
        <files mask="arm_q7_to_q15.c"/>
        <files mask="arm_q7_to_q31.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/TransformFunctions" target_path="src" type="src">
        <files mask="arm_bitreversal.c"/>
        <files mask="arm_cfft_f32.c"/>
        <files mask="arm_cfft_q15.c"/>
        <files mask="arm_cfft_q31.c"/>
        <files mask="arm_cfft_radix2_f32.c"/>
        <files mask="arm_cfft_radix2_init_f32.c"/>
        <files mask="arm_cfft_radix2_init_q15.c"/>
        <files mask="arm_cfft_radix2_init_q31.c"/>
        <files mask="arm_cfft_radix2_q15.c"/>
        <files mask="arm_cfft_radix2_q31.c"/>
        <files mask="arm_cfft_radix4_f32.c"/>
        <files mask="arm_cfft_radix4_init_f32.c"/>
        <files mask="arm_cfft_radix4_init_q15.c"/>
        <files mask="arm_cfft_radix4_init_q31.c"/>
        <files mask="arm_cfft_radix4_q15.c"/>
        <files mask="arm_cfft_radix4_q31.c"/>
        <files mask="arm_cfft_radix8_f32.c"/>
        <files mask="arm_dct4_f32.c"/>
        <files mask="arm_dct4_init_f32.c"/>
        <files mask="arm_dct4_init_q15.c"/>
        <files mask="arm_dct4_init_q31.c"/>
        <files mask="arm_dct4_q15.c"/>
        <files mask="arm_dct4_q31.c"/>
        <files mask="arm_rfft_f32.c"/>
        <files mask="arm_rfft_fast_f32.c"/>
        <files mask="arm_rfft_fast_init_f32.c"/>
        <files mask="arm_rfft_init_f32.c"/>
        <files mask="arm_rfft_init_q15.c"/>
        <files mask="arm_rfft_init_q31.c"/>
        <files mask="arm_rfft_q15.c"/>
        <files mask="arm_rfft_q31.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/TransformFunctions" target_path="src" type="asm_include">
        <files mask="arm_bitreversal2.S"/>
      </source>
    </component>
    <component id="platform.CMSIS_DSP_Lib.arm_cortexM7bfdp_math.MIMXRT1064" name="arm_cortexM7bfdp_math" version="1.5.2" devices="MIMXRT1064xxxxA" user_visible="true" type="CMSIS_driver">
      <source toolchain="mdk" path="CMSIS/Lib/ARM" target_path="libs" type="lib">
        <files mask="arm_cortexM7bfdp_math.lib"/>
      </source>
    </component>
    <component id="platform.CMSIS_DSP_Lib.arm_cortexM7bfsp_math.MIMXRT1064" name="arm_cortexM7bfsp_math" version="1.5.2" devices="MIMXRT1064xxxxA" user_visible="true" type="CMSIS_driver">
      <source toolchain="mdk" path="CMSIS/Lib/ARM" target_path="libs" type="lib">
        <files mask="arm_cortexM7bfsp_math.lib"/>
      </source>
    </component>
    <component id="platform.CMSIS_DSP_Lib.arm_cortexM7lfdp_math.MIMXRT1064" name="arm_cortexM7lfdp_math" version="1.5.2" devices="MIMXRT1064xxxxA" user_visible="true" type="CMSIS_driver">
      <source toolchain="mdk" path="CMSIS/Lib/ARM" target_path="libs" type="lib">
        <files mask="arm_cortexM7lfdp_math.lib"/>
      </source>
      <source toolchain="armgcc mcuxpresso" path="CMSIS/Lib/GCC" target_path="libs" type="lib">
        <files mask="libarm_cortexM7lfdp_math.a"/>
      </source>
    </component>
    <component id="platform.CMSIS_DSP_Lib.arm_cortexM7lfsp_math.MIMXRT1064" name="arm_cortexM7lfsp_math" version="1.5.2" devices="MIMXRT1064xxxxA" user_visible="true" type="CMSIS_driver">
      <source toolchain="mdk" path="CMSIS/Lib/ARM" target_path="libs" type="lib">
        <files mask="arm_cortexM7lfsp_math.lib"/>
      </source>
      <source toolchain="armgcc mcuxpresso" path="CMSIS/Lib/GCC" target_path="libs" type="lib">
        <files mask="libarm_cortexM7lfsp_math.a"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver" name="CMSIS_Driver" version="5.1.1" user_visible="true" type="CMSIS">
      <source path="CMSIS/Driver/DriverTemplates" target_path="src" type="src">
        <files mask="Driver_CAN.c"/>
        <files mask="Driver_ETH_MAC.c"/>
        <files mask="Driver_ETH_PHY.c"/>
        <files mask="Driver_Flash.c"/>
        <files mask="Driver_I2C.c"/>
        <files mask="Driver_MCI.c"/>
        <files mask="Driver_SAI.c"/>
        <files mask="Driver_SPI.c"/>
        <files mask="Driver_Storage.c"/>
        <files mask="Driver_USART.c"/>
        <files mask="Driver_USBD.c"/>
        <files mask="Driver_USBH.c"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.CAN_CMSISInclude.MIMXRT1064" name="CAN" version="1.2.0" devices="MIMXRT1064xxxxA" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1064" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_CAN.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1064" name="Common" version="5.1.1" devices="MIMXRT1064xxxxA" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_Common.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.MIMXRT1064" name="Ethernet" version="2.1.0" devices="MIMXRT1064xxxxA" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1064" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_ETH.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.Ethernet_MAC_CMSISInclude.MIMXRT1064" name="Ethernet_MAC" version="2.1.0" devices="MIMXRT1064xxxxA" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.MIMXRT1064" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_ETH_MAC.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.Ethernet_PHY_CMSISInclude.MIMXRT1064" name="Ethernet_PHY" version="2.1.0" devices="MIMXRT1064xxxxA" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.MIMXRT1064" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_ETH_PHY.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.Flash_CMSISInclude.MIMXRT1064" name="Flash" version="2.1.0" devices="MIMXRT1064xxxxA" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1064" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_Flash.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT1064" name="I2C" version="2.3.0" devices="MIMXRT1064xxxxA" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1064" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_I2C.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.MCI_CMSISInclude.MIMXRT1064" name="MCI" version="2.3.0" devices="MIMXRT1064xxxxA" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1064" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_MCI.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.NAND_CMSISInclude.MIMXRT1064" name="NAND" version="2.3.0" devices="MIMXRT1064xxxxA" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1064" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_NAND.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.SAI_CMSISInclude.MIMXRT1064" name="SAI" version="1.1.0" devices="MIMXRT1064xxxxA" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1064" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_SAI.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT1064" name="SPI" version="2.2.0" devices="MIMXRT1064xxxxA" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1064" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_SPI.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.USART_CMSISInclude.MIMXRT1064" name="USART" version="2.3.0" devices="MIMXRT1064xxxxA" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1064" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_USART.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.USB_CMSISInclude.MIMXRT1064" name="USB" version="2.2.0" devices="MIMXRT1064xxxxA" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1064" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_USB.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.USB_Device_CMSISInclude.MIMXRT1064" name="USB_Device" version="2.2.0" devices="MIMXRT1064xxxxA" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.USB_CMSISInclude.MIMXRT1064" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_USBD.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.USB_Host_CMSISInclude.MIMXRT1064" name="USB_Host" version="2.2.0" devices="MIMXRT1064xxxxA" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.USB_CMSISInclude.MIMXRT1064" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_USBH.h"/>
      </source>
    </component>
    <component id="platform.Include_common.MIMXRT1064" name="CMSIS_Include_common" version="5.1.1" devices="MIMXRT1064xxxxA" user_visible="true" type="CMSIS_Include">
      <source path="CMSIS/Include" target_path="CMSIS" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_math.h"/>
        <files mask="cmsis_armcc.h"/>
        <files mask="cmsis_armclang.h"/>
        <files mask="cmsis_compiler.h"/>
        <files mask="cmsis_gcc.h"/>
        <files mask="cmsis_iccarm.h"/>
        <files mask="cmsis_version.h"/>
        <files mask="core_armv8mbl.h"/>
        <files mask="core_armv8mml.h"/>
        <files mask="mpu_armv7.h"/>
        <files mask="mpu_armv8.h"/>
      </source>
    </component>
    <component id="platform.Include_core_cm7.MIMXRT1064" name="CMSIS_Include_core_cm7" version="5.1.1" devices="MIMXRT1064xxxxA" dependency="platform.Include_common.MIMXRT1064" user_visible="true" type="CMSIS_Include">
      <source path="CMSIS/Include" target_path="CMSIS" type="c_include">
        <files mask="core_cm7.h"/>
      </source>
    </component>
    <component id="project_template.MIMXRT1064.MIMXRT1064" name="MIMXRT1064" version="1.0.0" devices="MIMXRT1064xxxxA" dependency="component.lists.MIMXRT1064 component.lpuart_adapter.MIMXRT1064 component.serial_manager.MIMXRT1064 component.serial_manager_uart.MIMXRT1064 device.MIMXRT1064_CMSIS.MIMXRT1064 device.MIMXRT1064_startup.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064 platform.drivers.igpio.MIMXRT1064 platform.drivers.iomuxc.MIMXRT1064 platform.drivers.lpuart.MIMXRT1064 utility.debug_console.MIMXRT1064" category="Board Support/SDK Project Template" user_visible="true" type="project_template">
      <source path="devices/MIMXRT1064/project_template" target_path="board" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="peripherals.c"/>
        <files mask="pin_mux.c"/>
      </source>
      <source path="devices/MIMXRT1064/project_template" target_path="board" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="peripherals.h"/>
        <files mask="pin_mux.h"/>
      </source>
    </component>
    <component id="RTE_Device.MIMXRT1064" name="RTE_Device" version="1.0.0" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064 platform.drivers.dmamux.MIMXRT1064 platform.drivers.edma.MIMXRT1064" category="Device/SDK Project Template" user_visible="true" type="project_template">
      <source path="devices/MIMXRT1064/template" target_path="board" type="c_include">
        <files mask="RTE_Device.h"/>
      </source>
    </component>
    <component id="tools.MIMXRT1064" name="cmake_toolchain" version="1.0.0" devices="MIMXRT1064xxxxA" user_visible="true" type="other">
      <source path="tools/cmake_toolchain_files" target_path="src" type="script">
        <files mask="armgcc.cmake"/>
        <files mask="armgcc_force_cpp.cmake"/>
        <files mask="xcc.cmake"/>
      </source>
    </component>
    <component id="component.codec_i2c.MIMXRT1064" name="codec_i2c" version="2.1.0" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/codec/i2c" target_path="codec" type="src">
        <files mask="fsl_codec_i2c.c"/>
      </source>
      <source path="components/codec/i2c" target_path="codec" type="c_include">
        <files mask="fsl_codec_i2c.h"/>
      </source>
    </component>
    <component id="component.lists.MIMXRT1064" name="lists" version="1.0.0" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/lists" target_path="component/lists" type="src">
        <files mask="generic_list.c"/>
      </source>
      <source path="components/lists" target_path="component/lists" type="c_include">
        <files mask="generic_list.h"/>
      </source>
    </component>
    <component id="component.lpi2c_adapter.MIMXRT1064" name="lpi2c_adapter" version="1.0.0" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064 platform.drivers.lpi2c.MIMXRT1064" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/i2c" target_path="component/i2c" type="c_include">
        <files mask="i2c.h"/>
      </source>
      <source path="components/i2c" target_path="component/i2c" type="src">
        <files mask="lpi2c_adapter.c"/>
      </source>
    </component>
    <component id="component.lpuart_adapter.MIMXRT1064" name="lpuart_adapter" version="1.0.0" full_name="lpuart_adapter" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064 platform.drivers.lpuart.MIMXRT1064" user_visible="true" type="utilities">
      <source path="components/uart" target_path="component/uart" type="src">
        <files mask="lpuart_adapter.c"/>
      </source>
      <source path="components/uart" target_path="component/uart" type="c_include">
        <files mask="uart.h"/>
      </source>
    </component>
    <component id="component.serial_manager.MIMXRT1064" name="serial_manager" version="1.0.0" full_name="Serial Manager" devices="MIMXRT1064xxxxA" dependency="component.lists.MIMXRT1064 device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="utilities">
      <source path="components/serial_manager" target_path="component/serial_manager" type="src">
        <files mask="serial_manager.c"/>
      </source>
      <source path="components/serial_manager" target_path="component/serial_manager" type="c_include">
        <files mask="serial_manager.h"/>
        <files mask="serial_port_internal.h"/>
      </source>
    </component>
    <component id="component.serial_manager_uart.MIMXRT1064" name="serial_manager_uart" version="1.0.0" full_name="Serial Manager uart" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064 platform.drivers.lpuart.MIMXRT1064" user_visible="true" type="utilities">
      <source path="components/serial_manager" target_path="component/serial_manager" type="src">
        <files mask="serial_port_uart.c"/>
      </source>
      <source path="components/serial_manager" target_path="component/serial_manager" type="c_include">
        <files mask="serial_port_uart.h"/>
      </source>
    </component>
    <component id="component.serial_manager_usb_cdc.MIMXRT1064" name="serial_manager_usb_cdc" version="1.0.0" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 middleware.usb.device.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" category="Device/SDK Utilities" user_visible="true" type="other">
      <source path="components/serial_manager" target_path="component/serial_manager" type="src">
        <files mask="serial_port_usb.c"/>
      </source>
      <source path="components/serial_manager" target_path="component/serial_manager" type="c_include">
        <files mask="serial_port_usb.h"/>
      </source>
      <source path="components/serial_manager/usb_cdc_adapter" target_path="component/serial_manager/usb_cdc_adapter" type="src">
        <files mask="usb_device_descriptor.c"/>
        <files mask="usb_device_cdc_acm.c"/>
        <files mask="usb_device_class.c"/>
        <files mask="usb_device_ch9.c"/>
      </source>
      <source path="components/serial_manager/usb_cdc_adapter" target_path="component/serial_manager/usb_cdc_adapter" type="c_include">
        <files mask="usb_device_descriptor.h"/>
        <files mask="usb_device_cdc_acm.h"/>
        <files mask="usb_device_class.h"/>
        <files mask="usb_device_ch9.h"/>
      </source>
      <source path="components/serial_manager/usb_cdc_adapter/inf" target_path="src" type="other">
        <files mask="cdc.cat"/>
      </source>
      <source path="components/serial_manager/usb_cdc_adapter/inf" target_path="src" type="configuration">
        <files mask="fsl_ucwxp.inf"/>
      </source>
    </component>
    <component id="component.serial_manager_usb_cdc_device_config.evkmimxrt1064.MIMXRT1064" name="evkmimxrt1064" version="1.0.0" devices="MIMXRT1064xxxxA" category="Device/SDK Utilities" user_visible="true" type="other">
      <source path="boards/evkmimxrt1064/component_examples/config" target_path="component/serial_manager/usb_cdc_adapter" type="c_include">
        <files mask="usb_device_config.h"/>
      </source>
    </component>
    <component id="component.wm8960_adapter.MIMXRT1064" name="wm8960_adapter" version="2.1.0" devices="MIMXRT1064xxxxA" dependency="component.codec_i2c.MIMXRT1064 device.MIMXRT1064_CMSIS.MIMXRT1064 driver.codec.MIMXRT1064 driver.wm8960.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/codec/port/wm8960" target_path="codec" type="src">
        <files mask="fsl_codec_adapter.c"/>
      </source>
    </component>
    <component id="device.MIMXRT1064_CMSIS.MIMXRT1064" name="MIMXRT1064_CMSIS" version="1.0.0" devices="MIMXRT1064xxxxA" dependency="platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064" user_visible="true" type="CMSIS_Include">
      <source path="devices/MIMXRT1064" target_path="device" type="c_include">
        <files mask="MIMXRT1064.h"/>
        <files mask="MIMXRT1064_features.h"/>
        <files mask="fsl_device_registers.h"/>
        <files mask="system_MIMXRT1064.h"/>
      </source>
      <source path="devices/MIMXRT1064" target_path="device" type="src">
        <files mask="system_MIMXRT1064.c"/>
      </source>
    </component>
    <component id="device.MIMXRT1064_debugger.MIMXRT1064" name="MIMXRT1064_debugger" version="1.0.0" devices="MIMXRT1064xxxxA" user_visible="true" type="debugger">
      <source path="devices/MIMXRT1064" target_path="src" type="xml">
        <files mask="MIMXRT1064.xml"/>
      </source>
    </component>
    <component id="platform.devices.MIMXRT1064_linker.MIMXRT1064" name="MIMXRT1064_linker" version="1.0.0" devices="MIMXRT1064xxxxA" user_visible="true" type="linker">
      <source toolchain="mdk" path="devices/MIMXRT1064/arm" target_path="src" type="linker">
        <files mask="MIMXRT1064xxxxx_flexspi_nor.scf"/>
        <files mask="MIMXRT1064xxxxx_flexspi_nor_sdram.scf"/>
        <files mask="MIMXRT1064xxxxx_ram.scf"/>
        <files mask="MIMXRT1064xxxxx_sdram.scf"/>
        <files mask="MIMXRT1064xxxxx_sdram_txt.scf"/>
      </source>
      <source toolchain="armgcc" path="devices/MIMXRT1064/gcc" target_path="src" type="linker">
        <files mask="MIMXRT1064xxxxx_flexspi_nor.ld"/>
        <files mask="MIMXRT1064xxxxx_flexspi_nor_sdram.ld"/>
        <files mask="MIMXRT1064xxxxx_ram.ld"/>
        <files mask="MIMXRT1064xxxxx_sdram.ld"/>
        <files mask="MIMXRT1064xxxxx_sdram_txt.ld"/>
      </source>
      <source toolchain="iar" path="devices/MIMXRT1064/iar" target_path="src" type="linker">
        <files mask="MIMXRT1064xxxxx_flexspi_nor.icf"/>
        <files mask="MIMXRT1064xxxxx_flexspi_nor_sdram.icf"/>
        <files mask="MIMXRT1064xxxxx_ram.icf"/>
        <files mask="MIMXRT1064xxxxx_sdram.icf"/>
        <files mask="MIMXRT1064xxxxx_sdram_txt.icf"/>
      </source>
    </component>
    <component id="device.MIMXRT1064_startup.MIMXRT1064" name="MIMXRT1064_startup" version="1.0.0" devices="MIMXRT1064xxxxA" category="Device/Startup" user_visible="true" type="startup">
      <source toolchain="mdk" path="devices/MIMXRT1064/arm" target_path="startup" type="asm_include">
        <files mask="startup_MIMXRT1064.s"/>
      </source>
      <source toolchain="armgcc" path="devices/MIMXRT1064/gcc" target_path="startup" type="asm_include">
        <files mask="startup_MIMXRT1064.S"/>
      </source>
      <source toolchain="iar" path="devices/MIMXRT1064/iar" target_path="startup" type="asm_include">
        <files mask="startup_MIMXRT1064.s"/>
      </source>
      <source toolchain="mcuxpresso" path="devices/MIMXRT1064/mcuxpresso" target_path="startup" type="src_c">
        <files mask="startup_mimxrt1064.c"/>
      </source>
      <source toolchain="mcuxpresso" path="devices/MIMXRT1064/mcuxpresso" target_path="startup" type="src_cpp">
        <files mask="startup_mimxrt1064.cpp"/>
      </source>
    </component>
    <component id="docs.MIMXRT1064.MIMXRT1064" name="MIMXRT1064" version="1.0.0" devices="MIMXRT1064xxxxA" user_visible="true" type="documentation">
      <source path="docs" target_path="src" type="doc">
        <files mask="Getting Started with MCUXpresso SDK for MIMXRT1064.pdf"/>
        <files mask="MCUXpresso SDK Release Notes Supporting EVK-MIMXRT1064.pdf"/>
      </source>
    </component>
    <component id="docs.images.MIMXRT1064" name="images" version="1.0.0" devices="MIMXRT1064xxxxA" user_visible="true" type="documentation">
      <source path="docs/images" target_path="src" type="image">
        <files mask="EVK-MIMXRT1064-AGM01.gif"/>
        <files mask="EVK-MIMXRT1064.gif"/>
        <files mask="device.jpg"/>
      </source>
    </component>
    <component id="platform.drivers.adc_12b1msps_sar.MIMXRT1064" name="adc_12b1msps_sar" brief="ADC Driver" version="2.0.2" full_name="ADC Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_adc.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_adc.h"/>
      </source>
    </component>
    <component id="platform.drivers.adc_etc.MIMXRT1064" name="adc_etc" brief="ADC_ETC Driver" version="2.0.1" full_name="ADC_ETC Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_adc_etc.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_adc_etc.h"/>
      </source>
    </component>
    <component id="platform.drivers.aipstz.MIMXRT1064" name="aipstz" brief="aipstz Driver" version="2.0.0" full_name="AIPSTZ Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_aipstz.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_aipstz.h"/>
      </source>
    </component>
    <component id="platform.drivers.aoi.MIMXRT1064" name="aoi" brief="AOI Driver" version="2.0.0" full_name="AOI Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_aoi.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_aoi.h"/>
      </source>
    </component>
    <component id="platform.drivers.bee.MIMXRT1064" name="bee" brief="BEE Driver" version="2.0.0" full_name="BEE Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_bee.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_bee.h"/>
      </source>
    </component>
    <component id="platform.drivers.cache_armv7_m7.MIMXRT1064" name="cache" brief="CACHE Driver" version="2.0.1" full_name="CACHE Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_cache.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_cache.h"/>
      </source>
    </component>
    <component id="driver.camera-common.MIMXRT1064" name="camera-common" version="1.0.0" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 driver.video-common.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/video/camera" target_path="video" type="c_include">
        <files mask="fsl_camera.h"/>
      </source>
    </component>
    <component id="driver.camera-device-common.MIMXRT1064" name="camera-device-common" version="1.0.0" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 driver.camera-common.MIMXRT1064 driver.video-common.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/video/camera/device" target_path="video" type="c_include">
        <files mask="fsl_camera_device.h"/>
      </source>
    </component>
    <component id="driver.camera-device-mt9m114.MIMXRT1064" name="camera-device-mt9m114" version="1.0.0" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 driver.camera-common.MIMXRT1064 driver.camera-device-common.MIMXRT1064 driver.video-common.MIMXRT1064 driver.video-i2c.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/video/camera/device/mt9m114" target_path="video" type="src">
        <files mask="fsl_mt9m114.c"/>
      </source>
      <source path="components/video/camera/device/mt9m114" target_path="video" type="c_include">
        <files mask="fsl_mt9m114.h"/>
      </source>
    </component>
    <component id="driver.camera-device-ov7725.MIMXRT1064" name="camera-device-ov7725" version="1.0.0" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 driver.camera-common.MIMXRT1064 driver.camera-device-common.MIMXRT1064 driver.camera-device-sccb.MIMXRT1064 driver.video-common.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/video/camera/device/ov7725" target_path="video" type="src">
        <files mask="fsl_ov7725.c"/>
      </source>
      <source path="components/video/camera/device/ov7725" target_path="video" type="c_include">
        <files mask="fsl_ov7725.h"/>
      </source>
    </component>
    <component id="driver.camera-device-sccb.MIMXRT1064" name="camera-device-sccb" version="1.0.0" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/video/camera/device/sccb" target_path="video" type="src">
        <files mask="fsl_sccb.c"/>
      </source>
      <source path="components/video/camera/device/sccb" target_path="video" type="c_include">
        <files mask="fsl_sccb.h"/>
      </source>
    </component>
    <component id="driver.camera-receiver-common.MIMXRT1064" name="camera-receiver-common" version="1.0.0" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 driver.camera-common.MIMXRT1064 driver.video-common.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/video/camera/receiver" target_path="video" type="c_include">
        <files mask="fsl_camera_receiver.h"/>
      </source>
    </component>
    <component id="driver.camera-receiver-csi.MIMXRT1064" name="camera-receiver-csi" version="1.0.0" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 driver.camera-common.MIMXRT1064 driver.camera-receiver-common.MIMXRT1064 driver.video-common.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064 platform.drivers.csi.MIMXRT1064" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/video/camera/receiver/csi" target_path="video" type="src">
        <files mask="fsl_csi_camera_adapter.c"/>
      </source>
      <source path="components/video/camera/receiver/csi" target_path="video" type="c_include">
        <files mask="fsl_csi_camera_adapter.h"/>
      </source>
    </component>
    <component id="platform.drivers.clock.MIMXRT1064" name="clock" brief="Clock Driver" version="2.1.0" full_name="Clock Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_clock.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_clock.h"/>
      </source>
    </component>
    <component id="platform.drivers.cmp.MIMXRT1064" name="cmp" brief="CMP Driver" version="2.0.1" full_name="CMP Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_cmp.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_cmp.h"/>
      </source>
    </component>
    <component id="platform.drivers.lpi2c_cmsis.MIMXRT1064" name="lpi2c_cmsis" brief="LPI2C CMSIS Driver" version="2.0.0" devices="MIMXRT1064xxxxA" dependency="RTE_Device.MIMXRT1064 device.MIMXRT1064_CMSIS.MIMXRT1064 platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064 platform.drivers.dmamux.MIMXRT1064 platform.drivers.edma.MIMXRT1064 platform.drivers.lpi2c.MIMXRT1064 platform.drivers.lpi2c_edma.MIMXRT1064" user_visible="true" type="CMSIS_driver">
      <source path="devices/MIMXRT1064/cmsis_drivers" target_path="drivers" type="src">
        <files mask="fsl_lpi2c_cmsis.c"/>
      </source>
      <source path="devices/MIMXRT1064/cmsis_drivers" target_path="drivers" type="c_include">
        <files mask="fsl_lpi2c_cmsis.h"/>
      </source>
    </component>
    <component id="platform.drivers.lpspi_cmsis.MIMXRT1064" name="lpspi_cmsis" brief="LPSPI CMSIS Driver" version="2.0.0" devices="MIMXRT1064xxxxA" dependency="RTE_Device.MIMXRT1064 device.MIMXRT1064_CMSIS.MIMXRT1064 platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064 platform.drivers.dmamux.MIMXRT1064 platform.drivers.edma.MIMXRT1064 platform.drivers.lpspi.MIMXRT1064 platform.drivers.lpspi_edma.MIMXRT1064" user_visible="true" type="CMSIS_driver">
      <source path="devices/MIMXRT1064/cmsis_drivers" target_path="drivers" type="src">
        <files mask="fsl_lpspi_cmsis.c"/>
      </source>
      <source path="devices/MIMXRT1064/cmsis_drivers" target_path="drivers" type="c_include">
        <files mask="fsl_lpspi_cmsis.h"/>
      </source>
    </component>
    <component id="platform.drivers.lpuart_cmsis_edma.MIMXRT1064" name="lpuart_cmsis" brief="LPUART CMSIS Driver" version="2.0.1" devices="MIMXRT1064xxxxA" dependency="RTE_Device.MIMXRT1064 device.MIMXRT1064_CMSIS.MIMXRT1064 platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.USART_CMSISInclude.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064 platform.drivers.dmamux.MIMXRT1064 platform.drivers.edma.MIMXRT1064 platform.drivers.lpuart.MIMXRT1064 platform.drivers.lpuart_edma.MIMXRT1064" user_visible="true" type="CMSIS_driver">
      <source path="devices/MIMXRT1064/cmsis_drivers" target_path="drivers" type="src">
        <files mask="fsl_lpuart_cmsis.c"/>
      </source>
      <source path="devices/MIMXRT1064/cmsis_drivers" target_path="drivers" type="c_include">
        <files mask="fsl_lpuart_cmsis.h"/>
      </source>
    </component>
    <component id="driver.codec.MIMXRT1064" name="codec" version="2.1.0" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/codec" target_path="codec" type="src">
        <files mask="fsl_codec_common.c"/>
      </source>
      <source path="components/codec" target_path="codec" type="c_include">
        <files mask="fsl_codec_common.h"/>
      </source>
      <source path="components/codec/port" target_path="codec" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
    </component>
    <component id="platform.drivers.common.MIMXRT1064" name="common" brief="COMMON Driver" version="2.1.0" full_name="COMMON Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_common.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_common.h"/>
      </source>
    </component>
    <component id="platform.drivers.csi.MIMXRT1064" name="csi" brief="CSI Driver" version="2.0.3" full_name="CSI Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_csi.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_csi.h"/>
      </source>
    </component>
    <component id="platform.drivers.dcdc_1.MIMXRT1064" name="dcdc_1" brief="DCDC Driver" version="2.0.0" full_name="DCDC Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_dcdc.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_dcdc.h"/>
      </source>
    </component>
    <component id="platform.drivers.dcp.MIMXRT1064" name="dcp" brief="DCP Driver" version="2.1.1" full_name="DCP Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_dcp.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_dcp.h"/>
      </source>
    </component>
    <component id="platform.drivers.dmamux.MIMXRT1064" name="dmamux" brief="DMAMUX Driver" version="2.0.2" full_name="DMAMUX Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_dmamux.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_dmamux.h"/>
      </source>
    </component>
    <component id="platform.drivers.edma.MIMXRT1064" name="edma" brief="EDMA Driver" version="2.1.8" full_name="EDMA Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064 platform.drivers.dmamux.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_edma.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_edma.h"/>
      </source>
    </component>
    <component id="platform.drivers.elcdif.MIMXRT1064" name="elcdif" brief="ELCDIF Driver" version="2.0.1" full_name="ELCDIF Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_elcdif.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_elcdif.h"/>
      </source>
    </component>
    <component id="platform.drivers.enc.MIMXRT1064" name="enc" brief="ENC Driver" version="2.0.0" full_name="ENC Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_enc.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_enc.h"/>
      </source>
    </component>
    <component id="platform.drivers.enet.MIMXRT1064" name="enet" brief="ENET Driver" version="2.2.4" full_name="ENET Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_enet.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_enet.h"/>
      </source>
    </component>
    <component id="platform.drivers.ewm.MIMXRT1064" name="ewm" brief="EWM Driver" version="2.0.1" full_name="EWM Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_ewm.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_ewm.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexcan.MIMXRT1064" name="flexcan" brief="FLEXCAN Driver" version="2.4.0" full_name="FLEXCAN Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_flexcan.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_flexcan.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexio.MIMXRT1064" name="flexio" brief="FLEXIO Driver" version="2.0.2" full_name="FLEXIO Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_flexio.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_flexio.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexio_camera.MIMXRT1064" name="flexio_camera" brief="FLEXIO Driver" version="2.1.2" full_name="FLEXIO CAMERA Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064 platform.drivers.flexio.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_flexio_camera.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_flexio_camera.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexio_camera_edma.MIMXRT1064" name="flexio_camera_edma" brief="FLEXIO CAMERA EDMA Driver" version="2.1.2" full_name="FLEXIO Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064 platform.drivers.dmamux.MIMXRT1064 platform.drivers.edma.MIMXRT1064 platform.drivers.flexio.MIMXRT1064 platform.drivers.flexio_camera.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_flexio_camera_edma.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_flexio_camera_edma.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexio_i2c_master.MIMXRT1064" name="flexio_i2c_master" brief="FLEXIO I2C Driver" version="2.1.8" full_name="FLEXIO I2C Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064 platform.drivers.flexio.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_flexio_i2c_master.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_flexio_i2c_master.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexio_i2s.MIMXRT1064" name="flexio_i2s" brief="FLEXIO I2S Driver" version="2.1.5" full_name="FLEXIO I2S Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064 platform.drivers.flexio.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_flexio_i2s.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_flexio_i2s.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexio_i2s_edma.MIMXRT1064" name="flexio_i2s_edma" brief="FLEXIO I2S EDMA Driver" version="2.1.5" full_name="FLEXIO I2S EDMA Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064 platform.drivers.dmamux.MIMXRT1064 platform.drivers.edma.MIMXRT1064 platform.drivers.flexio.MIMXRT1064 platform.drivers.flexio_i2s.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_flexio_i2s_edma.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_flexio_i2s_edma.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexio_mculcd.MIMXRT1064" name="flexio_mculcd" brief="FLEXIO MCULCD Driver" version="2.0.2" full_name="FLEXIO MCULCD Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064 platform.drivers.flexio.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_flexio_mculcd.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_flexio_mculcd.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexio_mculcd_edma.MIMXRT1064" name="flexio_mculcd_edma" brief="FLEXIO MCULCD EDMA Driver" version="2.0.2" full_name="FLEXIO MCULCD EDMA Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064 platform.drivers.dmamux.MIMXRT1064 platform.drivers.edma.MIMXRT1064 platform.drivers.flexio.MIMXRT1064 platform.drivers.flexio_mculcd.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_flexio_mculcd_edma.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_flexio_mculcd_edma.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexio_spi.MIMXRT1064" name="flexio_spi" brief="FLEXIO SPI Driver" version="2.1.3" full_name="FLEXIO SPI Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064 platform.drivers.flexio.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_flexio_spi.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_flexio_spi.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexio_spi_edma.MIMXRT1064" name="flexio_spi_edma" brief="FLEXIO SPI EDMA Driver" version="2.1.3" full_name="FLEXIO SPI EDMA Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064 platform.drivers.dmamux.MIMXRT1064 platform.drivers.edma.MIMXRT1064 platform.drivers.flexio.MIMXRT1064 platform.drivers.flexio_spi.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_flexio_spi_edma.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_flexio_spi_edma.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexio_uart.MIMXRT1064" name="flexio_uart" brief="FLEXIO UART Driver" version="2.1.5" full_name="FLEXIO UART Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064 platform.drivers.flexio.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_flexio_uart.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_flexio_uart.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexio_uart_edma.MIMXRT1064" name="flexio_uart_edma" brief="FLEXIO UART EDMA Driver" version="2.1.5" full_name="FLEXIO UART EDMA Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064 platform.drivers.dmamux.MIMXRT1064 platform.drivers.edma.MIMXRT1064 platform.drivers.flexio.MIMXRT1064 platform.drivers.flexio_uart.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_flexio_uart_edma.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_flexio_uart_edma.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexram.MIMXRT1064" name="flexram" brief="FLEXRAM Driver" version="2.0.4" full_name="FLEXRAM Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_flexram.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_flexram.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexspi.MIMXRT1064" name="flexspi" brief="FLEXSPI Driver" version="2.1.1" full_name="FLEXSPI Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_flexspi.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_flexspi.h"/>
      </source>
    </component>
    <component id="driver.ft5406_rt.MIMXRT1064" name="ft5406_rt" version="1.0.0" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064 platform.drivers.lpi2c.MIMXRT1064" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/ft5406_rt" target_path="touchpanel" type="src">
        <files mask="fsl_ft5406_rt.c"/>
      </source>
      <source path="components/ft5406_rt" target_path="touchpanel" type="c_include">
        <files mask="fsl_ft5406_rt.h"/>
      </source>
    </component>
    <component id="driver.fxos8700cq.MIMXRT1064" name="fxos8700cq" version="1.0.0" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/fxos8700cq" target_path="accel" type="src">
        <files mask="fsl_fxos.c"/>
      </source>
      <source path="components/fxos8700cq" target_path="accel" type="c_include">
        <files mask="fsl_fxos.h"/>
      </source>
    </component>
    <component id="platform.drivers.gpc_1.MIMXRT1064" name="gpc" brief="GPC Driver" version="2.1.0" full_name="GPC Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_gpc.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_gpc.h"/>
      </source>
    </component>
    <component id="platform.drivers.gpt.MIMXRT1064" name="gpt" brief="GPT Driver" version="2.0.0" full_name="GPT Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_gpt.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_gpt.h"/>
      </source>
    </component>
    <component id="platform.drivers.igpio.MIMXRT1064" name="gpio" brief="GPIO Driver" version="2.0.2" full_name="igpio" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_gpio.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_gpio.h"/>
      </source>
    </component>
    <component id="platform.drivers.iomuxc.MIMXRT1064" name="iomuxc" brief="IOMUXC Driver" version="2.0.1" full_name="IOMUXC Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_iomuxc.h"/>
      </source>
    </component>
    <component id="platform.drivers.kpp.MIMXRT1064" name="kpp" brief="KPP Driver" version="2.0.0" full_name="KPP Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_kpp.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_kpp.h"/>
      </source>
    </component>
    <component id="platform.drivers.lpi2c.MIMXRT1064" name="i2c" brief="LPI2C Driver" version="2.1.9" full_name="LPI2C Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_lpi2c.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_lpi2c.h"/>
      </source>
    </component>
    <component id="platform.drivers.lpi2c_edma.MIMXRT1064" name="i2c_edma" brief="LPI2C Driver" version="2.1.6" full_name="LPI2C Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064 platform.drivers.dmamux.MIMXRT1064 platform.drivers.edma.MIMXRT1064 platform.drivers.lpi2c.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_lpi2c_edma.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_lpi2c_edma.h"/>
      </source>
    </component>
    <component id="platform.drivers.lpi2c_freertos.MIMXRT1064" name="i2c_freertos" brief="LPI2C Driver" version="2.1.9" full_name="LPI2C Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064 platform.drivers.lpi2c.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers/freertos" type="src">
        <files mask="fsl_lpi2c_freertos.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers/freertos" type="c_include">
        <files mask="fsl_lpi2c_freertos.h"/>
      </source>
    </component>
    <component id="platform.drivers.lpspi.MIMXRT1064" name="lpspi" brief="LPSPI Driver" version="2.0.3" full_name="LPSPI Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_lpspi.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_lpspi.h"/>
      </source>
    </component>
    <component id="platform.drivers.lpspi_edma.MIMXRT1064" name="lpspi_edma" brief="LPSPI Driver" version="2.0.2" full_name="LPSPI Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064 platform.drivers.dmamux.MIMXRT1064 platform.drivers.edma.MIMXRT1064 platform.drivers.lpspi.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_lpspi_edma.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_lpspi_edma.h"/>
      </source>
    </component>
    <component id="platform.drivers.lpspi_freertos.MIMXRT1064" name="lpspi_freertos" brief="LPSPI Driver" version="2.0.2" full_name="LPSPI Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064 platform.drivers.lpspi.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers/freertos" type="src">
        <files mask="fsl_lpspi_freertos.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers/freertos" type="c_include">
        <files mask="fsl_lpspi_freertos.h"/>
      </source>
    </component>
    <component id="platform.drivers.lpuart.MIMXRT1064" name="lpuart" brief="LPUART Driver" version="2.2.7" full_name="LPUART Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_lpuart.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_lpuart.h"/>
      </source>
    </component>
    <component id="platform.drivers.lpuart_edma.MIMXRT1064" name="lpuart_edma" brief="LPUART Driver" version="2.2.7" full_name="LPUART Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064 platform.drivers.dmamux.MIMXRT1064 platform.drivers.edma.MIMXRT1064 platform.drivers.lpuart.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_lpuart_edma.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_lpuart_edma.h"/>
      </source>
    </component>
    <component id="platform.drivers.lpuart_freertos.MIMXRT1064" name="lpuart_freertos" brief="LPUART Driver" version="2.2.7" full_name="LPUART Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064 platform.drivers.lpuart.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers/freertos" type="src">
        <files mask="fsl_lpuart_freertos.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers/freertos" type="c_include">
        <files mask="fsl_lpuart_freertos.h"/>
      </source>
    </component>
    <component id="platform.drivers.ocotp.MIMXRT1064" name="ocotp" brief="OCOTP Driver" version="2.0.0" full_name="OCOTP Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_ocotp.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_ocotp.h"/>
      </source>
    </component>
    <component id="driver.phyksz8081.MIMXRT1064" name="phyksz8081" version="1.0.0" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064 platform.drivers.enet.MIMXRT1064" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/phyksz8081" target_path="board" type="src">
        <files mask="fsl_phy.c"/>
      </source>
      <source path="components/phyksz8081" target_path="board" type="c_include">
        <files mask="fsl_phy.h"/>
      </source>
    </component>
    <component id="platform.drivers.pit.MIMXRT1064" name="pit" brief="PIT Driver" version="2.0.2" full_name="PIT Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_pit.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_pit.h"/>
      </source>
    </component>
    <component id="platform.drivers.pmu.MIMXRT1064" name="pmu" brief="pmu Driver" version="2.0.0" full_name="pmu Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_pmu.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_pmu.h"/>
      </source>
    </component>
    <component id="platform.drivers.pwm.MIMXRT1064" name="pwm" brief="PWM Driver" version="2.0.0" full_name="PWM Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_pwm.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_pwm.h"/>
      </source>
    </component>
    <component id="platform.drivers.pxp.MIMXRT1064" name="pxp" brief="PXP Driver" version="2.0.1" full_name="PXP Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_pxp.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_pxp.h"/>
      </source>
    </component>
    <component id="platform.drivers.qtmr.MIMXRT1064" name="qtmr" brief="QTMR Driver" version="2.0.0" full_name="QTMR Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_qtmr.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_qtmr.h"/>
      </source>
    </component>
    <component id="platform.drivers.rtwdog.MIMXRT1064" name="rtwdog" brief="RTWDOG Driver" version="2.1.0" full_name="RTWDOG Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_rtwdog.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_rtwdog.h"/>
      </source>
    </component>
    <component id="platform.drivers.sai.MIMXRT1064" name="sai" brief="SAI Driver" version="2.2.1" full_name="SAI Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_sai.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_sai.h"/>
      </source>
    </component>
    <component id="platform.drivers.sai_edma.MIMXRT1064" name="sai_edma" brief="SAI Driver" version="2.2.0" full_name="SAI Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064 platform.drivers.dmamux.MIMXRT1064 platform.drivers.edma.MIMXRT1064 platform.drivers.sai.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_sai_edma.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_sai_edma.h"/>
      </source>
    </component>
    <component id="platform.drivers.semc.MIMXRT1064" name="semc" brief="SEMC Driver" version="2.0.4" full_name="SEMC Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_semc.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_semc.h"/>
      </source>
    </component>
    <component id="platform.drivers.snvs_hp.MIMXRT1064" name="snvs_hp" brief="SNVS HP Driver" version="2.1.2" full_name="SNVS HP Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_snvs_hp.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_snvs_hp.h"/>
      </source>
    </component>
    <component id="platform.drivers.snvs_lp.MIMXRT1064" name="snvs_lp" brief="SNVS LP Driver" version="2.1.0" full_name="SNVS LP Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_snvs_lp.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_snvs_lp.h"/>
      </source>
    </component>
    <component id="platform.drivers.spdif.MIMXRT1064" name="spdif" brief="SPDIF Driver" version="2.0.2" full_name="SPDIF Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_spdif.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_spdif.h"/>
      </source>
    </component>
    <component id="platform.drivers.spdif_edma.MIMXRT1064" name="spdif_edma" brief="SPDIF Driver" version="2.0.0" full_name="SPDIF Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064 platform.drivers.dmamux.MIMXRT1064 platform.drivers.edma.MIMXRT1064 platform.drivers.spdif.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_spdif_edma.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_spdif_edma.h"/>
      </source>
    </component>
    <component id="platform.drivers.src.MIMXRT1064" name="src" brief="SRC Driver" version="2.0.1" full_name="SRC Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_src.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_src.h"/>
      </source>
    </component>
    <component id="platform.drivers.tempmon.MIMXRT1064" name="tempmon" brief="TEMPMON Driver" version="2.0.0" full_name="TEMPMON Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_tempmon.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_tempmon.h"/>
      </source>
    </component>
    <component id="platform.drivers.trng.MIMXRT1064" name="trng" brief="TRNG Driver" version="2.0.4" full_name="TRNG Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_trng.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_trng.h"/>
      </source>
    </component>
    <component id="platform.drivers.tsc.MIMXRT1064" name="tsc" brief="TSC Driver" version="2.0.2" full_name="TSC Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_tsc.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_tsc.h"/>
      </source>
    </component>
    <component id="platform.drivers.usdhc.MIMXRT1064" name="sdhc" brief="USDHC Driver" version="2.2.8" full_name="USDHC Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_usdhc.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_usdhc.h"/>
      </source>
    </component>
    <component id="driver.video-common.MIMXRT1064" name="video-common" version="1.0.0" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/video" target_path="video" type="src">
        <files mask="fsl_video_common.c"/>
      </source>
      <source path="components/video" target_path="video" type="c_include">
        <files mask="fsl_video_common.h"/>
      </source>
    </component>
    <component id="driver.video-i2c.MIMXRT1064" name="video-i2c" version="1.0.0" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/video/i2c" target_path="video" type="src">
        <files mask="fsl_video_i2c.c"/>
      </source>
      <source path="components/video/i2c" target_path="video" type="c_include">
        <files mask="fsl_video_i2c.h"/>
      </source>
    </component>
    <component id="platform.drivers.wdog01.MIMXRT1064" name="wdog" brief="wdog01 Driver" version="2.1.0" full_name="wdog01 Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_wdog.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_wdog.h"/>
      </source>
    </component>
    <component id="driver.wm8960.MIMXRT1064" name="wm8960" version="2.1.0" devices="MIMXRT1064xxxxA" dependency="component.codec_i2c.MIMXRT1064 device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/codec/wm8960" target_path="codec" type="src">
        <files mask="fsl_wm8960.c"/>
      </source>
      <source path="components/codec/wm8960" target_path="codec" type="c_include">
        <files mask="fsl_wm8960.h"/>
      </source>
    </component>
    <component id="platform.drivers.xbara.MIMXRT1064" name="xbara" brief="XBARA Driver" version="2.0.4" full_name="XBARA Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_xbara.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_xbara.h"/>
      </source>
    </component>
    <component id="platform.drivers.xbarb.MIMXRT1064" name="xbarb" brief="XBARB Driver" version="2.0.1" full_name="XBARB Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="driver">
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_xbarb.c"/>
      </source>
      <source path="devices/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_xbarb.h"/>
      </source>
    </component>
    <component id="platform.drivers.xip_board.MIMXRT1064" name="xip_board" brief="XIP Board Driver" version="2.0.0" full_name="XIP Board Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" category="Device/SDK Drivers" user_visible="true" type="other">
      <defines>
        <define name="XIP_EXTERNAL_FLASH=1" value=""/>
        <define name="XIP_BOOT_HEADER_ENABLE=1" value=""/>
      </defines>
      <source path="boards/evkmimxrt1064/xip" target_path="xip" type="src">
        <files mask="evkmimxrt1064_flexspi_nor_config.c"/>
        <files mask="evkmimxrt1064_sdram_ini_dcd.c"/>
      </source>
      <source path="boards/evkmimxrt1064/xip" target_path="xip" type="c_include">
        <files mask="evkmimxrt1064_flexspi_nor_config.h"/>
        <files mask="evkmimxrt1064_sdram_ini_dcd.h"/>
      </source>
    </component>
    <component id="platform.drivers.xip_device.MIMXRT1064" name="xip_device" brief="XIP Device Driver" version="2.0.0" full_name="XIP Device Driver" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="driver">
      <defines>
        <define name="XIP_EXTERNAL_FLASH=1" value=""/>
        <define name="XIP_BOOT_HEADER_ENABLE=1" value=""/>
      </defines>
      <source path="devices/MIMXRT1064/xip" target_path="xip" type="src">
        <files mask="fsl_flexspi_nor_boot.c"/>
      </source>
      <source path="devices/MIMXRT1064/xip" target_path="xip" type="c_include">
        <files mask="fsl_flexspi_nor_boot.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.MIMXRT1064" name="amazon_freertos_aws_iot" brief="AWS IOT" version="1.1.0" full_name="AWS IoT" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="middleware">
      <source path="rtos/amazon-freertos/lib/include" target_path="amazon-freertos/aws_iot" type="c_include">
        <files mask="FreeRTOS.h"/>
        <files mask="aws_appversion32.h"/>
        <files mask="aws_crypto.h"/>
        <files mask="aws_defender.h"/>
        <files mask="aws_greengrass_discovery.h"/>
        <files mask="aws_mqtt_agent.h"/>
        <files mask="aws_mqtt_lib.h"/>
        <files mask="aws_ota_agent.h"/>
        <files mask="aws_pkcs11.h"/>
        <files mask="aws_secure_sockets.h"/>
        <files mask="aws_shadow.h"/>
        <files mask="aws_system_init.h"/>
        <files mask="aws_tls.h"/>
        <files mask="aws_wifi.h"/>
        <files mask="event_groups.h"/>
        <files mask="message_buffer.h"/>
        <files mask="queue.h"/>
        <files mask="semphr.h"/>
        <files mask="stream_buffer.h"/>
        <files mask="task.h"/>
        <files mask="timers.h"/>
      </source>
      <source path="rtos/amazon-freertos/lib/include/private" target_path="amazon-freertos/aws_iot" type="c_include">
        <files mask="aws_bufferpool.h"/>
        <files mask="aws_default_root_certificates.h"/>
        <files mask="aws_defender_cpu.h"/>
        <files mask="aws_defender_internals.h"/>
        <files mask="aws_defender_report.h"/>
        <files mask="aws_defender_report_cpu.h"/>
        <files mask="aws_defender_report_header.h"/>
        <files mask="aws_defender_report_tcp_conn.h"/>
        <files mask="aws_defender_report_types.h"/>
        <files mask="aws_defender_report_uptime.h"/>
        <files mask="aws_defender_report_utils.h"/>
        <files mask="aws_defender_tcp_conn.h"/>
        <files mask="aws_defender_uptime.h"/>
        <files mask="aws_doubly_linked_list.h"/>
        <files mask="aws_ggd_config_defaults.h"/>
        <files mask="aws_helper_secure_connect.h"/>
        <files mask="aws_lib_init.h"/>
        <files mask="aws_mqtt_agent_config_defaults.h"/>
        <files mask="aws_mqtt_buffer.h"/>
        <files mask="aws_mqtt_config_defaults.h"/>
        <files mask="aws_ota_agent_internal.h"/>
        <files mask="aws_ota_cbor.h"/>
        <files mask="aws_ota_cbor_internal.h"/>
        <files mask="aws_ota_pal.h"/>
        <files mask="aws_ota_types.h"/>
        <files mask="aws_secure_sockets_config_defaults.h"/>
        <files mask="aws_shadow_config_defaults.h"/>
        <files mask="aws_shadow_json.h"/>
        <files mask="deprecated_definitions.h"/>
        <files mask="list.h"/>
        <files mask="mpu_prototypes.h"/>
        <files mask="mpu_wrappers.h"/>
        <files mask="portable.h"/>
        <files mask="projdefs.h"/>
        <files mask="stack_macros.h"/>
        <files mask="threading_alt.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.bufferpool.MIMXRT1064" name="amazon_freertos_bufferpool" brief="bufferpool" version="1.0.0" full_name="bufferpool" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/bufferpool" target_path="amazon-freertos/bufferpool" type="src">
        <files mask="aws_bufferpool_static_thread_safe.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.cbor.MIMXRT1064" name="amazon_freertos_cbor" brief="cbor" version="1.0.0" full_name="cbor" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/cbor" target_path="amazon-freertos/cbor" type="other">
        <files mask="makefile"/>
        <files mask="readme.md"/>
      </source>
      <source path="rtos/amazon-freertos/lib/cbor/src" target_path="amazon-freertos/cbor" type="src">
        <files mask="aws_cbor.c"/>
        <files mask="aws_cbor_alloc.c"/>
        <files mask="aws_cbor_int.c"/>
        <files mask="aws_cbor_iter.c"/>
        <files mask="aws_cbor_map.c"/>
        <files mask="aws_cbor_mem.c"/>
        <files mask="aws_cbor_print.c"/>
        <files mask="aws_cbor_string.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/cbor/src" target_path="amazon-freertos/cbor" type="c_include">
        <files mask="aws_cbor.h"/>
        <files mask="aws_cbor_alloc.h"/>
        <files mask="aws_cbor_int.h"/>
        <files mask="aws_cbor_internals.h"/>
        <files mask="aws_cbor_iter.h"/>
        <files mask="aws_cbor_jump_table.h"/>
        <files mask="aws_cbor_map.h"/>
        <files mask="aws_cbor_mem.h"/>
        <files mask="aws_cbor_print.h"/>
        <files mask="aws_cbor_string.h"/>
        <files mask="aws_cbor_types.h"/>
      </source>
      <source path="rtos/amazon-freertos/lib/cbor/test" target_path="amazon-freertos/cbor" type="src">
        <files mask="assert_override.c"/>
        <files mask="test_aws_cbor.c"/>
        <files mask="test_aws_cbor_acc.c"/>
        <files mask="test_aws_cbor_alloc.c"/>
        <files mask="test_aws_cbor_int.c"/>
        <files mask="test_aws_cbor_iter.c"/>
        <files mask="test_aws_cbor_map.c"/>
        <files mask="test_aws_cbor_mem.c"/>
        <files mask="test_aws_cbor_print.c"/>
        <files mask="test_aws_cbor_string.c"/>
        <files mask="test_main.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/cbor/test" target_path="amazon-freertos/cbor" type="c_include">
        <files mask="assert_override.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.crypto.MIMXRT1064" name="amazon_freertos_crypto" brief="crypto" version="1.0.0" full_name="crypto" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/crypto" target_path="amazon-freertos/crypto" type="src">
        <files mask="aws_crypto.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.defender.MIMXRT1064" name="amazon_freertos_defender" brief="defender" version="1.0.0" full_name="defender" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/defender" target_path="src" type="src">
        <files mask="aws_defender.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/defender" target_path="amazon-freertos/defender" type="other">
        <files mask="aws_defender_states.dot"/>
      </source>
      <source path="rtos/amazon-freertos/lib/defender" target_path="amazon-freertos/defender" type="image">
        <files mask="aws_defender_states.png"/>
      </source>
      <source path="rtos/amazon-freertos/lib/defender" target_path="amazon-freertos/defender" type="script">
        <files mask="draw_states.py"/>
      </source>
      <source path="rtos/amazon-freertos/lib/defender/portable/freertos" target_path="amazon-freertos/defender" type="src">
        <files mask="aws_defender_cpu.c"/>
        <files mask="aws_defender_tcp_conn.c"/>
        <files mask="aws_defender_uptime.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/defender/portable/stub" target_path="amazon-freertos/defender" type="src">
        <files mask="aws_defender_cpu.c"/>
        <files mask="aws_defender_tcp_conn.c"/>
        <files mask="aws_defender_uptime.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/defender/portable/stub" target_path="amazon-freertos/defender" type="other">
        <files mask="makefile"/>
      </source>
      <source path="rtos/amazon-freertos/lib/defender/portable/template" target_path="amazon-freertos/defender" type="src">
        <files mask="aws_defender_cpu.c"/>
        <files mask="aws_defender_tcp_conn.c"/>
        <files mask="aws_defender_uptime.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/defender/portable/template" target_path="amazon-freertos/defender" type="other">
        <files mask="makefile"/>
      </source>
      <source path="rtos/amazon-freertos/lib/defender/portable/unit_test" target_path="amazon-freertos/defender" type="src">
        <files mask="aws_defender_cpu.c"/>
        <files mask="aws_defender_tcp_conn.c"/>
        <files mask="aws_defender_uptime.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/defender/portable/unix" target_path="amazon-freertos/defender" type="src">
        <files mask="aws_defender_cpu.c"/>
        <files mask="aws_defender_tcp_conn.c"/>
        <files mask="aws_defender_uptime.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/defender/portable/unix" target_path="amazon-freertos/defender" type="other">
        <files mask="makefile"/>
      </source>
      <source path="rtos/amazon-freertos/lib/defender/report" target_path="amazon-freertos/defender" type="src">
        <files mask="aws_defender_report.c"/>
        <files mask="aws_defender_report_cpu.c"/>
        <files mask="aws_defender_report_header.c"/>
        <files mask="aws_defender_report_tcp_conn.c"/>
        <files mask="aws_defender_report_uptime.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.demos.MIMXRT1064" name="amazon_freertos_aws_iot_demos" brief="AWS IOT demos" version="1.2.7" full_name="demos" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/demos/common/devmode_key_provisioning" target_path="amazon-freertos/demos" type="src">
        <files mask="aws_dev_mode_key_provisioning.c"/>
      </source>
      <source path="rtos/amazon-freertos/demos/common/include" target_path="amazon-freertos/demos" type="c_include">
        <files mask="aws_clientcredential.h"/>
        <files mask="aws_clientcredential_keys.h"/>
        <files mask="aws_demo.h"/>
        <files mask="aws_dev_mode_key_provisioning.h"/>
        <files mask="aws_greengrass_discovery_demo.h"/>
        <files mask="aws_logging_task.h"/>
      </source>
      <source path="rtos/amazon-freertos/demos/common/logging" target_path="amazon-freertos/demos" type="src">
        <files mask="aws_logging_task_dynamic_buffers.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.demos_unused.MIMXRT1064" name="amazon_freertos_aws_iot_demos_unused" brief="AWS IOT demos" version="1.2.7" full_name="demos_unused" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source exclude="true" path="rtos/amazon-freertos/demos/common/defender" target_path="amazon-freertos/demos" type="src">
        <files mask="aws_defender_demo.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos/common/demo_runner" target_path="amazon-freertos/demos" type="src">
        <files mask="aws_demo_runner.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos/common" target_path="amazon-freertos/demos" type="doc">
        <files mask="directories.txt"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos/common/greengrass_connectivity" target_path="amazon-freertos/demos" type="other">
        <files mask="README.md"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos/common/greengrass_connectivity" target_path="amazon-freertos/demos" type="src">
        <files mask="aws_greengrass_discovery_demo.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos/common/include" target_path="amazon-freertos/demos" type="c_include">
        <files mask="aws_application_version.h"/>
        <files mask="aws_defender_demo.h"/>
        <files mask="aws_demo_runner.h"/>
        <files mask="aws_hello_world.h"/>
        <files mask="aws_ota_codesigner_certificate.h"/>
        <files mask="aws_ota_update_demo.h"/>
        <files mask="aws_shadow_lightbulb_on_off.h"/>
        <files mask="aws_simple_tcp_echo_server.h"/>
        <files mask="aws_subscribe_publish_loop.h"/>
        <files mask="aws_tcp_echo_client_single_tasks.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos/common/mqtt" target_path="amazon-freertos/demos" type="src">
        <files mask="aws_hello_world.c"/>
        <files mask="aws_subscribe_publish_loop.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos/common/ota" target_path="amazon-freertos/demos" type="src">
        <files mask="aws_ota_update_demo.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos/common/ota/bootloader" target_path="amazon-freertos/demos" type="other">
        <files mask=".gitignore"/>
        <files mask="README.md"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos/common/ota/bootloader/crypto/tinycrypt" target_path="amazon-freertos/demos" type="src">
        <files mask="asn1utility.c"/>
        <files mask="aws_boot_crypto.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos/common/ota/bootloader/crypto/tinycrypt" target_path="amazon-freertos/demos" type="c_include">
        <files mask="asn1utility.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos/common/ota/bootloader/include" target_path="amazon-freertos/demos" type="c_include">
        <files mask="aws_boot_codesigner_public_key.h"/>
        <files mask="aws_boot_crypto.h"/>
        <files mask="aws_boot_flash.h"/>
        <files mask="aws_boot_loader.h"/>
        <files mask="aws_boot_log.h"/>
        <files mask="aws_boot_pal.h"/>
        <files mask="aws_boot_partition.h"/>
        <files mask="aws_boot_types.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos/common/ota/bootloader/loader" target_path="amazon-freertos/demos" type="src">
        <files mask="aws_boot_loader.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos/common/ota/bootloader/logging" target_path="amazon-freertos/demos" type="src">
        <files mask="aws_boot_log.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos/common/ota/bootloader/utility" target_path="amazon-freertos/demos" type="other">
        <files mask=".gitignore"/>
        <files mask="README.md"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos/common/ota/bootloader/utility" target_path="amazon-freertos/demos" type="script">
        <files mask="binary_image_generator.py"/>
        <files mask="factory_image_generator.py"/>
        <files mask="ota_image_generator.py"/>
        <files mask="util.py"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos/common/ota/bootloader/utility/codesigner_cert_utility" target_path="amazon-freertos/demos" type="script">
        <files mask="codesigner_cert_utility.py"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos/common/ota/bootloader/utility/config-validation-rules" target_path="amazon-freertos/demos" type="other">
        <files mask="MCHP-Curiosity-PIC32MZEF"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos/common/ota/bootloader/utility/user-config" target_path="amazon-freertos/demos" type="other">
        <files mask="aws-code-sign.config"/>
        <files mask="ota-descriptor.config"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos/common/shadow" target_path="amazon-freertos/demos" type="src">
        <files mask="aws_shadow_lightbulb_on_off.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos/common/tcp" target_path="amazon-freertos/demos" type="src">
        <files mask="aws_simple_tcp_echo_server.c"/>
        <files mask="aws_tcp_echo_client_separate_tasks.c"/>
        <files mask="aws_tcp_echo_client_single_task.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos" target_path="amazon-freertos/demos" type="doc">
        <files mask="directories.txt"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos/vendor/board/common/application_code" target_path="amazon-freertos/demos" type="src">
        <files mask="main.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos/vendor/board/common/application_code/vendor_code" target_path="amazon-freertos/demos" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos/vendor/board/common/config_files" target_path="amazon-freertos/demos" type="c_include">
        <files mask="FreeRTOSConfig.h"/>
        <files mask="FreeRTOSIPConfig.h"/>
        <files mask="aws_bufferpool_config.h"/>
        <files mask="aws_demo_config.h"/>
        <files mask="aws_ggd_config.h"/>
        <files mask="aws_mqtt_agent_config.h"/>
        <files mask="aws_mqtt_config.h"/>
        <files mask="aws_ota_agent_config.h"/>
        <files mask="aws_pkcs11_config.h"/>
        <files mask="aws_secure_sockets_config.h"/>
        <files mask="aws_shadow_config.h"/>
        <files mask="aws_wifi_config.h"/>
        <files mask="trcConfig.h"/>
        <files mask="trcSnapshotConfig.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/demos/vendor/board/ide" target_path="amazon-freertos/demos" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.greengrass.MIMXRT1064" name="amazon_freertos_greengrass" brief="greengrass" version="1.0.0" full_name="greengrass_discovery" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/greengrass" target_path="amazon-freertos/greengrass" type="src">
        <files mask="aws_greengrass_discovery.c"/>
        <files mask="aws_helper_secure_connect.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.mflash.frdmk64f.MIMXRT1064" name="amazon_freertos_mflash_frdmk64f" brief="mflash_frdmk64f" version="1.0.0" full_name="mflash_frdmk64f" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/third_party/mcu_vendor/nxp/mflash/frdmk64f" target_path="amazon-freertos/mflash" type="src">
        <files mask="mflash_drv.c"/>
        <files mask="mflash_file.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/mcu_vendor/nxp/mflash/frdmk64f" target_path="amazon-freertos/mflash" type="c_include">
        <files mask="mflash_drv.h"/>
        <files mask="mflash_file.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.mflash.frdmk66f.MIMXRT1064" name="amazon_freertos_mflash_frdmk66f" brief="mflash_frdmk66f" version="1.0.0" full_name="mflash_frdmk66f" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/third_party/mcu_vendor/nxp/mflash/frdmk66f" target_path="amazon-freertos/mflash" type="src">
        <files mask="mflash_drv.c"/>
        <files mask="mflash_file.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/mcu_vendor/nxp/mflash/frdmk66f" target_path="amazon-freertos/mflash" type="c_include">
        <files mask="mflash_drv.h"/>
        <files mask="mflash_file.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.mflash.frdmk82f.MIMXRT1064" name="amazon_freertos_mflash_frdmk82f" brief="mflash_frdmk82f" version="1.0.0" full_name="mflash_frdmk82f" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/third_party/mcu_vendor/nxp/mflash/frdmk82f" target_path="amazon-freertos/mflash" type="src">
        <files mask="mflash_drv.c"/>
        <files mask="mflash_file.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/mcu_vendor/nxp/mflash/frdmk82f" target_path="amazon-freertos/mflash" type="c_include">
        <files mask="mflash_drv.h"/>
        <files mask="mflash_file.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.mflash.lpc54s018m.MIMXRT1064" name="amazon_freertos_mflash_lpc54s018m" brief="mflash_lpc54s018m" version="1.0.0" full_name="mflash_lpc54s018m" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/third_party/mcu_vendor/nxp/mflash/lpc54s018m" target_path="amazon-freertos/mflash" type="src">
        <files mask="mflash_drv.c"/>
        <files mask="mflash_file.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/mcu_vendor/nxp/mflash/lpc54s018m" target_path="amazon-freertos/mflash" type="c_include">
        <files mask="mflash_drv.h"/>
        <files mask="mflash_file.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.mflash.lpc54xxx.MIMXRT1064" name="amazon_freertos_mflash_lpc54xxx" brief="mflash_lpc54xxx" version="1.0.0" full_name="mflash_lpc54xxx" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/third_party/mcu_vendor/nxp/mflash/lpc54xxx" target_path="amazon-freertos/mflash" type="src">
        <files mask="mflash_drv.c"/>
        <files mask="mflash_file.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/mcu_vendor/nxp/mflash/lpc54xxx" target_path="amazon-freertos/mflash" type="c_include">
        <files mask="mflash_drv.h"/>
        <files mask="mflash_file.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.mflash.lpc55s69.MIMXRT1064" name="amazon_freertos_mflash_lpc55s69" brief="mflash_lpc55s69" version="1.0.0" full_name="mflash_lpc55s69" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/third_party/mcu_vendor/nxp/mflash/lpc55s69" target_path="amazon-freertos/mflash" type="src">
        <files mask="mflash_drv.c"/>
        <files mask="mflash_file.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/mcu_vendor/nxp/mflash/lpc55s69" target_path="amazon-freertos/mflash" type="c_include">
        <files mask="mflash_drv.h"/>
        <files mask="mflash_file.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.mflash.rt1020.MIMXRT1064" name="amazon_freertos_mflash_rt1020" brief="mflash_rt1020" version="1.0.0" full_name="mflash_rt1020" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/third_party/mcu_vendor/nxp/mflash/mimxrt1021" target_path="amazon-freertos/mflash" type="src">
        <files mask="mflash_drv.c"/>
        <files mask="mflash_file.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/mcu_vendor/nxp/mflash/mimxrt1021" target_path="amazon-freertos/mflash" type="c_include">
        <files mask="mflash_drv.h"/>
        <files mask="mflash_file.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.mflash.rt1050.MIMXRT1064" name="amazon_freertos_mflash_rt1050" brief="mflash_rt1050" version="1.0.0" full_name="mflash_rt1050" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/third_party/mcu_vendor/nxp/mflash/mimxrt1052" target_path="amazon-freertos/mflash" type="src">
        <files mask="mflash_drv.c"/>
        <files mask="mflash_file.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/mcu_vendor/nxp/mflash/mimxrt1052" target_path="amazon-freertos/mflash" type="c_include">
        <files mask="mflash_drv.h"/>
        <files mask="mflash_file.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.mflash.rt1060.MIMXRT1064" name="amazon_freertos_mflash_rt1060" brief="mflash_rt1060" version="1.0.0" full_name="mflash_rt1060" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/third_party/mcu_vendor/nxp/mflash/mimxrt1062" target_path="amazon-freertos/mflash" type="src">
        <files mask="mflash_drv.c"/>
        <files mask="mflash_file.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/mcu_vendor/nxp/mflash/mimxrt1062" target_path="amazon-freertos/mflash" type="c_include">
        <files mask="mflash_drv.h"/>
        <files mask="mflash_file.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.mflash.rt1064.MIMXRT1064" name="amazon_freertos_mflash_rt1064" brief="mflash_rt1064" version="1.0.0" full_name="mflash_rt1064" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/third_party/mcu_vendor/nxp/mflash/mimxrt1064" target_path="amazon-freertos/mflash" type="src">
        <files mask="mflash_drv.c"/>
        <files mask="mflash_file.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/mcu_vendor/nxp/mflash/mimxrt1064" target_path="amazon-freertos/mflash" type="c_include">
        <files mask="mflash_drv.h"/>
        <files mask="mflash_file.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.mflash.rt685.MIMXRT1064" name="amazon_freertos_mflash_rt685" brief="mflash_rt685" version="1.0.0" full_name="mflash_rt685" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/third_party/mcu_vendor/nxp/mflash/mimxrt685" target_path="amazon-freertos/mflash" type="src">
        <files mask="mflash_drv.c"/>
        <files mask="mflash_file.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/mcu_vendor/nxp/mflash/mimxrt685" target_path="amazon-freertos/mflash" type="c_include">
        <files mask="mflash_drv.h"/>
        <files mask="mflash_file.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.se_hostlib.MIMXRT1064" name="amazon_freertos_mflash" brief="mflash_se_hostlib" version="1.0.0" full_name="mflash_se_hostlib" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/third_party/mcu_vendor/nxp/mflash/se_hostlib" target_path="amazon-freertos/mflash" type="c_include">
        <files mask="mflash_drv.h"/>
        <files mask="mflash_file.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.mqtt.MIMXRT1064" name="amazon_freertos_mqtt" brief="mqtt" version="1.0.0" full_name="mqtt" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/mqtt" target_path="amazon-freertos/mqtt" type="src">
        <files mask="aws_mqtt_agent.c"/>
        <files mask="aws_mqtt_lib.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.ota.MIMXRT1064" name="amazon_freertos_ota" brief="ota" version="1.0.0" full_name="ota" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/ota" target_path="amazon-freertos/ota" type="src">
        <files mask="aws_ota_agent.c"/>
        <files mask="aws_ota_cbor.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/ota/portable" target_path="amazon-freertos/ota" type="other">
        <files mask="README.md"/>
      </source>
      <source path="rtos/amazon-freertos/lib/ota/portable/vendor/board" target_path="amazon-freertos/ota" type="src">
        <files mask="aws_ota_pal.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.pkcs11.MIMXRT1064" name="amazon_freertos_pkcs11" version="1.0.0" full_name="pkcs11" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/pkcs11/mbedtls" target_path="amazon-freertos/pkcs11" type="src">
        <files mask="aws_pkcs11_mbedtls.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/pkcs11/portable/nxp/common" target_path="amazon-freertos/pkcs11" type="src">
        <files mask="aws_pkcs11_pal.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.pkcs11.se_hostlib.MIMXRT1064" name="amazon_freertos_pkcs11_se_hostlib" brief="pkcs11_se_hostlib" version="1.0.0" full_name="pkcs11_se_hostlib" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/pkcs11/portable/nxp/se_hostlib" target_path="src" type="src">
        <files mask="pkcs11_se.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/pkcs11/portable/nxp/se_hostlib" target_path="src" type="c_include">
        <files mask="pkcs11_se.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.pkcs11_unused.MIMXRT1064" name="amazon_freertos_pkcs11" version="1.0.0" full_name="pkcs11" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source exclude="true" path="rtos/amazon-freertos/lib/pkcs11/portable/vendor/board" target_path="amazon-freertos/pkcs11" type="src">
        <files mask="aws_pkcs11_pal.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.secure_sockets.MIMXRT1064" name="amazon_freertos_secure_sockets" brief="secure_sockets" version="1.0.0" full_name="secure_sockets" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source exclude="true" path="rtos/amazon-freertos/lib/secure_sockets/portable/freertos_plus_tcp" target_path="amazon-freertos/secure_sockets" type="src">
        <files mask="aws_secure_sockets.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/secure_sockets/portable/lwip" target_path="amazon-freertos/secure_sockets" type="src">
        <files mask="aws_secure_sockets.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/secure_sockets/portable/nxp/lpc54018iotmodule" target_path="amazon-freertos/secure_sockets" type="src">
        <files mask="aws_secure_sockets.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/secure_sockets/portable/vendor/board" target_path="amazon-freertos/secure_sockets" type="src">
        <files mask="aws_secure_sockets.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.secure_sockets.lwip.MIMXRT1064" name="amazon_freertos_secure_sockets_lwip" brief="secure_sockets_lwip" version="1.0.0" full_name="secure_sockets_lwip" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/secure_sockets/portable/nxp/lwip" target_path="amazon-freertos/secure_sockets" type="src">
        <files mask="aws_secure_sockets.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.secure_sockets.wifi_qca.MIMXRT1064" name="amazon_freertos_secure_sockets_wifi_qca" brief="secure_sockets_wifi_qca" version="1.0.0" full_name="secure_sockets_wifi_qca" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/secure_sockets/portable/nxp/wifi_qca" target_path="amazon-freertos/secure_sockets" type="src">
        <files mask="aws_secure_sockets.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.shadow.MIMXRT1064" name="amazon_freertos_shadow" brief="shadow" version="1.0.0" full_name="shadow" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/shadow" target_path="amazon-freertos/shadow" type="src">
        <files mask="aws_shadow.c"/>
        <files mask="aws_shadow_json.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.tests.MIMXRT1064" name="amazon_freertos_tests" brief="tests" version="1.0.0" full_name="tests" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/demos/common/devmode_key_provisioning" target_path="amazon-freertos/devmode_key_provisioning" type="src">
        <files mask="aws_dev_mode_key_provisioning.c"/>
      </source>
      <source path="rtos/amazon-freertos/demos/common/logging" target_path="amazon-freertos/logging" type="src">
        <files mask="aws_logging_task_dynamic_buffers.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/greengrass" target_path="amazon-freertos/greengrass" type="src">
        <files mask="aws_greengrass_discovery.c"/>
        <files mask="aws_helper_secure_connect.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/include" target_path="common-tests/include" type="c_include">
        <files mask="aws_appversion32.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/docs" target_path="unity" type="doc">
        <files mask="license.txt"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/unity/extras/fixture/src" target_path="unity" type="src">
        <files mask="unity_fixture.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/unity/extras/fixture/src" target_path="unity" type="c_include">
        <files mask="unity_fixture.h"/>
        <files mask="unity_fixture_internals.h"/>
        <files mask="unity_fixture_malloc_overrides.h"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/unity/src" target_path="unity" type="src">
        <files mask="unity.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/unity/src" target_path="unity" type="c_include">
        <files mask="unity.h"/>
        <files mask="unity_internals.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/tests" target_path="common-tests" type="doc">
        <files mask="AFQ Developer Guide - Board Qualification Errata.pdf"/>
        <files mask="Amazon FreeRTOS Qualification Developer Guide.pdf"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/crypto" target_path="common-tests/crypto" type="src">
        <files mask="aws_test_crypto.c"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/framework" target_path="common-tests/framework" type="src">
        <files mask="aws_test_framework.c"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/greengrass" target_path="common-tests/greengrass" type="src">
        <files mask="aws_test_greengrass_discovery.c"/>
        <files mask="aws_test_helper_secure_connect.c"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/include" target_path="common-tests/include" type="c_include">
        <files mask="aws_application_version.h"/>
        <files mask="aws_clientcredential.h"/>
        <files mask="aws_clientcredential_keys.h"/>
        <files mask="aws_dev_mode_key_provisioning.h"/>
        <files mask="aws_greengrass_discovery_test_access_declare.h"/>
        <files mask="aws_greengrass_discovery_test_access_define.h"/>
        <files mask="aws_logging_task.h"/>
        <files mask="aws_mqtt_lib_test_access_declare.h"/>
        <files mask="aws_mqtt_lib_test_access_define.h"/>
        <files mask="aws_test_framework.h"/>
        <files mask="aws_test_runner.h"/>
        <files mask="aws_test_tcp.h"/>
        <files mask="aws_test_tls.h"/>
        <files mask="aws_test_utils.h"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/memory_leak" target_path="common-tests/memory_leak" type="src">
        <files mask="aws_memory_leak.c"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/mqtt" target_path="common-tests/mqtt" type="src">
        <files mask="aws_test_mqtt_agent.c"/>
        <files mask="aws_test_mqtt_lib.c"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/pkcs11" target_path="common-tests/pkcs11" type="src">
        <files mask="aws_test_pkcs11.c"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/secure_sockets" target_path="common-tests/secure_sockets" type="src">
        <files mask="aws_test_tcp.c"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/shadow" target_path="common-tests/shadow" type="src">
        <files mask="aws_test_shadow.c"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/test_runner" target_path="common-tests/test_runner" type="src">
        <files mask="aws_test_runner.c"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/tls" target_path="common-tests/tls" type="src">
        <files mask="aws_test_tls.c"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/wifi" target_path="common-tests/wifi" type="src">
        <files mask="aws_test_wifi.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.tests.unused.MIMXRT1064" name="amazon_freertos_tests" brief="tests" version="1.0.0" full_name="tests" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/tests/common/cbor" target_path="amazon-freertos/tests" type="src">
        <files mask="aws_test_cbor.c"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/crypto" target_path="amazon-freertos/tests" type="src">
        <files mask="aws_test_crypto.c"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/defender" target_path="amazon-freertos/tests" type="src">
        <files mask="aws_test_defender.c"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/framework" target_path="amazon-freertos/tests" type="src">
        <files mask="aws_test_framework.c"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/freertos_tcp" target_path="amazon-freertos/tests" type="src">
        <files mask="aws_test_freertos_tcp.c"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/greengrass" target_path="amazon-freertos/tests" type="src">
        <files mask="aws_test_greengrass_discovery.c"/>
        <files mask="aws_test_helper_secure_connect.c"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/include" target_path="amazon-freertos/tests" type="c_include">
        <files mask="aws_application_version.h"/>
        <files mask="aws_clientcredential.h"/>
        <files mask="aws_clientcredential_keys.h"/>
        <files mask="aws_dev_mode_key_provisioning.h"/>
        <files mask="aws_freertos_tcp_test_access_declare.h"/>
        <files mask="aws_freertos_tcp_test_access_dns_define.h"/>
        <files mask="aws_freertos_tcp_test_access_tcp_define.h"/>
        <files mask="aws_greengrass_discovery_test_access_declare.h"/>
        <files mask="aws_greengrass_discovery_test_access_define.h"/>
        <files mask="aws_logging_task.h"/>
        <files mask="aws_mqtt_lib_test_access_declare.h"/>
        <files mask="aws_mqtt_lib_test_access_define.h"/>
        <files mask="aws_ota_agent_test_access_declare.h"/>
        <files mask="aws_ota_agent_test_access_define.h"/>
        <files mask="aws_ota_codesigner_certificate.h"/>
        <files mask="aws_ota_pal_test_access_declare.h"/>
        <files mask="aws_ota_pal_test_access_define.h"/>
        <files mask="aws_test_framework.h"/>
        <files mask="aws_test_runner.h"/>
        <files mask="aws_test_tcp.h"/>
        <files mask="aws_test_tls.h"/>
        <files mask="aws_test_utils.h"/>
        <files mask="aws_unity_config.h"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/memory_leak" target_path="amazon-freertos/tests" type="src">
        <files mask="aws_memory_leak.c"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/mqtt" target_path="amazon-freertos/tests" type="src">
        <files mask="aws_test_mqtt_agent.c"/>
        <files mask="aws_test_mqtt_lib.c"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/ota" target_path="amazon-freertos/tests" type="other">
        <files mask="README.md"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/ota" target_path="amazon-freertos/tests" type="src">
        <files mask="aws_test_ota_agent.c"/>
        <files mask="aws_test_ota_cbor.c"/>
        <files mask="aws_test_ota_pal.c"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/ota" target_path="amazon-freertos/tests" type="c_include">
        <files mask="aws_test_ota_pal_ecdsa_sha256_signature.h"/>
        <files mask="aws_test_ota_pal_rsa_sha1_signature.h"/>
        <files mask="aws_test_ota_pal_rsa_sha256_signature.h"/>
        <files mask="aws_test_ota_signature_methods.h"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/ota/test_files" target_path="amazon-freertos/tests" type="other">
        <files mask="describeStreamResponse.cbor"/>
        <files mask="ecdsa-sha256-signer.crt.pem"/>
        <files mask="ecdsa-sha256-signer.key.pem"/>
        <files mask="getStreamResponse_0.cbor"/>
        <files mask="getStreamResponse_1.cbor"/>
        <files mask="getStreamResponse_10.cbor"/>
        <files mask="getStreamResponse_11.cbor"/>
        <files mask="getStreamResponse_12.cbor"/>
        <files mask="getStreamResponse_13.cbor"/>
        <files mask="getStreamResponse_14.cbor"/>
        <files mask="getStreamResponse_15.cbor"/>
        <files mask="getStreamResponse_2.cbor"/>
        <files mask="getStreamResponse_3.cbor"/>
        <files mask="getStreamResponse_4.cbor"/>
        <files mask="getStreamResponse_5.cbor"/>
        <files mask="getStreamResponse_6.cbor"/>
        <files mask="getStreamResponse_7.cbor"/>
        <files mask="getStreamResponse_8.cbor"/>
        <files mask="getStreamResponse_9.cbor"/>
        <files mask="rsa-sha1-root-ca-cert-key.pem"/>
        <files mask="rsa-sha1-root-ca-cert.pem"/>
        <files mask="rsa-sha1-signer.crt.pem"/>
        <files mask="rsa-sha1-signer.key.pem"/>
        <files mask="rsa-sha256-signer.crt.pem"/>
        <files mask="rsa-sha256-signer.key.pem"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/ota/test_files" target_path="amazon-freertos/tests" type="binary">
        <files mask="payload.bin"/>
        <files mask="rsasigner.crt"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/pkcs11" target_path="amazon-freertos/tests" type="src">
        <files mask="aws_test_pkcs11.c"/>
      </source>
      <source path="rtos/amazon-freertos/tests/common/posix" target_path="amazon-freertos/tests" type="src">
        <files mask="aws_test_posix_clock.c"/>
        <files mask="aws_test_posix_mqueue.c"/>
        <files mask="aws_test_posix_pthread.c"/>
        <files mask="aws_test_posix_semaphore.c"/>
        <files mask="aws_test_posix_stress.c"/>
        <files mask="aws_test_posix_timer.c"/>
        <files mask="aws_test_posix_utils.c"/>
      </source>
      <source path="rtos/amazon-freertos/tests/nxp/lpc54018iotmodule/common/application_code" target_path="amazon-freertos/tests" type="src">
        <files mask="main.c"/>
      </source>
      <source path="rtos/amazon-freertos/tests/nxp/lpc54018iotmodule/common/application_code/nxp_code" target_path="amazon-freertos/tests" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="pin_mux.c"/>
      </source>
      <source path="rtos/amazon-freertos/tests/nxp/lpc54018iotmodule/common/application_code/nxp_code" target_path="amazon-freertos/tests" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="pin_mux.h"/>
      </source>
      <source path="rtos/amazon-freertos/tests/nxp/lpc54018iotmodule/common/config_files" target_path="amazon-freertos/tests" type="c_include">
        <files mask="FreeRTOSConfig.h"/>
        <files mask="FreeRTOSIPConfig.h"/>
        <files mask="aws_bufferpool_config.h"/>
        <files mask="aws_ggd_config.h"/>
        <files mask="aws_mqtt_agent_config.h"/>
        <files mask="aws_mqtt_config.h"/>
        <files mask="aws_pkcs11_config.h"/>
        <files mask="aws_secure_sockets_config.h"/>
        <files mask="aws_shadow_config.h"/>
        <files mask="aws_test_pkcs11_config.h"/>
        <files mask="aws_test_runner_config.h"/>
        <files mask="aws_test_tcp_config.h"/>
        <files mask="aws_test_wifi_config.h"/>
        <files mask="aws_wifi_config.h"/>
        <files mask="unity_config.h"/>
      </source>
      <source path="rtos/amazon-freertos/tests/nxp/lpc54018iotmodule/iar" target_path="amazon-freertos/tests" type="debug">
        <files mask="aws_tests.ewd"/>
      </source>
      <source path="rtos/amazon-freertos/tests/nxp/lpc54018iotmodule/iar" target_path="amazon-freertos/tests" type="project">
        <files mask="aws_tests.ewp"/>
      </source>
      <source path="rtos/amazon-freertos/tests/nxp/lpc54018iotmodule/iar" target_path="amazon-freertos/tests" type="other">
        <files mask="aws_tests.eww"/>
      </source>
      <source path="rtos/amazon-freertos/tests/vendor/board/common/application_code" target_path="amazon-freertos/tests" type="src">
        <files mask="main.c"/>
      </source>
      <source path="rtos/amazon-freertos/tests/vendor/board/common/application_code/vendor_code" target_path="amazon-freertos/tests" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <source path="rtos/amazon-freertos/tests/vendor/board/common/config_files" target_path="amazon-freertos/tests" type="c_include">
        <files mask="FreeRTOSConfig.h"/>
        <files mask="FreeRTOSIPConfig.h"/>
        <files mask="aws_bufferpool_config.h"/>
        <files mask="aws_ggd_config.h"/>
        <files mask="aws_mqtt_agent_config.h"/>
        <files mask="aws_mqtt_config.h"/>
        <files mask="aws_ota_agent_config.h"/>
        <files mask="aws_pkcs11_config.h"/>
        <files mask="aws_secure_sockets_config.h"/>
        <files mask="aws_shadow_config.h"/>
        <files mask="aws_test_ota_config.h"/>
        <files mask="aws_test_pkcs11_config.h"/>
        <files mask="aws_test_runner_config.h"/>
        <files mask="aws_test_tcp_config.h"/>
        <files mask="aws_test_wifi_config.h"/>
        <files mask="aws_wifi_config.h"/>
        <files mask="trcConfig.h"/>
        <files mask="trcSnapshotConfig.h"/>
        <files mask="unity_config.h"/>
      </source>
      <source path="rtos/amazon-freertos/tests/vendor/board/ide" target_path="amazon-freertos/tests" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.tls.MIMXRT1064" name="amazon_freertos_tls" brief="tls" version="1.0.0" full_name="tls" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/tls" target_path="amazon-freertos/tls" type="src">
        <files mask="aws_tls.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.utils.MIMXRT1064" name="amazon_freertos_utils" brief="utils" version="1.0.0" full_name="utils" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/utils" target_path="amazon-freertos/utils" type="src">
        <files mask="aws_system_init.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.wifi.MIMXRT1064" name="aws_iot_wifi" brief="aws_iot_wifi" version="1.0.0" full_name="aws_iot_wifi" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/wifi/portable/vendor/board" target_path="amazon-freertos/wifi" type="src">
        <files mask="aws_wifi.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.wifi_qca_400x.MIMXRT1064" name="aws_iot_wifi_qca_400x" brief="wifi_qca_400x" version="1.0.0" full_name="aws_iot_wifi_qca_400x" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/wifi/portable/nxp/qca_400x" target_path="amazon-freertos/wifi_qca_400x" type="src">
        <files mask="aws_wifi.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.aws_iot.wifi_wiced.MIMXRT1064" name="aws_iot_wifi_wiced" brief="aws_iot_wifi_wiced" version="1.0.0" full_name="aws_iot_wifi_wiced" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/wifi/portable/nxp/wiced" target_path="amazon-freertos/wifi_wiced" type="src">
        <files mask="aws_wifi.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.freertos.MIMXRT1064" name="Amazon-FreeRTOS" brief="Amazon FreeRTOS, Real Time Operating System" version="10.2.0" full_name="Amazon-FreeRTOS Kernel" devices="MIMXRT1064xxxxA" dependency="middleware.template_application.amazon_freertos.MIMXRT1064" user_visible="true" type="OS">
      <defines>
        <define name="FSL_RTOS_FREE_RTOS" value=""/>
        <define name="SDK_OS_FREE_RTOS" value=""/>
      </defines>
      <source exclude="true" path="rtos/amazon-freertos" target_path="amazon-freertos" type="other">
        <files mask="CHANGELOG.md"/>
        <files mask="README.md"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos" target_path="amazon-freertos" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
        <files mask="directories.txt"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos" target_path="amazon-freertos/license" type="other">
        <files mask="LICENSE"/>
      </source>
      <source path="rtos/amazon-freertos/lib/FreeRTOS" target_path="amazon-freertos/freertos" type="src">
        <files mask="event_groups.c"/>
        <files mask="list.c"/>
        <files mask="queue.c"/>
        <files mask="stream_buffer.c"/>
        <files mask="tasks.c"/>
        <files mask="timers.c"/>
      </source>
      <source toolchain="armgcc mcuxpresso" path="rtos/amazon-freertos/lib/FreeRTOS/portable/GCC/ARM_CM4F" target_path="amazon-freertos/freertos/portable" type="src" device_cores="core0_MIMXRT1064xxxxA">
        <files mask="port.c"/>
      </source>
      <source toolchain="armgcc mcuxpresso" path="rtos/amazon-freertos/lib/FreeRTOS/portable/GCC/ARM_CM4F" target_path="amazon-freertos/freertos/portable" type="c_include" device_cores="core0_MIMXRT1064xxxxA">
        <files mask="portmacro.h"/>
      </source>
      <source toolchain="iar" path="rtos/amazon-freertos/lib/FreeRTOS/portable/IAR/ARM_CM4F" target_path="amazon-freertos/freertos/portable" type="src" device_cores="core0_MIMXRT1064xxxxA">
        <files mask="port.c"/>
      </source>
      <source toolchain="iar" path="rtos/amazon-freertos/lib/FreeRTOS/portable/IAR/ARM_CM4F" target_path="amazon-freertos/freertos/portable" type="asm_include" device_cores="core0_MIMXRT1064xxxxA">
        <files mask="portasm.s"/>
      </source>
      <source toolchain="iar" path="rtos/amazon-freertos/lib/FreeRTOS/portable/IAR/ARM_CM4F" target_path="amazon-freertos/freertos/portable" type="c_include" device_cores="core0_MIMXRT1064xxxxA">
        <files mask="portmacro.h"/>
      </source>
      <source toolchain="mdk" path="rtos/amazon-freertos/lib/FreeRTOS/portable/RVDS/ARM_CM4F" target_path="amazon-freertos/freertos/portable" type="src" device_cores="core0_MIMXRT1064xxxxA">
        <files mask="port.c"/>
      </source>
      <source toolchain="mdk" path="rtos/amazon-freertos/lib/FreeRTOS/portable/RVDS/ARM_CM4F" target_path="amazon-freertos/freertos/portable" type="c_include" device_cores="core0_MIMXRT1064xxxxA">
        <files mask="portmacro.h"/>
      </source>
      <source path="rtos/amazon-freertos/lib/FreeRTOS/portable" target_path="amazon-freertos/freertos/portable" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib" target_path="amazon-freertos/license" type="doc">
        <files mask="directories.txt"/>
      </source>
      <source path="rtos/amazon-freertos/lib/include" target_path="amazon-freertos/include" type="c_include">
        <files mask="FreeRTOS.h"/>
        <files mask="event_groups.h"/>
        <files mask="freertos_tasks_c_additions.h"/>
        <files mask="message_buffer.h"/>
        <files mask="queue.h"/>
        <files mask="semphr.h"/>
        <files mask="stream_buffer.h"/>
        <files mask="task.h"/>
        <files mask="timers.h"/>
      </source>
      <source path="rtos/amazon-freertos/lib/include/private" target_path="amazon-freertos/include" type="c_include">
        <files mask="deprecated_definitions.h"/>
        <files mask="list.h"/>
        <files mask="mpu_prototypes.h"/>
        <files mask="mpu_wrappers.h"/>
        <files mask="portable.h"/>
        <files mask="projdefs.h"/>
        <files mask="stack_macros.h"/>
        <files mask="threading_alt.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.freertos.freertos_plus_posix.MIMXRT1064" name="Amazon-FreeRTOS plus POSIX" brief="Amazon FreeRTOS plus POSIX" version="10.2.0" full_name="Amazon-FreeRTOS plus POSIX" devices="MIMXRT1064xxxxA" category="Operating System/FreeRTOS Operating System" user_visible="true" type="other">
      <source path="rtos/amazon-freertos/lib/FreeRTOS-Plus-POSIX/include" target_path="amazon-freertos/freertos-plus-posix" type="c_include">
        <files mask="FreeRTOS_POSIX.h"/>
        <files mask="FreeRTOS_POSIX_internal.h"/>
        <files mask="FreeRTOS_POSIX_types.h"/>
      </source>
      <source path="rtos/amazon-freertos/lib/FreeRTOS-Plus-POSIX/include/portable" target_path="amazon-freertos/freertos-plus-posix" type="c_include">
        <files mask="FreeRTOS_POSIX_portable_default.h"/>
      </source>
      <source path="rtos/amazon-freertos/lib/FreeRTOS-Plus-POSIX/include/portable/nxp/lpc54018iotmodule" target_path="amazon-freertos/freertos-plus-posix" type="c_include">
        <files mask="FreeRTOS_POSIX_portable.h"/>
      </source>
      <source path="rtos/amazon-freertos/lib/FreeRTOS-Plus-POSIX/source" target_path="amazon-freertos/freertos-plus-posix" type="src">
        <files mask="FreeRTOS_POSIX_clock.c"/>
        <files mask="FreeRTOS_POSIX_mqueue.c"/>
        <files mask="FreeRTOS_POSIX_pthread.c"/>
        <files mask="FreeRTOS_POSIX_pthread_barrier.c"/>
        <files mask="FreeRTOS_POSIX_pthread_cond.c"/>
        <files mask="FreeRTOS_POSIX_pthread_mutex.c"/>
        <files mask="FreeRTOS_POSIX_sched.c"/>
        <files mask="FreeRTOS_POSIX_semaphore.c"/>
        <files mask="FreeRTOS_POSIX_timer.c"/>
        <files mask="FreeRTOS_POSIX_unistd.c"/>
        <files mask="FreeRTOS_POSIX_utils.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/include/FreeRTOS_POSIX" target_path="amazon-freertos/freertos-plus-posix" type="c_include">
        <files mask="errno.h"/>
        <files mask="fcntl.h"/>
        <files mask="mqueue.h"/>
        <files mask="pthread.h"/>
        <files mask="sched.h"/>
        <files mask="semaphore.h"/>
        <files mask="signal.h"/>
        <files mask="time.h"/>
        <files mask="unistd.h"/>
        <files mask="utils.h"/>
      </source>
      <source path="rtos/amazon-freertos/lib/include/FreeRTOS_POSIX/sys" target_path="amazon-freertos/freertos-plus-posix" type="c_include">
        <files mask="types.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.freertos.freertos_plus_tcp.MIMXRT1064" name="Amazon-FreeRTOS plus TCP" brief="Amazon FreeRTOS plus TCP" version="10.2.0" full_name="Amazon-FreeRTOS plus TCP" devices="MIMXRT1064xxxxA" category="Operating System/FreeRTOS Operating System" user_visible="true" type="other">
      <source path="rtos/amazon-freertos/lib/FreeRTOS-Plus-TCP/include" target_path="amazon-freertos/freertos-plus-posix" type="c_include">
        <files mask="FreeRTOSIPConfigDefaults.h"/>
        <files mask="FreeRTOS_ARP.h"/>
        <files mask="FreeRTOS_DHCP.h"/>
        <files mask="FreeRTOS_DNS.h"/>
        <files mask="FreeRTOS_IP.h"/>
        <files mask="FreeRTOS_IP_Private.h"/>
        <files mask="FreeRTOS_Sockets.h"/>
        <files mask="FreeRTOS_Stream_Buffer.h"/>
        <files mask="FreeRTOS_TCP_IP.h"/>
        <files mask="FreeRTOS_TCP_WIN.h"/>
        <files mask="FreeRTOS_UDP_IP.h"/>
        <files mask="FreeRTOS_errno_TCP.h"/>
        <files mask="IPTraceMacroDefaults.h"/>
        <files mask="NetworkBufferManagement.h"/>
        <files mask="NetworkInterface.h"/>
      </source>
      <source path="rtos/amazon-freertos/lib/FreeRTOS-Plus-TCP/source" target_path="amazon-freertos/freertos-plus-posix" type="src">
        <files mask="FreeRTOS_ARP.c"/>
        <files mask="FreeRTOS_DHCP.c"/>
        <files mask="FreeRTOS_DNS.c"/>
        <files mask="FreeRTOS_IP.c"/>
        <files mask="FreeRTOS_Sockets.c"/>
        <files mask="FreeRTOS_Stream_Buffer.c"/>
        <files mask="FreeRTOS_TCP_IP.c"/>
        <files mask="FreeRTOS_TCP_WIN.c"/>
        <files mask="FreeRTOS_UDP_IP.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/FreeRTOS-Plus-TCP/source" target_path="amazon-freertos/freertos-plus-posix" type="doc">
        <files mask="History.txt"/>
        <files mask="readme.txt"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/FreeRTOS-Plus-TCP/source" target_path="amazon-freertos/freertos-plus-posix" type="other">
        <files mask="ReadMe.url"/>
      </source>
      <source path="rtos/amazon-freertos/lib/FreeRTOS-Plus-TCP/source/portable/BufferManagement" target_path="amazon-freertos/freertos-plus-posix" type="src">
        <files mask="BufferAllocation_1.c"/>
        <files mask="BufferAllocation_2.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/FreeRTOS-Plus-TCP/source/portable/Compiler/CompilerName" target_path="amazon-freertos/freertos-plus-posix" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/FreeRTOS-Plus-TCP/source/portable/Compiler/CompilerName" target_path="amazon-freertos/freertos-plus-posix" type="c_include">
        <files mask="pack_struct_end.h"/>
        <files mask="pack_struct_start.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/FreeRTOS-Plus-TCP/source/portable/Compiler/GCC" target_path="amazon-freertos/freertos-plus-posix" type="c_include">
        <files mask="pack_struct_end.h"/>
        <files mask="pack_struct_start.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/FreeRTOS-Plus-TCP/source/portable/Compiler/IAR" target_path="amazon-freertos/freertos-plus-posix" type="c_include">
        <files mask="pack_struct_end.h"/>
        <files mask="pack_struct_start.h"/>
      </source>
      <source path="rtos/amazon-freertos/lib/FreeRTOS-Plus-TCP/source/portable/NetworkInterface/LPC17xx" target_path="amazon-freertos/freertos-plus-posix" type="src">
        <files mask="NetworkInterface.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/FreeRTOS-Plus-TCP/source/portable/NetworkInterface/LPC18xx" target_path="amazon-freertos/freertos-plus-posix" type="src">
        <files mask="NetworkInterface.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/FreeRTOS-Plus-TCP/source/portable/NetworkInterface/LPC18xx" target_path="amazon-freertos/freertos-plus-posix" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/FreeRTOS-Plus-TCP/source/portable/NetworkInterface" target_path="amazon-freertos/freertos-plus-posix" type="doc">
        <files mask="README_DRIVER_DISCLAIMER.txt"/>
      </source>
      <source path="rtos/amazon-freertos/lib/FreeRTOS-Plus-TCP/source/portable/NetworkInterface/board_family" target_path="amazon-freertos/freertos-plus-posix" type="src">
        <files mask="NetworkInterface.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/FreeRTOS-Plus-TCP/source/portable/NetworkInterface/board_family" target_path="amazon-freertos/freertos-plus-posix" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.freertos.heap_1.MIMXRT1064" name="heap_1" brief="FreeRTOS heap_1 allocator" version="10.2.0" full_name="FreeRTOS_heap_1" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.freertos.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="true" type="other">
      <source path="rtos/amazon-freertos/lib/FreeRTOS/portable/MemMang" target_path="amazon-freertos/freertos/portable" type="src">
        <files mask="heap_1.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.freertos.heap_2.MIMXRT1064" name="heap_2" brief="FreeRTOS heap_2 allocator" version="10.2.0" full_name="FreeRTOS_heap_2" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.freertos.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="true" type="other">
      <source path="rtos/amazon-freertos/lib/FreeRTOS/portable/MemMang" target_path="amazon-freertos/freertos/portable" type="src">
        <files mask="heap_2.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.freertos.heap_3.MIMXRT1064" name="heap_3" brief="FreeRTOS heap_3 allocator" version="10.2.0" full_name="FreeRTOS_heap_3" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.freertos.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 platform.utilities.misc_utilities.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="true" type="other">
      <source path="rtos/amazon-freertos/lib/FreeRTOS/portable/MemMang" target_path="amazon-freertos/freertos/portable" type="src">
        <files mask="heap_3.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.freertos.heap_4.MIMXRT1064" name="heap_4" brief="FreeRTOS heap_4 allocator" version="10.2.0" full_name="FreeRTOS_heap_4" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.freertos.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="true" type="other">
      <source path="rtos/amazon-freertos/lib/FreeRTOS/portable/MemMang" target_path="amazon-freertos/freertos/portable" type="src">
        <files mask="heap_4.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.freertos.heap_5.MIMXRT1064" name="heap_5" brief="FreeRTOS heap_5 allocator" version="10.2.0" full_name="FreeRTOS_heap_5" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.freertos.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="true" type="other">
      <source path="rtos/amazon-freertos/lib/FreeRTOS/portable/MemMang" target_path="amazon-freertos/freertos/portable" type="src">
        <files mask="heap_5.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.freertos.heap_newlib.MIMXRT1064" name="heap_newlib" brief="FreeRTOS heap_newlib allocator" version="10.2.0" full_name="FreeRTOS_heap_newlib" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.freertos.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="true" type="other">
      <source path="rtos/amazon-freertos/lib/FreeRTOS/portable/MemMang" target_path="amazon-freertos/freertos/portable" type="src">
        <files mask="heap_useNewlib.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.third_party.MIMXRT1064" name="amazon_freertos_third_party" brief="third_party" version="1.0.0" full_name="third_party" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party" target_path="amazon-freertos/third_party" type="doc">
        <files mask="directories.txt"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/mcu_vendor" target_path="amazon-freertos/third_party" type="doc">
        <files mask="directories.txt"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/mcu_vendor/vendor/driver_library/driver_library_version" target_path="amazon-freertos/third_party" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.third_party.cmock.MIMXRT1064" name="amazon_freertos_cmock" brief="cmock" version="1.0.0" full_name="cmock" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/third_party/cmock" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask=".gitattributes"/>
        <files mask=".gitmodules"/>
        <files mask=".travis.yml"/>
        <files mask="Gemfile"/>
        <files mask="README.md"/>
        <files mask="config.yml"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/config" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="production_environment.rb"/>
        <files mask="test_environment.rb"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/docs" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="CMock_Summary.md"/>
        <files mask="ThrowTheSwitchCodingStandard.md"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/docs" target_path="amazon-freertos/third_party/cmock" type="doc">
        <files mask="license.txt"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/examples/make_example" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="Makefile"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/examples/make_example/src" target_path="amazon-freertos/third_party/cmock" type="src">
        <files mask="foo.c"/>
        <files mask="main.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/examples/make_example/src" target_path="amazon-freertos/third_party/cmock" type="c_include">
        <files mask="foo.h"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/examples/make_example/test" target_path="amazon-freertos/third_party/cmock" type="src">
        <files mask="test_foo.c"/>
        <files mask="test_main.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/examples/temp_sensor" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="gcc.yml"/>
        <files mask="iar_v4.yml"/>
        <files mask="iar_v5.yml"/>
        <files mask="rakefile.rb"/>
        <files mask="rakefile_helper.rb"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/examples/temp_sensor/src" target_path="amazon-freertos/third_party/cmock" type="c_include">
        <files mask="AT91SAM7X256.h"/>
        <files mask="AdcConductor.h"/>
        <files mask="AdcHardware.h"/>
        <files mask="AdcHardwareConfigurator.h"/>
        <files mask="AdcModel.h"/>
        <files mask="AdcTemperatureSensor.h"/>
        <files mask="Executor.h"/>
        <files mask="IntrinsicsWrapper.h"/>
        <files mask="Main.h"/>
        <files mask="Model.h"/>
        <files mask="ModelConfig.h"/>
        <files mask="TaskScheduler.h"/>
        <files mask="TemperatureCalculator.h"/>
        <files mask="TemperatureFilter.h"/>
        <files mask="TimerConductor.h"/>
        <files mask="TimerConfigurator.h"/>
        <files mask="TimerHardware.h"/>
        <files mask="TimerInterruptConfigurator.h"/>
        <files mask="TimerInterruptHandler.h"/>
        <files mask="TimerModel.h"/>
        <files mask="Types.h"/>
        <files mask="UsartBaudRateRegisterCalculator.h"/>
        <files mask="UsartConductor.h"/>
        <files mask="UsartConfigurator.h"/>
        <files mask="UsartHardware.h"/>
        <files mask="UsartModel.h"/>
        <files mask="UsartPutChar.h"/>
        <files mask="UsartTransmitBufferStatus.h"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/examples/temp_sensor/src" target_path="amazon-freertos/third_party/cmock" type="src">
        <files mask="AdcConductor.c"/>
        <files mask="AdcHardware.c"/>
        <files mask="AdcHardwareConfigurator.c"/>
        <files mask="AdcModel.c"/>
        <files mask="AdcTemperatureSensor.c"/>
        <files mask="Executor.c"/>
        <files mask="IntrinsicsWrapper.c"/>
        <files mask="Main.c"/>
        <files mask="Model.c"/>
        <files mask="TaskScheduler.c"/>
        <files mask="TemperatureCalculator.c"/>
        <files mask="TemperatureFilter.c"/>
        <files mask="TimerConductor.c"/>
        <files mask="TimerConfigurator.c"/>
        <files mask="TimerHardware.c"/>
        <files mask="TimerInterruptConfigurator.c"/>
        <files mask="TimerInterruptHandler.c"/>
        <files mask="TimerModel.c"/>
        <files mask="UsartBaudRateRegisterCalculator.c"/>
        <files mask="UsartConductor.c"/>
        <files mask="UsartConfigurator.c"/>
        <files mask="UsartHardware.c"/>
        <files mask="UsartModel.c"/>
        <files mask="UsartPutChar.c"/>
        <files mask="UsartTransmitBufferStatus.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/examples/temp_sensor/test" target_path="amazon-freertos/third_party/cmock" type="src">
        <files mask="TestAdcConductor.c"/>
        <files mask="TestAdcHardware.c"/>
        <files mask="TestAdcHardwareConfigurator.c"/>
        <files mask="TestAdcModel.c"/>
        <files mask="TestAdcTemperatureSensor.c"/>
        <files mask="TestExecutor.c"/>
        <files mask="TestMain.c"/>
        <files mask="TestModel.c"/>
        <files mask="TestTaskScheduler.c"/>
        <files mask="TestTemperatureCalculator.c"/>
        <files mask="TestTemperatureFilter.c"/>
        <files mask="TestTimerConductor.c"/>
        <files mask="TestTimerConfigurator.c"/>
        <files mask="TestTimerHardware.c"/>
        <files mask="TestTimerInterruptConfigurator.c"/>
        <files mask="TestTimerInterruptHandler.c"/>
        <files mask="TestTimerModel.c"/>
        <files mask="TestUsartBaudRateRegisterCalculator.c"/>
        <files mask="TestUsartConductor.c"/>
        <files mask="TestUsartConfigurator.c"/>
        <files mask="TestUsartHardware.c"/>
        <files mask="TestUsartModel.c"/>
        <files mask="TestUsartPutChar.c"/>
        <files mask="TestUsartTransmitBufferStatus.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/lib" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="cmock.rb"/>
        <files mask="cmock_config.rb"/>
        <files mask="cmock_file_writer.rb"/>
        <files mask="cmock_generator.rb"/>
        <files mask="cmock_generator_plugin_array.rb"/>
        <files mask="cmock_generator_plugin_callback.rb"/>
        <files mask="cmock_generator_plugin_cexception.rb"/>
        <files mask="cmock_generator_plugin_expect.rb"/>
        <files mask="cmock_generator_plugin_expect_any_args.rb"/>
        <files mask="cmock_generator_plugin_ignore.rb"/>
        <files mask="cmock_generator_plugin_ignore_arg.rb"/>
        <files mask="cmock_generator_plugin_return_thru_ptr.rb"/>
        <files mask="cmock_generator_utils.rb"/>
        <files mask="cmock_header_parser.rb"/>
        <files mask="cmock_plugin_manager.rb"/>
        <files mask="cmock_unityhelper_parser.rb"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/release" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="build.info"/>
        <files mask="version.info"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/scripts" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="create_makefile.rb"/>
        <files mask="create_mock.rb"/>
        <files mask="create_runner.rb"/>
        <files mask="test_summary.rb"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/src" target_path="amazon-freertos/third_party/cmock" type="src">
        <files mask="cmock.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/src" target_path="amazon-freertos/third_party/cmock" type="c_include">
        <files mask="cmock.h"/>
        <files mask="cmock_internals.h"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/c" target_path="amazon-freertos/third_party/cmock" type="src">
        <files mask="TestCMockC.c"/>
        <files mask="TestCMockCDynamic.c"/>
        <files mask="TestCMockCDynamic_Runner.c"/>
        <files mask="TestCMockC_Runner.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/c" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="TestCMockC.yml"/>
        <files mask="TestCMockCDynamic.yml"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/iar/iar_v4/Resource" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="SAM7_FLASH.mac"/>
        <files mask="SAM7_RAM.mac"/>
        <files mask="SAM7_SIM.mac"/>
        <files mask="at91SAM7X256_FLASH.xcl"/>
        <files mask="at91SAM7X256_RAM.xcl"/>
        <files mask="ioat91sam7x256.ddf"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/iar/iar_v4" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="cmock_demo.dep"/>
        <files mask="cmock_demo.eww"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/iar/iar_v4" target_path="amazon-freertos/third_party/cmock" type="debug">
        <files mask="cmock_demo.ewd"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/iar/iar_v4" target_path="amazon-freertos/third_party/cmock" type="project">
        <files mask="cmock_demo.ewp"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/iar/iar_v4/incIAR" target_path="amazon-freertos/third_party/cmock" type="c_include">
        <files mask="AT91SAM7X-EK.h"/>
        <files mask="AT91SAM7X256_inc.h"/>
        <files mask="ioat91sam7x256.h"/>
        <files mask="lib_AT91SAM7X256.h"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/iar/iar_v4/incIAR" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="AT91SAM7X256.inc"/>
        <files mask="AT91SAM7X256.rdf"/>
        <files mask="AT91SAM7X256.tcl"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/iar/iar_v4/settings" target_path="amazon-freertos/third_party/cmock" type="script">
        <files mask="cmock_demo.cspy.bat"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/iar/iar_v4/settings" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="cmock_demo.dbgdt"/>
        <files mask="cmock_demo.wsdt"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/iar/iar_v4/settings" target_path="amazon-freertos/third_party/cmock" type="configuration">
        <files mask="cmock_demo.dni"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/iar/iar_v4/srcIAR" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="Cstartup.s79"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/iar/iar_v4/srcIAR" target_path="amazon-freertos/third_party/cmock" type="src">
        <files mask="Cstartup_SAM7.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/iar/iar_v5/Resource" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="SAM7_FLASH.mac"/>
        <files mask="SAM7_RAM.mac"/>
        <files mask="SAM7_SIM.mac"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/iar/iar_v5/Resource" target_path="amazon-freertos/third_party/cmock" type="linker">
        <files mask="at91SAM7X256_FLASH.icf"/>
        <files mask="at91SAM7X256_RAM.icf"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/iar/iar_v5" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="cmock_demo.dep"/>
        <files mask="cmock_demo.eww"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/iar/iar_v5" target_path="amazon-freertos/third_party/cmock" type="debug">
        <files mask="cmock_demo.ewd"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/iar/iar_v5" target_path="amazon-freertos/third_party/cmock" type="project">
        <files mask="cmock_demo.ewp"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/iar/iar_v5/incIAR" target_path="amazon-freertos/third_party/cmock" type="c_include">
        <files mask="AT91SAM7X-EK.h"/>
        <files mask="AT91SAM7X256_inc.h"/>
        <files mask="lib_AT91SAM7X256.h"/>
        <files mask="project.h"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/iar/iar_v5/settings" target_path="amazon-freertos/third_party/cmock" type="script">
        <files mask="BasicInterrupt_SAM7X.cspy.bat"/>
        <files mask="cmock_demo.cspy.bat"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/iar/iar_v5/settings" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="BasicInterrupt_SAM7X.dbgdt"/>
        <files mask="BasicInterrupt_SAM7X.wsdt"/>
        <files mask="BasicInterrupt_SAM7X_FLASH_Debug.jlink"/>
        <files mask="cmock_demo.dbgdt"/>
        <files mask="cmock_demo.wsdt"/>
        <files mask="cmock_demo_Binary.jlink"/>
        <files mask="cmock_demo_FLASH_Debug.jlink"/>
        <files mask="cmock_demo_RAM_Debug.jlink"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/iar/iar_v5/settings" target_path="amazon-freertos/third_party/cmock" type="configuration">
        <files mask="BasicInterrupt_SAM7X.dni"/>
        <files mask="cmock_demo.dni"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/iar/iar_v5/srcIAR" target_path="amazon-freertos/third_party/cmock" type="asm_include">
        <files mask="Cstartup.s"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/iar/iar_v5/srcIAR" target_path="amazon-freertos/third_party/cmock" type="src">
        <files mask="Cstartup_SAM7.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="rakefile"/>
        <files mask="rakefile_helper.rb"/>
        <files mask="test_helper.rb"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/system" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="systest_generator.rb"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/system/test_compilation" target_path="amazon-freertos/third_party/cmock" type="c_include">
        <files mask="callingconv.h"/>
        <files mask="const.h"/>
        <files mask="osek.h"/>
        <files mask="parsing.h"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/system/test_compilation" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="config.yml"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/system/test_interactions" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="all_plugins_but_other_limits.yml"/>
        <files mask="all_plugins_coexist.yml"/>
        <files mask="array_and_pointer_handling.yml"/>
        <files mask="basic_expect_and_return.yml"/>
        <files mask="const_primitives_handling.yml"/>
        <files mask="doesnt_leave_details_behind.yml"/>
        <files mask="enforce_strict_ordering.yml"/>
        <files mask="expect_and_return_custom_types.yml"/>
        <files mask="expect_and_return_treat_as.yml"/>
        <files mask="expect_and_throw.yml"/>
        <files mask="expect_any_args.yml"/>
        <files mask="fancy_pointer_handling.yml"/>
        <files mask="function_pointer_handling.yml"/>
        <files mask="ignore_and_return.yml"/>
        <files mask="ignore_strict_mock_calling.yml"/>
        <files mask="newer_standards_stuff1.yml"/>
        <files mask="nonstandard_parsed_stuff_1.yml"/>
        <files mask="nonstandard_parsed_stuff_2.yml"/>
        <files mask="out_of_memory.yml"/>
        <files mask="parsing_challenges.yml"/>
        <files mask="return_thru_ptr_and_expect_any_args.yml"/>
        <files mask="return_thru_ptr_ignore_arg.yml"/>
        <files mask="struct_union_enum_expect_and_return.yml"/>
        <files mask="struct_union_enum_expect_and_return_with_plugins.yml"/>
        <files mask="stubs_with_callbacks.yml"/>
        <files mask="unity_64bit_support.yml"/>
        <files mask="unity_ignores.yml"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/targets" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="clang_strict.yml"/>
        <files mask="gcc.yml"/>
        <files mask="gcc_64.yml"/>
        <files mask="gcc_tiny.yml"/>
        <files mask="iar_arm_v4.yml"/>
        <files mask="iar_arm_v5.yml"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/test/unit" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="cmock_config_test.rb"/>
        <files mask="cmock_config_test.yml"/>
        <files mask="cmock_file_writer_test.rb"/>
        <files mask="cmock_generator_main_test.rb"/>
        <files mask="cmock_generator_plugin_array_test.rb"/>
        <files mask="cmock_generator_plugin_callback_test.rb"/>
        <files mask="cmock_generator_plugin_cexception_test.rb"/>
        <files mask="cmock_generator_plugin_expect_a_test.rb"/>
        <files mask="cmock_generator_plugin_expect_any_args_test.rb"/>
        <files mask="cmock_generator_plugin_expect_b_test.rb"/>
        <files mask="cmock_generator_plugin_ignore_arg_test.rb"/>
        <files mask="cmock_generator_plugin_ignore_test.rb"/>
        <files mask="cmock_generator_plugin_return_thru_ptr_test.rb"/>
        <files mask="cmock_generator_utils_test.rb"/>
        <files mask="cmock_header_parser_test.rb"/>
        <files mask="cmock_plugin_manager_test.rb"/>
        <files mask="cmock_unityhelper_parser_test.rb"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/vendor/behaviors" target_path="amazon-freertos/third_party/cmock" type="doc">
        <files mask="Manifest.txt"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/vendor/behaviors" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="Rakefile"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/vendor/behaviors/lib" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="behaviors.rb"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/vendor/behaviors/lib/behaviors" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="reporttask.rb"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/vendor/behaviors/test" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="behaviors_tasks_test.rb"/>
        <files mask="behaviors_test.rb"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/vendor/behaviors/test/tasks_test" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="Rakefile"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/vendor/behaviors/test/tasks_test/lib" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="user.rb"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/cmock/vendor/behaviors/test/tasks_test/test" target_path="amazon-freertos/third_party/cmock" type="other">
        <files mask="user_test.rb"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.third_party.jsmn.MIMXRT1064" name="amazon_freertos_jsmn" brief="jsmn" version="1.0.0" full_name="jsmn" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/third_party/jsmn" target_path="amazon-freertos/third_party/jsmn" type="src">
        <files mask="jsmn.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/jsmn" target_path="amazon-freertos/third_party/jsmn" type="c_include">
        <files mask="jsmn.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.third_party.pkcs11.MIMXRT1064" name="amazon_freertos_pkcs11" brief="pkcs11" version="1.0.0" full_name="pkcs11" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/third_party/pkcs11" target_path="amazon-freertos/third_party/pkcs11" type="c_include">
        <files mask="pkcs11.h"/>
        <files mask="pkcs11f.h"/>
        <files mask="pkcs11t.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.third_party.tinycbor.MIMXRT1064" name="amazon_freertos_tinycbor" brief="tinycbor" version="1.0.0" full_name="tinycbor" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tinycbor" target_path="amazon-freertos/third_party/tinycbor" type="other">
        <files mask="LICENSE"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tinycbor" target_path="amazon-freertos/third_party/tinycbor" type="c_include">
        <files mask="assert_p.h"/>
        <files mask="cbor.h"/>
        <files mask="cborconstants_p.h"/>
        <files mask="compilersupport_p.h"/>
        <files mask="extract_number_p.h"/>
        <files mask="math_support_p.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tinycbor" target_path="amazon-freertos/third_party/tinycbor" type="src">
        <files mask="cborencoder.c"/>
        <files mask="cborencoder_close_container_checked.c"/>
        <files mask="cborerrorstrings.c"/>
        <files mask="cborparser.c"/>
        <files mask="cborparser_dup_string.c"/>
        <files mask="cborpretty.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.third_party.tinycrypt.MIMXRT1064" name="amazon_freertos_tinycrypt" brief="tinycrypt" version="1.0.0" full_name="tinycrypt" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tinycrypt" target_path="amazon-freertos/third_party/tinycrypt" type="other">
        <files mask="AUTHORS"/>
        <files mask="LICENSE"/>
        <files mask="Makefile"/>
        <files mask="README"/>
        <files mask="VERSION"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tinycrypt/asn1" target_path="amazon-freertos/third_party/tinycrypt" type="c_include">
        <files mask="asn1.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tinycrypt/asn1" target_path="amazon-freertos/third_party/tinycrypt" type="src">
        <files mask="asn1parse.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tinycrypt" target_path="amazon-freertos/third_party/tinycrypt" type="script">
        <files mask="config.mk"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tinycrypt/documentation" target_path="amazon-freertos/third_party/tinycrypt" type="other">
        <files mask="tinycrypt.rst"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tinycrypt/lib" target_path="amazon-freertos/third_party/tinycrypt" type="other">
        <files mask="Makefile"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tinycrypt/lib/include/tinycrypt" target_path="amazon-freertos/third_party/tinycrypt" type="c_include">
        <files mask="aes.h"/>
        <files mask="cbc_mode.h"/>
        <files mask="ccm_mode.h"/>
        <files mask="cmac_mode.h"/>
        <files mask="constants.h"/>
        <files mask="ctr_mode.h"/>
        <files mask="ctr_prng.h"/>
        <files mask="ecc.h"/>
        <files mask="ecc_dh.h"/>
        <files mask="ecc_dsa.h"/>
        <files mask="ecc_platform_specific.h"/>
        <files mask="hmac.h"/>
        <files mask="hmac_prng.h"/>
        <files mask="sha256.h"/>
        <files mask="utils.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tinycrypt/lib/source" target_path="amazon-freertos/third_party/tinycrypt" type="src">
        <files mask="aes_decrypt.c"/>
        <files mask="aes_encrypt.c"/>
        <files mask="cbc_mode.c"/>
        <files mask="ccm_mode.c"/>
        <files mask="cmac_mode.c"/>
        <files mask="ctr_mode.c"/>
        <files mask="ctr_prng.c"/>
        <files mask="ecc.c"/>
        <files mask="ecc_dh.c"/>
        <files mask="ecc_dsa.c"/>
        <files mask="ecc_platform_specific.c"/>
        <files mask="hmac.c"/>
        <files mask="hmac_prng.c"/>
        <files mask="sha256.c"/>
        <files mask="utils.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tinycrypt/tests" target_path="amazon-freertos/third_party/tinycrypt" type="other">
        <files mask="Makefile"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tinycrypt/tests/include" target_path="amazon-freertos/third_party/tinycrypt" type="c_include">
        <files mask="test_ecc_utils.h"/>
        <files mask="test_utils.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tinycrypt/tests" target_path="amazon-freertos/third_party/tinycrypt" type="binary">
        <files mask="pseudo-random-data.bin"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tinycrypt/tests" target_path="amazon-freertos/third_party/tinycrypt" type="src">
        <files mask="test_aes.c"/>
        <files mask="test_cbc_mode.c"/>
        <files mask="test_ccm_mode.c"/>
        <files mask="test_cmac_mode.c"/>
        <files mask="test_ctr_mode.c"/>
        <files mask="test_ctr_prng.c"/>
        <files mask="test_ecc_dh.c"/>
        <files mask="test_ecc_dsa.c"/>
        <files mask="test_ecc_utils.c"/>
        <files mask="test_hmac.c"/>
        <files mask="test_hmac_prng.c"/>
        <files mask="test_sha256.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.third_party.tracealyzer_recorder.MIMXRT1064" name="amazon_freertos_tracealyzer_recorder" brief="tracealyzer_recorder" version="1.0.0" full_name="tracealyzer_recorder" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tracealyzer_recorder/Include" target_path="amazon-freertos/third_party/tracealyzer_recorder" type="c_include">
        <files mask="trcHardwarePort.h"/>
        <files mask="trcKernelPort.h"/>
        <files mask="trcPortDefines.h"/>
        <files mask="trcRecorder.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tracealyzer_recorder" target_path="amazon-freertos/third_party/tracealyzer_recorder" type="other">
        <files mask="ReadMe.url"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tracealyzer_recorder/config" target_path="amazon-freertos/third_party/tracealyzer_recorder" type="c_include">
        <files mask="trcConfig.h"/>
        <files mask="trcSnapshotConfig.h"/>
        <files mask="trcStreamingConfig.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tracealyzer_recorder" target_path="amazon-freertos/third_party/tracealyzer_recorder" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tracealyzer_recorder/streamports/Jlink_RTT" target_path="amazon-freertos/third_party/tracealyzer_recorder" type="doc">
        <files mask="Readme-Streamport.txt"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tracealyzer_recorder/streamports/Jlink_RTT" target_path="amazon-freertos/third_party/tracealyzer_recorder" type="src">
        <files mask="SEGGER_RTT.c"/>
        <files mask="SEGGER_RTT_Printf.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tracealyzer_recorder/streamports/Jlink_RTT/include" target_path="amazon-freertos/third_party/tracealyzer_recorder" type="c_include">
        <files mask="SEGGER_RTT.h"/>
        <files mask="SEGGER_RTT_Conf.h"/>
        <files mask="trcStreamingPort.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tracealyzer_recorder/streamports/TCPIP" target_path="amazon-freertos/third_party/tracealyzer_recorder" type="doc">
        <files mask="Readme-Streamport.txt"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tracealyzer_recorder/streamports/TCPIP/include" target_path="amazon-freertos/third_party/tracealyzer_recorder" type="c_include">
        <files mask="trcStreamingPort.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tracealyzer_recorder/streamports/TCPIP" target_path="amazon-freertos/third_party/tracealyzer_recorder" type="src">
        <files mask="trcStreamingPort.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tracealyzer_recorder/streamports/USB_CDC" target_path="amazon-freertos/third_party/tracealyzer_recorder" type="doc">
        <files mask="Readme-Streamport.txt"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tracealyzer_recorder/streamports/USB_CDC/include" target_path="amazon-freertos/third_party/tracealyzer_recorder" type="c_include">
        <files mask="trcStreamingPort.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tracealyzer_recorder/streamports/USB_CDC" target_path="amazon-freertos/third_party/tracealyzer_recorder" type="src">
        <files mask="trcStreamingPort.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/tracealyzer_recorder" target_path="amazon-freertos/third_party/tracealyzer_recorder" type="src">
        <files mask="trcKernelPort.c"/>
        <files mask="trcSnapshotRecorder.c"/>
        <files mask="trcStreamingRecorder.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.third_party.unity.MIMXRT1064" name="amazon_freertos_unity" brief="unity" version="1.0.0" full_name="unity" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity" target_path="amazon-freertos/third_party/unity" type="other">
        <files mask=".gitattributes"/>
        <files mask=".travis.yml"/>
        <files mask="README.md"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/auto" target_path="amazon-freertos/third_party/unity" type="other">
        <files mask="colour_prompt.rb"/>
        <files mask="colour_reporter.rb"/>
        <files mask="generate_config.yml"/>
        <files mask="generate_module.rb"/>
        <files mask="generate_test_runner.rb"/>
        <files mask="parse_output.rb"/>
        <files mask="stylize_as_junit.rb"/>
        <files mask="test_file_filter.rb"/>
        <files mask="type_sanitizer.rb"/>
        <files mask="unity_test_summary.rb"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/auto" target_path="amazon-freertos/third_party/unity" type="script">
        <files mask="unity_test_summary.py"/>
        <files mask="unity_to_junit.py"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/docs" target_path="amazon-freertos/third_party/unity" type="other">
        <files mask="ThrowTheSwitchCodingStandard.md"/>
        <files mask="UnityAssertionsReference.md"/>
        <files mask="UnityConfigurationGuide.md"/>
        <files mask="UnityGettingStartedGuide.md"/>
        <files mask="UnityHelperScriptsGuide.md"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/docs" target_path="amazon-freertos/third_party/unity" type="doc">
        <files mask="UnityAssertionsCheatSheetSuitableforPrintingandPossiblyFraming.pdf"/>
        <files mask="license.txt"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/examples/example_1" target_path="amazon-freertos/third_party/unity" type="other">
        <files mask="makefile"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/examples/example_1" target_path="amazon-freertos/third_party/unity" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/examples/example_1/src" target_path="amazon-freertos/third_party/unity" type="src">
        <files mask="ProductionCode.c"/>
        <files mask="ProductionCode2.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/examples/example_1/src" target_path="amazon-freertos/third_party/unity" type="c_include">
        <files mask="ProductionCode.h"/>
        <files mask="ProductionCode2.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/examples/example_1/test" target_path="amazon-freertos/third_party/unity" type="src">
        <files mask="TestProductionCode.c"/>
        <files mask="TestProductionCode2.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/examples/example_1/test/test_runners" target_path="amazon-freertos/third_party/unity" type="src">
        <files mask="TestProductionCode2_Runner.c"/>
        <files mask="TestProductionCode_Runner.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/examples/example_2" target_path="amazon-freertos/third_party/unity" type="other">
        <files mask="makefile"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/examples/example_2" target_path="amazon-freertos/third_party/unity" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/examples/example_2/src" target_path="amazon-freertos/third_party/unity" type="src">
        <files mask="ProductionCode.c"/>
        <files mask="ProductionCode2.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/examples/example_2/src" target_path="amazon-freertos/third_party/unity" type="c_include">
        <files mask="ProductionCode.h"/>
        <files mask="ProductionCode2.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/examples/example_2/test" target_path="amazon-freertos/third_party/unity" type="src">
        <files mask="TestProductionCode.c"/>
        <files mask="TestProductionCode2.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/examples/example_2/test/test_runners" target_path="amazon-freertos/third_party/unity" type="src">
        <files mask="TestProductionCode2_Runner.c"/>
        <files mask="TestProductionCode_Runner.c"/>
        <files mask="all_tests.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/examples/example_3/helper" target_path="amazon-freertos/third_party/unity" type="src">
        <files mask="UnityHelper.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/examples/example_3/helper" target_path="amazon-freertos/third_party/unity" type="c_include">
        <files mask="UnityHelper.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/examples/example_3" target_path="amazon-freertos/third_party/unity" type="other">
        <files mask="rakefile.rb"/>
        <files mask="rakefile_helper.rb"/>
        <files mask="target_gcc_32.yml"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/examples/example_3" target_path="amazon-freertos/third_party/unity" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/examples/example_3/src" target_path="amazon-freertos/third_party/unity" type="src">
        <files mask="ProductionCode.c"/>
        <files mask="ProductionCode2.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/examples/example_3/src" target_path="amazon-freertos/third_party/unity" type="c_include">
        <files mask="ProductionCode.h"/>
        <files mask="ProductionCode2.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/examples/example_3/test" target_path="amazon-freertos/third_party/unity" type="src">
        <files mask="TestProductionCode.c"/>
        <files mask="TestProductionCode2.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/examples" target_path="amazon-freertos/third_party/unity" type="c_include">
        <files mask="unity_config.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/extras/eclipse" target_path="amazon-freertos/third_party/unity" type="doc">
        <files mask="error_parsers.txt"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/extras/fixture" target_path="amazon-freertos/third_party/unity" type="other">
        <files mask="rakefile.rb"/>
        <files mask="rakefile_helper.rb"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/extras/fixture" target_path="amazon-freertos/third_party/unity" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/extras/fixture/src" target_path="amazon-freertos/third_party/unity" type="src">
        <files mask="unity_fixture.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/extras/fixture/src" target_path="amazon-freertos/third_party/unity" type="c_include">
        <files mask="unity_fixture.h"/>
        <files mask="unity_fixture_internals.h"/>
        <files mask="unity_fixture_malloc_overrides.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/extras/fixture/test" target_path="amazon-freertos/third_party/unity" type="other">
        <files mask="Makefile"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/extras/fixture/test/main" target_path="amazon-freertos/third_party/unity" type="src">
        <files mask="AllTests.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/extras/fixture/test" target_path="amazon-freertos/third_party/unity" type="src">
        <files mask="template_fixture_tests.c"/>
        <files mask="unity_fixture_Test.c"/>
        <files mask="unity_fixture_TestRunner.c"/>
        <files mask="unity_output_Spy.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/extras/fixture/test" target_path="amazon-freertos/third_party/unity" type="c_include">
        <files mask="unity_output_Spy.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/release" target_path="amazon-freertos/third_party/unity" type="other">
        <files mask="build.info"/>
        <files mask="version.info"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/src" target_path="amazon-freertos/third_party/unity" type="src">
        <files mask="unity.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/src" target_path="amazon-freertos/third_party/unity" type="c_include">
        <files mask="unity.h"/>
        <files mask="unity_internals.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/test" target_path="amazon-freertos/third_party/unity" type="other">
        <files mask=".rubocop.yml"/>
        <files mask="Makefile"/>
        <files mask="rakefile"/>
        <files mask="rakefile_helper.rb"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/test/expectdata" target_path="amazon-freertos/third_party/unity" type="src">
        <files mask="testsample_cmd.c"/>
        <files mask="testsample_def.c"/>
        <files mask="testsample_head1.c"/>
        <files mask="testsample_mock_cmd.c"/>
        <files mask="testsample_mock_def.c"/>
        <files mask="testsample_mock_head1.c"/>
        <files mask="testsample_mock_new1.c"/>
        <files mask="testsample_mock_new2.c"/>
        <files mask="testsample_mock_param.c"/>
        <files mask="testsample_mock_run1.c"/>
        <files mask="testsample_mock_run2.c"/>
        <files mask="testsample_mock_yaml.c"/>
        <files mask="testsample_new1.c"/>
        <files mask="testsample_new2.c"/>
        <files mask="testsample_param.c"/>
        <files mask="testsample_run1.c"/>
        <files mask="testsample_run2.c"/>
        <files mask="testsample_yaml.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/test/expectdata" target_path="amazon-freertos/third_party/unity" type="c_include">
        <files mask="testsample_head1.h"/>
        <files mask="testsample_mock_head1.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/test/spec" target_path="amazon-freertos/third_party/unity" type="other">
        <files mask="generate_module_existing_file_spec.rb"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/test/targets" target_path="amazon-freertos/third_party/unity" type="other">
        <files mask="clang_file.yml"/>
        <files mask="clang_strict.yml"/>
        <files mask="gcc_32.yml"/>
        <files mask="gcc_64.yml"/>
        <files mask="gcc_auto_limits.yml"/>
        <files mask="gcc_auto_stdint.yml"/>
        <files mask="gcc_manual_math.yml"/>
        <files mask="hitech_picc18.yml"/>
        <files mask="iar_arm_v4.yml"/>
        <files mask="iar_arm_v5.yml"/>
        <files mask="iar_arm_v5_3.yml"/>
        <files mask="iar_armcortex_LM3S9B92_v5_4.yml"/>
        <files mask="iar_cortexm3_v5.yml"/>
        <files mask="iar_msp430.yml"/>
        <files mask="iar_sh2a_v6.yml"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/test/testdata" target_path="amazon-freertos/third_party/unity" type="c_include">
        <files mask="CException.h"/>
        <files mask="Defs.h"/>
        <files mask="cmock.h"/>
        <files mask="mockMock.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/test/testdata" target_path="amazon-freertos/third_party/unity" type="src">
        <files mask="testRunnerGenerator.c"/>
        <files mask="testRunnerGeneratorSmall.c"/>
        <files mask="testRunnerGeneratorWithMocks.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/test/tests" target_path="amazon-freertos/third_party/unity" type="other">
        <files mask="test_generate_test_runner.rb"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/third_party/unity/test/tests" target_path="amazon-freertos/third_party/unity" type="src">
        <files mask="testparameterized.c"/>
        <files mask="testunity.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.third_party.win_pcap.MIMXRT1064" name="amazon_freertos_win_pcap" brief="win_pcap" version="1.0.0" full_name="win_pcap" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/lib/third_party/win_pcap" target_path="amazon-freertos/third_party/win_pcap" type="c_include">
        <files mask="Packet32.h"/>
        <files mask="PacketData.h"/>
        <files mask="Win32-Extensions.h"/>
        <files mask="bittypes.h"/>
        <files mask="ip6_misc.h"/>
        <files mask="pcap-bpf.h"/>
        <files mask="pcap-namedb.h"/>
        <files mask="pcap-stdinc.h"/>
        <files mask="pcap.h"/>
        <files mask="remote-ext.h"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/win_pcap" target_path="amazon-freertos/third_party/win_pcap" type="lib">
        <files mask="libwpcap.a"/>
        <files mask="wpcap.lib"/>
      </source>
      <source path="rtos/amazon-freertos/lib/third_party/win_pcap/pcap" target_path="amazon-freertos/third_party/win_pcap" type="c_include">
        <files mask="bluetooth.h"/>
        <files mask="bpf.h"/>
        <files mask="namedb.h"/>
        <files mask="pcap.h"/>
        <files mask="sll.h"/>
        <files mask="usb.h"/>
        <files mask="vlan.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.tools.aws_config_quick_start.MIMXRT1064" name="amazon_freertos_aws_config_quick_start" brief="aws_config_quick_start" version="1.0.0" full_name="aws_config_quick_start" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source exclude="true" path="rtos/amazon-freertos/tools/aws_config_quick_start" target_path="amazon-freertos/tools/aws_config_quick_start" type="other">
        <files mask="README.md"/>
        <files mask="aws_clientcredential.templ"/>
        <files mask="aws_clientcredential_keys.templ"/>
        <files mask="configure.json"/>
        <files mask="policy_document.templ"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/tools/aws_config_quick_start" target_path="amazon-freertos/tools/aws_config_quick_start" type="script">
        <files mask="SetupAWS.py"/>
        <files mask="certs.py"/>
        <files mask="misc.py"/>
        <files mask="policy.py"/>
        <files mask="thing.py"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.tools.certificate_configuration.MIMXRT1064" name="amazon_freertos_certificate_configuration" brief="certificate_configuration" version="1.0.0" full_name="certificate_configuration" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source exclude="true" path="rtos/amazon-freertos/tools/certificate_configuration" target_path="amazon-freertos/tools/certificate_configuration" type="doc">
        <files mask="CertificateConfigurator.html"/>
        <files mask="PEMfileToCString.html"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/tools/certificate_configuration/js" target_path="amazon-freertos/tools/certificate_configuration" type="script">
        <files mask="generator.js"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.tools.checks.MIMXRT1064" name="amazon_freertos_checks" brief="checks" version="1.0.0" full_name="checks" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source exclude="true" path="rtos/amazon-freertos/tools/checks/afqp/afqp_check" target_path="amazon-freertos/tools/checks" type="other">
        <files mask="README.md"/>
        <files mask="license.templ"/>
        <files mask="rules.json"/>
        <files mask="setup.cfg"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/tools/checks/afqp/afqp_check/src" target_path="amazon-freertos/tools/checks" type="script">
        <files mask="__init__.py"/>
        <files mask="afqp_check.py"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/tools/checks/afqp/afqp_check/tst" target_path="amazon-freertos/tools/checks" type="other">
        <files mask=".cproject_compliant"/>
        <files mask=".cproject_four_different_roots"/>
        <files mask=".project_compliant"/>
        <files mask=".project_invalid_project_name"/>
        <files mask=".project_multiple_roots"/>
        <files mask=".project_seven_missing_locationURI"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/tools/checks/afqp/afqp_check/tst" target_path="amazon-freertos/tools/checks" type="c_include">
        <files mask="license_test_0.h"/>
        <files mask="license_test_1.h"/>
        <files mask="license_test_unmatching.h"/>
        <files mask="missing_platform_name.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/tools/checks/afqp/afqp_check/tst" target_path="amazon-freertos/tools/checks" type="script">
        <files mask="test_afqp_check.py"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/tools/checks/style/hn_check" target_path="amazon-freertos/tools/checks" type="other">
        <files mask=".gitattributes"/>
        <files mask=".gitmessage"/>
        <files mask="readme.md"/>
        <files mask="setup.cfg"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/tools/checks/style/hn_check/src" target_path="amazon-freertos/tools/checks" type="script">
        <files mask="__init__.py"/>
        <files mask="hn_check.py"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/tools/checks/style/hn_check/test" target_path="amazon-freertos/tools/checks" type="src">
        <files mask="source_file.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/tools/checks/style/hn_check/test" target_path="amazon-freertos/tools/checks" type="script">
        <files mask="test_hn_check.py"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.tools.echo_server.MIMXRT1064" name="amazon_freertos_echo_server" brief="echo_server" version="1.0.0" full_name="echo_server" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source exclude="true" path="rtos/amazon-freertos/tools/echo_server" target_path="amazon-freertos/tools/echo_server" type="other">
        <files mask="echo_server.go"/>
        <files mask="tls_echo_server.go"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/tools/echo_server" target_path="amazon-freertos/tools/echo_server" type="doc">
        <files mask="readme-gencert.txt"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.tools.git.MIMXRT1064" name="amazon_freertos_git" brief="git" version="1.0.0" full_name="git" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source exclude="true" path="rtos/amazon-freertos/tools/git/hooks" target_path="amazon-freertos/tools/git" type="other">
        <files mask=".gitattributes"/>
        <files mask=".gitmessage"/>
        <files mask="README.md"/>
        <files mask="install_hooks.ps1"/>
        <files mask="setup.cfg"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/tools/git/hooks" target_path="amazon-freertos/tools/git" type="script">
        <files mask="install_hooks.sh"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/tools/git/hooks/src" target_path="amazon-freertos/tools/git" type="script">
        <files mask="__init__.py"/>
        <files mask="commit_msg.py"/>
        <files mask="pre_commit.py"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/tools/git/hooks/test" target_path="amazon-freertos/tools/git" type="other">
        <files mask="bad_label.md"/>
        <files mask="long_body_line.md"/>
        <files mask="long_subject.md"/>
        <files mask="merge_commit.md"/>
        <files mask="no_sep.md"/>
        <files mask="valid_commit.md"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/tools/git/hooks/test" target_path="amazon-freertos/tools/git" type="src">
        <files mask="clean.c"/>
        <files mask="unformatted.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/tools/git/hooks/test" target_path="amazon-freertos/tools/git" type="script">
        <files mask="test_commit_msg.py"/>
        <files mask="test_pre_commit.py"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.tools.ota_e2e_tests.MIMXRT1064" name="amazon_freertos_aws_ota_test" brief="aws_ota_test" version="1.0.0" full_name="aws_ota_test" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.aws_iot.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.mbedtls.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.template_application.mbedtls.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="false" type="other">
      <source exclude="true" path="rtos/amazon-freertos/tools/ota_e2e_tests" target_path="amazon-freertos/tools/ota_e2e_tests" type="other">
        <files mask="README.md"/>
        <files mask="board.json"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/tools/ota_e2e_tests/aws_ota_test" target_path="amazon-freertos/tools/ota_e2e_tests" type="script">
        <files mask="__init__.py"/>
        <files mask="aws_flash_serial_comm.py"/>
        <files mask="aws_ota_aws_agent.py"/>
        <files mask="aws_ota_project.py"/>
        <files mask="aws_ota_test_case.py"/>
        <files mask="aws_ota_test_case_back_to_back_downloads.py"/>
        <files mask="aws_ota_test_case_corrupt_image_after_signing.py"/>
        <files mask="aws_ota_test_case_corrupt_image_before_signing.py"/>
        <files mask="aws_ota_test_case_corrupt_signature.py"/>
        <files mask="aws_ota_test_case_dummy_test.py"/>
        <files mask="aws_ota_test_case_factory.py"/>
        <files mask="aws_ota_test_case_greater_version.py"/>
        <files mask="aws_ota_test_case_incorrect_platform.py"/>
        <files mask="aws_ota_test_case_incorrect_wifi_password.py"/>
        <files mask="aws_ota_test_case_missing_filename.py"/>
        <files mask="aws_ota_test_case_previous_version.py"/>
        <files mask="aws_ota_test_case_same_version.py"/>
        <files mask="aws_ota_test_case_single_byte_image.py"/>
        <files mask="aws_ota_test_case_unsigned_image.py"/>
        <files mask="aws_ota_test_case_untrusted_certificate.py"/>
        <files mask="aws_ota_test_main.py"/>
        <files mask="aws_ota_test_result.py"/>
        <files mask="aws_ota_test_runner.py"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/tools/ota_e2e_tests/credentials" target_path="amazon-freertos/tools/ota_e2e_tests" type="other">
        <files mask="untrusted-ecdsa-sha256-signer.crt.pem"/>
        <files mask="untrusted-ecdsa-sha256-signer.key.pem"/>
        <files mask="untrusted-rsa-sha256-signer.crt.pem"/>
        <files mask="untrusted-rsa-sha256-signer.key.pem"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/tools/ota_e2e_tests" target_path="amazon-freertos/tools/ota_e2e_tests" type="script">
        <files mask="ota_e2e.py"/>
      </source>
    </component>
    <component id="middleware.baremetal.MIMXRT1064" name="baremetal" version="1.0.0" full_name="Baremetal" devices="MIMXRT1064xxxxA" user_visible="true" type="OS">
      <defines>
        <define name="FSL_RTOS_BM" value=""/>
        <define name="SDK_OS_BAREMETAL" value=""/>
      </defines>
    </component>
    <component id="middleware.emwin.MIMXRT1064" name="emwin" brief="emWin library" version="5.48" devices="MIMXRT1064xxxxA" dependency="middleware.template_application.emwin.MIMXRT1064" category="Graphics/emWin graphics library" user_visible="true" type="middleware">
      <source exclude="true" path="middleware/emwin" target_path="emwin" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
        <files mask="readme.txt"/>
      </source>
      <source path="middleware/emwin/emWin_Config" target_path="emwin/emWin_Config" type="c_include">
        <files mask="GUIConf.h"/>
        <files mask="LCDConf.h"/>
      </source>
      <source path="middleware/emwin/emWin_header" target_path="emwin/emWin_header" type="c_include">
        <files mask="BUTTON.h"/>
        <files mask="BUTTON_Private.h"/>
        <files mask="CALENDAR.h"/>
        <files mask="CHECKBOX.h"/>
        <files mask="CHECKBOX_Private.h"/>
        <files mask="CHOOSECOLOR.h"/>
        <files mask="CHOOSEFILE.h"/>
        <files mask="DIALOG.h"/>
        <files mask="DIALOG_Intern.h"/>
        <files mask="DROPDOWN.h"/>
        <files mask="DROPDOWN_Private.h"/>
        <files mask="EDIT.h"/>
        <files mask="EDIT_Private.h"/>
        <files mask="FRAMEWIN.h"/>
        <files mask="FRAMEWIN_Private.h"/>
        <files mask="GRAPH.h"/>
        <files mask="GRAPH_Private.h"/>
        <files mask="GUI.h"/>
        <files mask="GUIDRV_BitPlains.h"/>
        <files mask="GUIDRV_DCache.h"/>
        <files mask="GUIDRV_DCache_Private.h"/>
        <files mask="GUIDRV_Dist.h"/>
        <files mask="GUIDRV_FlexColor.h"/>
        <files mask="GUIDRV_FlexColor_Private.h"/>
        <files mask="GUIDRV_IST3088.h"/>
        <files mask="GUIDRV_IST3088_Private.h"/>
        <files mask="GUIDRV_Lin.h"/>
        <files mask="GUIDRV_Lin_Opt_16.h"/>
        <files mask="GUIDRV_Lin_Opt_24.h"/>
        <files mask="GUIDRV_Lin_Opt_32.h"/>
        <files mask="GUIDRV_Lin_Opt_8.h"/>
        <files mask="GUIDRV_Lin_Private.h"/>
        <files mask="GUIDRV_NoOpt_1_8.h"/>
        <files mask="GUIDRV_S1D13748.h"/>
        <files mask="GUIDRV_S1D13748_Private.h"/>
        <files mask="GUIDRV_S1D13781.h"/>
        <files mask="GUIDRV_S1D13781_Private.h"/>
        <files mask="GUIDRV_S1D15G00.h"/>
        <files mask="GUIDRV_SLin.h"/>
        <files mask="GUIDRV_SLin_Private.h"/>
        <files mask="GUIDRV_SPage.h"/>
        <files mask="GUIDRV_SPage_Private.h"/>
        <files mask="GUIDRV_SSD1926.h"/>
        <files mask="GUIDRV_SSD1926_Private.h"/>
        <files mask="GUIDRV_Template.h"/>
        <files mask="GUIDRV_TemplateI.h"/>
        <files mask="GUIDRV_TemplateI_Private.h"/>
        <files mask="GUITDRV_ADS7846.h"/>
        <files mask="GUI_ARRAY.h"/>
        <files mask="GUI_ARRAY_Private.h"/>
        <files mask="GUI_BMP_Private.h"/>
        <files mask="GUI_ConfDefaults.h"/>
        <files mask="GUI_Debug.h"/>
        <files mask="GUI_FontIntern.h"/>
        <files mask="GUI_GCache_Private.h"/>
        <files mask="GUI_GIF_Private.h"/>
        <files mask="GUI_HOOK.h"/>
        <files mask="GUI_JPEG_Private.h"/>
        <files mask="GUI_Private.h"/>
        <files mask="GUI_SPRITE_Private.h"/>
        <files mask="GUI_SetOrientation.h"/>
        <files mask="GUI_SetOrientationCX.h"/>
        <files mask="GUI_Type.h"/>
        <files mask="GUI_VNC.h"/>
        <files mask="GUI_Version.h"/>
        <files mask="GUI__BiDi2_Brackets_800.h"/>
        <files mask="GUI__BiDi2_Types_800.h"/>
        <files mask="Global.h"/>
        <files mask="HEADER.h"/>
        <files mask="HEADER_Private.h"/>
        <files mask="ICONVIEW.h"/>
        <files mask="ICONVIEW_Private.h"/>
        <files mask="IMAGE.h"/>
        <files mask="IMAGE_Private.h"/>
        <files mask="IP_FS.h"/>
        <files mask="KNOB.h"/>
        <files mask="KNOB_Private.h"/>
        <files mask="LCD.h"/>
        <files mask="LCD_ConfDefaults.h"/>
        <files mask="LCD_Private.h"/>
        <files mask="LCD_Protected.h"/>
        <files mask="LCD_SIM.h"/>
        <files mask="LISTBOX.h"/>
        <files mask="LISTBOX_Private.h"/>
        <files mask="LISTVIEW.h"/>
        <files mask="LISTVIEW_Private.h"/>
        <files mask="LISTWHEEL.h"/>
        <files mask="LISTWHEEL_Private.h"/>
        <files mask="MENU.h"/>
        <files mask="MENU_Private.h"/>
        <files mask="MESSAGEBOX.h"/>
        <files mask="MULTIEDIT.h"/>
        <files mask="MULTIPAGE.h"/>
        <files mask="MULTIPAGE_Private.h"/>
        <files mask="PROGBAR.h"/>
        <files mask="PROGBAR_Private.h"/>
        <files mask="RADIO.h"/>
        <files mask="RADIO_Private.h"/>
        <files mask="SCROLLBAR.h"/>
        <files mask="SCROLLBAR_Private.h"/>
        <files mask="SEGGER.h"/>
        <files mask="SLIDER.h"/>
        <files mask="SLIDER_Private.h"/>
        <files mask="SPINBOX.h"/>
        <files mask="SPINBOX_Private.h"/>
        <files mask="SWIPELIST.h"/>
        <files mask="SWIPELIST_Private.h"/>
        <files mask="TEXT.h"/>
        <files mask="TEXT_Private.h"/>
        <files mask="TREEVIEW.h"/>
        <files mask="TREEVIEW_Private.h"/>
        <files mask="WIDGET.h"/>
        <files mask="WINDOW_Private.h"/>
        <files mask="WM.h"/>
        <files mask="WM_GUI.h"/>
        <files mask="WM_Intern.h"/>
      </source>
      <source toolchain="armgcc" path="middleware/emwin/emWin_library/ARMGCC" target_path="emwin/emWin_library/ARMGCC" type="lib" device_cores="core0_MIMXRT1064xxxxA">
        <files mask="libemWin_M4F.a"/>
      </source>
      <source toolchain="iar" path="middleware/emwin/emWin_library/IAR" target_path="emwin/emWin_library/IAR" type="lib" device_cores="core0_MIMXRT1064xxxxA">
        <files mask="emWin_M4F.a"/>
      </source>
      <source toolchain="mdk" path="middleware/emwin/emWin_library/Keil" target_path="emwin/emWin_library/Keil" type="lib" device_cores="core0_MIMXRT1064xxxxA">
        <files mask="emWin_M4F.lib"/>
      </source>
      <source toolchain="mcuxpresso" path="middleware/emwin/emWin_library/MCUXpresso" target_path="emwin/emWin_library/MCUXpresso" type="lib" device_cores="core0_MIMXRT1064xxxxA">
        <files mask="libemWin_M4F.a"/>
      </source>
    </component>
    <component id="middleware.fatfs.MIMXRT1064" name="fatfs" brief="FatFs" version="0.13.1" revision="0" full_name="FAT File System stack" devices="MIMXRT1064xxxxA" category="File System/FAT File System" user_visible="false" type="middleware">
      <source path="middleware/fatfs/source" target_path="fatfs/fatfs_source" type="src">
        <files mask="diskio.c"/>
        <files mask="ff.c"/>
        <files mask="ffsystem.c"/>
        <files mask="ffunicode.c"/>
      </source>
      <source path="middleware/fatfs/source" target_path="fatfs/fatfs_include" type="c_include">
        <files mask="diskio.h"/>
        <files mask="ff.h"/>
        <files mask="integer.h"/>
      </source>
    </component>
    <component id="middleware.fatfs.mmc.MIMXRT1064" name="mmc" brief="FatFs_MMC" version="0.13" full_name="Fatfs MMC layer" devices="MIMXRT1064xxxxA" dependency="middleware.fatfs.MIMXRT1064 middleware.sdmmc.common.MIMXRT1064 middleware.sdmmc.mmc.MIMXRT1064" category="File System/FAT File System" user_visible="false" type="middleware">
      <source path="middleware/fatfs/source/fsl_mmc_disk" target_path="fatfs/fatfs_source" type="src">
        <files mask="fsl_mmc_disk.c"/>
      </source>
      <source path="middleware/fatfs/source/fsl_mmc_disk" target_path="fatfs/fatfs_include" type="c_include">
        <files mask="fsl_mmc_disk.h"/>
      </source>
    </component>
    <component id="middleware.fatfs.nand.MIMXRT1064" name="nand" brief="FatFs_NAND" version="0.13" full_name="Fatfs NAND layer" devices="MIMXRT1064xxxxA" dependency="middleware.fatfs.MIMXRT1064" category="File System/FAT File System" user_visible="false" type="middleware">
      <source path="middleware/fatfs/source/fsl_nand_disk" target_path="fatfs/fatfs_source" type="src">
        <files mask="fsl_nand_disk.c"/>
      </source>
      <source path="middleware/fatfs/source/fsl_nand_disk" target_path="fatfs/fatfs_include" type="c_include">
        <files mask="fsl_nand_disk.h"/>
      </source>
    </component>
    <component id="middleware.fatfs.ram.MIMXRT1064" name="ram" brief="FatFs_RAM" version="0.13" full_name="Fatfs RAM layer" devices="MIMXRT1064xxxxA" dependency="middleware.fatfs.MIMXRT1064" category="File System/FAT File System" user_visible="false" type="middleware">
      <source path="middleware/fatfs/source/fsl_ram_disk" target_path="fatfs/fatfs_source" type="src">
        <files mask="fsl_ram_disk.c"/>
      </source>
      <source path="middleware/fatfs/source/fsl_ram_disk" target_path="fatfs/fatfs_include" type="c_include">
        <files mask="fsl_ram_disk.h"/>
      </source>
    </component>
    <component id="middleware.fatfs.sd.MIMXRT1064" name="sd" brief="FatFs_SD" version="0.13" full_name="Fatfs SD layer" devices="MIMXRT1064xxxxA" dependency="middleware.fatfs.MIMXRT1064 middleware.sdmmc.common.MIMXRT1064 middleware.sdmmc.sd.MIMXRT1064" category="File System/FAT File System" user_visible="false" type="middleware">
      <source path="middleware/fatfs/source/fsl_sd_disk" target_path="fatfs/fatfs_source" type="src">
        <files mask="fsl_sd_disk.c"/>
      </source>
      <source path="middleware/fatfs/source/fsl_sd_disk" target_path="fatfs/fatfs_include" type="c_include">
        <files mask="fsl_sd_disk.h"/>
      </source>
    </component>
    <component id="middleware.fatfs.unused_files.MIMXRT1064" name="unused_files" brief="fatfs files unused by projects" version="3.9.8" revision="3" devices="MIMXRT1064xxxxA" user_visible="false" type="other">
      <source exclude="true" path="middleware/fatfs" target_path="fatfs/fatfs_files" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
        <files mask="LICENSE.txt"/>
      </source>
      <source exclude="true" path="middleware/fatfs/documents" target_path="fatfs/fatfs_files" type="doc">
        <files mask="00index_e.html"/>
        <files mask="css_e.css"/>
        <files mask="updates.txt"/>
      </source>
      <source exclude="true" path="middleware/fatfs/documents/doc" target_path="fatfs/fatfs_files" type="doc">
        <files mask="appnote.html"/>
        <files mask="chdir.html"/>
        <files mask="chdrive.html"/>
        <files mask="chmod.html"/>
        <files mask="close.html"/>
        <files mask="closedir.html"/>
        <files mask="config.html"/>
        <files mask="dinit.html"/>
        <files mask="dioctl.html"/>
        <files mask="dread.html"/>
        <files mask="dstat.html"/>
        <files mask="dwrite.html"/>
        <files mask="eof.html"/>
        <files mask="error.html"/>
        <files mask="expand.html"/>
        <files mask="fattime.html"/>
        <files mask="fdisk.html"/>
        <files mask="filename.html"/>
        <files mask="findfirst.html"/>
        <files mask="findnext.html"/>
        <files mask="forward.html"/>
        <files mask="getcwd.html"/>
        <files mask="getfree.html"/>
        <files mask="getlabel.html"/>
        <files mask="gets.html"/>
        <files mask="lseek.html"/>
        <files mask="mkdir.html"/>
        <files mask="mkfs.html"/>
        <files mask="mount.html"/>
        <files mask="open.html"/>
        <files mask="opendir.html"/>
        <files mask="printf.html"/>
        <files mask="putc.html"/>
        <files mask="puts.html"/>
        <files mask="rc.html"/>
        <files mask="read.html"/>
        <files mask="readdir.html"/>
        <files mask="rename.html"/>
        <files mask="sdir.html"/>
        <files mask="setcp.html"/>
        <files mask="setlabel.html"/>
        <files mask="sfatfs.html"/>
        <files mask="sfile.html"/>
        <files mask="sfileinfo.html"/>
        <files mask="size.html"/>
        <files mask="stat.html"/>
        <files mask="sync.html"/>
        <files mask="tell.html"/>
        <files mask="truncate.html"/>
        <files mask="unlink.html"/>
        <files mask="utime.html"/>
        <files mask="write.html"/>
      </source>
      <source exclude="true" path="middleware/fatfs/documents/res" target_path="fatfs/fatfs_files" type="src">
        <files mask="app1.c"/>
        <files mask="app2.c"/>
        <files mask="app3.c"/>
        <files mask="app4.c"/>
        <files mask="app5.c"/>
      </source>
      <source exclude="true" path="middleware/fatfs/documents/res" target_path="fatfs/fatfs_files" type="image">
        <files mask="f1.png"/>
        <files mask="f2.png"/>
        <files mask="f3.png"/>
        <files mask="f4.png"/>
        <files mask="f5.png"/>
        <files mask="f6.png"/>
        <files mask="f7.png"/>
        <files mask="funcs.png"/>
        <files mask="layers.png"/>
        <files mask="layers1.png"/>
        <files mask="layers2.png"/>
        <files mask="layers3.png"/>
        <files mask="modules.png"/>
        <files mask="rwtest1.png"/>
        <files mask="rwtest2.png"/>
        <files mask="rwtest3.png"/>
      </source>
      <source exclude="true" path="middleware/fatfs/documents/res" target_path="fatfs/fatfs_files" type="archive">
        <files mask="mkfatimg.zip"/>
      </source>
      <source exclude="true" path="middleware/fatfs/documents/res" target_path="fatfs/fatfs_files" type="doc">
        <files mask="mkfs.xls"/>
      </source>
      <source exclude="true" path="middleware/fatfs/source" target_path="fatfs/fatfs_files" type="doc">
        <files mask="00history.txt"/>
        <files mask="00readme.txt"/>
      </source>
      <source exclude="true" path="middleware/fatfs/source" target_path="fatfs/fatfs_files" type="c_include">
        <files mask="ffconf_template.h"/>
      </source>
    </component>
    <component id="middleware.fatfs.usb_bm.MIMXRT1064" name="usb_bm" brief="FatFs_USB_baremetal" version="0.13" full_name="Fatfs USB baremetal layer" devices="MIMXRT1064xxxxA" dependency="middleware.fatfs.MIMXRT1064 middleware.usb.host.MIMXRT1064 middleware.usb.host_hub.MIMXRT1064 middleware.usb.host_msd.MIMXRT1064" category="File System/FAT File System" user_visible="false" type="middleware">
      <source path="middleware/fatfs/source/fsl_usb_disk" target_path="fatfs/fatfs_include" type="c_include">
        <files mask="fsl_usb_disk.h"/>
      </source>
      <source path="middleware/fatfs/source/fsl_usb_disk" target_path="fatfs/fatfs_source" type="src">
        <files mask="fsl_usb_disk_bm.c"/>
      </source>
    </component>
    <component id="middleware.fatfs.usb_freertos.MIMXRT1064" name="usb_freertos" brief="FatFs_USB_freertos" version="0.13" full_name="Fatfs USB freertos layer" devices="MIMXRT1064xxxxA" dependency="middleware.fatfs.MIMXRT1064 middleware.usb.host.MIMXRT1064 middleware.usb.host_hub.MIMXRT1064 middleware.usb.host_msd.MIMXRT1064" category="File System/FAT File System" user_visible="false" type="middleware">
      <source path="middleware/fatfs/source/fsl_usb_disk" target_path="fatfs/fatfs_include" type="c_include">
        <files mask="fsl_usb_disk.h"/>
      </source>
      <source path="middleware/fatfs/source/fsl_usb_disk" target_path="fatfs/fatfs_source" type="src">
        <files mask="fsl_usb_disk_freertos.c"/>
      </source>
    </component>
    <component id="cmsis.drivers.include.MIMXRT1064" name="issdk_cmsis_drivers" brief="CMSIS Core header files" version="1.7.0" devices="MIMXRT1064xxxxA" user_visible="true" type="other">
      <source path="CMSIS/Driver/Include" target_path="cmsis_driver" type="c_include">
        <files mask="Driver_Common.h"/>
        <files mask="Driver_I2C.h"/>
        <files mask="Driver_SPI.h"/>
        <files mask="Driver_USART.h"/>
      </source>
    </component>
    <component id="middleware.issdk.drivers.gpio_imx.MIMXRT1064" name="gpio_imx" brief="ISSDK GPIO Driver for i.MXRT10xx" version="1.7.0" devices="MIMXRT1064xxxxA" user_visible="false" type="other">
      <source path="middleware/issdk/drivers/gpio" target_path="gpio_driver" type="c_include">
        <files mask="Driver_GPIO.h"/>
      </source>
      <source path="middleware/issdk/drivers/gpio/i.mx" target_path="gpio_driver" type="src">
        <files mask="gpio_driver.c"/>
        <files mask="gpio_driver_irq.c"/>
      </source>
      <source path="middleware/issdk/drivers/gpio/i.mx" target_path="gpio_driver" type="c_include">
        <files mask="gpio_driver.h"/>
      </source>
    </component>
    <component id="middleware.issdk.drivers.gpio_imx8.MIMXRT1064" name="gpio_imx" brief="ISSDK GPIO Driver for i.MX8xx" version="1.7.0" devices="MIMXRT1064xxxxA" user_visible="false" type="other">
      <source path="middleware/issdk/drivers/gpio" target_path="gpio_driver" type="c_include">
        <files mask="Driver_GPIO.h"/>
      </source>
      <source path="middleware/issdk/drivers/gpio/i.mx" target_path="gpio_driver" type="src">
        <files mask="gpio_driver.c"/>
      </source>
      <source path="middleware/issdk/drivers/gpio/i.mx" target_path="gpio_driver" type="c_include">
        <files mask="gpio_driver.h"/>
      </source>
    </component>
    <component id="middleware.issdk.drivers.gpio_imxrt.MIMXRT1064" name="gpio_imxrt" brief="ISSDK GPIO Driver for i.MXRT" version="1.7.0" devices="MIMXRT1064xxxxA" user_visible="false" type="other">
      <source path="middleware/issdk/drivers/gpio" target_path="gpio_driver" type="c_include">
        <files mask="Driver_GPIO.h"/>
      </source>
      <source path="middleware/issdk/drivers/gpio/i.mx" target_path="gpio_driver" type="src">
        <files mask="gpio_driver.c"/>
      </source>
      <source path="middleware/issdk/drivers/gpio/i.mx" target_path="gpio_driver" type="c_include">
        <files mask="gpio_driver.h"/>
      </source>
    </component>
    <component id="middleware.issdk.drivers.host.MIMXRT1064" name="issdk_host" brief="ISSDK Host Interface Service" version="1.7.0" devices="MIMXRT1064xxxxA" user_visible="true" type="other">
      <source path="middleware/issdk/drivers/host" target_path="host" type="src">
        <files mask="comm_if_uart.c"/>
        <files mask="data_format_hdlc.c"/>
        <files mask="data_format_json.c"/>
        <files mask="host_interface_service.c"/>
      </source>
      <source path="middleware/issdk/drivers/host" target_path="host" type="c_include">
        <files mask="comm_interface.h"/>
        <files mask="data_format_hdlc.h"/>
        <files mask="data_format_json.h"/>
        <files mask="data_format_service.h"/>
        <files mask="host_interface_service.h"/>
      </source>
      <source path="middleware/issdk/sensors" target_path="host" type="src">
        <files mask="host_io_uart.c"/>
      </source>
      <source path="middleware/issdk/sensors" target_path="host" type="c_include">
        <files mask="host_io_uart.h"/>
      </source>
    </component>
    <component id="middleware.issdk.drivers.systick_utils.MIMXRT1064" name="systick_utils" brief="ISSDK Utils" version="1.7.0" devices="MIMXRT1064xxxxA" user_visible="true" type="other">
      <source path="middleware/issdk/drivers/systick" target_path="utilities" type="src">
        <files mask="systick_utils.c"/>
      </source>
      <source path="middleware/issdk/drivers/systick" target_path="utilities" type="c_include">
        <files mask="systick_utils.h"/>
      </source>
    </component>
    <component id="middleware.issdk.drivers.systick_utils.evkmimxrt1064.MIMXRT1064" name="systick_utils" brief="ISSDK Utils" version="1.7.0" devices="MIMXRT1064xxxxA" user_visible="false" type="other">
      <source path="middleware/issdk/drivers/systick" target_path="utilities" type="src">
        <files mask="systick_utils.c"/>
      </source>
      <source path="middleware/issdk/drivers/systick" target_path="utilities" type="c_include">
        <files mask="systick_utils.h"/>
      </source>
    </component>
    <component id="middleware.issdk.sensor.allregdefs.MIMXRT1064" name="issdk_allregdefs" brief="ISSDK Sensors RegDefs" version="1.7.0" devices="MIMXRT1064xxxxA" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT1064" user_visible="true" type="other">
      <source path="middleware/issdk/sensors" target_path="sensors" type="c_include">
        <files mask="diff_p.h"/>
        <files mask="fxas21002.h"/>
        <files mask="fxlc95000.h"/>
        <files mask="fxls8471q.h"/>
        <files mask="fxls8962.h"/>
        <files mask="fxos8700.h"/>
        <files mask="fxpq3115.h"/>
        <files mask="mag3110.h"/>
        <files mask="mma845x.h"/>
        <files mask="mma8491q.h"/>
        <files mask="mma865x.h"/>
        <files mask="mma9553.h"/>
        <files mask="mpl3115.h"/>
      </source>
    </component>
    <component id="middleware.issdk.sensor.boardkit.evkmimxrt1064.MIMXRT1064" name="issdk_boardkit_evkmimxrt1064" brief="ISSDK Board-Kit files for RT1064 kit" version="1.7.0" devices="MIMXRT1064xxxxA" user_visible="false" type="other">
      <source path="middleware/issdk/boardkit/evk-mimxrt1064" target_path="issdk_boardkit" type="c_include">
        <files mask="RTE_Device.h"/>
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="evkmimxrt1064.h"/>
        <files mask="pin_mux.h"/>
      </source>
      <source path="middleware/issdk/boardkit/evk-mimxrt1064" target_path="issdk_boardkit" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="evkmimxrt1064.c"/>
        <files mask="pin_mux.c"/>
      </source>
      <source path="middleware/issdk/boardkit/evk-mimxrt1064/frdm-stbc-agm01" target_path="issdk_boardkit" type="c_include">
        <files mask="frdm_stbc_agm01_shield.h"/>
        <files mask="issdk_hal.h"/>
      </source>
    </component>
    <component id="middleware.issdk.sensor.fxas21002.MIMXRT1064" name="issdk_fxas21002" brief="ISSDK FXAS21002 Sensor Driver Files" version="1.7.0" devices="MIMXRT1064xxxxA" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT1064" user_visible="true" type="other">
      <source path="middleware/issdk/sensors" target_path="sensors" type="c_include">
        <files mask="fxas21002.h"/>
        <files mask="fxas21002_drv.h"/>
      </source>
      <source path="middleware/issdk/sensors" target_path="sensors" type="src">
        <files mask="fxas21002_drv.c"/>
      </source>
    </component>
    <component id="middleware.issdk.sensor.fxlc95000.MIMXRT1064" name="issdk_fxlc95000" brief="ISSDK FXLC95000 Sensor Driver Files" version="1.7.0" devices="MIMXRT1064xxxxA" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT1064" user_visible="true" type="other">
      <source path="middleware/issdk/sensors" target_path="sensors" type="c_include">
        <files mask="fxlc95000.h"/>
        <files mask="fxlc95000_drv.h"/>
      </source>
      <source path="middleware/issdk/sensors" target_path="sensors" type="src">
        <files mask="fxlc95000_drv.c"/>
      </source>
    </component>
    <component id="middleware.issdk.sensor.fxls8471q.MIMXRT1064" name="issdk_fxls8471q" brief="ISSDK FXLS8471 Sensor Driver Files" version="1.7.0" devices="MIMXRT1064xxxxA" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT1064" user_visible="true" type="other">
      <source path="middleware/issdk/sensors" target_path="sensors" type="c_include">
        <files mask="fxls8471q.h"/>
        <files mask="fxls8471q_drv.h"/>
      </source>
      <source path="middleware/issdk/sensors" target_path="sensors" type="src">
        <files mask="fxls8471q_drv.c"/>
      </source>
    </component>
    <component id="middleware.issdk.sensor.fxls8962.MIMXRT1064" name="issdk_fxls8962" brief="ISSDK FXLS8962 Sensor Driver Files" version="1.7.0" devices="MIMXRT1064xxxxA" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT1064" user_visible="true" type="other">
      <source path="middleware/issdk/sensors" target_path="sensors" type="c_include">
        <files mask="fxls8962.h"/>
        <files mask="fxls8962_drv.h"/>
      </source>
      <source path="middleware/issdk/sensors" target_path="sensors" type="src">
        <files mask="fxls8962_drv.c"/>
      </source>
    </component>
    <component id="middleware.issdk.sensor.fxos8700.MIMXRT1064" name="issdk_fxos8700" brief="ISSDK FXOS8700 Sensor Driver Files" version="1.7.0" devices="MIMXRT1064xxxxA" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT1064" user_visible="true" type="other">
      <source path="middleware/issdk/sensors" target_path="sensors" type="c_include">
        <files mask="fxos8700.h"/>
        <files mask="fxos8700_drv.h"/>
      </source>
      <source path="middleware/issdk/sensors" target_path="sensors" type="src">
        <files mask="fxos8700_drv.c"/>
      </source>
    </component>
    <component id="middleware.issdk.sensor.fxpq3115.MIMXRT1064" name="issdk_fxpq3115" brief="ISSDK FXPQ3115 Sensor Driver Files" version="1.7.0" devices="MIMXRT1064xxxxA" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT1064" user_visible="true" type="other">
      <source path="middleware/issdk/sensors" target_path="sensors" type="c_include">
        <files mask="fxpq3115.h"/>
        <files mask="fxpq3115_drv.h"/>
      </source>
      <source path="middleware/issdk/sensors" target_path="sensors" type="src">
        <files mask="fxpq3115_drv.c"/>
      </source>
    </component>
    <component id="middleware.issdk.sensor.interface.common.MIMXRT1064" name="issdk_interfaces" brief="ISSDK Sensor Interface Common" version="1.7.0" devices="MIMXRT1064xxxxA" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT1064" user_visible="true" type="other">
      <source path="middleware/issdk/sensors" target_path="interfaces" type="src">
        <files mask="register_io_i2c.c"/>
        <files mask="register_io_spi.c"/>
        <files mask="sensor_io_i2c.c"/>
        <files mask="sensor_io_spi.c"/>
      </source>
      <source path="middleware/issdk/sensors" target_path="interfaces" type="c_include">
        <files mask="register_io_i2c.h"/>
        <files mask="register_io_spi.h"/>
        <files mask="sensor_drv.h"/>
        <files mask="sensor_io_i2c.h"/>
        <files mask="sensor_io_spi.h"/>
      </source>
    </component>
    <component id="middleware.issdk.sensor.isl29023.MIMXRT1064" name="issdk_isl29023" brief="ISSDK ISL29023 Sensor Driver Files" version="1.7.0" devices="MIMXRT1064xxxxA" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT1064" user_visible="false" type="other">
      <source path="middleware/issdk/sensors" target_path="sensors" type="c_include">
        <files mask="isl29023.h"/>
        <files mask="isl29023_drv.h"/>
      </source>
      <source path="middleware/issdk/sensors" target_path="sensors" type="src">
        <files mask="isl29023_drv.c"/>
      </source>
    </component>
    <component id="middleware.issdk.sensor.mag3110.MIMXRT1064" name="issdk_mag3110" brief="ISSDK MAG3110 Sensor Driver Files" version="1.7.0" devices="MIMXRT1064xxxxA" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT1064" user_visible="true" type="other">
      <source path="middleware/issdk/sensors" target_path="sensors" type="c_include">
        <files mask="mag3110.h"/>
        <files mask="mag3110_drv.h"/>
      </source>
      <source path="middleware/issdk/sensors" target_path="sensors" type="src">
        <files mask="mag3110_drv.c"/>
      </source>
    </component>
    <component id="middleware.issdk.sensor.mma845x.MIMXRT1064" name="issdk_mma845x" brief="ISSDK MMA845x Sensor Driver Files" version="1.7.0" devices="MIMXRT1064xxxxA" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT1064" user_visible="true" type="other">
      <source path="middleware/issdk/sensors" target_path="sensors" type="c_include">
        <files mask="mma845x.h"/>
        <files mask="mma845x_drv.h"/>
      </source>
      <source path="middleware/issdk/sensors" target_path="sensors" type="src">
        <files mask="mma845x_drv.c"/>
      </source>
    </component>
    <component id="middleware.issdk.sensor.mma8491q.MIMXRT1064" name="issdk_mma8491q" brief="ISSDK MMA8491 Sensor Driver Files" version="1.7.0" devices="MIMXRT1064xxxxA" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT1064" user_visible="true" type="other">
      <source path="middleware/issdk/sensors" target_path="sensors" type="c_include">
        <files mask="mma8491q.h"/>
        <files mask="mma8491q_drv.h"/>
      </source>
      <source path="middleware/issdk/sensors" target_path="sensors" type="src">
        <files mask="mma8491q_drv.c"/>
      </source>
    </component>
    <component id="middleware.issdk.sensor.mma865x.MIMXRT1064" name="issdk_mma865x" brief="ISSDK MMA865x Sensor Driver Files" version="1.7.0" devices="MIMXRT1064xxxxA" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT1064" user_visible="true" type="other">
      <source path="middleware/issdk/sensors" target_path="sensors" type="c_include">
        <files mask="mma865x.h"/>
        <files mask="mma865x_drv.h"/>
      </source>
      <source path="middleware/issdk/sensors" target_path="sensors" type="src">
        <files mask="mma865x_drv.c"/>
      </source>
    </component>
    <component id="middleware.issdk.sensor.mma9553.MIMXRT1064" name="issdk_mma9553" brief="ISSDK MMA9553 Sensor Driver Files" version="1.7.0" devices="MIMXRT1064xxxxA" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT1064" user_visible="true" type="other">
      <source path="middleware/issdk/sensors" target_path="sensors" type="c_include">
        <files mask="mma9553.h"/>
        <files mask="mma9553_drv.h"/>
      </source>
      <source path="middleware/issdk/sensors" target_path="sensors" type="src">
        <files mask="mma9553_drv.c"/>
      </source>
    </component>
    <component id="middleware.issdk.sensor.mpl3115.MIMXRT1064" name="issdk_mpl3115" brief="ISSDK MPL3115 Sensor Driver Files" version="1.7.0" devices="MIMXRT1064xxxxA" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT1064" user_visible="true" type="other">
      <source path="middleware/issdk/sensors" target_path="sensors" type="c_include">
        <files mask="mpl3115.h"/>
        <files mask="mpl3115_drv.h"/>
      </source>
      <source path="middleware/issdk/sensors" target_path="sensors" type="src">
        <files mask="mpl3115_drv.c"/>
      </source>
    </component>
    <component id="middleware.issdk.sensor.nps300x.MIMXRT1064" name="issdk_nps300x" brief="ISSDK nps300x Sensor Driver Files" version="1.7.0" devices="MIMXRT1064xxxxA" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT1064 platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT1064" user_visible="false" type="other">
      <source path="middleware/issdk/sensors" target_path="sensors" type="c_include">
        <files mask="diff_p.h"/>
        <files mask="diff_p_drv.h"/>
      </source>
      <source path="middleware/issdk/sensors" target_path="sensors" type="src">
        <files mask="diff_p_drv.c"/>
      </source>
    </component>
    <component id="middleware.issdk.sensor.tools.MIMXRT1064" name="issdk_tools" brief="ISSDK Serial to MQTT bridge application" version="1.7.0" devices="MIMXRT1064xxxxA" user_visible="false" type="other">
      <source path="middleware/issdk/tools/Serial_To_MQTT" target_path="issdk_senor" type="script">
        <files mask="CloudBridgeNXPDemo.py"/>
      </source>
    </component>
    <component id="middleware.libjpeg.MIMXRT1064" name="libjpeg" brief="JPEG library" version="9.2.0" revision="0" devices="MIMXRT1064xxxxA" category="Image/JPEG library" user_visible="true" type="middleware">
      <source exclude="true" path="middleware/libjpeg" target_path="libjpeg" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
      </source>
      <source path="middleware/libjpeg" target_path="libjpeg" type="doc">
        <files mask="README"/>
        <files mask="change.log"/>
      </source>
      <source path="middleware/libjpeg/inc" target_path="libjpeg/inc" type="c_include">
        <files mask="cderror.h"/>
        <files mask="cdjpeg.h"/>
        <files mask="jdct.h"/>
        <files mask="jerror.h"/>
        <files mask="jinclude.h"/>
        <files mask="jmemsys.h"/>
        <files mask="jmorecfg.h"/>
        <files mask="jpegint.h"/>
        <files mask="jpeglib.h"/>
        <files mask="jversion.h"/>
        <files mask="transupp.h"/>
      </source>
      <source path="middleware/libjpeg/src" target_path="libjpeg/src" type="src">
        <files mask="jaricom.c"/>
        <files mask="jcapimin.c"/>
        <files mask="jcapistd.c"/>
        <files mask="jcarith.c"/>
        <files mask="jccoefct.c"/>
        <files mask="jccolor.c"/>
        <files mask="jcdctmgr.c"/>
        <files mask="jchuff.c"/>
        <files mask="jcinit.c"/>
        <files mask="jcmainct.c"/>
        <files mask="jcmarker.c"/>
        <files mask="jcmaster.c"/>
        <files mask="jcomapi.c"/>
        <files mask="jcparam.c"/>
        <files mask="jcprepct.c"/>
        <files mask="jcsample.c"/>
        <files mask="jctrans.c"/>
        <files mask="jdapimin.c"/>
        <files mask="jdapistd.c"/>
        <files mask="jdarith.c"/>
        <files mask="jdatadst.c"/>
        <files mask="jdatasrc.c"/>
        <files mask="jdcoefct.c"/>
        <files mask="jdcolor.c"/>
        <files mask="jddctmgr.c"/>
        <files mask="jdhuff.c"/>
        <files mask="jdinput.c"/>
        <files mask="jdmainct.c"/>
        <files mask="jdmarker.c"/>
        <files mask="jdmaster.c"/>
        <files mask="jdmerge.c"/>
        <files mask="jdpostct.c"/>
        <files mask="jdsample.c"/>
        <files mask="jdtrans.c"/>
        <files mask="jerror.c"/>
        <files mask="jfdctflt.c"/>
        <files mask="jfdctfst.c"/>
        <files mask="jfdctint.c"/>
        <files mask="jidctflt.c"/>
        <files mask="jidctfst.c"/>
        <files mask="jidctint.c"/>
        <files mask="jmemmgr.c"/>
        <files mask="jmemnobs.c"/>
        <files mask="jquant1.c"/>
        <files mask="jquant2.c"/>
        <files mask="jutils.c"/>
      </source>
    </component>
    <component id="middleware.littlefs.MIMXRT1064" name="LittleFS" brief="littlefs" version="1.3" full_name="LittleFS File System stack" devices="MIMXRT1064xxxxA" category="File System/LittleFS File System" user_visible="true" type="middleware">
      <source exclude="true" path="middleware/littlefs" target_path="littlefs" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
      </source>
      <source path="middleware/littlefs" target_path="littlefs/littlefs_source" type="src">
        <files mask="lfs.c"/>
        <files mask="lfs_util.c"/>
      </source>
      <source path="middleware/littlefs" target_path="littlefs/littlefs_include" type="c_include">
        <files mask="lfs.h"/>
        <files mask="lfs_util.h"/>
      </source>
    </component>
    <component id="middleware.littlefs.unused_files.MIMXRT1064" name="unused_files" brief="littlefs files unused by projects" version="1.3" devices="MIMXRT1064xxxxA" user_visible="false" type="other">
      <source exclude="true" path="middleware/littlefs" target_path="littlefs/littlefs_files" type="other">
        <files mask="DESIGN.md"/>
        <files mask="LICENSE.md"/>
        <files mask="README.md"/>
        <files mask="SPEC.md"/>
      </source>
    </component>
    <component id="middleware.littlevgl.MIMXRT1064" name="littlevgl" brief="littlevgl library" version="5.3" devices="MIMXRT1064xxxxA" user_visible="false" type="middleware">
      <source exclude="true" path="middleware/littlevgl" target_path="littlevgl" type="doc">
        <files mask="LICENCE.txt"/>
      </source>
      <source path="middleware/littlevgl" target_path="littlevgl" type="c_include">
        <files mask="lv_conf_checker.h"/>
        <files mask="lv_version.h"/>
        <files mask="lvgl.h"/>
      </source>
      <source path="middleware/littlevgl/lv_core" target_path="littlevgl/lv_core" type="src">
        <files mask="lv_group.c"/>
        <files mask="lv_indev.c"/>
        <files mask="lv_lang.c"/>
        <files mask="lv_obj.c"/>
        <files mask="lv_refr.c"/>
        <files mask="lv_style.c"/>
        <files mask="lv_vdb.c"/>
      </source>
      <source path="middleware/littlevgl/lv_core" target_path="littlevgl/lv_core" type="c_include">
        <files mask="lv_group.h"/>
        <files mask="lv_indev.h"/>
        <files mask="lv_lang.h"/>
        <files mask="lv_obj.h"/>
        <files mask="lv_refr.h"/>
        <files mask="lv_style.h"/>
        <files mask="lv_vdb.h"/>
      </source>
      <source path="middleware/littlevgl/lv_draw" target_path="littlevgl/lv_draw" type="src">
        <files mask="lv_draw.c"/>
        <files mask="lv_draw_arc.c"/>
        <files mask="lv_draw_img.c"/>
        <files mask="lv_draw_label.c"/>
        <files mask="lv_draw_line.c"/>
        <files mask="lv_draw_rbasic.c"/>
        <files mask="lv_draw_rect.c"/>
        <files mask="lv_draw_triangle.c"/>
        <files mask="lv_draw_vbasic.c"/>
      </source>
      <source path="middleware/littlevgl/lv_draw" target_path="littlevgl/lv_draw" type="c_include">
        <files mask="lv_draw.h"/>
        <files mask="lv_draw_arc.h"/>
        <files mask="lv_draw_img.h"/>
        <files mask="lv_draw_label.h"/>
        <files mask="lv_draw_line.h"/>
        <files mask="lv_draw_rbasic.h"/>
        <files mask="lv_draw_rect.h"/>
        <files mask="lv_draw_triangle.h"/>
        <files mask="lv_draw_vbasic.h"/>
      </source>
      <source path="middleware/littlevgl/lv_fonts" target_path="littlevgl/lv_fonts" type="src">
        <files mask="lv_font_builtin.c"/>
        <files mask="lv_font_dejavu_10.c"/>
        <files mask="lv_font_dejavu_10_cyrillic.c"/>
        <files mask="lv_font_dejavu_10_latin_sup.c"/>
        <files mask="lv_font_dejavu_20.c"/>
        <files mask="lv_font_dejavu_20_cyrillic.c"/>
        <files mask="lv_font_dejavu_20_latin_sup.c"/>
        <files mask="lv_font_dejavu_30.c"/>
        <files mask="lv_font_dejavu_30_cyrillic.c"/>
        <files mask="lv_font_dejavu_30_latin_sup.c"/>
        <files mask="lv_font_dejavu_40.c"/>
        <files mask="lv_font_dejavu_40_cyrillic.c"/>
        <files mask="lv_font_dejavu_40_latin_sup.c"/>
        <files mask="lv_font_monospace_8.c"/>
        <files mask="lv_font_symbol_10.c"/>
        <files mask="lv_font_symbol_20.c"/>
        <files mask="lv_font_symbol_30.c"/>
        <files mask="lv_font_symbol_40.c"/>
      </source>
      <source path="middleware/littlevgl/lv_fonts" target_path="littlevgl/lv_fonts" type="c_include">
        <files mask="lv_font_builtin.h"/>
      </source>
      <source path="middleware/littlevgl/lv_hal" target_path="littlevgl/lv_hal" type="c_include">
        <files mask="lv_hal.h"/>
        <files mask="lv_hal_disp.h"/>
        <files mask="lv_hal_indev.h"/>
        <files mask="lv_hal_tick.h"/>
      </source>
      <source path="middleware/littlevgl/lv_hal" target_path="littlevgl/lv_hal" type="src">
        <files mask="lv_hal_disp.c"/>
        <files mask="lv_hal_indev.c"/>
        <files mask="lv_hal_tick.c"/>
      </source>
      <source path="middleware/littlevgl/lv_misc" target_path="littlevgl/lv_misc" type="src">
        <files mask="lv_anim.c"/>
        <files mask="lv_area.c"/>
        <files mask="lv_circ.c"/>
        <files mask="lv_color.c"/>
        <files mask="lv_font.c"/>
        <files mask="lv_fs.c"/>
        <files mask="lv_gc.c"/>
        <files mask="lv_ll.c"/>
        <files mask="lv_log.c"/>
        <files mask="lv_math.c"/>
        <files mask="lv_mem.c"/>
        <files mask="lv_task.c"/>
        <files mask="lv_templ.c"/>
        <files mask="lv_txt.c"/>
        <files mask="lv_ufs.c"/>
      </source>
      <source path="middleware/littlevgl/lv_misc" target_path="littlevgl/lv_misc" type="c_include">
        <files mask="lv_anim.h"/>
        <files mask="lv_area.h"/>
        <files mask="lv_circ.h"/>
        <files mask="lv_color.h"/>
        <files mask="lv_font.h"/>
        <files mask="lv_fs.h"/>
        <files mask="lv_gc.h"/>
        <files mask="lv_ll.h"/>
        <files mask="lv_log.h"/>
        <files mask="lv_math.h"/>
        <files mask="lv_mem.h"/>
        <files mask="lv_symbol_def.h"/>
        <files mask="lv_task.h"/>
        <files mask="lv_templ.h"/>
        <files mask="lv_txt.h"/>
        <files mask="lv_ufs.h"/>
      </source>
      <source path="middleware/littlevgl/lv_objx" target_path="littlevgl/lv_objx" type="src">
        <files mask="lv_arc.c"/>
        <files mask="lv_bar.c"/>
        <files mask="lv_btn.c"/>
        <files mask="lv_btnm.c"/>
        <files mask="lv_calendar.c"/>
        <files mask="lv_canvas.c"/>
        <files mask="lv_cb.c"/>
        <files mask="lv_chart.c"/>
        <files mask="lv_cont.c"/>
        <files mask="lv_ddlist.c"/>
        <files mask="lv_gauge.c"/>
        <files mask="lv_img.c"/>
        <files mask="lv_imgbtn.c"/>
        <files mask="lv_kb.c"/>
        <files mask="lv_label.c"/>
        <files mask="lv_led.c"/>
        <files mask="lv_line.c"/>
        <files mask="lv_list.c"/>
        <files mask="lv_lmeter.c"/>
        <files mask="lv_mbox.c"/>
        <files mask="lv_objx_templ.c"/>
        <files mask="lv_page.c"/>
        <files mask="lv_preload.c"/>
        <files mask="lv_roller.c"/>
        <files mask="lv_slider.c"/>
        <files mask="lv_spinbox.c"/>
        <files mask="lv_sw.c"/>
        <files mask="lv_ta.c"/>
        <files mask="lv_table.c"/>
        <files mask="lv_tabview.c"/>
        <files mask="lv_tileview.c"/>
        <files mask="lv_win.c"/>
      </source>
      <source path="middleware/littlevgl/lv_objx" target_path="littlevgl/lv_objx" type="c_include">
        <files mask="lv_arc.h"/>
        <files mask="lv_bar.h"/>
        <files mask="lv_btn.h"/>
        <files mask="lv_btnm.h"/>
        <files mask="lv_calendar.h"/>
        <files mask="lv_canvas.h"/>
        <files mask="lv_cb.h"/>
        <files mask="lv_chart.h"/>
        <files mask="lv_cont.h"/>
        <files mask="lv_ddlist.h"/>
        <files mask="lv_gauge.h"/>
        <files mask="lv_img.h"/>
        <files mask="lv_imgbtn.h"/>
        <files mask="lv_kb.h"/>
        <files mask="lv_label.h"/>
        <files mask="lv_led.h"/>
        <files mask="lv_line.h"/>
        <files mask="lv_list.h"/>
        <files mask="lv_lmeter.h"/>
        <files mask="lv_mbox.h"/>
        <files mask="lv_objx_templ.h"/>
        <files mask="lv_page.h"/>
        <files mask="lv_preload.h"/>
        <files mask="lv_roller.h"/>
        <files mask="lv_slider.h"/>
        <files mask="lv_spinbox.h"/>
        <files mask="lv_sw.h"/>
        <files mask="lv_ta.h"/>
        <files mask="lv_table.h"/>
        <files mask="lv_tabview.h"/>
        <files mask="lv_tileview.h"/>
        <files mask="lv_win.h"/>
      </source>
      <source path="middleware/littlevgl/lv_themes" target_path="littlevgl/lv_themes" type="src">
        <files mask="lv_theme.c"/>
        <files mask="lv_theme_alien.c"/>
        <files mask="lv_theme_default.c"/>
        <files mask="lv_theme_material.c"/>
        <files mask="lv_theme_mono.c"/>
        <files mask="lv_theme_nemo.c"/>
        <files mask="lv_theme_night.c"/>
        <files mask="lv_theme_templ.c"/>
        <files mask="lv_theme_zen.c"/>
      </source>
      <source path="middleware/littlevgl/lv_themes" target_path="littlevgl/lv_themes" type="c_include">
        <files mask="lv_theme.h"/>
        <files mask="lv_theme_alien.h"/>
        <files mask="lv_theme_default.h"/>
        <files mask="lv_theme_material.h"/>
        <files mask="lv_theme_mono.h"/>
        <files mask="lv_theme_nemo.h"/>
        <files mask="lv_theme_night.h"/>
        <files mask="lv_theme_templ.h"/>
        <files mask="lv_theme_zen.h"/>
      </source>
    </component>
    <component id="middleware.mbedtls.MIMXRT1064" name="mbedtls" brief="mbedTLS library" version="2.13.1" devices="MIMXRT1064xxxxA" dependency="middleware.template_application.mbedtls.MIMXRT1064" category="Security/mbedTLS library" user_visible="true" type="middleware">
      <source path="middleware/mbedtls/include/mbedtls" target_path="mbedtls/include/mbedtls" type="src">
        <files mask="aes.h"/>
        <files mask="aesni.h"/>
        <files mask="arc4.h"/>
        <files mask="aria.h"/>
        <files mask="asn1.h"/>
        <files mask="asn1write.h"/>
        <files mask="base64.h"/>
        <files mask="bignum.h"/>
        <files mask="blowfish.h"/>
        <files mask="bn_mul.h"/>
        <files mask="camellia.h"/>
        <files mask="ccm.h"/>
        <files mask="certs.h"/>
        <files mask="chacha20.h"/>
        <files mask="chachapoly.h"/>
        <files mask="check_config.h"/>
        <files mask="cipher.h"/>
        <files mask="cipher_internal.h"/>
        <files mask="cmac.h"/>
        <files mask="compat-1.3.h"/>
        <files mask="config.h"/>
        <files mask="ctr_drbg.h"/>
        <files mask="debug.h"/>
        <files mask="des.h"/>
        <files mask="dhm.h"/>
        <files mask="ecdh.h"/>
        <files mask="ecdsa.h"/>
        <files mask="ecjpake.h"/>
        <files mask="ecp.h"/>
        <files mask="ecp_internal.h"/>
        <files mask="entropy.h"/>
        <files mask="entropy_poll.h"/>
        <files mask="error.h"/>
        <files mask="gcm.h"/>
        <files mask="havege.h"/>
        <files mask="hkdf.h"/>
        <files mask="hmac_drbg.h"/>
        <files mask="md.h"/>
        <files mask="md2.h"/>
        <files mask="md4.h"/>
        <files mask="md5.h"/>
        <files mask="md_internal.h"/>
        <files mask="memory_buffer_alloc.h"/>
        <files mask="net.h"/>
        <files mask="net_sockets.h"/>
        <files mask="nist_kw.h"/>
        <files mask="oid.h"/>
        <files mask="padlock.h"/>
        <files mask="pem.h"/>
        <files mask="pk.h"/>
        <files mask="pk_internal.h"/>
        <files mask="pkcs11.h"/>
        <files mask="pkcs12.h"/>
        <files mask="pkcs5.h"/>
        <files mask="platform.h"/>
        <files mask="platform_time.h"/>
        <files mask="platform_util.h"/>
        <files mask="poly1305.h"/>
        <files mask="ripemd160.h"/>
        <files mask="rsa.h"/>
        <files mask="rsa_internal.h"/>
        <files mask="sha1.h"/>
        <files mask="sha256.h"/>
        <files mask="sha512.h"/>
        <files mask="ssl.h"/>
        <files mask="ssl_cache.h"/>
        <files mask="ssl_ciphersuites.h"/>
        <files mask="ssl_cookie.h"/>
        <files mask="ssl_internal.h"/>
        <files mask="ssl_ticket.h"/>
        <files mask="threading.h"/>
        <files mask="timing.h"/>
        <files mask="version.h"/>
        <files mask="x509.h"/>
        <files mask="x509_crl.h"/>
        <files mask="x509_crt.h"/>
        <files mask="x509_csr.h"/>
        <files mask="xtea.h"/>
      </source>
      <source path="middleware/mbedtls/library" target_path="mbedtls/library" type="src">
        <files mask="aes.c"/>
        <files mask="aesni.c"/>
        <files mask="arc4.c"/>
        <files mask="aria.c"/>
        <files mask="asn1parse.c"/>
        <files mask="asn1write.c"/>
        <files mask="base64.c"/>
        <files mask="bignum.c"/>
        <files mask="blowfish.c"/>
        <files mask="camellia.c"/>
        <files mask="ccm.c"/>
        <files mask="certs.c"/>
        <files mask="chacha20.c"/>
        <files mask="chachapoly.c"/>
        <files mask="cipher.c"/>
        <files mask="cipher_wrap.c"/>
        <files mask="cmac.c"/>
        <files mask="ctr_drbg.c"/>
        <files mask="debug.c"/>
        <files mask="des.c"/>
        <files mask="dhm.c"/>
        <files mask="ecdh.c"/>
        <files mask="ecdsa.c"/>
        <files mask="ecjpake.c"/>
        <files mask="ecp.c"/>
        <files mask="ecp_curves.c"/>
        <files mask="entropy.c"/>
        <files mask="entropy_poll.c"/>
        <files mask="error.c"/>
        <files mask="gcm.c"/>
        <files mask="havege.c"/>
        <files mask="hkdf.c"/>
        <files mask="hmac_drbg.c"/>
        <files mask="md.c"/>
        <files mask="md2.c"/>
        <files mask="md4.c"/>
        <files mask="md5.c"/>
        <files mask="md_wrap.c"/>
        <files mask="memory_buffer_alloc.c"/>
        <files mask="net_sockets.c"/>
        <files mask="nist_kw.c"/>
        <files mask="oid.c"/>
        <files mask="padlock.c"/>
        <files mask="pem.c"/>
        <files mask="pk.c"/>
        <files mask="pk_wrap.c"/>
        <files mask="pkcs11.c"/>
        <files mask="pkcs12.c"/>
        <files mask="pkcs5.c"/>
        <files mask="pkparse.c"/>
        <files mask="pkwrite.c"/>
        <files mask="platform.c"/>
        <files mask="platform_util.c"/>
        <files mask="poly1305.c"/>
        <files mask="ripemd160.c"/>
        <files mask="rsa.c"/>
        <files mask="rsa_internal.c"/>
        <files mask="sha1.c"/>
        <files mask="sha256.c"/>
        <files mask="sha512.c"/>
        <files mask="ssl_cache.c"/>
        <files mask="ssl_ciphersuites.c"/>
        <files mask="ssl_cli.c"/>
        <files mask="ssl_cookie.c"/>
        <files mask="ssl_srv.c"/>
        <files mask="ssl_ticket.c"/>
        <files mask="ssl_tls.c"/>
        <files mask="threading.c"/>
        <files mask="timing.c"/>
        <files mask="version.c"/>
        <files mask="version_features.c"/>
        <files mask="x509.c"/>
        <files mask="x509_create.c"/>
        <files mask="x509_crl.c"/>
        <files mask="x509_crt.c"/>
        <files mask="x509_csr.c"/>
        <files mask="x509write_crt.c"/>
        <files mask="x509write_csr.c"/>
        <files mask="xtea.c"/>
      </source>
      <source path="middleware/mbedtls/port/ksdk" target_path="mbedtls/port/ksdk" type="src">
        <files mask="aes_alt.c"/>
        <files mask="des_alt.c"/>
        <files mask="ecp_alt.c"/>
        <files mask="ecp_alt_ksdk.c"/>
        <files mask="ecp_curves_alt.c"/>
        <files mask="ksdk_mbedtls.c"/>
      </source>
      <source path="middleware/mbedtls/port/ksdk" target_path="mbedtls/port/ksdk" type="c_include">
        <files mask="aes_alt.h"/>
        <files mask="des_alt.h"/>
        <files mask="ecp_alt.h"/>
        <files mask="ksdk_mbedtls.h"/>
        <files mask="ksdk_mbedtls_config.h"/>
        <files mask="sha1_alt.h"/>
        <files mask="sha256_alt.h"/>
      </source>
      <include_paths>
        <include_path path="mbedtls/include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls.unused_files.MIMXRT1064" name="unused_files" brief="mbedTLS files unused by projects" version="2.13.1" devices="MIMXRT1064xxxxA" category="Security/mbedTLS library" user_visible="false" type="other">
      <source exclude="true" path="middleware/mbedtls" target_path="mbedtls" type="other">
        <files mask=".gitignore"/>
        <files mask=".travis.yml"/>
        <files mask="ChangeLog"/>
        <files mask="DartConfiguration.tcl"/>
        <files mask="LICENSE"/>
        <files mask="Makefile"/>
        <files mask="README.md"/>
        <files mask="circle.yml"/>
      </source>
      <source exclude="true" path="middleware/mbedtls" target_path="mbedtls" type="doc">
        <files mask="CMakeLists.txt"/>
        <files mask="ChangeLogKSDK.txt"/>
        <files mask="apache-2.0.txt"/>
        <files mask="mbeTLS_for_Kinetis_SDK_v2.0_readme.txt"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/configs" target_path="mbedtls/configs" type="doc">
        <files mask="README.txt"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/configs" target_path="mbedtls/configs" type="c_include">
        <files mask="config-ccm-psk-tls1_2.h"/>
        <files mask="config-mini-tls1_1.h"/>
        <files mask="config-no-entropy.h"/>
        <files mask="config-suite-b.h"/>
        <files mask="config-thread.h"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/doxygen/input" target_path="mbedtls/doxygen/input" type="c_include">
        <files mask="doc_encdec.h"/>
        <files mask="doc_hashing.h"/>
        <files mask="doc_mainpage.h"/>
        <files mask="doc_rng.h"/>
        <files mask="doc_ssltls.h"/>
        <files mask="doc_tcpip.h"/>
        <files mask="doc_x509.h"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/doxygen" target_path="mbedtls/doxygen" type="other">
        <files mask="mbedtls.doxyfile"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/include" target_path="mbedtls/include" type="other">
        <files mask=".gitignore"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/include" target_path="mbedtls/include" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/library" target_path="mbedtls/library" type="other">
        <files mask=".gitignore"/>
        <files mask="Makefile"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/library" target_path="mbedtls/library" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs" target_path="mbedtls/programs" type="other">
        <files mask="Makefile"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/aes" target_path="mbedtls/programs/aes" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/aes" target_path="mbedtls/programs/aes" type="src">
        <files mask="aescrypt2.c"/>
        <files mask="crypt_and_hash.c"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/hash" target_path="mbedtls/programs/hash" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/hash" target_path="mbedtls/programs/hash" type="src">
        <files mask="generic_sum.c"/>
        <files mask="hello.c"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/pkey" target_path="mbedtls/programs/pkey" type="doc">
        <files mask="CMakeLists.txt"/>
        <files mask="dh_prime.txt"/>
        <files mask="rsa_priv.txt"/>
        <files mask="rsa_pub.txt"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/pkey" target_path="mbedtls/programs/pkey" type="src">
        <files mask="dh_client.c"/>
        <files mask="dh_genprime.c"/>
        <files mask="dh_server.c"/>
        <files mask="ecdh_curve25519.c"/>
        <files mask="ecdsa.c"/>
        <files mask="gen_key.c"/>
        <files mask="key_app.c"/>
        <files mask="key_app_writer.c"/>
        <files mask="mpi_demo.c"/>
        <files mask="pk_decrypt.c"/>
        <files mask="pk_encrypt.c"/>
        <files mask="pk_sign.c"/>
        <files mask="pk_verify.c"/>
        <files mask="rsa_decrypt.c"/>
        <files mask="rsa_encrypt.c"/>
        <files mask="rsa_genkey.c"/>
        <files mask="rsa_sign.c"/>
        <files mask="rsa_sign_pss.c"/>
        <files mask="rsa_verify.c"/>
        <files mask="rsa_verify_pss.c"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/random" target_path="mbedtls/programs/random" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/random" target_path="mbedtls/programs/random" type="src">
        <files mask="gen_entropy.c"/>
        <files mask="gen_random_ctr_drbg.c"/>
        <files mask="gen_random_havege.c"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/ssl" target_path="mbedtls/programs/ssl" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/ssl" target_path="mbedtls/programs/ssl" type="src">
        <files mask="dtls_client.c"/>
        <files mask="dtls_server.c"/>
        <files mask="mini_client.c"/>
        <files mask="ssl_client1.c"/>
        <files mask="ssl_client2.c"/>
        <files mask="ssl_fork_server.c"/>
        <files mask="ssl_mail_client.c"/>
        <files mask="ssl_pthread_server.c"/>
        <files mask="ssl_server.c"/>
        <files mask="ssl_server2.c"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/test" target_path="mbedtls/programs/test" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/test" target_path="mbedtls/programs/test" type="src">
        <files mask="benchmark.c"/>
        <files mask="cpp_dummy_build.cpp"/>
        <files mask="selftest.c"/>
        <files mask="ssl_cert_test.c"/>
        <files mask="udp_proxy.c"/>
        <files mask="zeroize.c"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/test" target_path="mbedtls/programs/test" type="script">
        <files mask="udp_proxy_wrapper.sh"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/util" target_path="mbedtls/programs/util" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/util" target_path="mbedtls/programs/util" type="src">
        <files mask="pem2der.c"/>
        <files mask="strerror.c"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/x509" target_path="mbedtls/programs/x509" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/x509" target_path="mbedtls/programs/x509" type="src">
        <files mask="cert_app.c"/>
        <files mask="cert_req.c"/>
        <files mask="cert_write.c"/>
        <files mask="crl_app.c"/>
        <files mask="req_app.c"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/scripts" target_path="mbedtls/scripts" type="script">
        <files mask="abi_check.py"/>
        <files mask="apidoc_full.sh"/>
        <files mask="bump_version.sh"/>
        <files mask="ecc-heap.sh"/>
        <files mask="footprint.sh"/>
        <files mask="memory.sh"/>
        <files mask="output_env.sh"/>
        <files mask="tmp_ignore_makefiles.sh"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/scripts" target_path="mbedtls/scripts" type="other">
        <files mask="config.pl"/>
        <files mask="find-mem-leak.cocci"/>
        <files mask="generate_errors.pl"/>
        <files mask="generate_features.pl"/>
        <files mask="generate_visualc_files.pl"/>
        <files mask="massif_max.pl"/>
        <files mask="rename.pl"/>
        <files mask="rm-calloc-cast.cocci"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/scripts/data_files" target_path="mbedtls/scripts/data_files" type="other">
        <files mask="error.fmt"/>
        <files mask="version_features.fmt"/>
        <files mask="vs2010-app-template.vcxproj"/>
        <files mask="vs2010-main-template.vcxproj"/>
        <files mask="vs2010-sln-template.sln"/>
        <files mask="vs6-app-template.dsp"/>
        <files mask="vs6-main-template.dsp"/>
        <files mask="vs6-workspace-template.dsw"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/scripts/data_files" target_path="mbedtls/scripts/data_files" type="doc">
        <files mask="rename-1.3-2.0.txt"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/tests" target_path="mbedtls/tests" type="other">
        <files mask="Makefile"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/tests/data_files" target_path="mbedtls/tests/data_files" type="other">
        <files mask="Makefile"/>
        <files mask="hash_file_1"/>
        <files mask="hash_file_2"/>
        <files mask="hash_file_3"/>
        <files mask="hash_file_4"/>
        <files mask="hash_file_5"/>
        <files mask="mpi_10"/>
        <files mask="mpi_too_big"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/tests/data_files/dir3" target_path="mbedtls/tests/data_files/dir3" type="other">
        <files mask="Readme"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/tests/data_files/dir4" target_path="mbedtls/tests/data_files/dir4" type="other">
        <files mask="Readme"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/tests/git-scripts" target_path="mbedtls/tests/git-scripts" type="other">
        <files mask="README.md"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/tests/git-scripts" target_path="mbedtls/tests/git-scripts" type="script">
        <files mask="pre-push.sh"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/tests/scripts" target_path="mbedtls/tests/scripts" type="script">
        <files mask="all.sh"/>
        <files mask="basic-build-test.sh"/>
        <files mask="check-files.py"/>
        <files mask="check-generated-files.sh"/>
        <files mask="check-names.sh"/>
        <files mask="check-python-files.sh"/>
        <files mask="doxygen.sh"/>
        <files mask="generate-afl-tests.sh"/>
        <files mask="generate_test_code.py"/>
        <files mask="list-identifiers.sh"/>
        <files mask="list-macros.sh"/>
        <files mask="list-symbols.sh"/>
        <files mask="mbedtls_test.py"/>
        <files mask="test_generate_test_code.py"/>
        <files mask="travis-log-failure.sh"/>
        <files mask="yotta-build.sh"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/tests/scripts" target_path="mbedtls/tests/scripts" type="other">
        <files mask="check-doxy-blocks.pl"/>
        <files mask="curves.pl"/>
        <files mask="depends-hashes.pl"/>
        <files mask="depends-pkalgs.pl"/>
        <files mask="gen_ctr_drbg.pl"/>
        <files mask="gen_gcm_decrypt.pl"/>
        <files mask="gen_gcm_encrypt.pl"/>
        <files mask="gen_pkcs1_v21_sign_verify.pl"/>
        <files mask="key-exchanges.pl"/>
        <files mask="list-enum-consts.pl"/>
        <files mask="recursion.pl"/>
        <files mask="run-test-suites.pl"/>
        <files mask="tcp_client.pl"/>
        <files mask="test-ref-configs.pl"/>
        <files mask="test_zeroize.gdb"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/tests/suites" target_path="mbedtls/tests/suites" type="other">
        <files mask="helpers.function"/>
        <files mask="host_test.function"/>
        <files mask="main_test.function"/>
        <files mask="target_test.function"/>
        <files mask="test_suite_aes.cbc.data"/>
        <files mask="test_suite_aes.cfb.data"/>
        <files mask="test_suite_aes.ecb.data"/>
        <files mask="test_suite_aes.function"/>
        <files mask="test_suite_aes.ofb.data"/>
        <files mask="test_suite_aes.rest.data"/>
        <files mask="test_suite_aes.xts.data"/>
        <files mask="test_suite_arc4.data"/>
        <files mask="test_suite_arc4.function"/>
        <files mask="test_suite_aria.data"/>
        <files mask="test_suite_aria.function"/>
        <files mask="test_suite_asn1write.data"/>
        <files mask="test_suite_asn1write.function"/>
        <files mask="test_suite_base64.data"/>
        <files mask="test_suite_base64.function"/>
        <files mask="test_suite_blowfish.data"/>
        <files mask="test_suite_blowfish.function"/>
        <files mask="test_suite_camellia.data"/>
        <files mask="test_suite_camellia.function"/>
        <files mask="test_suite_ccm.data"/>
        <files mask="test_suite_ccm.function"/>
        <files mask="test_suite_chacha20.data"/>
        <files mask="test_suite_chacha20.function"/>
        <files mask="test_suite_chachapoly.data"/>
        <files mask="test_suite_chachapoly.function"/>
        <files mask="test_suite_cipher.aes.data"/>
        <files mask="test_suite_cipher.arc4.data"/>
        <files mask="test_suite_cipher.blowfish.data"/>
        <files mask="test_suite_cipher.camellia.data"/>
        <files mask="test_suite_cipher.ccm.data"/>
        <files mask="test_suite_cipher.chacha20.data"/>
        <files mask="test_suite_cipher.chachapoly.data"/>
        <files mask="test_suite_cipher.des.data"/>
        <files mask="test_suite_cipher.function"/>
        <files mask="test_suite_cipher.gcm.data"/>
        <files mask="test_suite_cipher.null.data"/>
        <files mask="test_suite_cipher.padding.data"/>
        <files mask="test_suite_cmac.data"/>
        <files mask="test_suite_cmac.function"/>
        <files mask="test_suite_ctr_drbg.data"/>
        <files mask="test_suite_ctr_drbg.function"/>
        <files mask="test_suite_debug.data"/>
        <files mask="test_suite_debug.function"/>
        <files mask="test_suite_des.data"/>
        <files mask="test_suite_des.function"/>
        <files mask="test_suite_dhm.data"/>
        <files mask="test_suite_dhm.function"/>
        <files mask="test_suite_ecdh.data"/>
        <files mask="test_suite_ecdh.function"/>
        <files mask="test_suite_ecdsa.data"/>
        <files mask="test_suite_ecdsa.function"/>
        <files mask="test_suite_ecjpake.data"/>
        <files mask="test_suite_ecjpake.function"/>
        <files mask="test_suite_ecp.data"/>
        <files mask="test_suite_ecp.function"/>
        <files mask="test_suite_entropy.data"/>
        <files mask="test_suite_entropy.function"/>
        <files mask="test_suite_error.data"/>
        <files mask="test_suite_error.function"/>
        <files mask="test_suite_gcm.aes128_de.data"/>
        <files mask="test_suite_gcm.aes128_en.data"/>
        <files mask="test_suite_gcm.aes192_de.data"/>
        <files mask="test_suite_gcm.aes192_en.data"/>
        <files mask="test_suite_gcm.aes256_de.data"/>
        <files mask="test_suite_gcm.aes256_en.data"/>
        <files mask="test_suite_gcm.camellia.data"/>
        <files mask="test_suite_gcm.function"/>
        <files mask="test_suite_hkdf.data"/>
        <files mask="test_suite_hkdf.function"/>
        <files mask="test_suite_hmac_drbg.function"/>
        <files mask="test_suite_hmac_drbg.misc.data"/>
        <files mask="test_suite_hmac_drbg.no_reseed.data"/>
        <files mask="test_suite_hmac_drbg.nopr.data"/>
        <files mask="test_suite_hmac_drbg.pr.data"/>
        <files mask="test_suite_md.data"/>
        <files mask="test_suite_md.function"/>
        <files mask="test_suite_mdx.data"/>
        <files mask="test_suite_mdx.function"/>
        <files mask="test_suite_memory_buffer_alloc.data"/>
        <files mask="test_suite_memory_buffer_alloc.function"/>
        <files mask="test_suite_mpi.data"/>
        <files mask="test_suite_mpi.function"/>
        <files mask="test_suite_nist_kw.data"/>
        <files mask="test_suite_nist_kw.function"/>
        <files mask="test_suite_pem.data"/>
        <files mask="test_suite_pem.function"/>
        <files mask="test_suite_pk.data"/>
        <files mask="test_suite_pk.function"/>
        <files mask="test_suite_pkcs1_v15.data"/>
        <files mask="test_suite_pkcs1_v15.function"/>
        <files mask="test_suite_pkcs1_v21.data"/>
        <files mask="test_suite_pkcs1_v21.function"/>
        <files mask="test_suite_pkcs5.data"/>
        <files mask="test_suite_pkcs5.function"/>
        <files mask="test_suite_pkparse.data"/>
        <files mask="test_suite_pkparse.function"/>
        <files mask="test_suite_pkwrite.data"/>
        <files mask="test_suite_pkwrite.function"/>
        <files mask="test_suite_poly1305.data"/>
        <files mask="test_suite_poly1305.function"/>
        <files mask="test_suite_rsa.data"/>
        <files mask="test_suite_rsa.function"/>
        <files mask="test_suite_shax.data"/>
        <files mask="test_suite_shax.function"/>
        <files mask="test_suite_ssl.data"/>
        <files mask="test_suite_ssl.function"/>
        <files mask="test_suite_timing.data"/>
        <files mask="test_suite_timing.function"/>
        <files mask="test_suite_version.data"/>
        <files mask="test_suite_version.function"/>
        <files mask="test_suite_x509parse.data"/>
        <files mask="test_suite_x509parse.function"/>
        <files mask="test_suite_x509write.data"/>
        <files mask="test_suite_x509write.function"/>
        <files mask="test_suite_xtea.data"/>
        <files mask="test_suite_xtea.function"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/visualc/VS2010" target_path="mbedtls/visualc/VS2010" type="other">
        <files mask="aescrypt2.vcxproj"/>
        <files mask="benchmark.vcxproj"/>
        <files mask="cert_app.vcxproj"/>
        <files mask="cert_req.vcxproj"/>
        <files mask="cert_write.vcxproj"/>
        <files mask="crl_app.vcxproj"/>
        <files mask="crypt_and_hash.vcxproj"/>
        <files mask="dh_client.vcxproj"/>
        <files mask="dh_genprime.vcxproj"/>
        <files mask="dh_server.vcxproj"/>
        <files mask="dtls_client.vcxproj"/>
        <files mask="dtls_server.vcxproj"/>
        <files mask="ecdh_curve25519.vcxproj"/>
        <files mask="ecdsa.vcxproj"/>
        <files mask="gen_entropy.vcxproj"/>
        <files mask="gen_key.vcxproj"/>
        <files mask="gen_random_ctr_drbg.vcxproj"/>
        <files mask="gen_random_havege.vcxproj"/>
        <files mask="generic_sum.vcxproj"/>
        <files mask="hello.vcxproj"/>
        <files mask="key_app.vcxproj"/>
        <files mask="key_app_writer.vcxproj"/>
        <files mask="mbedTLS.sln"/>
        <files mask="mbedTLS.vcxproj"/>
        <files mask="mini_client.vcxproj"/>
        <files mask="mpi_demo.vcxproj"/>
        <files mask="pem2der.vcxproj"/>
        <files mask="pk_decrypt.vcxproj"/>
        <files mask="pk_encrypt.vcxproj"/>
        <files mask="pk_sign.vcxproj"/>
        <files mask="pk_verify.vcxproj"/>
        <files mask="req_app.vcxproj"/>
        <files mask="rsa_decrypt.vcxproj"/>
        <files mask="rsa_encrypt.vcxproj"/>
        <files mask="rsa_genkey.vcxproj"/>
        <files mask="rsa_sign.vcxproj"/>
        <files mask="rsa_sign_pss.vcxproj"/>
        <files mask="rsa_verify.vcxproj"/>
        <files mask="rsa_verify_pss.vcxproj"/>
        <files mask="selftest.vcxproj"/>
        <files mask="ssl_cert_test.vcxproj"/>
        <files mask="ssl_client1.vcxproj"/>
        <files mask="ssl_client2.vcxproj"/>
        <files mask="ssl_fork_server.vcxproj"/>
        <files mask="ssl_mail_client.vcxproj"/>
        <files mask="ssl_server.vcxproj"/>
        <files mask="ssl_server2.vcxproj"/>
        <files mask="strerror.vcxproj"/>
        <files mask="udp_proxy.vcxproj"/>
        <files mask="zeroize.vcxproj"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/yotta/data" target_path="mbedtls/yotta/data" type="other">
        <files mask="README.md"/>
        <files mask="module.json"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/yotta/data" target_path="mbedtls/yotta/data" type="script">
        <files mask="adjust-config.sh"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/yotta/data" target_path="mbedtls/yotta/data" type="src">
        <files mask="entropy_hardware_poll.c"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/yotta/data/example-authcrypt" target_path="mbedtls/yotta/data/example-authcrypt" type="other">
        <files mask="README.md"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/yotta/data/example-authcrypt" target_path="mbedtls/yotta/data/example-authcrypt" type="src">
        <files mask="main.cpp"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/yotta/data/example-benchmark" target_path="mbedtls/yotta/data/example-benchmark" type="other">
        <files mask="README.md"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/yotta/data/example-benchmark" target_path="mbedtls/yotta/data/example-benchmark" type="src">
        <files mask="main.cpp"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/yotta/data/example-hashing" target_path="mbedtls/yotta/data/example-hashing" type="other">
        <files mask="README.md"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/yotta/data/example-hashing" target_path="mbedtls/yotta/data/example-hashing" type="src">
        <files mask="main.cpp"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/yotta/data/example-selftest" target_path="mbedtls/yotta/data/example-selftest" type="other">
        <files mask="README.md"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/yotta/data/example-selftest" target_path="mbedtls/yotta/data/example-selftest" type="src">
        <files mask="main.cpp"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/yotta/data" target_path="mbedtls/yotta/data" type="c_include">
        <files mask="target_config.h"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.CMSIS_cm0p_headers.MIMXRT1064" name="CMSIS_cm0p_headers" brief="CMSIS cm0p headers" version="2.5.0" devices="MIMXRT1064xxxxA" user_visible="false" type="middleware">
      <source toolchain="mcuxpresso" path="CMSIS/Include" target_path="CMSIS" type="c_include">
        <files mask="cmsis_compiler.h"/>
        <files mask="cmsis_gcc.h"/>
        <files mask="cmsis_version.h"/>
        <files mask="core_cm0plus.h"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.CMSIS_cm4_headers.MIMXRT1064" name="CMSIS_cm4_headers" brief="CMSIS cm4 headers" version="2.5.0" devices="MIMXRT1064xxxxA" user_visible="false" type="middleware">
      <source toolchain="mcuxpresso" path="CMSIS/Include" target_path="CMSIS" type="c_include">
        <files mask="cmsis_compiler.h"/>
        <files mask="cmsis_gcc.h"/>
        <files mask="cmsis_version.h"/>
        <files mask="core_cm4.h"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.CMSIS_cm4_mpu_headers.MIMXRT1064" name="CMSIS_cm4_mpu_headers" brief="CMSIS cm4 mpu headers" version="2.5.0" devices="MIMXRT1064xxxxA" user_visible="false" type="middleware">
      <source toolchain="mcuxpresso" path="CMSIS/Include" target_path="CMSIS" type="c_include">
        <files mask="cmsis_compiler.h"/>
        <files mask="cmsis_gcc.h"/>
        <files mask="cmsis_version.h"/>
        <files mask="core_cm4.h"/>
        <files mask="mpu_armv7.h"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.CMSIS_cm7_headers.MIMXRT1064" name="CMSIS_cm7_headers" brief="CMSIS cm7 headers" version="2.5.0" devices="MIMXRT1064xxxxA" user_visible="false" type="middleware">
      <source toolchain="mcuxpresso" path="CMSIS/Include" target_path="CMSIS" type="c_include">
        <files mask="cmsis_compiler.h"/>
        <files mask="cmsis_gcc.h"/>
        <files mask="cmsis_version.h"/>
        <files mask="core_cm7.h"/>
        <files mask="mpu_armv7.h"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.MIMXRT1064_drivers.MIMXRT1064" name="MIMXRT1064_drivers" brief="MIMXRT1064 drivers" version="2.5.0" devices="MIMXRT1064xxxxA" user_visible="false" type="middleware">
      <source path="middleware/mcu-boot/targets/MIMXRT1064/drivers" target_path="drivers" type="src">
        <files mask="fsl_common.c"/>
      </source>
      <source path="middleware/mcu-boot/targets/MIMXRT1064/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_common.h"/>
      </source>
      <source path="middleware/mcu-boot/targets/MIMXRT1064/src" target_path="drivers" type="c_include">
        <files mask="fsl_clock.h"/>
        <files mask="fsl_rtwdog.h"/>
        <files mask="fsl_wdog.h"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.MIMXRT1064_sources.MIMXRT1064" name="MCUBOOT_MIMXRT1064_sources" brief="MCUBOOT MIMXRT1064 sources" version="1.0.0" devices="MIMXRT1064xxxxA" user_visible="false" type="middleware">
      <source path="middleware/mcu-boot/targets/MIMXRT1064/src" target_path="MIMXRT1064" type="src">
        <files mask="bl_api.c"/>
        <files mask="bl_lpuart_irq_config_MIMXRT1064.c"/>
        <files mask="clock_config_MIMXRT1064.c"/>
        <files mask="external_memory_property_map_MIMXRT1064.c"/>
        <files mask="flexspi_nand_config_MIMXRT1064.c"/>
        <files mask="flexspi_nor_config_MIMXRT1064.c"/>
        <files mask="hardware_init_MIMXRT1064.c"/>
        <files mask="memory_map_MIMXRT1064.c"/>
        <files mask="peripherals_MIMXRT1064.c"/>
        <files mask="sdmmc_config_MIMXRT1064.c"/>
        <files mask="semc_nand_config_MIMXRT1064.c"/>
        <files mask="semc_nor_config_MIMXRT1064.c"/>
      </source>
      <source path="middleware/mcu-boot/targets/MIMXRT1064/src" target_path="MIMXRT1064" type="c_include">
        <files mask="bl_api.h"/>
        <files mask="bootloader_config.h"/>
        <files mask="fsl_iomuxc.h"/>
        <files mask="fusemap.h"/>
        <files mask="peripherals_pinmux.h"/>
        <files mask="sdmmc_init.h"/>
        <files mask="target_config.h"/>
      </source>
      <source path="middleware/mcu-boot/targets/MIMXRT1064/src" target_path="source/memory/src" type="src">
        <files mask="sram_init_MIMXRT1064.c"/>
      </source>
      <source path="middleware/mcu-boot/targets/MIMXRT1064/src" target_path="source/usb/bm_composite" type="c_include">
        <files mask="usb_device_config.h"/>
      </source>
      <source path="middleware/mcu-boot/targets/common/src" target_path="MIMXRT1064" type="src">
        <files mask="pinmux_utility_imxrt_series.c"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.MIMXRT1064_startup.MIMXRT1064" name="MCUBOOT_MIMXRT1064_startup" brief="MCUBOOT MIMXRT1064 startup sources" version="1.0.0" devices="MIMXRT1064xxxxA" user_visible="false" type="middleware">
      <source toolchain="mcuxpresso" path="middleware/mcu-boot/src/startup" target_path="startup" type="asm_include">
        <files mask="crt0_gcc.S"/>
      </source>
      <source path="middleware/mcu-boot/targets/MIMXRT1064" target_path="device" type="c_include">
        <files mask="MIMXRT1064.h"/>
        <files mask="MIMXRT1064_features.h"/>
        <files mask="fsl_device_registers.h"/>
        <files mask="system_MIMXRT1064.h"/>
      </source>
      <source toolchain="mdk" path="middleware/mcu-boot/targets/MIMXRT1064/src/startup/arm" target_path="startup" type="asm_include">
        <files mask="startup_MIMXRT1064.s"/>
      </source>
      <source toolchain="mcuxpresso" path="middleware/mcu-boot/targets/MIMXRT1064/src/startup/gcc" target_path="startup" type="asm_include">
        <files mask="startup_MIMXRT1064.S"/>
      </source>
      <source toolchain="iar" path="middleware/mcu-boot/targets/MIMXRT1064/src/startup/iar" target_path="startup" type="asm_include">
        <files mask="startup_MIMXRT1064.s"/>
      </source>
      <source path="middleware/mcu-boot/targets/MIMXRT1064/src/startup" target_path="device" type="src">
        <files mask="system_MIMXRT1064.c"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.all_files.MIMXRT1064" name="all_files" brief="mcu-boot files" version="2.7.0" devices="MIMXRT1064xxxxA" user_visible="false" type="other">
      <source exclude="true" path="middleware/mcu-boot/bin/Tools/blhost/win" target_path="middleware/mcu-boot" type="other">
        <files mask="blhost.exe"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/doc" target_path="middleware/mcu-boot" type="doc">
        <files mask="blhost User's Guide.pdf"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/smc" target_path="middleware/mcu-boot" type="c_include">
        <files mask="smc.h"/>
      </source>
      <source path="middleware/mcu-boot/src/utilities" target_path="middleware/mcu-boot" type="c_include">
        <files mask="fsl_assert.h"/>
        <files mask="fsl_rtos_abstraction.h"/>
        <files mask="kinetis_family.h"/>
        <files mask="ring_buffer.h"/>
        <files mask="vector_table_info.h"/>
      </source>
      <source path="middleware/mcu-boot/src/utilities/src" target_path="middleware/mcu-boot" type="src">
        <files mask="bootloader_tree_stub.c"/>
        <files mask="fsl_assert.c"/>
        <files mask="fsl_rtos_abstraction.c"/>
        <files mask="ring_buffer.c"/>
      </source>
      <source path="middleware/mcu-boot/tools/mk" target_path="middleware/mcu-boot" type="script">
        <files mask="common.mk"/>
      </source>
      <source path="middleware/mcu-boot/tools/src/blfwk" target_path="middleware/mcu-boot" type="c_include">
        <files mask="AESCounter.h"/>
        <files mask="AESKey.h"/>
        <files mask="BlfwkErrors.h"/>
        <files mask="Blob.h"/>
        <files mask="Bootloader.h"/>
        <files mask="BusPal.h"/>
        <files mask="BusPalPeripheral.h"/>
        <files mask="Command.h"/>
        <files mask="Crc.h"/>
        <files mask="DataSource.h"/>
        <files mask="DataSourceImager.h"/>
        <files mask="DataTarget.h"/>
        <files mask="ELF.h"/>
        <files mask="ELFSourceFile.h"/>
        <files mask="EndianUtilities.h"/>
        <files mask="ExcludesListMatcher.h"/>
        <files mask="GHSSecInfo.h"/>
        <files mask="GlobMatcher.h"/>
        <files mask="HexValues.h"/>
        <files mask="IntelHexSourceFile.h"/>
        <files mask="Logging.h"/>
        <files mask="OptionContext.h"/>
        <files mask="Packetizer.h"/>
        <files mask="Peripheral.h"/>
        <files mask="Progress.h"/>
        <files mask="Random.h"/>
        <files mask="RijndaelCTR.h"/>
        <files mask="SBSourceFile.h"/>
        <files mask="SDPCommand.h"/>
        <files mask="SDPUartPacketizer.h"/>
        <files mask="SDPUsbHidPacketizer.h"/>
        <files mask="SRecordSourceFile.h"/>
        <files mask="SearchPath.h"/>
        <files mask="SerialPacketizer.h"/>
        <files mask="SimPacketizer.h"/>
        <files mask="SimPeripheral.h"/>
        <files mask="Simulator.h"/>
        <files mask="SimulatorMemory.h"/>
        <files mask="SourceFile.h"/>
        <files mask="StELFFile.h"/>
        <files mask="StExecutableImage.h"/>
        <files mask="StIntelHexFile.h"/>
        <files mask="StSRecordFile.h"/>
        <files mask="StringMatcher.h"/>
        <files mask="UartPeripheral.h"/>
        <files mask="Updater.h"/>
        <files mask="UsbHidPacketizer.h"/>
        <files mask="UsbHidPeripheral.h"/>
        <files mask="Value.h"/>
        <files mask="bootloader_config.h"/>
        <files mask="format_string.h"/>
        <files mask="hidapi.h"/>
        <files mask="host_types.h"/>
        <files mask="int_size.h"/>
        <files mask="json.h"/>
        <files mask="options.h"/>
        <files mask="rijndael.h"/>
        <files mask="serial.h"/>
        <files mask="smart_ptr.h"/>
        <files mask="stdafx.h"/>
        <files mask="utils.h"/>
      </source>
      <source path="middleware/mcu-boot/tools/src/blfwk/doc" target_path="middleware/mcu-boot" type="other">
        <files mask="blfwk.md"/>
      </source>
      <source path="middleware/mcu-boot/tools/src/blfwk/src" target_path="middleware/mcu-boot" type="src">
        <files mask="AESCounter.cpp"/>
        <files mask="AESKey.cpp"/>
        <files mask="Blob.cpp"/>
        <files mask="Bootloader.cpp"/>
        <files mask="BusPal.cpp"/>
        <files mask="BusPalPeripheral.cpp"/>
        <files mask="Command.cpp"/>
        <files mask="Crc.cpp"/>
        <files mask="DataSource.cpp"/>
        <files mask="DataSourceImager.cpp"/>
        <files mask="DataTarget.cpp"/>
        <files mask="ELFSourceFile.cpp"/>
        <files mask="ExcludesListMatcher.cpp"/>
        <files mask="GHSSecInfo.cpp"/>
        <files mask="GlobMatcher.cpp"/>
        <files mask="HexValues.cpp"/>
        <files mask="IntelHexSourceFile.cpp"/>
        <files mask="Logging.cpp"/>
        <files mask="Random.cpp"/>
        <files mask="RijndaelCTR.cpp"/>
        <files mask="SBSourceFile.cpp"/>
        <files mask="SDPCommand.cpp"/>
        <files mask="SDPUsbHidPacketizer.cpp"/>
        <files mask="SRecordSourceFile.cpp"/>
        <files mask="SearchPath.cpp"/>
        <files mask="SerialPacketizer.cpp"/>
        <files mask="SimPacketizer.cpp"/>
        <files mask="SimPeripheral.cpp"/>
        <files mask="Simulator.cpp"/>
        <files mask="SimulatorMemory.cpp"/>
        <files mask="SourceFile.cpp"/>
        <files mask="StELFFile.cpp"/>
        <files mask="StExecutableImage.cpp"/>
        <files mask="StIntelHexFile.cpp"/>
        <files mask="StSRecordFile.cpp"/>
        <files mask="UartPeripheral.cpp"/>
        <files mask="Updater.cpp"/>
        <files mask="UsbHidPacketizer.cpp"/>
        <files mask="UsbHidPeripheral.cpp"/>
        <files mask="Value.cpp"/>
        <files mask="format_string.cpp"/>
        <files mask="hid-linux.c"/>
        <files mask="hid-mac.c"/>
        <files mask="hid-windows.c"/>
        <files mask="jsoncpp.cpp"/>
        <files mask="options.cpp"/>
        <files mask="rijndael.cpp"/>
        <files mask="serial.c"/>
        <files mask="utils.cpp"/>
      </source>
      <source path="middleware/mcu-boot/tools/src/bootloader" target_path="middleware/mcu-boot" type="c_include">
        <files mask="bl_peripheral.h"/>
      </source>
      <source path="middleware/mcu-boot/tools/src/crc" target_path="middleware/mcu-boot" type="c_include">
        <files mask="crc16.h"/>
        <files mask="crc32.h"/>
      </source>
      <source path="middleware/mcu-boot/tools/src/crc/src" target_path="middleware/mcu-boot" type="src">
        <files mask="crc16.c"/>
        <files mask="crc32.c"/>
      </source>
      <source path="middleware/mcu-boot/tools/src/include" target_path="middleware/mcu-boot" type="c_include">
        <files mask="bootloader_common.h"/>
        <files mask="bootloader_hid_report_ids.h"/>
      </source>
      <source path="middleware/mcu-boot/tools/src/memory" target_path="middleware/mcu-boot" type="c_include">
        <files mask="memory.h"/>
      </source>
      <source path="middleware/mcu-boot/tools/src/packet" target_path="middleware/mcu-boot" type="c_include">
        <files mask="command_packet.h"/>
        <files mask="serial_packet.h"/>
      </source>
      <source path="middleware/mcu-boot/tools/src/property" target_path="middleware/mcu-boot" type="c_include">
        <files mask="property.h"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/blhost" target_path="middleware/mcu-boot" type="other">
        <files mask="blhost.sln"/>
      </source>
      <source path="middleware/mcu-boot/tools/tools/blhost/src" target_path="middleware/mcu-boot" type="src">
        <files mask="blhost.cpp"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/blhost/src" target_path="middleware/mcu-boot" type="other">
        <files mask="blhost.vcxproj"/>
        <files mask="blhost.vcxproj.filters"/>
        <files mask="blhost.vcxproj.user"/>
      </source>
      <source path="middleware/mcu-boot/tools/tools/blhost/src" target_path="middleware/mcu-boot" type="c_include">
        <files mask="targetver.h"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/common/blfwk" target_path="middleware/mcu-boot" type="other">
        <files mask="blfwk.vcxproj"/>
        <files mask="blfwk.vcxproj.filters"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/common/blfwkdll" target_path="middleware/mcu-boot" type="other">
        <files mask="blfwk.vcxproj"/>
        <files mask="blfwk.vcxproj.filters"/>
        <files mask="blfwk.vcxproj.user"/>
        <files mask="blfwkdll.vcxproj"/>
        <files mask="blfwkdll.vcxproj.filters"/>
        <files mask="blfwkdll.vcxproj.user"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/common/blfwkdll" target_path="middleware/mcu-boot" type="src">
        <files mask="blfwkdll.cpp"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/common/blfwkdll" target_path="middleware/mcu-boot" type="c_include">
        <files mask="blfwkdll.h"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.bootsources.MIMXRT1064" name="MCUBOOT_common_sources" brief="Bootloader common sources" version="2.7.0" devices="MIMXRT1064xxxxA" user_visible="false" type="middleware">
      <source path="middleware/mcu-boot/src/autobaud" target_path="source/autobaud" type="c_include">
        <files mask="autobaud.h"/>
      </source>
      <source path="middleware/mcu-boot/src/autobaud/src" target_path="source/autobaud" type="src">
        <files mask="autobaud_irq.c"/>
      </source>
      <source path="middleware/mcu-boot/src/bootloader" target_path="source/bootloader" type="c_include">
        <files mask="bl_app_crc_check.h"/>
        <files mask="bl_command.h"/>
        <files mask="bl_context.h"/>
        <files mask="bl_irq_common.h"/>
        <files mask="bl_peripheral.h"/>
        <files mask="bl_peripheral_interface.h"/>
        <files mask="bl_shutdown_cleanup.h"/>
        <files mask="bl_user_entry.h"/>
        <files mask="bl_version.h"/>
        <files mask="bootloader.h"/>
      </source>
      <source path="middleware/mcu-boot/src/bootloader/src" target_path="source/bootloader/src" type="src">
        <files mask="bl_app_crc_check.c"/>
        <files mask="bl_command.c"/>
        <files mask="bl_context.c"/>
        <files mask="bl_exception_handler.c"/>
        <files mask="bl_main.c"/>
        <files mask="bl_misc.c"/>
        <files mask="bl_shutdown_cleanup.c"/>
        <files mask="bl_tree_root.c"/>
        <files mask="bl_user_entry.c"/>
      </source>
      <source path="middleware/mcu-boot/src/crc" target_path="source/crc" type="c_include">
        <files mask="crc16.h"/>
        <files mask="crc32.h"/>
      </source>
      <source path="middleware/mcu-boot/src/crc/src" target_path="source/crc" type="src">
        <files mask="crc16.c"/>
        <files mask="crc32.c"/>
      </source>
      <source path="middleware/mcu-boot/src/include" target_path="source/include" type="c_include">
        <files mask="bootloader_common.h"/>
      </source>
      <source path="middleware/mcu-boot/src/memory" target_path="source/memory" type="c_include">
        <files mask="memory.h"/>
      </source>
      <source path="middleware/mcu-boot/src/memory/src" target_path="source/memory/src" type="src">
        <files mask="device_memory.c"/>
        <files mask="memory.c"/>
        <files mask="normal_memory.c"/>
      </source>
      <source path="middleware/mcu-boot/src/memory/src" target_path="source/memory/src" type="c_include">
        <files mask="device_memory.h"/>
        <files mask="normal_memory.h"/>
        <files mask="pattern_fill.h"/>
        <files mask="sram_init.h"/>
      </source>
      <source toolchain="iar mdk" path="middleware/mcu-boot/src/memory/src" target_path="source/memory/src" type="asm_include">
        <files mask="pattern_fill.s"/>
      </source>
      <source toolchain="mcuxpresso" path="middleware/mcu-boot/src/memory/src" target_path="source/memory/src" type="asm_include">
        <files mask="pattern_fill_gcc.S"/>
      </source>
      <source path="middleware/mcu-boot/src/packet" target_path="source/packet" type="c_include">
        <files mask="command_packet.h"/>
        <files mask="serial_packet.h"/>
      </source>
      <source path="middleware/mcu-boot/src/packet/src" target_path="source/packet/src" type="src">
        <files mask="serial_packet.c"/>
      </source>
      <source path="middleware/mcu-boot/src/property" target_path="source/property" type="c_include">
        <files mask="property.h"/>
      </source>
      <source path="middleware/mcu-boot/src/sbloader" target_path="source/sbloader" type="c_include">
        <files mask="sb_file_format.h"/>
        <files mask="sbloader.h"/>
      </source>
      <source path="middleware/mcu-boot/src/sbloader/src" target_path="source/sbloader/src" type="src">
        <files mask="sbloader.c"/>
      </source>
      <source path="middleware/mcu-boot/src/startup" target_path="startup" type="c_include">
        <files mask="ar_asm_macros.h"/>
      </source>
      <source path="middleware/mcu-boot/src/utilities" target_path="source/utilities" type="c_include">
        <files mask="fsl_assert.h"/>
        <files mask="fsl_rtos_abstraction.h"/>
        <files mask="vector_table_info.h"/>
      </source>
      <source path="middleware/mcu-boot/src/utilities/src" target_path="source/utilities/src" type="src">
        <files mask="fsl_assert.c"/>
        <files mask="fsl_rtos_abstraction.c"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.bootsources_imxrt.MIMXRT1064" name="MCUBOOT_imxrt_sources" brief="Bootloader sources for i.MXRT devices" version="2.7.0" devices="MIMXRT1064xxxxA" user_visible="false" type="middleware">
      <source path="middleware/mcu-boot/src/bootloader" target_path="source/bootloader" type="c_include">
        <files mask="bl_keyblob.h"/>
        <files mask="bl_nor_encrypt.h"/>
      </source>
      <source path="middleware/mcu-boot/src/bootloader/src" target_path="source/bootloader/src" type="src">
        <files mask="bl_keyblob.c"/>
        <files mask="bl_keyblob_dcp.c"/>
        <files mask="bl_nor_encrypt_bee.c"/>
        <files mask="lpuart_peripheral_interface.c"/>
        <files mask="usb_hid_msc_peripheral_interface.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/dcp" target_path="source/drivers/dcp" type="src">
        <files mask="fsl_dcp.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/dcp" target_path="source/drivers/dcp" type="c_include">
        <files mask="fsl_dcp.h"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/igpio" target_path="source/drivers/igpio" type="src">
        <files mask="fsl_gpio.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/igpio" target_path="source/drivers/igpio" type="c_include">
        <files mask="fsl_gpio.h"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/lpuart" target_path="source/drivers/lpuart" type="src">
        <files mask="fsl_lpuart.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/lpuart" target_path="source/drivers/lpuart" type="c_include">
        <files mask="fsl_lpuart.h"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/port" target_path="source/drivers/port" type="c_include">
        <files mask="fsl_port.h"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/smc" target_path="source/drivers" type="c_include">
        <files mask="smc.h"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/trng" target_path="source/drivers/trng" type="src">
        <files mask="fsl_trng.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/trng" target_path="source/drivers/trng" type="c_include">
        <files mask="fsl_trng.h"/>
      </source>
      <source path="middleware/mcu-boot/src/memory/src" target_path="source/memory/src" type="src">
        <files mask="flexspi_nor_memory.c"/>
        <files mask="mmc_memory.c"/>
        <files mask="sd_memory.c"/>
        <files mask="semc_nand_memory.c"/>
        <files mask="semc_nor_memory.c"/>
        <files mask="spi_nor_eeprom_memory.c"/>
        <files mask="spinand_memory.c"/>
      </source>
      <source path="middleware/mcu-boot/src/memory/src" target_path="source/memory/src" type="c_include">
        <files mask="flexspi_nor_memory.h"/>
        <files mask="mmc_memory.h"/>
        <files mask="sd_memory.h"/>
        <files mask="semc_nand_memory.h"/>
        <files mask="semc_nor_memory.h"/>
        <files mask="spi_nor_eeprom_memory.h"/>
        <files mask="spinand_memory.h"/>
      </source>
      <source path="middleware/mcu-boot/src/property/src" target_path="source/property/src" type="src">
        <files mask="property_imx.c"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.bootsources_imxrt1015.MIMXRT1064" name="MCUBOOT_imxrt_sources" brief="Bootloader sources for i.MXRT1015 devices" version="2.7.0" devices="MIMXRT1064xxxxA" user_visible="false" type="middleware">
      <source path="middleware/mcu-boot/src/bootloader" target_path="source/bootloader" type="c_include">
        <files mask="bl_keyblob.h"/>
        <files mask="bl_nor_encrypt.h"/>
      </source>
      <source path="middleware/mcu-boot/src/bootloader/src" target_path="source/bootloader/src" type="src">
        <files mask="bl_keyblob.c"/>
        <files mask="bl_keyblob_dcp.c"/>
        <files mask="bl_nor_encrypt_bee.c"/>
        <files mask="lpuart_peripheral_interface.c"/>
        <files mask="usb_hid_msc_peripheral_interface.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/dcp" target_path="source/drivers/dcp" type="src">
        <files mask="fsl_dcp.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/dcp" target_path="source/drivers/dcp" type="c_include">
        <files mask="fsl_dcp.h"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/igpio" target_path="source/drivers/igpio" type="src">
        <files mask="fsl_gpio.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/igpio" target_path="source/drivers/igpio" type="c_include">
        <files mask="fsl_gpio.h"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/lpuart" target_path="source/drivers/lpuart" type="src">
        <files mask="fsl_lpuart.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/lpuart" target_path="source/drivers/lpuart" type="c_include">
        <files mask="fsl_lpuart.h"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/port" target_path="source/drivers/port" type="c_include">
        <files mask="fsl_port.h"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/smc" target_path="source/drivers" type="c_include">
        <files mask="smc.h"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/trng" target_path="source/drivers/trng" type="src">
        <files mask="fsl_trng.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/trng" target_path="source/drivers/trng" type="c_include">
        <files mask="fsl_trng.h"/>
      </source>
      <source path="middleware/mcu-boot/src/memory/src" target_path="source/memory/src" type="src">
        <files mask="flexspi_nor_memory.c"/>
        <files mask="spi_nor_eeprom_memory.c"/>
      </source>
      <source path="middleware/mcu-boot/src/memory/src" target_path="source/memory/src" type="c_include">
        <files mask="flexspi_nor_memory.h"/>
        <files mask="spi_nor_eeprom_memory.h"/>
      </source>
      <source path="middleware/mcu-boot/src/property/src" target_path="source/property/src" type="src">
        <files mask="property_imx.c"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.drv_flexspi_nand.MIMXRT1064" name="MCUBOOT_flexspi_nand" brief="MCUBOOT flexspi nand driver" version="1.0.0" devices="MIMXRT1064xxxxA" user_visible="false" type="middleware">
      <source path="middleware/mcu-boot/src/drivers/flexspi" target_path="source/drivers/flexspi" type="src">
        <files mask="fsl_flexspi.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/flexspi" target_path="source/drivers/flexspi" type="c_include">
        <files mask="fsl_flexspi.h"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/flexspi_nand" target_path="source/drivers/flexspi_nand" type="src">
        <files mask="flexspi_nand_flash.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/flexspi_nand" target_path="source/drivers/flexspi_nand" type="c_include">
        <files mask="flexspi_nand_flash.h"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.drv_flexspi_nor.MIMXRT1064" name="MCUBOOT_flexspi_nor" brief="MCUBOOT flexspi nor driver" version="1.0.0" devices="MIMXRT1064xxxxA" user_visible="false" type="middleware">
      <source path="middleware/mcu-boot/src/drivers/flexspi" target_path="source/drivers/flexspi" type="src">
        <files mask="fsl_flexspi.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/flexspi" target_path="source/drivers/flexspi" type="c_include">
        <files mask="fsl_flexspi.h"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/flexspi_nor" target_path="source/drivers/flexspi_nor" type="src">
        <files mask="flexspi_nor_flash.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/flexspi_nor" target_path="source/drivers/flexspi_nor" type="c_include">
        <files mask="flexspi_nor_flash.h"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.drv_microseconds.MIMXRT1064" name="MCUBOOT_microseconds_sysclk" brief="MCUBOOT microseconds sysclk" version="1.0.0" devices="MIMXRT1064xxxxA" user_visible="false" type="middleware">
      <source path="middleware/mcu-boot/src/drivers/microseconds" target_path="source/drivers/microseconds" type="c_include">
        <files mask="microseconds.h"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/microseconds/src" target_path="source/drivers/microseconds" type="src">
        <files mask="microseconds_sysclk.c"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.drv_microseconds_pit.MIMXRT1064" name="MCUBOOT_microseconds_pit" brief="MCUBOOT microseconds pit" version="1.0.0" devices="MIMXRT1064xxxxA" user_visible="false" type="middleware">
      <source path="middleware/mcu-boot/src/drivers/microseconds" target_path="source/drivers/microseconds" type="c_include">
        <files mask="microseconds.h"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/microseconds/src" target_path="source/drivers/microseconds" type="src">
        <files mask="microseconds_pit.c"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.drv_ocotp.MIMXRT1064" name="MCUBOOT_ocotp" brief="MCUBOOT ocotp driver" version="1.0.0" devices="MIMXRT1064xxxxA" user_visible="false" type="middleware">
      <source path="middleware/mcu-boot/src/drivers/ocotp" target_path="source/drivers/ocotp" type="src">
        <files mask="fsl_ocotp.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/ocotp" target_path="source/drivers/ocotp" type="c_include">
        <files mask="fsl_ocotp.h"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.drv_sdmmc.MIMXRT1064" name="MCUBOOT_sdmmc" brief="MCUBOOT sdmmc driver" version="1.0.0" devices="MIMXRT1064xxxxA" user_visible="false" type="middleware">
      <source path="middleware/mcu-boot/src/drivers/gpio" target_path="source/drivers/gpio" type="c_include">
        <files mask="fsl_gpio.h"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/sdmmc/inc" target_path="source/drivers/sdmmc" type="c_include">
        <files mask="fsl_card.h"/>
        <files mask="fsl_host.h"/>
        <files mask="fsl_sdmmc.h"/>
        <files mask="fsl_specification.h"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/sdmmc/port/usdhc/polling" target_path="source/drivers/sdmmc" type="src">
        <files mask="fsl_host.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/sdmmc/src" target_path="source/drivers/sdmmc" type="src">
        <files mask="fsl_mmc.c"/>
        <files mask="fsl_sd.c"/>
        <files mask="fsl_sdmmc.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/usdhc" target_path="source/drivers/usdhc" type="src">
        <files mask="fsl_usdhc.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/usdhc" target_path="source/drivers/usdhc" type="c_include">
        <files mask="fsl_usdhc.h"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.drv_semc_nand.MIMXRT1064" name="MCUBOOT_semc_nand" brief="MCUBOOT semc nand driver" version="1.0.0" devices="MIMXRT1064xxxxA" user_visible="false" type="middleware">
      <source path="middleware/mcu-boot/src/drivers/nand_ecc" target_path="source/drivers/nand_ecc" type="src">
        <files mask="nand_ecc.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/nand_ecc" target_path="source/drivers/nand_ecc" type="c_include">
        <files mask="nand_ecc.h"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/semc" target_path="source/drivers/semc" type="src">
        <files mask="fsl_semc.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/semc" target_path="source/drivers/semc" type="c_include">
        <files mask="fsl_semc.h"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/semc_nand" target_path="source/drivers/semc_nand" type="src">
        <files mask="semc_nand_flash.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/semc_nand" target_path="source/drivers/semc_nand" type="c_include">
        <files mask="semc_nand_flash.h"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.drv_semc_nor.MIMXRT1064" name="MCUBOOT_semc_nor" brief="MCUBOOT semc nor driver" version="1.0.0" devices="MIMXRT1064xxxxA" user_visible="false" type="middleware">
      <source path="middleware/mcu-boot/src/drivers/semc" target_path="source/drivers/semc" type="src">
        <files mask="fsl_semc.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/semc" target_path="source/drivers/semc" type="c_include">
        <files mask="fsl_semc.h"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/semc_nor" target_path="source/drivers/semc_nor" type="src">
        <files mask="semc_nor_flash.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/semc_nor" target_path="source/drivers/semc_nor" type="c_include">
        <files mask="semc_nor_flash.h"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.drv_serial_nor_eeprom.MIMXRT1064" name="MCUBOOT_serial_nor_eeprom" brief="MCUBOOT serial nor eeprom driver" version="1.0.0" devices="MIMXRT1064xxxxA" user_visible="false" type="middleware">
      <source path="middleware/mcu-boot/src/drivers/lpspi" target_path="source/drivers/lpspi" type="src">
        <files mask="fsl_lpspi.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/lpspi" target_path="source/drivers/lpspi" type="c_include">
        <files mask="fsl_lpspi.h"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/serial_nor_eeprom" target_path="source/drivers/serial_nor_eeprom" type="src">
        <files mask="serial_nor_eeprom.c"/>
      </source>
      <source path="middleware/mcu-boot/src/drivers/serial_nor_eeprom" target_path="source/drivers/serial_nor_eeprom" type="c_include">
        <files mask="serial_nor_eeprom.h"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.elftosb.MIMXRT1064" name="elftosb" brief="mcu-boot elftosb source and executables" version="2.7.0" devices="MIMXRT1064xxxxA" user_visible="false" type="other">
      <source exclude="true" path="middleware/mcu-boot/bin/Tools/elftosb/win" target_path="middleware/mcu-boot" type="other">
        <files mask="elftosb.exe"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/doc" target_path="middleware/mcu-boot" type="doc">
        <files mask="elftosb User's Guide.pdf"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/common" target_path="middleware/mcu-boot" type="c_include">
        <files mask="AESCounter.h"/>
        <files mask="AESKey.h"/>
        <files mask="Blob.h"/>
        <files mask="BootImage.h"/>
        <files mask="DataSource.h"/>
        <files mask="DataSourceImager.h"/>
        <files mask="DataTarget.h"/>
        <files mask="ELF.h"/>
        <files mask="ELFSourceFile.h"/>
        <files mask="EncoreBootImage.h"/>
        <files mask="EncoreBootImageReader.h"/>
        <files mask="EndianUtilities.h"/>
        <files mask="EvalContext.h"/>
        <files mask="ExcludesListMatcher.h"/>
        <files mask="GHSSecInfo.h"/>
        <files mask="GlobMatcher.h"/>
        <files mask="HexValues.h"/>
        <files mask="IVTDataSource.h"/>
        <files mask="Keyblob.h"/>
        <files mask="KeyblobEntry.h"/>
        <files mask="Logging.h"/>
        <files mask="Operation.h"/>
        <files mask="OptionContext.h"/>
        <files mask="OptionDictionary.h"/>
        <files mask="OutputSection.h"/>
        <files mask="Random.h"/>
        <files mask="RijndaelCBCMAC.h"/>
        <files mask="RijndaelCTR.h"/>
        <files mask="SB2Image.h"/>
        <files mask="SHA1.h"/>
        <files mask="SRecordSourceFile.h"/>
        <files mask="SearchPath.h"/>
        <files mask="SourceFile.h"/>
        <files mask="StELFFile.h"/>
        <files mask="StExecutableImage.h"/>
        <files mask="StSRecordFile.h"/>
        <files mask="StringMatcher.h"/>
        <files mask="Value.h"/>
        <files mask="Version.h"/>
        <files mask="aes128_key_wrap_unwrap.h"/>
        <files mask="crc.h"/>
        <files mask="format_string.h"/>
        <files mask="iMXImage.h"/>
        <files mask="int_size.h"/>
        <files mask="options.h"/>
        <files mask="rijndael.h"/>
        <files mask="smart_ptr.h"/>
        <files mask="stdafx.h"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/common" target_path="middleware/mcu-boot" type="src">
        <files mask="AESKey.cpp"/>
        <files mask="Blob.cpp"/>
        <files mask="DataSource.cpp"/>
        <files mask="DataSourceImager.cpp"/>
        <files mask="DataTarget.cpp"/>
        <files mask="ELFSourceFile.cpp"/>
        <files mask="EncoreBootImage.cpp"/>
        <files mask="EncoreBootImageReader.cpp"/>
        <files mask="EvalContext.cpp"/>
        <files mask="ExcludesListMatcher.cpp"/>
        <files mask="GHSSecInfo.cpp"/>
        <files mask="GlobMatcher.cpp"/>
        <files mask="HexValues.cpp"/>
        <files mask="IVTDataSource.cpp"/>
        <files mask="Keyblob.cpp"/>
        <files mask="Logging.cpp"/>
        <files mask="Operation.cpp"/>
        <files mask="OptionDictionary.cpp"/>
        <files mask="OutputSection.cpp"/>
        <files mask="Random.cpp"/>
        <files mask="RijndaelCBCMAC.cpp"/>
        <files mask="RijndaelCTR.cpp"/>
        <files mask="SB2Image.cpp"/>
        <files mask="SHA1.cpp"/>
        <files mask="SRecordSourceFile.cpp"/>
        <files mask="SearchPath.cpp"/>
        <files mask="SourceFile.cpp"/>
        <files mask="StELFFile.cpp"/>
        <files mask="StExecutableImage.cpp"/>
        <files mask="StSRecordFile.cpp"/>
        <files mask="Value.cpp"/>
        <files mask="Version.cpp"/>
        <files mask="aes128_key_wrap_unwrap.c"/>
        <files mask="bytes_aes.c"/>
        <files mask="crc.cpp"/>
        <files mask="format_string.cpp"/>
        <files mask="iMXImage.cpp"/>
        <files mask="options.cpp"/>
        <files mask="rijndael.cpp"/>
        <files mask="stdafx.cpp"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/elftosb2" target_path="middleware/mcu-boot" type="src">
        <files mask="BootImageGenerator.cpp"/>
        <files mask="ConversionController.cpp"/>
        <files mask="ElftosbAST.cpp"/>
        <files mask="ElftosbLexer.cpp"/>
        <files mask="EncoreBootImageGenerator.cpp"/>
        <files mask="SB2ImageGenerator.cpp"/>
        <files mask="elftosb.cpp"/>
        <files mask="elftosb_lexer.cpp"/>
        <files mask="elftosb_parser.tab.cpp"/>
        <files mask="iMXImageGenerator.cpp"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/elftosb2" target_path="middleware/mcu-boot" type="c_include">
        <files mask="BootImageGenerator.h"/>
        <files mask="ConversionController.h"/>
        <files mask="ElftosbAST.h"/>
        <files mask="ElftosbErrors.h"/>
        <files mask="ElftosbLexer.h"/>
        <files mask="EncoreBootImageGenerator.h"/>
        <files mask="FlexLexer.h"/>
        <files mask="SB2ImageGenerator.h"/>
        <files mask="iMXImageGenerator.h"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/elftosb2" target_path="middleware/mcu-boot" type="other">
        <files mask="elftosb2.vcproj"/>
        <files mask="elftosb2.vcxproj"/>
        <files mask="elftosb2.vcxproj.filters"/>
        <files mask="elftosb_lexer.l"/>
        <files mask="elftosb_parser.tab.hpp"/>
        <files mask="elftosb_parser.y"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb" target_path="middleware/mcu-boot" type="other">
        <files mask="elftosb_all.sln"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/encryptgpk" target_path="middleware/mcu-boot" type="src">
        <files mask="encryptgpk.cpp"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/encryptgpk" target_path="middleware/mcu-boot" type="other">
        <files mask="encryptgpk.vcproj"/>
        <files mask="encryptgpk.vcxproj"/>
        <files mask="encryptgpk.vcxproj.filters"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/keygen" target_path="middleware/mcu-boot" type="src">
        <files mask="keygen.cpp"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/keygen" target_path="middleware/mcu-boot" type="other">
        <files mask="keygen.vcproj"/>
        <files mask="keygen.vcxproj"/>
        <files mask="keygen.vcxproj.filters"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls" target_path="middleware/mcu-boot" type="doc">
        <files mask="CMakeLists.txt"/>
        <files mask="apache-2.0.txt"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/configs" target_path="middleware/mcu-boot" type="doc">
        <files mask="README.txt"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/configs" target_path="middleware/mcu-boot" type="c_include">
        <files mask="config-ccm-psk-tls1_2.h"/>
        <files mask="config-mini-tls1_1.h"/>
        <files mask="config-picocoin.h"/>
        <files mask="config-suite-b.h"/>
        <files mask="config-thread.h"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/include" target_path="middleware/mcu-boot" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/include/mbedtls" target_path="middleware/mcu-boot" type="c_include">
        <files mask="aes.h"/>
        <files mask="aesni.h"/>
        <files mask="arc4.h"/>
        <files mask="asn1.h"/>
        <files mask="asn1write.h"/>
        <files mask="base64.h"/>
        <files mask="bignum.h"/>
        <files mask="blowfish.h"/>
        <files mask="bn_mul.h"/>
        <files mask="camellia.h"/>
        <files mask="ccm.h"/>
        <files mask="certs.h"/>
        <files mask="check_config.h"/>
        <files mask="cipher.h"/>
        <files mask="cipher_internal.h"/>
        <files mask="compat-1.3.h"/>
        <files mask="config.h"/>
        <files mask="ctr_drbg.h"/>
        <files mask="debug.h"/>
        <files mask="des.h"/>
        <files mask="dhm.h"/>
        <files mask="ecdh.h"/>
        <files mask="ecdsa.h"/>
        <files mask="ecjpake.h"/>
        <files mask="ecp.h"/>
        <files mask="entropy.h"/>
        <files mask="entropy_poll.h"/>
        <files mask="error.h"/>
        <files mask="gcm.h"/>
        <files mask="havege.h"/>
        <files mask="hmac_drbg.h"/>
        <files mask="md.h"/>
        <files mask="md2.h"/>
        <files mask="md4.h"/>
        <files mask="md5.h"/>
        <files mask="md_internal.h"/>
        <files mask="memory_buffer_alloc.h"/>
        <files mask="net.h"/>
        <files mask="oid.h"/>
        <files mask="padlock.h"/>
        <files mask="pem.h"/>
        <files mask="pk.h"/>
        <files mask="pk_internal.h"/>
        <files mask="pkcs11.h"/>
        <files mask="pkcs12.h"/>
        <files mask="pkcs5.h"/>
        <files mask="platform.h"/>
        <files mask="ripemd160.h"/>
        <files mask="rsa.h"/>
        <files mask="sha1.h"/>
        <files mask="sha256.h"/>
        <files mask="sha512.h"/>
        <files mask="ssl.h"/>
        <files mask="ssl_cache.h"/>
        <files mask="ssl_ciphersuites.h"/>
        <files mask="ssl_cookie.h"/>
        <files mask="ssl_internal.h"/>
        <files mask="ssl_ticket.h"/>
        <files mask="threading.h"/>
        <files mask="timing.h"/>
        <files mask="version.h"/>
        <files mask="x509.h"/>
        <files mask="x509_crl.h"/>
        <files mask="x509_crt.h"/>
        <files mask="x509_csr.h"/>
        <files mask="xtea.h"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/library" target_path="middleware/mcu-boot" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/library" target_path="middleware/mcu-boot" type="src">
        <files mask="aes.c"/>
        <files mask="aesni.c"/>
        <files mask="arc4.c"/>
        <files mask="asn1parse.c"/>
        <files mask="asn1write.c"/>
        <files mask="base64.c"/>
        <files mask="bignum.c"/>
        <files mask="blowfish.c"/>
        <files mask="camellia.c"/>
        <files mask="ccm.c"/>
        <files mask="certs.c"/>
        <files mask="cipher.c"/>
        <files mask="cipher_wrap.c"/>
        <files mask="ctr_drbg.c"/>
        <files mask="debug.c"/>
        <files mask="des.c"/>
        <files mask="dhm.c"/>
        <files mask="ecdh.c"/>
        <files mask="ecdsa.c"/>
        <files mask="ecjpake.c"/>
        <files mask="ecp.c"/>
        <files mask="ecp_curves.c"/>
        <files mask="entropy.c"/>
        <files mask="entropy_poll.c"/>
        <files mask="error.c"/>
        <files mask="gcm.c"/>
        <files mask="havege.c"/>
        <files mask="hmac_drbg.c"/>
        <files mask="md.c"/>
        <files mask="md2.c"/>
        <files mask="md4.c"/>
        <files mask="md5.c"/>
        <files mask="md_wrap.c"/>
        <files mask="memory_buffer_alloc.c"/>
        <files mask="net.c"/>
        <files mask="oid.c"/>
        <files mask="padlock.c"/>
        <files mask="pem.c"/>
        <files mask="pk.c"/>
        <files mask="pk_wrap.c"/>
        <files mask="pkcs11.c"/>
        <files mask="pkcs12.c"/>
        <files mask="pkcs5.c"/>
        <files mask="pkparse.c"/>
        <files mask="pkwrite.c"/>
        <files mask="platform.c"/>
        <files mask="ripemd160.c"/>
        <files mask="rsa.c"/>
        <files mask="sha1.c"/>
        <files mask="sha256.c"/>
        <files mask="sha512.c"/>
        <files mask="ssl_cache.c"/>
        <files mask="ssl_ciphersuites.c"/>
        <files mask="ssl_cli.c"/>
        <files mask="ssl_cookie.c"/>
        <files mask="ssl_srv.c"/>
        <files mask="ssl_ticket.c"/>
        <files mask="ssl_tls.c"/>
        <files mask="threading.c"/>
        <files mask="timing.c"/>
        <files mask="version.c"/>
        <files mask="version_features.c"/>
        <files mask="x509.c"/>
        <files mask="x509_create.c"/>
        <files mask="x509_crl.c"/>
        <files mask="x509_crt.c"/>
        <files mask="x509_csr.c"/>
        <files mask="x509write_crt.c"/>
        <files mask="x509write_csr.c"/>
        <files mask="xtea.c"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/programs" target_path="middleware/mcu-boot" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/programs/aes" target_path="middleware/mcu-boot" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/programs/aes" target_path="middleware/mcu-boot" type="src">
        <files mask="aescrypt2.c"/>
        <files mask="crypt_and_hash.c"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/programs/hash" target_path="middleware/mcu-boot" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/programs/hash" target_path="middleware/mcu-boot" type="src">
        <files mask="generic_sum.c"/>
        <files mask="hello.c"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/programs/pkey" target_path="middleware/mcu-boot" type="doc">
        <files mask="CMakeLists.txt"/>
        <files mask="dh_prime.txt"/>
        <files mask="rsa_priv.txt"/>
        <files mask="rsa_pub.txt"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/programs/pkey" target_path="middleware/mcu-boot" type="src">
        <files mask="dh_client.c"/>
        <files mask="dh_genprime.c"/>
        <files mask="dh_server.c"/>
        <files mask="ecdh_curve25519.c"/>
        <files mask="ecdsa.c"/>
        <files mask="gen_key.c"/>
        <files mask="key_app.c"/>
        <files mask="key_app_writer.c"/>
        <files mask="mpi_demo.c"/>
        <files mask="pk_decrypt.c"/>
        <files mask="pk_encrypt.c"/>
        <files mask="pk_sign.c"/>
        <files mask="pk_verify.c"/>
        <files mask="rsa_decrypt.c"/>
        <files mask="rsa_encrypt.c"/>
        <files mask="rsa_genkey.c"/>
        <files mask="rsa_sign.c"/>
        <files mask="rsa_sign_pss.c"/>
        <files mask="rsa_verify.c"/>
        <files mask="rsa_verify_pss.c"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/programs/random" target_path="middleware/mcu-boot" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/programs/random" target_path="middleware/mcu-boot" type="src">
        <files mask="gen_entropy.c"/>
        <files mask="gen_random_ctr_drbg.c"/>
        <files mask="gen_random_havege.c"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/programs/ssl" target_path="middleware/mcu-boot" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/programs/ssl" target_path="middleware/mcu-boot" type="src">
        <files mask="dtls_client.c"/>
        <files mask="dtls_server.c"/>
        <files mask="mini_client.c"/>
        <files mask="ssl_client1.c"/>
        <files mask="ssl_client2.c"/>
        <files mask="ssl_fork_server.c"/>
        <files mask="ssl_mail_client.c"/>
        <files mask="ssl_pthread_server.c"/>
        <files mask="ssl_server.c"/>
        <files mask="ssl_server2.c"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/programs/test" target_path="middleware/mcu-boot" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/programs/test" target_path="middleware/mcu-boot" type="src">
        <files mask="benchmark.c"/>
        <files mask="selftest.c"/>
        <files mask="ssl_cert_test.c"/>
        <files mask="udp_proxy.c"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/programs/util" target_path="middleware/mcu-boot" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/programs/util" target_path="middleware/mcu-boot" type="src">
        <files mask="pem2der.c"/>
        <files mask="strerror.c"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/programs" target_path="middleware/mcu-boot" type="src">
        <files mask="wince_main.c"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/programs/x509" target_path="middleware/mcu-boot" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/programs/x509" target_path="middleware/mcu-boot" type="src">
        <files mask="cert_app.c"/>
        <files mask="cert_req.c"/>
        <files mask="cert_write.c"/>
        <files mask="crl_app.c"/>
        <files mask="req_app.c"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/scripts" target_path="middleware/mcu-boot" type="script">
        <files mask="apidoc_full.sh"/>
        <files mask="bump_version.sh"/>
        <files mask="ecc-heap.sh"/>
        <files mask="footprint.sh"/>
        <files mask="memory.sh"/>
        <files mask="tmp_ignore_makefiles.sh"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/scripts" target_path="middleware/mcu-boot" type="other">
        <files mask="config.pl"/>
        <files mask="find-mem-leak.cocci"/>
        <files mask="generate_errors.pl"/>
        <files mask="generate_features.pl"/>
        <files mask="generate_visualc_files.pl"/>
        <files mask="malloc-init.pl"/>
        <files mask="massif_max.pl"/>
        <files mask="rename.pl"/>
        <files mask="rm-malloc-cast.cocci"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/scripts/data_files" target_path="middleware/mcu-boot" type="other">
        <files mask="error.fmt"/>
        <files mask="version_features.fmt"/>
        <files mask="vs2010-app-template.vcxproj"/>
        <files mask="vs2010-main-template.vcxproj"/>
        <files mask="vs2010-sln-template.sln"/>
        <files mask="vs6-app-template.dsp"/>
        <files mask="vs6-main-template.dsp"/>
        <files mask="vs6-workspace-template.dsw"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/scripts/data_files" target_path="middleware/mcu-boot" type="doc">
        <files mask="rename-1.3-2.0.txt"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/tests" target_path="middleware/mcu-boot" type="doc">
        <files mask="CMakeLists.txt"/>
        <files mask="Descriptions.txt"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/tests" target_path="middleware/mcu-boot" type="script">
        <files mask="compat.sh"/>
        <files mask="ssl-opt.sh"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/tests/data_files" target_path="middleware/mcu-boot" type="doc">
        <files mask="Readme-x509.txt"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/tests/data_files" target_path="middleware/mcu-boot" type="other">
        <files mask="bitstring-in-dn.pem"/>
        <files mask="cli2.key"/>
        <files mask="crl-ec-sha1.pem"/>
        <files mask="crl-ec-sha224.pem"/>
        <files mask="crl-ec-sha256.pem"/>
        <files mask="crl-ec-sha384.pem"/>
        <files mask="crl-ec-sha512.pem"/>
        <files mask="crl-future.pem"/>
        <files mask="crl-rsa-pss-sha1-badsign.pem"/>
        <files mask="crl-rsa-pss-sha1.pem"/>
        <files mask="crl-rsa-pss-sha224.pem"/>
        <files mask="crl-rsa-pss-sha256.pem"/>
        <files mask="crl-rsa-pss-sha384.pem"/>
        <files mask="crl-rsa-pss-sha512.pem"/>
        <files mask="crl.pem"/>
        <files mask="crl_cat_ec-rsa.pem"/>
        <files mask="crl_cat_ecfut-rsa.pem"/>
        <files mask="crl_cat_rsa-ec.pem"/>
        <files mask="crl_cat_rsabadpem-ec.pem"/>
        <files mask="crl_expired.pem"/>
        <files mask="crl_md2.pem"/>
        <files mask="crl_md4.pem"/>
        <files mask="crl_md5.pem"/>
        <files mask="crl_sha1.pem"/>
        <files mask="crl_sha224.pem"/>
        <files mask="crl_sha256.pem"/>
        <files mask="crl_sha384.pem"/>
        <files mask="crl_sha512.pem"/>
        <files mask="crt_cat_rsaexp-ec.pem"/>
        <files mask="dh.1000.pem"/>
        <files mask="dh.optlen.pem"/>
        <files mask="dhparams.pem"/>
        <files mask="ec_224_prv.pem"/>
        <files mask="ec_224_pub.pem"/>
        <files mask="ec_256_prv.pem"/>
        <files mask="ec_256_pub.pem"/>
        <files mask="ec_384_prv.pem"/>
        <files mask="ec_384_pub.pem"/>
        <files mask="ec_521_prv.pem"/>
        <files mask="ec_521_pub.pem"/>
        <files mask="ec_bp256_prv.pem"/>
        <files mask="ec_bp256_pub.pem"/>
        <files mask="ec_bp384_prv.pem"/>
        <files mask="ec_bp384_pub.pem"/>
        <files mask="ec_bp512_prv.pem"/>
        <files mask="ec_bp512_pub.pem"/>
        <files mask="ec_prv.noopt.der"/>
        <files mask="ec_prv.pk8.der"/>
        <files mask="ec_prv.pk8.pem"/>
        <files mask="ec_prv.pk8.pw.der"/>
        <files mask="ec_prv.pk8.pw.pem"/>
        <files mask="ec_prv.sec1.der"/>
        <files mask="ec_prv.sec1.pem"/>
        <files mask="ec_prv.sec1.pw.pem"/>
        <files mask="ec_prv.specdom.der"/>
        <files mask="ec_pub.der"/>
        <files mask="ec_pub.pem"/>
        <files mask="enco-ca-prstr.pem"/>
        <files mask="enco-cert-utf8str.pem"/>
        <files mask="format_gen.key"/>
        <files mask="format_gen.pub"/>
        <files mask="format_pkcs12.fmt"/>
        <files mask="format_rsa.key"/>
        <files mask="keyfile.3des"/>
        <files mask="keyfile.aes128"/>
        <files mask="keyfile.aes192"/>
        <files mask="keyfile.aes256"/>
        <files mask="keyfile.des"/>
        <files mask="passwd.psk"/>
        <files mask="pkcs8_pbe_sha1_2des.key"/>
        <files mask="pkcs8_pbe_sha1_3des.der"/>
        <files mask="pkcs8_pbe_sha1_3des.key"/>
        <files mask="pkcs8_pbe_sha1_rc4_128.key"/>
        <files mask="pkcs8_pbes2_pbkdf2_3des.der"/>
        <files mask="pkcs8_pbes2_pbkdf2_3des.key"/>
        <files mask="pkcs8_pbes2_pbkdf2_des.key"/>
        <files mask="rsa4096_prv.pem"/>
        <files mask="rsa4096_pub.pem"/>
        <files mask="server1.key"/>
        <files mask="server1.pubkey"/>
        <files mask="server1.req.cert_type"/>
        <files mask="server1.req.key_usage"/>
        <files mask="server1.req.ku-ct"/>
        <files mask="server1.req.md4"/>
        <files mask="server1.req.md5"/>
        <files mask="server1.req.sha1"/>
        <files mask="server1.req.sha224"/>
        <files mask="server1.req.sha256"/>
        <files mask="server1.req.sha384"/>
        <files mask="server1.req.sha512"/>
        <files mask="server10.key"/>
        <files mask="server2.key"/>
        <files mask="server3.key"/>
        <files mask="server4.key"/>
        <files mask="server5.key"/>
        <files mask="server5.req.ku.sha1"/>
        <files mask="server5.req.sha1"/>
        <files mask="server5.req.sha224"/>
        <files mask="server5.req.sha256"/>
        <files mask="server5.req.sha384"/>
        <files mask="server5.req.sha512"/>
        <files mask="server6.key"/>
        <files mask="server7.key"/>
        <files mask="server8.key"/>
        <files mask="server9.key"/>
        <files mask="server9.req.sha1"/>
        <files mask="server9.req.sha224"/>
        <files mask="server9.req.sha256"/>
        <files mask="server9.req.sha384"/>
        <files mask="server9.req.sha512"/>
        <files mask="test-ca.key"/>
        <files mask="test-ca2.key"/>
        <files mask="test-int-ca.key"/>
        <files mask="test-int-ca2.key"/>
        <files mask="test-int-ca3.key"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/tests/data_files" target_path="middleware/mcu-boot" type="binary">
        <files mask="cert_example_multi.crt"/>
        <files mask="cert_example_multi_nocn.crt"/>
        <files mask="cert_example_wildcard.crt"/>
        <files mask="cert_md2.crt"/>
        <files mask="cert_md4.crt"/>
        <files mask="cert_md5.crt"/>
        <files mask="cert_sha1.crt"/>
        <files mask="cert_sha224.crt"/>
        <files mask="cert_sha256.crt"/>
        <files mask="cert_sha384.crt"/>
        <files mask="cert_sha512.crt"/>
        <files mask="cert_v1_with_ext.crt"/>
        <files mask="cli2.crt"/>
        <files mask="keyUsage.decipherOnly.crt"/>
        <files mask="server1-nospace.crt"/>
        <files mask="server1-v1.crt"/>
        <files mask="server1.cert_type.crt"/>
        <files mask="server1.crt"/>
        <files mask="server1.ext_ku.crt"/>
        <files mask="server1.key_usage.crt"/>
        <files mask="server1.v1.crt"/>
        <files mask="server10_int3_int-ca2.crt"/>
        <files mask="server10_int3_int-ca2_ca.crt"/>
        <files mask="server1_ca.crt"/>
        <files mask="server2-badsign.crt"/>
        <files mask="server2-v1-chain.crt"/>
        <files mask="server2-v1.crt"/>
        <files mask="server2.crt"/>
        <files mask="server2.ku-ds.crt"/>
        <files mask="server2.ku-ds_ke.crt"/>
        <files mask="server2.ku-ka.crt"/>
        <files mask="server2.ku-ke.crt"/>
        <files mask="server3.crt"/>
        <files mask="server4.crt"/>
        <files mask="server5-badsign.crt"/>
        <files mask="server5-der0.crt"/>
        <files mask="server5-der1a.crt"/>
        <files mask="server5-der1b.crt"/>
        <files mask="server5-der2.crt"/>
        <files mask="server5-der4.crt"/>
        <files mask="server5-der8.crt"/>
        <files mask="server5-der9.crt"/>
        <files mask="server5-expired.crt"/>
        <files mask="server5-future.crt"/>
        <files mask="server5-selfsigned.crt"/>
        <files mask="server5-sha1.crt"/>
        <files mask="server5-sha224.crt"/>
        <files mask="server5-sha384.crt"/>
        <files mask="server5-sha512.crt"/>
        <files mask="server5.crt"/>
        <files mask="server5.eku-cli.crt"/>
        <files mask="server5.eku-cs.crt"/>
        <files mask="server5.eku-cs_any.crt"/>
        <files mask="server5.eku-srv.crt"/>
        <files mask="server5.eku-srv_cli.crt"/>
        <files mask="server5.ku-ds.crt"/>
        <files mask="server5.ku-ka.crt"/>
        <files mask="server5.ku-ke.crt"/>
        <files mask="server6-ss-child.crt"/>
        <files mask="server6.crt"/>
        <files mask="server7.crt"/>
        <files mask="server7_all_space.crt"/>
        <files mask="server7_int-ca.crt"/>
        <files mask="server7_int-ca_ca2.crt"/>
        <files mask="server7_pem_space.crt"/>
        <files mask="server7_trailing_space.crt"/>
        <files mask="server8.crt"/>
        <files mask="server8_int-ca2.crt"/>
        <files mask="server9-bad-mgfhash.crt"/>
        <files mask="server9-bad-saltlen.crt"/>
        <files mask="server9-badsign.crt"/>
        <files mask="server9-defaults.crt"/>
        <files mask="server9-sha224.crt"/>
        <files mask="server9-sha256.crt"/>
        <files mask="server9-sha384.crt"/>
        <files mask="server9-sha512.crt"/>
        <files mask="server9-with-ca.crt"/>
        <files mask="server9.crt"/>
        <files mask="test-ca-v1.crt"/>
        <files mask="test-ca.crt"/>
        <files mask="test-ca2.crt"/>
        <files mask="test-ca2.ku-crl.crt"/>
        <files mask="test-ca2.ku-crt.crt"/>
        <files mask="test-ca2.ku-crt_crl.crt"/>
        <files mask="test-ca2.ku-ds.crt"/>
        <files mask="test-ca2_cat-future-present.crt"/>
        <files mask="test-ca2_cat-past-present.crt"/>
        <files mask="test-ca2_cat-present-future.crt"/>
        <files mask="test-ca2_cat-present-past.crt"/>
        <files mask="test-ca_cat12.crt"/>
        <files mask="test-ca_cat21.crt"/>
        <files mask="test-int-ca.crt"/>
        <files mask="test-int-ca2.crt"/>
        <files mask="test-int-ca3.crt"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/tests/data_files/dir1" target_path="middleware/mcu-boot" type="binary">
        <files mask="test-ca.crt"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/tests/data_files/dir2" target_path="middleware/mcu-boot" type="binary">
        <files mask="test-ca.crt"/>
        <files mask="test-ca2.crt"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/tests/data_files/dir3" target_path="middleware/mcu-boot" type="binary">
        <files mask="test-ca.crt"/>
        <files mask="test-ca2.crt"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/tests/data_files/dir4" target_path="middleware/mcu-boot" type="binary">
        <files mask="cert11.crt"/>
        <files mask="cert12.crt"/>
        <files mask="cert13.crt"/>
        <files mask="cert14.crt"/>
        <files mask="cert21.crt"/>
        <files mask="cert22.crt"/>
        <files mask="cert23.crt"/>
        <files mask="cert31.crt"/>
        <files mask="cert32.crt"/>
        <files mask="cert33.crt"/>
        <files mask="cert34.crt"/>
        <files mask="cert41.crt"/>
        <files mask="cert42.crt"/>
        <files mask="cert43.crt"/>
        <files mask="cert44.crt"/>
        <files mask="cert45.crt"/>
        <files mask="cert51.crt"/>
        <files mask="cert52.crt"/>
        <files mask="cert53.crt"/>
        <files mask="cert54.crt"/>
        <files mask="cert61.crt"/>
        <files mask="cert62.crt"/>
        <files mask="cert63.crt"/>
        <files mask="cert71.crt"/>
        <files mask="cert72.crt"/>
        <files mask="cert73.crt"/>
        <files mask="cert74.crt"/>
        <files mask="cert81.crt"/>
        <files mask="cert82.crt"/>
        <files mask="cert83.crt"/>
        <files mask="cert91.crt"/>
        <files mask="cert92.crt"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/tests/scripts" target_path="middleware/mcu-boot" type="script">
        <files mask="all.sh"/>
        <files mask="basic-build-test.sh"/>
        <files mask="check-generated-files.sh"/>
        <files mask="check-names.sh"/>
        <files mask="doxygen.sh"/>
        <files mask="generate-afl-tests.sh"/>
        <files mask="list-identifiers.sh"/>
        <files mask="list-macros.sh"/>
        <files mask="list-symbols.sh"/>
        <files mask="travis-log-failure.sh"/>
        <files mask="yotta-build.sh"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/tests/scripts" target_path="middleware/mcu-boot" type="other">
        <files mask="check-doxy-blocks.pl"/>
        <files mask="curves.pl"/>
        <files mask="gen_ctr_drbg.pl"/>
        <files mask="gen_gcm_decrypt.pl"/>
        <files mask="gen_gcm_encrypt.pl"/>
        <files mask="gen_pkcs1_v21_sign_verify.pl"/>
        <files mask="generate_code.pl"/>
        <files mask="key-exchanges.pl"/>
        <files mask="list-enum-consts.pl"/>
        <files mask="recursion.pl"/>
        <files mask="run-test-suites.pl"/>
        <files mask="test-ref-configs.pl"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/tests/suites" target_path="middleware/mcu-boot" type="other">
        <files mask="helpers.function"/>
        <files mask="main_test.function"/>
        <files mask="test_suite_aes.cbc.data"/>
        <files mask="test_suite_aes.cfb.data"/>
        <files mask="test_suite_aes.ecb.data"/>
        <files mask="test_suite_aes.function"/>
        <files mask="test_suite_aes.rest.data"/>
        <files mask="test_suite_arc4.data"/>
        <files mask="test_suite_arc4.function"/>
        <files mask="test_suite_asn1write.data"/>
        <files mask="test_suite_asn1write.function"/>
        <files mask="test_suite_base64.data"/>
        <files mask="test_suite_base64.function"/>
        <files mask="test_suite_blowfish.data"/>
        <files mask="test_suite_blowfish.function"/>
        <files mask="test_suite_camellia.data"/>
        <files mask="test_suite_camellia.function"/>
        <files mask="test_suite_ccm.data"/>
        <files mask="test_suite_ccm.function"/>
        <files mask="test_suite_cipher.aes.data"/>
        <files mask="test_suite_cipher.arc4.data"/>
        <files mask="test_suite_cipher.blowfish.data"/>
        <files mask="test_suite_cipher.camellia.data"/>
        <files mask="test_suite_cipher.ccm.data"/>
        <files mask="test_suite_cipher.des.data"/>
        <files mask="test_suite_cipher.function"/>
        <files mask="test_suite_cipher.gcm.data"/>
        <files mask="test_suite_cipher.null.data"/>
        <files mask="test_suite_cipher.padding.data"/>
        <files mask="test_suite_ctr_drbg.data"/>
        <files mask="test_suite_ctr_drbg.function"/>
        <files mask="test_suite_debug.data"/>
        <files mask="test_suite_debug.function"/>
        <files mask="test_suite_des.data"/>
        <files mask="test_suite_des.function"/>
        <files mask="test_suite_dhm.data"/>
        <files mask="test_suite_dhm.function"/>
        <files mask="test_suite_ecdh.data"/>
        <files mask="test_suite_ecdh.function"/>
        <files mask="test_suite_ecdsa.data"/>
        <files mask="test_suite_ecdsa.function"/>
        <files mask="test_suite_ecjpake.data"/>
        <files mask="test_suite_ecjpake.function"/>
        <files mask="test_suite_ecp.data"/>
        <files mask="test_suite_ecp.function"/>
        <files mask="test_suite_entropy.data"/>
        <files mask="test_suite_entropy.function"/>
        <files mask="test_suite_error.data"/>
        <files mask="test_suite_error.function"/>
        <files mask="test_suite_gcm.aes128_de.data"/>
        <files mask="test_suite_gcm.aes128_en.data"/>
        <files mask="test_suite_gcm.aes192_de.data"/>
        <files mask="test_suite_gcm.aes192_en.data"/>
        <files mask="test_suite_gcm.aes256_de.data"/>
        <files mask="test_suite_gcm.aes256_en.data"/>
        <files mask="test_suite_gcm.camellia.data"/>
        <files mask="test_suite_gcm.function"/>
        <files mask="test_suite_hmac_drbg.function"/>
        <files mask="test_suite_hmac_drbg.misc.data"/>
        <files mask="test_suite_hmac_drbg.no_reseed.data"/>
        <files mask="test_suite_hmac_drbg.nopr.data"/>
        <files mask="test_suite_hmac_drbg.pr.data"/>
        <files mask="test_suite_md.data"/>
        <files mask="test_suite_md.function"/>
        <files mask="test_suite_mdx.data"/>
        <files mask="test_suite_mdx.function"/>
        <files mask="test_suite_memory_buffer_alloc.data"/>
        <files mask="test_suite_memory_buffer_alloc.function"/>
        <files mask="test_suite_mpi.data"/>
        <files mask="test_suite_mpi.function"/>
        <files mask="test_suite_pem.data"/>
        <files mask="test_suite_pem.function"/>
        <files mask="test_suite_pk.data"/>
        <files mask="test_suite_pk.function"/>
        <files mask="test_suite_pkcs1_v15.data"/>
        <files mask="test_suite_pkcs1_v15.function"/>
        <files mask="test_suite_pkcs1_v21.data"/>
        <files mask="test_suite_pkcs1_v21.function"/>
        <files mask="test_suite_pkcs5.data"/>
        <files mask="test_suite_pkcs5.function"/>
        <files mask="test_suite_pkparse.data"/>
        <files mask="test_suite_pkparse.function"/>
        <files mask="test_suite_pkwrite.data"/>
        <files mask="test_suite_pkwrite.function"/>
        <files mask="test_suite_rsa.data"/>
        <files mask="test_suite_rsa.function"/>
        <files mask="test_suite_shax.data"/>
        <files mask="test_suite_shax.function"/>
        <files mask="test_suite_ssl.data"/>
        <files mask="test_suite_ssl.function"/>
        <files mask="test_suite_version.data"/>
        <files mask="test_suite_version.function"/>
        <files mask="test_suite_x509parse.data"/>
        <files mask="test_suite_x509parse.function"/>
        <files mask="test_suite_x509write.data"/>
        <files mask="test_suite_x509write.function"/>
        <files mask="test_suite_xtea.data"/>
        <files mask="test_suite_xtea.function"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/mbedtls/visualc/VS2010" target_path="middleware/mcu-boot" type="other">
        <files mask="aescrypt2.vcxproj"/>
        <files mask="benchmark.vcxproj"/>
        <files mask="cert_app.vcxproj"/>
        <files mask="cert_req.vcxproj"/>
        <files mask="cert_write.vcxproj"/>
        <files mask="crl_app.vcxproj"/>
        <files mask="crypt_and_hash.vcxproj"/>
        <files mask="dh_client.vcxproj"/>
        <files mask="dh_genprime.vcxproj"/>
        <files mask="dh_server.vcxproj"/>
        <files mask="dtls_client.vcxproj"/>
        <files mask="dtls_server.vcxproj"/>
        <files mask="ecdsa.vcxproj"/>
        <files mask="gen_entropy.vcxproj"/>
        <files mask="gen_key.vcxproj"/>
        <files mask="gen_random_ctr_drbg.vcxproj"/>
        <files mask="gen_random_havege.vcxproj"/>
        <files mask="generic_sum.vcxproj"/>
        <files mask="hello.vcxproj"/>
        <files mask="key_app.vcxproj"/>
        <files mask="key_app_writer.vcxproj"/>
        <files mask="mbedTLS.sln"/>
        <files mask="mbedTLS.vcxproj"/>
        <files mask="md5sum.vcxproj"/>
        <files mask="mini_client.vcxproj"/>
        <files mask="mpi_demo.vcxproj"/>
        <files mask="pem2der.vcxproj"/>
        <files mask="pk_decrypt.vcxproj"/>
        <files mask="pk_encrypt.vcxproj"/>
        <files mask="pk_sign.vcxproj"/>
        <files mask="pk_verify.vcxproj"/>
        <files mask="req_app.vcxproj"/>
        <files mask="rsa_decrypt.vcxproj"/>
        <files mask="rsa_encrypt.vcxproj"/>
        <files mask="rsa_genkey.vcxproj"/>
        <files mask="rsa_sign.vcxproj"/>
        <files mask="rsa_sign_pss.vcxproj"/>
        <files mask="rsa_verify.vcxproj"/>
        <files mask="rsa_verify_pss.vcxproj"/>
        <files mask="selftest.vcxproj"/>
        <files mask="sha1sum.vcxproj"/>
        <files mask="sha2sum.vcxproj"/>
        <files mask="ssl_cert_test.vcxproj"/>
        <files mask="ssl_client1.vcxproj"/>
        <files mask="ssl_client2.vcxproj"/>
        <files mask="ssl_fork_server.vcxproj"/>
        <files mask="ssl_mail_client.vcxproj"/>
        <files mask="ssl_server.vcxproj"/>
        <files mask="ssl_server2.vcxproj"/>
        <files mask="strerror.vcxproj"/>
        <files mask="udp_proxy.vcxproj"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/sbtool" target_path="middleware/mcu-boot" type="src">
        <files mask="EncoreBootImageReader.cpp"/>
        <files mask="sbtool.cpp"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/sbtool" target_path="middleware/mcu-boot" type="c_include">
        <files mask="EncoreBootImageReader.h"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/sbtool" target_path="middleware/mcu-boot" type="other">
        <files mask="sbtool.vcproj"/>
        <files mask="sbtool.vcxproj"/>
        <files mask="sbtool.vcxproj.filters"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb" target_path="middleware/mcu-boot" type="c_include">
        <files mask="stdafx.h"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/elftosb/winsupport" target_path="middleware/mcu-boot" type="c_include">
        <files mask="unistd.h"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.imxrt1064_files.MIMXRT1064" name="imxrt1064_files" brief="imxrt1064 files" version="2.7.0" devices="MIMXRT1064xxxxA" user_visible="false" type="other">
      <source exclude="true" path="middleware/mcu-boot/doc" target_path="middleware/mcu-boot" type="doc">
        <files mask="i.MX RT1064 Flashloader v2.7.0 Release Notes.pdf"/>
        <files mask="i.MX RT1064 Manufacturing User's Guide.pdf"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.imxrt_files.MIMXRT1064" name="imxrt_files" brief="imxrt files" version="2.7.0" devices="MIMXRT1064xxxxA" user_visible="false" type="other">
      <source exclude="true" path="middleware/mcu-boot/bin/Tools/mfgtools-rel" target_path="middleware/mcu-boot" type="other">
        <files mask="MfgTool2.exe"/>
        <files mask="MfgToolLib.dll"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/bin/Tools/mfgtools-rel" target_path="middleware/mcu-boot" type="configuration">
        <files mask="UICfg.ini"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/bin/Tools/sdphost/win" target_path="middleware/mcu-boot" type="other">
        <files mask="sdphost.exe"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/doc" target_path="middleware/mcu-boot" type="doc">
        <files mask="MCU Flashloader Reference Manual.pdf"/>
        <files mask="sdphost User's Guide.pdf"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/sdphost" target_path="middleware/mcu-boot" type="other">
        <files mask="sdphost.sln"/>
      </source>
      <source path="middleware/mcu-boot/tools/tools/sdphost/sdphost" target_path="middleware/mcu-boot" type="src">
        <files mask="sdphost.cpp"/>
        <files mask="stdafx.cpp"/>
      </source>
      <source exclude="true" path="middleware/mcu-boot/tools/tools/sdphost/sdphost" target_path="middleware/mcu-boot" type="other">
        <files mask="sdphost.vcxproj"/>
        <files mask="sdphost.vcxproj.filters"/>
        <files mask="sdphost.vcxproj.user"/>
      </source>
      <source path="middleware/mcu-boot/tools/tools/sdphost/sdphost" target_path="middleware/mcu-boot" type="c_include">
        <files mask="stdafx.h"/>
        <files mask="targetver.h"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.src_bm_usb.MIMXRT1064" name="MCUBOOT_bm_usb_sources" brief="Bootloader bm usb sources" version="1.0.0" devices="MIMXRT1064xxxxA" user_visible="false" type="middleware">
      <source path="middleware/mcu-boot/src/bm_usb" target_path="source/usb/bm_composite" type="c_include">
        <files mask="bootloader_hid_report_ids.h"/>
        <files mask="composite.h"/>
        <files mask="fat_directory_entry.h"/>
        <files mask="hid_bootloader.h"/>
        <files mask="msc_disk.h"/>
        <files mask="usb_descriptor.h"/>
      </source>
      <source path="middleware/mcu-boot/src/bm_usb" target_path="source/usb/bm_composite" type="src">
        <files mask="composite.c"/>
        <files mask="hid_bootloader.c"/>
        <files mask="msc_disk.c"/>
        <files mask="usb_descriptor.c"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.src_startup.MIMXRT1064" name="MCUBOOT_startup_sources" brief="Bootloader startup sources" version="1.0.0" devices="MIMXRT1064xxxxA" user_visible="false" type="middleware">
      <source path="middleware/mcu-boot/src/include" target_path="source/include" type="c_include">
        <files mask="bootloader_core.h"/>
      </source>
      <source path="middleware/mcu-boot/src/startup" target_path="startup" type="src">
        <files mask="startup.c"/>
      </source>
    </component>
    <component id="middleware.sdmmc.common.MIMXRT1064" name="common" version="2.2.11" full_name="SDMMC common stack" devices="MIMXRT1064xxxxA" category="Memories/SDMMC Stack" user_visible="true" type="middleware">
      <source path="middleware/sdmmc/inc" target_path="sdmmc/inc" type="c_include">
        <files mask="fsl_sdmmc_spec.h"/>
      </source>
    </component>
    <component id="middleware.sdmmc.mmc.MIMXRT1064" name="mmc" version="2.2.11" full_name="SDMMC mmc stack" devices="MIMXRT1064xxxxA" dependency="middleware.sdmmc.common.MIMXRT1064" category="Memories/SDMMC Stack" user_visible="true" type="middleware">
      <source path="middleware/sdmmc/inc" target_path="sdmmc/inc" type="c_include">
        <files mask="fsl_mmc.h"/>
        <files mask="fsl_sdmmc_common.h"/>
        <files mask="fsl_sdmmc_host.h"/>
      </source>
      <source path="middleware/sdmmc/src" target_path="sdmmc/src" type="src">
        <files mask="fsl_mmc.c"/>
        <files mask="fsl_sdmmc_common.c"/>
      </source>
    </component>
    <component id="middleware.sdmmc.sd.MIMXRT1064" name="sd" version="2.2.11" full_name="SDMMC sd stack" devices="MIMXRT1064xxxxA" dependency="middleware.sdmmc.common.MIMXRT1064" category="Memories/SDMMC Stack" user_visible="true" type="middleware">
      <source path="middleware/sdmmc/inc" target_path="sdmmc/inc" type="c_include">
        <files mask="fsl_sd.h"/>
        <files mask="fsl_sdmmc_common.h"/>
        <files mask="fsl_sdmmc_host.h"/>
      </source>
      <source path="middleware/sdmmc/src" target_path="sdmmc/src" type="src">
        <files mask="fsl_sd.c"/>
        <files mask="fsl_sdmmc_common.c"/>
      </source>
    </component>
    <component id="middleware.sdmmc.sdio.MIMXRT1064" name="sdio" version="2.2.11" full_name="SDMMC sdio stack" devices="MIMXRT1064xxxxA" dependency="middleware.sdmmc.common.MIMXRT1064" category="Memories/SDMMC Stack" user_visible="true" type="middleware">
      <source path="middleware/sdmmc/inc" target_path="sdmmc/inc" type="c_include">
        <files mask="fsl_sdio.h"/>
        <files mask="fsl_sdmmc_common.h"/>
        <files mask="fsl_sdmmc_host.h"/>
      </source>
      <source path="middleware/sdmmc/src" target_path="sdmmc/src" type="src">
        <files mask="fsl_sdio.c"/>
        <files mask="fsl_sdmmc_common.c"/>
      </source>
    </component>
    <component id="middleware.sdmmc.usdhcadaptor.freertos.MIMXRT1064" name="adapter_freertos" version="2.2.11" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064 platform.drivers.usdhc.MIMXRT1064" category="Memories/SDMMC Stack" user_visible="true" type="middleware">
      <source path="middleware/sdmmc/port" target_path="sdmmc/port" type="c_include">
        <files mask="fsl_sdmmc_event.h"/>
      </source>
      <source path="middleware/sdmmc/port/usdhc/freertos" target_path="sdmmc/port" type="src">
        <files mask="fsl_sdmmc_event.c"/>
        <files mask="fsl_sdmmc_host.c"/>
      </source>
    </component>
    <component id="middleware.sdmmc.usdhcadaptor.interrupt.MIMXRT1064" name="adapter_interrupt" version="2.2.11" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064 platform.drivers.usdhc.MIMXRT1064" category="Memories/SDMMC Stack" user_visible="true" type="middleware">
      <source path="middleware/sdmmc/port" target_path="sdmmc/port" type="c_include">
        <files mask="fsl_sdmmc_event.h"/>
      </source>
      <source path="middleware/sdmmc/port/usdhc/interrupt" target_path="sdmmc/port" type="src">
        <files mask="fsl_sdmmc_event.c"/>
        <files mask="fsl_sdmmc_host.c"/>
      </source>
    </component>
    <component id="middleware.sdmmc.usdhcadaptor.polling.MIMXRT1064" name="adapter_polling" version="2.2.11" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064 platform.drivers.usdhc.MIMXRT1064" category="Memories/SDMMC Stack" user_visible="true" type="middleware">
      <source path="middleware/sdmmc/port" target_path="sdmmc/port" type="c_include">
        <files mask="fsl_sdmmc_event.h"/>
      </source>
      <source path="middleware/sdmmc/port/usdhc/polling" target_path="sdmmc/port" type="src">
        <files mask="fsl_sdmmc_event.c"/>
        <files mask="fsl_sdmmc_host.c"/>
      </source>
    </component>
    <component id="middleware.tcpip.lwip.MIMXRT1064" name="lwIP" brief="lwIP" version="2.1.2" devices="MIMXRT1064xxxxA" dependency="middleware.template_application.tcpip.lwip.MIMXRT1064" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware">
      <source path="middleware/lwip" target_path="lwip" type="doc">
        <files mask="CHANGELOG"/>
        <files mask="CMakeLists.txt"/>
        <files mask="COPYING"/>
        <files mask="ChangeLogKSDK.txt"/>
        <files mask="FEATURES"/>
        <files mask="FILES"/>
        <files mask="README"/>
        <files mask="UPGRADING"/>
      </source>
      <source path="middleware/lwip/doc" target_path="lwip/doc" type="doc">
        <files mask="FILES"/>
        <files mask="contrib.txt"/>
        <files mask="mdns.txt"/>
        <files mask="mqtt_client.txt"/>
        <files mask="ppp.txt"/>
        <files mask="savannah.txt"/>
      </source>
      <source exclude="true" path="middleware/lwip/doc" target_path="lwip/doc" type="doc">
        <files mask="NO_SYS_SampleCode.c"/>
        <files mask="ZeroCopyRx.c"/>
      </source>
      <source path="middleware/lwip/doc/doxygen" target_path="lwip/doc/doxygen" type="doc">
        <files mask="generate.bat"/>
        <files mask="generate.sh"/>
        <files mask="lwip.Doxyfile"/>
        <files mask="lwip.Doxyfile.cmake.in"/>
        <files mask="main_page.h"/>
      </source>
      <source path="middleware/lwip/doc/doxygen/output" target_path="lwip/doc/doxygen/output" type="doc">
        <files mask="index.html"/>
      </source>
      <source path="middleware/lwip/port/arch" target_path="lwip/port/arch" type="c_include">
        <files mask="cc.h"/>
        <files mask="perf.h"/>
        <files mask="sys_arch.h"/>
      </source>
      <source path="middleware/lwip/port" target_path="lwip/port" type="src">
        <files mask="sys_arch.c"/>
      </source>
      <source path="middleware/lwip/src" target_path="lwip/src" type="doc">
        <files mask="FILES"/>
      </source>
      <source path="middleware/lwip/src" target_path="lwip/src" type="other">
        <files mask="Filelists.cmake"/>
        <files mask="Filelists.mk"/>
      </source>
      <source path="middleware/lwip/src/api" target_path="lwip/src/api" type="src">
        <files mask="api_lib.c"/>
        <files mask="api_msg.c"/>
        <files mask="err.c"/>
        <files mask="if_api.c"/>
        <files mask="netbuf.c"/>
        <files mask="netdb.c"/>
        <files mask="netifapi.c"/>
        <files mask="sockets.c"/>
        <files mask="tcpip.c"/>
      </source>
      <source path="middleware/lwip/src/core" target_path="lwip/src/core" type="src">
        <files mask="altcp.c"/>
        <files mask="altcp_alloc.c"/>
        <files mask="altcp_tcp.c"/>
        <files mask="def.c"/>
        <files mask="dns.c"/>
        <files mask="inet_chksum.c"/>
        <files mask="init.c"/>
        <files mask="ip.c"/>
        <files mask="mem.c"/>
        <files mask="memp.c"/>
        <files mask="netif.c"/>
        <files mask="pbuf.c"/>
        <files mask="raw.c"/>
        <files mask="stats.c"/>
        <files mask="sys.c"/>
        <files mask="tcp.c"/>
        <files mask="tcp_in.c"/>
        <files mask="tcp_out.c"/>
        <files mask="timeouts.c"/>
        <files mask="udp.c"/>
      </source>
      <source path="middleware/lwip/src/core/ipv4" target_path="lwip/src/core/ipv4" type="src">
        <files mask="autoip.c"/>
        <files mask="dhcp.c"/>
        <files mask="etharp.c"/>
        <files mask="icmp.c"/>
        <files mask="igmp.c"/>
        <files mask="ip4.c"/>
        <files mask="ip4_addr.c"/>
        <files mask="ip4_frag.c"/>
      </source>
      <source path="middleware/lwip/src/core/ipv6" target_path="lwip/src/core/ipv6" type="src">
        <files mask="dhcp6.c"/>
        <files mask="ethip6.c"/>
        <files mask="icmp6.c"/>
        <files mask="inet6.c"/>
        <files mask="ip6.c"/>
        <files mask="ip6_addr.c"/>
        <files mask="ip6_frag.c"/>
        <files mask="mld6.c"/>
        <files mask="nd6.c"/>
      </source>
      <source path="middleware/lwip/src/include/compat/posix/arpa" target_path="lwip/src/include/compat/posix/arpa" type="c_include">
        <files mask="inet.h"/>
      </source>
      <source path="middleware/lwip/src/include/compat/posix/net" target_path="lwip/src/include/compat/posix/net" type="c_include">
        <files mask="if.h"/>
      </source>
      <source path="middleware/lwip/src/include/compat/posix" target_path="lwip/src/include/compat/posix" type="c_include">
        <files mask="netdb.h"/>
      </source>
      <source path="middleware/lwip/src/include/compat/posix/sys" target_path="lwip/src/include/compat/posix/sys" type="c_include">
        <files mask="socket.h"/>
      </source>
      <source path="middleware/lwip/src/include/compat/stdc" target_path="lwip/src/include/compat/stdc" type="c_include">
        <files mask="errno.h"/>
      </source>
      <source path="middleware/lwip/src/include/lwip" target_path="lwip/src/include/lwip" type="c_include">
        <files mask="altcp.h"/>
        <files mask="altcp_tcp.h"/>
        <files mask="altcp_tls.h"/>
        <files mask="api.h"/>
        <files mask="arch.h"/>
        <files mask="autoip.h"/>
        <files mask="debug.h"/>
        <files mask="def.h"/>
        <files mask="dhcp.h"/>
        <files mask="dhcp6.h"/>
        <files mask="dns.h"/>
        <files mask="err.h"/>
        <files mask="errno.h"/>
        <files mask="etharp.h"/>
        <files mask="ethip6.h"/>
        <files mask="icmp.h"/>
        <files mask="icmp6.h"/>
        <files mask="if_api.h"/>
        <files mask="igmp.h"/>
        <files mask="inet.h"/>
        <files mask="inet_chksum.h"/>
        <files mask="init.h"/>
        <files mask="ip.h"/>
        <files mask="ip4.h"/>
        <files mask="ip4_addr.h"/>
        <files mask="ip4_frag.h"/>
        <files mask="ip6.h"/>
        <files mask="ip6_addr.h"/>
        <files mask="ip6_frag.h"/>
        <files mask="ip6_zone.h"/>
        <files mask="ip_addr.h"/>
        <files mask="mem.h"/>
        <files mask="memp.h"/>
        <files mask="mld6.h"/>
        <files mask="nd6.h"/>
        <files mask="netbuf.h"/>
        <files mask="netdb.h"/>
        <files mask="netif.h"/>
        <files mask="netifapi.h"/>
        <files mask="opt.h"/>
        <files mask="pbuf.h"/>
        <files mask="raw.h"/>
        <files mask="sio.h"/>
        <files mask="snmp.h"/>
        <files mask="sockets.h"/>
        <files mask="stats.h"/>
        <files mask="sys.h"/>
        <files mask="tcp.h"/>
        <files mask="tcpbase.h"/>
        <files mask="tcpip.h"/>
        <files mask="timeouts.h"/>
        <files mask="udp.h"/>
      </source>
      <source path="middleware/lwip/src/include/lwip/priv" target_path="lwip/src/include/lwip/priv" type="c_include">
        <files mask="altcp_priv.h"/>
        <files mask="api_msg.h"/>
        <files mask="mem_priv.h"/>
        <files mask="memp_priv.h"/>
        <files mask="memp_std.h"/>
        <files mask="nd6_priv.h"/>
        <files mask="raw_priv.h"/>
        <files mask="sockets_priv.h"/>
        <files mask="tcp_priv.h"/>
        <files mask="tcpip_priv.h"/>
      </source>
      <source path="middleware/lwip/src/include/lwip/prot" target_path="lwip/src/include/lwip/prot" type="c_include">
        <files mask="autoip.h"/>
        <files mask="dhcp.h"/>
        <files mask="dhcp6.h"/>
        <files mask="dns.h"/>
        <files mask="etharp.h"/>
        <files mask="ethernet.h"/>
        <files mask="iana.h"/>
        <files mask="icmp.h"/>
        <files mask="icmp6.h"/>
        <files mask="ieee.h"/>
        <files mask="igmp.h"/>
        <files mask="ip.h"/>
        <files mask="ip4.h"/>
        <files mask="ip6.h"/>
        <files mask="mld6.h"/>
        <files mask="nd6.h"/>
        <files mask="tcp.h"/>
        <files mask="udp.h"/>
      </source>
      <source path="middleware/lwip/src/include/netif" target_path="lwip/src/include/netif" type="c_include">
        <files mask="bridgeif.h"/>
        <files mask="bridgeif_opts.h"/>
        <files mask="etharp.h"/>
        <files mask="ethernet.h"/>
        <files mask="ieee802154.h"/>
        <files mask="lowpan6.h"/>
        <files mask="lowpan6_ble.h"/>
        <files mask="lowpan6_common.h"/>
        <files mask="lowpan6_opts.h"/>
        <files mask="slipif.h"/>
        <files mask="zepif.h"/>
      </source>
      <source path="middleware/lwip/src/include/netif/ppp" target_path="lwip/src/include/netif/ppp" type="c_include">
        <files mask="ccp.h"/>
        <files mask="chap-md5.h"/>
        <files mask="chap-new.h"/>
        <files mask="chap_ms.h"/>
        <files mask="eap.h"/>
        <files mask="ecp.h"/>
        <files mask="eui64.h"/>
        <files mask="fsm.h"/>
        <files mask="ipcp.h"/>
        <files mask="ipv6cp.h"/>
        <files mask="lcp.h"/>
        <files mask="magic.h"/>
        <files mask="mppe.h"/>
        <files mask="ppp.h"/>
        <files mask="ppp_impl.h"/>
        <files mask="ppp_opts.h"/>
        <files mask="pppapi.h"/>
        <files mask="pppcrypt.h"/>
        <files mask="pppdebug.h"/>
        <files mask="pppoe.h"/>
        <files mask="pppol2tp.h"/>
        <files mask="pppos.h"/>
        <files mask="upap.h"/>
        <files mask="vj.h"/>
      </source>
      <source path="middleware/lwip/src/include/netif/ppp/polarssl" target_path="lwip/src/include/netif/ppp/polarssl" type="c_include">
        <files mask="arc4.h"/>
        <files mask="des.h"/>
        <files mask="md4.h"/>
        <files mask="md5.h"/>
        <files mask="sha1.h"/>
      </source>
      <source path="middleware/lwip/src/netif" target_path="lwip/src/netif" type="doc">
        <files mask="FILES"/>
      </source>
      <source path="middleware/lwip/src/netif" target_path="lwip/src/netif" type="src">
        <files mask="bridgeif.c"/>
        <files mask="bridgeif_fdb.c"/>
        <files mask="ethernet.c"/>
        <files mask="lowpan6.c"/>
        <files mask="lowpan6_ble.c"/>
        <files mask="lowpan6_common.c"/>
        <files mask="slipif.c"/>
        <files mask="zepif.c"/>
      </source>
      <source path="middleware/lwip/src/netif/ppp" target_path="lwip/src/netif/ppp" type="doc">
        <files mask="PPPD_FOLLOWUP"/>
      </source>
      <source path="middleware/lwip/src/netif/ppp" target_path="lwip/src/netif/ppp" type="src">
        <files mask="auth.c"/>
        <files mask="ccp.c"/>
        <files mask="chap-md5.c"/>
        <files mask="chap-new.c"/>
        <files mask="chap_ms.c"/>
        <files mask="demand.c"/>
        <files mask="eap.c"/>
        <files mask="eui64.c"/>
        <files mask="fsm.c"/>
        <files mask="ipcp.c"/>
        <files mask="ipv6cp.c"/>
        <files mask="lcp.c"/>
        <files mask="lwip_ecp.c"/>
        <files mask="magic.c"/>
        <files mask="mppe.c"/>
        <files mask="multilink.c"/>
        <files mask="ppp.c"/>
        <files mask="pppapi.c"/>
        <files mask="pppcrypt.c"/>
        <files mask="pppoe.c"/>
        <files mask="pppol2tp.c"/>
        <files mask="pppos.c"/>
        <files mask="upap.c"/>
        <files mask="utils.c"/>
        <files mask="vj.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/src/netif/ppp/polarssl" target_path="lwip/src/netif/ppp/polarssl" type="doc">
        <files mask="README"/>
      </source>
      <source exclude="true" path="middleware/lwip/src/netif/ppp/polarssl" target_path="lwip/src/netif/ppp/polarssl" type="src">
        <files mask="arc4.c"/>
        <files mask="des.c"/>
        <files mask="md4.c"/>
        <files mask="md5.c"/>
        <files mask="sha1.c"/>
      </source>
      <include_paths>
        <include_path path="lwip/port"/>
        <include_path path="lwip/src"/>
        <include_path path="lwip/src/include"/>
      </include_paths>
    </component>
    <component id="middleware.tcpip.lwip.apps.httpd.MIMXRT1064" name="lwIP_HTTPD" brief="lwIP HTTP Daemon" version="2.1.2" revision="2" devices="MIMXRT1064xxxxA" dependency="middleware.tcpip.lwip.MIMXRT1064 middleware.tcpip.lwip.apps.httpd.support.MIMXRT1064 middleware.template_application.tcpip.lwip.MIMXRT1064" category="Network/lwIP TCPIP Networking Stack" user_visible="false" type="other">
      <source path="middleware/lwip/src/apps/http" target_path="lwip/src/apps/http" type="src">
        <files mask="httpd.c"/>
      </source>
    </component>
    <component id="middleware.tcpip.lwip.apps.httpd.support.MIMXRT1064" name="lwIP_HTTPD_support" brief="lwIP HTTP Daemon Implementation Support Files" version="2.1.2" revision="2" devices="MIMXRT1064xxxxA" dependency="middleware.tcpip.lwip.MIMXRT1064 middleware.template_application.tcpip.lwip.MIMXRT1064" category="Network/lwIP TCPIP Networking Stack" user_visible="false" type="other">
      <source path="middleware/lwip/src/apps/http" target_path="lwip/src/apps/http" type="src">
        <files mask="fs.c"/>
      </source>
      <source path="middleware/lwip/src/apps/http/fs" target_path="lwip/src/apps/http/fs" type="other">
        <files mask="404.html"/>
        <files mask="index.html"/>
      </source>
      <source path="middleware/lwip/src/apps/http/fs/img" target_path="lwip/src/apps/http/fs/img" type="other">
        <files mask="sics.gif"/>
      </source>
      <source exclude="true" path="middleware/lwip/src/apps/http" target_path="lwip/src/apps/http" type="src">
        <files mask="fsdata.c"/>
      </source>
      <source path="middleware/lwip/src/apps/http" target_path="lwip/src/apps/http" type="c_include">
        <files mask="fsdata.h"/>
        <files mask="httpd_structs.h"/>
      </source>
      <source path="middleware/lwip/src/apps/http/makefsdata" target_path="lwip/src/apps/http/fs/makefsdata" type="other">
        <files mask="makefsdata"/>
      </source>
      <source exclude="true" path="middleware/lwip/src/apps/http/makefsdata" target_path="lwip/src/apps/http/fs/makefsdata" type="src">
        <files mask="makefsdata.c"/>
      </source>
      <source path="middleware/lwip/src/apps/http/makefsdata" target_path="lwip/src/apps/http/fs/makefsdata" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source exclude="true" path="middleware/lwip/src/apps/http/makefsdata" target_path="lwip/src/apps/http/fs/makefsdata" type="c_include">
        <files mask="tinydir.h"/>
      </source>
      <source path="middleware/lwip/src/include/lwip/apps" target_path="lwip/src/include/lwip/apps" type="c_include">
        <files mask="fs.h"/>
        <files mask="httpd.h"/>
        <files mask="httpd_opts.h"/>
      </source>
    </component>
    <component id="middleware.tcpip.lwip.apps.httpsrv.MIMXRT1064" name="lwIP_HTTP_srv" brief="lwIP HTTP Server Implementation" version="2.1.2" revision="2" devices="MIMXRT1064xxxxA" dependency="middleware.tcpip.lwip.MIMXRT1064 middleware.template_application.tcpip.lwip.MIMXRT1064" category="Network/lwIP TCPIP Networking Stack" user_visible="false" type="other">
      <source path="middleware/lwip/src/apps/httpsrv" target_path="lwip/src/apps/httpsrv" type="src">
        <files mask="httpsrv.c"/>
        <files mask="httpsrv_base64.c"/>
        <files mask="httpsrv_fs.c"/>
        <files mask="httpsrv_fs_data.c"/>
        <files mask="httpsrv_script.c"/>
        <files mask="httpsrv_sha1.c"/>
        <files mask="httpsrv_supp.c"/>
        <files mask="httpsrv_task.c"/>
        <files mask="httpsrv_tls.c"/>
        <files mask="httpsrv_utf8.c"/>
        <files mask="httpsrv_ws.c"/>
        <files mask="httpsrv_ws_api.c"/>
      </source>
      <source path="middleware/lwip/src/apps/httpsrv" target_path="lwip/src/apps/httpsrv" type="c_include">
        <files mask="httpsrv.h"/>
        <files mask="httpsrv_base64.h"/>
        <files mask="httpsrv_config.h"/>
        <files mask="httpsrv_fs.h"/>
        <files mask="httpsrv_port.h"/>
        <files mask="httpsrv_prv.h"/>
        <files mask="httpsrv_script.h"/>
        <files mask="httpsrv_sha1.h"/>
        <files mask="httpsrv_supp.h"/>
        <files mask="httpsrv_tls.h"/>
        <files mask="httpsrv_utf8.h"/>
        <files mask="httpsrv_ws.h"/>
        <files mask="httpsrv_ws_prv.h"/>
      </source>
      <source path="middleware/lwip/src/apps/httpsrv/mkfs" target_path="lwip/src/apps/httpsrv/mkfs" type="other">
        <files mask="mkfs.pl"/>
      </source>
      <source path="middleware/lwip/src/apps/httpsrv/mkfs/webpage" target_path="lwip/src/apps/httpsrv/mkfs/webpage" type="other">
        <files mask="NXP_logo.png"/>
        <files mask="auth.html"/>
        <files mask="cgi.html"/>
        <files mask="favicon.ico"/>
        <files mask="httpsrv.css"/>
        <files mask="index.html"/>
        <files mask="poll.html"/>
        <files mask="request.js"/>
        <files mask="ssi.shtml"/>
        <files mask="websocket.html"/>
        <files mask="welcome.html"/>
      </source>
    </component>
    <component id="middleware.tcpip.lwip.apps.lwiperf.MIMXRT1064" name="lwIP_IPERF" brief="lwIP IPERF Implementation" version="2.1.2" revision="2" devices="MIMXRT1064xxxxA" dependency="middleware.tcpip.lwip.MIMXRT1064 middleware.template_application.tcpip.lwip.MIMXRT1064" category="Network/lwIP TCPIP Networking Stack" user_visible="false" type="other">
      <source path="middleware/lwip/src/apps/lwiperf" target_path="lwip/src/apps/lwiperf" type="src">
        <files mask="lwiperf.c"/>
      </source>
      <source path="middleware/lwip/src/include/lwip/apps" target_path="lwip/src/include/lwip/apps" type="c_include">
        <files mask="lwiperf.h"/>
      </source>
    </component>
    <component id="middleware.tcpip.lwip.apps.mdns.MIMXRT1064" name="lwIP_MDNS" brief="lwIP mDNS Implementation" version="2.1.2" revision="2" devices="MIMXRT1064xxxxA" dependency="middleware.tcpip.lwip.MIMXRT1064 middleware.template_application.tcpip.lwip.MIMXRT1064" category="Network/lwIP TCPIP Networking Stack" user_visible="false" type="other">
      <source path="middleware/lwip/src/apps/mdns" target_path="lwip/src/apps/mdns" type="src">
        <files mask="mdns.c"/>
      </source>
      <source path="middleware/lwip/src/include/lwip/apps" target_path="lwip/src/include/lwip/apps" type="c_include">
        <files mask="mdns.h"/>
        <files mask="mdns_opts.h"/>
        <files mask="mdns_priv.h"/>
      </source>
      <include_paths>
        <include_path path="lwip/src/include/lwip/apps"/>
      </include_paths>
    </component>
    <component id="middleware.tcpip.lwip.apps.mqtt.MIMXRT1064" name="lwIP_MQTT" brief="lwIP MQTT Client" version="2.1.2" revision="2" devices="MIMXRT1064xxxxA" dependency="middleware.tcpip.lwip.MIMXRT1064 middleware.template_application.tcpip.lwip.MIMXRT1064" category="Network/lwIP TCPIP Networking Stack" user_visible="false" type="other">
      <source path="middleware/lwip/src/apps/mqtt" target_path="lwip/src/apps/mqtt" type="src">
        <files mask="mqtt.c"/>
      </source>
      <source path="middleware/lwip/src/include/lwip/apps" target_path="lwip/src/include/lwip/apps" type="c_include">
        <files mask="mqtt.h"/>
        <files mask="mqtt_opts.h"/>
        <files mask="mqtt_priv.h"/>
      </source>
    </component>
    <component id="middleware.tcpip.lwip.apps.sntp.MIMXRT1064" name="lwIP_SNTP" brief="lwIP SNTP" version="2.1.2" revision="2" devices="MIMXRT1064xxxxA" dependency="middleware.tcpip.lwip.MIMXRT1064 middleware.template_application.tcpip.lwip.MIMXRT1064" category="Network/lwIP TCPIP Networking Stack" user_visible="false" type="other">
      <source path="middleware/lwip/src/apps/sntp" target_path="lwip/src/apps/sntp" type="src">
        <files mask="sntp.c"/>
      </source>
      <source path="middleware/lwip/src/include/lwip/apps" target_path="lwip/src/include/lwip/apps" type="c_include">
        <files mask="sntp.h"/>
        <files mask="sntp_opts.h"/>
      </source>
      <include_paths>
        <include_path path="lwip/src/include"/>
      </include_paths>
    </component>
    <component id="middleware.tcpip.lwip.contrib.ping.MIMXRT1064" name="lwIP_ping" brief="lwIP Ping Sender contrib" version="2.1.2" revision="2" devices="MIMXRT1064xxxxA" dependency="middleware.tcpip.lwip.MIMXRT1064 middleware.template_application.tcpip.lwip.MIMXRT1064" category="Network/lwIP TCPIP Networking Stack" user_visible="false" type="other">
      <source path="middleware/lwip/contrib/apps/ping" target_path="lwip/contrib/apps/ping" type="src">
        <files mask="ping.c"/>
      </source>
      <source path="middleware/lwip/contrib/apps/ping" target_path="lwip/contrib/apps/ping" type="c_include">
        <files mask="ping.h"/>
      </source>
    </component>
    <component id="middleware.tcpip.lwip.contrib.tcpecho.MIMXRT1064" name="lwIP_tcpecho" brief="lwIP TCP Echo contrib" version="2.1.2" revision="2" devices="MIMXRT1064xxxxA" dependency="middleware.tcpip.lwip.MIMXRT1064 middleware.template_application.tcpip.lwip.MIMXRT1064" category="Network/lwIP TCPIP Networking Stack" user_visible="false" type="other">
      <source path="middleware/lwip/contrib/apps/tcpecho" target_path="lwip/contrib/apps/tcpecho" type="src">
        <files mask="tcpecho.c"/>
      </source>
      <source path="middleware/lwip/contrib/apps/tcpecho" target_path="lwip/contrib/apps/tcpecho" type="c_include">
        <files mask="tcpecho.h"/>
      </source>
    </component>
    <component id="middleware.tcpip.lwip.contrib.tcpecho_raw.MIMXRT1064" name="lwIP_tcpecho_raw" brief="lwIP TCP Echo Raw API contrib" version="2.1.2" devices="MIMXRT1064xxxxA" dependency="middleware.tcpip.lwip.MIMXRT1064 middleware.template_application.tcpip.lwip.MIMXRT1064" category="Network/lwIP TCPIP Networking Stack" user_visible="false" type="other">
      <source path="middleware/lwip/contrib/apps/tcpecho_raw" target_path="lwip/contrib/apps/tcpecho_raw" type="src">
        <files mask="tcpecho_raw.c"/>
      </source>
      <source path="middleware/lwip/contrib/apps/tcpecho_raw" target_path="lwip/contrib/apps/tcpecho_raw" type="c_include">
        <files mask="tcpecho_raw.h"/>
      </source>
    </component>
    <component id="middleware.tcpip.lwip.contrib.udpecho.MIMXRT1064" name="lwIP_udpecho" brief="lwIP UDP Echo contrib" version="2.1.2" revision="2" devices="MIMXRT1064xxxxA" dependency="middleware.tcpip.lwip.MIMXRT1064 middleware.template_application.tcpip.lwip.MIMXRT1064" category="Network/lwIP TCPIP Networking Stack" user_visible="false" type="other">
      <source path="middleware/lwip/contrib/apps/udpecho" target_path="lwip/contrib/apps/udpecho" type="src">
        <files mask="udpecho.c"/>
      </source>
      <source path="middleware/lwip/contrib/apps/udpecho" target_path="lwip/contrib/apps/udpecho" type="c_include">
        <files mask="udpecho.h"/>
      </source>
    </component>
    <component id="middleware.tcpip.lwip.contrib.udpecho_raw.MIMXRT1064" name="lwIP_udpecho_raw" brief="lwIP UDP Echo Raw API contrib" version="2.1.2" revision="2" devices="MIMXRT1064xxxxA" dependency="middleware.tcpip.lwip.MIMXRT1064 middleware.template_application.tcpip.lwip.MIMXRT1064" category="Network/lwIP TCPIP Networking Stack" user_visible="false" type="other">
      <source path="middleware/lwip/contrib/apps/udpecho_raw" target_path="lwip/contrib/apps/udpecho_raw" type="src">
        <files mask="udpecho_raw.c"/>
      </source>
      <source path="middleware/lwip/contrib/apps/udpecho_raw" target_path="lwip/contrib/apps/udpecho_raw" type="c_include">
        <files mask="udpecho_raw.h"/>
      </source>
    </component>
    <component id="middleware.tcpip.lwip.enet_ethernetif.MIMXRT1064" name="lwIP_enet_ethernetif" brief="lwIP ENET Interface Porting Layer" version="2.1.2" revision="2" devices="MIMXRT1064xxxxA" dependency="middleware.tcpip.lwip.MIMXRT1064 middleware.template_application.tcpip.lwip.MIMXRT1064" category="Network/lwIP TCPIP Networking Stack" user_visible="false" type="other">
      <source path="middleware/lwip/port" target_path="lwip/port" type="src">
        <files mask="enet_ethernetif.c"/>
      </source>
      <source path="middleware/lwip/port" target_path="lwip/port" type="c_include">
        <files mask="enet_ethernetif.h"/>
        <files mask="enet_ethernetif_priv.h"/>
      </source>
    </component>
    <component id="middleware.tcpip.lwip.enet_ethernetif_kinetis.MIMXRT1064" name="lwIP_enet_ethernetif_kinetis" brief="lwIP Kinetis ENET Interface Porting Layer" version="2.1.2" revision="2" devices="MIMXRT1064xxxxA" dependency="middleware.tcpip.lwip.MIMXRT1064 middleware.tcpip.lwip.enet_ethernetif.MIMXRT1064 middleware.template_application.tcpip.lwip.MIMXRT1064" category="Network/lwIP TCPIP Networking Stack" user_visible="false" type="other">
      <source path="middleware/lwip/port" target_path="lwip/port" type="src">
        <files mask="enet_ethernetif_kinetis.c"/>
      </source>
    </component>
    <component id="middleware.tcpip.lwip.enet_ethernetif_lpc.MIMXRT1064" name="lwIP_enet_ethernetif_lpc" brief="lwIP LPC ENET Interface Porting Layer" version="2.1.2" revision="2" devices="MIMXRT1064xxxxA" dependency="middleware.tcpip.lwip.MIMXRT1064 middleware.tcpip.lwip.enet_ethernetif.MIMXRT1064 middleware.template_application.tcpip.lwip.MIMXRT1064" category="Network/lwIP TCPIP Networking Stack" user_visible="false" type="other">
      <source path="middleware/lwip/port" target_path="lwip/port" type="src">
        <files mask="enet_ethernetif_lpc.c"/>
      </source>
    </component>
    <component id="middleware.tcpip.lwip.unused_files.MIMXRT1064" name="lwIP_unused_files" brief="lwIP files unused by projects" version="2.1.2" revision="2" devices="MIMXRT1064xxxxA" category="Network/lwIP TCPIP Networking Stack" user_visible="false" type="other">
      <source exclude="true" path="middleware/lwip/contrib/Coverity" target_path="lwip/contrib/Coverity" type="src">
        <files mask="coverity.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib" target_path="lwip/contrib" type="script">
        <files mask="Filelists.cmake"/>
        <files mask="Filelists.mk"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/addons/ipv6_static_routing" target_path="lwip/contrib/addons/ipv6_static_routing" type="other">
        <files mask="README"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/addons/ipv6_static_routing" target_path="lwip/contrib/addons/ipv6_static_routing" type="src">
        <files mask="ip6_route_table.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/addons/ipv6_static_routing" target_path="lwip/contrib/addons/ipv6_static_routing" type="c_include">
        <files mask="ip6_route_table.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/addons/netconn/external_resolve" target_path="lwip/contrib/addons/netconn/external_resolve" type="src">
        <files mask="dnssd.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/addons/netconn/external_resolve" target_path="lwip/contrib/addons/netconn/external_resolve" type="c_include">
        <files mask="dnssd.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/addons/tcp_isn" target_path="lwip/contrib/addons/tcp_isn" type="src">
        <files mask="tcp_isn.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/addons/tcp_isn" target_path="lwip/contrib/addons/tcp_isn" type="c_include">
        <files mask="tcp_isn.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/addons/tcp_md5" target_path="lwip/contrib/addons/tcp_md5" type="other">
        <files mask="README"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/addons/tcp_md5" target_path="lwip/contrib/addons/tcp_md5" type="src">
        <files mask="tcp_md5.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/addons/tcp_md5" target_path="lwip/contrib/addons/tcp_md5" type="c_include">
        <files mask="tcp_md5.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/LwipMibCompiler/CCodeGeneration" target_path="lwip/contrib/apps/LwipMibCompiler/CCodeGeneration" type="other">
        <files mask="CCodeGeneration.csproj"/>
        <files mask="CFile.cs"/>
        <files mask="CGenerator.cs"/>
        <files mask="Code.cs"/>
        <files mask="CodeContainerBase.cs"/>
        <files mask="CodeElement.cs"/>
        <files mask="Comment.cs"/>
        <files mask="EmptyLine.cs"/>
        <files mask="Function.cs"/>
        <files mask="FunctionDeclaration.cs"/>
        <files mask="IfThenElse.cs"/>
        <files mask="PP_If.cs"/>
        <files mask="PP_Ifdef.cs"/>
        <files mask="PP_Include.cs"/>
        <files mask="PP_Macro.cs"/>
        <files mask="PlainText.cs"/>
        <files mask="Switch.cs"/>
        <files mask="VariableDeclaration.cs"/>
        <files mask="VariablePrototype.cs"/>
        <files mask="VariableType.cs"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/LwipMibCompiler/CCodeGeneration/Properties" target_path="lwip/contrib/apps/LwipMibCompiler/CCodeGeneration/Properties" type="other">
        <files mask="AssemblyInfo.cs"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/LwipMibCompiler" target_path="lwip/contrib/apps/LwipMibCompiler" type="other">
        <files mask="LwipMibCompiler.sln"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/LwipMibCompiler/LwipMibCompiler" target_path="lwip/contrib/apps/LwipMibCompiler/LwipMibCompiler" type="other">
        <files mask="LwipMibCompiler.csproj"/>
        <files mask="Program.cs"/>
        <files mask="app.config"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/LwipMibCompiler/LwipMibCompiler/Properties" target_path="lwip/contrib/apps/LwipMibCompiler/LwipMibCompiler/Properties" type="other">
        <files mask="AssemblyInfo.cs"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/LwipMibCompiler/LwipSnmpCodeGeneration" target_path="lwip/contrib/apps/LwipMibCompiler/LwipSnmpCodeGeneration" type="other">
        <files mask="IRestriction.cs"/>
        <files mask="LwipSnmp.cs"/>
        <files mask="LwipSnmpCodeGeneration.csproj"/>
        <files mask="MibCFile.cs"/>
        <files mask="MibHeaderFile.cs"/>
        <files mask="SnmpMib.cs"/>
        <files mask="SnmpNode.cs"/>
        <files mask="SnmpScalarAggregationNode.cs"/>
        <files mask="SnmpScalarArrayNode.cs"/>
        <files mask="SnmpScalarNode.cs"/>
        <files mask="SnmpScalarNodeBits.cs"/>
        <files mask="SnmpScalarNodeCounter64.cs"/>
        <files mask="SnmpScalarNodeInt.cs"/>
        <files mask="SnmpScalarNodeObjectIdentifier.cs"/>
        <files mask="SnmpScalarNodeOctetString.cs"/>
        <files mask="SnmpScalarNodeTruthValue.cs"/>
        <files mask="SnmpScalarNodeUint.cs"/>
        <files mask="SnmpTableNode.cs"/>
        <files mask="SnmpTreeNode.cs"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/LwipMibCompiler/LwipSnmpCodeGeneration/Properties" target_path="lwip/contrib/apps/LwipMibCompiler/LwipSnmpCodeGeneration/Properties" type="other">
        <files mask="AssemblyInfo.cs"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/LwipMibCompiler/MibViewer" target_path="lwip/contrib/apps/LwipMibCompiler/MibViewer" type="other">
        <files mask="FormMain.Designer.cs"/>
        <files mask="FormMain.cs"/>
        <files mask="FormMain.resx"/>
        <files mask="MibViewer.csproj"/>
        <files mask="Program.cs"/>
        <files mask="app.config"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/LwipMibCompiler/MibViewer/Properties" target_path="lwip/contrib/apps/LwipMibCompiler/MibViewer/Properties" type="other">
        <files mask="AssemblyInfo.cs"/>
        <files mask="Resources.Designer.cs"/>
        <files mask="Resources.resx"/>
        <files mask="Settings.Designer.cs"/>
        <files mask="Settings.settings"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/LwipMibCompiler/Mibs" target_path="lwip/contrib/apps/LwipMibCompiler/Mibs" type="other">
        <files mask="IANA-ADDRESS-FAMILY-NUMBERS-MIB"/>
        <files mask="IANA-CHARSET-MIB"/>
        <files mask="IF-MIB"/>
        <files mask="INET-ADDRESS-MIB"/>
        <files mask="IP-MIB"/>
        <files mask="RFC-1212"/>
        <files mask="RFC-1215"/>
        <files mask="RFC1065-SMI"/>
        <files mask="RFC1155-SMI"/>
        <files mask="RFC1158-MIB"/>
        <files mask="RFC1213-MIB"/>
        <files mask="SNMPv2-CONF"/>
        <files mask="SNMPv2-MIB"/>
        <files mask="SNMPv2-SMI"/>
        <files mask="SNMPv2-TC"/>
        <files mask="SNMPv2-TM"/>
        <files mask="TCP-MIB"/>
        <files mask="UDP-MIB"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/LwipMibCompiler/Mibs/IANA" target_path="lwip/contrib/apps/LwipMibCompiler/Mibs/IANA" type="other">
        <files mask="IANA-ITU-ALARM-TC-MIB"/>
        <files mask="IANA-LANGUAGE-MIB"/>
        <files mask="IANA-MALLOC-MIB"/>
        <files mask="IANA-MAU-MIB"/>
        <files mask="IANA-PRINTER-MIB"/>
        <files mask="IANA-RTPROTO-MIB"/>
        <files mask="IANATn3270eTC-MIB"/>
        <files mask="IANAifType-MIB"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/LwipMibCompiler/SharpSnmpLib/Mib" target_path="lwip/contrib/apps/LwipMibCompiler/SharpSnmpLib/Mib" type="other">
        <files mask="DisplayHint.cs"/>
        <files mask="IModule.cs"/>
        <files mask="ISymbolEnumerator.cs"/>
        <files mask="Lexer.cs"/>
        <files mask="MaxAccess.cs"/>
        <files mask="MibDocument.cs"/>
        <files mask="MibException.cs"/>
        <files mask="MibModule.cs"/>
        <files mask="MibResolver.cs"/>
        <files mask="MibTree.cs"/>
        <files mask="MibTreeNode.cs"/>
        <files mask="MibTypesResolver.cs"/>
        <files mask="ObjectIdentifier.cs"/>
        <files mask="Status.cs"/>
        <files mask="Symbol.cs"/>
        <files mask="SymbolList.cs"/>
        <files mask="ValueMap.cs"/>
        <files mask="ValueRange.cs"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/LwipMibCompiler/SharpSnmpLib/Mib/Elements/Entities" target_path="lwip/contrib/apps/LwipMibCompiler/SharpSnmpLib/Mib/Elements/Entities" type="other">
        <files mask="AgentCapabilities.cs"/>
        <files mask="EntityBase.cs"/>
        <files mask="IEntity.cs"/>
        <files mask="ModuleCompliance.cs"/>
        <files mask="ModuleIdentity.cs"/>
        <files mask="NotificationGroup.cs"/>
        <files mask="NotificationType.cs"/>
        <files mask="ObjectGroup.cs"/>
        <files mask="ObjectIdentity.cs"/>
        <files mask="ObjectType.cs"/>
        <files mask="OidValueAssignment.cs"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/LwipMibCompiler/SharpSnmpLib/Mib/Elements" target_path="lwip/contrib/apps/LwipMibCompiler/SharpSnmpLib/Mib/Elements" type="other">
        <files mask="Exports.cs"/>
        <files mask="IDeclaration.cs"/>
        <files mask="IElement.cs"/>
        <files mask="ITypeReferrer.cs"/>
        <files mask="Imports.cs"/>
        <files mask="ImportsFrom.cs"/>
        <files mask="TrapType.cs"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/LwipMibCompiler/SharpSnmpLib/Mib/Elements/Types" target_path="lwip/contrib/apps/LwipMibCompiler/SharpSnmpLib/Mib/Elements/Types" type="other">
        <files mask="BaseType.cs"/>
        <files mask="BitsType.cs"/>
        <files mask="Choice.cs"/>
        <files mask="ITypeAssignment.cs"/>
        <files mask="IntegerType.cs"/>
        <files mask="IpAddressType.cs"/>
        <files mask="Macro.cs"/>
        <files mask="ObjectIdentifierType.cs"/>
        <files mask="OctetStringType.cs"/>
        <files mask="OpaqueType.cs"/>
        <files mask="Sequence.cs"/>
        <files mask="SequenceOf.cs"/>
        <files mask="TextualConvention.cs"/>
        <files mask="TypeAssignment.cs"/>
        <files mask="UnsignedType.cs"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/LwipMibCompiler/SharpSnmpLib/Properties" target_path="lwip/contrib/apps/LwipMibCompiler/SharpSnmpLib/Properties" type="other">
        <files mask="AssemblyInfo.cs"/>
        <files mask="Resources.Designer.cs"/>
        <files mask="Resources.resx"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/LwipMibCompiler/SharpSnmpLib" target_path="lwip/contrib/apps/LwipMibCompiler/SharpSnmpLib" type="other">
        <files mask="SharpSnmpLib.Mib.csproj"/>
        <files mask="sharpsnmplib.snk"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/LwipMibCompiler/SharpSnmpLib" target_path="lwip/contrib/apps/LwipMibCompiler/SharpSnmpLib" type="doc">
        <files mask="license.txt"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/LwipMibCompiler/example" target_path="lwip/contrib/apps/LwipMibCompiler/example" type="script">
        <files mask="compile_udp_mib.cmd"/>
        <files mask="compile_udp_mib.sh"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/chargen" target_path="lwip/contrib/apps/chargen" type="other">
        <files mask="README"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/chargen" target_path="lwip/contrib/apps/chargen" type="src">
        <files mask="chargen.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/chargen" target_path="lwip/contrib/apps/chargen" type="c_include">
        <files mask="chargen.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/httpserver" target_path="lwip/contrib/apps/httpserver" type="other">
        <files mask="README"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/httpserver" target_path="lwip/contrib/apps/httpserver" type="src">
        <files mask="httpserver-netconn.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/httpserver" target_path="lwip/contrib/apps/httpserver" type="c_include">
        <files mask="httpserver-netconn.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/netio" target_path="lwip/contrib/apps/netio" type="src">
        <files mask="netio.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/netio" target_path="lwip/contrib/apps/netio" type="c_include">
        <files mask="netio.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/rtp" target_path="lwip/contrib/apps/rtp" type="src">
        <files mask="rtp.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/rtp" target_path="lwip/contrib/apps/rtp" type="c_include">
        <files mask="rtp.h"/>
        <files mask="rtpdata.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/shell" target_path="lwip/contrib/apps/shell" type="src">
        <files mask="shell.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/shell" target_path="lwip/contrib/apps/shell" type="c_include">
        <files mask="shell.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/socket_examples" target_path="lwip/contrib/apps/socket_examples" type="src">
        <files mask="socket_examples.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/apps/socket_examples" target_path="lwip/contrib/apps/socket_examples" type="c_include">
        <files mask="socket_examples.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/ethernetif" target_path="lwip/contrib/examples/ethernetif" type="src">
        <files mask="ethernetif.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/example_app" target_path="lwip/contrib/examples/example_app" type="c_include">
        <files mask="default_netif.h"/>
        <files mask="lwipopts.h"/>
        <files mask="lwippools.h"/>
        <files mask="ppp_settings.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/example_app" target_path="lwip/contrib/examples/example_app" type="other">
        <files mask="lwipcfg.h.example"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/example_app" target_path="lwip/contrib/examples/example_app" type="src">
        <files mask="test.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/example_app/test_configs" target_path="lwip/contrib/examples/example_app/test_configs" type="c_include">
        <files mask="opt_default.h"/>
        <files mask="opt_dualstack.h"/>
        <files mask="opt_ipv4only.h"/>
        <files mask="opt_ipv6only.h"/>
        <files mask="opt_no_tcp_dualstack.h"/>
        <files mask="opt_no_tcp_ipv4only.h"/>
        <files mask="opt_no_tcp_ipv6only.h"/>
        <files mask="opt_no_udp_dualstack.h"/>
        <files mask="opt_no_udp_ipv4only.h"/>
        <files mask="opt_no_udp_ipv6only.h"/>
        <files mask="opt_none.h"/>
        <files mask="opt_nosys_dual.h"/>
        <files mask="opt_nosys_ipv4.h"/>
        <files mask="opt_nosys_ipv6.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/httpd/cgi_example" target_path="lwip/contrib/examples/httpd/cgi_example" type="src">
        <files mask="cgi_example.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/httpd/cgi_example" target_path="lwip/contrib/examples/httpd/cgi_example" type="c_include">
        <files mask="cgi_example.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/httpd/examples_fs" target_path="lwip/contrib/examples/httpd/examples_fs" type="doc">
        <files mask="404.html"/>
        <files mask="index.html"/>
        <files mask="login.html"/>
        <files mask="loginfail.html"/>
        <files mask="session.html"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/httpd/examples_fs/img" target_path="lwip/contrib/examples/httpd/examples_fs/img" type="image">
        <files mask="sics.gif"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/httpd/examples_fs" target_path="lwip/contrib/examples/httpd/examples_fs" type="other">
        <files mask="ssi.shtml"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/httpd" target_path="lwip/contrib/examples/httpd" type="src">
        <files mask="examples_fsdata.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/httpd/fs_example" target_path="lwip/contrib/examples/httpd/fs_example" type="src">
        <files mask="fs_example.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/httpd/fs_example" target_path="lwip/contrib/examples/httpd/fs_example" type="c_include">
        <files mask="fs_example.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/httpd/genfiles_example" target_path="lwip/contrib/examples/httpd/genfiles_example" type="src">
        <files mask="genfiles_example.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/httpd/genfiles_example" target_path="lwip/contrib/examples/httpd/genfiles_example" type="c_include">
        <files mask="genfiles_example.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/httpd/post_example" target_path="lwip/contrib/examples/httpd/post_example" type="src">
        <files mask="post_example.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/httpd/ssi_example" target_path="lwip/contrib/examples/httpd/ssi_example" type="src">
        <files mask="ssi_example.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/httpd/ssi_example" target_path="lwip/contrib/examples/httpd/ssi_example" type="c_include">
        <files mask="ssi_example.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/lwiperf" target_path="lwip/contrib/examples/lwiperf" type="src">
        <files mask="lwiperf_example.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/lwiperf" target_path="lwip/contrib/examples/lwiperf" type="c_include">
        <files mask="lwiperf_example.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/mdns" target_path="lwip/contrib/examples/mdns" type="src">
        <files mask="mdns_example.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/mdns" target_path="lwip/contrib/examples/mdns" type="c_include">
        <files mask="mdns_example.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/mqtt" target_path="lwip/contrib/examples/mqtt" type="src">
        <files mask="mqtt_example.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/mqtt" target_path="lwip/contrib/examples/mqtt" type="c_include">
        <files mask="mqtt_example.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/ppp" target_path="lwip/contrib/examples/ppp" type="src">
        <files mask="pppos_example.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/ppp" target_path="lwip/contrib/examples/ppp" type="c_include">
        <files mask="pppos_example.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/snmp" target_path="lwip/contrib/examples/snmp" type="src">
        <files mask="snmp_example.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/snmp" target_path="lwip/contrib/examples/snmp" type="c_include">
        <files mask="snmp_example.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/snmp/snmp_private_mib" target_path="lwip/contrib/examples/snmp/snmp_private_mib" type="src">
        <files mask="lwip_prvmib.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/snmp/snmp_private_mib" target_path="lwip/contrib/examples/snmp/snmp_private_mib" type="c_include">
        <files mask="private_mib.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/snmp/snmp_v3" target_path="lwip/contrib/examples/snmp/snmp_v3" type="src">
        <files mask="snmpv3_dummy.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/snmp/snmp_v3" target_path="lwip/contrib/examples/snmp/snmp_v3" type="c_include">
        <files mask="snmpv3_dummy.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/sntp" target_path="lwip/contrib/examples/sntp" type="src">
        <files mask="sntp_example.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/sntp" target_path="lwip/contrib/examples/sntp" type="c_include">
        <files mask="sntp_example.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/tftp" target_path="lwip/contrib/examples/tftp" type="src">
        <files mask="tftp_example.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/examples/tftp" target_path="lwip/contrib/examples/tftp" type="c_include">
        <files mask="tftp_example.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports" target_path="lwip/contrib/ports" type="script">
        <files mask="CMakeCommon.cmake"/>
        <files mask="Common.allports.mk"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports" target_path="lwip/contrib/ports" type="other">
        <files mask="FILES"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/freertos/include/arch" target_path="lwip/contrib/ports/freertos/include/arch" type="c_include">
        <files mask="sys_arch.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/freertos" target_path="lwip/contrib/ports/freertos" type="src">
        <files mask="sys_arch.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/unix" target_path="lwip/contrib/ports/unix" type="script">
        <files mask="Common.mk"/>
        <files mask="Filelists.cmake"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/unix" target_path="lwip/contrib/ports/unix" type="other">
        <files mask="README"/>
        <files mask="setup-tapif"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/unix/check" target_path="lwip/contrib/ports/unix/check" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/unix/check" target_path="lwip/contrib/ports/unix/check" type="other">
        <files mask="Makefile"/>
        <files mask="README"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/unix/check" target_path="lwip/contrib/ports/unix/check" type="c_include">
        <files mask="config.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/unix/example_app" target_path="lwip/contrib/ports/unix/example_app" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/unix/example_app" target_path="lwip/contrib/ports/unix/example_app" type="other">
        <files mask="Makefile"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/unix/example_app" target_path="lwip/contrib/ports/unix/example_app" type="src">
        <files mask="default_netif.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/unix/example_app" target_path="lwip/contrib/ports/unix/example_app" type="script">
        <files mask="iteropts.sh"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/unix/lib" target_path="lwip/contrib/ports/unix/lib" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/unix/lib" target_path="lwip/contrib/ports/unix/lib" type="other">
        <files mask="README"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/unix/lib" target_path="lwip/contrib/ports/unix/lib" type="c_include">
        <files mask="lwipopts.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/unix/port/include/arch" target_path="lwip/contrib/ports/unix/port/include/arch" type="c_include">
        <files mask="cc.h"/>
        <files mask="perf.h"/>
        <files mask="sys_arch.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/unix/port/include/netif" target_path="lwip/contrib/ports/unix/port/include/netif" type="c_include">
        <files mask="fifo.h"/>
        <files mask="list.h"/>
        <files mask="pcapif.h"/>
        <files mask="sio.h"/>
        <files mask="tapif.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/unix/port/netif" target_path="lwip/contrib/ports/unix/port/netif" type="src">
        <files mask="fifo.c"/>
        <files mask="list.c"/>
        <files mask="pcapif.c"/>
        <files mask="sio.c"/>
        <files mask="tapif.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/unix/port" target_path="lwip/contrib/ports/unix/port" type="src">
        <files mask="perf.c"/>
        <files mask="sys_arch.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/win32" target_path="lwip/contrib/ports/win32" type="script">
        <files mask="Common.mk"/>
        <files mask="Filelists.cmake"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/win32/check" target_path="lwip/contrib/ports/win32/check" type="c_include">
        <files mask="check_stdint.h"/>
        <files mask="config.h"/>
        <files mask="stdbool.h"/>
        <files mask="unistd.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/win32/check/sys" target_path="lwip/contrib/ports/win32/check/sys" type="c_include">
        <files mask="time.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/win32/check" target_path="lwip/contrib/ports/win32/check" type="src">
        <files mask="time.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/win32/example_app" target_path="lwip/contrib/ports/win32/example_app" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/win32/example_app" target_path="lwip/contrib/ports/win32/example_app" type="other">
        <files mask="Makefile"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/win32/example_app" target_path="lwip/contrib/ports/win32/example_app" type="src">
        <files mask="default_netif.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/win32/include/arch" target_path="lwip/contrib/ports/win32/include/arch" type="c_include">
        <files mask="bpstruct.h"/>
        <files mask="cc.h"/>
        <files mask="epstruct.h"/>
        <files mask="perf.h"/>
        <files mask="sys_arch.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/win32/msvc" target_path="lwip/contrib/ports/win32/msvc" type="script">
        <files mask="build_coverity.cmd"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/win32/msvc" target_path="lwip/contrib/ports/win32/msvc" type="other">
        <files mask="libcheck.vcxproj"/>
        <files mask="libcheck.vcxproj.filters"/>
        <files mask="lwIP.vcxproj"/>
        <files mask="lwIP.vcxproj.filters"/>
        <files mask="lwIP_Test.sln"/>
        <files mask="lwIP_Test.vcxproj"/>
        <files mask="lwIP_Test.vcxproj.filters"/>
        <files mask="lwIP_pcapif.vcxproj"/>
        <files mask="lwIP_pcapif.vcxproj.filters"/>
        <files mask="lwIP_unittests.sln"/>
        <files mask="lwip_unittests.vcxproj"/>
        <files mask="lwip_unittests.vcxproj.filters"/>
        <files mask="makefsdata.vcxproj"/>
        <files mask="makefsdata.vcxproj.filters"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/win32" target_path="lwip/contrib/ports/win32" type="src">
        <files mask="pcapif.c"/>
        <files mask="pcapif_helper.c"/>
        <files mask="sio.c"/>
        <files mask="sys_arch.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/win32" target_path="lwip/contrib/ports/win32" type="c_include">
        <files mask="pcapif.h"/>
        <files mask="pcapif_helper.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/contrib/ports/win32" target_path="lwip/contrib/ports/win32" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source exclude="true" path="middleware/lwip/src/apps/altcp_tls" target_path="lwip/src/apps/altcp_tls" type="src">
        <files mask="altcp_tls_mbedtls.c"/>
        <files mask="altcp_tls_mbedtls_mem.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/src/apps/altcp_tls" target_path="lwip/src/apps/altcp_tls" type="c_include">
        <files mask="altcp_tls_mbedtls_mem.h"/>
        <files mask="altcp_tls_mbedtls_structs.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/src/apps/http" target_path="lwip/src/apps/http" type="src">
        <files mask="altcp_proxyconnect.c"/>
        <files mask="http_client.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/src/apps/netbiosns" target_path="lwip/src/apps/netbiosns" type="src">
        <files mask="netbiosns.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/src/apps/smtp" target_path="lwip/src/apps/smtp" type="src">
        <files mask="smtp.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/src/apps/snmp" target_path="lwip/src/apps/snmp" type="src">
        <files mask="snmp_asn1.c"/>
        <files mask="snmp_core.c"/>
        <files mask="snmp_mib2.c"/>
        <files mask="snmp_mib2_icmp.c"/>
        <files mask="snmp_mib2_interfaces.c"/>
        <files mask="snmp_mib2_ip.c"/>
        <files mask="snmp_mib2_snmp.c"/>
        <files mask="snmp_mib2_system.c"/>
        <files mask="snmp_mib2_tcp.c"/>
        <files mask="snmp_mib2_udp.c"/>
        <files mask="snmp_msg.c"/>
        <files mask="snmp_netconn.c"/>
        <files mask="snmp_pbuf_stream.c"/>
        <files mask="snmp_raw.c"/>
        <files mask="snmp_scalar.c"/>
        <files mask="snmp_snmpv2_framework.c"/>
        <files mask="snmp_snmpv2_usm.c"/>
        <files mask="snmp_table.c"/>
        <files mask="snmp_threadsync.c"/>
        <files mask="snmp_traps.c"/>
        <files mask="snmpv3.c"/>
        <files mask="snmpv3_mbedtls.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/src/apps/snmp" target_path="lwip/src/apps/snmp" type="c_include">
        <files mask="snmp_asn1.h"/>
        <files mask="snmp_core_priv.h"/>
        <files mask="snmp_msg.h"/>
        <files mask="snmp_pbuf_stream.h"/>
        <files mask="snmpv3_priv.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/src/apps/tftp" target_path="lwip/src/apps/tftp" type="src">
        <files mask="tftp_server.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/src/include/lwip/apps" target_path="lwip/src/include/lwip/apps" type="other">
        <files mask="FILES"/>
      </source>
      <source exclude="true" path="middleware/lwip/src/include/lwip/apps" target_path="lwip/src/include/lwip/apps" type="c_include">
        <files mask="altcp_proxyconnect.h"/>
        <files mask="altcp_tls_mbedtls_opts.h"/>
        <files mask="http_client.h"/>
        <files mask="netbiosns.h"/>
        <files mask="netbiosns_opts.h"/>
        <files mask="smtp.h"/>
        <files mask="smtp_opts.h"/>
        <files mask="snmp.h"/>
        <files mask="snmp_core.h"/>
        <files mask="snmp_mib2.h"/>
        <files mask="snmp_opts.h"/>
        <files mask="snmp_scalar.h"/>
        <files mask="snmp_snmpv2_framework.h"/>
        <files mask="snmp_snmpv2_usm.h"/>
        <files mask="snmp_table.h"/>
        <files mask="snmp_threadsync.h"/>
        <files mask="snmpv3.h"/>
        <files mask="tftp_opts.h"/>
        <files mask="tftp_server.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/src/include/lwip" target_path="lwip/src/include/lwip" type="other">
        <files mask="init.h.cmake.in"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/fuzz" target_path="lwip/test/fuzz" type="other">
        <files mask="Makefile"/>
        <files mask="README"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/fuzz" target_path="lwip/test/fuzz" type="c_include">
        <files mask="config.h"/>
        <files mask="lwipopts.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/fuzz" target_path="lwip/test/fuzz" type="src">
        <files mask="fuzz.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/fuzz/inputs/arp" target_path="lwip/test/fuzz/inputs/arp" type="binary">
        <files mask="arp_req.bin"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/fuzz/inputs/icmp" target_path="lwip/test/fuzz/inputs/icmp" type="binary">
        <files mask="icmp_ping.bin"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/fuzz/inputs/ipv6" target_path="lwip/test/fuzz/inputs/ipv6" type="binary">
        <files mask="neighbor_solicitation.bin"/>
        <files mask="router_adv.bin"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/fuzz/inputs/tcp" target_path="lwip/test/fuzz/inputs/tcp" type="binary">
        <files mask="tcp_syn.bin"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/fuzz/inputs/udp" target_path="lwip/test/fuzz/inputs/udp" type="binary">
        <files mask="udp_port_5000.bin"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/fuzz" target_path="lwip/test/fuzz" type="script">
        <files mask="output_to_pcap.sh"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/sockets" target_path="lwip/test/unit" type="src">
        <files mask="sockets_stresstest.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/sockets" target_path="lwip/test/unit" type="c_include">
        <files mask="sockets_stresstest.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit" target_path="lwip/test/unit" type="script">
        <files mask="Filelists.cmake"/>
        <files mask="Filelists.mk"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit/api" target_path="lwip/test/unit/api" type="src">
        <files mask="test_sockets.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit/api" target_path="lwip/test/unit/api" type="c_include">
        <files mask="test_sockets.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit/arch" target_path="lwip/test/unit/arch" type="src">
        <files mask="sys_arch.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit/arch" target_path="lwip/test/unit/arch" type="c_include">
        <files mask="sys_arch.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit/core" target_path="lwip/test/unit/core" type="src">
        <files mask="test_def.c"/>
        <files mask="test_mem.c"/>
        <files mask="test_netif.c"/>
        <files mask="test_pbuf.c"/>
        <files mask="test_timers.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit/core" target_path="lwip/test/unit/core" type="c_include">
        <files mask="test_def.h"/>
        <files mask="test_mem.h"/>
        <files mask="test_netif.h"/>
        <files mask="test_pbuf.h"/>
        <files mask="test_timers.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit/dhcp" target_path="lwip/test/unit/dhcp" type="src">
        <files mask="test_dhcp.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit/dhcp" target_path="lwip/test/unit/dhcp" type="c_include">
        <files mask="test_dhcp.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit/etharp" target_path="lwip/test/unit/etharp" type="src">
        <files mask="test_etharp.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit/etharp" target_path="lwip/test/unit/etharp" type="c_include">
        <files mask="test_etharp.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit/ip4" target_path="lwip/test/unit/ip4" type="src">
        <files mask="test_ip4.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit/ip4" target_path="lwip/test/unit/ip4" type="c_include">
        <files mask="test_ip4.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit/ip6" target_path="lwip/test/unit/ip6" type="src">
        <files mask="test_ip6.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit/ip6" target_path="lwip/test/unit/ip6" type="c_include">
        <files mask="test_ip6.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit" target_path="lwip/test/unit" type="c_include">
        <files mask="lwip_check.h"/>
        <files mask="lwipopts.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit" target_path="lwip/test/unit" type="src">
        <files mask="lwip_unittests.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit/mdns" target_path="lwip/test/unit/mdns" type="src">
        <files mask="test_mdns.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit/mdns" target_path="lwip/test/unit/mdns" type="c_include">
        <files mask="test_mdns.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit/mqtt" target_path="lwip/test/unit/mqtt" type="src">
        <files mask="test_mqtt.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit/mqtt" target_path="lwip/test/unit/mqtt" type="c_include">
        <files mask="test_mqtt.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit/tcp" target_path="lwip/test/unit/tcp" type="src">
        <files mask="tcp_helper.c"/>
        <files mask="test_tcp.c"/>
        <files mask="test_tcp_oos.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit/tcp" target_path="lwip/test/unit/tcp" type="c_include">
        <files mask="tcp_helper.h"/>
        <files mask="test_tcp.h"/>
        <files mask="test_tcp_oos.h"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit/udp" target_path="lwip/test/unit/udp" type="src">
        <files mask="test_udp.c"/>
      </source>
      <source exclude="true" path="middleware/lwip/test/unit/udp" target_path="lwip/test/unit/udp" type="c_include">
        <files mask="test_udp.h"/>
      </source>
    </component>
    <component id="middleware.tcpip.lwip.usb_ethernetif.MIMXRT1064" name="lwIP_usb_ethernetif" brief="lwIP Ethernet Interface Porting Layer" version="2.1.2" revision="2" devices="MIMXRT1064xxxxA" dependency="middleware.tcpip.lwip.MIMXRT1064 middleware.template_application.tcpip.lwip.MIMXRT1064" category="Network/lwIP TCPIP Networking Stack" user_visible="false" type="other">
      <source path="middleware/lwip/port" target_path="lwip/port" type="c_include">
        <files mask="usb_ethernetif.h"/>
      </source>
      <source condition="middleware.baremetal.MIMXRT1064" path="middleware/lwip/port" target_path="lwip/port" type="src">
        <files mask="usb_ethernetif_bm.c"/>
      </source>
      <source condition="middleware.amazon_freertos.freertos.MIMXRT1064" path="middleware/lwip/port" target_path="lwip/port" type="src">
        <files mask="usb_ethernetif_freertos.c"/>
      </source>
    </component>
    <component id="middleware.template_application.amazon_freertos.MIMXRT1064" name="Amazon-FreeRTOS" brief="FreeRTOS template application" version="10.2.0" full_name="FreeRTOS template" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.freertos.MIMXRT1064" category="Operating System/FreeRTOS Operating System" user_visible="true" type="project_template">
      <source exclude="true" path="rtos/amazon-freertos/lib/FreeRTOS/portable/MemMang" target_path="amazon-freertos/freertos/portable" type="other">
        <files mask="ReadMe.url"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/FreeRTOS/portable/MemMang" target_path="amazon-freertos/freertos/portable" type="src">
        <files mask="heap_1.c"/>
        <files mask="heap_2.c"/>
        <files mask="heap_3.c"/>
        <files mask="heap_5.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/FreeRTOS/portable/MemMang" target_path="amazon-freertos/freertos/portable" type="src">
        <files mask="heap_4.c"/>
      </source>
      <source path="rtos/amazon-freertos/template_application/ARM_CM4F" target_path="source" type="c_include" device_cores="core0_MIMXRT1064xxxxA">
        <files mask="FreeRTOSConfig.h"/>
      </source>
    </component>
    <component id="middleware.template_application.emwin.MIMXRT1064" name="emwin_template" brief="emwin template" version="1.0.0" full_name="emwin template application" devices="MIMXRT1064xxxxA" dependency="middleware.emwin.MIMXRT1064" category="Graphics/emWin graphics library" user_visible="false" type="project_template">
      <source path="middleware/emwin/template_application" target_path="emwin" type="src">
        <files mask="emwin_support.c"/>
      </source>
      <source path="middleware/emwin/template_application" target_path="emwin" type="c_include">
        <files mask="emwin_support.h"/>
      </source>
    </component>
    <component id="middleware.template_application.mbedtls.MIMXRT1064" name="mbedtls" brief="mbedtls template" version="2.13.1" full_name="mbedtls template application" devices="MIMXRT1064xxxxA" dependency="middleware.mbedtls.MIMXRT1064" category="Security/mbedTLS library" user_visible="true" type="middleware"/>
    <component id="middleware.template_application.tcpip.lwip.MIMXRT1064" name="lwIP_template" brief="lwIP Template" version="2.1.2" revision="2" full_name="lwIP Template Application" devices="MIMXRT1064xxxxA" dependency="middleware.tcpip.lwip.MIMXRT1064" category="Network/lwIP TCPIP Networking Stack" user_visible="false" type="project_template">
      <source path="middleware/lwip/template_application" target_path="board" type="src">
        <files mask="fsl_phy.c"/>
      </source>
      <source path="middleware/lwip/template_application" target_path="board" type="c_include">
        <files mask="fsl_phy.h"/>
      </source>
      <source path="middleware/lwip/template_application" target_path="source" type="c_include">
        <files mask="lwipopts.h"/>
      </source>
    </component>
    <component id="middleware.usb.device.MIMXRT1064" name="common driver" version="1.0.0" full_name="USB stack" devices="MIMXRT1064xxxxA" user_visible="false" type="middleware">
      <source path="middleware/usb/device" target_path="usb/device/include" type="c_include">
        <files mask="usb_device.h"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source" type="src">
        <files mask="usb_device_dci.c"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source" type="c_include">
        <files mask="usb_device_dci.h"/>
      </source>
    </component>
    <component id="middleware.usb.device_controller_ehci.MIMXRT1064" name="EHCI driver(HS)" version="1.0.0" full_name="USB stack" devices="MIMXRT1064xxxxA" dependency="middleware.usb.device.MIMXRT1064 middleware.usb.phy.MIMXRT1064" user_visible="false" type="middleware">
      <source path="middleware/usb/device" target_path="usb/device/source/ehci" type="src">
        <files mask="usb_device_ehci.c"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source/ehci" type="c_include">
        <files mask="usb_device_ehci.h"/>
      </source>
      <source path="middleware/usb/include" target_path="usb/include" type="c_include">
        <files mask="usb.h"/>
        <files mask="usb_misc.h"/>
        <files mask="usb_spec.h"/>
      </source>
      <source path="middleware/usb/osa" target_path="osa" type="c_include">
        <files mask="usb_osa.h"/>
      </source>
      <source condition="middleware.baremetal.MIMXRT1064" path="middleware/usb/osa" target_path="osa" type="src">
        <files mask="usb_osa_bm.c"/>
      </source>
      <source condition="middleware.baremetal.MIMXRT1064" path="middleware/usb/osa" target_path="osa" type="c_include">
        <files mask="usb_osa_bm.h"/>
      </source>
      <source condition="middleware.amazon_freertos.freertos.MIMXRT1064" path="middleware/usb/osa" target_path="osa" type="src">
        <files mask="usb_osa_freertos.c"/>
      </source>
      <source condition="middleware.amazon_freertos.freertos.MIMXRT1064" path="middleware/usb/osa" target_path="osa" type="c_include">
        <files mask="usb_osa_freertos.h"/>
      </source>
    </component>
    <component id="middleware.usb.device_config_template.MIMXRT1064" name="USB device config template" brief="USB device config template" version="2.2.0" full_name="USB device config template" devices="MIMXRT1064xxxxA" category="Board Support/SDK Project Template" user_visible="false" type="project_template">
      <source path="middleware/usb/templates/config" target_path="source/generated" type="c_include">
        <files mask="usb_device_config.h"/>
      </source>
    </component>
    <component id="middleware.usb.device_stack.MIMXRT1064" name="USB device" brief="USB device stack" version="2.2.0" full_name="USB device stack" devices="MIMXRT1064xxxxA" dependency="middleware.usb.device_config_template.MIMXRT1064 middleware.usb.stack_common.MIMXRT1064" user_visible="true" type="middleware">
      <source path="middleware/usb/templates/device/class" target_path="usb/device/class" type="src">
        <files mask="usb_device_audio.c"/>
        <files mask="usb_device_ccid.c"/>
        <files mask="usb_device_cdc_acm.c"/>
        <files mask="usb_device_cdc_rndis.c"/>
        <files mask="usb_device_class.c"/>
        <files mask="usb_device_hid.c"/>
        <files mask="usb_device_msc.c"/>
        <files mask="usb_device_msc_ufi.c"/>
        <files mask="usb_device_phdc.c"/>
        <files mask="usb_device_printer.c"/>
        <files mask="usb_device_video.c"/>
      </source>
      <source path="middleware/usb/templates/device/class" target_path="usb/device/class" type="c_include">
        <files mask="usb_device_audio.h"/>
        <files mask="usb_device_ccid.h"/>
        <files mask="usb_device_cdc_acm.h"/>
        <files mask="usb_device_cdc_rndis.h"/>
        <files mask="usb_device_class.h"/>
        <files mask="usb_device_hid.h"/>
        <files mask="usb_device_msc.h"/>
        <files mask="usb_device_msc_ufi.h"/>
        <files mask="usb_device_phdc.h"/>
        <files mask="usb_device_printer.h"/>
        <files mask="usb_device_video.h"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/include" type="c_include">
        <files mask="usb_device.h"/>
      </source>
      <source path="middleware/usb/templates/device" target_path="usb/device/source" type="src">
        <files mask="usb_device_ch9.c"/>
      </source>
      <source path="middleware/usb/templates/device" target_path="usb/device/source" type="c_include">
        <files mask="usb_device_ch9.h"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source" type="src">
        <files mask="usb_device_dci.c"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source" type="c_include">
        <files mask="usb_device_dci.h"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source/ehci" type="src">
        <files mask="usb_device_ehci.c"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source/ehci" type="c_include">
        <files mask="usb_device_ehci.h"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source/khci" type="src">
        <files mask="usb_device_khci.c"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source/khci" type="c_include">
        <files mask="usb_device_khci.h"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source/lpcip3511" type="src">
        <files mask="usb_device_lpcip3511.c"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source/lpcip3511" type="c_include">
        <files mask="usb_device_lpcip3511.h"/>
      </source>
    </component>
    <component id="middleware.usb.host_audio.MIMXRT1064" name="Audio class" version="1.0.0" full_name="USB stack" devices="MIMXRT1064xxxxA" dependency="middleware.usb.host.MIMXRT1064" user_visible="false" type="middleware">
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="src">
        <files mask="usb_host_audio.c"/>
      </source>
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="c_include">
        <files mask="usb_host_audio.h"/>
      </source>
    </component>
    <component id="middleware.usb.host_cdc.MIMXRT1064" name="CDC class" version="1.0.0" full_name="USB stack" devices="MIMXRT1064xxxxA" dependency="middleware.usb.host.MIMXRT1064" user_visible="false" type="middleware">
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="src">
        <files mask="usb_host_cdc.c"/>
      </source>
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="c_include">
        <files mask="usb_host_cdc.h"/>
      </source>
    </component>
    <component id="middleware.usb.host_cdc_rndis.MIMXRT1064" name="CDC RNDIS class" version="1.0.0" full_name="USB stack" devices="MIMXRT1064xxxxA" dependency="middleware.usb.host.MIMXRT1064" user_visible="false" type="middleware">
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="src">
        <files mask="usb_host_cdc_rndis.c"/>
      </source>
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="c_include">
        <files mask="usb_host_cdc_rndis.h"/>
      </source>
    </component>
    <component id="middleware.usb.host.MIMXRT1064" name="common driver" version="1.0.0" full_name="USB stack" devices="MIMXRT1064xxxxA" user_visible="false" type="middleware">
      <source path="middleware/usb/host" target_path="usb/host" type="c_include">
        <files mask="usb_host.h"/>
        <files mask="usb_host_devices.h"/>
        <files mask="usb_host_framework.h"/>
        <files mask="usb_host_hci.h"/>
      </source>
      <source path="middleware/usb/host" target_path="usb/host" type="src">
        <files mask="usb_host_devices.c"/>
        <files mask="usb_host_framework.c"/>
        <files mask="usb_host_hci.c"/>
      </source>
    </component>
    <component id="middleware.usb.host_controller_ehci.MIMXRT1064" name="EHCI driver(HS)" version="1.0.0" full_name="USB stack" devices="MIMXRT1064xxxxA" dependency="middleware.usb.host.MIMXRT1064 middleware.usb.phy.MIMXRT1064" user_visible="false" type="middleware">
      <source path="middleware/usb/host" target_path="usb/host" type="src">
        <files mask="usb_host_ehci.c"/>
      </source>
      <source path="middleware/usb/host" target_path="usb/host" type="c_include">
        <files mask="usb_host_ehci.h"/>
      </source>
      <source path="middleware/usb/include" target_path="usb/include" type="c_include">
        <files mask="usb.h"/>
        <files mask="usb_misc.h"/>
        <files mask="usb_spec.h"/>
      </source>
      <source path="middleware/usb/osa" target_path="osa" type="c_include">
        <files mask="usb_osa.h"/>
      </source>
      <source condition="middleware.baremetal.MIMXRT1064" path="middleware/usb/osa" target_path="osa" type="src">
        <files mask="usb_osa_bm.c"/>
      </source>
      <source condition="middleware.baremetal.MIMXRT1064" path="middleware/usb/osa" target_path="osa" type="c_include">
        <files mask="usb_osa_bm.h"/>
      </source>
      <source condition="middleware.amazon_freertos.freertos.MIMXRT1064" path="middleware/usb/osa" target_path="osa" type="src">
        <files mask="usb_osa_freertos.c"/>
      </source>
      <source condition="middleware.amazon_freertos.freertos.MIMXRT1064" path="middleware/usb/osa" target_path="osa" type="c_include">
        <files mask="usb_osa_freertos.h"/>
      </source>
    </component>
    <component id="middleware.usb.host_hid.MIMXRT1064" name="Hid class" version="1.0.0" full_name="USB stack" devices="MIMXRT1064xxxxA" dependency="middleware.usb.host.MIMXRT1064" user_visible="false" type="middleware">
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="src">
        <files mask="usb_host_hid.c"/>
      </source>
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="c_include">
        <files mask="usb_host_hid.h"/>
      </source>
    </component>
    <component id="middleware.usb.host_hub.MIMXRT1064" name="Hub class" version="1.0.0" full_name="USB stack" devices="MIMXRT1064xxxxA" dependency="middleware.usb.host.MIMXRT1064" user_visible="false" type="middleware">
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="src">
        <files mask="usb_host_hub.c"/>
        <files mask="usb_host_hub_app.c"/>
      </source>
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="c_include">
        <files mask="usb_host_hub.h"/>
        <files mask="usb_host_hub_app.h"/>
      </source>
    </component>
    <component id="middleware.usb.host_msd.MIMXRT1064" name="Mass Storage class" version="1.0.0" full_name="USB stack" devices="MIMXRT1064xxxxA" dependency="middleware.usb.host.MIMXRT1064" user_visible="false" type="middleware">
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="src">
        <files mask="usb_host_msd.c"/>
        <files mask="usb_host_msd_ufi.c"/>
      </source>
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="c_include">
        <files mask="usb_host_msd.h"/>
      </source>
    </component>
    <component id="middleware.usb.host_phdc.MIMXRT1064" name="PHDC class" version="1.0.0" full_name="USB stack" devices="MIMXRT1064xxxxA" dependency="middleware.usb.host.MIMXRT1064" user_visible="false" type="middleware">
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="src">
        <files mask="usb_host_phdc.c"/>
      </source>
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="c_include">
        <files mask="usb_host_phdc.h"/>
      </source>
    </component>
    <component id="middleware.usb.host_printer.MIMXRT1064" name="Printer class" version="1.0.0" full_name="USB stack" devices="MIMXRT1064xxxxA" dependency="middleware.usb.host.MIMXRT1064" user_visible="false" type="middleware">
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="src">
        <files mask="usb_host_printer.c"/>
      </source>
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="c_include">
        <files mask="usb_host_printer.h"/>
      </source>
    </component>
    <component id="middleware.usb.host_config_template.MIMXRT1064" name="USB host config template" brief="USB host config template" version="2.2.0" full_name="USB host config template" devices="MIMXRT1064xxxxA" category="Board Support/SDK Project Template" user_visible="false" type="project_template">
      <source path="middleware/usb/templates/config" target_path="source/generated" type="c_include">
        <files mask="usb_host_config.h"/>
      </source>
    </component>
    <component id="middleware.usb.host_stack.MIMXRT1064" name="USB host" brief="USB host stack" version="2.2.0" full_name="USB host stack" devices="MIMXRT1064xxxxA" dependency="middleware.usb.host_config_template.MIMXRT1064 middleware.usb.stack_common.MIMXRT1064" user_visible="true" type="middleware">
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="src">
        <files mask="usb_host_audio.c"/>
        <files mask="usb_host_cdc.c"/>
        <files mask="usb_host_hid.c"/>
        <files mask="usb_host_hub.c"/>
        <files mask="usb_host_hub_app.c"/>
        <files mask="usb_host_msd.c"/>
        <files mask="usb_host_msd_ufi.c"/>
        <files mask="usb_host_phdc.c"/>
        <files mask="usb_host_printer.c"/>
      </source>
      <source path="middleware/usb/host/class" target_path="usb/host/class" type="c_include">
        <files mask="usb_host_audio.h"/>
        <files mask="usb_host_cdc.h"/>
        <files mask="usb_host_hid.h"/>
        <files mask="usb_host_hub.h"/>
        <files mask="usb_host_hub_app.h"/>
        <files mask="usb_host_msd.h"/>
        <files mask="usb_host_phdc.h"/>
        <files mask="usb_host_printer.h"/>
      </source>
      <source path="middleware/usb/host" target_path="usb/host" type="c_include">
        <files mask="usb_host.h"/>
        <files mask="usb_host_devices.h"/>
        <files mask="usb_host_ehci.h"/>
        <files mask="usb_host_framework.h"/>
        <files mask="usb_host_hci.h"/>
        <files mask="usb_host_ip3516hs.h"/>
        <files mask="usb_host_khci.h"/>
        <files mask="usb_host_ohci.h"/>
      </source>
      <source path="middleware/usb/host" target_path="usb/host" type="src">
        <files mask="usb_host_devices.c"/>
        <files mask="usb_host_ehci.c"/>
        <files mask="usb_host_framework.c"/>
        <files mask="usb_host_hci.c"/>
        <files mask="usb_host_ip3516hs.c"/>
        <files mask="usb_host_khci.c"/>
        <files mask="usb_host_ohci.c"/>
      </source>
    </component>
    <component id="middleware.usb.phy.MIMXRT1064" name="phy" version="1.0.0" full_name="USB stack" devices="MIMXRT1064xxxxA" user_visible="false" type="middleware">
      <source path="middleware/usb/phy" target_path="usb/phy" type="src">
        <files mask="usb_phy.c"/>
      </source>
      <source path="middleware/usb/phy" target_path="usb/phy" type="c_include">
        <files mask="usb_phy.h"/>
      </source>
    </component>
    <component id="middleware.usb.stack_common.MIMXRT1064" name="USB common" brief="USB common" version="2.2.0" full_name="USB common" devices="MIMXRT1064xxxxA" user_visible="true" type="middleware">
      <source path="middleware/usb/include" target_path="usb/include" type="c_include">
        <files mask="usb.h"/>
        <files mask="usb_misc.h"/>
        <files mask="usb_spec.h"/>
      </source>
      <source path="middleware/usb/osa" target_path="osa" type="c_include">
        <files mask="usb_osa.h"/>
      </source>
      <source condition="middleware.baremetal.MIMXRT1064" path="middleware/usb/osa" target_path="osa" type="src">
        <files mask="usb_osa_bm.c"/>
      </source>
      <source condition="middleware.baremetal.MIMXRT1064" path="middleware/usb/osa" target_path="osa" type="c_include">
        <files mask="usb_osa_bm.h"/>
      </source>
      <source condition="middleware.amazon_freertos.freertos.MIMXRT1064" path="middleware/usb/osa" target_path="osa" type="src">
        <files mask="usb_osa_freertos.c"/>
      </source>
      <source condition="middleware.amazon_freertos.freertos.MIMXRT1064" path="middleware/usb/osa" target_path="osa" type="c_include">
        <files mask="usb_osa_freertos.h"/>
      </source>
      <source path="middleware/usb/phy" target_path="usb/phy" type="src">
        <files mask="usb_phy.c"/>
      </source>
      <source path="middleware/usb/phy" target_path="usb/phy" type="c_include">
        <files mask="usb_phy.h"/>
      </source>
    </component>
    <component id="middleware.wifi_qca.MIMXRT1064" name="wifi_qca" version="2.0.0" revision="1" full_name="QCA400x WiFi" devices="MIMXRT1064xxxxA" category="WiFi/QCA400x WiFi" user_visible="true" type="middleware">
      <source path="middleware/wifi_qca" target_path="wifi_qca/include" type="c_include">
        <files mask="atheros_stack_offload.h"/>
        <files mask="atheros_wifi.h"/>
        <files mask="atheros_wifi_api.h"/>
        <files mask="atheros_wifi_internal.h"/>
        <files mask="qcom_api.h"/>
      </source>
      <source path="middleware/wifi_qca/common_src/api_interface" target_path="wifi_qca/common_src/api_interface" type="src">
        <files mask="api_init.c"/>
        <files mask="api_ioctl.c"/>
        <files mask="api_txrx.c"/>
        <files mask="api_wmi_rx.c"/>
      </source>
      <source path="middleware/wifi_qca/common_src/bmi" target_path="wifi_qca/common_src/bmi" type="src">
        <files mask="bmi.c"/>
      </source>
      <source path="middleware/wifi_qca/common_src/driver" target_path="wifi_qca/common_src/driver" type="src">
        <files mask="driver_diag.c"/>
        <files mask="driver_init.c"/>
        <files mask="driver_main.c"/>
        <files mask="driver_netbuf.c"/>
        <files mask="driver_txrx.c"/>
      </source>
      <source path="middleware/wifi_qca/common_src/hcd" target_path="wifi_qca/common_src/hcd" type="c_include">
        <files mask="hcd_api.h"/>
      </source>
      <source path="middleware/wifi_qca/common_src/hcd" target_path="wifi_qca/common_src/htc" type="src">
        <files mask="spi_hcd.c"/>
      </source>
      <source path="middleware/wifi_qca/common_src/htc" target_path="wifi_qca/common_src/htc" type="src">
        <files mask="htc.c"/>
      </source>
      <source path="middleware/wifi_qca/common_src/hw_interface" target_path="wifi_qca/common_src/hw_interface" type="src">
        <files mask="hw_api.c"/>
      </source>
      <source path="middleware/wifi_qca/common_src/include" target_path="wifi_qca/common_src/include" type="c_include">
        <files mask="a_debug.h"/>
        <files mask="a_drv.h"/>
        <files mask="a_drv_api.h"/>
        <files mask="aggr_recv_api.h"/>
        <files mask="bmi.h"/>
        <files mask="common_api.h"/>
        <files mask="dbglog_api.h"/>
        <files mask="driver_cxt.h"/>
        <files mask="dset.h"/>
        <files mask="dset_api.h"/>
        <files mask="hif_internal.h"/>
        <files mask="htc_api.h"/>
        <files mask="ieee80211.h"/>
        <files mask="netbuf.h"/>
        <files mask="spi_hcd_if.h"/>
        <files mask="wlan_api.h"/>
        <files mask="wmi_api.h"/>
      </source>
      <source path="middleware/wifi_qca/common_src/qapi" target_path="wifi_qca/common_src/qapi" type="src">
        <files mask="qcom_api.c"/>
        <files mask="qcom_dns.c"/>
        <files mask="qcom_legacy.c"/>
      </source>
      <source path="middleware/wifi_qca/common_src/reorder" target_path="wifi_qca/common_src/reorder" type="src">
        <files mask="rcv_aggr.c"/>
      </source>
      <source path="middleware/wifi_qca/common_src/stack_common" target_path="wifi_qca/common_src/qapi" type="src">
        <files mask="api_stack_offload.c"/>
      </source>
      <source path="middleware/wifi_qca/common_src/stack_common" target_path="wifi_qca/common_src/stack_common" type="c_include">
        <files mask="common_stack_offload.h"/>
      </source>
      <source path="middleware/wifi_qca/common_src/storerecall" target_path="wifi_qca/common_src/storerecall" type="src">
        <files mask="dset.c"/>
        <files mask="storerecall.c"/>
      </source>
      <source path="middleware/wifi_qca/common_src/storerecall" target_path="wifi_qca/common_src/stack_common" type="src">
        <files mask="dset_api.c"/>
      </source>
      <source path="middleware/wifi_qca/common_src/util" target_path="wifi_qca/common_src/util" type="src">
        <files mask="util.c"/>
      </source>
      <source path="middleware/wifi_qca/common_src/wmi" target_path="wifi_qca/common_src/wmi" type="src">
        <files mask="wmi.c"/>
      </source>
      <source path="middleware/wifi_qca/common_src/wmi" target_path="wifi_qca/common_src/wmi" type="c_include">
        <files mask="wmi_host.h"/>
      </source>
      <source path="middleware/wifi_qca/custom_src/api_interface" target_path="wifi_qca/custom_src/api_interface" type="src">
        <files mask="cust_api_init.c"/>
        <files mask="cust_api_ioctl.c"/>
        <files mask="cust_api_txrx.c"/>
        <files mask="cust_api_wmi_rx.c"/>
      </source>
      <source path="middleware/wifi_qca/custom_src/driver" target_path="wifi_qca/custom_src/driver" type="src">
        <files mask="cust_driver_main.c"/>
        <files mask="cust_driver_netbuf.c"/>
      </source>
      <source path="middleware/wifi_qca/custom_src/hw_interface" target_path="wifi_qca/custom_src/hw_interface" type="src">
        <files mask="cust_spi_hcd.c"/>
      </source>
      <source path="middleware/wifi_qca/custom_src/include" target_path="wifi_qca/custom_src/include" type="c_include">
        <files mask="a_config.h"/>
        <files mask="a_osapi.h"/>
        <files mask="a_types.h"/>
        <files mask="cust_netbuf.h"/>
        <files mask="custom_wlan_api.h"/>
        <files mask="wlan_config.h"/>
      </source>
      <source path="middleware/wifi_qca/custom_src/qapi" target_path="wifi_qca/custom_src/qapi" type="src">
        <files mask="custom_qcom_api.c"/>
      </source>
      <source path="middleware/wifi_qca/custom_src/stack_custom" target_path="wifi_qca/custom_src/stack_custom" type="src">
        <files mask="cust_api_stack_offload.c"/>
        <files mask="cust_api_stack_txrx.c"/>
      </source>
      <source path="middleware/wifi_qca/custom_src/stack_custom" target_path="wifi_qca/custom_src/stack_custom" type="c_include">
        <files mask="custom_stack_offload.h"/>
        <files mask="qca_structs.h"/>
      </source>
      <source path="middleware/wifi_qca/include/AR6002" target_path="wifi_qca/include/AR6002" type="c_include">
        <files mask="AR6K_version.h"/>
      </source>
      <source path="middleware/wifi_qca/include/AR6002/hw2.0/hw" target_path="wifi_qca/include/AR6002/hw2.0/hw" type="c_include">
        <files mask="hw20_apb_map.h"/>
        <files mask="hw20_gpio_reg.h"/>
        <files mask="hw20_mbox_host_reg.h"/>
        <files mask="hw20_mbox_reg.h"/>
        <files mask="hw20_rtc_reg.h"/>
        <files mask="hw20_si_reg.h"/>
        <files mask="hw20_uart_reg.h"/>
        <files mask="hw20_vmc_reg.h"/>
      </source>
      <source path="middleware/wifi_qca/include/AR6002/hw4.0/hw" target_path="wifi_qca/include/AR6002/hw4.0/hw" type="c_include">
        <files mask="hw40_rtc_reg.h"/>
        <files mask="hw40_rtc_wlan_reg.h"/>
      </source>
      <source path="middleware/wifi_qca/include" target_path="wifi_qca/include" type="c_include">
        <files mask="athdefs.h"/>
        <files mask="bmi_msg.h"/>
        <files mask="dbglog.h"/>
        <files mask="dbglog_id.h"/>
        <files mask="htc.h"/>
        <files mask="htc_services.h"/>
        <files mask="p2p.h"/>
        <files mask="pkt_log.h"/>
        <files mask="pmu.h"/>
        <files mask="targaddrs.h"/>
        <files mask="wlan_defs.h"/>
        <files mask="wmi.h"/>
      </source>
      <source path="middleware/wifi_qca/port" target_path="wifi_qca/port" type="c_include">
        <files mask="wifi_common.h"/>
        <files mask="wifi_shield_common.h"/>
      </source>
    </component>
    <component id="middleware.wifi_qca.evkmimxrt1064.freertos.shields.MIMXRT1064" name="shields" version="1.0.0" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.wifi_qca.MIMXRT1064 middleware.wifi_qca.freertos.MIMXRT1064 middleware.wifi_qca.freertos.drivers.lpspi_edma.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064 platform.drivers.dmamux.MIMXRT1064 platform.drivers.edma.MIMXRT1064 platform.drivers.igpio.MIMXRT1064 platform.drivers.lpspi.MIMXRT1064 platform.drivers.lpspi_edma.MIMXRT1064" category="WiFi/QCA400x WiFi" user_visible="false" type="other">
      <source path="middleware/wifi_qca/port/boards/evkmimxrt1064/freertos" target_path="wifi_qca/port/shields" type="src">
        <files mask="wifi_shield.c"/>
      </source>
      <source path="middleware/wifi_qca/port/boards/evkmimxrt1064/freertos" target_path="wifi_qca/port/shields" type="c_include">
        <files mask="wifi_shield.h"/>
      </source>
    </component>
    <component id="middleware.wifi_qca.evkmimxrt1064.freertos.shields.silex2401.MIMXRT1064" name="silex2401" version="1.0.0" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.wifi_qca.MIMXRT1064 middleware.wifi_qca.evkmimxrt1064.freertos.shields.MIMXRT1064 middleware.wifi_qca.freertos.MIMXRT1064 middleware.wifi_qca.freertos.drivers.lpspi_edma.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064 platform.drivers.dmamux.MIMXRT1064 platform.drivers.edma.MIMXRT1064 platform.drivers.igpio.MIMXRT1064 platform.drivers.lpspi.MIMXRT1064 platform.drivers.lpspi_edma.MIMXRT1064" category="WiFi/QCA400x WiFi" user_visible="false" type="other">
      <source path="middleware/wifi_qca/port/boards/evkmimxrt1064/freertos/silex2401" target_path="wifi_qca/port/shields/silex2401" type="c_include">
        <files mask="wifi_shield_silex2401.h"/>
      </source>
    </component>
    <component id="middleware.wifi_qca.freertos.MIMXRT1064" name="freertos" version="1.0.0" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.freertos.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.wifi_qca.MIMXRT1064" category="WiFi/QCA400x WiFi" user_visible="false" type="other">
      <source path="middleware/wifi_qca/port/env/freertos" target_path="wifi_qca/port/env/freertos" type="src">
        <files mask="wifi_env.c"/>
      </source>
      <source path="middleware/wifi_qca/port/env/freertos" target_path="wifi_qca/port/env/freertos" type="c_include">
        <files mask="wifi_env.h"/>
        <files mask="wifi_env_port.h"/>
        <files mask="wifi_port.h"/>
      </source>
    </component>
    <component id="middleware.wifi_qca.freertos.drivers.lpspi_edma.MIMXRT1064" name="lpspi_edma" version="1.0.0" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 middleware.amazon_freertos.freertos.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.wifi_qca.MIMXRT1064 middleware.wifi_qca.freertos.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064 platform.drivers.dmamux.MIMXRT1064 platform.drivers.edma.MIMXRT1064 platform.drivers.lpspi.MIMXRT1064 platform.drivers.lpspi_edma.MIMXRT1064" category="WiFi/QCA400x WiFi" user_visible="false" type="other">
      <source path="middleware/wifi_qca/port/drivers/lpspi_edma_freertos" target_path="wifi_qca/port/drivers/lpspi_edma_freertos" type="src">
        <files mask="wifi_spi.c"/>
      </source>
      <source path="middleware/wifi_qca/port/drivers/lpspi_edma_freertos" target_path="wifi_qca/port/drivers/lpspi_edma_freertos" type="c_include">
        <files mask="wifi_spi.h"/>
      </source>
    </component>
    <component id="middleware.wifi_wiced.43012.MIMXRT1064" name="wifi_wiced_43012" version="1.0.0" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.freertos.MIMXRT1064 middleware.sdmmc.common.MIMXRT1064 middleware.sdmmc.sdio.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.wifi_wiced.common.MIMXRT1064" user_visible="false" type="other">
      <source path="middleware/wiced/43xxx_Wi-Fi/WICED/WWD/internal/chips/43012" target_path="43xxx_wifi/WICED/WWD/internal/chips/43012" type="c_include">
        <files mask="43012.h"/>
        <files mask="43012_clm.h"/>
        <files mask="chip_constants.h"/>
        <files mask="resources.h"/>
      </source>
      <source path="middleware/wiced/43xxx_Wi-Fi/WICED/WWD/internal/chips/43012" target_path="43xxx_wifi/WICED/WWD/internal/chips/43012" type="src">
        <files mask="resources.c"/>
        <files mask="wwd_ap.c"/>
        <files mask="wwd_chip_specific_functions.c"/>
      </source>
    </component>
    <component id="middleware.wifi_wiced.4343W.MIMXRT1064" name="wifi_wiced_4343W" version="1.0.0" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.freertos.MIMXRT1064 middleware.sdmmc.common.MIMXRT1064 middleware.sdmmc.sdio.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.wifi_wiced.common.MIMXRT1064" user_visible="false" type="other">
      <source path="middleware/wiced/43xxx_Wi-Fi/WICED/WWD/internal/chips/4343W" target_path="43xxx_wifi/WICED/WWD/internal/chips/4343W" type="c_include">
        <files mask="4343WA1.h"/>
        <files mask="4343WA1_clm.h"/>
        <files mask="4343WA1_clm_mfg.h"/>
        <files mask="4343WA1_mfg.h"/>
        <files mask="chip_constants.h"/>
        <files mask="resources.h"/>
      </source>
      <source path="middleware/wiced/43xxx_Wi-Fi/WICED/WWD/internal/chips/4343W" target_path="43xxx_wifi/WICED/WWD/internal/chips/4343W" type="src">
        <files mask="resources.c"/>
        <files mask="wwd_ap.c"/>
        <files mask="wwd_chip_specific_functions.c"/>
      </source>
    </component>
    <component id="middleware.wifi_wiced.CYW943012CREF.MIMXRT1064" name="wifi_wiced_CYW943012CREF" version="1.0.0" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.freertos.MIMXRT1064 middleware.sdmmc.common.MIMXRT1064 middleware.sdmmc.sdio.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.wifi_wiced.43012.MIMXRT1064 middleware.wifi_wiced.common.MIMXRT1064" user_visible="false" type="other">
      <source path="middleware/wiced/43xxx_Wi-Fi/platforms/CYW943012CREF" target_path="43xxx_wifi/platforms/CYW943012CREF" type="c_include">
        <files mask="wifi_nvram_image.h"/>
      </source>
    </component>
    <component id="middleware.wifi_wiced.MURATA_TYPE1DX.MIMXRT1064" name="wifi_wiced_MURATA_TYPE1DX" version="1.0.0" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.freertos.MIMXRT1064 middleware.sdmmc.common.MIMXRT1064 middleware.sdmmc.sdio.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.wifi_wiced.4343W.MIMXRT1064 middleware.wifi_wiced.common.MIMXRT1064" user_visible="false" type="other">
      <source path="middleware/wiced/43xxx_Wi-Fi/platforms/MURATA_TYPE1DX" target_path="43xxx_wifi/platforms/MURATA_TYPE1DX" type="c_include">
        <files mask="wifi_nvram_image.h"/>
      </source>
    </component>
    <component id="middleware.wifi_wiced.app.MIMXRT1064" name="wifi_wiced_app" version="1.0.0" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.freertos.MIMXRT1064 middleware.sdmmc.common.MIMXRT1064 middleware.sdmmc.sdio.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.wifi_wiced.common.MIMXRT1064" user_visible="false" type="other">
      <source path="middleware/wiced/43xxx_Wi-Fi/app" target_path="43xxx_wifi/app" type="src">
        <files mask="dhcp_server.c"/>
        <files mask="test_apsta.c"/>
        <files mask="test_scan.c"/>
        <files mask="wlanif_add.c"/>
      </source>
      <source path="middleware/wiced/43xxx_Wi-Fi/app" target_path="43xxx_wifi/app" type="c_include">
        <files mask="dhcp_server.h"/>
      </source>
    </component>
    <component id="middleware.wifi_wiced.common.MIMXRT1064" name="wifi_wiced" version="1.0.0" full_name="Cypress WICED framework" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.freertos.MIMXRT1064 middleware.sdmmc.common.MIMXRT1064 middleware.sdmmc.sdio.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064" user_visible="false" type="middleware">
      <source path="middleware/wiced/43xxx_Wi-Fi/WICED/RTOS/FreeRTOS/WWD" target_path="43xxx_wifi/WICED/RTOS/FreeRTOS/WWD" type="c_include">
        <files mask="wwd_FreeRTOS_systick.h"/>
        <files mask="wwd_rtos.h"/>
      </source>
      <source path="middleware/wiced/43xxx_Wi-Fi/WICED/RTOS/FreeRTOS/WWD" target_path="43xxx_wifi/WICED/RTOS/FreeRTOS/WWD" type="src">
        <files mask="wwd_rtos.c"/>
      </source>
      <source path="middleware/wiced/43xxx_Wi-Fi/WICED/WWD/include/RTOS" target_path="43xxx_wifi/WICED/WWD/include/RTOS" type="c_include">
        <files mask="wwd_rtos_interface.h"/>
      </source>
      <source path="middleware/wiced/43xxx_Wi-Fi/WICED/WWD/include/network" target_path="43xxx_wifi/WICED/WWD/include/network" type="c_include">
        <files mask="wwd_buffer_interface.h"/>
        <files mask="wwd_network_constants.h"/>
        <files mask="wwd_network_interface.h"/>
      </source>
      <source path="middleware/wiced/43xxx_Wi-Fi/WICED/WWD/include/platform" target_path="43xxx_wifi/WICED/WWD/include/platform" type="c_include">
        <files mask="wwd_bus_interface.h"/>
        <files mask="wwd_platform_interface.h"/>
        <files mask="wwd_resource_interface.h"/>
        <files mask="wwd_sdio_interface.h"/>
        <files mask="wwd_spi_interface.h"/>
      </source>
      <source path="middleware/wiced/43xxx_Wi-Fi/WICED/WWD/include" target_path="43xxx_wifi/WICED/WWD/include" type="c_include">
        <files mask="wwd_assert.h"/>
        <files mask="wwd_constants.h"/>
        <files mask="wwd_debug.h"/>
        <files mask="wwd_eapol.h"/>
        <files mask="wwd_events.h"/>
        <files mask="wwd_management.h"/>
        <files mask="wwd_poll.h"/>
        <files mask="wwd_structures.h"/>
        <files mask="wwd_wifi.h"/>
        <files mask="wwd_wifi_sleep.h"/>
        <files mask="wwd_wlioctl.h"/>
      </source>
      <source path="middleware/wiced/43xxx_Wi-Fi/WICED/WWD/internal/bus_protocols/SDIO" target_path="43xxx_wifi/WICED/WWD/internal/bus_protocols/SDIO" type="src">
        <files mask="wwd_bus_protocol.c"/>
      </source>
      <source path="middleware/wiced/43xxx_Wi-Fi/WICED/WWD/internal/bus_protocols/SDIO" target_path="43xxx_wifi/WICED/WWD/internal/bus_protocols/SDIO" type="c_include">
        <files mask="wwd_bus_protocol.h"/>
      </source>
      <source path="middleware/wiced/43xxx_Wi-Fi/WICED/WWD/internal/bus_protocols" target_path="43xxx_wifi/WICED/WWD/internal/bus_protocols" type="src">
        <files mask="wwd_bus_common.c"/>
      </source>
      <source path="middleware/wiced/43xxx_Wi-Fi/WICED/WWD/internal/bus_protocols" target_path="43xxx_wifi/WICED/WWD/internal/bus_protocols" type="c_include">
        <files mask="wwd_bus_protocol_interface.h"/>
      </source>
      <source path="middleware/wiced/43xxx_Wi-Fi/WICED/WWD/internal" target_path="43xxx_wifi/WICED/WWD/internal" type="src">
        <files mask="tlv.c"/>
        <files mask="wwd_ap_common.c"/>
        <files mask="wwd_clm.c"/>
        <files mask="wwd_debug.c"/>
        <files mask="wwd_eapol.c"/>
        <files mask="wwd_internal.c"/>
        <files mask="wwd_management.c"/>
        <files mask="wwd_rtos_interface.c"/>
        <files mask="wwd_sdpcm.c"/>
        <files mask="wwd_thread.c"/>
        <files mask="wwd_thread_internal.c"/>
        <files mask="wwd_wifi.c"/>
        <files mask="wwd_wifi_chip_common.c"/>
        <files mask="wwd_wifi_sleep.c"/>
      </source>
      <source path="middleware/wiced/43xxx_Wi-Fi/WICED/WWD/internal" target_path="43xxx_wifi/WICED/WWD/internal" type="c_include">
        <files mask="tlv.h"/>
        <files mask="wwd_ap.h"/>
        <files mask="wwd_ap_common.h"/>
        <files mask="wwd_bcmendian.h"/>
        <files mask="wwd_clm.h"/>
        <files mask="wwd_internal.h"/>
        <files mask="wwd_logging.h"/>
        <files mask="wwd_sdpcm.h"/>
        <files mask="wwd_thread.h"/>
        <files mask="wwd_thread_internal.h"/>
        <files mask="wwd_wifi_chip_common.h"/>
      </source>
      <source path="middleware/wiced/43xxx_Wi-Fi/WICED/WWD" target_path="43xxx_wifi/WICED/WWD" type="c_include">
        <files mask="wwd.h"/>
        <files mask="wwd_wiced.h"/>
      </source>
      <source path="middleware/wiced/43xxx_Wi-Fi/WICED/internal" target_path="43xxx_wifi/internal" type="src">
        <files mask="wifi.c"/>
      </source>
      <source path="middleware/wiced/43xxx_Wi-Fi/WICED/network/LwIP/WWD" target_path="43xxx_wifi/WICED/network/LwIP/WWD" type="src">
        <files mask="wwd_buffer.c"/>
        <files mask="wwd_network.c"/>
      </source>
      <source path="middleware/wiced/43xxx_Wi-Fi/WICED/network/LwIP/WWD" target_path="43xxx_wifi/WICED/network/LwIP/WWD" type="c_include">
        <files mask="wwd_buffer.h"/>
        <files mask="wwd_network.h"/>
      </source>
      <source path="middleware/wiced/43xxx_Wi-Fi/WICED/platform/MCU/LPC/WWD" target_path="43xxx_wifi/WICED/platform/MCU/LPC/WWD" type="src">
        <files mask="wwd_SDIO.c"/>
        <files mask="wwd_platform.c"/>
      </source>
      <source path="middleware/wiced/43xxx_Wi-Fi/WICED/platform/MCU/LPC" target_path="43xxx_wifi/WICED/platform/MCU/LPC" type="c_include">
        <files mask="platform_mcu_peripheral.h"/>
      </source>
      <source path="middleware/wiced/43xxx_Wi-Fi/WICED/platform/MCU" target_path="43xxx_wifi/WICED/platform/MCU" type="c_include">
        <files mask="wwd_platform_common.h"/>
      </source>
      <source path="middleware/wiced/43xxx_Wi-Fi/WICED/platform/MCU" target_path="43xxx_wifi/WICED/platform/MCU" type="src">
        <files mask="wwd_platform_separate_mcu.c"/>
        <files mask="wwd_resources.c"/>
      </source>
      <source path="middleware/wiced/43xxx_Wi-Fi/WICED/platform/include" target_path="43xxx_wifi/WICED/platform/include" type="c_include">
        <files mask="platform_cache_def.h"/>
        <files mask="platform_peripheral.h"/>
      </source>
      <source path="middleware/wiced/43xxx_Wi-Fi/WICED/platform" target_path="43xxx_wifi/WICED/platform" type="c_include">
        <files mask="platform_toolchain.h"/>
      </source>
      <source path="middleware/wiced/43xxx_Wi-Fi" target_path="43xxx_wifi" type="src">
        <files mask="generated_mac_address.txt"/>
      </source>
      <source path="middleware/wiced/43xxx_Wi-Fi/include" target_path="43xxx_wifi/include" type="c_include">
        <files mask="wiced_resource.h"/>
      </source>
      <source exclude="true" path="middleware/wiced" target_path="43xxx_wifi" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
      </source>
    </component>
    <component id="middleware.wifi_wiced.wl_tool.MIMXRT1064" name="wifi_wiced_wl_tool" version="1.0.0" devices="MIMXRT1064xxxxA" dependency="middleware.amazon_freertos.freertos.MIMXRT1064 middleware.sdmmc.common.MIMXRT1064 middleware.sdmmc.sdio.MIMXRT1064 middleware.template_application.amazon_freertos.MIMXRT1064 middleware.wifi_wiced.common.MIMXRT1064" user_visible="true" type="other">
      <source path="middleware/wiced/43xxx_Wi-Fi/libraries/test/wl_tool/4343WA1/common/include/devctrl_if" target_path="43xxx_wifi/libraries/test/wl_tool/4343WA1/common/include/devctrl_if" type="c_include">
        <files mask="phyioctl_defs.h"/>
        <files mask="wlioctl_defs.h"/>
      </source>
      <source path="middleware/wiced/43xxx_Wi-Fi/libraries/test/wl_tool/4343WA1/common/include/proto" target_path="43xxx_wifi/libraries/test/wl_tool/4343WA1/common/include/proto" type="c_include">
        <files mask="802.11.h"/>
        <files mask="802.11e.h"/>
        <files mask="802.1d.h"/>
        <files mask="bcmeth.h"/>
        <files mask="bcmevent.h"/>
        <files mask="bcmip.h"/>
        <files mask="bcmipv6.h"/>
        <files mask="ethernet.h"/>
        <files mask="vlan.h"/>
        <files mask="wpa.h"/>
        <files mask="wps.h"/>
      </source>
      <source path="middleware/wiced/43xxx_Wi-Fi/libraries/test/wl_tool/4343WA1/include" target_path="43xxx_wifi/libraries/test/wl_tool/4343WA1/include" type="c_include">
        <files mask="bcm_cfg.h"/>
        <files mask="bcm_mpool_pub.h"/>
        <files mask="bcmcdc.h"/>
        <files mask="bcmdefs.h"/>
        <files mask="bcmdevs.h"/>
        <files mask="bcmendian.h"/>
        <files mask="bcmnvram.h"/>
        <files mask="bcmsrom_fmt.h"/>
        <files mask="bcmsrom_tbl.h"/>
        <files mask="bcmstdlib.h"/>
        <files mask="bcmutils.h"/>
        <files mask="dhdioctl.h"/>
        <files mask="epictrl.h"/>
        <files mask="epiioctl.h"/>
        <files mask="epivers.h"/>
        <files mask="irelay.h"/>
        <files mask="miniopt.h"/>
        <files mask="packed_section_end.h"/>
        <files mask="packed_section_start.h"/>
        <files mask="sbpcmcia.h"/>
        <files mask="trxhdr.h"/>
        <files mask="typedefs.h"/>
        <files mask="usbrdl.h"/>
        <files mask="wl_drv.h"/>
        <files mask="wlioctl.h"/>
      </source>
      <source path="middleware/wiced/43xxx_Wi-Fi/libraries/test/wl_tool/4343WA1/shared/bcmwifi/include" target_path="43xxx_wifi/libraries/test/wl_tool/4343WA1/shared/bcmwifi/include" type="c_include">
        <files mask="bcmwifi_channels.h"/>
        <files mask="bcmwifi_rates.h"/>
      </source>
      <source path="middleware/wiced/43xxx_Wi-Fi/libraries/test/wl_tool/4343WA1/wl/exe" target_path="43xxx_wifi/libraries/test/wl_tool/4343WA1/wl/exe" type="c_include">
        <files mask="wlu.h"/>
        <files mask="wlu_client_shared.h"/>
        <files mask="wlu_cmd.h"/>
        <files mask="wlu_common.h"/>
        <files mask="wlu_pipe.h"/>
        <files mask="wlu_remote.h"/>
        <files mask="wlu_server_shared.h"/>
      </source>
      <source path="middleware/wiced/43xxx_Wi-Fi/libraries/test/wl_tool/4343WA1/wl/exe" target_path="43xxx_wifi/libraries/test/wl_tool/4343WA1/wl/exe" type="src">
        <files mask="wlu_pipe.c"/>
        <files mask="wlu_server_shared.c"/>
      </source>
      <source path="middleware/wiced/43xxx_Wi-Fi/libraries/test/wl_tool/dummy/arpa" target_path="43xxx_wifi/libraries/test/wl_tool/dummy/arpa" type="c_include">
        <files mask="inet.h"/>
      </source>
      <source path="middleware/wiced/43xxx_Wi-Fi/libraries/test/wl_tool/dummy/net" target_path="43xxx_wifi/libraries/test/wl_tool/dummy/net" type="c_include">
        <files mask="if.h"/>
      </source>
      <source path="middleware/wiced/43xxx_Wi-Fi/libraries/test/wl_tool/dummy" target_path="43xxx_wifi/libraries/test/wl_tool/dummy" type="c_include">
        <files mask="netdb.h"/>
        <files mask="ntddndis.h"/>
        <files mask="nuiouser.h"/>
      </source>
      <source path="middleware/wiced/43xxx_Wi-Fi/libraries/test/wl_tool/dummy/sys" target_path="43xxx_wifi/libraries/test/wl_tool/dummy/sys" type="c_include">
        <files mask="socket.h"/>
      </source>
      <source path="middleware/wiced/43xxx_Wi-Fi/libraries/test/wl_tool" target_path="43xxx_wifi/libraries/test/wl_tool" type="other">
        <files mask="wl4343WA1.exe"/>
      </source>
      <source path="middleware/wiced/43xxx_Wi-Fi/libraries/test/wl_tool" target_path="43xxx_wifi/libraries/test/wl_tool" type="c_include">
        <files mask="wl_tool.h"/>
      </source>
      <source path="middleware/wiced/43xxx_Wi-Fi/libraries/test/wl_tool" target_path="43xxx_wifi/libraries/test/wl_tool" type="src">
        <files mask="wlu_server.c"/>
      </source>
      <include_paths>
        <include_path path="43xxx_wifi/libraries/test/wl_tool/4343WA1/common/include"/>
      </include_paths>
    </component>
    <component id="platform.utilities.misc_utilities.MIMXRT1064" name="misc_utilities" brief="Utilities which is needed for particular toolchain like the SBRK function required to address limitation between HEAP and STACK in GCC toolchain library." version="1.0.0" devices="MIMXRT1064xxxxA" user_visible="true" type="utilities">
      <source toolchain="armgcc" path="devices/MIMXRT1064/utilities" target_path="utilities" type="src">
        <files mask="fsl_sbrk.c"/>
      </source>
    </component>
    <component id="platform.utilities.assert.MIMXRT1064" name="assert" version="1.0.0" devices="MIMXRT1064xxxxA" dependency="component.lists.MIMXRT1064 component.serial_manager.MIMXRT1064 device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064 utility.debug_console.MIMXRT1064" user_visible="true" type="utilities">
      <source path="devices/MIMXRT1064/utilities" target_path="utilities" type="src">
        <files mask="fsl_assert.c"/>
      </source>
    </component>
    <component id="utility.debug_console.MIMXRT1064" name="debug_console" version="1.0.0" devices="MIMXRT1064xxxxA" dependency="component.lists.MIMXRT1064 component.serial_manager.MIMXRT1064 device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="utilities">
      <source path="devices/MIMXRT1064/utilities/debug_console" target_path="utilities" type="src">
        <files mask="fsl_debug_console.c"/>
      </source>
      <source path="devices/MIMXRT1064/utilities/debug_console" target_path="utilities" type="c_include">
        <files mask="fsl_debug_console.h"/>
        <files mask="fsl_debug_console_conf.h"/>
      </source>
      <source path="devices/MIMXRT1064/utilities/str" target_path="utilities" type="src">
        <files mask="fsl_str.c"/>
      </source>
      <source path="devices/MIMXRT1064/utilities/str" target_path="utilities" type="c_include">
        <files mask="fsl_str.h"/>
      </source>
    </component>
    <component id="platform.utilities.notifier.MIMXRT1064" name="notifier" version="1.0.0" devices="MIMXRT1064xxxxA" dependency="device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064" user_visible="true" type="utilities">
      <source path="devices/MIMXRT1064/utilities" target_path="utilities/utilities" type="src">
        <files mask="fsl_notifier.c"/>
      </source>
      <source path="devices/MIMXRT1064/utilities" target_path="utilities/utilities" type="c_include">
        <files mask="fsl_notifier.h"/>
      </source>
    </component>
    <component id="utility.shell.MIMXRT1064" name="shell" version="1.0.0" devices="MIMXRT1064xxxxA" dependency="component.lists.MIMXRT1064 component.serial_manager.MIMXRT1064 device.MIMXRT1064_CMSIS.MIMXRT1064 platform.Include_common.MIMXRT1064 platform.Include_core_cm7.MIMXRT1064 platform.drivers.clock.MIMXRT1064 platform.drivers.common.MIMXRT1064 utility.debug_console.MIMXRT1064" user_visible="true" type="utilities">
      <source path="devices/MIMXRT1064/utilities" target_path="utilities" type="src">
        <files mask="fsl_shell.c"/>
      </source>
      <source path="devices/MIMXRT1064/utilities" target_path="utilities" type="c_include">
        <files mask="fsl_shell.h"/>
      </source>
    </component>
  </components>
</ksdk:manifest>
