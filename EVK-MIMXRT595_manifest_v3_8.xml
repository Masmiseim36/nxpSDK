<?xml version="1.0" encoding="UTF-8"?>
<ksdk:manifest xmlns:ksdk="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="SDK_2.x_EVK-MIMXRT595" name="EVK-MIMXRT595" brief="This is SDK version 2.9.2 manifest file. It describes the content of the EVK-MIMXRT595 and additional settings for tools that support SDK version 2.9.2" format_version="3.8" api_version="2.0.0" configuration="7bc543a19ed6307ff5e2264225011d53" xsi:schemaLocation="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd http://nxp.com/mcuxpresso/sdk/sdk_manifest_v3.8.xsd">
  <!--Timestamp (UTC): 2021-04-29 16:06:52.577802-->
  <!--This manifest is generated based on sdk repo commit: d93015309d29539624470664dc44f701fae13aca-->
  <defines>
    <define name="CPU_$|package|" value=""/>
    <define name="CPU_$|package|_$|core|" value=""/>
  </defines>
  <externalDefinitions>
    <definition extID="valmimxrt500"/>
  </externalDefinitions>
  <ksdk id="MCUXpresso292" name="MCUXpresso292" version="2.9.2" revision="469 2021-04-29"/>
  <compilers>
    <compiler id="compiler_armclang" name="armclang" type="armclang"/>
    <compiler id="compiler_gcc" name="gcc" type="gcc"/>
    <compiler id="compiler_iar" name="iar" type="iar"/>
  </compilers>
  <toolchainSettings>
    <toolchainSetting id="com.nxp.mcuxpresso" name="mcuxpresso" version="11.3.0" full_name="MCUXpresso IDE" compiler="compiler_gcc" toolchain="mcuxpresso">
      <option id="gnu.cpp.compiler.option.optimization.flags" type="string" user_name="">
        <value>-fno-common</value>
      </option>
      <option id="gnu.c.compiler.option.optimization.flags" type="string" user_name="">
        <value>-fno-common</value>
      </option>
      <option id="gnu.cpp.link.option.nostdlibs" type="boolean" user_name="">
        <value>true</value>
      </option>
      <option id="com.crt.advproject.link.cpp.flashconfigenable" type="boolean" user_name="">
        <value>true</value>
      </option>
      <option id="com.crt.advproject.link.flashconfigenable" type="boolean" user_name="">
        <value>true</value>
      </option>
      <option id="gnu.c.link.option.nostdlibs" type="boolean" user_name="">
        <value>true</value>
      </option>
    </toolchainSetting>
  </toolchainSettings>
  <toolchains>
    <toolchain id="armgcc" name="GCC_ARM_Embedded" version="9.3.1" full_name="GCC ARM Embedded" compiler="compiler_gcc" type="armgcc" vendor="GCC ARM Embedded" vendor_url="http://launchpad.net/gcc-arm-embedded"/>
    <toolchain id="mdk" name="Keil_MDK" version="5.33" full_name="Keil MDK" compiler="compiler_armclang" type="mdk" vendor="ARM" vendor_url="http://www.arm.com"/>
    <toolchain id="iar" name="IAR_Embedded_Workbench_for_ARM" version="8.50.9" full_name="IAR Embedded Workbench for ARM" compiler="compiler_iar" type="iar" vendor="IAR Systems" vendor_url="http://www.iar.com"/>
    <toolchain id="mcuxpresso" name="MCUXpresso_IDE" version="11.3.0" full_name="MCUXpresso IDE" compiler="compiler_gcc" type="mcuxpresso" vendor="NXP Semiconductors" vendor_url="http://www.nxp.com">
      <debug>
        <debug_configuration id="com.crt.advproject.config.exe.release" name="Release Configuration" probe="LinkServer">
          <scripts>
            <script type="init" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>
set remotetimeout 60000
##target_extended_remote##
set mem inaccessible-by-default ${mem.access}
mon ondisconnect ${ondisconnect}
set arm force-mode thumb
${load}</script>
            </script>
            <script type="run" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>${run}</script>
            </script>
          </scripts>
          <params>
            <params id="vector.catch.release.mcuxpresso" name="vector.catch" value="false"/>
            <params id="internal.cache.release.mcuxpresso" name="internal.cache" value="Disable"/>
          </params>
        </debug_configuration>
        <debug_configuration id="com.crt.advproject.config.exe.debug" name="Debug Configuration" probe="LinkServer">
          <scripts>
            <script type="init" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>
set remotetimeout 60000
##target_extended_remote##
set mem inaccessible-by-default ${mem.access}
mon ondisconnect ${ondisconnect}
set arm force-mode thumb
${load}</script>
            </script>
            <script type="run" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>${run}</script>
            </script>
          </scripts>
          <params>
            <params id="vector.catch.debug.mcuxpresso" name="vector.catch" value="false"/>
            <params id="internal.cache.debug.mcuxpresso" name="internal.cache" value="Disable"/>
          </params>
        </debug_configuration>
        <debug_configuration id="com.nxp.mcuxpresso.core.debug.support.segger.debug" name="Debug Configuration" probe="Segger"/>
        <debug_configuration id="com.nxp.mcuxpresso.core.debug.support.segger.release" name="Release Configuration" probe="Segger"/>
      </debug>
    </toolchain>
  </toolchains>
  <boards>
    <board id="evkmimxrt595" name="EVK-MIMXRT595" href="" version="1.0.0" package="MIMXRT595SFFOC">
      <description>IMXRTRT595-EVKB: EVK Development Platform for i.MX MIMXRT595S MCUs</description>
      <image path="boards/evkmimxrt595" type="image">
        <files mask="evkmimxrt595.png"/>
      </image>
      <memory>
        <memoryBlock id="QSPI_FLASH_evkmimxrt595" name="QSPI_FLASH" addr="08000000" size="00800000" type="ExtFlash" access="RO"/>
      </memory>
      <examples>
        <example id="evkmimxrt595_acmp_interrupt" name="acmp_interrupt" brief="The ACMP interrupt project is a simple demonstration program that uses the SDK software. It comparesthe selected analog input with ACMP internal DAC output continuously and toggle the LED when thefinal comparison result changed. The purpose of this demo is to show how to use the ACMP driverin SDK software by interrupt way. The ACMP can be configured based on default configuration returnedby the API ACMP_GetDefaultConfig(). The default configuration is: high speed is not enabled, invertoutput is not enabled, unfiltered output is not enabled, pin out is not enabled, offset level islevel 0, hysteresis level is level 0." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/acmp" path="boards/evkmimxrt595/driver_examples/acmp/interrupt">
          <external path="boards/evkmimxrt595/driver_examples/acmp/interrupt" type="xml">
            <files mask="acmp_interrupt_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_acmp_polling" name="acmp_polling" brief="The ACMP Polling project is a simple demonstration program that uses the SDK software. It comparesthe selected analog input with ACMP internal DAC output continuously and toggle the LED when thefinal comparison result changed. The purpose of this demo is to show how to use the ACMP driverin SDK software by polling way. The ACMP can be configured based on default configuration returnedby the API ACMP_GetDefaultConfig(). The default configuration is: high speed is not enabled, invertoutput is not enabled, unfiltered output is not enabled, pin out is not enabled, offset level islevel 0, hysteresis level is level 0." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/acmp" path="boards/evkmimxrt595/driver_examples/acmp/polling">
          <external path="boards/evkmimxrt595/driver_examples/acmp/polling" type="xml">
            <files mask="acmp_polling_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_acmp_round_robin" name="acmp_round_robin" brief="The ACMP Round-Robin project is a simple demonstration program that uses the SDK software. User must set the round-robin mode trigger in specific board properly according to the board resource before running the example. When the example running, it sets positive port as fixed channel and internal DAC output as comparison reference in positive port and sets the channels input by useras round-robin checker channel. The example will enter stop mode and wait user to change the voltage of round-robin checker channel. It will exit stop mode after the voltage of round-robin checkerchannel changed by user." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/acmp" path="boards/evkmimxrt595/driver_examples/acmp/round_robin">
          <external path="boards/evkmimxrt595/driver_examples/acmp/round_robin" type="xml">
            <files mask="acmp_round_robin_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_aws_greengrass_discovery_wifi_nxp" name="aws_greengrass_discovery_wifi_nxp" brief="This example demonstrates how the board can discover Greengrass core and communicate with AWS IoT cloud through it. You will need device (A Mac, Windows PC, or UNIX-like system) for running AWS Greengrass. Example will connect to WiFi network, try to discover your AWS Greengrass device and send Hello World message to AWS IoT cloud through it. This demo needs WiFi network with internet access and opened 8883 and 8443 ports." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="aws_examples" path="boards/evkmimxrt595/aws_examples/greengrass_discovery_wifi_nxp">
          <external path="boards/evkmimxrt595/aws_examples/greengrass_discovery_wifi_nxp" type="xml">
            <files mask="aws_greengrass_discovery_wifi_nxp_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_aws_remote_control_wifi_nxp" name="aws_remote_control_wifi_nxp" brief="This example demonstrates how the board can be controlled by Android mobile application with usage the AWS IoT. User LEDs on the board can be controlled and also an action can be invoked to read data from accelerometer and report it to AWS IoT device shadow." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="aws_examples" path="boards/evkmimxrt595/aws_examples/remote_control_wifi_nxp">
          <external path="boards/evkmimxrt595/aws_examples/remote_control_wifi_nxp" type="xml">
            <files mask="aws_remote_control_wifi_nxp_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_aws_shadow_wiced" name="aws_shadow_wiced" brief="The simple Shadow lightbulb example to illustrate how client application and things communicate with the Shadow service." toolchain="armgcc iar mcuxpresso" compiler="compiler_gcc compiler_iar" category="aws_examples" path="boards/evkmimxrt595/aws_examples/shadow_wifi_wiced_4343W">
          <external path="boards/evkmimxrt595/aws_examples/shadow_wifi_wiced_4343W" type="xml">
            <files mask="aws_shadow_wiced_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_aws_shadow_wifi_nxp" name="aws_shadow_wifi_nxp" brief="The simple Shadow lightbulb example to illustrate how client application and things communicate with the Shadow service." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="aws_examples" path="boards/evkmimxrt595/aws_examples/shadow_wifi_nxp">
          <external path="boards/evkmimxrt595/aws_examples/shadow_wifi_nxp" type="xml">
            <files mask="aws_shadow_wifi_nxp_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_aws_tests_wifi_nxp" name="aws_tests_wifi_nxp" brief="The aws_tests application performs set of network and cryptographic tests required by Amazon for certification." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="aws_examples" path="boards/evkmimxrt595/aws_examples/aws_tests_wifi_nxp">
          <external path="boards/evkmimxrt595/aws_examples/aws_tests_wifi_nxp" type="xml">
            <files mask="aws_tests_wifi_nxp_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_casper" name="casper" brief="The CASPER Example project is a demonstration program that uses the KSDK software to calculate RSA." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples" path="boards/evkmimxrt595/driver_examples/casper">
          <external path="boards/evkmimxrt595/driver_examples/casper" type="xml">
            <files mask="casper_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_clock_freertos" name="clock_freertos" brief="This example shows how to use the vglite component. This application draw a clock on the screen." toolchain="armgcc iar mcuxpresso" compiler="compiler_gcc compiler_iar" category="vglite_examples/clock_freertos" path="boards/evkmimxrt595/vglite_examples/clock_freertos">
          <external path="boards/evkmimxrt595/vglite_examples/clock_freertos" type="xml">
            <files mask="clock_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_cmsis_i2c_dma_b2b_transfer_master" name="cmsis_i2c_dma_b2b_transfer_master" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_dma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with DMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/i2c" path="boards/evkmimxrt595/cmsis_driver_examples/i2c/dma_b2b_transfer/master">
          <external path="boards/evkmimxrt595/cmsis_driver_examples/i2c/dma_b2b_transfer/master" type="xml">
            <files mask="cmsis_i2c_dma_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_cmsis_i2c_dma_b2b_transfer_slave" name="cmsis_i2c_dma_b2b_transfer_slave" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_dma_b2b_transfer_slave example shows how to use i2c driver as slave to do board to board transfer with a DMA master:In this example, one i2c instance as slave and another i2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/i2c" path="boards/evkmimxrt595/cmsis_driver_examples/i2c/dma_b2b_transfer/slave">
          <external path="boards/evkmimxrt595/cmsis_driver_examples/i2c/dma_b2b_transfer/slave" type="xml">
            <files mask="cmsis_i2c_dma_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_cmsis_i2c_int_b2b_transfer_master" name="cmsis_i2c_int_b2b_transfer_master" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The i2c_interrupt_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/i2c" path="boards/evkmimxrt595/cmsis_driver_examples/i2c/int_b2b_transfer/master">
          <external path="boards/evkmimxrt595/cmsis_driver_examples/i2c/int_b2b_transfer/master" type="xml">
            <files mask="cmsis_i2c_int_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_cmsis_i2c_int_b2b_transfer_slave" name="cmsis_i2c_int_b2b_transfer_slave" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The i2c_interrupt_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/i2c" path="boards/evkmimxrt595/cmsis_driver_examples/i2c/int_b2b_transfer/slave">
          <external path="boards/evkmimxrt595/cmsis_driver_examples/i2c/int_b2b_transfer/slave" type="xml">
            <files mask="cmsis_i2c_int_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_cmsis_spi_dma_b2b_transfer_master" name="cmsis_spi_dma_b2b_transfer_master" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_spi_dma_b2b_transfer_master example shows how to use spi driver as master to do board to board transfer with DMA:In this example, one spi instance as master and another spi instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/spi" path="boards/evkmimxrt595/cmsis_driver_examples/spi/dma_b2b_transfer/master">
          <external path="boards/evkmimxrt595/cmsis_driver_examples/spi/dma_b2b_transfer/master" type="xml">
            <files mask="cmsis_spi_dma_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_cmsis_spi_dma_b2b_transfer_slave" name="cmsis_spi_dma_b2b_transfer_slave" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_spi_dma_b2b_transfer_slave example shows how to use spi driver as master to do board to board transfer with DMA:In this example, one spi instance as master and another spi instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/spi" path="boards/evkmimxrt595/cmsis_driver_examples/spi/dma_b2b_transfer/slave">
          <external path="boards/evkmimxrt595/cmsis_driver_examples/spi/dma_b2b_transfer/slave" type="xml">
            <files mask="cmsis_spi_dma_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_cmsis_spi_int_b2b_transfer_master" name="cmsis_spi_int_b2b_transfer_master" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_spi_interrupt_b2b_transfer_master example shows how to use CMSIS spi driver as master to do board to board transfer with interrupt:In this example, one spi instance as master and another spi instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/spi" path="boards/evkmimxrt595/cmsis_driver_examples/spi/int_b2b_transfer/master">
          <external path="boards/evkmimxrt595/cmsis_driver_examples/spi/int_b2b_transfer/master" type="xml">
            <files mask="cmsis_spi_int_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_cmsis_spi_int_b2b_transfer_slave" name="cmsis_spi_int_b2b_transfer_slave" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_spi_interrupt_b2b_transfer_slave example shows how to use CMSIS spi driver as master to do board to board transfer with interrupt:In this example, one spi instance as master and another spi instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/spi" path="boards/evkmimxrt595/cmsis_driver_examples/spi/int_b2b_transfer/slave">
          <external path="boards/evkmimxrt595/cmsis_driver_examples/spi/int_b2b_transfer/slave" type="xml">
            <files mask="cmsis_spi_int_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_cmsis_usart_dma_transfer" name="cmsis_usart_dma_transfer" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_edma_transfer example shows how to use uart cmsis  driver with EDMA:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/usart" path="boards/evkmimxrt595/cmsis_driver_examples/usart/dma_transfer">
          <external path="boards/evkmimxrt595/cmsis_driver_examples/usart/dma_transfer" type="xml">
            <files mask="cmsis_usart_dma_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_cmsis_usart_interrupt_transfer" name="cmsis_usart_interrupt_transfer" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_interrupt_transfer example shows how to use uart cmsis driver in interrupt way:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/usart" path="boards/evkmimxrt595/cmsis_driver_examples/usart/interrupt_transfer">
          <external path="boards/evkmimxrt595/cmsis_driver_examples/usart/interrupt_transfer" type="xml">
            <files mask="cmsis_usart_interrupt_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_crc" name="crc" brief="The CRC Example project is a demonstration program that uses the KSDK software to generate checksumsfor an ASCII string. Several CRC protocols are implemented using the CRC driver API." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples" path="boards/evkmimxrt595/driver_examples/crc">
          <external path="boards/evkmimxrt595/driver_examples/crc" type="xml">
            <files mask="crc_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_ctimer_match_example" name="ctimer_match_example" brief="The CTimer Example project is to demonstrate usage of the KSDK ctimer driver.In this example, the match feature of the CTimer is used to toggle the output level." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/ctimer" path="boards/evkmimxrt595/driver_examples/ctimer/simple_match">
          <external path="boards/evkmimxrt595/driver_examples/ctimer/simple_match" type="xml">
            <files mask="ctimer_match_example_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_ctimer_match_interrupt_example" name="ctimer_match_interrupt_example" brief="The Simple Match Interrupt project is to demonstrate usage of the SDK CTimer driver with interrupt callback functionsIn this example the upon match and IO pin connected to the LED is toggled and the timer is reset, so it would generate a square wave.With an interrupt callback the match value is changed frequently in such a way that the frequency of the output square wave is increased gradually." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/ctimer" path="boards/evkmimxrt595/driver_examples/ctimer/simple_match_interrupt">
          <external path="boards/evkmimxrt595/driver_examples/ctimer/simple_match_interrupt" type="xml">
            <files mask="ctimer_match_interrupt_example_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_ctimer_pwm_example" name="ctimer_pwm_example" brief="The CTimer Example project is to demonstrate usage of the KSDK ctimer driver.In this example, CTimer is used to generate a PWM signal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/ctimer" path="boards/evkmimxrt595/driver_examples/ctimer/simple_pwm">
          <external path="boards/evkmimxrt595/driver_examples/ctimer/simple_pwm" type="xml">
            <files mask="ctimer_pwm_example_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_ctimer_pwm_interrupt_example" name="ctimer_pwm_interrupt_example" brief="The Simple PWM Interrupt project is to demonstrate usage of the SDK CTimer driver as a PWM with interrupt callback functionsIn this example an IO pin connected to the LED is used as a PWM output line to generate a PWM signal.With an interrupt callback the PWM duty cycle is changed frequently in such a way that the LED brightness can be varied." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/ctimer" path="boards/evkmimxrt595/driver_examples/ctimer/simple_pwm_interrupt">
          <external path="boards/evkmimxrt595/driver_examples/ctimer/simple_pwm_interrupt" type="xml">
            <files mask="ctimer_pwm_interrupt_example_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_audio_generator_bm" name="dev_audio_generator_bm" brief="The USB Audio Generator application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a recording device and users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_audio_generator/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_audio_generator/bm" type="xml">
            <files mask="dev_audio_generator_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_audio_generator_freertos" name="dev_audio_generator_freertos" brief="The USB Audio Generator application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a recording device and users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_audio_generator/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_audio_generator/freertos" type="xml">
            <files mask="dev_audio_generator_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_audio_generator_lite_bm" name="dev_audio_generator_lite_bm" brief="The USB Audio Generator application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a recording device and users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_audio_generator_lite/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_audio_generator_lite/bm" type="xml">
            <files mask="dev_audio_generator_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_audio_speaker_bm" name="dev_audio_speaker_bm" brief="The USB Audio Speaker application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a playback device and users can play music using the device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_audio_speaker/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_audio_speaker/bm" type="xml">
            <files mask="dev_audio_speaker_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_audio_speaker_freertos" name="dev_audio_speaker_freertos" brief="The USB Audio Speaker application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a playback device and users can play music using the device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_audio_speaker/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_audio_speaker/freertos" type="xml">
            <files mask="dev_audio_speaker_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_audio_speaker_lite_bm" name="dev_audio_speaker_lite_bm" brief="The USB Audio Speaker application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a playback device and users can play music using the device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_audio_speaker_lite/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_audio_speaker_lite/bm" type="xml">
            <files mask="dev_audio_speaker_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_cdc_vcom_bm" name="dev_cdc_vcom_bm" brief="The Virtual COM project is enumerated as a COM port, which the users can open using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_cdc_vcom/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_cdc_vcom/bm" type="xml">
            <files mask="dev_cdc_vcom_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_cdc_vcom_freertos" name="dev_cdc_vcom_freertos" brief="The Virtual COM project is  enumerated as a COM port, which the users can open using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_cdc_vcom/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_cdc_vcom/freertos" type="xml">
            <files mask="dev_cdc_vcom_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_cdc_vcom_lite_bm" name="dev_cdc_vcom_lite_bm" brief="The Virtual COM project enumerated as a COM port, which the users can open using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_cdc_vcom_lite/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_cdc_vcom_lite/bm" type="xml">
            <files mask="dev_cdc_vcom_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_composite_cdc_audio_unified_bm" name="dev_composite_cdc_audio_unified_bm" brief="The USB Composite device application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a recording device. Users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories with an CDC VCOM device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_composite_cdc_audio_unified/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_composite_cdc_audio_unified/bm" type="xml">
            <files mask="dev_composite_cdc_audio_unified_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_composite_cdc_audio_unified_freertos" name="dev_composite_cdc_audio_unified_freertos" brief="The USB Composite device application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a recording device. Users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories with an CDC VCOM device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_composite_cdc_audio_unified/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_composite_cdc_audio_unified/freertos" type="xml">
            <files mask="dev_composite_cdc_audio_unified_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_composite_cdc_audio_unified_lite_bm" name="dev_composite_cdc_audio_unified_lite_bm" brief="The USB Composite device application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a recording device. Users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories with an CDC VCOM device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_composite_cdc_audio_unified_lite/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_composite_cdc_audio_unified_lite/bm" type="xml">
            <files mask="dev_composite_cdc_audio_unified_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_composite_cdc_msc_bm" name="dev_composite_cdc_msc_bm" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted.." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_composite_cdc_msc/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_composite_cdc_msc/bm" type="xml">
            <files mask="dev_composite_cdc_msc_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_composite_cdc_msc_disk_bm" name="dev_composite_cdc_msc_disk_bm" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_composite_cdc_msc_disk/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_composite_cdc_msc_disk/bm" type="xml">
            <files mask="dev_composite_cdc_msc_disk_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_composite_cdc_msc_disk_freertos" name="dev_composite_cdc_msc_disk_freertos" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_composite_cdc_msc_disk/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_composite_cdc_msc_disk/freertos" type="xml">
            <files mask="dev_composite_cdc_msc_disk_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_composite_cdc_msc_disk_lite_bm" name="dev_composite_cdc_msc_disk_lite_bm" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a U-disk. The COM  port can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The U-disk can be read and write as a standard SD card." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_composite_cdc_msc_disk_lite/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_composite_cdc_msc_disk_lite/bm" type="xml">
            <files mask="dev_composite_cdc_msc_disk_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_composite_cdc_msc_freertos" name="dev_composite_cdc_msc_freertos" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_composite_cdc_msc/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_composite_cdc_msc/freertos" type="xml">
            <files mask="dev_composite_cdc_msc_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_composite_cdc_msc_lite_bm" name="dev_composite_cdc_msc_lite_bm" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_composite_cdc_msc_lite/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_composite_cdc_msc_lite/bm" type="xml">
            <files mask="dev_composite_cdc_msc_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_composite_cdc_vcom_cdc_vcom_bm" name="dev_composite_cdc_vcom_cdc_vcom_bm" brief="The Composite CDC_VCOM_CDC_VCOM project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as two COM port, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom/bm" type="xml">
            <files mask="dev_composite_cdc_vcom_cdc_vcom_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_composite_cdc_vcom_cdc_vcom_freertos" name="dev_composite_cdc_vcom_cdc_vcom_freertos" brief="The Composite CDC_VCOM_CDC_VCOM project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as two COM port, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom/freertos" type="xml">
            <files mask="dev_composite_cdc_vcom_cdc_vcom_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_composite_cdc_vcom_cdc_vcom_lite_bm" name="dev_composite_cdc_vcom_cdc_vcom_lite_bm" brief="The Composite CDC_VCOM_CDC_VCOM project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as two COM port, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom_lite/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom_lite/bm" type="xml">
            <files mask="dev_composite_cdc_vcom_cdc_vcom_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_composite_hid_audio_unified_bm" name="dev_composite_hid_audio_unified_bm" brief="The USB Composite device application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a recording device. Users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories with an HID mouse device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_composite_hid_audio_unified/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_composite_hid_audio_unified/bm" type="xml">
            <files mask="dev_composite_hid_audio_unified_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_composite_hid_audio_unified_freertos" name="dev_composite_hid_audio_unified_freertos" brief="The USB Composite device application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a recording device. Users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories with an HID mouse device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_composite_hid_audio_unified/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_composite_hid_audio_unified/freertos" type="xml">
            <files mask="dev_composite_hid_audio_unified_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_composite_hid_audio_unified_lite_bm" name="dev_composite_hid_audio_unified_lite_bm" brief="The USB Composite HID and Audio Unified application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a playback and recording device. Users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories and play music with the device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_composite_hid_audio_unified_lite/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_composite_hid_audio_unified_lite/bm" type="xml">
            <files mask="dev_composite_hid_audio_unified_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_composite_hid_mouse_hid_keyboard_bm" name="dev_composite_hid_mouse_hid_keyboard_bm" brief="The application is a simple demonstration program based on the MCUXpresso SDK. The application is enumerated as HID-compliant mouse and keyboard devices." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/bm" type="xml">
            <files mask="dev_composite_hid_mouse_hid_keyboard_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_composite_hid_mouse_hid_keyboard_freertos" name="dev_composite_hid_mouse_hid_keyboard_freertos" brief="The application is a simple demonstration program based on the MCUXpresso SDK. The application is enumerated as HID-compliant mouse and keyboard devices." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/freertos" type="xml">
            <files mask="dev_composite_hid_mouse_hid_keyboard_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_composite_hid_mouse_hid_keyboard_lite_bm" name="dev_composite_hid_mouse_hid_keyboard_lite_bm" brief="The application is a simple demonstration program based on the MCUXpresso SDK. The application is enumerated as HID-compliant mouse and keyboard devices." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_composite_hid_mouse_hid_keyboard_lite/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_composite_hid_mouse_hid_keyboard_lite/bm" type="xml">
            <files mask="dev_composite_hid_mouse_hid_keyboard_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_hid_generic_bm" name="dev_hid_generic_bm" brief="The USB HID generic application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a HID-compliant device. A PC application can be used to exchange data with the device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_hid_generic/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_hid_generic/bm" type="xml">
            <files mask="dev_hid_generic_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_hid_generic_freertos" name="dev_hid_generic_freertos" brief="The USB HID generic application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a HID-compliant device. A PC application can be used to exchange data with the device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_hid_generic/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_hid_generic/freertos" type="xml">
            <files mask="dev_hid_generic_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_hid_generic_lite_bm" name="dev_hid_generic_lite_bm" brief="The USB HID generic application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a HID-compliant device. A PC application can be used to exchange data with the device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_hid_generic_lite/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_hid_generic_lite/bm" type="xml">
            <files mask="dev_hid_generic_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_hid_mouse_bm" name="dev_hid_mouse_bm" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_hid_mouse/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_hid_mouse/bm" type="xml">
            <files mask="dev_hid_mouse_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_hid_mouse_freertos" name="dev_hid_mouse_freertos" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_hid_mouse/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_hid_mouse/freertos" type="xml">
            <files mask="dev_hid_mouse_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_hid_mouse_lite_bm" name="dev_hid_mouse_lite_bm" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_hid_mouse_lite/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_hid_mouse_lite/bm" type="xml">
            <files mask="dev_hid_mouse_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_lpm_hid_mouse_bm" name="dev_lpm_hid_mouse_bm" brief="This is one example support LPM(Link Power Management)." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_lpm_device_hid_mouse/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_lpm_device_hid_mouse/bm" type="xml">
            <files mask="dev_lpm_hid_mouse_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_lpm_hid_mouse_freertos" name="dev_lpm_hid_mouse_freertos" brief="This is one example support LPM(Link Power Management)." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_lpm_device_hid_mouse/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_lpm_device_hid_mouse/freertos" type="xml">
            <files mask="dev_lpm_hid_mouse_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_lpm_hid_mouse_lite_bm" name="dev_lpm_hid_mouse_lite_bm" brief="This is one example support LPM(Link Power Management)." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_lpm_device_hid_mouse_lite/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_lpm_device_hid_mouse_lite/bm" type="xml">
            <files mask="dev_lpm_hid_mouse_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_msc_disk_bm" name="dev_msc_disk_bm" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk. Users can read and write the SD card or MMC as a standard U-disk." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_msc_disk/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_msc_disk/bm" type="xml">
            <files mask="dev_msc_disk_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_msc_disk_freertos" name="dev_msc_disk_freertos" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk. Users can read and write the SD card or MMC as a standard U-disk." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_msc_disk/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_msc_disk/freertos" type="xml">
            <files mask="dev_msc_disk_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_msc_disk_lite_bm" name="dev_msc_disk_lite_bm" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk. Users can read and write the SD card or MMC as a standard U-disk." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_msc_disk_lite/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_msc_disk_lite/bm" type="xml">
            <files mask="dev_msc_disk_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_msc_ramdisk_bm" name="dev_msc_ramdisk_bm" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk and can be read and written to as a normal U-disk ." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_msc_ramdisk/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_msc_ramdisk/bm" type="xml">
            <files mask="dev_msc_ramdisk_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_msc_ramdisk_freertos" name="dev_msc_ramdisk_freertos" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk and can be read and written to as a normal U-disk ." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_msc_ramdisk/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_msc_ramdisk/freertos" type="xml">
            <files mask="dev_msc_ramdisk_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_msc_ramdisk_lite_bm" name="dev_msc_ramdisk_lite_bm" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk and can be read and written to as a normal U-disk ." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_msc_ramdisk_lite/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_msc_ramdisk_lite/bm" type="xml">
            <files mask="dev_msc_ramdisk_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_mtp_bm" name="dev_mtp_bm" brief="The USB MTP application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as portable media device. Users can read and write the SD card or MMC by MTP operations." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_mtp/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_mtp/bm" type="xml">
            <files mask="dev_mtp_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_mtp_freertos" name="dev_mtp_freertos" brief="The USB MTP application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as portable media device. Users can read and write the SD card or MMC by MTP operations." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_mtp/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_mtp/freertos" type="xml">
            <files mask="dev_mtp_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_mtp_lite_bm" name="dev_mtp_lite_bm" brief="The USB MTP application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as portable media device. Users can read and write the SD card or MMC by MTP operations." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_mtp_lite/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_mtp_lite/bm" type="xml">
            <files mask="dev_mtp_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_phdc_weighscale_bm" name="dev_phdc_weighscale_bm" brief="The USB PHDC WeighScale application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a weight scale device and the HealthLink software is used to interact with thisdevice to simulate the personal weight scale data, such as body mass and body mass index." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_phdc_weighscale/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_phdc_weighscale/bm" type="xml">
            <files mask="dev_phdc_weighscale_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_phdc_weighscale_freertos" name="dev_phdc_weighscale_freertos" brief="The USB PHDC WeighScale application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a weight scale device and the HealthLink software is used to interact with thisdevice to simulate the personal weight scale data, such as body mass and body mass index." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_phdc_weighscale/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_phdc_weighscale/freertos" type="xml">
            <files mask="dev_phdc_weighscale_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_phdc_weighscale_lite_bm" name="dev_phdc_weighscale_lite_bm" brief="The USB PHDC WeighScale application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a weight scale device and the HealthLink software is used to interact with thisdevice to simulate the personal weight scale data, such as body mass and body mass index." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_phdc_weighscale_lite/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_phdc_weighscale_lite/bm" type="xml">
            <files mask="dev_phdc_weighscale_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_printer_virtual_plain_text_bm" name="dev_printer_virtual_plain_text_bm" brief="The USB virtual printer application is a simple application to demonstrate a virtual printer functionality.Because there is no printer language parsing, the received raw data is output directly in the debug console.As a result, only plain text is suitable for testing. For other printer language support, such as postscript, implement the corresponding parser." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_printer_virtual_plain_text/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_printer_virtual_plain_text/bm" type="xml">
            <files mask="dev_printer_virtual_plain_text_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_printer_virtual_plain_text_freertos" name="dev_printer_virtual_plain_text_freertos" brief="The USB virtual printer application is a simple application to demonstrate a virtual printer functionality.Because there is no printer language parsing, the received raw data is output directly in the debug console.As a result, only plain text is suitable for testing. For other printer language support, such as postscript, implement the corresponding parser." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_printer_virtual_plain_text/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_printer_virtual_plain_text/freertos" type="xml">
            <files mask="dev_printer_virtual_plain_text_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_printer_virtual_plain_text_lite_bm" name="dev_printer_virtual_plain_text_lite_bm" brief="The USB virtual printer application is a simple application to demonstrate a virtual printer functionality.Because there is no printer language parsing, the received raw data is output directly in the debug console.As a result, only plain text is suitable for testing. For other printer language support, such as postscript, implement the corresponding parser." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_printer_virtual_plain_text_lite/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_printer_virtual_plain_text_lite/bm" type="xml">
            <files mask="dev_printer_virtual_plain_text_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_suspend_resume_hid_mouse_bm" name="dev_suspend_resume_hid_mouse_bm" brief="the application is enumerated as a mouse. When host releases the USB Bus, the device will enter into low power mode. The device can be waked up when resume signal is detected on the bus. Or the device can remote wake-up the host by delivering the resume signal when the remote wake-up is enabled by the host." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_suspend_resume_device_hid_mouse/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_suspend_resume_device_hid_mouse/bm" type="xml">
            <files mask="dev_suspend_resume_hid_mouse_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_suspend_resume_hid_mouse_freertos" name="dev_suspend_resume_hid_mouse_freertos" brief="the application is enumerated as a mouse. When host releases the USB Bus, the device will enter into low power mode. The device can be waked up when resume signal is detected on the bus. Or the device can remote wake-up the host by delivering the resume signal when the remote wake-up is enabled by the host." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_suspend_resume_device_hid_mouse/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_suspend_resume_device_hid_mouse/freertos" type="xml">
            <files mask="dev_suspend_resume_hid_mouse_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_suspend_resume_hid_mouse_lite_bm" name="dev_suspend_resume_hid_mouse_lite_bm" brief="the application is enumerated as a mouse. When host releases the USB Bus, the device will enter into low power mode. The device can be waked up when resume signal is detected on the bus. Or the device can remote wake-up the host by delivering the resume signal when the remote wake-up is enabled by the host." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_suspend_resume_device_hid_mouse_lite/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_suspend_resume_device_hid_mouse_lite/bm" type="xml">
            <files mask="dev_suspend_resume_hid_mouse_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_video_virtual_camera_bm" name="dev_video_virtual_camera_bm" brief="The USB video virtual camera application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a camera and users can see the video of the device by using a PC test tool." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_video_virtual_camera/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_video_virtual_camera/bm" type="xml">
            <files mask="dev_video_virtual_camera_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_video_virtual_camera_freertos" name="dev_video_virtual_camera_freertos" brief="The USB video virtual camera application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a camera and users can see the video of the device by using a PC test tool." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_video_virtual_camera/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_video_virtual_camera/freertos" type="xml">
            <files mask="dev_video_virtual_camera_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_video_virtual_camera_lite_bm" name="dev_video_virtual_camera_lite_bm" brief="The USB video virtual camera application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a camera and users can see the video of the device by using a PC test tool." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_video_virtual_camera_lite/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_video_virtual_camera_lite/bm" type="xml">
            <files mask="dev_video_virtual_camera_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dma_channel_chain" name="dma_channel_chain" brief="The DMA channel chain example is a simple demonstration program that uses the SDK software.The purpose of this example is to show how to use the DMA channel chain feature." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/dma" path="boards/evkmimxrt595/driver_examples/dma/channel_chain">
          <external path="boards/evkmimxrt595/driver_examples/dma/channel_chain" type="xml">
            <files mask="dma_channel_chain_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dma_interleave_transfer" name="dma_interleave_transfer" brief="The DMA interleave transfer example is a simple demonstration program that uses the SDK software.It executes a linked transfer from source buffer to destination buffer using the SDK DMA drivers.The purpose of this example is to show how to use the DMA interleave feature." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/dma" path="boards/evkmimxrt595/driver_examples/dma/interleave_transfer">
          <external path="boards/evkmimxrt595/driver_examples/dma/interleave_transfer" type="xml">
            <files mask="dma_interleave_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dma_linked_transfer" name="dma_linked_transfer" brief="The DMA linked transfer example is a simple demonstration program that uses the SDK software.It executes a linked transfer from source buffer to destination buffer using the SDK DMA drivers.The purpose of this example is to show how to use the DMA and to provide a linked trnasfer example." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/dma" path="boards/evkmimxrt595/driver_examples/dma/linked_transfer">
          <external path="boards/evkmimxrt595/driver_examples/dma/linked_transfer" type="xml">
            <files mask="dma_linked_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dma_memory_to_memory" name="dma_memory_to_memory" brief="The DMA memory to memory example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK DMA drivers.The purpose of this example is to show how to use the DMA and to provide a simple example fordebugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/dma" path="boards/evkmimxrt595/driver_examples/dma/memory_to_memory">
          <external path="boards/evkmimxrt595/driver_examples/dma/memory_to_memory" type="xml">
            <files mask="dma_memory_to_memory_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dmic_dma" name="dmic_dma" brief="This example shows how to use DMA to transfer data from DMIC to memory." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/dmic" path="boards/evkmimxrt595/driver_examples/dmic/dmic_dma">
          <external path="boards/evkmimxrt595/driver_examples/dmic/dmic_dma" type="xml">
            <files mask="dmic_dma_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dmic_hwvad" name="dmic_hwvad" brief="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~This demo explains how built in HWVAD( HW voice activity detector) in LPC5411x can be used towake up the device from sleep mode" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/dmic" path="boards/evkmimxrt595/driver_examples/dmic/dmic_hwvad">
          <external path="boards/evkmimxrt595/driver_examples/dmic/dmic_hwvad" type="xml">
            <files mask="dmic_hwvad_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dmic_i2s_codec" name="dmic_i2s_codec" brief="Demonstrates the DMIC working with I2S. Audio is converted to samples in the DMIC module.Then, the data is placed into the I2S buffer. Last, it is read from the I2S buffer and sentto the CODEC, then the audio data will be output to Lineout of CODEC.~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/dmic" path="boards/evkmimxrt595/driver_examples/dmic/dmic_i2s_codec">
          <external path="boards/evkmimxrt595/driver_examples/dmic/dmic_i2s_codec" type="xml">
            <files mask="dmic_i2s_codec_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dmic_i2s_dma" name="dmic_i2s_dma" brief="Demonstrates the DMIC working with I2S. Audio is converted to samples in the DMIC module.Then, the data is placed memory buffer. Last, it is send data to the I2S buffer and send to the CODEC, then the audio data will be output to Lineout of CODEC.~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/dmic" path="boards/evkmimxrt595/driver_examples/dmic/dmic_i2s_dma">
          <external path="boards/evkmimxrt595/driver_examples/dmic/dmic_i2s_dma" type="xml">
            <files mask="dmic_i2s_dma_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dmic_multi_channel" name="dmic_multi_channel" brief="Demonstrates the DMIC multi channel working with I2S. Audio is converted to samples in the DMIC module.Then, the data is placed memory buffer. Last, it is send data to the I2S buffer and send to the CODEC, then the audio data will be output to Lineout of CODEC.~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/dmic" path="boards/evkmimxrt595/driver_examples/dmic/dmic_multi_channel">
          <external path="boards/evkmimxrt595/driver_examples/dmic/dmic_multi_channel" type="xml">
            <files mask="dmic_multi_channel_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dsp_audio_demo_bm_cm33" name="dsp_audio_demo_bm_cm33" brief="The dsp_audio_demo_bm demo application demonstrates starting DSP core with DSP image." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="dsp_examples" path="boards/evkmimxrt595/dsp_examples/audio_demo_bm/cm33">
          <external path="boards/evkmimxrt595/dsp_examples/audio_demo_bm/cm33" type="xml">
            <files mask="dsp_audio_demo_bm_cm33_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dsp_hello_world_usart_cm33" name="dsp_hello_world_usart_cm33" brief="The dsp_hello_world_usart demo application demonstrates starting DSP core with DSP image." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="dsp_examples" path="boards/evkmimxrt595/dsp_examples/hello_world_usart/cm33">
          <external path="boards/evkmimxrt595/dsp_examples/hello_world_usart/cm33" type="xml">
            <files mask="dsp_hello_world_usart_cm33_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dsp_mu_interrupt_cm33" name="dsp_mu_interrupt_cm33" brief="The dsp_mu_interrupt demo application demonstrates starting DSP core with DSP image." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="dsp_examples" path="boards/evkmimxrt595/dsp_examples/mu_interrupt/cm33">
          <external path="boards/evkmimxrt595/dsp_examples/mu_interrupt/cm33" type="xml">
            <files mask="dsp_mu_interrupt_cm33_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dsp_mu_polling_cm33" name="dsp_mu_polling_cm33" brief="The dsp_mu_polling demo application demonstrates starting DSP core with DSP image." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="dsp_examples" path="boards/evkmimxrt595/dsp_examples/mu_polling/cm33">
          <external path="boards/evkmimxrt595/dsp_examples/mu_polling/cm33" type="xml">
            <files mask="dsp_mu_polling_cm33_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dsp_naturedsp_cm33" name="dsp_naturedsp_cm33" brief="The dsp_naturedsp demo application demonstrates starting DSP core with DSP image which contains NatureDSP functions calls." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="dsp_examples" path="boards/evkmimxrt595/dsp_examples/naturedsp/cm33">
          <external path="boards/evkmimxrt595/dsp_examples/naturedsp/cm33" type="xml">
            <files mask="dsp_naturedsp_cm33_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dsp_sema42_cm33" name="dsp_sema42_cm33" brief="The dsp_sema42 demo application demonstrates starting DSP core with DSP image." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="dsp_examples" path="boards/evkmimxrt595/dsp_examples/sema42/cm33">
          <external path="boards/evkmimxrt595/dsp_examples/sema42/cm33" type="xml">
            <files mask="dsp_sema42_cm33_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dsp_xaf_demo_cm33" name="dsp_xaf_demo_cm33" brief="The dsp_xaf_demo demo application demonstrates starting DSP core with DSP image." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="dsp_examples" path="boards/evkmimxrt595/dsp_examples/xaf_demo/cm33">
          <external path="boards/evkmimxrt595/dsp_examples/xaf_demo/cm33" type="xml">
            <files mask="dsp_xaf_demo_cm33_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_emwin_gui_demo" name="emwin_gui_demo" brief="The example demonstrates graphical widgets of the emWin library." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="emwin_examples" path="boards/evkmimxrt595/emwin_examples/emwin_gui_demo">
          <external path="boards/evkmimxrt595/emwin_examples/emwin_gui_demo" type="xml">
            <files mask="emwin_gui_demo_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_fbdev_freertos" name="fbdev_freertos" brief="This example shows how to use the fbdev component. The fbdev masks the difference of LCD controllers and provides a unified APIs for upper layers. At the same time, the frame buffers are managed by the FBDEV. When the example runs, you can see a rectangle moving in the screen, and its color changes when reached the border." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="component_examples/fbdev_freertos" path="boards/evkmimxrt595/component_examples/fbdev_freertos">
          <external path="boards/evkmimxrt595/component_examples/fbdev_freertos" type="xml">
            <files mask="fbdev_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_flash_component_octal" name="flash_component_octal" brief="octal flash demo shows the use of nor flash component to erase, program, and read an external serial nor flash device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="component_examples/flash_component/flexspi_octal" path="boards/evkmimxrt595/component_examples/flash_component/flexspi_octal">
          <external path="boards/evkmimxrt595/component_examples/flash_component/flexspi_octal" type="xml">
            <files mask="flash_component_octal_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_flexio_i2c_interrupt_flexcomm_i2c_transfer" name="flexio_i2c_interrupt_flexcomm_i2c_transfer" brief="The flexio_i2c_interrupt example shows how to use flexio i2c master driver in interrupt way:In this example, a flexio simulated i2c master connect to an flexcomm I2C slave." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkmimxrt595/driver_examples/flexio/i2c/interrupt_i2c_transfer">
          <external path="boards/evkmimxrt595/driver_examples/flexio/i2c/interrupt_i2c_transfer" type="xml">
            <files mask="flexio_i2c_interrupt_flexcomm_i2c_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_flexio_pwm" name="flexio_pwm" brief="This demo describes how to use SDK drivers to implement the PWM feature by FLEXIO IP module. It outputs the PWM singal with fixed frequency defined by &quot;DEMO_FLEXIO_FREQUENCY&quot; in source code and dynamic duty from 99 to 1 to one of the FLEXIO pin." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkmimxrt595/driver_examples/flexio/pwm">
          <external path="boards/evkmimxrt595/driver_examples/flexio/pwm" type="xml">
            <files mask="flexio_pwm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_flexio_spi_int_spi_transfer_master" name="flexio_spi_int_spi_transfer_master" brief="The flexio_spi_master_interrupt_spi_slave example shows how to use flexio spi master driver in interrupt way:In this example, a flexio simulated master connect to a spi slave ." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkmimxrt595/driver_examples/flexio/spi/int_spi_transfer/master">
          <external path="boards/evkmimxrt595/driver_examples/flexio/spi/int_spi_transfer/master" type="xml">
            <files mask="flexio_spi_int_spi_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_flexio_uart_interrupt_transfer" name="flexio_uart_interrupt_transfer" brief="The flexio_uart_interrupt example shows how to use flexio uart driver in interrupt way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send back all charactersthat PC send to the board. Note: two queued transfer in this example, so please input even number characters." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkmimxrt595/driver_examples/flexio/uart/interrupt_transfer">
          <external path="boards/evkmimxrt595/driver_examples/flexio/uart/interrupt_transfer" type="xml">
            <files mask="flexio_uart_interrupt_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_flexio_uart_polling_transfer" name="flexio_uart_polling_transfer" brief="The flexio_uart_polling example shows how to use flexio uart driver in polling way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send backall characters that PC send to the board." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkmimxrt595/driver_examples/flexio/uart/polling_transfer">
          <external path="boards/evkmimxrt595/driver_examples/flexio/uart/polling_transfer" type="xml">
            <files mask="flexio_uart_polling_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_flexspi_octal_dma_transfer" name="flexspi_octal_dma_transfer" brief="The flexspi_octal_dma_transfer example shows how to use flexspi driver with dma:In this example, flexspi will send data and operate the external octal flash connected with FLEXSPI. Some simple flash command willbe executed, such as Write Enable, Erase sector, Program page.Example will first erase the sector and program a page into the flash, at last check if the data in flash is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexspi" path="boards/evkmimxrt595/driver_examples/flexspi/octal/dma_transfer">
          <external path="boards/evkmimxrt595/driver_examples/flexspi/octal/dma_transfer" type="xml">
            <files mask="flexspi_octal_dma_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_flexspi_octal_polling_transfer" name="flexspi_octal_polling_transfer" brief="The flexspi_octal_polling_transfer example shows how to use flexspi driver with polling:In this example, flexspi will send data and operate the external octal flash connected with FLEXSPI. Some simple flash command willbe executed, such as Write Enable, Erase sector, Program page.Example will first erase the sector and program a page into the flash, at last check if the data in flash is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexspi" path="boards/evkmimxrt595/driver_examples/flexspi/octal/polling_transfer">
          <external path="boards/evkmimxrt595/driver_examples/flexspi/octal/polling_transfer" type="xml">
            <files mask="flexspi_octal_polling_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_flexspi_psram_dma_transfer" name="flexspi_psram_dma_transfer" brief="The flexspi_psram_dma_transfer example shows how to use flexspi driver with dma: In this example, flexspi will send data and operate the external PSRAM connected with FLEXSPI. Some simple flash command will be executed, such as Read Data and Write Data.Example will write/read through the whole chip, through IP command and AHB command." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexspi" path="boards/evkmimxrt595/driver_examples/flexspi/psram/dma_transfer">
          <external path="boards/evkmimxrt595/driver_examples/flexspi/psram/dma_transfer" type="xml">
            <files mask="flexspi_psram_dma_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_flexspi_psram_polling_transfer" name="flexspi_psram_polling_transfer" brief="The flexspi_psram_polling_transfer example shows how to use flexspi driver with polling: In this example, flexspi will send data and operate the external PSRAM connected with FLEXSPI. Some simple flash command will be executed, such as Read Data and Write Data.Example will write/read through the whole chip, through IP command and AHB command." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexspi" path="boards/evkmimxrt595/driver_examples/flexspi/psram/polling_transfer">
          <external path="boards/evkmimxrt595/driver_examples/flexspi/psram/polling_transfer" type="xml">
            <files mask="flexspi_psram_polling_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_fmeas" name="fmeas" brief="This example shows how to use SDK drivers to use the Frequency Measure feature of SYSCON module on LPC devices.It shows how to measure a target frequency using a (faster) reference frequency. The example uses the internal main clock as the reference frequency to measure the frequencies of the RTC, watchdog oscillator, and internal RC oscillator." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples" path="boards/evkmimxrt595/driver_examples/fmeas">
          <external path="boards/evkmimxrt595/driver_examples/fmeas" type="xml">
            <files mask="fmeas_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_freertos_blinky_ns" name="freertos_blinky_ns" brief="The blinky example for FreeRTOS demonstrates the possibility to use the trust-zone features of FreeRTOS." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" linked_projects="evkmimxrt595_freertos_blinky_s" path="boards/evkmimxrt595/rtos_examples/freertos_tzm/freertos_blinky_ns">
          <external path="boards/evkmimxrt595/rtos_examples/freertos_tzm/freertos_blinky_ns" type="xml">
            <files mask="freertos_blinky_ns_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_freertos_blinky_s" name="freertos_blinky_s" brief="The blinky example for FreeRTOS demonstrates the possibility to use the trust-zone features of FreeRTOS." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" linked_projects="evkmimxrt595_freertos_blinky_ns" path="boards/evkmimxrt595/rtos_examples/freertos_tzm/freertos_blinky_s">
          <external path="boards/evkmimxrt595/rtos_examples/freertos_tzm/freertos_blinky_s" type="xml">
            <files mask="freertos_blinky_s_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_freertos_event" name="freertos_event" brief="This document explains the freertos_event example. It shows how task waits for an event (defined setof bits in event group). This event can be set by any other process or interrupt in the system.The example application creates three tasks. Two write tasks write_task_1 and write_task_2continuously setting event bit 0 and bit 1.Read_task is waiting for any event bit and printing actual state on console. Event bits areautomatically cleared after read task is entered.Three possible states can occurre:Both bits are set.zBit B0 is set.Bit B1 is set." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/evkmimxrt595/rtos_examples/freertos_event">
          <external path="boards/evkmimxrt595/rtos_examples/freertos_event" type="xml">
            <files mask="freertos_event_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_freertos_generic" name="freertos_generic" brief="This document explains the freertos_generic example. It is based on code FreeRTOS documentation fromhttp://www.freertos.org/Hardware-independent-RTOS-example.html. It shows combination of severaltasks with queue, software timer, tick hook and semaphore.The example application creates three tasks. The prvQueueSendTask periodically sending data toxQueue queue. The prvQueueReceiveTask is waiting for incoming message and counting number ofreceived messages. Task prvEventSemaphoreTask is waiting for xEventSemaphore semaphore given fromvApplicationTickHook. Tick hook give semaphore every 500 ms.Other hook types used for RTOS and resource statistics are also demonstrated in example:* vApplicationIdleHook* vApplicationStackOverflowHook* vApplicationMallocFailedHook" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/evkmimxrt595/rtos_examples/freertos_generic">
          <external path="boards/evkmimxrt595/rtos_examples/freertos_generic" type="xml">
            <files mask="freertos_generic_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_freertos_hello" name="freertos_hello" brief="The Hello World project is a simple demonstration program that uses the SDK UART drivere incombination with FreeRTOS. The purpose of this demo is to show how to use the debug console and toprovide a simple project for debugging and further development.The example application creates one task called hello_task. This task print &quot;Hello world.&quot; messagevia debug console utility and suspend itself." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/evkmimxrt595/rtos_examples/freertos_hello">
          <external path="boards/evkmimxrt595/rtos_examples/freertos_hello" type="xml">
            <files mask="freertos_hello_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_freertos_i2c" name="freertos_i2c" brief="The freertos_i2c example shows an application using RTOS tasks with I2C driver:The example supports 2 different connections:On board connection and board to board connection.With one board connection, 2 I2C instances of the same board are used. One i2c instance used as I2C master and another I2C instance used as I2C slave .    Default settings in freertos_i2c.c (in folder boards/&lt;board&gt;/rtos_examples/freertos_i2c) is applied.    Two tasks are created. One task is associated with an I2C master operation and another task deals with I2C slave operation.    1. I2C master task sends data to I2C slave task.    2. I2C master task reads data sent back from I2C slave task.    The transmit data and the receive data of both I2C master task and I2C slave task are printed out on terminal.With board to board connection, one I2C instance on one board is used as I2C master and the I2C instance on other board is used as I2C slave. Tasks are created to run on each board to handle I2C communication.    File freertos_i2c.c should have following definitions:    #define EXAMPLE_CONNECT_I2C BOARD_TO_BOARD    For board used as I2C master:        #define I2C_MASTER_SLAVE isMASTER    For board used as I2C slave:        #define I2C_MASTER_SLAVE isSLAVE" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/evkmimxrt595/rtos_examples/freertos_i2c">
          <external path="boards/evkmimxrt595/rtos_examples/freertos_i2c" type="xml">
            <files mask="freertos_i2c_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_freertos_mpu_ns" name="freertos_mpu_ns" brief="The blinky example for FreeRTOS demonstrates the possibility to use the trust-zone features of FreeRTOS." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" linked_projects="evkmimxrt595_freertos_mpu_s" path="boards/evkmimxrt595/rtos_examples/freertos_mpu/freertos_mpu_ns">
          <external path="boards/evkmimxrt595/rtos_examples/freertos_mpu/freertos_mpu_ns" type="xml">
            <files mask="freertos_mpu_ns_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_freertos_mpu_s" name="freertos_mpu_s" brief="The blinky example for FreeRTOS demonstrates the possibility to use the trust-zone features of FreeRTOS." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" linked_projects="evkmimxrt595_freertos_mpu_ns" path="boards/evkmimxrt595/rtos_examples/freertos_mpu/freertos_mpu_s">
          <external path="boards/evkmimxrt595/rtos_examples/freertos_mpu/freertos_mpu_s" type="xml">
            <files mask="freertos_mpu_s_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_freertos_mutex" name="freertos_mutex" brief="This document explains the freertos_mutex example. It shows how mutex manage access to commonresource (terminal output).The example application creates two identical instances of write_task. Each task will lock the mutexbefore printing and unlock it after printing to ensure that the outputs from tasks are not mixedtogether.The test_task accept output message during creation as function parameter. Output message have twoparts. If xMutex is unlocked, the write_task_1 acquire xMutex and print first part of message. Thenrescheduling is performed. In this moment scheduler check if some other task could run, but secondtask write_task+_2 is blocked because xMutex is already locked by first write task. The firstwrite_task_1 continue from last point by printing of second message part. Finaly the xMutex isunlocked and second instance of write_task_2 is executed." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/evkmimxrt595/rtos_examples/freertos_mutex">
          <external path="boards/evkmimxrt595/rtos_examples/freertos_mutex" type="xml">
            <files mask="freertos_mutex_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_freertos_queue" name="freertos_queue" brief="This document explains the freertos_queue example. This example introduce simple logging mechanismbased on message passing.Example could be devided in two parts. First part is logger. It contain three tasks:log_add().....Add new message into the log. Call xQueueSend function to pass new message into              message queue.log_init()....Initialize logger (create logging task and message queue log_queue).log_task()....Task responsible for printing of log output.Second part is application of this simple logging mechanism. Each of two tasks write_task_1 andwrite_task_2 print 5 messages into log." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/evkmimxrt595/rtos_examples/freertos_queue">
          <external path="boards/evkmimxrt595/rtos_examples/freertos_queue" type="xml">
            <files mask="freertos_queue_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_freertos_sem" name="freertos_sem" brief="This document explains the freertos_sem example, what to expect when running it and a briefintroduction to the API. The freertos_sem example code shows how semaphores works. Two differenttasks are synchronized in bilateral rendezvous model.The example uses four tasks. One producer_task and three consumer_tasks. The producer_task starts bycreating of two semaphores (xSemaphore_producer and xSemaphore_consumer). These semaphores controlaccess to virtual item. The synchronization is based on bilateral rendezvous pattern. Both ofconsumer and producer must be prepared to enable transaction." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/evkmimxrt595/rtos_examples/freertos_sem">
          <external path="boards/evkmimxrt595/rtos_examples/freertos_sem" type="xml">
            <files mask="freertos_sem_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_freertos_spi" name="freertos_spi" brief="The freertos_spi example shows how to use SPI driver in FreeRTOS:In this example , one spi instance is used as SPI master with blocking and another spi instance is used as SPI slave.1. SPI master sends/receives data using task blocking calls to/from SPI slave. (SPI Slave uses interrupt to receive/sendthe data)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/evkmimxrt595/rtos_examples/freertos_spi">
          <external path="boards/evkmimxrt595/rtos_examples/freertos_spi" type="xml">
            <files mask="freertos_spi_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_freertos_swtimer" name="freertos_swtimer" brief="This document explains the freertos_swtimer example. It shows usage of software timer and itscallback.The example application creates one software timer SwTimer. The timer’s callback SwTimerCallback isperiodically executed and text “Tick.” is printed to terminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/evkmimxrt595/rtos_examples/freertos_swtimer">
          <external path="boards/evkmimxrt595/rtos_examples/freertos_swtimer" type="xml">
            <files mask="freertos_swtimer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_freertos_tickless" name="freertos_tickless" brief="This document explains the freertos_tickless example. It shows the CPU enter at sleep mode and then&#10;it is waked up by expired time delay that using RTC module or occur any a hardware interrupt.&#10;&#10;" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/evkmimxrt595/rtos_examples/freertos_tickless">
          <external path="boards/evkmimxrt595/rtos_examples/freertos_tickless" type="xml">
            <files mask="freertos_tickless_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_freertos_usart" name="freertos_usart" brief="The USART example for FreeRTOS demonstrates the possibility to use the USART driver in the RTOS.The example uses single instance of USART IP and writes string into, then reads back chars.After every 4B received, these are sent back on USART." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/evkmimxrt595/rtos_examples/freertos_usart">
          <external path="boards/evkmimxrt595/rtos_examples/freertos_usart" type="xml">
            <files mask="freertos_usart_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_gpio_input_interrupt" name="gpio_input_interrupt" brief="The GPIO Example project is a demonstration program that uses the KSDK software to manipulate the general-purposeoutputs.The example is supported by the set, clear registers for each GPIO pin output register. " toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/gpio" path="boards/evkmimxrt595/driver_examples/gpio/input_interrupt">
          <external path="boards/evkmimxrt595/driver_examples/gpio/input_interrupt" type="xml">
            <files mask="gpio_input_interrupt_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_gpio_led_output" name="gpio_led_output" brief="The GPIO Example project is a demonstration program that uses the KSDK software to manipulate the general-purposeoutputs. The example use LEDs and buttons to demonstrates GPIO API for port and pin manipulation (init, set,clear, and toggle)." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/gpio" path="boards/evkmimxrt595/driver_examples/gpio/led_output">
          <external path="boards/evkmimxrt595/driver_examples/gpio/led_output" type="xml">
            <files mask="gpio_led_output_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_hashcrypt" name="hashcrypt" brief="The hashcrypt Example project is a demonstration program that uses the KSDK software to encrypt and hash data with hardware acceleration." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples" path="boards/evkmimxrt595/driver_examples/hashcrypt">
          <external path="boards/evkmimxrt595/driver_examples/hashcrypt" type="xml">
            <files mask="hashcrypt_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_hello_world" name="hello_world" brief="The HelloWorld demo prints the &quot;Hello World&quot; string to the terminal using the SDK UART drivers and repeat what user input. The purpose of this demo is to show how to use the UART, and to provide a simple project for debugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkmimxrt595/demo_apps/hello_world">
          <external path="boards/evkmimxrt595/demo_apps/hello_world" type="xml">
            <files mask="hello_world_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_hello_world_ns" name="hello_world_ns" brief="The Hello World demo application provides a sanity check for the new SDK build environments and board bring up. This demo application also utilizes TrustZone, so it demonstrates basic techniques for TrustZone applications development. This is non-secure part of the application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="trustzone_examples" linked_projects="evkmimxrt595_hello_world_s" path="boards/evkmimxrt595/trustzone_examples/hello_world/hello_world_ns">
          <external path="boards/evkmimxrt595/trustzone_examples/hello_world/hello_world_ns" type="xml">
            <files mask="hello_world_ns_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_hello_world_s" name="hello_world_s" brief="The Hello World demo application provides a sanity check for the new SDK build environments and board bring up. This demo application also utilizes TrustZone, so it demonstrates basic techniques for TrustZone applications development. This is secure part of the application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="trustzone_examples" linked_projects="evkmimxrt595_hello_world_ns" path="boards/evkmimxrt595/trustzone_examples/hello_world/hello_world_s">
          <external path="boards/evkmimxrt595/trustzone_examples/hello_world/hello_world_s" type="xml">
            <files mask="hello_world_s_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_hello_world_virtual_com" name="hello_world_virtual_com" brief="Hello World Virtual Com demonstrates the use of virtual com to print the &quot;Hello World&quot; string to the terminal. Different with Hello World demo (a HW UART peripheral is used to transmit data), the demo transmits data based on a serial port simulated by the USB device stack on target board side via USB peripheral. The purpose of this demo is to demonstrate how to use virtual com and provide a simple project for debugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkmimxrt595/demo_apps/hello_world_virtual_com">
          <external path="boards/evkmimxrt595/demo_apps/hello_world_virtual_com" type="xml">
            <files mask="hello_world_virtual_com_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_host_audio_speaker_bm" name="host_audio_speaker_bm" brief="The Host Audio example supports the audio speaker device. @n The application prints the audio speaker information when the USB speaker device is attached." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_host_audio_speaker/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_host_audio_speaker/bm" type="xml">
            <files mask="host_audio_speaker_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_host_audio_speaker_freertos" name="host_audio_speaker_freertos" brief="The Host Audio example supports the audio speaker device. @n The application prints the audio speaker information when the USB speaker device is attached." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_host_audio_speaker/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_host_audio_speaker/freertos" type="xml">
            <files mask="host_audio_speaker_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_host_cdc_bm" name="host_cdc_bm" brief="The host CDC project is a simple demonstration program based on the MCUXpresso SDK. It enumerates a COM port and echoes back the data from the UART." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_host_cdc/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_host_cdc/bm" type="xml">
            <files mask="host_cdc_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_host_cdc_freertos" name="host_cdc_freertos" brief="The host CDC project is a simple demonstration program based on the MCUXpresso SDK. It enumerates a COM port and echoes back the data from the UART ." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_host_cdc/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_host_cdc/freertos" type="xml">
            <files mask="host_cdc_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_host_hid_generic_bm" name="host_hid_generic_bm" brief="This application implements a simple HID interrupt in-and-out endpoint bi-directional communication.The application sends one test string to the device. The device receives and sends back the string. The application receives the string and prints it." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_host_hid_generic/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_host_hid_generic/bm" type="xml">
            <files mask="host_hid_generic_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_host_hid_generic_freertos" name="host_hid_generic_freertos" brief="This application implements a simple HID interrupt in-and-out endpoint bi-directional communication.The application sends one test string to the device. The device receives and sends back the string. The application receives the string and prints it." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_host_hid_generic/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_host_hid_generic/freertos" type="xml">
            <files mask="host_hid_generic_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_host_hid_mouse_bm" name="host_hid_mouse_bm" brief="The application supports the mouse device. It prints the mouse operation when the mouse device is attached." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_host_hid_mouse/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_host_hid_mouse/bm" type="xml">
            <files mask="host_hid_mouse_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_host_hid_mouse_freertos" name="host_hid_mouse_freertos" brief="The application supports the mouse device. It prints the mouse operation when the mouse device is attached." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_host_hid_mouse/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_host_hid_mouse/freertos" type="xml">
            <files mask="host_hid_mouse_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_host_hid_mouse_keyboard_bm" name="host_hid_mouse_keyboard_bm" brief="This example supports the mouse device and the keyboard device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_host_hid_mouse_keyboard/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_host_hid_mouse_keyboard/bm" type="xml">
            <files mask="host_hid_mouse_keyboard_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_host_hid_mouse_keyboard_freertos" name="host_hid_mouse_keyboard_freertos" brief="This example supports the mouse device and the keyboard device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_host_hid_mouse_keyboard/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_host_hid_mouse_keyboard/freertos" type="xml">
            <files mask="host_hid_mouse_keyboard_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_host_lpm_hid_mouse_bm" name="host_lpm_hid_mouse_bm" brief="This is one example support LPM(Link Power Management)." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_lpm_host_hid_mouse/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_lpm_host_hid_mouse/bm" type="xml">
            <files mask="host_lpm_hid_mouse_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_host_lpm_hid_mouse_freertos" name="host_lpm_hid_mouse_freertos" brief="This is one example demo support LPM(Link Power Management)." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_lpm_host_hid_mouse/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_lpm_host_hid_mouse/freertos" type="xml">
            <files mask="host_lpm_hid_mouse_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_host_msd_command_bm" name="host_msd_command_bm" brief="This Host MSD example supports the UFI and SCSI U-disk device. The application prints the attached device information when the U-disk device is attached.The application executes UFI commands to test the attached device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_host_msd_command/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_host_msd_command/bm" type="xml">
            <files mask="host_msd_command_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_host_msd_command_freertos" name="host_msd_command_freertos" brief="This Host MSD example supports the UFI and SCSI U-disk device.  The application prints the attached device information when the U-disk device is attached.The application executes UFI commands to test the attached device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_host_msd_command/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_host_msd_command/freertos" type="xml">
            <files mask="host_msd_command_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_host_msd_fatfs_bm" name="host_msd_fatfs_bm" brief="This Host FatFs example supports UFI and SCSI U-disk device. The application prints the attached device information when U-disk device is attached.The application executes some FatFs APIs to test the attached device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_host_msd_fatfs/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_host_msd_fatfs/bm" type="xml">
            <files mask="host_msd_fatfs_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_host_msd_fatfs_freertos" name="host_msd_fatfs_freertos" brief="This Host FatFs example supports UFI and SCSI U-disk device. The application prints the attached device information when U-disk device is attached.The application executes some FatFs APIs to test the attached device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_host_msd_fatfs/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_host_msd_fatfs/freertos" type="xml">
            <files mask="host_msd_fatfs_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_host_phdc_manager_bm" name="host_phdc_manager_bm" brief="The Host PHDC Manager Example is a simple demonstration program based on the MCUXpresso SDK.The application supports the USB weight scale device. It prints out the body mass and body mass index information when the USB weight scale device is attached." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_host_phdc_manager/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_host_phdc_manager/bm" type="xml">
            <files mask="host_phdc_manager_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_host_phdc_manager_freertos" name="host_phdc_manager_freertos" brief="The Host PHDC Manager Example is a simple demonstration program based on the MCUXpresso SDK.The application supports the USB weight scale device. It prints out the body mass and body mass index information when the USB weight scale device is attached." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_host_phdc_manager/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_host_phdc_manager/freertos" type="xml">
            <files mask="host_phdc_manager_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_host_printer_plain_text_bm" name="host_printer_plain_text_bm" brief="The host printer example demonstrates how to get the status of the printer deviceand how to print a certain test string." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_host_printer_plain_text/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_host_printer_plain_text/bm" type="xml">
            <files mask="host_printer_plain_text_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_host_printer_plain_text_freertos" name="host_printer_plain_text_freertos" brief="The host printer example demonstrates how to get the status of the printer deviceand how to print a certain test string.." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_host_printer_plain_text/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_host_printer_plain_text/freertos" type="xml">
            <files mask="host_printer_plain_text_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_host_suspend_resume_hid_mouse_bm" name="host_suspend_resume_hid_mouse_bm" brief="This is one example support suspend/resume." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_suspend_resume_host_hid_mouse/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_suspend_resume_host_hid_mouse/bm" type="xml">
            <files mask="host_suspend_resume_hid_mouse_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_host_suspend_resume_hid_mouse_freertos" name="host_suspend_resume_hid_mouse_freertos" brief="This is one example support suspend/resume." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_suspend_resume_host_hid_mouse/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_suspend_resume_host_hid_mouse/freertos" type="xml">
            <files mask="host_suspend_resume_hid_mouse_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_host_video_camera_freertos" name="host_video_camera_freertos" brief="The application supports to get JPEG image from camera function." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_host_video_camera/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_host_video_camera/freertos" type="xml">
            <files mask="host_video_camera_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_i2c_accel_event_trigger" name="i2c_accel_event_trigger" brief="This example demonstrate how to wake up main device in low power mode with accelerometer trigger event. The accelerometer can keep working while the main device is in low power mode (or deep sleep mode). Only when the configured event was captured, the accelerometer will trigger the interrupt to wake up the main device. This example uses I2C to configure the accelerometer to work in 800Hz data rate with low noise mode. And when the tap event is triggered, it will wake up the main device. And 32 samples around the trigger event will be captured." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/i2c" path="boards/evkmimxrt595/driver_examples/i2c/accel_event_trigger">
          <external path="boards/evkmimxrt595/driver_examples/i2c/accel_event_trigger" type="xml">
            <files mask="i2c_accel_event_trigger_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_i2c_dma_b2b_transfer_master" name="i2c_dma_b2b_transfer_master" brief="The i2c_dma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with DMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/i2c" path="boards/evkmimxrt595/driver_examples/i2c/dma_b2b_transfer/master">
          <external path="boards/evkmimxrt595/driver_examples/i2c/dma_b2b_transfer/master" type="xml">
            <files mask="i2c_dma_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_i2c_dma_b2b_transfer_slave" name="i2c_dma_b2b_transfer_slave" brief="The i2c_dma_b2b_transfer_slave example shows how to use i2c driver as slave to do board to board transfer with a DMA master:In this example, one i2c instance as slave and another i2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/i2c" path="boards/evkmimxrt595/driver_examples/i2c/dma_b2b_transfer/slave">
          <external path="boards/evkmimxrt595/driver_examples/i2c/dma_b2b_transfer/slave" type="xml">
            <files mask="i2c_dma_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_i2c_interrupt_b2b_transfer_master" name="i2c_interrupt_b2b_transfer_master" brief="The i2c_interrupt_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with interrupt:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/i2c" path="boards/evkmimxrt595/driver_examples/i2c/interrupt_b2b_transfer/master">
          <external path="boards/evkmimxrt595/driver_examples/i2c/interrupt_b2b_transfer/master" type="xml">
            <files mask="i2c_interrupt_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_i2c_interrupt_b2b_transfer_slave" name="i2c_interrupt_b2b_transfer_slave" brief="The i2c_interrupt_b2b_transfer_slave example shows how to use i2c driver as slave to do board to board transfer with interrupt:In this example, one i2c instance as slave and another i2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/i2c" path="boards/evkmimxrt595/driver_examples/i2c/interrupt_b2b_transfer/slave">
          <external path="boards/evkmimxrt595/driver_examples/i2c/interrupt_b2b_transfer/slave" type="xml">
            <files mask="i2c_interrupt_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_i2c_polling_b2b_master" name="i2c_polling_b2b_master" brief="The i2c_polling_b2b_master example shows how to use i2c driver as master to do board to board transfer using polling method:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/i2c" path="boards/evkmimxrt595/driver_examples/i2c/polling_b2b/master">
          <external path="boards/evkmimxrt595/driver_examples/i2c/polling_b2b/master" type="xml">
            <files mask="i2c_polling_b2b_master_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_i2c_polling_b2b_slave" name="i2c_polling_b2b_slave" brief="The i2c_polling_b2b_slave example shows how to use i2c driver as slave to do board to board transfer with a polling master:In this example, one i2c instance as slave and another i2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/i2c" path="boards/evkmimxrt595/driver_examples/i2c/polling_b2b/slave">
          <external path="boards/evkmimxrt595/driver_examples/i2c/polling_b2b/slave" type="xml">
            <files mask="i2c_polling_b2b_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_i2c_read_accel_value_transfer" name="i2c_read_accel_value_transfer" brief="The i2c_read_accel_value example shows how to use I2C driver to communicate with an i2c device: 1. How to use the i2c driver to read a i2c device who_am_I register. 2. How to use the i2c driver to write/read the device registers.In this example, the values of three-axis accelerometer print to the serial terminal on PC throughthe virtual serial port on board." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/i2c" path="boards/evkmimxrt595/driver_examples/i2c/read_accel_value_transfer">
          <external path="boards/evkmimxrt595/driver_examples/i2c/read_accel_value_transfer" type="xml">
            <files mask="i2c_read_accel_value_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_i2s_dma_record_playback" name="i2s_dma_record_playback" brief="The I2S example project uses one I2S interface to continuously record input sound to a bufferand another I2S interface to playback the buffer to output - digital loopback.It requires NXP Mic/Audio/Oled Shield with WM8904 codec.It needs to have 1-2 connected on JP3." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/i2s" path="boards/evkmimxrt595/driver_examples/i2s/dma_record_playback">
          <external path="boards/evkmimxrt595/driver_examples/i2s/dma_record_playback" type="xml">
            <files mask="i2s_dma_record_playback_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_i2s_dma_transfer" name="i2s_dma_transfer" brief="The I2S example project uses one I2S interface to continuously record input sound to a bufferand another I2S interface to playback the buffer to output - digital loopback.It requires NXP Mic/Audio/Oled Shield with WM8904 codec.It needs to have 1-2 connected on JP3." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/i2s" path="boards/evkmimxrt595/driver_examples/i2s/dma_transfer">
          <external path="boards/evkmimxrt595/driver_examples/i2s/dma_transfer" type="xml">
            <files mask="i2s_dma_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_i2s_dma_transfer_tfa9896" name="i2s_dma_transfer_tfa9896" brief="The I2S example project uses one I2S interface to continuously record input sound to a buffer and another I2S interface to playback the buffer to output - digital loopback. It requires NXP Mic/Audio/Oled Shield with TFA9896 codec. It needs to have 1-2 connected on JP3." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/i2s" path="boards/evkmimxrt595/driver_examples/i2s/dma_transfer_tfa9896">
          <external path="boards/evkmimxrt595/driver_examples/i2s/dma_transfer_tfa9896" type="xml">
            <files mask="i2s_dma_transfer_tfa9896_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_i2s_interrupt_record_playback" name="i2s_interrupt_record_playback" brief="The I2S example project uses one I2S interface to continuously record input sound to a bufferand another I2S interface to playback the buffer to output - digital loopback.It requires NXP Mic/Audio/Oled Shield with WM8904 codec.It needs to have 1-2 connected on JP3." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/i2s" path="boards/evkmimxrt595/driver_examples/i2s/interrupt_record_playback">
          <external path="boards/evkmimxrt595/driver_examples/i2s/interrupt_record_playback" type="xml">
            <files mask="i2s_interrupt_record_playback_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_i2s_interrupt_transfer" name="i2s_interrupt_transfer" brief="The I2S example project uses one I2S interface to continuously record input sound to a bufferand another I2S interface to playback the buffer to output - digital loopback.It requires NXP Mic/Audio/Oled Shield with WM8904 codec.It needs to have 1-2 connected on JP3." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/i2s" path="boards/evkmimxrt595/driver_examples/i2s/interrupt_transfer">
          <external path="boards/evkmimxrt595/driver_examples/i2s/interrupt_transfer" type="xml">
            <files mask="i2s_interrupt_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_i3c_bus_master" name="i3c_bus_master" brief="The i3c_bus_master example shows how to use i3c_bus component to create I3C bus and i3c master on bus." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/i3c" path="boards/evkmimxrt595/component_examples/i3c_bus/master">
          <external path="boards/evkmimxrt595/component_examples/i3c_bus/master" type="xml">
            <files mask="i3c_bus_master_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_i3c_bus_slave" name="i3c_bus_slave" brief="The i3c_bus_slave example shows how to use i3c_bus component to work as i3c bus slave." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/i3c" path="boards/evkmimxrt595/component_examples/i3c_bus/slave">
          <external path="boards/evkmimxrt595/component_examples/i3c_bus/slave" type="xml">
            <files mask="i3c_bus_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_i3c_polling_b2b_transfer_master" name="i3c_polling_b2b_transfer_master" brief="The i3c_polling_b2b_transfer_master example shows how to use i3c driver as master to do board to board transfer using polling method:In this example, one i3c instance as master and another i3c instance on the other board as slave. Master will assign dynamic address to slave, then sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/i3c" path="boards/evkmimxrt595/driver_examples/i3c/polling_b2b_transfer/master">
          <external path="boards/evkmimxrt595/driver_examples/i3c/polling_b2b_transfer/master" type="xml">
            <files mask="i3c_polling_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_i3c_polling_b2b_transfer_slave" name="i3c_polling_b2b_transfer_slave" brief="The i3c_polling_b2b_transfer_slave example shows how to use i3c driver as slave to do board to board transfer with a polling master:In this example, one i3c instance as slave and another i3c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/i3c" path="boards/evkmimxrt595/driver_examples/i3c/polling_b2b_transfer/slave">
          <external path="boards/evkmimxrt595/driver_examples/i3c/polling_b2b_transfer/slave" type="xml">
            <files mask="i3c_polling_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_iap_boot" name="iap_boot" brief="The IAP project is a simple demonstration program of the SDK IAP driver. It invokes into ROM with user specified parameter." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples" path="boards/evkmimxrt595/driver_examples/iap/iap_boot">
          <external path="boards/evkmimxrt595/driver_examples/iap/iap_boot" type="xml">
            <files mask="iap_boot_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_iap_flash" name="iap_flash" brief="The IAP flash project is a simple demonstration program of the SDK IAP driver. It provides some flash operations with ROM API, such as automatically detect flash configuration, erase sectors and program pages. All operations are followed by flash memory check to ensure the data operated are successful." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples" path="boards/evkmimxrt595/driver_examples/iap/iap_flash">
          <external path="boards/evkmimxrt595/driver_examples/iap/iap_flash" type="xml">
            <files mask="iap_flash_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_iap_otp" name="iap_otp" brief="The IAP project is a simple demonstration program of the SDK IAP driver. It reads fuse word with input index. A message a printed on the UART terminal as fuse read iap operations are performed." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples" path="boards/evkmimxrt595/driver_examples/iap/iap_otp">
          <external path="boards/evkmimxrt595/driver_examples/iap/iap_otp" type="xml">
            <files mask="iap_otp_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_lcdif_cursor_argb" name="lcdif_cursor_argb" brief="This example demonstrates how to use the LCDIF cursor in ARGB8888 mode. In this exapmle, the screen is devided into two parts: red and blue. A cursor is moving in the screen, the cursor alpha value changes during moving." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lcdif" path="boards/evkmimxrt595/driver_examples/lcdif/cursor_argb">
          <external path="boards/evkmimxrt595/driver_examples/lcdif/cursor_argb" type="xml">
            <files mask="lcdif_cursor_argb_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_lcdif_cursor_masked" name="lcdif_cursor_masked" brief="This example demonstrates how to use the LCDIF cursor in masked mode." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lcdif" path="boards/evkmimxrt595/driver_examples/lcdif/cursor_masked">
          <external path="boards/evkmimxrt595/driver_examples/lcdif/cursor_masked" type="xml">
            <files mask="lcdif_cursor_masked_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_lcdif_gamma" name="lcdif_gamma" brief="This example demonstrates how to use the LCDIF gamma correction feature. In this example, the gamma corretion table is set to invert the original picture. The original picture is gradual changed gray bars, the gamma correction is continuously enabled and disabled, so you can see the screen switch between the original picture and the inverted picture." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lcdif" path="boards/evkmimxrt595/driver_examples/lcdif/gamma">
          <external path="boards/evkmimxrt595/driver_examples/lcdif/gamma" type="xml">
            <files mask="lcdif_gamma_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_lcdif_rgb565" name="lcdif_rgb565" brief="This example demonstrates how to use the LCDIF driver to show the RGB565 format frame buffer. When the example runs, a rectangle is moving in the screen, and its color changes when touch border." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lcdif" path="boards/evkmimxrt595/driver_examples/lcdif/rgb565">
          <external path="boards/evkmimxrt595/driver_examples/lcdif/rgb565" type="xml">
            <files mask="lcdif_rgb565_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_littlevgl_demo_widgets" name="littlevgl_demo_widgets" brief="A demo application to show littlevgl widgets." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="littlevgl_examples" path="boards/evkmimxrt595/littlevgl_examples/littlevgl_demo_widgets">
          <external path="boards/evkmimxrt595/littlevgl_examples/littlevgl_demo_widgets" type="xml">
            <files mask="littlevgl_demo_widgets_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_littlevgl_demo_widgets_bm" name="littlevgl_demo_widgets_bm" brief="A demo application to show littlevgl widgets." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="littlevgl_examples" path="boards/evkmimxrt595/littlevgl_examples/littlevgl_demo_widgets_bm">
          <external path="boards/evkmimxrt595/littlevgl_examples/littlevgl_demo_widgets_bm" type="xml">
            <files mask="littlevgl_demo_widgets_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_littlevgl_guider" name="littlevgl_guider" brief="LittleVGL project used with GUI Guider." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="littlevgl_examples" path="boards/evkmimxrt595/littlevgl_examples/littlevgl_guider">
          <external path="boards/evkmimxrt595/littlevgl_examples/littlevgl_guider" type="xml">
            <files mask="littlevgl_guider_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_log_bm" name="log_bm" brief="The log demo is used to demonstrate how to use log component. The main function of the demo is to prompt the LOG level string according to the user input log level command." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="component_examples_lpc" path="boards/evkmimxrt595/component_examples/log/bm">
          <external path="boards/evkmimxrt595/component_examples/log/bm" type="xml">
            <files mask="log_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_log_freertos" name="log_freertos" brief="The log demo is used to demonstrate how to use log component. The main function of the demo is to prompt the LOG level string according to the user input log level command." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="component_examples_lpc" path="boards/evkmimxrt595/component_examples/log/freertos">
          <external path="boards/evkmimxrt595/component_examples/log/freertos" type="xml">
            <files mask="log_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_lpadc_dma" name="lpadc_dma" brief="The lpdc_dma example shows how to use ADC to trigger a DMA transfer. In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the LPADC's sample input. When running the project, typing any key into debug console would trigger the conversion, the software trigger API is called to start the conversion. When the ADC conversion is completed, it would trigger the DMA in ping-pong transfer mode to move the ADC conversion result from ADC conversion data register to user indicated memory. Then the main loop waits for the transfer to be done and print the result to terminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpadc" path="boards/evkmimxrt595/driver_examples/lpadc/dma">
          <external path="boards/evkmimxrt595/driver_examples/lpadc/dma" type="xml">
            <files mask="lpadc_dma_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_lpadc_interrupt" name="lpadc_interrupt" brief="The lpdc_interrupt example shows how to use interrupt with LPADC driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the LPADC'ssample input. When running the project, typing any key into debug console would trigger the conversion. ADC watermark interrupt would be asserted once the number of datawords stored in the ADC Result FIFO is greater than watermark value.In ADC ISR, the watermark flag would be cleared by reading the conversion result value. Also, result information wouldbe printed when the execution return to the main function." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpadc" path="boards/evkmimxrt595/driver_examples/lpadc/interrupt">
          <external path="boards/evkmimxrt595/driver_examples/lpadc/interrupt" type="xml">
            <files mask="lpadc_interrupt_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_lpadc_polling" name="lpadc_polling" brief="The lpadc_polling example shows the simplest way to use LPADC driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the LPADC'ssample input. When running the project, typing any key into debug console would trigger the conversion. The execution would check the FIFO valid flag in loop until the flag is asserted, which means the conversion is completed. Then read the conversion result value and print it to debug console.Note, the default setting of initialization for the ADC converter is just an available configuration. User can changethe configuration structure's setting in application to fit the special requirement." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpadc" path="boards/evkmimxrt595/driver_examples/lpadc/polling">
          <external path="boards/evkmimxrt595/driver_examples/lpadc/polling" type="xml">
            <files mask="lpadc_polling_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_lpadc_temperature_measurement" name="lpadc_temperature_measurement" brief="The lpadc_temperature_measurement example shows how to measure the temperature within the internal sensor. In this example, the ADC input channel is mapped to an internal temperature sensor. When running the project, typing any key into debug console would trigger the conversion. ADC watermark interrupt would be asserted once the number of datawords stored in the ADC Result FIFO is greater than watermark value. In ADC ISR, the watermark flag would be cleared by reading the conversion result value. When the conversion done, two valid result will be put in the FIFO, then the temperature can be calculated within the two results and a specific formula." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpadc" path="boards/evkmimxrt595/driver_examples/lpadc/temperature_measurement">
          <external path="boards/evkmimxrt595/driver_examples/lpadc/temperature_measurement" type="xml">
            <files mask="lpadc_temperature_measurement_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_lwip_httpssrv_ota" name="lwip_httpssrv_ota" brief="The lwip_httpsrv_ota demo application demonstrates OTA using an HTTPServer set up on lwIP TCP/IP and the MbedTLS stack withFreeRTOS. The user uses an Internet browser to upload new update package to reprogram application running on the board." toolchain="iar mcuxpresso" compiler="compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkmimxrt595/lwip_examples/lwip_httpssrv_ota">
          <external path="boards/evkmimxrt595/lwip_examples/lwip_httpssrv_ota" type="xml">
            <files mask="lwip_httpssrv_ota_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_mbedtls_benchmark" name="mbedtls_benchmark" brief="The mbdedTLS Benchmark demo application performs cryptographic algorithm benchmarking and prints results to theterminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="mbedtls_examples" path="boards/evkmimxrt595/mbedtls_examples/mbedtls_benchmark">
          <external path="boards/evkmimxrt595/mbedtls_examples/mbedtls_benchmark" type="xml">
            <files mask="mbedtls_benchmark_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_mbedtls_selftest" name="mbedtls_selftest" brief="The mbdedTLS SelfTest program performs cryptographic algorithm testing and prints results to theterminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="mbedtls_examples" path="boards/evkmimxrt595/mbedtls_examples/mbedtls_selftest">
          <external path="boards/evkmimxrt595/mbedtls_examples/mbedtls_selftest" type="xml">
            <files mask="mbedtls_selftest_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_mmccard_fatfs" name="mmccard_fatfs" brief="The MMCCARD FATFS project is a demonstration program that uses the SDK software. Tt mounts a file system based on a MMC card then does &quot;creat directory/read directory/create file/write file/read file&quot; operation. The file sdhc_config.h has default SDHC configuration which can be adjusted to letcard driver has different performance. The purpose of this example is to show how to use MMCCARD driver based FATFS disk in SDK software.Note:User can use MMC plus card or emmc(on board IC, but not recommand use emmc socket,due to high speed timing restriction)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/mmccard_fatfs" path="boards/evkmimxrt595/sdmmc_examples/mmccard_fatfs">
          <external path="boards/evkmimxrt595/sdmmc_examples/mmccard_fatfs" type="xml">
            <files mask="mmccard_fatfs_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_mmccard_fatfs_freertos" name="mmccard_fatfs_freertos" brief="The mmccard FATFS FREERTOS project is a demonstration program that uses the SDK software. The purpose of this example is to show how to use mmccard with fatfs and freertos." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/mmccard_fatfs_freertos" path="boards/evkmimxrt595/sdmmc_examples/mmccard_fatfs_freertos">
          <external path="boards/evkmimxrt595/sdmmc_examples/mmccard_fatfs_freertos" type="xml">
            <files mask="mmccard_fatfs_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_mmccard_freertos" name="mmccard_freertos" brief="The MMCCARD FreeRTOS project is a demonstration program that uses the SDK software. It reads/writes/erases the MMC card continusly. The purpose of this example is to show how to use MMCCARD driverwith FreeRTOS in SDK software to access MMC card.Note:User can use MMC plus card or emmc(on board IC, but not recommand use emmc socket,due to high speed timing restriction)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/mmccard_freertos" path="boards/evkmimxrt595/sdmmc_examples/mmccard_freertos">
          <external path="boards/evkmimxrt595/sdmmc_examples/mmccard_freertos" type="xml">
            <files mask="mmccard_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_mmccard_interrupt" name="mmccard_interrupt" brief="The MMCCARD Interrupt project is a demonstration program that uses the SDK software. It reads/writes/erases the MMC card continusly. The purpose of this example is to show how to use MMCCARD driver andshow how to use interrupt based transfer API in SDK software driver to access MMC card.Note:User can use MMC plus card or emmc(on board IC, but not recommand use emmc socket,due to high speed timing restriction)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/mmccard" path="boards/evkmimxrt595/sdmmc_examples/mmccard_interrupt">
          <external path="boards/evkmimxrt595/sdmmc_examples/mmccard_interrupt" type="xml">
            <files mask="mmccard_interrupt_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_mmccard_polling" name="mmccard_polling" brief="The MMCCARD Polling project is a demonstration program that uses the SDK software. It reads/writes/erases the MMC card continusly. The purpose of this example is to show how to use MMCCARD driver andshow how to use polling based transfer API in SDK software driver to access MMC card.Note:User can use MMC plus card or emmc(on board IC, but not recommand use emmc socket,due to high speed timing restriction)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/mmccard" path="boards/evkmimxrt595/sdmmc_examples/mmccard_polling">
          <external path="boards/evkmimxrt595/sdmmc_examples/mmccard_polling" type="xml">
            <files mask="mmccard_polling_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_mpi_loader_dsp_hello_world" name="mpi_loader_dsp_hello_world" brief="The mpi_loader_dsp_hello_world demo application demonstrates multicore packed image loader to load DSP image to execution place and kick off it. The multicore packed image is created by elftosb tool." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="component_examples" path="boards/evkmimxrt595/component_examples/mpi_loader/dsp_hello_world">
          <external path="boards/evkmimxrt595/component_examples/mpi_loader/dsp_hello_world" type="xml">
            <files mask="mpi_loader_dsp_hello_world_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_mpi_loader_extram_hello_world" name="mpi_loader_extram_hello_world" brief="The mpi_loader_extram_hello_world example demonstrates an application running in external RAM, and being loaded by mpi_loader_extram_loader. The application binary need to be built together with the mpi_loader_extram_loader binary with elftosb tool." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="component_examples" path="boards/evkmimxrt595/component_examples/mpi_loader/extram_hello_world">
          <external path="boards/evkmimxrt595/component_examples/mpi_loader/extram_hello_world" type="xml">
            <files mask="mpi_loader_extram_hello_world_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_mpi_loader_extram_loader" name="mpi_loader_extram_loader" brief="The mpi_loader_extram_loader demo application demonstrates multicore packed image loader to initialize external RAM first and then load the external RAM image to execute. The multicore packed image is created by elftosb tool." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="component_examples" path="boards/evkmimxrt595/component_examples/mpi_loader/extram_loader">
          <external path="boards/evkmimxrt595/component_examples/mpi_loader/extram_loader" type="xml">
            <files mask="mpi_loader_extram_loader_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_mrt_example" name="mrt_example" brief="The MRT project is a simple demonstration program of the SDK MRT driver. It sets up the MRThardware block to trigger a periodic interrupt after every 250 milliseconds. When the PIT interrupt is triggereda message a printed on the UART terminal and an LED is toggled on the board." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/mrt" path="boards/evkmimxrt595/driver_examples/mrt">
          <external path="boards/evkmimxrt595/driver_examples/mrt" type="xml">
            <files mask="mrt_example_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_ostimer_example" name="ostimer_example" brief="The OSTIMER project is a simple demonstration program of the SDK OSTIMER driver. It sets the OSTIMER as the wakeup source from deep-sleep mode. After wakeup from deep-sleep mode, OS timer will set match value to trigger the interrupt while the timer count tick reach the match value about every 2 seconds." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/ostimer" path="boards/evkmimxrt595/driver_examples/ostimer">
          <external path="boards/evkmimxrt595/driver_examples/ostimer" type="xml">
            <files mask="ostimer_example_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_ota_bootloader" name="ota_bootloader" brief="The ota_bootloader is a secondary bootloader" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="bootloader_examples" path="boards/evkmimxrt595/bootloader_examples/ota_bootloader">
          <external path="boards/evkmimxrt595/bootloader_examples/ota_bootloader" type="xml">
            <files mask="ota_bootloader_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_ota_demo_wifi_wiced" name="ota_demo_wifi_wiced" brief="The simple Shadow lightbulb example to illustrate how client application and things communicate with the Shadow service." toolchain="iar mcuxpresso" compiler="compiler_gcc compiler_iar" category="aws_examples" path="boards/evkmimxrt595/aws_examples/ota_demo_wifi_wiced_4343W">
          <external path="boards/evkmimxrt595/aws_examples/ota_demo_wifi_wiced_4343W" type="xml">
            <files mask="ota_demo_wifi_wiced_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_otfad_decrypt" name="otfad_decrypt" brief="The OTFAD project is a simple demonstration program of the SDK OTFAD driver. It support for on the fly AES decryption for the data stored in external memories in an encrypted form." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/otfad/decrypt" path="boards/evkmimxrt595/driver_examples/otfad/decrypt">
          <external path="boards/evkmimxrt595/driver_examples/otfad/decrypt" type="xml">
            <files mask="otfad_decrypt_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_pca9420" name="pca9420" brief="The pca9420 driver example demonstrates the usage of pca9420 SDK component driver.The example shows the usage of PCA9420 API to dump mode group settings; Or switch mode group; Or dump PCA9420 register content;" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples" path="boards/evkmimxrt595/driver_examples/pca9420">
          <external path="boards/evkmimxrt595/driver_examples/pca9420" type="xml">
            <files mask="pca9420_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_pint_pattern_match" name="pint_pattern_match" brief="This example shows how to use SDK drivers to use the Pin interrupt &amp; pattern match peripheral." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pint" path="boards/evkmimxrt595/driver_examples/pint/pattern_match">
          <external path="boards/evkmimxrt595/driver_examples/pint/pattern_match" type="xml">
            <files mask="pint_pattern_match_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_pint_pin_interrupt" name="pint_pin_interrupt" brief="This example shows how to use SDK drivers to use the Pin interrupt &amp; pattern match peripheral." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pint" path="boards/evkmimxrt595/driver_examples/pint/pin_interrupt">
          <external path="boards/evkmimxrt595/driver_examples/pint/pin_interrupt" type="xml">
            <files mask="pint_pin_interrupt_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_power_manager" name="power_manager" brief="The power_manager application shows the usage of normal power mode control APIs for entering the four kinds of low power mode: Sleep mode, Deep Sleep mode, Deep Power Down mode and Full Deep Power Down mode. When the application runs to each low power mode, the device would cut off the power for specific modules to save power. The device can be also waken up by prepared wakeup source from external event. Tips: This demo is to show how the various power mode can switch to each other. However, in actual low power use case, to save energy and reduce the consumption even more, many things can be done including: - Disable the clock for unnecessary module during low power mode. That means, programmer can disable the clocks before entering the low power mode and re-enable them after exiting the low power mode when necessary. - Disable the function for unnecessary part of a module when other part would keep working in low power mode. At the most time, more powerful function means more power consumption. For example, disable the digital function for the unnecessary pin mux, and so on. - Set the proper pin state (direction and logic level) according to the actual application hardware. Otherwise, the pin circuit would be activied unexpectedly waste some energy. - Other low power consideration based on the actual application hardware. - In order to meet typedef power consumption of DateSheet manual, Please configure MCU under the following conditions. 1. Configure all pins as GPIO with pull-up resistor disabled in the IOCON block. 2. Configure GPIO pins as outputs using the GPIO DIR register. 3. Write 1 to the GPIO CLR register to drive the outputs LOW. 4. All peripherals disabled." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkmimxrt595/demo_apps/power_manager">
          <external path="boards/evkmimxrt595/demo_apps/power_manager" type="xml">
            <files mask="power_manager_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_powerquad_benchmark_fft" name="powerquad_benchmark_fft" brief="This example shows the official CMSIS DSP function performance. It could be compared with the project powerquad_benckmark_fft to show the PowerQuad performance improvement." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/powerquad" path="boards/evkmimxrt595/driver_examples/powerquad/benchmark_fft">
          <external path="boards/evkmimxrt595/driver_examples/powerquad/benchmark_fft" type="xml">
            <files mask="powerquad_benchmark_fft_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_powerquad_benchmark_filter" name="powerquad_benchmark_filter" brief="This example shows the PowerQuad based CMSIS DSP function performance. It could be compared with the project powerquad_benckmark_sw_filter to show the PowerQuad performance improvement." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/powerquad" path="boards/evkmimxrt595/driver_examples/powerquad/benchmark_filter">
          <external path="boards/evkmimxrt595/driver_examples/powerquad/benchmark_filter" type="xml">
            <files mask="powerquad_benchmark_filter_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_powerquad_benchmark_math" name="powerquad_benchmark_math" brief="This example shows the PowerQuad based CMSIS DSP function performance. It could be compared with the project powerquad_benckmark_sw_math to show the PowerQuad performance improvement." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/powerquad" path="boards/evkmimxrt595/driver_examples/powerquad/benchmark_math">
          <external path="boards/evkmimxrt595/driver_examples/powerquad/benchmark_math" type="xml">
            <files mask="powerquad_benchmark_math_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_powerquad_benchmark_matrix" name="powerquad_benchmark_matrix" brief="This example shows the PowerQuad based CMSIS DSP function performance. It could be compared with the project powerquad_benckmark_sw_matrix to show the PowerQuad performance improvement." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/powerquad" path="boards/evkmimxrt595/driver_examples/powerquad/benchmark_matrix">
          <external path="boards/evkmimxrt595/driver_examples/powerquad/benchmark_matrix" type="xml">
            <files mask="powerquad_benchmark_matrix_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_powerquad_benchmark_sw_fft" name="powerquad_benchmark_sw_fft" brief="This example shows the official CMSIS DSP function performance. It could be compared with the project powerquad_benckmark_fft to show the PowerQuad performance improvement." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/powerquad" path="boards/evkmimxrt595/driver_examples/powerquad/benchmark_sw_fft">
          <external path="boards/evkmimxrt595/driver_examples/powerquad/benchmark_sw_fft" type="xml">
            <files mask="powerquad_benchmark_sw_fft_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_powerquad_benchmark_sw_filter" name="powerquad_benchmark_sw_filter" brief="This example shows the official CMSIS DSP function performance. It could be compared with the project powerquad_benckmark_filter to show the PowerQuad performance improvement." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/powerquad" path="boards/evkmimxrt595/driver_examples/powerquad/benchmark_sw_filter">
          <external path="boards/evkmimxrt595/driver_examples/powerquad/benchmark_sw_filter" type="xml">
            <files mask="powerquad_benchmark_sw_filter_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_powerquad_benchmark_sw_math" name="powerquad_benchmark_sw_math" brief="This example shows the official CMSIS DSP function performance. It could be compared with the project powerquad_benckmark_math to show the PowerQuad performance improvement." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/powerquad" path="boards/evkmimxrt595/driver_examples/powerquad/benchmark_sw_math">
          <external path="boards/evkmimxrt595/driver_examples/powerquad/benchmark_sw_math" type="xml">
            <files mask="powerquad_benchmark_sw_math_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_powerquad_benchmark_sw_matrix" name="powerquad_benchmark_sw_matrix" brief="This example shows the official CMSIS DSP function performance. It could be compared with the project powerquad_benckmark_matrix to show the PowerQuad performance improvement." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/powerquad" path="boards/evkmimxrt595/driver_examples/powerquad/benchmark_sw_matrix">
          <external path="boards/evkmimxrt595/driver_examples/powerquad/benchmark_sw_matrix" type="xml">
            <files mask="powerquad_benchmark_sw_matrix_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_powerquad_benchmark_vector" name="powerquad_benchmark_vector" brief="This example shows the PowerQuad based CMSIS DSP function performance." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/powerquad" path="boards/evkmimxrt595/driver_examples/powerquad/benchmark_vector">
          <external path="boards/evkmimxrt595/driver_examples/powerquad/benchmark_vector" type="xml">
            <files mask="powerquad_benchmark_vector_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_powerquad_cmsis" name="powerquad_cmsis" brief="This example shows how to use powerquad driver CMSIS DSP compatible functions." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/powerquad" path="boards/evkmimxrt595/driver_examples/powerquad/cmsis">
          <external path="boards/evkmimxrt595/driver_examples/powerquad/cmsis" type="xml">
            <files mask="powerquad_cmsis_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_powerquad_filter" name="powerquad_filter" brief="This example shows how to use powerquad driver filter functions." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/powerquad" path="boards/evkmimxrt595/driver_examples/powerquad/filter">
          <external path="boards/evkmimxrt595/driver_examples/powerquad/filter" type="xml">
            <files mask="powerquad_filter_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_powerquad_fir_fast" name="powerquad_fir_fast" brief="The PowerQuad fetches data from system RAM and private RAM through different path, for the calcutations which need data from two parts of memory, such as FIR, convolve, correlate, and some matrix operations, place the input data B in private RAM improves the performance. PowerQuad private RAM starts from address 0xe0000000, the first 4KByte is used by PowerQuad driver, the RAM starts from 0xe0001000 could be used by user for optimization. In this example, the FIR taps, convolve input data B, and correlate input data B are not changed, so they are converted to float format and saved to private RAM at the beginning. If the example runs successfully, the performance using optimized method is better than the nornal method." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/powerquad" path="boards/evkmimxrt595/driver_examples/powerquad/fir_fast">
          <external path="boards/evkmimxrt595/driver_examples/powerquad/fir_fast" type="xml">
            <files mask="powerquad_fir_fast_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_powerquad_math" name="powerquad_math" brief="This example project shows how to use the powerquad driver math functions." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/powerquad" path="boards/evkmimxrt595/driver_examples/powerquad/math">
          <external path="boards/evkmimxrt595/driver_examples/powerquad/math" type="xml">
            <files mask="powerquad_math_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_powerquad_matrix" name="powerquad_matrix" brief="This example shows how to use powerquad driver matrix functions." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/powerquad" path="boards/evkmimxrt595/driver_examples/powerquad/matrix">
          <external path="boards/evkmimxrt595/driver_examples/powerquad/matrix" type="xml">
            <files mask="powerquad_matrix_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_powerquad_transform" name="powerquad_transform" brief="This example shows how to use powerquad driver transform functions." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/powerquad" path="boards/evkmimxrt595/driver_examples/powerquad/transform">
          <external path="boards/evkmimxrt595/driver_examples/powerquad/transform" type="xml">
            <files mask="powerquad_transform_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_puf" name="puf" brief="This driver example project demonstrates how to use driver for the PUF controller which provides a secure key storage." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/puf" path="boards/evkmimxrt595/driver_examples/puf">
          <external path="boards/evkmimxrt595/driver_examples/puf" type="xml">
            <files mask="puf_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_rtc_example" name="rtc_example" brief="The RTC project is a simple demonstration program of the SDK RTC driver. It sets up the RTChardware block to trigger an alarm after a user specified time period. The test will set the currentdate and time to a predefined value. The alarm will be set with reference to this predefined dateand time." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/rtc" path="boards/evkmimxrt595/driver_examples/rtc">
          <external path="boards/evkmimxrt595/driver_examples/rtc" type="xml">
            <files mask="rtc_example_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_sctimer_16bit_counter" name="sctimer_16bit_counter" brief="The SCTimer 16-bit counter project is a demonstration program of the SDK SCTimer driver operation when using the SCTimer counteras two 16-bit counters.The example toggles an output per counter when a match occurs." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sctimer" path="boards/evkmimxrt595/driver_examples/sctimer/16bit_counter">
          <external path="boards/evkmimxrt595/driver_examples/sctimer/16bit_counter" type="xml">
            <files mask="sctimer_16bit_counter_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_sctimer_multi_state_pwm" name="sctimer_multi_state_pwm" brief="The SCTImer multi-state project is a demonstration program of the SCTimer state machine. It shows how to set up events to be triggered in a certain stateand transitioning between states.State 0 has 2 events that generate a PWM signal, it also has an event linked to an input signal to transition to State 1.State 1 has 4 events that generate 2 PWM signals, it also has an event linked to an input signal to transition to State 0." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sctimer" path="boards/evkmimxrt595/driver_examples/sctimer/multi_state_pwm">
          <external path="boards/evkmimxrt595/driver_examples/sctimer/multi_state_pwm" type="xml">
            <files mask="sctimer_multi_state_pwm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_sctimer_pwm_with_dutycyle_change" name="sctimer_pwm_with_dutycyle_change" brief="This SCTIMer project is a demonstration program of the SDK SCTimer driver's PWM generation. It sets up a PWM signaland periodically updates the PWM signals dutycycle." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sctimer" path="boards/evkmimxrt595/driver_examples/sctimer/pwm_with_dutycyle_change">
          <external path="boards/evkmimxrt595/driver_examples/sctimer/pwm_with_dutycyle_change" type="xml">
            <files mask="sctimer_pwm_with_dutycyle_change_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_sctimer_simple_pwm" name="sctimer_simple_pwm" brief="The SCTimer project is a simple demonstration program of the SDK SCTimer's driver capabiltiy to generate PWM signals." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sctimer" path="boards/evkmimxrt595/driver_examples/sctimer/simple_pwm">
          <external path="boards/evkmimxrt595/driver_examples/sctimer/simple_pwm" type="xml">
            <files mask="sctimer_simple_pwm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_sd_jpeg" name="sd_jpeg" brief="The SD JPEG Demo application reads the JPEG pictures from the SD card, decodesthem, and shows them in the LCD panel one by one." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="jpeg_examples" path="boards/evkmimxrt595/jpeg_examples/sd_jpeg">
          <external path="boards/evkmimxrt595/jpeg_examples/sd_jpeg" type="xml">
            <files mask="sd_jpeg_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_sdcard_fatfs" name="sdcard_fatfs" brief="The SDCARD FATFS project is a demonstration program that uses the SDK software. Tt mounts a file system based on a SD card then does &quot;creat directory/read directory/create file/write file/read file&quot;operation. The file sdhc_config.h has default SDHC configuration which can be adjusted to let carddriver has different performance. The purpose of this example is to show how to use SDCARD driver based FATFS disk in SDK software." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/sdcard_fatfs" path="boards/evkmimxrt595/sdmmc_examples/sdcard_fatfs">
          <external path="boards/evkmimxrt595/sdmmc_examples/sdcard_fatfs" type="xml">
            <files mask="sdcard_fatfs_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_sdcard_fatfs_freertos" name="sdcard_fatfs_freertos" brief="The SDCARD FATFS FREERTOS project is a demonstration program that uses the SDK software. The purpose of this example is to show how to use SDCARD with fatfs and freertos." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/sdcard_fatfs_freertos" path="boards/evkmimxrt595/sdmmc_examples/sdcard_fatfs_freertos">
          <external path="boards/evkmimxrt595/sdmmc_examples/sdcard_fatfs_freertos" type="xml">
            <files mask="sdcard_fatfs_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_sdcard_freertos" name="sdcard_freertos" brief="The SDCARD FreeRTOS project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver with FreeRTOS in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/sdcard_freertos" path="boards/evkmimxrt595/sdmmc_examples/sdcard_freertos">
          <external path="boards/evkmimxrt595/sdmmc_examples/sdcard_freertos" type="xml">
            <files mask="sdcard_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_sdcard_interrupt" name="sdcard_interrupt" brief="The SDCARD Interrupt project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver andshow how to use interrupt based transfer API in SDHC driver in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/sdcard_interrupt" path="boards/evkmimxrt595/sdmmc_examples/sdcard_interrupt">
          <external path="boards/evkmimxrt595/sdmmc_examples/sdcard_interrupt" type="xml">
            <files mask="sdcard_interrupt_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_sdcard_polling" name="sdcard_polling" brief="The SDCARD Polling project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver andshow how to use polling based transfer API in SDHC driver in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/sdcard_polling" path="boards/evkmimxrt595/sdmmc_examples/sdcard_polling">
          <external path="boards/evkmimxrt595/sdmmc_examples/sdcard_polling" type="xml">
            <files mask="sdcard_polling_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_sdio" name="sdio" brief="The SDIO project is a demonstration program that uses the SDK software. It reads/writes the SDIO card reigister. The purpose of this example is to show how to use SDio driver and this is a very simple example." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples" path="boards/evkmimxrt595/sdmmc_examples/sdio">
          <external path="boards/evkmimxrt595/sdmmc_examples/sdio" type="xml">
            <files mask="sdio_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_sdio_freertos" name="sdio_freertos" brief="The SDIO FREERTOS project is a demonstration program that uses the SDK software. It reads/writes the SDIO card reigister. The purpose of this example is to show how to use SDio driver with freertos." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/sdio_freertos" path="boards/evkmimxrt595/sdmmc_examples/sdio_freertos">
          <external path="boards/evkmimxrt595/sdmmc_examples/sdio_freertos" type="xml">
            <files mask="sdio_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_secure_faults_ns" name="secure_faults_ns" brief="The Secure Faults demo application demonstrates handling of different secure faults. This application is based on application Hello World. In addition, user can invoke different secure faults by setting testCaseNumber variable (see source code). This is non-secure part of the application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="trustzone_examples" linked_projects="evkmimxrt595_secure_faults_s" path="boards/evkmimxrt595/trustzone_examples/secure_faults/secure_faults_ns">
          <external path="boards/evkmimxrt595/trustzone_examples/secure_faults/secure_faults_ns" type="xml">
            <files mask="secure_faults_ns_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_secure_faults_s" name="secure_faults_s" brief="The Secure Faults demo application demonstrates handling of different secure faults. This application is based on application Hello World. In addition, user can invoke different secure faults by setting testCaseNumber variable (see source code). This is secure part of the application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="trustzone_examples" linked_projects="evkmimxrt595_secure_faults_ns" path="boards/evkmimxrt595/trustzone_examples/secure_faults/secure_faults_s">
          <external path="boards/evkmimxrt595/trustzone_examples/secure_faults/secure_faults_s" type="xml">
            <files mask="secure_faults_s_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_secure_gpio_ns" name="secure_gpio_ns" brief="The Secure GPIO demo application demonstrates using of secure GPIO peripheral and GPIO mask feature in AHB secure controller. This is non-secure part of the application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="trustzone_examples" linked_projects="evkmimxrt595_secure_gpio_s" path="boards/evkmimxrt595/trustzone_examples/secure_gpio/secure_gpio_ns">
          <external path="boards/evkmimxrt595/trustzone_examples/secure_gpio/secure_gpio_ns" type="xml">
            <files mask="secure_gpio_ns_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_secure_gpio_s" name="secure_gpio_s" brief="The Secure GPIO demo application demonstrates using of secure GPIO peripheral and GPIO mask feature in AHB secure controller. This is secure part of the application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="trustzone_examples" linked_projects="evkmimxrt595_secure_gpio_ns" path="boards/evkmimxrt595/trustzone_examples/secure_gpio/secure_gpio_s">
          <external path="boards/evkmimxrt595/trustzone_examples/secure_gpio/secure_gpio_s" type="xml">
            <files mask="secure_gpio_s_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_shell" name="shell" brief="The Shell Demo application demonstrates to control Leds by commands." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkmimxrt595/demo_apps/shell">
          <external path="boards/evkmimxrt595/demo_apps/shell" type="xml">
            <files mask="shell_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_spi_dma_b2b_transfer_master" name="spi_dma_b2b_transfer_master" brief="The spi_dma_b2b_transfer_master example shows how to use driver API to transfer in DMA way.  In this example, one spi instance as master and another spi instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checksif the data received from slave is correct. This example needs to work with spi_dma_b2b_transfer_slave example.Note: This example will run in master mode, please prepare another board for slave, and the slave       board should be started first.Project Information1.How to set the baudrate of SPI?  The baudrate of SPI is easy to set, just make sure the source clock of SPI." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/spi" path="boards/evkmimxrt595/driver_examples/spi/dma_b2b_transfer/master">
          <external path="boards/evkmimxrt595/driver_examples/spi/dma_b2b_transfer/master" type="xml">
            <files mask="spi_dma_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_spi_dma_b2b_transfer_slave" name="spi_dma_b2b_transfer_slave" brief="The spi_dma_b2b_transfer_slave example shows how to use driver API to transfer in DMA way.  In this example, one spi instance as master and another spi instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checksif the data received from master is correct. This example needs to work with spi_dma_b2b_transfer_master example." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/spi" path="boards/evkmimxrt595/driver_examples/spi/dma_b2b_transfer/slave">
          <external path="boards/evkmimxrt595/driver_examples/spi/dma_b2b_transfer/slave" type="xml">
            <files mask="spi_dma_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_spi_interrupt_b2b_master" name="spi_interrupt_b2b_master" brief="The spi_interrupt_b2b_master example shows how to use spi functional API to do interrupt transfer as a master:In this example, the spi instance as master. Master sends a piece of data to slave, receive data from slave,and checkif the data master received is correct. This example needs to work with spi_interrupt_b2b_slave example." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/spi" path="boards/evkmimxrt595/driver_examples/spi/interrupt_b2b/master">
          <external path="boards/evkmimxrt595/driver_examples/spi/interrupt_b2b/master" type="xml">
            <files mask="spi_interrupt_b2b_master_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_spi_interrupt_b2b_slave" name="spi_interrupt_b2b_slave" brief="The spi_interrupt_b2b_slave example shows how to use spi functional API to do interrupt transfer as a slave:In this example, the spi instance as slave. Slave receives data froma master and send a peiece of data to master,and check if the data slave received is correct. This example needs to work with spi_interrupt_b2b_master example." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/spi" path="boards/evkmimxrt595/driver_examples/spi/interrupt_b2b/slave">
          <external path="boards/evkmimxrt595/driver_examples/spi/interrupt_b2b/slave" type="xml">
            <files mask="spi_interrupt_b2b_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_spi_interrupt_b2b_transfer_master" name="spi_interrupt_b2b_transfer_master" brief="The spi_interrupt_board2board_master example shows how to use spi driver as master to do board to board transfer withinterrupt:In this example, one spi instance as master and another spi instance on othereboard as slave. Master sends a piece ofdata to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/spi" path="boards/evkmimxrt595/driver_examples/spi/interrupt_b2b_transfer/master">
          <external path="boards/evkmimxrt595/driver_examples/spi/interrupt_b2b_transfer/master" type="xml">
            <files mask="spi_interrupt_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_spi_interrupt_b2b_transfer_slave" name="spi_interrupt_b2b_transfer_slave" brief="The spi_interrupt_board2board_slave example shows how to use spi driver as slave to do board to board transfer with interrupt:In this example, one spi instance as slave and another spi instance on other board as master. Master sends a piece ofdata to slave, and receive a piece of data from slave. This example checks if the data received from master is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/spi" path="boards/evkmimxrt595/driver_examples/spi/interrupt_b2b_transfer/slave">
          <external path="boards/evkmimxrt595/driver_examples/spi/interrupt_b2b_transfer/slave" type="xml">
            <files mask="spi_interrupt_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_spi_polling_b2b_transfer_master" name="spi_polling_b2b_transfer_master" brief="The spi_polling_board2board_master example shows how to use spi driver as master to do board to board transfer with polling:In this example, one spi instance as master and another spi instance on othereboard as slave. Master sends a piece ofdata to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/spi" path="boards/evkmimxrt595/driver_examples/spi/polling_b2b_transfer/master">
          <external path="boards/evkmimxrt595/driver_examples/spi/polling_b2b_transfer/master" type="xml">
            <files mask="spi_polling_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_spi_polling_b2b_transfer_slave" name="spi_polling_b2b_transfer_slave" brief="The spi_polling_board2board_slave example shows how to use spi driver as slave to do board to board transfer withpolling:Notice: The SPI slave of this example uses interrupt mode, as there is no polling mode for SPI slave.In this example, one spi instance as slave and another spi instance on other board as master. Master sends a piece ofdata to slave, and receive a piece of data from slave. This example checks if the data received from master is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/spi" path="boards/evkmimxrt595/driver_examples/spi/polling_b2b_transfer/slave">
          <external path="boards/evkmimxrt595/driver_examples/spi/polling_b2b_transfer/slave" type="xml">
            <files mask="spi_polling_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_clockout" name="clockout" brief="The syscon_clockout driver example shows how to output the internal clock signal. In this driver example, users can choose the clock signal to be outputted, and the divider of the output clock signal. By probe the output pin, users can observe the selected internal clock signal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples" path="boards/evkmimxrt595/driver_examples/clockout">
          <external path="boards/evkmimxrt595/driver_examples/clockout" type="xml">
            <files mask="clockout_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_tiger_freertos" name="tiger_freertos" brief="This example shows how to use the vglite component. This application draw a tiger on the screen." toolchain="armgcc iar mcuxpresso" compiler="compiler_gcc compiler_iar" category="vglite_examples/tiger_freertos" path="boards/evkmimxrt595/vglite_examples/tiger_freertos">
          <external path="boards/evkmimxrt595/vglite_examples/tiger_freertos" type="xml">
            <files mask="tiger_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_tiled_freertos" name="tiled_freertos" brief="This example shows how to use the vglite component. This application draw a polygon vector graphic with high render quality on blue buffer." toolchain="armgcc iar mcuxpresso" compiler="compiler_gcc compiler_iar" category="vglite_examples/tiled_freertos" path="boards/evkmimxrt595/vglite_examples/tiled_freertos">
          <external path="boards/evkmimxrt595/vglite_examples/tiled_freertos" type="xml">
            <files mask="tiled_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_trng_random" name="trng_random" brief="The True Random Number Generator (TRNG) is a hardware accelerator module that generates a 512-bitentropy as needed by an entropy consuming module or by other post processing functions. The TRNGExample project is a demonstration program that uses the KSDK software to generate random numbersand prints them to the terminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/trng" path="boards/evkmimxrt595/driver_examples/trng/random">
          <external path="boards/evkmimxrt595/driver_examples/trng/random" type="xml">
            <files mask="trng_random_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_usart_dma_double_buffer_transfer" name="usart_dma_double_buffer_transfer" brief="This example shows how to use the DMA driver to implement a double buffer receive scheme from the USARTThe example shows the double buffer constructed using two descriptors (g_pingpong_desc). These descriptors are cycled from one to the other.Things to note- The descriptors of the ping pong transfer need to be aligned to size 16- The inital transfer will perform the same job as first descriptor of ping pong, so the first linkeage is to go to g_pingpong_desc[1]- g_pingpong_desc[1] then chains the g_pingpong_desc[0] as the next descriptor- The properties are set up such that g_pingpong_desc[0] (and the initial configuration uses INTA to signal back to the callback)- g_pingpong_desc[1] uses INTB to signal to the callback- The scheduled callback uses this information to know which data was last writtenA note on PerformanceThe intent of this example is to illustrate how a double-buffer scheme can be implemented using the dma. The performance of this example will be limited to how quickly the echo printer can read-out the data from the ping pong buffer and display it. This means that the example will work well if characters are entered at a rate where the DMA callback to echo the string can keep up with the input stream. Connecting the USARTRX to a continuous fast speed will cause the DMA to fall behind. " toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/usart" path="boards/evkmimxrt595/driver_examples/usart/dma_double_buffer_transfer">
          <external path="boards/evkmimxrt595/driver_examples/usart/dma_double_buffer_transfer" type="xml">
            <files mask="usart_dma_double_buffer_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_usart_dma_low_power" name="usart_dma_low_power" brief="The usart_dma_low_power example shows how to use usart to wake up the system in low power modes, and how to wake up for DMA only. In this example, one usart instance connects to PC through usart, the board will start receiving characters from PC and then go into low power mode. Each character from PC will only wake up the DMA but the CPU keeps in low power mode. Once 8 characters were received, system will be woken up and echo the characters to PC." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/usart" path="boards/evkmimxrt595/driver_examples/usart/dma_low_power">
          <external path="boards/evkmimxrt595/driver_examples/usart/dma_low_power" type="xml">
            <files mask="usart_dma_low_power_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_usart_dma_transfer" name="usart_dma_transfer" brief="The usart_dma example shows how to use usart driver with DMA:In this example, one usart instance connect to PC through usart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/usart" path="boards/evkmimxrt595/driver_examples/usart/dma_transfer">
          <external path="boards/evkmimxrt595/driver_examples/usart/dma_transfer" type="xml">
            <files mask="usart_dma_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_usart_interrupt" name="usart_interrupt" brief="The uart_functioncal_interrupt example shows how to use uart driver functionalAPI to receive data with interrupt method:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/usart" path="boards/evkmimxrt595/driver_examples/usart/interrupt">
          <external path="boards/evkmimxrt595/driver_examples/usart/interrupt" type="xml">
            <files mask="usart_interrupt_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_usart_interrupt_rb_transfer" name="usart_interrupt_rb_transfer" brief="The uart_interrupt_ring_buffer example shows how to use uart driver in interrupt way withRX ring buffer enabled:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/usart" path="boards/evkmimxrt595/driver_examples/usart/interrupt_rb_transfer">
          <external path="boards/evkmimxrt595/driver_examples/usart/interrupt_rb_transfer" type="xml">
            <files mask="usart_interrupt_rb_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_usart_interrupt_transfer" name="usart_interrupt_transfer" brief="The uart_interrupt example shows how to use uart driver in interrupt way:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/usart" path="boards/evkmimxrt595/driver_examples/usart/interrupt_transfer">
          <external path="boards/evkmimxrt595/driver_examples/usart/interrupt_transfer" type="xml">
            <files mask="usart_interrupt_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_usart_polling" name="usart_polling" brief="The uart_polling example shows how to use uart driver in polling way:In this example, one uart instance connect to PC through uart, the board will send back all characters that PCsend to the board." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/usart" path="boards/evkmimxrt595/driver_examples/usart/polling">
          <external path="boards/evkmimxrt595/driver_examples/usart/polling" type="xml">
            <files mask="usart_polling_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_utick" name="utick" brief="The utick project is a simple demonstration program of the SDK utick driver. It sets up the utick hardware block to trigger a periodic interrupt after every 1 second. When the utick interrupt is triggered a message is printed on the UART terminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples" path="boards/evkmimxrt595/driver_examples/utick">
          <external path="boards/evkmimxrt595/driver_examples/utick" type="xml">
            <files mask="utick_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_vector_freertos" name="vector_freertos" brief="This example shows how to use the vglite component. This application draw a polygon vector graphic with high render quality on blue buffer." toolchain="armgcc iar mcuxpresso" compiler="compiler_gcc compiler_iar" category="vglite_examples/vector_freertos" path="boards/evkmimxrt595/vglite_examples/vector_freertos">
          <external path="boards/evkmimxrt595/vglite_examples/vector_freertos" type="xml">
            <files mask="vector_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_wiced_iperf_4343W" name="wiced_iperf_4343W" brief="Demonstrates Cypress WiFi connected over USDHC/SDIO" toolchain="armgcc iar mcuxpresso" compiler="compiler_gcc compiler_iar" category="wifi_examples" path="boards/evkmimxrt595/wifi_cypress_examples/wiced_iperf_4343W">
          <external path="boards/evkmimxrt595/wifi_cypress_examples/wiced_iperf_4343W" type="xml">
            <files mask="wiced_iperf_4343W_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_wiced_mfg_test_4343W" name="wiced_mfg_test_4343W" brief="Manufacturing Test Application" toolchain="armgcc iar mcuxpresso" compiler="compiler_gcc compiler_iar" category="wifi_examples" path="boards/evkmimxrt595/wifi_cypress_examples/wiced_mfg_test_4343W">
          <external path="boards/evkmimxrt595/wifi_cypress_examples/wiced_mfg_test_4343W" type="xml">
            <files mask="wiced_mfg_test_4343W_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_wiced_webconfig_4343W" name="wiced_webconfig_4343W" brief="Simple AP to Client configuration over web." toolchain="armgcc iar mcuxpresso" compiler="compiler_gcc compiler_iar" category="wifi_examples" path="boards/evkmimxrt595/wifi_cypress_examples/wiced_webconfig_4343W">
          <external path="boards/evkmimxrt595/wifi_cypress_examples/wiced_webconfig_4343W" type="xml">
            <files mask="wiced_webconfig_4343W_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_wifi_cli" name="wifi_cli" brief="wifi_cli" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="wifi_examples" path="boards/evkmimxrt595/wifi_examples/wifi_cli">
          <external path="boards/evkmimxrt595/wifi_examples/wifi_cli" type="xml">
            <files mask="wifi_cli_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_wifi_iperf" name="wifi_iperf" brief="wifi_iperf" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="wifi_examples" path="boards/evkmimxrt595/wifi_examples/wifi_iperf">
          <external path="boards/evkmimxrt595/wifi_examples/wifi_iperf" type="xml">
            <files mask="wifi_iperf_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_wifi_test_mode" name="wifi_test_mode" brief="wifi_test_mode" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="wifi_examples" path="boards/evkmimxrt595/wifi_examples/wifi_test_mode">
          <external path="boards/evkmimxrt595/wifi_examples/wifi_test_mode" type="xml">
            <files mask="wifi_test_mode_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_wifi_webconfig" name="wifi_webconfig" brief="Simple AP to Client configuration over web." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="wifi_examples" path="boards/evkmimxrt595/wifi_examples/wifi_webconfig">
          <external path="boards/evkmimxrt595/wifi_examples/wifi_webconfig" type="xml">
            <files mask="wifi_webconfig_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_wwdt_example" name="wwdt_example" brief="The WDOG Example project is to demonstrate usage of the KSDK wdog driver.In this example,quick test is first implemented to test the wdog.And then after 5 times of refreshing the watchdog, a timeout reset is generated." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/wwdt" path="boards/evkmimxrt595/driver_examples/wwdt">
          <external path="boards/evkmimxrt595/driver_examples/wwdt" type="xml">
            <files mask="wwdt_example_v3_8.xml"/>
          </external>
        </example>
      </examples>
      <debug_configurations>
        <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
          <drivers>
            <driver id_refs="QSPI_FLASH_evkmimxrt595">
              <driverBinary path="devices/MIMXRT595S/mcuxpresso" type="binary">
                <files mask="MIMXRT500_SFDP_MXIC_OSPI.cfx"/>
              </driverBinary>
            </driver>
          </drivers>
        </debug_configuration>
      </debug_configurations>
    </board>
    <board id="evkmimxrt595_agm01" name="EVK-MIMXRT595-AGM01" href="" version="1.0.0" package="MIMXRT595SFFOC" type="kit">
      <description>i.MX RT500 Evaluation Kit with 9-Axis sensor shield board FRDM-STBC-AGM01 having FXAS21002C Gyroscope &amp; FXOS8700CQ E-compass sensors</description>
      <image path="boards/evkmimxrt595_agm01" type="image">
        <files mask="evkmimxrt595_agm01.png"/>
      </image>
      <memory>
        <memoryBlock id="QSPI_FLASH_evkmimxrt595_agm01" name="QSPI_FLASH" addr="08000000" size="00800000" type="ExtFlash" access="RO"/>
      </memory>
      <examples>
        <example id="evkmimxrt595_agm01_fxas21002_fifo" name="fxas21002_fifo" brief="The FXAS21002 FIFO example application demonstrates the use of the FXAS21002 sensor in Buffered (FIFO) Mode.The example demonstrates configuration of all registers reguired to put the sensor in FIFO Mode and read out samples.The sensor reads samples and are buffered upto the configured Water Mark Level and then a Flag is set.The application consistently checks the Flag and when set, reads out all(count=Water Mark Level) samples." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="issdk/sensors" path="boards/evkmimxrt595_agm01/issdk_examples/sensors/fxas21002/fxas21002_fifo">
          <external path="boards/evkmimxrt595_agm01/issdk_examples/sensors/fxas21002/fxas21002_fifo" type="xml">
            <files mask="fxas21002_fifo_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_agm01_fxas21002_poll" name="fxas21002_poll" brief="The FXAS21002 Poll example application demonstrates the use of the FXAS21002 sensor in the Poll (Non-Buffered) Mode. The example demonstrates configuration of all registers reguired to put the sensor into Poll Mode and read out a sample." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="issdk/sensors" path="boards/evkmimxrt595_agm01/issdk_examples/sensors/fxas21002/fxas21002_poll">
          <external path="boards/evkmimxrt595_agm01/issdk_examples/sensors/fxas21002/fxas21002_poll" type="xml">
            <files mask="fxas21002_poll_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_agm01_fxos8700_fifo" name="fxos8700_fifo" brief="The FXAS8700 FIFO example application demonstrates the use of the FXAS8700 sensor in Buffered (FIFO) Mode.The example demonstrates configuration of all registers reguired to put the sensor in FIFO Mode and read out samples.The sensor reads samples and are buffered upto the configured Water Mark Level and then a Flag is set.The application consistently checks the Flag and when set, reads out all(count=Water Mark Level) samples." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="issdk/sensors" path="boards/evkmimxrt595_agm01/issdk_examples/sensors/fxos8700/fxos8700_fifo">
          <external path="boards/evkmimxrt595_agm01/issdk_examples/sensors/fxos8700/fxos8700_fifo" type="xml">
            <files mask="fxos8700_fifo_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_agm01_fxos8700_poll" name="fxos8700_poll" brief="The FXOS8700 Poll example application demonstrates the use of the FXOS8700 sensor in the Poll (Non-Buffered) Mode. The example demonstrates configuration of all registers reguired to put the sensor into Poll Mode and read out a sample." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="issdk/sensors" path="boards/evkmimxrt595_agm01/issdk_examples/sensors/fxos8700/fxos8700_poll">
          <external path="boards/evkmimxrt595_agm01/issdk_examples/sensors/fxos8700/fxos8700_poll" type="xml">
            <files mask="fxos8700_poll_v3_8.xml"/>
          </external>
        </example>
      </examples>
      <debug_configurations>
        <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
          <drivers>
            <driver id_refs="QSPI_FLASH_evkmimxrt595_agm01">
              <driverBinary path="devices/MIMXRT595S/mcuxpresso" type="binary">
                <files mask="MIMXRT500_SFDP_MXIC_OSPI.cfx"/>
              </driverBinary>
            </driver>
          </drivers>
        </debug_configuration>
      </debug_configurations>
    </board>
  </boards>
  <devices>
    <device id="MIMXRT595S" name="MIMXRT595S" version="1.0.0" full_name="MIMXRT595S" family="MIMXRT500" platform="i.MX">
      <description>MIMXRT595S: i.MX® MIMXRT595S 200MHz, 5M SRAM Microcontrollers (MCUs) based on ARM® Cortex®-M33 Core</description>
      <metadataSet>
        <metadata key="vendor" value="NXP"/>
        <metadata key="compatible_device.segger" value="MIMXRT595S_M33"/>
        <metadata key="compatible_device.pemicro" value="MIMXRT595S"/>
        <metadata key="vendor.device.multicore" value="true"/>
      </metadataSet>
      <core id="cm33_MIMXRT595S" name="cm33" fpu="true" type="cm33" boot_role="primary" dsp="true"/>
      <memory>
        <memoryBlock id="SRAM_MIMXRT595S" name="SRAM" addr="00080000" size="00280000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM_ROM_MIMXRT595S" name="SRAM_ROM" addr="00000000" size="00020000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM_SHARED_MIMXRT595S" name="SRAM_SHARED" addr="00020000" size="00060000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM_DSP_MIMXRT595S" name="SRAM_DSP" addr="00300000" size="00200000" type="RAM" access="RW"/>
        <memoryBlock id="USB_RAM_MIMXRT595S" name="USB_RAM" addr="40140000" size="00004000" type="RAM" access="RW"/>
      </memory>
      <total_memory flash_size_kb="0" ram_size_kb="5120"/>
      <package id="MIMXRT595SFFOC" name="MIMXRT595SFFOC"/>
      <package id="MIMXRT595SFAWC" name="MIMXRT595SFAWC"/>
      <evaluation_boards>
        <evaluation_board name="evkmimxrt595"/>
        <evaluation_board name="valmimxrt500"/>
      </evaluation_boards>
      <debug_configurations>
        <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
          <params>
            <params id="internal.wiretype.release.MIMXRT595S" name="internal.wiretype" value="SWD"/>
            <params id="internal.has_swo.release.MIMXRT595S" name="internal.has_swo" value="true"/>
            <params id="misc.options.MIMXRT595S" name="misc.options" value="--bootromstall 0x50002034"/>
            <params id="internal.connect.script.debug.mcuxpresso.MIMXRT595S" name="internal.connect.script" value="RT500_connect.scp"/>
          </params>
        </debug_configuration>
      </debug_configurations>
      <linkerSettings nature="c_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
      <linkerSettings nature="cpp_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
    </device>
  </devices>
  <components>
    <component id="project_template.evkmimxrt595.MIMXRT595S" name="evkmimxrt595" brief="Board_project_template evkmimxrt595" version="1.0.0" full_name="Board_project_template evkmimxrt595" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="Board Support/SDK Project Template" user_visible="true" type="project_template" package_base_path="boards/evkmimxrt595/project_template" project_base_path="board">
      <defines>
        <define name="FSL_SDK_DRIVER_QUICK_ACCESS_ENABLE" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_usart.MIMXRT595S"/>
          <component_dependency value="component.usart_adapter.MIMXRT595S"/>
          <component_dependency value="platform.drivers.lpc_iopctl.MIMXRT595S"/>
          <component_dependency value="platform.drivers.lpc_gpio.MIMXRT595S"/>
          <component_dependency value="platform.drivers.reset.MIMXRT595S"/>
          <component_dependency value="device.MIMXRT595S_startup.MIMXRT595S"/>
          <component_dependency value="platform.drivers.cache_cache64.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="platform.drivers.clock.MIMXRT595S"/>
          <component_dependency value="platform.drivers.power.MIMXRT595S"/>
          <component_dependency value="platform.drivers.flash_config.MIMXRT595S"/>
          <component_dependency value="platform.drivers.flexspi.MIMXRT595S"/>
          <any_of>
            <all>
              <component_dependency value="utility.debug_console.MIMXRT595S"/>
              <component_dependency value="component.serial_manager.MIMXRT595S"/>
            </all>
            <component_dependency value="utility.debug_console_lite.MIMXRT595S"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="pin_mux.h"/>
        <files mask="peripherals.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="pin_mux.c"/>
        <files mask="peripherals.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS.MIMXRT595S" name="CMSIS" brief="Cmsis" version="5.6.0" full_name="Cmsis" devices="MIMXRT595S" user_visible="true" type="CMSIS" package_base_path="CMSIS" project_base_path="./">
      <dependencies>
        <all>
          <component_dependency value="platform.Include_common.MIMXRT595S"/>
          <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT595S"/>
          <component_dependency value="platform.CMSIS_Driver"/>
          <component_dependency value="platform.CMSIS_Driver_Include.CAN_CMSISInclude.MIMXRT595S"/>
          <component_dependency value="platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.MIMXRT595S"/>
          <component_dependency value="platform.CMSIS_Driver_Include.Ethernet_MAC_CMSISInclude.MIMXRT595S"/>
          <component_dependency value="platform.CMSIS_Driver_Include.Ethernet_PHY_CMSISInclude.MIMXRT595S"/>
          <component_dependency value="platform.CMSIS_Driver_Include.Flash_CMSISInclude.MIMXRT595S"/>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT595S"/>
          <component_dependency value="platform.CMSIS_Driver_Include.MCI_CMSISInclude.MIMXRT595S"/>
          <component_dependency value="platform.CMSIS_Driver_Include.NAND_CMSISInclude.MIMXRT595S"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SAI_CMSISInclude.MIMXRT595S"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT595S"/>
          <component_dependency value="platform.CMSIS_Driver_Include.USART_CMSISInclude.MIMXRT595S"/>
          <component_dependency value="platform.CMSIS_Driver_Include.USB_CMSISInclude.MIMXRT595S"/>
          <component_dependency value="platform.CMSIS_Driver_Include.USB_Device_CMSISInclude.MIMXRT595S"/>
          <component_dependency value="platform.CMSIS_Driver_Include.USB_Host_CMSISInclude.MIMXRT595S"/>
          <component_dependency value="platform.CMSIS_Driver_Include.WiFi_CMSISInclude.MIMXRT595S"/>
          <component_dependency value="platform.Include_dsp.MIMXRT595S"/>
          <component_dependency value="platform.CMSIS_Driver_Include.GPIO_CMSISInclude.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" project_relative_path="CMSIS" type="doc">
        <files mask="LICENSE.txt"/>
      </source>
      <source relative_path="Include" type="c_include">
        <files mask="cmsis_compiler.h"/>
        <files mask="arm_math.h"/>
        <files mask="core_cm35p.h"/>
        <files mask="core_cm4.h"/>
        <files mask="core_cm0plus.h"/>
        <files mask="mpu_armv8.h"/>
        <files mask="arm_common_tables.h"/>
        <files mask="core_dsp.h"/>
        <files mask="core_cm1.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="core_cm7.h"/>
        <files mask="tz_context.h"/>
        <files mask="cmsis_armcc.h"/>
        <files mask="core_sc000.h"/>
        <files mask="core_armv8mml.h"/>
        <files mask="core_sc300.h"/>
        <files mask="cmsis_armclang.h"/>
        <files mask="cmsis_iccarm.h"/>
        <files mask="core_cm0.h"/>
        <files mask="core_armv8mbl.h"/>
        <files mask="core_cm33.h"/>
        <files mask="mpu_armv7.h"/>
        <files mask="core_armv81mml.h"/>
        <files mask="cmsis_gcc.h"/>
        <files mask="core_cm3.h"/>
        <files mask="cmsis_version.h"/>
        <files mask="core_cm23.h"/>
        <files mask="cmsis_armclang_ltm.h"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_DSP_Lib.MIMXRT595S" name="CMSIS_DSP_Lib" brief="Cmsis_dsp_lib" version="1.7.0" full_name="Cmsis_dsp_lib" devices="MIMXRT595S" user_visible="false" type="CMSIS" package_base_path="CMSIS/DSP" project_base_path="DSP">
      <source relative_path="Examples/ARM/arm_class_marks_example" type="src">
        <files mask="arm_class_marks_example_f32.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_class_marks_example" type="configuration">
        <files mask="arm_class_marks_example.ini"/>
      </source>
      <source relative_path="Examples/ARM/arm_class_marks_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source relative_path="Examples/ARM/arm_class_marks_example" type="project">
        <files mask="arm_class_marks_example.uvoptx"/>
        <files mask="arm_class_marks_example.uvprojx"/>
      </source>
      <source relative_path="Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_convolution_example" type="src">
        <files mask="math_helper.c"/>
        <files mask="arm_convolution_example_f32.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_convolution_example" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source relative_path="Examples/ARM/arm_convolution_example" type="configuration">
        <files mask="arm_convolution_example.ini"/>
      </source>
      <source relative_path="Examples/ARM/arm_convolution_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source relative_path="Examples/ARM/arm_convolution_example" type="project">
        <files mask="arm_convolution_example.uvoptx"/>
        <files mask="arm_convolution_example.uvprojx"/>
      </source>
      <source relative_path="Examples/ARM/arm_convolution_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_convolution_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_convolution_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_convolution_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_convolution_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_convolution_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_convolution_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_convolution_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_dotproduct_example" type="src">
        <files mask="arm_dotproduct_example_f32.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_dotproduct_example" type="configuration">
        <files mask="arm_dotproduct_example.ini"/>
      </source>
      <source relative_path="Examples/ARM/arm_dotproduct_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source relative_path="Examples/ARM/arm_dotproduct_example" type="project">
        <files mask="arm_dotproduct_example.uvoptx"/>
        <files mask="arm_dotproduct_example.uvprojx"/>
      </source>
      <source relative_path="Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_fft_bin_example" type="src">
        <files mask="arm_fft_bin_example_f32.c"/>
        <files mask="arm_fft_bin_data.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_fft_bin_example" type="configuration">
        <files mask="arm_fft_bin_example.ini"/>
      </source>
      <source relative_path="Examples/ARM/arm_fft_bin_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source relative_path="Examples/ARM/arm_fft_bin_example" type="project">
        <files mask="arm_fft_bin_example.uvoptx"/>
        <files mask="arm_fft_bin_example.uvprojx"/>
      </source>
      <source relative_path="Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_fir_example" type="src">
        <files mask="arm_fir_data.c"/>
        <files mask="math_helper.c"/>
        <files mask="arm_fir_example_f32.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_fir_example" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source relative_path="Examples/ARM/arm_fir_example" type="configuration">
        <files mask="arm_fir_example.ini"/>
      </source>
      <source relative_path="Examples/ARM/arm_fir_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source relative_path="Examples/ARM/arm_fir_example" type="project">
        <files mask="arm_fir_example.uvoptx"/>
        <files mask="arm_fir_example.uvprojx"/>
      </source>
      <source relative_path="Examples/ARM/arm_fir_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_fir_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_fir_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_fir_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_fir_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_fir_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_fir_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_fir_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_graphic_equalizer_example" type="src">
        <files mask="math_helper.c"/>
        <files mask="arm_graphic_equalizer_data.c"/>
        <files mask="arm_graphic_equalizer_example_q31.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_graphic_equalizer_example" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source relative_path="Examples/ARM/arm_graphic_equalizer_example" type="configuration">
        <files mask="arm_graphic_equalizer_example.ini"/>
      </source>
      <source relative_path="Examples/ARM/arm_graphic_equalizer_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source relative_path="Examples/ARM/arm_graphic_equalizer_example" type="project">
        <files mask="arm_graphic_equalizer_example.uvoptx"/>
        <files mask="arm_graphic_equalizer_example.uvprojx"/>
      </source>
      <source relative_path="Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_linear_interp_example" type="src">
        <files mask="arm_linear_interp_example_f32.c"/>
        <files mask="arm_linear_interp_data.c"/>
        <files mask="math_helper.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_linear_interp_example" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source relative_path="Examples/ARM/arm_linear_interp_example" type="configuration">
        <files mask="arm_linear_interp_example.ini"/>
      </source>
      <source relative_path="Examples/ARM/arm_linear_interp_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source relative_path="Examples/ARM/arm_linear_interp_example" type="project">
        <files mask="arm_linear_interp_example.uvoptx"/>
        <files mask="arm_linear_interp_example.uvprojx"/>
      </source>
      <source relative_path="Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_matrix_example" type="src">
        <files mask="arm_matrix_example_f32.c"/>
        <files mask="math_helper.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_matrix_example" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source relative_path="Examples/ARM/arm_matrix_example" type="configuration">
        <files mask="arm_matrix_example.ini"/>
      </source>
      <source relative_path="Examples/ARM/arm_matrix_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source relative_path="Examples/ARM/arm_matrix_example" type="project">
        <files mask="arm_matrix_example.uvoptx"/>
        <files mask="arm_matrix_example.uvprojx"/>
      </source>
      <source relative_path="Examples/ARM/arm_matrix_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_matrix_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_matrix_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_matrix_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_matrix_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_matrix_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_matrix_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_matrix_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_signal_converge_example" type="src">
        <files mask="arm_signal_converge_data.c"/>
        <files mask="math_helper.c"/>
        <files mask="arm_signal_converge_example_f32.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_signal_converge_example" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source relative_path="Examples/ARM/arm_signal_converge_example" type="configuration">
        <files mask="arm_signal_converge_example.ini"/>
      </source>
      <source relative_path="Examples/ARM/arm_signal_converge_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source relative_path="Examples/ARM/arm_signal_converge_example" type="project">
        <files mask="arm_signal_converge_example.uvoptx"/>
        <files mask="arm_signal_converge_example.uvprojx"/>
      </source>
      <source relative_path="Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_sin_cos_example" type="src">
        <files mask="arm_sin_cos_example_f32.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_sin_cos_example" type="configuration">
        <files mask="arm_sin_cos_example.ini"/>
      </source>
      <source relative_path="Examples/ARM/arm_sin_cos_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source relative_path="Examples/ARM/arm_sin_cos_example" type="project">
        <files mask="arm_sin_cos_example.uvoptx"/>
        <files mask="arm_sin_cos_example.uvprojx"/>
      </source>
      <source relative_path="Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_variance_example" type="src">
        <files mask="arm_variance_example_f32.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_variance_example" type="configuration">
        <files mask="arm_variance_example.ini"/>
      </source>
      <source relative_path="Examples/ARM/arm_variance_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source relative_path="Examples/ARM/arm_variance_example" type="project">
        <files mask="arm_variance_example.uvoptx"/>
        <files mask="arm_variance_example.uvprojx"/>
      </source>
      <source relative_path="Examples/ARM/arm_variance_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_variance_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_variance_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_variance_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_variance_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_variance_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_variance_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_variance_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source relative_path="Projects/ARM" type="script">
        <files mask="arm_cortexM_math_Build.bat"/>
      </source>
      <source relative_path="Projects/ARM" type="project">
        <files mask="arm_cortexM_math.uvoptx"/>
        <files mask="arm_cortexM_math.uvprojx"/>
      </source>
      <source relative_path="Projects/GCC" type="script">
        <files mask="arm_cortexM_math_Build.bat"/>
      </source>
      <source relative_path="Projects/GCC" type="project">
        <files mask="arm_cortexM_math.uvoptx"/>
        <files mask="arm_cortexM_math.uvprojx"/>
      </source>
      <source relative_path="Projects/IAR" type="script">
        <files mask="arm_cortexM_math_Build.bat"/>
      </source>
      <source relative_path="Projects/IAR" type="other">
        <files mask="arm_cortexM_math.eww"/>
      </source>
      <source relative_path="Projects/IAR" type="project">
        <files mask="arm_cortexM_math.ewp"/>
      </source>
      <source relative_path="Source/BasicMathFunctions" type="src">
        <files mask="arm_mult_f32.c"/>
        <files mask="arm_dot_prod_q31.c"/>
        <files mask="arm_sub_f32.c"/>
        <files mask="arm_sub_q15.c"/>
        <files mask="arm_shift_q7.c"/>
        <files mask="arm_abs_q7.c"/>
        <files mask="arm_abs_q31.c"/>
        <files mask="arm_mult_q31.c"/>
        <files mask="arm_dot_prod_f32.c"/>
        <files mask="arm_offset_q31.c"/>
        <files mask="arm_shift_q15.c"/>
        <files mask="arm_shift_q31.c"/>
        <files mask="arm_negate_q7.c"/>
        <files mask="arm_add_q15.c"/>
        <files mask="arm_add_q7.c"/>
        <files mask="arm_offset_f32.c"/>
        <files mask="arm_dot_prod_q15.c"/>
        <files mask="arm_mult_q7.c"/>
        <files mask="arm_dot_prod_q7.c"/>
        <files mask="arm_abs_f32.c"/>
        <files mask="arm_negate_q15.c"/>
        <files mask="arm_scale_q15.c"/>
        <files mask="arm_mult_q15.c"/>
        <files mask="arm_add_q31.c"/>
        <files mask="arm_scale_q7.c"/>
        <files mask="arm_offset_q7.c"/>
        <files mask="BasicMathFunctions.c"/>
        <files mask="arm_sub_q31.c"/>
        <files mask="arm_sub_q7.c"/>
        <files mask="arm_negate_f32.c"/>
        <files mask="arm_abs_q15.c"/>
        <files mask="arm_scale_f32.c"/>
        <files mask="arm_add_f32.c"/>
        <files mask="arm_offset_q15.c"/>
        <files mask="arm_negate_q31.c"/>
        <files mask="arm_scale_q31.c"/>
      </source>
      <source relative_path="Source/CommonTables" type="src">
        <files mask="CommonTables.c"/>
        <files mask="arm_common_tables.c"/>
        <files mask="arm_const_structs.c"/>
      </source>
      <source relative_path="Source/ComplexMathFunctions" type="src">
        <files mask="arm_cmplx_mag_squared_f32.c"/>
        <files mask="arm_cmplx_conj_f32.c"/>
        <files mask="arm_cmplx_mag_q31.c"/>
        <files mask="arm_cmplx_conj_q31.c"/>
        <files mask="arm_cmplx_dot_prod_f32.c"/>
        <files mask="arm_cmplx_mag_q15.c"/>
        <files mask="arm_cmplx_mag_f32.c"/>
        <files mask="arm_cmplx_dot_prod_q31.c"/>
        <files mask="arm_cmplx_dot_prod_q15.c"/>
        <files mask="arm_cmplx_mult_cmplx_q15.c"/>
        <files mask="arm_cmplx_mag_squared_q15.c"/>
        <files mask="arm_cmplx_conj_q15.c"/>
        <files mask="arm_cmplx_mult_real_q31.c"/>
        <files mask="arm_cmplx_mult_cmplx_f32.c"/>
        <files mask="ComplexMathFunctions.c"/>
        <files mask="arm_cmplx_mag_squared_q31.c"/>
        <files mask="arm_cmplx_mult_real_q15.c"/>
        <files mask="arm_cmplx_mult_cmplx_q31.c"/>
        <files mask="arm_cmplx_mult_real_f32.c"/>
      </source>
      <source relative_path="Source/ControllerFunctions" type="src">
        <files mask="arm_sin_cos_f32.c"/>
        <files mask="ControllerFunctions.c"/>
        <files mask="arm_pid_reset_q31.c"/>
        <files mask="arm_pid_init_q15.c"/>
        <files mask="arm_sin_cos_q31.c"/>
        <files mask="arm_pid_reset_f32.c"/>
        <files mask="arm_pid_reset_q15.c"/>
        <files mask="arm_pid_init_f32.c"/>
        <files mask="arm_pid_init_q31.c"/>
      </source>
      <source relative_path="Source/FastMathFunctions" type="src">
        <files mask="arm_cos_q31.c"/>
        <files mask="FastMathFunctions.c"/>
        <files mask="arm_sin_q31.c"/>
        <files mask="arm_sqrt_q15.c"/>
        <files mask="arm_cos_q15.c"/>
        <files mask="arm_sin_f32.c"/>
        <files mask="arm_sin_q15.c"/>
        <files mask="arm_cos_f32.c"/>
        <files mask="arm_sqrt_q31.c"/>
      </source>
      <source relative_path="Source/FilteringFunctions" type="src">
        <files mask="arm_iir_lattice_q15.c"/>
        <files mask="arm_iir_lattice_init_q15.c"/>
        <files mask="arm_fir_interpolate_q15.c"/>
        <files mask="arm_correlate_fast_q15.c"/>
        <files mask="arm_lms_norm_init_q15.c"/>
        <files mask="arm_fir_sparse_f32.c"/>
        <files mask="arm_fir_interpolate_f32.c"/>
        <files mask="arm_biquad_cascade_df1_fast_q15.c"/>
        <files mask="arm_iir_lattice_init_q31.c"/>
        <files mask="arm_fir_decimate_q31.c"/>
        <files mask="arm_fir_interpolate_q31.c"/>
        <files mask="arm_fir_decimate_init_f32.c"/>
        <files mask="arm_correlate_fast_opt_q15.c"/>
        <files mask="arm_lms_q31.c"/>
        <files mask="arm_lms_init_f32.c"/>
        <files mask="arm_fir_sparse_q7.c"/>
        <files mask="arm_conv_fast_opt_q15.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_init_f32.c"/>
        <files mask="arm_biquad_cascade_df1_init_q31.c"/>
        <files mask="arm_biquad_cascade_df2T_init_f64.c"/>
        <files mask="arm_iir_lattice_f32.c"/>
        <files mask="arm_fir_lattice_f32.c"/>
        <files mask="arm_conv_partial_opt_q15.c"/>
        <files mask="arm_iir_lattice_q31.c"/>
        <files mask="arm_correlate_fast_q31.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_f32.c"/>
        <files mask="arm_conv_f32.c"/>
        <files mask="arm_fir_sparse_q15.c"/>
        <files mask="arm_fir_sparse_init_q7.c"/>
        <files mask="arm_biquad_cascade_df1_fast_q31.c"/>
        <files mask="arm_biquad_cascade_df1_init_f32.c"/>
        <files mask="arm_fir_sparse_init_q31.c"/>
        <files mask="arm_fir_sparse_init_q15.c"/>
        <files mask="arm_fir_interpolate_init_q15.c"/>
        <files mask="arm_fir_lattice_q15.c"/>
        <files mask="arm_fir_decimate_init_q15.c"/>
        <files mask="arm_conv_partial_fast_opt_q15.c"/>
        <files mask="arm_fir_q31.c"/>
        <files mask="arm_biquad_cascade_df2T_init_f32.c"/>
        <files mask="arm_conv_fast_q15.c"/>
        <files mask="arm_fir_fast_q15.c"/>
        <files mask="arm_conv_q7.c"/>
        <files mask="arm_fir_q15.c"/>
        <files mask="arm_correlate_q15.c"/>
        <files mask="arm_lms_init_q15.c"/>
        <files mask="arm_conv_q15.c"/>
        <files mask="arm_conv_partial_q7.c"/>
        <files mask="arm_lms_f32.c"/>
        <files mask="arm_lms_norm_q15.c"/>
        <files mask="arm_fir_sparse_init_f32.c"/>
        <files mask="arm_lms_norm_init_q31.c"/>
        <files mask="arm_biquad_cascade_df1_init_q15.c"/>
        <files mask="arm_conv_partial_fast_q15.c"/>
        <files mask="arm_fir_init_f32.c"/>
        <files mask="arm_fir_decimate_f32.c"/>
        <files mask="arm_fir_lattice_init_q15.c"/>
        <files mask="arm_correlate_opt_q15.c"/>
        <files mask="arm_fir_sparse_q31.c"/>
        <files mask="arm_biquad_cascade_df2T_f32.c"/>
        <files mask="arm_fir_init_q7.c"/>
        <files mask="arm_fir_init_q15.c"/>
        <files mask="arm_fir_interpolate_init_f32.c"/>
        <files mask="arm_conv_opt_q7.c"/>
        <files mask="arm_lms_init_q31.c"/>
        <files mask="arm_fir_fast_q31.c"/>
        <files mask="arm_conv_partial_f32.c"/>
        <files mask="arm_biquad_cascade_df1_q15.c"/>
        <files mask="arm_biquad_cascade_df1_32x64_init_q31.c"/>
        <files mask="arm_lms_norm_q31.c"/>
        <files mask="arm_conv_partial_q15.c"/>
        <files mask="arm_conv_opt_q15.c"/>
        <files mask="arm_fir_decimate_q15.c"/>
        <files mask="arm_iir_lattice_init_f32.c"/>
        <files mask="arm_fir_lattice_init_f32.c"/>
        <files mask="arm_fir_decimate_fast_q31.c"/>
        <files mask="arm_fir_f32.c"/>
        <files mask="arm_fir_decimate_init_q31.c"/>
        <files mask="arm_conv_q31.c"/>
        <files mask="arm_lms_norm_f32.c"/>
        <files mask="arm_conv_partial_fast_q31.c"/>
        <files mask="arm_fir_lattice_init_q31.c"/>
        <files mask="arm_fir_init_q31.c"/>
        <files mask="arm_lms_norm_init_f32.c"/>
        <files mask="arm_correlate_opt_q7.c"/>
        <files mask="arm_fir_lattice_q31.c"/>
        <files mask="arm_conv_partial_q31.c"/>
        <files mask="arm_biquad_cascade_df2T_f64.c"/>
        <files mask="arm_biquad_cascade_df1_f32.c"/>
        <files mask="arm_lms_q15.c"/>
        <files mask="arm_correlate_q31.c"/>
        <files mask="arm_correlate_q7.c"/>
        <files mask="arm_fir_q7.c"/>
        <files mask="arm_conv_fast_q31.c"/>
        <files mask="arm_conv_partial_opt_q7.c"/>
        <files mask="arm_fir_decimate_fast_q15.c"/>
        <files mask="arm_fir_interpolate_init_q31.c"/>
        <files mask="arm_biquad_cascade_df1_q31.c"/>
        <files mask="FilteringFunctions.c"/>
        <files mask="arm_correlate_f32.c"/>
        <files mask="arm_biquad_cascade_df1_32x64_q31.c"/>
      </source>
      <source relative_path="Source/MatrixFunctions" type="src">
        <files mask="arm_mat_mult_f32.c"/>
        <files mask="arm_mat_mult_fast_q31.c"/>
        <files mask="arm_mat_init_q15.c"/>
        <files mask="arm_mat_mult_fast_q15.c"/>
        <files mask="arm_mat_trans_q15.c"/>
        <files mask="arm_mat_cmplx_mult_q31.c"/>
        <files mask="arm_mat_mult_q31.c"/>
        <files mask="arm_mat_init_f32.c"/>
        <files mask="arm_mat_inverse_f32.c"/>
        <files mask="arm_mat_scale_q31.c"/>
        <files mask="arm_mat_cmplx_mult_f32.c"/>
        <files mask="arm_mat_sub_q15.c"/>
        <files mask="arm_mat_scale_f32.c"/>
        <files mask="arm_mat_sub_f32.c"/>
        <files mask="arm_mat_add_q31.c"/>
        <files mask="arm_mat_add_f32.c"/>
        <files mask="MatrixFunctions.c"/>
        <files mask="arm_mat_mult_q15.c"/>
        <files mask="arm_mat_trans_q31.c"/>
        <files mask="arm_mat_scale_q15.c"/>
        <files mask="arm_mat_sub_q31.c"/>
        <files mask="arm_mat_inverse_f64.c"/>
        <files mask="arm_mat_init_q31.c"/>
        <files mask="arm_mat_trans_f32.c"/>
        <files mask="arm_mat_cmplx_mult_q15.c"/>
        <files mask="arm_mat_add_q15.c"/>
      </source>
      <source relative_path="Source/StatisticsFunctions" type="src">
        <files mask="arm_var_q15.c"/>
        <files mask="arm_min_q31.c"/>
        <files mask="arm_mean_f32.c"/>
        <files mask="arm_max_q7.c"/>
        <files mask="arm_max_f32.c"/>
        <files mask="arm_var_f32.c"/>
        <files mask="arm_power_q7.c"/>
        <files mask="arm_rms_f32.c"/>
        <files mask="arm_max_q31.c"/>
        <files mask="arm_max_q15.c"/>
        <files mask="arm_mean_q7.c"/>
        <files mask="arm_power_f32.c"/>
        <files mask="arm_min_q7.c"/>
        <files mask="arm_std_q15.c"/>
        <files mask="arm_min_f32.c"/>
        <files mask="arm_min_q15.c"/>
        <files mask="StatisticsFunctions.c"/>
        <files mask="arm_std_q31.c"/>
        <files mask="arm_rms_q31.c"/>
        <files mask="arm_mean_q15.c"/>
        <files mask="arm_std_f32.c"/>
        <files mask="arm_power_q15.c"/>
        <files mask="arm_mean_q31.c"/>
        <files mask="arm_rms_q15.c"/>
        <files mask="arm_power_q31.c"/>
        <files mask="arm_var_q31.c"/>
      </source>
      <source relative_path="Source/SupportFunctions" type="src">
        <files mask="SupportFunctions.c"/>
        <files mask="arm_fill_q7.c"/>
        <files mask="arm_q15_to_q7.c"/>
        <files mask="arm_copy_q15.c"/>
        <files mask="arm_copy_f32.c"/>
        <files mask="arm_q7_to_q15.c"/>
        <files mask="arm_q31_to_q15.c"/>
        <files mask="arm_copy_q7.c"/>
        <files mask="arm_q15_to_float.c"/>
        <files mask="arm_q7_to_float.c"/>
        <files mask="arm_float_to_q15.c"/>
        <files mask="arm_q15_to_q31.c"/>
        <files mask="arm_fill_f32.c"/>
        <files mask="arm_float_to_q7.c"/>
        <files mask="arm_fill_q31.c"/>
        <files mask="arm_q7_to_q31.c"/>
        <files mask="arm_q31_to_float.c"/>
        <files mask="arm_copy_q31.c"/>
        <files mask="arm_fill_q15.c"/>
        <files mask="arm_q31_to_q7.c"/>
        <files mask="arm_float_to_q31.c"/>
      </source>
      <source relative_path="Source/TransformFunctions" type="src">
        <files mask="arm_cfft_radix2_f32.c"/>
        <files mask="arm_cfft_radix8_f32.c"/>
        <files mask="arm_cfft_radix2_q15.c"/>
        <files mask="arm_cfft_radix4_init_f32.c"/>
        <files mask="arm_cfft_radix4_init_q15.c"/>
        <files mask="arm_cfft_radix2_init_q15.c"/>
        <files mask="arm_rfft_init_f32.c"/>
        <files mask="arm_rfft_fast_f32.c"/>
        <files mask="arm_rfft_init_q31.c"/>
        <files mask="arm_dct4_q15.c"/>
        <files mask="arm_dct4_init_q31.c"/>
        <files mask="arm_cfft_radix2_init_f32.c"/>
        <files mask="arm_dct4_init_q15.c"/>
        <files mask="arm_dct4_q31.c"/>
        <files mask="arm_rfft_q15.c"/>
        <files mask="arm_cfft_radix4_q31.c"/>
        <files mask="arm_cfft_radix2_init_q31.c"/>
        <files mask="TransformFunctions.c"/>
        <files mask="arm_cfft_radix4_q15.c"/>
        <files mask="arm_bitreversal.c"/>
        <files mask="arm_rfft_init_q15.c"/>
        <files mask="arm_rfft_q31.c"/>
        <files mask="arm_bitreversal2.c"/>
        <files mask="arm_rfft_fast_init_f32.c"/>
        <files mask="arm_cfft_radix2_q31.c"/>
        <files mask="arm_dct4_f32.c"/>
        <files mask="arm_cfft_f32.c"/>
        <files mask="arm_rfft_f32.c"/>
        <files mask="arm_cfft_radix4_init_q31.c"/>
        <files mask="arm_cfft_q31.c"/>
        <files mask="arm_cfft_q15.c"/>
        <files mask="arm_cfft_radix4_f32.c"/>
        <files mask="arm_dct4_init_f32.c"/>
      </source>
      <source relative_path="Source/TransformFunctions" type="asm_include">
        <files mask="arm_bitreversal2.S"/>
      </source>
      <include_paths>
        <include_path relative_path="Examples/ARM/arm_class_marks_example/RTE" type="c_include"/>
        <include_path relative_path="Examples/ARM/arm_convolution_example" type="c_include"/>
        <include_path relative_path="Examples/ARM/arm_convolution_example/RTE" type="c_include"/>
        <include_path relative_path="Examples/ARM/arm_dotproduct_example/RTE" type="c_include"/>
        <include_path relative_path="Examples/ARM/arm_fft_bin_example/RTE" type="c_include"/>
        <include_path relative_path="Examples/ARM/arm_fir_example" type="c_include"/>
        <include_path relative_path="Examples/ARM/arm_fir_example/RTE" type="c_include"/>
        <include_path relative_path="Examples/ARM/arm_graphic_equalizer_example" type="c_include"/>
        <include_path relative_path="Examples/ARM/arm_graphic_equalizer_example/RTE" type="c_include"/>
        <include_path relative_path="Examples/ARM/arm_linear_interp_example" type="c_include"/>
        <include_path relative_path="Examples/ARM/arm_linear_interp_example/RTE" type="c_include"/>
        <include_path relative_path="Examples/ARM/arm_matrix_example" type="c_include"/>
        <include_path relative_path="Examples/ARM/arm_matrix_example/RTE" type="c_include"/>
        <include_path relative_path="Examples/ARM/arm_signal_converge_example" type="c_include"/>
        <include_path relative_path="Examples/ARM/arm_signal_converge_example/RTE" type="c_include"/>
        <include_path relative_path="Examples/ARM/arm_sin_cos_example/RTE" type="c_include"/>
        <include_path relative_path="Examples/ARM/arm_variance_example/RTE" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_DSP_Lib.arm_ARMv8MBLl_math.MIMXRT595S" name="arm_ARMv8MBLl_math" brief="Cmsis_dsp_lib arm_armv8mbll_math" version="1.7.0" full_name="Cmsis_dsp_lib arm_armv8mbll_math" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/DSP/Lib" project_base_path="libs">
      <source toolchain="mdk" relative_path="ARM" project_relative_path="./" type="lib">
        <files mask="arm_ARMv8MBLl_math.lib"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="GCC" project_relative_path="./" type="lib">
        <files mask="libarm_ARMv8MBLl_math.a"/>
      </source>
    </component>
    <component id="platform.CMSIS_DSP_Lib.arm_ARMv8MMLl_math.MIMXRT595S" name="arm_ARMv8MMLl_math" brief="Cmsis_dsp_lib arm_armv8mmll_math" version="1.7.0" full_name="Cmsis_dsp_lib arm_armv8mmll_math" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/DSP/Lib" project_base_path="libs">
      <source toolchain="mdk" relative_path="ARM" project_relative_path="./" type="lib">
        <files mask="arm_ARMv8MMLl_math.lib"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="GCC" project_relative_path="./" type="lib">
        <files mask="libarm_ARMv8MMLl_math.a"/>
      </source>
    </component>
    <component id="platform.CMSIS_DSP_Lib.arm_ARMv8MMLld_math.MIMXRT595S" name="arm_ARMv8MMLld_math" brief="Cmsis_dsp_lib arm_armv8mmlld_math" version="1.7.0" full_name="Cmsis_dsp_lib arm_armv8mmlld_math" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/DSP/Lib" project_base_path="libs">
      <source toolchain="mdk" relative_path="ARM" project_relative_path="./" type="lib">
        <files mask="arm_ARMv8MMLld_math.lib"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="GCC" project_relative_path="./" type="lib">
        <files mask="libarm_ARMv8MMLld_math.a"/>
      </source>
    </component>
    <component id="platform.CMSIS_DSP_Lib.arm_ARMv8MMLldfsp_math.MIMXRT595S" name="arm_ARMv8MMLldfsp_math" brief="Cmsis_dsp_lib arm_armv8mmlldfsp_math" version="1.7.0" full_name="Cmsis_dsp_lib arm_armv8mmlldfsp_math" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/DSP/Lib" project_base_path="libs">
      <source toolchain="mdk" relative_path="ARM" project_relative_path="./" type="lib">
        <files mask="arm_ARMv8MMLldfsp_math.lib"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="GCC" project_relative_path="./" type="lib">
        <files mask="libarm_ARMv8MMLldfsp_math.a"/>
      </source>
    </component>
    <component id="platform.CMSIS_DSP_Lib.arm_ARMv8MMLlfsp_math.MIMXRT595S" name="arm_ARMv8MMLlfsp_math" brief="Cmsis_dsp_lib arm_armv8mmllfsp_math" version="1.7.0" full_name="Cmsis_dsp_lib arm_armv8mmllfsp_math" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/DSP/Lib" project_base_path="libs">
      <source toolchain="mdk" relative_path="ARM" project_relative_path="./" type="lib">
        <files mask="arm_ARMv8MMLlfsp_math.lib"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="GCC" project_relative_path="./" type="lib">
        <files mask="libarm_ARMv8MMLlfsp_math.a"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver" name="CMSIS_Driver" brief="Cmsis_driver" version="2.7.1" full_name="Cmsis_driver" user_visible="true" type="CMSIS" package_base_path="CMSIS/Driver/DriverTemplates" project_base_path="Driver/DriverTemplates">
      <source relative_path="./" type="src">
        <files mask="Driver_SPI.c"/>
        <files mask="Driver_Flash.c"/>
        <files mask="Driver_USART.c"/>
        <files mask="Driver_SAI.c"/>
        <files mask="Driver_Storage.c"/>
        <files mask="Driver_I2C.c"/>
        <files mask="Driver_ETH_PHY.c"/>
        <files mask="Driver_ETH_MAC.c"/>
        <files mask="Driver_CAN.c"/>
        <files mask="Driver_MCI.c"/>
        <files mask="Driver_USBH.c"/>
        <files mask="Driver_USBD.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.CAN_CMSISInclude.MIMXRT595S" name="CAN" brief="Cmsis_driver_include can" version="1.2.0" full_name="Cmsis_driver_include can" devices="MIMXRT595S" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_CAN.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT595S" name="Common" brief="Cmsis_driver_include common" version="2.7.1" full_name="Cmsis_driver_include common" devices="MIMXRT595S" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <source relative_path="./" type="c_include">
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="CMSIS_Driver_Include_Common_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.MIMXRT595S" name="Ethernet" brief="Cmsis_driver_include ethernet" version="2.1.0" full_name="Cmsis_driver_include ethernet" devices="MIMXRT595S" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_ETH.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.Ethernet_MAC_CMSISInclude.MIMXRT595S" name="Ethernet_MAC" brief="Cmsis_driver_include ethernet_mac" version="2.1.0" full_name="Cmsis_driver_include ethernet_mac" devices="MIMXRT595S" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_ETH_MAC.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.Ethernet_PHY_CMSISInclude.MIMXRT595S" name="Ethernet_PHY" brief="Cmsis_driver_include ethernet_phy" version="2.1.0" full_name="Cmsis_driver_include ethernet_phy" devices="MIMXRT595S" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_ETH_PHY.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.Flash_CMSISInclude.MIMXRT595S" name="Flash" brief="Cmsis_driver_include flash" version="2.2.0" full_name="Cmsis_driver_include flash" devices="MIMXRT595S" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_Flash.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.GPIO_CMSISInclude.MIMXRT595S" name="GPIO" brief="Cmsis_driver_include gpio" version="2.0.0" full_name="Cmsis_driver_include gpio" devices="MIMXRT595S" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_GPIO.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT595S" name="I2C" brief="Cmsis_driver_include i2c" version="2.3.0" full_name="Cmsis_driver_include i2c" devices="MIMXRT595S" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_I2C.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="CMSIS_Driver_Include_I2C_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.MCI_CMSISInclude.MIMXRT595S" name="MCI" brief="Cmsis_driver_include mci" version="2.3.0" full_name="Cmsis_driver_include mci" devices="MIMXRT595S" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_MCI.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.NAND_CMSISInclude.MIMXRT595S" name="NAND" brief="Cmsis_driver_include nand" version="2.3.0" full_name="Cmsis_driver_include nand" devices="MIMXRT595S" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_NAND.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.SAI_CMSISInclude.MIMXRT595S" name="SAI" brief="Cmsis_driver_include sai" version="1.1.0" full_name="Cmsis_driver_include sai" devices="MIMXRT595S" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_SAI.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT595S" name="SPI" brief="Cmsis_driver_include spi" version="2.2.0" full_name="Cmsis_driver_include spi" devices="MIMXRT595S" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_SPI.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="CMSIS_Driver_Include_SPI_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.USART_CMSISInclude.MIMXRT595S" name="USART" brief="Cmsis_driver_include usart" version="2.3.0" full_name="Cmsis_driver_include usart" devices="MIMXRT595S" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_USART.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="CMSIS_Driver_Include_USART_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.USB_CMSISInclude.MIMXRT595S" name="USB" brief="Cmsis_driver_include usb" version="2.2.0" full_name="Cmsis_driver_include usb" devices="MIMXRT595S" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_USB.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.USB_Device_CMSISInclude.MIMXRT595S" name="USB_Device" brief="Cmsis_driver_include usb_device" version="2.2.0" full_name="Cmsis_driver_include usb_device" devices="MIMXRT595S" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.USB_CMSISInclude.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_USBD.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.USB_Host_CMSISInclude.MIMXRT595S" name="USB_Host" brief="Cmsis_driver_include usb_host" version="2.2.0" full_name="Cmsis_driver_include usb_host" devices="MIMXRT595S" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.USB_CMSISInclude.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_USBH.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.WiFi_CMSISInclude.MIMXRT595S" name="WiFi" brief="Cmsis_driver_include wifi" version="1.0.0" full_name="Cmsis_driver_include wifi" devices="MIMXRT595S" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_WiFi.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.Include_common.MIMXRT595S" name="CMSIS_Include_common" brief="Cmsis_include_common" version="5.3.0" full_name="Cmsis_include_common" devices="MIMXRT595S" user_visible="true" type="CMSIS_Include" package_base_path="CMSIS/Include" project_base_path="CMSIS">
      <source relative_path="./" type="c_include">
        <files mask="cmsis_armcc.h"/>
        <files mask="cmsis_armclang.h"/>
        <files mask="cmsis_armclang_ltm.h"/>
        <files mask="cmsis_gcc.h"/>
        <files mask="cmsis_compiler.h"/>
        <files mask="cmsis_version.h"/>
        <files mask="cmsis_iccarm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="CMSIS_Include_common_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.Include_core_cm33.MIMXRT595S" name="CMSIS_Include_core_cm33" brief="Cmsis_include_core_cm33" version="5.3.0" full_name="Cmsis_include_core_cm33" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="CMSIS_Include" package_base_path="CMSIS/Include" project_base_path="CMSIS">
      <dependencies>
        <all>
          <component_dependency value="platform.Include_common.MIMXRT595S"/>
          <component_dependency value="platform.Include_dsp.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="core_cm33.h"/>
        <files mask="tz_context.h"/>
        <files mask="mpu_armv8.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="CMSIS_Include_core_cm33_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.Include_dsp.MIMXRT595S" name="CMSIS_Include_dsp" brief="Cmsis_include_dsp" version="1.7.0" full_name="Cmsis_include_dsp" devices="MIMXRT595S" user_visible="true" type="CMSIS_Include" package_base_path="CMSIS/Include" project_base_path="CMSIS">
      <source relative_path="./" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_math.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="CMSIS_Include_dsp_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="COPY_BSD_License.MIMXRT595S" name="COPY_BSD_License" brief="COPY of BSD-3-Clause license" version="1.0.0" full_name="COPY of BSD-3-Clause license" devices="MIMXRT595S" user_visible="true" type="other" package_base_path="./" project_base_path="src">
      <source relative_path="./" type="other">
        <files mask="COPYING-BSD-3"/>
      </source>
    </component>
    <component id="project_template.MIMXRT595S.MIMXRT595S" name="MIMXRT595S" brief="Devices_project_template MIMXRT595S" version="1.0.0" full_name="Devices_project_template MIMXRT595S" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="Board Support/SDK Project Template" user_visible="true" type="project_template" package_base_path="devices/MIMXRT595S/project_template" project_base_path="board">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_usart.MIMXRT595S"/>
          <component_dependency value="component.usart_adapter.MIMXRT595S"/>
          <component_dependency value="platform.drivers.lpc_iopctl.MIMXRT595S"/>
          <component_dependency value="platform.drivers.lpc_gpio.MIMXRT595S"/>
          <component_dependency value="platform.drivers.cache_cache64.MIMXRT595S"/>
          <component_dependency value="platform.drivers.flexspi.MIMXRT595S"/>
          <component_dependency value="platform.drivers.reset.MIMXRT595S"/>
          <component_dependency value="device.MIMXRT595S_startup.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="platform.drivers.clock.MIMXRT595S"/>
          <component_dependency value="platform.drivers.power.MIMXRT595S"/>
          <any_of>
            <all>
              <component_dependency value="utility.debug_console.MIMXRT595S"/>
              <component_dependency value="component.serial_manager.MIMXRT595S"/>
            </all>
            <component_dependency value="utility.debug_console_lite.MIMXRT595S"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="pin_mux.h"/>
        <files mask="peripherals.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="pin_mux.c"/>
        <files mask="peripherals.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="RTE_Device.MIMXRT595S" name="RTE_Device" brief="Rte_device" version="1.0.0" full_name="Rte_device" devices="MIMXRT595S" category="Device/SDK Project Template" user_visible="true" type="project_template" package_base_path="devices/MIMXRT595S/template" project_base_path="board">
      <source relative_path="./" type="c_include">
        <files mask="RTE_Device.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="tools.MIMXRT595S" name="cmake_toolchain" brief="Cmake_toolchain" version="1.0.0" full_name="Cmake_toolchain" devices="MIMXRT595S" user_visible="true" type="other" package_base_path="tools/cmake_toolchain_files" project_base_path="cmake_toolchain_files">
      <source relative_path="./" type="script">
        <files mask="armgcc.cmake"/>
        <files mask="xcc.cmake"/>
        <files mask="armgcc_force_cpp.cmake"/>
      </source>
    </component>
    <component id="component.button.MIMXRT595S" name="button" brief="Component button" version="1.0.0" full_name="Component button" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="software_component" package_base_path="components/button" project_base_path="component/button">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="component.timer_manager.MIMXRT595S"/>
          <component_dependency value="component.lpc_gpio_adapter.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_button.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_button.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.codec_cs42888_adapter.MIMXRT595S" name="codecs_cs42888_adapter" brief="Component cs42888 adapter for multi codecs" version="2.2.1" full_name="Component codec_cs42888_adapter" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="abstraction_layer" package_base_path="components/codec/port" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="driver.cs42888.MIMXRT595S"/>
          <component_dependency value="driver.codec.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_cs42888_adapter.c"/>
        <files mask="fsl_codec_adapter.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cs42888_adapter.h"/>
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.codec_i2c.MIMXRT595S" name="codec_i2c" brief="Component codec_i2c" version="2.1.0" full_name="Component codec_i2c" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="software_component" package_base_path="components/codec/i2c" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <any_of>
            <component_dependency value="component.flexcomm_i2c_adapter.MIMXRT595S"/>
            <component_dependency value="component.i3c_adapter.MIMXRT595S"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_codec_i2c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_codec_i2c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="component_codec_i2c_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.codec_tfa9896_adapter.MIMXRT595S" name="codecs_tfa9896_adapter" brief="Component tfa9896 adapter for multi codecs" version="2.2.0" full_name="Component codec_tfa9896_adapter" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="abstraction_layer" package_base_path="components/codec/port" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="driver.tfa9896.MIMXRT595S"/>
          <component_dependency value="driver.codec.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_tfa9896_adapter.c"/>
        <files mask="fsl_codec_adapter.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_tfa9896_adapter.h"/>
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.codec_wm8904_adapter.MIMXRT595S" name="codecs_wm8904_adapter" brief="Component wm8904 adapter for multi codecs" version="2.2.0" full_name="Component codec_wm8904_adapter" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="abstraction_layer" package_base_path="components/codec/port" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="driver.wm8904.MIMXRT595S"/>
          <component_dependency value="driver.codec.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_wm8904_adapter.c"/>
        <files mask="fsl_codec_adapter.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wm8904_adapter.h"/>
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.common_task.MIMXRT595S" name="common_task" brief="Component common_task" version="1.0.0" full_name="Component common_task" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="software_component" package_base_path="components/common_task" project_base_path="component/common_task">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="component.osa.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_common_task.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_common_task.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.cs42888_adapter.MIMXRT595S" name="codec_cs42888_adapter" brief="Component cs42888 adapter for single codec" version="2.2.1" full_name="Component cs42888_adapter" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="abstraction_layer" package_base_path="components/codec/port/cs42888" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="driver.cs42888.MIMXRT595S"/>
          <component_dependency value="driver.codec.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_codec_adapter.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="component_cs42888_adapter_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.ctimer_adapter.MIMXRT595S" name="ctimer_adapter" brief="Component ctimer_adapter" version="1.0.0" full_name="Component ctimer_adapter" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="abstraction_layer" package_base_path="components/timer" project_base_path="component/timer">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="platform.drivers.ctimer.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_ctimer.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.flexcomm_i2c_adapter.MIMXRT595S" name="flexcomm_i2c_adapter" brief="Component flexcomm_i2c_adapter" version="1.0.0" full_name="Component flexcomm_i2c_adapter" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="abstraction_layer" package_base_path="components/i2c" project_base_path="component/i2c">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="platform.drivers.flexcomm_i2c.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_i2c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_flexcomm_i2c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="component_flexcomm_i2c_adapter_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.i3c_adapter.MIMXRT595S" name="i3c_adapter" brief="Component i3c_adapter" version="1.0.0" full_name="Component i3c_adapter" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="abstraction_layer" package_base_path="components/i2c" project_base_path="component/i2c">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="platform.drivers.i3c.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_i2c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_i3c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="component_i3c_adapter_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.i3c_bus.MIMXRT595S" name="i3c_bus" brief="Component i3c_bus" version="1.0.0" full_name="Component i3c_bus" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="software_component" package_base_path="components/i3c_bus" project_base_path="component/i3c_bus">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="component.lists.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_i3c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_i3c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="component_i3c_bus_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.i3c_bus_adapter.MIMXRT595S" name="i3c_bus_adapter" brief="Component i3c_bus_adapter" version="1.0.0" full_name="Component i3c_bus_adapter" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="software_component" package_base_path="components/i3c_bus" project_base_path="component/i3c_bus">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.i3c.MIMXRT595S"/>
          <component_dependency value="component.i3c_bus.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_i3c_adapter.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_i3c_adapter.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="component_i3c_bus_adapter_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.led.MIMXRT595S" name="led" brief="Component led" version="1.0.0" full_name="Component led" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="software_component" package_base_path="components/led" project_base_path="component/led">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="component.timer_manager.MIMXRT595S"/>
          <component_dependency value="component.lpc_gpio_adapter.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_led.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_led.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.lists.MIMXRT595S" name="lists" brief="Component lists" version="1.0.0" full_name="Component lists" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="software_component" package_base_path="components/lists" project_base_path="component/lists">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_generic_list.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_generic_list.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="component_lists_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.log.MIMXRT595S" name="log" brief="Component log" version="1.0.0" full_name="Component log" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="software_component" package_base_path="components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="utility.debug_console.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log.h"/>
        <files mask="fsl_component_log_config.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="component_log_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.log.backend.debugconsole.MIMXRT595S" name="log_backend_debug_console" brief="Component log backend debug console" version="1.0.0" full_name="Component log backend debug console" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="software_component" package_base_path="components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="component.log.MIMXRT595S"/>
          <component_dependency value="utility.debug_console.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log_backend_debugconsole.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log_backend_debugconsole.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="component_log_backend_debugconsole_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.log.backend.ringbuffer.MIMXRT595S" name="log_backend_ring_buffer" brief="Component log backend ring buffer" version="1.0.0" full_name="Component log backend ring buffer" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="software_component" package_base_path="components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="component.log.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log_backend_ringbuffer.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log_backend_ringbuffer.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="component_log_backend_ringbuffer_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.lpc_crc_adapter.MIMXRT595S" name="lpc_crc_adapter" brief="Component lpc_crc_adapter" version="1.0.0" full_name="Component lpc_crc_adapter" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="abstraction_layer" package_base_path="components/crc" project_base_path="component/crc">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="platform.drivers.lpc_crc.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_crc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpc_crc.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.lpc_gpio_adapter.MIMXRT595S" name="lpc_gpio_adapter" brief="Component lpc_gpio_adapter" version="1.0.0" full_name="Component lpc_gpio_adapter" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="abstraction_layer" package_base_path="components/gpio" project_base_path="component/gpio">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpc_gpio.MIMXRT595S"/>
          <component_dependency value="platform.drivers.inputmux.MIMXRT595S"/>
          <component_dependency value="platform.drivers.pint.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_gpio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpc_gpio.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.mem_manager.MIMXRT595S" name="mem_manager" brief="Component mem_manager" version="1.0.0" full_name="Component mem_manager" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="software_component" package_base_path="components/mem_manager" project_base_path="component/mem_manager">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="component.lists.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_mem_manager.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_mem_manager.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.mem_manager_light.MIMXRT595S" name="mem_manager_light" brief="Component mem_manager_light" version="1.0.0" full_name="Component mem_manager_light" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="software_component" package_base_path="components/mem_manager" project_base_path="component/mem_manager">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="component.lists.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_mem_manager.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_mem_manager_light.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.mflash.common.MIMXRT595S" name="mflash common" brief="mflash common" version="1.0.0" full_name="statically allocated file system for mflash" devices="MIMXRT595S" user_visible="false" type="software_component" package_base_path="components/flash/mflash" project_base_path="flash/mflash">
      <source relative_path="./" type="c_include">
        <files mask="mflash_common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="component_mflash_common_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.mflash.rt595.MIMXRT595S" name="mflash rt595" brief="mflash rt595" version="1.0.0" full_name="mflash rt595" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="software_component" package_base_path="components/flash/mflash/mimxrt595" project_base_path="flash/mflash/mimxrt595">
      <dependencies>
        <all>
          <component_dependency value="component.mflash.common.MIMXRT595S"/>
          <component_dependency value="platform.drivers.flexspi.MIMXRT595S"/>
          <component_dependency value="platform.drivers.cache_cache64.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="mflash_drv.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="mflash_drv.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="component_mflash_rt595_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.mflash_file.MIMXRT595S" name="mflash file" brief="mflash file" version="1.0.0" full_name="statically allocated file system for mflash" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="false" type="software_component" package_base_path="components/flash/mflash" project_base_path="flash/mflash">
      <dependencies>
        <component_dependency value="component.mflash.rt595.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="mflash_file.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="mflash_file.c"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="readme.txt" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="component_mflash_file_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.mrt_adapter.MIMXRT595S" name="mrt_adapter" brief="Component mrt_adapter" version="1.0.0" full_name="Component mrt_adapter" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="abstraction_layer" package_base_path="components/timer" project_base_path="component/timer">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="platform.drivers.mrt.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_mrt.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="component_mrt_adapter_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.osa.MIMXRT595S" name="osa" brief="Component osa" version="1.0.0" full_name="Component osa" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="component.lists.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction.h"/>
        <files mask="fsl_os_abstraction_config.h"/>
      </source>
      <source condition="middleware.baremetal.MIMXRT595S" relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction_bm.h"/>
      </source>
      <source condition="middleware.baremetal.MIMXRT595S" relative_path="./" type="src">
        <files mask="fsl_os_abstraction_bm.c"/>
      </source>
      <source condition="middleware.freertos-kernel.MIMXRT595S" relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction_free_rtos.h"/>
      </source>
      <source condition="middleware.freertos-kernel.MIMXRT595S" relative_path="./" type="src">
        <files mask="fsl_os_abstraction_free_rtos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="component_osa_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.osa_bm.MIMXRT595S" name="osa_bm" brief="Component osa_bm" version="1.0.0" full_name="Component osa_bm" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="false" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="component.lists.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction.h"/>
        <files mask="fsl_os_abstraction_bm.h"/>
        <files mask="fsl_os_abstraction_config.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_os_abstraction_bm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="component_osa_bm_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.osa_free_rtos.MIMXRT595S" name="osa_free_rtos" brief="Component osa_free_rtos" version="1.0.0" full_name="Component osa_free_rtos" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="false" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="component.lists.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction.h"/>
        <files mask="fsl_os_abstraction_free_rtos.h"/>
        <files mask="fsl_os_abstraction_config.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_os_abstraction_free_rtos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="component_osa_free_rtos_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.osa_thread.MIMXRT595S" name="osa thread" brief="Component osa thread" version="1.0.0" full_name="Component osa thread" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="false" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="component.lists.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction.h"/>
        <files mask="fsl_os_abstraction_config.h"/>
        <files mask="fsl_os_abstraction_threadx.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_os_abstraction_threadx.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.panic.MIMXRT595S" name="panic" brief="Component panic" version="1.0.0" full_name="Component panic" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="software_component" package_base_path="components/panic" project_base_path="component/panic">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="utility.debug_console.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_panic.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_panic.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="component_panic_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.pwm_ctimer_adapter.MIMXRT595S" name="pwm_ctimer_adapter" brief="Component pwm_ctimer_adapter" version="1.0.0" full_name="Component pwm_ctimer_adapter" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="abstraction_layer" package_base_path="components/pwm" project_base_path="component/pwm">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="platform.drivers.ctimer.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_pwm.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_pwm_ctimer.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.rt_gpio_adapter.MIMXRT595S" name="rt_gpio_adapter" brief="Component rt_gpio_adapter" version="1.0.0" full_name="Component rt_gpio_adapter" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="abstraction_layer" package_base_path="components/gpio" project_base_path="component/gpio">
      <dependencies>
        <component_dependency value="platform.drivers.lpc_gpio.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_gpio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_rt_gpio.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="component_rt_gpio_adapter_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager.MIMXRT595S" name="serial_manager" brief="Component serial_manager" version="1.0.0" full_name="Serial Manager" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="component.lists.MIMXRT595S"/>
          <any_of>
            <component_dependency value="component.serial_manager_uart.MIMXRT595S"/>
            <component_dependency value="component.serial_manager_swo.MIMXRT595S"/>
            <component_dependency value="component.serial_manager_virtual.MIMXRT595S"/>
            <component_dependency value="component.serial_manager_usb_cdc.MIMXRT595S"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_manager.h"/>
        <files mask="fsl_component_serial_port_internal.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_manager.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="component_serial_manager_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_swo.MIMXRT595S" name="serial_manager_swo" brief="Component serial_manager_swo" version="1.0.0" full_name="Serial Manager Swo" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_SWO" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="component.serial_manager.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_swo.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_swo.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_uart.MIMXRT595S" name="serial_manager_uart" brief="Component serial_manager_uart" version="1.0.0" full_name="Serial Manager uart" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_UART" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.usart_adapter.MIMXRT595S"/>
          <component_dependency value="component.serial_manager.MIMXRT595S"/>
          <component_dependency value="platform.drivers.flexcomm_usart.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_uart.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="component_serial_manager_uart_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_usb_cdc.MIMXRT595S" name="serial_manager_usb_cdc" brief="Component serial_manager_usb_cdc" version="1.0.0" full_name="Serial Manager USB CDC" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_USBCDC" value="1"/>
        <define name="DEBUG_CONSOLE_TRANSFER_NON_BLOCKING" value=""/>
        <define name="USB_DEVICE_CONFIG_CDC_ACM" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.serial_manager.MIMXRT595S"/>
          <component_dependency value="middleware.usb.device.cdc.external.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_usb.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_usb.c"/>
      </source>
      <source relative_path="usb_cdc_adapter" type="c_include">
        <files mask="usb_device_descriptor.h"/>
      </source>
      <source relative_path="usb_cdc_adapter" type="src">
        <files mask="usb_device_descriptor.c"/>
      </source>
      <source relative_path="usb_cdc_adapter/inf" type="configuration">
        <files mask="fsl_ucwxp.inf" hidden="true"/>
      </source>
      <source relative_path="usb_cdc_adapter/inf" type="other">
        <files mask="cdc.cat" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="component_serial_manager_usb_cdc_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="usb_cdc_adapter" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_virtual.MIMXRT595S" name="serial_manager_virtual" brief="Component serial_manager_virtual" version="1.0.0" full_name="Serial Manager Virtual" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_VIRTUAL" value="1"/>
        <define name="DEBUG_CONSOLE_TRANSFER_NON_BLOCKING" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.serial_manager.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_virtual.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_virtual.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.software_crc_adapter.MIMXRT595S" name="software_crc_adapter" brief="Component software_crc_adapter" version="1.0.0" full_name="Component software_crc_adapter" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="abstraction_layer" package_base_path="components/crc" project_base_path="component/crc">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_crc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_software_crc.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.software_rng_adapter.MIMXRT595S" name="software_rng_adapter" brief="Component software_rng_adapter" version="1.0.0" full_name="Component software_rng_adapter" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="abstraction_layer" package_base_path="components/rng" project_base_path="component/rng">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_rng.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_software_rng.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.tfa9896_adapter.MIMXRT595S" name="codec_tfa9896_adapter" brief="Component tfa9896 adapter for single codec" version="2.2.0" full_name="Component tfa9896_adapter" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="abstraction_layer" package_base_path="components/codec/port/tfa9896" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="driver.tfa9896.MIMXRT595S"/>
          <component_dependency value="driver.codec.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_codec_adapter.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="component_tfa9896_adapter_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.timer_manager.MIMXRT595S" name="timer_manager" brief="Component timer_manager" version="1.0.0" full_name="Component timer_manager" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="software_component" package_base_path="components/timer_manager" project_base_path="component/timer_manager">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="component.lists.MIMXRT595S"/>
          <any_of>
            <component_dependency value="component.ctimer_adapter.MIMXRT595S"/>
            <component_dependency value="component.mrt_adapter.MIMXRT595S"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_timer_manager.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_timer_manager.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.trng_adapter.MIMXRT595S" name="trng_adapter" brief="Component trng_adapter" version="1.0.0" full_name="Component trng_adapter" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="abstraction_layer" package_base_path="components/rng" project_base_path="component/rng">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="platform.drivers.trng.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_rng.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_trng.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.usart_adapter.MIMXRT595S" name="usart_adapter" brief="Component usart_adapter" version="1.0.0" full_name="usart_adapter" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="utilities" package_base_path="components/uart" project_base_path="component/uart">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="platform.drivers.flexcomm_usart.MIMXRT595S"/>
          <component_dependency value="platform.drivers.flexcomm.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_usart.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="component_usart_adapter_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.wm8904_adapter.MIMXRT595S" name="codec_wm8904_adapter" brief="Component wm8904 adapter for single codec" version="2.2.0" full_name="Component wm8904_adapter" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="abstraction_layer" package_base_path="components/codec/port/wm8904" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="driver.wm8904.MIMXRT595S"/>
          <component_dependency value="driver.codec.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_codec_adapter.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="component_wm8904_adapter_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="device.MIMXRT595S_CMSIS.MIMXRT595S" name="MIMXRT595S_CMSIS" brief="Device MIMXRT595S_cmsis" version="1.0.0" full_name="Device MIMXRT595S_cmsis" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="CMSIS_Include" package_base_path="devices/MIMXRT595S" project_base_path="device">
      <dependencies>
        <component_dependency value="platform.Include_core_cm33.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include" device_cores="cm33_MIMXRT595S">
        <files mask="fsl_device_registers.h"/>
        <files mask="MIMXRT595S_cm33.h"/>
        <files mask="MIMXRT595S_cm33_features.h"/>
        <files mask="system_MIMXRT595S_cm33.h"/>
      </source>
      <source relative_path="./" type="src" device_cores="cm33_MIMXRT595S">
        <files mask="system_MIMXRT595S_cm33.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="device_MIMXRT595S_CMSIS_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include" device_cores="cm33_MIMXRT595S"/>
      </include_paths>
    </component>
    <component id="device.MIMXRT595S_DSP.MIMXRT595S" name="MIMXRT595S_DSP" brief="Device MIMXRT595S_dsp" version="1.0.0" full_name="Device MIMXRT595S_dsp" devices="MIMXRT595S" user_visible="true" type="other" package_base_path="devices/MIMXRT595S" project_base_path="device">
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.devices.MIMXRT595S_debugger.MIMXRT595S" name="MIMXRT595S_debugger" brief="Device MIMXRT595S_debugger" version="1.0.0" full_name="Device MIMXRT595S_debugger" devices="MIMXRT595S" user_visible="true" type="debugger" package_base_path="devices/MIMXRT595S" project_base_path="MIMXRT595S">
      <source relative_path="./" type="xml" device_cores="cm33_MIMXRT595S">
        <files mask="MIMXRT595S_cm33.xml"/>
      </source>
    </component>
    <component id="platform.devices.MIMXRT595S_linker.MIMXRT595S" name="MIMXRT595S_linker" brief="Device MIMXRT595S_linker" version="1.0.0" full_name="Device MIMXRT595S_linker" devices="MIMXRT595S" user_visible="true" type="linker" package_base_path="devices/MIMXRT595S" project_base_path="MIMXRT595S">
      <source toolchain="mdk" relative_path="arm" type="linker" device_cores="cm33_MIMXRT595S">
        <files mask="MIMXRT595Sxxxx_cm33_ram.scf"/>
        <files mask="MIMXRT595Sxxxx_cm33_flash.scf"/>
      </source>
      <source toolchain="armgcc" relative_path="gcc" type="linker" device_cores="cm33_MIMXRT595S">
        <files mask="MIMXRT595Sxxxx_cm33_ram.ld"/>
        <files mask="MIMXRT595Sxxxx_cm33_flash.ld"/>
        <files mask="MIMXRT595Sxxxx_cm33_ram_s.ld"/>
        <files mask="MIMXRT595Sxxxx_cm33_flash_s.ld"/>
        <files mask="MIMXRT595Sxxxx_cm33_ram_ns.ld"/>
        <files mask="MIMXRT595Sxxxx_cm33_flash_ns.ld"/>
      </source>
      <source toolchain="iar" relative_path="iar" type="linker" device_cores="cm33_MIMXRT595S">
        <files mask="MIMXRT595Sxxxx_cm33_ram.icf"/>
        <files mask="MIMXRT595Sxxxx_cm33_flash.icf"/>
        <files mask="MIMXRT595Sxxxx_cm33_ram_s.icf"/>
        <files mask="MIMXRT595Sxxxx_cm33_flash_s.icf"/>
        <files mask="MIMXRT595Sxxxx_cm33_ram_ns.icf"/>
        <files mask="MIMXRT595Sxxxx_cm33_flash_ns.icf"/>
      </source>
      <source toolchain="armgcc" relative_path="xtensa/gdbio" type="other">
        <files mask="specs"/>
        <files mask="memmap.xmm"/>
      </source>
      <source toolchain="armgcc" relative_path="xtensa/gdbio/ldscripts" type="other">
        <files mask="elf32xtensa.xn"/>
        <files mask="elf32xtensa.xbn"/>
        <files mask="elf32xtensa.x"/>
        <files mask="elf32xtensa.xu"/>
        <files mask="elf32xtensa.xr"/>
      </source>
      <source toolchain="armgcc" relative_path="xtensa/sim" type="other">
        <files mask="specs"/>
        <files mask="memmap.xmm"/>
      </source>
      <source toolchain="armgcc" relative_path="xtensa/sim/ldscripts" type="other">
        <files mask="elf32xtensa.xn"/>
        <files mask="elf32xtensa.xbn"/>
        <files mask="elf32xtensa.x"/>
        <files mask="elf32xtensa.xu"/>
        <files mask="elf32xtensa.xr"/>
      </source>
      <source toolchain="armgcc" relative_path="xtensa/min-rt" type="other">
        <files mask="specs"/>
        <files mask="memmap.xmm"/>
      </source>
      <source toolchain="armgcc" relative_path="xtensa/min-rt/ldscripts" type="other">
        <files mask="elf32xtensa.xn"/>
        <files mask="elf32xtensa.xbn"/>
        <files mask="elf32xtensa.x"/>
        <files mask="elf32xtensa.xu"/>
        <files mask="elf32xtensa.xr"/>
      </source>
    </component>
    <component id="device.MIMXRT595S_startup.MIMXRT595S" name="MIMXRT595S_startup" brief="Device MIMXRT595S_startup" version="1.0.0" full_name="Device MIMXRT595S_startup" devices="MIMXRT595S" category="Device/Startup" user_visible="true" type="startup" package_base_path="devices/MIMXRT595S" project_base_path="startup">
      <source toolchain="mdk" relative_path="arm" project_relative_path="./" type="asm_include" device_cores="cm33_MIMXRT595S">
        <files mask="startup_MIMXRT595S_cm33.S"/>
      </source>
      <source toolchain="armgcc" relative_path="gcc" project_relative_path="./" type="asm_include" device_cores="cm33_MIMXRT595S">
        <files mask="startup_MIMXRT595S_cm33.S"/>
      </source>
      <source toolchain="iar" relative_path="iar" project_relative_path="./" type="asm_include" device_cores="cm33_MIMXRT595S">
        <files mask="startup_MIMXRT595S_cm33.s"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" type="src_c" device_cores="cm33_MIMXRT595S">
        <files mask="startup_mimxrt595s_cm33.c"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" type="src_cpp" device_cores="cm33_MIMXRT595S">
        <files mask="startup_mimxrt595s_cm33.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="device_MIMXRT595S_startup_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
    </component>
    <component id="docs.MIMXRT595S.MIMXRT595S" name="MIMXRT595S" brief="Docs mimxrt595s" version="1.0.0" full_name="Docs mimxrt595s" devices="MIMXRT595S" user_visible="true" type="documentation" package_base_path="docs" project_base_path="docs">
      <source relative_path="./" type="doc">
        <files mask="Getting Started with MCUXpresso SDK for EVK-MIMXRT595.pdf"/>
        <files mask="MCUXpresso SDK Release Notes for EVK-MIMXRT595.pdf"/>
        <files mask="Getting Started with Xplorer for EVK-MIMXRT595.pdf"/>
      </source>
    </component>
    <component id="platform.drivers.acmp.MIMXRT595S" name="acmp" brief="ACMP Driver" version="2.0.6" full_name="ACMP Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_acmp.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_acmp.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_acmp_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.cache_cache64.MIMXRT595S" name="cache" brief="CACHE Driver" version="2.0.3" full_name="CACHE Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_cache.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cache.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_cache_cache64_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.casper.MIMXRT595S" name="casper" brief="CASPER Driver" version="2.2.1" full_name="CASPER Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_casper.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_casper.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_casper_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.clock.MIMXRT595S" name="clock" brief="Clock Driver" version="2.6.0" full_name="Clock Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_clock.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_clock.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_clock_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_i2c_cmsis.MIMXRT595S" name="i2c_cmsis" brief="I2C CMSIS Driver" version="2.2.0" full_name="I2C CMSIS Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="CMSIS_driver" package_base_path="devices/MIMXRT595S/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_i2c_dma.MIMXRT595S"/>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT595S"/>
          <component_dependency value="RTE_Device.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i2c_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_i2c_cmsis.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_cmsis_flexcomm_i2c_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_spi_cmsis.MIMXRT595S" name="spi_cmsis" brief="SPI CMSIS Driver" version="2.4.0" full_name="SPI CMSIS Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="CMSIS_driver" package_base_path="devices/MIMXRT595S/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_spi_dma.MIMXRT595S"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT595S"/>
          <component_dependency value="RTE_Device.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_spi_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_spi_cmsis.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_cmsis_flexcomm_spi_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_usart_cmsis.MIMXRT595S" name="usart_cmsis" brief="USART CMSIS Driver" version="2.2.0" full_name="USART CMSIS Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="CMSIS_driver" package_base_path="devices/MIMXRT595S/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_usart_dma.MIMXRT595S"/>
          <component_dependency value="platform.CMSIS_Driver_Include.USART_CMSISInclude.MIMXRT595S"/>
          <component_dependency value="RTE_Device.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_usart_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_usart_cmsis.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_cmsis_flexcomm_usart_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.codec.MIMXRT595S" name="codec" brief="Driver codec" version="2.2.1" full_name="Driver codec" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <any_of>
            <component_dependency value="component.wm8904_adapter.MIMXRT595S"/>
            <component_dependency value="component.codec_cs42888_adapter.MIMXRT595S"/>
            <component_dependency value="component.codec_tfa9896_adapter.MIMXRT595S"/>
            <component_dependency value="component.codec_wm8904_adapter.MIMXRT595S"/>
            <component_dependency value="component.cs42888_adapter.MIMXRT595S"/>
            <component_dependency value="component.tfa9896_adapter.MIMXRT595S"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_codec_common.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_codec_common.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_codec_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.common.MIMXRT595S" name="common" brief="COMMON Driver" version="2.2.9" full_name="COMMON Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.reset.MIMXRT595S"/>
          <component_dependency value="platform.drivers.clock.MIMXRT595S"/>
          <component_dependency value="device.MIMXRT595S_CMSIS.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_common.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_common.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_common_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.cs42888.MIMXRT595S" name="cs42888" brief="Driver cs42888" version="2.1.2" full_name="Driver cs42888" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="software_component" package_base_path="components/codec/cs42888" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="component.codec_i2c.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cs42888.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_cs42888.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_cs42888_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.ctimer.MIMXRT595S" name="ctimer" brief="CTimer Driver" version="2.2.1" full_name="CTimer Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ctimer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ctimer.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_ctimer_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.dbi.MIMXRT595S" name="dbi" brief="Driver dbi" version="1.0.0" full_name="Driver dbi" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dbi" project_base_path="video">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dbi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_dbi_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.dbi_flexio_smartdma.MIMXRT595S" name="dbi_flexio_smartdma" brief="Driver dbi_flexio_smartdma" version="1.0.1" full_name="Driver dbi_flexio_smartdma" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dbi/flexio" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.dbi.MIMXRT595S"/>
          <component_dependency value="platform.drivers.flexio_mculcd.MIMXRT595S"/>
          <component_dependency value="platform.drivers.flexio_mculcd_smartdma.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dbi_flexio_smartdma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dbi_flexio_smartdma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_dbi_flexio_smartdma_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.dc-fb-common.MIMXRT595S" name="dc-fb-common" brief="Driver dc-fb-common" version="1.0.0" full_name="Driver dc-fb-common" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dc" project_base_path="video">
      <dependencies>
        <component_dependency value="driver.video-common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dc_fb.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_dc-fb-common_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.dc-fb-dsi-cmd.MIMXRT595S" name="dc-fb-dsi-cmd" brief="Driver dc-fb-dsi-cmd" version="1.1.1" full_name="Driver dc-fb-dsi-cmd" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dc/dsi_cmd" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.dc-fb-common.MIMXRT595S"/>
          <component_dependency value="driver.display-common.MIMXRT595S"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dc_fb_dsi_cmd.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dc_fb_dsi_cmd.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_dc-fb-dsi-cmd_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.dc-fb-lcdif.MIMXRT595S" name="dc-fb-lcdif" brief="Driver dc-fb-lcdif" version="1.0.1" full_name="Driver dc-fb-lcdif" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dc/lcdif" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.dc-fb-common.MIMXRT595S"/>
          <component_dependency value="platform.drivers.lcdif.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dc_fb_lcdif.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dc_fb_lcdif.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_dc-fb-lcdif_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.dc-fb-ssd1963.MIMXRT595S" name="dc-fb-ssd1963" brief="Driver dc-fb-ssd1963" version="1.0.2" full_name="Driver dc-fb-ssd1963" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dc/ssd1963" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.dc-fb-common.MIMXRT595S"/>
          <component_dependency value="driver.ssd1963.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dc_fb_ssd1963.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dc_fb_ssd1963.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_dc-fb-ssd1963_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.display-common.MIMXRT595S" name="display-common" brief="Driver display-common" version="1.0.0" full_name="Driver display-common" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="abstraction_layer" package_base_path="components/video/display" project_base_path="video">
      <dependencies>
        <component_dependency value="driver.video-common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_display.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_display-common_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.display-mipi-dsi-cmd.MIMXRT595S" name="display-mipi-dsi-cmd" brief="Driver display-mipi-dsi-cmd" version="1.0.2" full_name="Driver display-mipi-dsi-cmd" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="software_component" package_base_path="components/video/display/mipi_dsi_cmd" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="platform.drivers.mipi_dsi.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mipi_dsi_cmd.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mipi_dsi_cmd.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_display-mipi-dsi-cmd_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.display-rm67162.MIMXRT595S" name="display-rm67162" brief="Driver display-rm67162" version="1.0.2" full_name="Driver display-rm67162" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="board_component" package_base_path="components/video/display/rm67162" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT595S"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rm67162.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rm67162.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_display-rm67162_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.display-rm68191.MIMXRT595S" name="display-rm68191" brief="Driver display-rm68191" version="1.1.0" full_name="Driver display-rm68191" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="board_component" package_base_path="components/video/display/rm68191" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT595S"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rm68191.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rm68191.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_display-rm68191_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.display-rm68200.MIMXRT595S" name="display-rm68200" brief="Driver display-rm68200" version="1.1.0" full_name="Driver display-rm68200" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="board_component" package_base_path="components/video/display/rm68200" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT595S"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rm68200.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rm68200.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_display-rm68200_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dmic.MIMXRT595S" name="dmic" brief="DMIC Driver" version="2.3.0" full_name="DMIC Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_dmic.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dmic.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_dmic_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dmic_dma.MIMXRT595S" name="dmic_dma" brief="DMIC DMA Driver" version="2.3.0" full_name="DMIC DMA Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.dmic.MIMXRT595S"/>
          <component_dependency value="platform.drivers.lpc_dma.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_dmic_dma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dmic_dma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_dmic_dma_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dsp.MIMXRT595S" name="dsp" brief="dsp Driver" version="1.0.0" full_name="dsp Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.power.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dsp.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dsp.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_dsp_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.fbdev.MIMXRT595S" name="fbdev" brief="Driver fbdev" version="1.0.2" full_name="Driver fbdev" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="software_component" package_base_path="components/video/display/fbdev" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.dc-fb-common.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_fbdev.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_fbdev.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_fbdev_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flash_config.MIMXRT595S" name="flash_config" brief="flash config block" version="2.0.0" full_name="Flash config" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="board_component" package_base_path="boards/evkmimxrt595/flash_config" project_base_path="flash_config">
      <defines>
        <define name="BOOT_HEADER_ENABLE" value="1"/>
      </defines>
      <dependencies>
        <component_dependency value="platform.drivers.iap.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="flash_config.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="flash_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_flash_config_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm.MIMXRT595S" name="flexcomm" brief="FLEXCOMM Driver" version="2.0.2" full_name="FLEXCOMM Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexcomm.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_flexcomm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_flexcomm_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_i2c.MIMXRT595S" name="i2c" brief="I2C Driver" version="2.1.0" full_name="FLEXCOMM I2C Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i2c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_i2c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_flexcomm_i2c_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_i2c_dma.MIMXRT595S" name="i2c_dma" brief="I2C Driver" version="2.1.0" full_name="FLEXCOMM I2C DMA Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="platform.drivers.flexcomm_i2c.MIMXRT595S"/>
          <component_dependency value="platform.drivers.lpc_dma.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_i2c_dma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i2c_dma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_flexcomm_i2c_dma_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_i2c_freertos.MIMXRT595S" name="i2c_freertos" brief="I2C Driver" version="2.0.8" full_name="FLEXCOMM I2C FREERTOS Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="platform.drivers.flexcomm_i2c.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i2c_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_i2c_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_flexcomm_i2c_freertos_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_i2s.MIMXRT595S" name="flexcomm_i2s" brief="I2S Driver" version="2.2.2" full_name="FLEXCOMM I2S Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i2s.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_i2s.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_flexcomm_i2s_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_i2s_dma.MIMXRT595S" name="flexcomm_i2s_dma" brief="I2S Driver" version="2.2.2" full_name="FLEXCOMM I2S DMA Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_i2s.MIMXRT595S"/>
          <component_dependency value="platform.drivers.lpc_dma.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i2s_dma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_i2s_dma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_flexcomm_i2s_dma_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_spi.MIMXRT595S" name="spi" brief="SPI Driver" version="2.2.1" full_name="FLEXCOMM SPI Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_spi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_spi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_flexcomm_spi_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_spi_dma.MIMXRT595S" name="spi_dma" brief="SPI Driver" version="2.1.1" full_name="FLEXCOMM SPI DMA Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm.MIMXRT595S"/>
          <component_dependency value="platform.drivers.flexcomm_spi.MIMXRT595S"/>
          <component_dependency value="platform.drivers.lpc_dma.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_spi_dma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_spi_dma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_flexcomm_spi_dma_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_spi_freertos.MIMXRT595S" name="spi_freertos" brief="SPI Driver" version="2.1.0" full_name="FLEXCOMM SPI FREERTOS Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="platform.drivers.flexcomm_spi.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_spi_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_spi_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_flexcomm_spi_freertos_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_usart.MIMXRT595S" name="usart" brief="USART Driver" version="2.5.0" full_name="FLEXCOMM USART Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.flexcomm.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_usart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_usart.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_flexcomm_usart_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_usart_dma.MIMXRT595S" name="usart_dma" brief="USART Driver" version="2.5.0" full_name="FLEXCOMM USART DMA Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm.MIMXRT595S"/>
          <component_dependency value="platform.drivers.flexcomm_usart.MIMXRT595S"/>
          <component_dependency value="platform.drivers.lpc_dma.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_usart_dma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_usart_dma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_flexcomm_usart_dma_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_usart_freertos.MIMXRT595S" name="usart_freertos" brief="USART Driver" version="2.5.0" full_name="FLEXCOMM USART FREERTOS Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm.MIMXRT595S"/>
          <component_dependency value="platform.drivers.flexcomm_usart.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_usart_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_usart_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_flexcomm_usart_freertos_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio.MIMXRT595S" name="flexio" brief="FLEXIO Driver" version="2.0.4" full_name="FLEXIO Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_flexio_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_i2c_master.MIMXRT595S" name="flexio_i2c_master" brief="FLEXIO I2C Driver" version="2.4.0" full_name="FLEXIO I2C Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.flexio.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_i2c_master.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_i2c_master.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_flexio_i2c_master_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_i2s.MIMXRT595S" name="flexio_i2s" brief="FLEXIO I2S Driver" version="2.2.0" full_name="FLEXIO I2S Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.flexio.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_i2s.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_i2s.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_mculcd.MIMXRT595S" name="flexio_mculcd" brief="FLEXIO MCULCD Driver" version="2.0.5" full_name="FLEXIO MCULCD Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.flexio.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_mculcd.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_mculcd.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_flexio_mculcd_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_mculcd_smartdma.MIMXRT595S" name="flexio_mculcd_smartdma" brief="FLEXIO MCULCD SMARTDMA Driver" version="2.0.1" full_name="FLEXIO MCULCD SMARTDMA Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio_mculcd.MIMXRT595S"/>
          <component_dependency value="platform.drivers.lpc_smartdma.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_mculcd_smartdma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_mculcd_smartdma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_flexio_mculcd_smartdma_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_spi.MIMXRT595S" name="flexio_spi" brief="FLEXIO SPI Driver" version="2.2.0" full_name="FLEXIO SPI Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.flexio.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_spi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_spi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_flexio_spi_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_uart.MIMXRT595S" name="flexio_uart" brief="FLEXIO UART Driver" version="2.3.0" full_name="FLEXIO UART Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.flexio.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_uart.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_uart.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_flexio_uart_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexspi.MIMXRT595S" name="flexspi" brief="FLEXSPI Driver" version="2.3.3" full_name="FLEXSPI Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexspi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexspi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_flexspi_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexspi_dma.MIMXRT595S" name="flexspi_dma" brief="FLEXSPI DMA Driver" version="2.2.0" full_name="FLEXSPI DMA Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexspi.MIMXRT595S"/>
          <component_dependency value="platform.drivers.lpc_dma.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexspi_dma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexspi_dma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_flexspi_dma_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.fmeas.MIMXRT595S" name="fmeas" brief="FMEAS Driver" version="2.1.1" full_name="FMEAS Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_fmeas.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_fmeas.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_fmeas_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.ft3267.MIMXRT595S" name="ft3267" brief="Touch panel controller FT3267 driver" version="1.0.1" full_name="Driver ft3267" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="false" type="board_component" package_base_path="components/ft3267" project_base_path="touchpanel">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ft3267.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ft3267.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_ft3267_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.ft5406.MIMXRT595S" name="ft5406" brief="Driver ft5406" version="1.0.0" full_name="Driver ft5406" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="false" type="board_component" package_base_path="components/ft5406" project_base_path="touchpanel">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ft5406.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ft5406.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_ft5406_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.fxos8700cq.MIMXRT595S" name="fxos8700cq" brief="Driver fxos8700cq" version="1.0.0" full_name="Driver fxos8700cq" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="board_component" package_base_path="components/fxos8700cq" project_base_path="accel">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_fxos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_fxos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_fxos8700cq_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.gt911.MIMXRT595S" name="gt911" brief="Driver gt911" version="1.0.3" full_name="Driver gt911" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="false" type="board_component" package_base_path="components/gt911" project_base_path="touchpanel">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_gt911.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_gt911.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_gt911_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.hashcrypt.MIMXRT595S" name="hashcrypt" brief="Hashcrypt Driver" version="2.1.4" full_name="Hashcrypt Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_hashcrypt.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_hashcrypt.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_hashcrypt_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.i3c.MIMXRT595S" name="i3c" brief="I3C Driver" version="2.3.0" full_name="I3C Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i3c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_i3c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_i3c_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.iap.MIMXRT595S" name="iap" brief="ROMIAP Driver" version="2.1.1" full_name="IAP Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_iap.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_iap.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_iap_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.inputmux.MIMXRT595S" name="inputmux" brief="INPUTMUX Driver" version="2.0.3" full_name="INPUTMUX Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="platform.drivers.inputmux_connections.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_inputmux.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_inputmux.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_inputmux_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.inputmux_connections.MIMXRT595S" name="inputmux_connections" brief="Inputmux_connections Driver" version="2.0.1" full_name="Inputmux_connections Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_inputmux_connections.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_inputmux_connections_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lcdif.MIMXRT595S" name="lcdif" brief="LCDIF Driver" version="2.1.0" full_name="LCDIF Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lcdif.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lcdif.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_lcdif_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpadc.MIMXRT595S" name="lpadc" brief="LPADC Driver" version="2.4.0" full_name="LPADC Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lpadc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpadc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_lpadc_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpc_crc.MIMXRT595S" name="lpc_crc" brief="CRC Driver" version="2.1.1" full_name="CRC Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_crc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_crc.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_lpc_crc_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpc_dma.MIMXRT595S" name="dma" brief="DMA Driver" version="2.4.2" full_name="DMA Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_dma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_lpc_dma_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpc_gpio.MIMXRT595S" name="gpio" brief="GPIO Driver" version="2.1.7" full_name="GPIO Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_gpio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_gpio.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_lpc_gpio_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpc_iopctl.MIMXRT595S" name="iopctl" brief="iopctl Driver" version="2.0.0" full_name="iopctl Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_iopctl.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_lpc_iopctl_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpc_rtc.MIMXRT595S" name="lpc_rtc" brief="RTC Driver" version="2.1.2" full_name="RTC Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rtc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rtc.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_lpc_rtc_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpc_smartdma.MIMXRT595S" name="lpc_smartdma" brief="SMARTDMA Driver" version="2.6.0" full_name="SMARTDMA Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_smartdma.h"/>
        <files mask="fsl_smartdma_prv.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_smartdma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_lpc_smartdma_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.memory.MIMXRT595S" name="memory" brief="MEMORY Driver" version="2.0.0" full_name="Memory Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_memory.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.mipi_dsi.MIMXRT595S" name="mipi_dsi" brief="MIPI DSI Driver" version="2.0.6" full_name="MIPI DSI Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_mipi_dsi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mipi_dsi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_mipi_dsi_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.mipi_dsi_smartdma.MIMXRT595S" name="mipi_dsi_smartdma" brief="MIPI DSI Driver" version="2.2.0" full_name="MIPI DSI SMARTDMA Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.mipi_dsi.MIMXRT595S"/>
          <component_dependency value="platform.drivers.lpc_smartdma.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_mipi_dsi_smartdma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mipi_dsi_smartdma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_mipi_dsi_smartdma_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.mpi_loader.MIMXRT595S" name="mpi_loader" brief="Driver mpi_loader" version="1.0.0" full_name="Driver mpi_loader" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="software_component" package_base_path="components/mpi_loader" project_base_path="mpi_loader">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mpi_loader.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mpi_loader.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_mpi_loader_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.mrt.MIMXRT595S" name="mrt" brief="MRT Driver" version="2.0.3" full_name="MRT Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mrt.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mrt.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_mrt_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.mu.MIMXRT595S" name="mu" brief="MU Driver" version="2.0.6" full_name="MU Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mu.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mu.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_mu_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.nand_flash-common.MIMXRT595S" name="nand_flash-common" brief="Driver nand_flash-common" version="1.0.0" full_name="Driver nand_flash-common" devices="MIMXRT595S" user_visible="true" type="abstraction_layer" package_base_path="components/flash/nand" project_base_path="nand_flash">
      <source relative_path="./" type="c_include">
        <files mask="fsl_nand_flash.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.nand_flash-controller-flexspi.MIMXRT595S" name="nand_flash-controller-flexspi" brief="Driver nand_flash-controller-flexspi" version="1.0.0" full_name="Driver nand_flash-controller-flexspi" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="abstraction_layer" package_base_path="components/flash/nand/flexspi" project_base_path="nand_flash">
      <dependencies>
        <all>
          <component_dependency value="driver.nand_flash-common.MIMXRT595S"/>
          <component_dependency value="platform.drivers.flexspi.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexspi_nand_flash.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexspi_nand_flash.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.nor_flash-common.MIMXRT595S" name="nor_flash-common" brief="Driver nor_flash-common" version="1.0.0" full_name="Driver nor_flash-common" devices="MIMXRT595S" user_visible="true" type="abstraction_layer" package_base_path="components/flash/nor" project_base_path="nor_flash">
      <source relative_path="./" type="c_include">
        <files mask="fsl_nor_flash.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_nor_flash-common_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.nor_flash-controller-flexspi.MIMXRT595S" name="nor_flash-controller-flexspi" brief="Driver nor_flash-controller-flexspi" version="1.0.0" full_name="Driver nor_flash-controller-flexspi" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="abstraction_layer" package_base_path="components/flash/nor/flexspi" project_base_path="nor_flash">
      <dependencies>
        <all>
          <component_dependency value="driver.nor_flash-common.MIMXRT595S"/>
          <component_dependency value="platform.drivers.flexspi.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexspi_nor_flash.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexspi_nor_flash.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_nor_flash-controller-flexspi_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.ostimer.MIMXRT595S" name="ostimer" brief="OSTimer Driver" version="2.1.2" full_name="OSTimer Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ostimer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ostimer.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_ostimer_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.otfad.MIMXRT595S" name="otfad" brief="OTFAD Driver" version="2.1.2" full_name="OTFAD Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_otfad.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_otfad.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_otfad_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.pca9420.MIMXRT595S" name="pca9420" brief="Driver pca9420" version="1.0.0" full_name="Driver pca9420" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="board_component" package_base_path="components/pca9420" project_base_path="pmic_driver">
      <dependencies>
        <component_dependency value="platform.drivers.power.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pca9420.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pca9420.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_pca9420_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pint.MIMXRT595S" name="pint" brief="PINT Driver" version="2.1.8" full_name="PINT Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pint.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pint.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_pint_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.power.MIMXRT595S" name="power" brief="Power driver" version="2.3.0" full_name="Driver power" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_power.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_power.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_power_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.powerquad.MIMXRT595S" name="powerquad" brief="POWERQUAD Driver" version="2.0.3" full_name="POWERQUAD Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_powerquad_data.h"/>
        <files mask="fsl_powerquad.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_powerquad_data.c"/>
        <files mask="fsl_powerquad_basic.c"/>
        <files mask="fsl_powerquad_math.c"/>
        <files mask="fsl_powerquad_matrix.c"/>
        <files mask="fsl_powerquad_filter.c"/>
        <files mask="fsl_powerquad_transform.c"/>
        <files mask="fsl_powerquad_cmsis.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_powerquad_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.puf.MIMXRT595S" name="PUF" brief="PUF Driver" version="2.1.3" full_name="PUF Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_puf.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_puf.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_puf_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.reset.MIMXRT595S" name="reset" brief="Reset Driver" version="2.0.1" full_name="Reset Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_reset.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_reset.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_reset_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sctimer.MIMXRT595S" name="sctimer" brief="SCT Driver" version="2.3.0" full_name="SCT Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sctimer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sctimer.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_sctimer_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sema42.MIMXRT595S" name="sema42" brief="SEMA42 Driver" version="2.0.2" full_name="SEMA42 Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sema42.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sema42.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_sema42_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.ssd1963.MIMXRT595S" name="ssd1963" brief="Driver ssd1963" version="1.1.2" full_name="Driver ssd1963" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="board_component" package_base_path="components/ssd1963" project_base_path="lcdc">
      <dependencies>
        <component_dependency value="driver.dbi.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ssd1963.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ssd1963.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_ssd1963_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.tfa9896.MIMXRT595S" name="tfa9896" brief="Driver tfa9896" version="6.0.1" full_name="Driver tfa9896" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="software_component" package_base_path="components/codec/tfa9896" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="component.codec_i2c.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_tfa9896_buffer.h"/>
        <files mask="fsl_tfa9896.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_hal_registers.c"/>
        <files mask="fsl_tfa9896.c"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="MIMXRT595595-EVK_TFA9896_SW.pdf"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_tfa9896_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.trng.MIMXRT595S" name="trng" brief="TRNG Driver" version="2.0.12" full_name="TRNG Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_trng.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_trng.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_trng_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.usdhc.MIMXRT595S" name="sdhc" brief="USDHC Driver" version="2.7.0" full_name="USDHC Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_usdhc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_usdhc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_usdhc_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.utick.MIMXRT595S" name="utick" brief="UTICK Driver" version="2.0.4" full_name="UTICK Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.power.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_utick.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_utick.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_utick_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.video-common.MIMXRT595S" name="video-common" brief="Driver video-common" version="1.0.2" full_name="Driver video-common" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="software_component" package_base_path="components/video" project_base_path="video">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_video_common.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_video_common.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_video-common_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.wm8904.MIMXRT595S" name="wm8904" brief="Driver wm8904" version="2.4.3" full_name="Driver wm8904" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="software_component" package_base_path="components/codec/wm8904" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="component.codec_i2c.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wm8904.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wm8904.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_wm8904_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.wwdt.MIMXRT595S" name="wwdt" brief="WWDT Driver" version="2.1.9" full_name="WWDT Driver" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wwdt.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wwdt.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="driver_wwdt_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.baremetal.MIMXRT595S" name="baremetal" brief="Middleware baremetal" version="1.0.0" full_name="Baremetal" devices="MIMXRT595S" user_visible="true" type="OS" package_base_path="middleware" project_base_path="middleware">
      <defines>
        <define name="FSL_RTOS_BM" value=""/>
        <define name="SDK_OS_BAREMETAL" value=""/>
      </defines>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_baremetal_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.dsp_audio_streamer.fusionf1_dec.MIMXRT595S" name="dsp_audio_streamer_fusionf1_dec" brief="DSP Audio Streamer FusionF1 codecs" version="2.0" full_name="DSP Audio Streamer FusionF1 codecs" devices="MIMXRT595S" category="Audio/DSP Audio Streamer" user_visible="false" type="middleware" package_base_path="middleware/dsp" project_base_path="dsp">
      <source relative_path="codecs/aacplus_dec/fusionf1/lib" type="lib">
        <files mask="xa_aacplus_v2_dec.a" hidden="true"/>
      </source>
      <source relative_path="codecs/aacplus_dec/fusionf1" type="other">
        <files mask="README" hidden="true"/>
      </source>
      <source relative_path="codecs/aacplus_dec/fusionf1/doc" type="doc">
        <files mask="HiFi-AAC-DecoderProgrammersGuide.pdf" hidden="true"/>
      </source>
      <source relative_path="codecs/aacplus_dec/fusionf1/include" type="c_include">
        <files mask="xa_memory_standards.h" hidden="true"/>
        <files mask="xa_apicmd_standards.h" hidden="true"/>
        <files mask="xa_error_standards.h" hidden="true"/>
        <files mask="xa_error_handler.h" hidden="true"/>
        <files mask="xa_type_def.h" hidden="true"/>
      </source>
      <source relative_path="codecs/aacplus_dec/fusionf1/include/aac_dec" type="c_include">
        <files mask="xa_aac_dec_api.h" hidden="true"/>
      </source>
      <source relative_path="codecs/aacplus_dec/fusionf1/test/build" type="other">
        <files mask="makefile_testbench_sample" hidden="true"/>
      </source>
      <source relative_path="codecs/aacplus_dec/fusionf1/test/build" type="doc">
        <files mask="paramfilesimple.txt" hidden="true"/>
        <files mask="paramfilesimple_loas.txt" hidden="true"/>
      </source>
      <source relative_path="codecs/aacplus_dec/fusionf1/test/src" type="src">
        <files mask="xa_aac_dec_sample_testbench.c" hidden="true"/>
        <files mask="xa_aac_dec_error_handler.c" hidden="true"/>
      </source>
      <source relative_path="codecs/aacplus_dec/fusionf1/test/test_inp" type="binary">
        <files mask="sample_loas.bin" hidden="true"/>
      </source>
      <source relative_path="codecs/aacplus_dec/fusionf1/test/test_inp" type="other">
        <files mask="thetest.adts" hidden="true"/>
      </source>
      <source relative_path="codecs/aacplus_dec/fusionf1/test/test_out" type="doc">
        <files mask="empty.txt" hidden="true"/>
      </source>
      <source relative_path="codecs/aacplus_dec/fusionf1/test/test_ref" type="other">
        <files mask="sample_loas.wav" hidden="true"/>
        <files mask="thetest.wav" hidden="true"/>
      </source>
      <source relative_path="codecs/asrc_src_pp/fusionf1" type="other">
        <files mask="README" hidden="true"/>
      </source>
      <source relative_path="codecs/asrc_src_pp/fusionf1/doc" type="doc">
        <files mask="HiFi-ASRC-SRC-PP-ProgrammersGuide.pdf" hidden="true"/>
      </source>
      <source relative_path="codecs/asrc_src_pp/fusionf1/include" type="c_include">
        <files mask="xa_memory_standards.h" hidden="true"/>
        <files mask="xa_apicmd_standards.h" hidden="true"/>
        <files mask="xa_error_standards.h" hidden="true"/>
        <files mask="xa_error_handler.h" hidden="true"/>
        <files mask="xa_api_defs.h" hidden="true"/>
        <files mask="xa_type_def.h" hidden="true"/>
      </source>
      <source relative_path="codecs/asrc_src_pp/fusionf1/include/src_pp" type="c_include">
        <files mask="xa_src_pp_api.h" hidden="true"/>
      </source>
      <source relative_path="codecs/asrc_src_pp/fusionf1/test/build" type="other">
        <files mask="makefile_testbench_sample" hidden="true"/>
      </source>
      <source relative_path="codecs/asrc_src_pp/fusionf1/test/build" type="script">
        <files mask="test_common_win.mk" hidden="true"/>
        <files mask="test_common.mk" hidden="true"/>
      </source>
      <source relative_path="codecs/asrc_src_pp/fusionf1/test/build" type="doc">
        <files mask="paramfile_src_pp.txt" hidden="true"/>
      </source>
      <source relative_path="codecs/asrc_src_pp/fusionf1/test/src" type="src">
        <files mask="xa_src_pp_sample_testbench_hifi3.c" hidden="true"/>
        <files mask="xa_src_pp_waveio.c" hidden="true"/>
        <files mask="xa_src_pp_error_handler.c" hidden="true"/>
      </source>
      <source relative_path="codecs/asrc_src_pp/fusionf1/test/src" type="c_include">
        <files mask="xa_src_pp_waveio.h" hidden="true"/>
      </source>
      <source relative_path="codecs/asrc_src_pp/fusionf1/test/test_inp" type="other">
        <files mask="sinusoid_8960Hz_32kHz.wav" hidden="true"/>
      </source>
      <source relative_path="codecs/asrc_src_pp/fusionf1/test/test_out" type="doc">
        <files mask="empty.txt" hidden="true"/>
      </source>
      <source relative_path="codecs/asrc_src_pp/fusionf1/test/test_ref" type="other">
        <files mask="out_src_sinusoid_8960Hz_48kHz_asrc.wav" hidden="true"/>
        <files mask="out_src_sinusoid_8960Hz_48kHz.wav" hidden="true"/>
      </source>
      <source relative_path="codecs/mp3_dec/fusionf1" type="other">
        <files mask="README" hidden="true"/>
      </source>
      <source relative_path="codecs/mp3_dec/fusionf1/doc" type="doc">
        <files mask="HiFi-MP3-DecoderProgrammersGuide.pdf" hidden="true"/>
      </source>
      <source relative_path="codecs/mp3_dec/fusionf1/include" type="c_include">
        <files mask="xa_memory_standards.h" hidden="true"/>
        <files mask="xa_apicmd_standards.h" hidden="true"/>
        <files mask="xa_error_standards.h" hidden="true"/>
        <files mask="xa_error_handler.h" hidden="true"/>
        <files mask="xa_type_def.h" hidden="true"/>
      </source>
      <source relative_path="codecs/mp3_dec/fusionf1/include/mp3_dec" type="c_include">
        <files mask="xa_mp3_dec_api.h" hidden="true"/>
      </source>
      <source relative_path="codecs/mp3_dec/fusionf1/test/build" type="other">
        <files mask="makefile_testbench_sample" hidden="true"/>
      </source>
      <source relative_path="codecs/mp3_dec/fusionf1/test/build" type="doc">
        <files mask="paramfilesimple.txt" hidden="true"/>
        <files mask="ldscript_stream_data.txt" hidden="true"/>
      </source>
      <source relative_path="codecs/mp3_dec/fusionf1/test/include" type="c_include">
        <files mask="id3_tag_decode.h" hidden="true"/>
      </source>
      <source relative_path="codecs/mp3_dec/fusionf1/test/src" type="src">
        <files mask="id3_tag_decode.c" hidden="true"/>
        <files mask="xa_mp3_dec_sample_testbench.c" hidden="true"/>
        <files mask="xa_mp3_dec_error_handler.c" hidden="true"/>
        <files mask="stream_data.c" hidden="true"/>
      </source>
      <source relative_path="codecs/mp3_dec/fusionf1/test/test_inp" type="other">
        <files mask="compl.mp3" hidden="true"/>
        <files mask="hihat.mp3" hidden="true"/>
      </source>
      <source relative_path="codecs/mp3_dec/fusionf1/test/test_out" type="doc">
        <files mask="force_mkdir.txt" hidden="true"/>
      </source>
      <source relative_path="codecs/mp3_dec/fusionf1/test/test_ref" type="other">
        <files mask="hihat_16bit.wav" hidden="true"/>
      </source>
      <source relative_path="codecs/opus/fusionf1" type="other">
        <files mask="README" hidden="true"/>
      </source>
      <source relative_path="codecs/opus/fusionf1/doc" type="doc">
        <files mask="HiFi-OPUS-CodecProgrammersGuide.pdf" hidden="true"/>
      </source>
      <source relative_path="codecs/opus/fusionf1/include" type="c_include">
        <files mask="xa_error_standards.h" hidden="true"/>
        <files mask="xa_error_handler.h" hidden="true"/>
        <files mask="xa_type_def.h" hidden="true"/>
      </source>
      <source relative_path="codecs/opus/fusionf1/include/opus_codec" type="c_include">
        <files mask="xa_opus_codec_api.h" hidden="true"/>
      </source>
      <source relative_path="codecs/opus/fusionf1/include/ogg_lib" type="c_include">
        <files mask="xa_ogg_lib_api.h" hidden="true"/>
      </source>
      <source relative_path="codecs/opus/fusionf1/test/build" type="other">
        <files mask="makefile_testbench_sample" hidden="true"/>
      </source>
      <source relative_path="codecs/opus/fusionf1/test/build" type="doc">
        <files mask="paramfilesimple_encode.txt" hidden="true"/>
        <files mask="paramfilesimple_decode.txt" hidden="true"/>
      </source>
      <source relative_path="codecs/opus/fusionf1/test/include" type="c_include">
        <files mask="xa_profiler.h" hidden="true"/>
        <files mask="opus_header.h" hidden="true"/>
      </source>
      <source relative_path="codecs/opus/fusionf1/test/src" type="src">
        <files mask="xa_opus_encoder_sample_testbench.c" hidden="true"/>
        <files mask="opus_header.c" hidden="true"/>
        <files mask="xa_common_error_handler.c" hidden="true"/>
        <files mask="xa_opus_decoder_sample_testbench.c" hidden="true"/>
        <files mask="xa_ogg_lib_error_handler.c" hidden="true"/>
        <files mask="xa_opus_codec_error_handler.c" hidden="true"/>
      </source>
      <source relative_path="codecs/opus/fusionf1/test/test_inp" type="other">
        <files mask="testvector04.bit" hidden="true"/>
        <files mask="opus51_trim.webm.ogg" hidden="true"/>
        <files mask="testvector11-48000-2ch.out" hidden="true"/>
        <files mask="testvector11-16000-1ch.out" hidden="true"/>
        <files mask="testvector04.bit.opus" hidden="true"/>
      </source>
      <source relative_path="codecs/opus/fusionf1/test/test_out" type="doc">
        <files mask="empty.txt" hidden="true"/>
      </source>
      <source relative_path="codecs/opus/fusionf1/test/test_ref" type="other">
        <files mask="opus51_trim-48000-6ch.out" hidden="true"/>
        <files mask="testvector04-48000-2ch-ogg-opus.out" hidden="true"/>
        <files mask="testvector11-16kHz-1ch-20kbps.bit" hidden="true"/>
        <files mask="testvector04-48000-2ch.out" hidden="true"/>
        <files mask="testvector11-48kHz-2ch-128kbps.bit" hidden="true"/>
      </source>
      <source relative_path="codecs/sbc_dec/fusionf1" type="other">
        <files mask="README" hidden="true"/>
      </source>
      <source relative_path="codecs/sbc_dec/fusionf1/doc" type="doc">
        <files mask="HiFi-SBC-DecoderProgrammersGuide.pdf" hidden="true"/>
      </source>
      <source relative_path="codecs/sbc_dec/fusionf1/include" type="c_include">
        <files mask="xa_memory_standards.h" hidden="true"/>
        <files mask="xa_apicmd_standards.h" hidden="true"/>
        <files mask="xa_error_standards.h" hidden="true"/>
        <files mask="xa_error_handler.h" hidden="true"/>
        <files mask="xa_type_def.h" hidden="true"/>
      </source>
      <source relative_path="codecs/sbc_dec/fusionf1/include/sbc_dec" type="c_include">
        <files mask="xa_sbc_dec_api.h" hidden="true"/>
      </source>
      <source relative_path="codecs/sbc_dec/fusionf1/test/build" type="other">
        <files mask="makefile_testbench_sample" hidden="true"/>
      </source>
      <source relative_path="codecs/sbc_dec/fusionf1/test/build" type="doc">
        <files mask="paramfilesimple_sbc_dec.txt" hidden="true"/>
      </source>
      <source relative_path="codecs/sbc_dec/fusionf1/test/src" type="src">
        <files mask="xa_sbc_dec_sample_testbench.c" hidden="true"/>
        <files mask="xa_sbc_dec_error_handler.c" hidden="true"/>
      </source>
      <source relative_path="codecs/sbc_dec/fusionf1/test/test_inp" type="other">
        <files mask="sbc_test_02.sbc" hidden="true"/>
      </source>
      <source relative_path="codecs/sbc_dec/fusionf1/test/test_out" type="doc">
        <files mask="placeholder.txt" hidden="true"/>
      </source>
      <source relative_path="codecs/sbc_dec/fusionf1/test/test_ref" type="other">
        <files mask="sbc_test_02.wav" hidden="true"/>
      </source>
      <source relative_path="codecs/sbc_enc/fusionf1" type="other">
        <files mask="README" hidden="true"/>
      </source>
      <source relative_path="codecs/sbc_enc/fusionf1/doc" type="doc">
        <files mask="HiFi-SBC-EncoderProgrammersGuide.pdf" hidden="true"/>
      </source>
      <source relative_path="codecs/sbc_enc/fusionf1/include" type="c_include">
        <files mask="xa_memory_standards.h" hidden="true"/>
        <files mask="xa_apicmd_standards.h" hidden="true"/>
        <files mask="xa_error_standards.h" hidden="true"/>
        <files mask="xa_error_handler.h" hidden="true"/>
        <files mask="xa_type_def.h" hidden="true"/>
      </source>
      <source relative_path="codecs/sbc_enc/fusionf1/include/sbc_enc" type="c_include">
        <files mask="xa_sbc_enc_api.h" hidden="true"/>
      </source>
      <source relative_path="codecs/sbc_enc/fusionf1/test/build" type="other">
        <files mask="makefile_testbench_sample" hidden="true"/>
      </source>
      <source relative_path="codecs/sbc_enc/fusionf1/test/build" type="doc">
        <files mask="paramfilesimple_sbc_enc.txt" hidden="true"/>
      </source>
      <source relative_path="codecs/sbc_enc/fusionf1/test/src" type="src">
        <files mask="xa_sbc_enc_error_handler.c" hidden="true"/>
        <files mask="xa_sbc_enc_sample_testbench.c" hidden="true"/>
      </source>
      <source relative_path="codecs/sbc_enc/fusionf1/test/test_inp" type="other">
        <files mask="hihat.wav" hidden="true"/>
      </source>
      <source relative_path="codecs/sbc_enc/fusionf1/test/test_out" type="doc">
        <files mask="placeholder.txt" hidden="true"/>
      </source>
      <source relative_path="codecs/sbc_enc/fusionf1/test/test_ref" type="other">
        <files mask="hihat.sbc" hidden="true"/>
      </source>
      <source exclude="true" relative_path="audio_framework" type="doc">
        <files mask="ChangeLogKSDK.txt" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="codecs/aacplus_dec/fusionf1/include/aac_dec" type="c_include"/>
        <include_path relative_path="codecs/asrc_src_pp/fusionf1/include/src_pp" type="c_include"/>
        <include_path relative_path="codecs/mp3_dec/fusionf1/include/mp3_dec" type="c_include"/>
        <include_path relative_path="codecs/opus/fusionf1/include/opus_codec" type="c_include"/>
        <include_path relative_path="codecs/opus/fusionf1/include/ogg_lib" type="c_include"/>
        <include_path relative_path="codecs/sbc_dec/fusionf1/include/sbc_dec" type="c_include"/>
        <include_path relative_path="codecs/sbc_enc/fusionf1/include/sbc_enc" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.dsp_audio_streamer.libxa_af_hostless.MIMXRT595S" name="dsp_audio_streamer_libxa_af_hostless" brief="DSP Audio Streamer" version="2.0" full_name="Middleware dsp_audio_streamer libxa_af_hostless" devices="MIMXRT595S" category="Audio/DSP Audio Streamer" user_visible="false" type="middleware" package_base_path="middleware/dsp" project_base_path="dsp">
      <source relative_path="audio_framework/libxa_af_hostless/algo/hifi-dpf/src" type="src">
        <files mask="xa-class-mixer.c"/>
        <files mask="rbtree.c"/>
        <files mask="xa-class-audio-codec.c"/>
        <files mask="xf-mem.c"/>
        <files mask="xf-sched.c"/>
        <files mask="xf-main.c"/>
        <files mask="xf-msgq1.c"/>
        <files mask="xf-msgq.c"/>
        <files mask="xa-class-base.c"/>
        <files mask="xf-io.c"/>
        <files mask="xf-ipi.c"/>
        <files mask="xf-msg.c"/>
        <files mask="xf-core.c"/>
        <files mask="xa-class-capturer.c"/>
        <files mask="xa-class-mimo-proc.c"/>
        <files mask="xf-isr.c"/>
        <files mask="xa-class-renderer.c"/>
      </source>
      <source relative_path="audio_framework/libxa_af_hostless/algo/hifi-dpf/include" type="c_include">
        <files mask="xf-trace.h"/>
        <files mask="xf-dp_proxy.h"/>
        <files mask="xf-io.h"/>
        <files mask="xf-component.h"/>
        <files mask="xf-timebase.h"/>
        <files mask="xf-dp_opcode.h"/>
        <files mask="xf-sched.h"/>
        <files mask="xf-plugin.h"/>
        <files mask="xf-mm.h"/>
        <files mask="xf-msg.h"/>
        <files mask="xf-dp.h"/>
        <files mask="xf-core.h"/>
        <files mask="xf-probe.h"/>
      </source>
      <source relative_path="audio_framework/libxa_af_hostless/algo/hifi-dpf/include/audio" type="c_include">
        <files mask="xa-class-base.h"/>
      </source>
      <source relative_path="audio_framework/libxa_af_hostless/algo/hifi-dpf/include/lib" type="c_include">
        <files mask="rbtree.h"/>
      </source>
      <source relative_path="audio_framework/libxa_af_hostless/algo/hifi-dpf/include/sys/xos-msgq" type="c_include">
        <files mask="xf-dp_ipc.h"/>
        <files mask="xf-dp_runtime.h"/>
        <files mask="xf-sys.h"/>
        <files mask="xf-dp_hal.h"/>
        <files mask="xf-mem.h"/>
        <files mask="xf-shmem.h"/>
        <files mask="xf-dp_types.h"/>
        <files mask="xf-dp_config.h"/>
      </source>
      <source relative_path="audio_framework/libxa_af_hostless/algo/hifi-dpf/include/sys/xos-msgq/iss" type="c_include">
        <files mask="xf-board.h"/>
      </source>
      <source relative_path="audio_framework/libxa_af_hostless/algo/host-apf/src" type="src">
        <files mask="xaf-api.c"/>
        <files mask="xf-trace.c"/>
        <files mask="xf-proxy.c"/>
      </source>
      <source relative_path="audio_framework/libxa_af_hostless/algo/host-apf/include" type="c_include">
        <files mask="xaf-version.h"/>
        <files mask="xf.h"/>
        <files mask="xaf-structs.h"/>
        <files mask="xf-opcode.h"/>
        <files mask="xf-proto.h"/>
        <files mask="xf-proxy.h"/>
      </source>
      <source relative_path="audio_framework/libxa_af_hostless/algo/host-apf/include/sys/xos-msgq" type="c_include">
        <files mask="xf-ipc.h"/>
        <files mask="xf-config.h"/>
        <files mask="xf-runtime.h"/>
        <files mask="xf-hal.h"/>
        <files mask="xf-types.h"/>
      </source>
      <source relative_path="audio_framework/libxa_af_hostless/algo/xa_af_hostless/include" type="c_include">
        <files mask="xf-msgq-if.h"/>
        <files mask="xa_af_hostless_definitions.h"/>
        <files mask="xf-ap-dp-common.h"/>
        <files mask="xa_api_defs.h"/>
      </source>
      <source relative_path="audio_framework/libxa_af_hostless/include" type="c_include">
        <files mask="xf-debug.h"/>
        <files mask="xaf-api.h"/>
      </source>
      <source relative_path="audio_framework/libxa_af_hostless/include/audio" type="c_include">
        <files mask="xa_memory_standards.h"/>
        <files mask="xa-capturer-api.h"/>
        <files mask="xa_apicmd_standards.h"/>
        <files mask="xa_error_standards.h"/>
        <files mask="xa-audio-decoder-api.h"/>
        <files mask="xa-renderer-api.h"/>
        <files mask="xa-mixer-api.h"/>
        <files mask="xa_type_def.h"/>
        <files mask="xa-mimo-proc-api.h"/>
      </source>
      <source relative_path="audio_framework/libxa_af_hostless/include/sysdeps/xos/include" type="c_include">
        <files mask="osal-isr.h"/>
        <files mask="osal-timer.h"/>
        <files mask="osal-thread.h"/>
        <files mask="osal-msgq.h"/>
      </source>
      <source relative_path="audio_framework/libxa_af_hostless/doc" type="doc">
        <files mask="HiFi-AF-Hostless-ProgrammersGuide.pdf" hidden="true"/>
        <files mask="HiFi-Audio-Codec-API-Definition.pdf" hidden="true"/>
        <files mask="HiFi-Speech-Codec-API-Definition.pdf" hidden="true"/>
      </source>
      <source relative_path="audio_framework/libxa_af_hostless" type="doc">
        <files mask="README.txt" hidden="true"/>
        <files mask="README.html" hidden="true"/>
      </source>
      <source relative_path="audio_framework" type="doc">
        <files mask="LICENSE.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="audio_framework" type="doc">
        <files mask="ChangeLogKSDK.txt" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="audio_framework/libxa_af_hostless/algo/hifi-dpf/include" type="c_include"/>
        <include_path relative_path="audio_framework/libxa_af_hostless/algo/hifi-dpf/include/audio" type="c_include"/>
        <include_path relative_path="audio_framework/libxa_af_hostless/algo/hifi-dpf/include/lib" type="c_include"/>
        <include_path relative_path="audio_framework/libxa_af_hostless/algo/hifi-dpf/include/sys/xos-msgq" type="c_include"/>
        <include_path relative_path="audio_framework/libxa_af_hostless/algo/hifi-dpf/include/sys/xos-msgq/iss" type="c_include"/>
        <include_path relative_path="audio_framework/libxa_af_hostless/algo/host-apf/include" type="c_include"/>
        <include_path relative_path="audio_framework/libxa_af_hostless/algo/host-apf/include/sys/xos-msgq" type="c_include"/>
        <include_path relative_path="audio_framework/libxa_af_hostless/algo/xa_af_hostless/include" type="c_include"/>
        <include_path relative_path="audio_framework/libxa_af_hostless/include" type="c_include"/>
        <include_path relative_path="audio_framework/libxa_af_hostless/include/audio" type="c_include"/>
        <include_path relative_path="audio_framework/libxa_af_hostless/include/sysdeps/xos/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.dsp_audio_streamer.testxa_af_hostless.MIMXRT595S" name="dsp_audio_streamer_testxa_af_hostless" brief="DSP Audio Streamer" version="2.0" full_name="Middleware dsp_audio_streamer testxa_af_hostless" devices="MIMXRT595S" category="Audio/DSP Audio Streamer" user_visible="false" type="middleware" package_base_path="middleware/dsp" project_base_path="dsp">
      <source relative_path="audio_framework/testxa_af_hostless/test/include" type="c_include">
        <files mask="xaf-mem.h"/>
        <files mask="xaf-fio-test.h"/>
        <files mask="host_fio.h"/>
        <files mask="xaf-utils-test.h"/>
        <files mask="xaf-test.h"/>
        <files mask="xaf-clk-test.h"/>
      </source>
      <source relative_path="audio_framework/testxa_af_hostless/test/include/audio" type="c_include">
        <files mask="xa-opus-encoder-api.h"/>
        <files mask="xa-pcm-mix-api.h"/>
        <files mask="xa-aec23-api.h"/>
        <files mask="xa-pcm-split-api.h"/>
        <files mask="xa-aec22-api.h"/>
        <files mask="xa_amr_wb_dec_definitions.h"/>
        <files mask="xa-pcm-gain-api.h"/>
        <files mask="xa-opus-decoder-api.h"/>
      </source>
      <source relative_path="audio_framework/testxa_af_hostless/test/plugins" type="src">
        <files mask="xa-factory.c"/>
      </source>
      <source relative_path="audio_framework/testxa_af_hostless/test/plugins/cadence/aac_dec" type="src">
        <files mask="xa-aac-decoder.c"/>
      </source>
      <source exclude="true" relative_path="audio_framework/testxa_af_hostless/test/plugins/cadence/aec22" type="src">
        <files mask="xa-aec22.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="audio_framework/testxa_af_hostless/test/plugins/cadence/aec23" type="src">
        <files mask="xa-aec23.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="audio_framework/testxa_af_hostless/test/plugins/cadence/capturer" type="src">
        <files mask="xa-capturer.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="audio_framework/testxa_af_hostless/test/plugins/cadence/mixer" type="src">
        <files mask="xa-mixer.c" hidden="true"/>
      </source>
      <source relative_path="audio_framework/testxa_af_hostless/test/plugins/cadence/mp3_dec" type="src">
        <files mask="xa-mp3-decoder.c"/>
      </source>
      <source relative_path="audio_framework/testxa_af_hostless/test/plugins/cadence/opus" type="src">
        <files mask="xa-opus-encoder.c"/>
      </source>
      <source exclude="true" relative_path="audio_framework/testxa_af_hostless/test/plugins/cadence/pcm_mix" type="src">
        <files mask="xa-pcm-mix.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="audio_framework/testxa_af_hostless/test/plugins/cadence/pcm_split" type="src">
        <files mask="xa-pcm-split.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="audio_framework/testxa_af_hostless/test/plugins/cadence/renderer" type="src">
        <files mask="xa-renderer.c" hidden="true"/>
      </source>
      <source relative_path="audio_framework/testxa_af_hostless/test/plugins/cadence/pcm_gain" type="src">
        <files mask="xa-pcm-gain.c"/>
      </source>
      <source relative_path="audio_framework/testxa_af_hostless/test/plugins/cadence/src-pp" type="src">
        <files mask="xa-src-pp.c"/>
      </source>
      <source relative_path="audio_framework/testxa_af_hostless/test/plugins/cadence/vorbis_dec" type="src">
        <files mask="xa-vorbis-decoder.c"/>
      </source>
      <source relative_path="audio_framework/testxa_af_hostless/test/plugins/nxp/capturer" type="src">
        <files mask="xa-capturer-dmic.c"/>
        <files mask="xa-capturer-i2s.c"/>
      </source>
      <source relative_path="audio_framework/testxa_af_hostless/test/plugins/nxp/client_proxy" type="src">
        <files mask="client_proxy.c"/>
      </source>
      <source relative_path="audio_framework/testxa_af_hostless/test/plugins/nxp/client_proxy" type="c_include">
        <files mask="client_proxy_api.h"/>
      </source>
      <source relative_path="audio_framework/testxa_af_hostless/test/plugins/nxp/vit_pre_proc" type="src">
        <files mask="vit_pre_proc.c"/>
      </source>
      <source relative_path="audio_framework/testxa_af_hostless/test/plugins/nxp/vit_pre_proc" type="c_include">
        <files mask="vit_pre_proc.h"/>
      </source>
      <source relative_path="audio_framework/testxa_af_hostless/test/plugins/nxp/opus" type="src">
        <files mask="xa-opus-decoder.c"/>
      </source>
      <source relative_path="audio_framework/testxa_af_hostless/test/plugins/nxp/sbc_dec" type="src">
        <files mask="xa-sbc-decoder.c"/>
      </source>
      <source relative_path="audio_framework/testxa_af_hostless/test/plugins/nxp/sbc_enc" type="src">
        <files mask="xa-sbc-encoder.c"/>
      </source>
      <source relative_path="audio_framework/testxa_af_hostless/test/plugins/nxp/renderer" type="src">
        <files mask="xa-renderer.c"/>
      </source>
      <source exclude="true" relative_path="audio_framework" type="doc">
        <files mask="ChangeLogKSDK.txt" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="audio_framework/testxa_af_hostless/test/include" type="c_include"/>
        <include_path relative_path="audio_framework/testxa_af_hostless/test/include/audio" type="c_include"/>
        <include_path relative_path="audio_framework/testxa_af_hostless/test/plugins/nxp/client_proxy" type="c_include"/>
        <include_path relative_path="audio_framework/testxa_af_hostless/test/plugins/nxp/vit_pre_proc" type="c_include"/>
        <include_path relative_path="audio_framework/testxa_af_hostless/test/test_inp" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.eap.dsp.MIMXRT595S" name="eap" brief="Essential Audio Processing library" version="2.4.0" full_name="middleware eap" devices="MIMXRT595S" category="Audio/Essential Audio Processing library" user_visible="true" type="middleware" package_base_path="middleware/EAP" project_base_path="EAP">
      <source relative_path="Example_Application_Simulation/APP_INTEGRATION_XTENSA/COMMON/PlatformTypes" type="c_include">
        <files mask="LVC_Types.h"/>
      </source>
      <source relative_path="Example_Application_Simulation/APP_INTEGRATION_XTENSA/INC" type="c_include">
        <files mask="EAP_Parameter_MusicEnhancerRMSLimiter.h"/>
        <files mask="TEST_PARAM.h"/>
        <files mask="EAP_Parameter_ConcertSound.h"/>
        <files mask="EAP_Parameter_TestAllOn.h"/>
        <files mask="EAP_Parameter_Custom.h"/>
        <files mask="EAP_Parameter_LoudnessMaximiser.h"/>
        <files mask="EAP_Parameter_VoiceEnhancer.h"/>
        <files mask="EAP_Parameter_AutoVolumeLeveler.h"/>
        <files mask="EAP_Parameter_ToneGenerator.h"/>
        <files mask="EAP_Parameter_AllEffectOff.h"/>
      </source>
      <source relative_path="Example_Application_Simulation/APP_INTEGRATION_XTENSA/LIB" type="c_include">
        <files mask="LVM.h"/>
      </source>
      <source relative_path="EAP_Library" type="doc">
        <files mask="libEAP_releaseNote.txt"/>
      </source>
      <include_paths>
        <include_path relative_path="Example_Application_Simulation/APP_INTEGRATION_XTENSA/COMMON/PlatformTypes" type="c_include"/>
        <include_path relative_path="Example_Application_Simulation/APP_INTEGRATION_XTENSA/INC" type="c_include"/>
        <include_path relative_path="Example_Application_Simulation/APP_INTEGRATION_XTENSA/LIB" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.eap.exapp_dsp.MIMXRT595S" name="eap" brief="EAP example app for DSP cores" version="2.4.0" full_name="EAP example app" devices="MIMXRT595S" category="Audio/Essential Audio Processing library" user_visible="false" type="middleware" package_base_path="middleware/EAP" project_base_path="EAP">
      <source relative_path="Doc" type="doc">
        <files mask="LICENSE.txt"/>
        <files mask="EAP_SDK_ApplicationNote.pdf"/>
        <files mask="EAP_UserGuide.pdf"/>
      </source>
      <source relative_path="Example_Application_Simulation/APP_INTEGRATION_XTENSA" type="other" device_cores="cm33_MIMXRT595S">
        <files mask="Makefile"/>
        <files mask=".xxproject"/>
      </source>
      <source relative_path="Example_Application_Simulation/APP_INTEGRATION_XTENSA" type="project" device_cores="cm33_MIMXRT595S">
        <files mask=".cproject"/>
        <files mask=".project"/>
      </source>
      <source relative_path="Example_Application_Simulation/APP_INTEGRATION_XTENSA/.settings" type="other" device_cores="cm33_MIMXRT595S">
        <files mask="autolaunch.info"/>
      </source>
      <source relative_path="Example_Application_Simulation/APP_INTEGRATION_XTENSA/.settings/targets/xtensa" type="other" device_cores="cm33_MIMXRT595S">
        <files mask="ReleaseSize.bts"/>
        <files mask="CommonTarget.bts"/>
        <files mask="Debug.bts"/>
        <files mask="Release.bts"/>
      </source>
      <source exclude="true" relative_path="Example_Application_Simulation/APP_INTEGRATION_XTENSA/LIB" type="lib" device_cores="cm33_MIMXRT595S">
        <files mask="libEAP_Lib.a" hidden="true"/>
      </source>
      <source exclude="true" relative_path="Example_Application_Simulation/APP_INTEGRATION_XTENSA/SRC" type="src" device_cores="cm33_MIMXRT595S">
        <files mask="TEST_PARAMS.c" hidden="true"/>
      </source>
    </component>
    <component id="middleware.eap.fusionf1.lib.MIMXRT595S" name="eap_fusionf1_lib" brief="Essential Audio Processing library for RT500" version="2.4.0" full_name="EAP lib for RT500" devices="MIMXRT595S" category="Audio/Essential Audio Processing library" user_visible="false" type="middleware" package_base_path="middleware/EAP" project_base_path="EAP"/>
    <component id="middleware.eap.simulation.MIMXRT595S" name="eap" brief="EAP simulation" version="2.4.0" full_name="EAP simulation" devices="MIMXRT595S" category="Audio/Essential Audio Processing library" user_visible="false" type="middleware" package_base_path="middleware/EAP" project_base_path="EAP">
      <source exclude="true" relative_path="Example_Application_Simulation/W32_Simulation" type="doc">
        <files mask="TAL_args.txt" hidden="true"/>
        <files mask="HowTo.txt" hidden="true"/>
        <files mask="TAL_error.txt" hidden="true"/>
        <files mask="TAL_log.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="Example_Application_Simulation/W32_Simulation" type="other">
        <files mask="EAP_TestParam.exe" hidden="true"/>
        <files mask="EAP_PSA_Output.dat" hidden="true"/>
      </source>
      <source exclude="true" relative_path="Example_Application_Simulation/W32_Simulation/In" type="other">
        <files mask="EAP_demo_48000_1ch.pcm" hidden="true"/>
        <files mask="EAP_demo_48000_2ch.pcm" hidden="true"/>
        <files mask="EAP_demo_48000_2ch_short_autoVolumeLeveler.pcm" hidden="true"/>
        <files mask="EAP_demo_48000_2ch_short_loudnessMaximiser.pcm" hidden="true"/>
        <files mask="EAP_MJackson_44100_2ch.pcm" hidden="true"/>
        <files mask="EAP_demo_48000_2ch_short.pcm" hidden="true"/>
        <files mask="EAP_demo_48000_2ch_short_voiceEnhancer.pcm" hidden="true"/>
        <files mask="EAP_demo_48000_2ch_short_concertSound.pcm" hidden="true"/>
        <files mask="EAP_demo_8000_2ch.pcm" hidden="true"/>
      </source>
      <source exclude="true" relative_path="Example_Application_Simulation/W32_Simulation/In" type="doc">
        <files mask="WhereAreInputFiles.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="Example_Application_Simulation/W32_Simulation/release" type="other">
        <files mask="EAP_Simulator_W32_3_0_0_CS_DBE_EQNB_PREQND_LM_AVL_TE_VC_TG_PSA_LIMP_LIMR.exe" hidden="true"/>
      </source>
      <source exclude="true" relative_path="Example_Application_Simulation/W32_Simulation/release" type="doc">
        <files mask="EAP_Simulator_W32_releaseNote.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="Example_Application_Simulation/W32_Simulation/TalArgsTest" type="doc">
        <files mask="EAP_Parameter_48000_2ch_ConcertSound.txt" hidden="true"/>
        <files mask="EAP_Parameter_48000_2ch_short_Custom.txt" hidden="true"/>
        <files mask="EAP_Parameter_48000_2ch_ToneGenerator.txt" hidden="true"/>
        <files mask="EAP_Parameter_44100_2ch_UpdateOnTheFly.txt" hidden="true"/>
        <files mask="EAP_Parameter_48000_2ch_Demo.txt" hidden="true"/>
        <files mask="EAP_Parameter_48000_2ch_short_AllEffectOff.txt" hidden="true"/>
        <files mask="EAP_Parameter_48000_2ch_Custom.txt" hidden="true"/>
        <files mask="EAP_Parameter_48000_2ch_MusicEnhancer.txt" hidden="true"/>
        <files mask="EAP_Parameter_48000_2ch_short_LoudnessMaximiser.txt" hidden="true"/>
        <files mask="EAP_Parameter_48000_2ch_EQProduct.txt" hidden="true"/>
        <files mask="EAP_Parameter_48000_2ch_AllTestOnRandomBlockSize.txt" hidden="true"/>
        <files mask="EAP_Parameter_48000_2ch_short_AllTestOn.txt" hidden="true"/>
        <files mask="EAP_Parameter_48000_2ch_VoiceEnhancer.txt" hidden="true"/>
        <files mask="EAP_Parameter_48000_2ch_MusicEnhancerRMSLimiter.txt" hidden="true"/>
        <files mask="EAP_Parameter_48000_1ch_Custom.txt" hidden="true"/>
        <files mask="EAP_Parameter_48000_2ch_short_ToneGenerator.txt" hidden="true"/>
        <files mask="EAP_Parameter_48000_2ch_short_MusicEnhancerRMSLimiter.txt" hidden="true"/>
        <files mask="EAP_Parameter_8000_2ch_AllTestOn.txt" hidden="true"/>
        <files mask="EAP_Parameter_48000_2ch_LoudnessMaximiser.txt" hidden="true"/>
        <files mask="EAP_Parameter_48000_2ch_short_VoiceEnhancer.txt" hidden="true"/>
        <files mask="EAP_Parameter_48000_2ch_short_AllTestOnNoCS.txt" hidden="true"/>
        <files mask="EAP_Parameter_48000_2ch_AllTestOn.txt" hidden="true"/>
        <files mask="EAP_Parameter_48000_1ch_AllTestOn.txt" hidden="true"/>
        <files mask="EAP_Parameter_48000_2ch_LoudnessMaximiserPeakLimiterRMSLimiter.txt" hidden="true"/>
        <files mask="EAP_Parameter_48000_2ch_AutoVolumeLeveler.txt" hidden="true"/>
        <files mask="EAP_Parameter_48000_2ch_short_AutoVolumeLeveler.txt" hidden="true"/>
        <files mask="EAP_Parameter_48000_2ch_AllEffectOff.txt" hidden="true"/>
        <files mask="EAP_Parameter_48000_2ch_short_ConcertSound.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="Example_Application_Simulation/W32_Simulation/TalArgsTest" type="script">
        <files mask="RunAllTest.bat" hidden="true"/>
        <files mask="RunTest_Short.bat" hidden="true"/>
        <files mask="RunTest_Long.bat" hidden="true"/>
      </source>
    </component>
    <component id="middleware.eap.template.MIMXRT595S" name="eap_template" brief="eap template" version="2.4.0" full_name="eap template configuration" devices="MIMXRT595S" user_visible="false" type="project_template" package_base_path="./" project_base_path="./">
      <include_paths>
        <include_path relative_path="middleware/EAP/Example_Application_Simulation/APP_INTERGRATION_ARMDS/exApp_EapLib_CM33/COMMON/PlatformTypes" type="c_include" device_cores="cm33_MIMXRT595S"/>
        <include_path relative_path="middleware/EAP/Example_Application_Simulation/APP_INTERGRATION_ARMDS/exApp_EapLib_CM33/INC" type="c_include" device_cores="cm33_MIMXRT595S"/>
        <include_path relative_path="middleware/EAP/Example_Application_Simulation/APP_INTERGRATION_ARMDS/exApp_EapLib_CM33/LIB" type="c_include" device_cores="cm33_MIMXRT595S"/>
      </include_paths>
    </component>
    <component id="middleware.emwin.MIMXRT595S" name="emwin" brief="emWin library" version="6.1" full_name="middleware emWin" devices="MIMXRT595S" category="Graphics/emWin graphics library" user_visible="true" type="middleware" package_base_path="middleware/emwin" project_base_path="emwin">
      <dependencies>
        <component_dependency value="middleware.emwin.template.MIMXRT595S"/>
      </dependencies>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="ChangeLogKSDK.txt" hidden="true"/>
        <files mask="readme.txt" hidden="true"/>
      </source>
      <source relative_path="emWin_header" type="c_include">
        <files mask="AppWizard.h"/>
        <files mask="BUTTON.h"/>
        <files mask="BUTTON_Private.h"/>
        <files mask="CALENDAR.h"/>
        <files mask="CHECKBOX.h"/>
        <files mask="CHECKBOX_Private.h"/>
        <files mask="CHOOSECOLOR.h"/>
        <files mask="CHOOSEFILE.h"/>
        <files mask="DIALOG.h"/>
        <files mask="DIALOG_Type.h"/>
        <files mask="DROPDOWN.h"/>
        <files mask="DROPDOWN_Private.h"/>
        <files mask="EDIT.h"/>
        <files mask="EDIT_Private.h"/>
        <files mask="FRAMEWIN.h"/>
        <files mask="FRAMEWIN_Private.h"/>
        <files mask="GAUGE.h"/>
        <files mask="GAUGE_Private.h"/>
        <files mask="Global.h"/>
        <files mask="GRAPH.h"/>
        <files mask="GRAPH_Private.h"/>
        <files mask="GUI.h"/>
        <files mask="GUI__BiDi2_Brackets_800.h"/>
        <files mask="GUI__BiDi2_Types_800.h"/>
        <files mask="GUI_ARRAY.h"/>
        <files mask="GUI_ARRAY_Private.h"/>
        <files mask="GUI_BMP_Private.h"/>
        <files mask="GUI_ConfDefaults.h"/>
        <files mask="GUI_Debug.h"/>
        <files mask="GUI_FontIntern.h"/>
        <files mask="GUI_GCache_Private.h"/>
        <files mask="GUI_GIF_Private.h"/>
        <files mask="GUI_HOOK.h"/>
        <files mask="GUI_JPEG_Private.h"/>
        <files mask="GUI_Private.h"/>
        <files mask="GUI_SetOrientation.h"/>
        <files mask="GUI_SetOrientationCX.h"/>
        <files mask="GUI_SPRITE_Private.h"/>
        <files mask="GUI_Type.h"/>
        <files mask="GUI_Version.h"/>
        <files mask="GUI_VNC.h"/>
        <files mask="GUIDRV_BitPlains.h"/>
        <files mask="GUIDRV_DCache.h"/>
        <files mask="GUIDRV_DCache_Private.h"/>
        <files mask="GUIDRV_Dist.h"/>
        <files mask="GUIDRV_FlexColor.h"/>
        <files mask="GUIDRV_FlexColor_Private.h"/>
        <files mask="GUIDRV_IST3088.h"/>
        <files mask="GUIDRV_IST3088_Private.h"/>
        <files mask="GUIDRV_Lin.h"/>
        <files mask="GUIDRV_Lin_Opt_16.h"/>
        <files mask="GUIDRV_Lin_Opt_24.h"/>
        <files mask="GUIDRV_Lin_Opt_32.h"/>
        <files mask="GUIDRV_Lin_Opt_8.h"/>
        <files mask="GUIDRV_Lin_Private.h"/>
        <files mask="GUIDRV_NoOpt_1_8.h"/>
        <files mask="GUIDRV_S1D13748.h"/>
        <files mask="GUIDRV_S1D13748_Private.h"/>
        <files mask="GUIDRV_S1D13781.h"/>
        <files mask="GUIDRV_S1D13781_Private.h"/>
        <files mask="GUIDRV_S1D15G00.h"/>
        <files mask="GUIDRV_SLin.h"/>
        <files mask="GUIDRV_SLin_Private.h"/>
        <files mask="GUIDRV_SH_MEM.h"/>
        <files mask="GUIDRV_SH_MEM_Private.h"/>
        <files mask="GUIDRV_SPage.h"/>
        <files mask="GUIDRV_SPage_Private.h"/>
        <files mask="GUIDRV_SSD1926.h"/>
        <files mask="GUIDRV_SSD1926_Private.h"/>
        <files mask="GUIDRV_Template.h"/>
        <files mask="GUIDRV_TemplateI.h"/>
        <files mask="GUIDRV_TemplateI_Private.h"/>
        <files mask="GUITDRV_ADS7846.h"/>
        <files mask="HEADER.h"/>
        <files mask="HEADER_Private.h"/>
        <files mask="ICONVIEW.h"/>
        <files mask="ICONVIEW_Private.h"/>
        <files mask="IMAGE.h"/>
        <files mask="IMAGE_Private.h"/>
        <files mask="IP_FS.h"/>
        <files mask="KEYBOARD.h"/>
        <files mask="KEYBOARD_Private.h"/>
        <files mask="KNOB.h"/>
        <files mask="KNOB_Private.h"/>
        <files mask="LCD.h"/>
        <files mask="LCD_ConfDefaults.h"/>
        <files mask="LCD_Private.h"/>
        <files mask="LCD_Protected.h"/>
        <files mask="LCD_SIM.h"/>
        <files mask="LISTBOX.h"/>
        <files mask="LISTBOX_Private.h"/>
        <files mask="LISTVIEW.h"/>
        <files mask="LISTVIEW_Private.h"/>
        <files mask="LISTWHEEL.h"/>
        <files mask="LISTWHEEL_Private.h"/>
        <files mask="MENU.h"/>
        <files mask="MENU_Private.h"/>
        <files mask="MESSAGEBOX.h"/>
        <files mask="MULTIEDIT.h"/>
        <files mask="MULTIPAGE.h"/>
        <files mask="MULTIPAGE_Private.h"/>
        <files mask="PROGBAR.h"/>
        <files mask="PROGBAR_Private.h"/>
        <files mask="QRCODE.h"/>
        <files mask="QRCODE_Private.h"/>
        <files mask="RADIO.h"/>
        <files mask="RADIO_Private.h"/>
        <files mask="ROTARY.h"/>
        <files mask="ROTARY_Private.h"/>
        <files mask="SCROLLBAR.h"/>
        <files mask="SCROLLBAR_Private.h"/>
        <files mask="SEGGER.h"/>
        <files mask="SLIDER.h"/>
        <files mask="SLIDER_Private.h"/>
        <files mask="SPINBOX.h"/>
        <files mask="SPINBOX_Private.h"/>
        <files mask="SWIPELIST.h"/>
        <files mask="SWIPELIST_Private.h"/>
        <files mask="SWITCH.h"/>
        <files mask="SWITCH_Private.h"/>
        <files mask="TEXT.h"/>
        <files mask="TEXT_Private.h"/>
        <files mask="TREEVIEW.h"/>
        <files mask="TREEVIEW_Private.h"/>
        <files mask="WIDGET.h"/>
        <files mask="WINDOW_Private.h"/>
        <files mask="WM.h"/>
        <files mask="WM_GUI.h"/>
        <files mask="WM_Intern.h"/>
      </source>
      <source relative_path="emWin_Config" type="c_include">
        <files mask="GUIConf.h"/>
        <files mask="LCDConf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="emWin_library/ARMGCC" type="lib" device_cores="cm33_MIMXRT595S">
        <files mask="libemWin_M33.a"/>
      </source>
      <source toolchain="iar" relative_path="emWin_library/IAR" type="lib" device_cores="cm33_MIMXRT595S">
        <files mask="emWin_M33.a"/>
      </source>
      <source toolchain="mdk" relative_path="emWin_library/Keil" type="lib" device_cores="cm33_MIMXRT595S">
        <files mask="emWin_M33.lib"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="emWin_library/MCUXpresso" type="lib" device_cores="cm33_MIMXRT595S">
        <files mask="libemWin_M33.a"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_emwin_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="emWin_header" type="c_include"/>
        <include_path relative_path="emWin_Config" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.emwin.template.MIMXRT595S" name="emwin_template" brief="emwin template" version="1.0.0" full_name="emWin template configuration" devices="MIMXRT595S" user_visible="false" type="project_template" package_base_path="middleware/emwin" project_base_path="emwin">
      <source relative_path="template" type="src">
        <files mask="emwin_support.c"/>
      </source>
      <source relative_path="template" type="c_include">
        <files mask="emwin_support.h"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="emWin_Config" type="c_include"/>
        <include_path relative_path="emWin_header" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.MIMXRT595S" name="fatfs" brief="FatFs" version="0.14" full_name="FAT File System stack" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.template.MIMXRT595S"/>
          <any_of>
            <component_dependency value="middleware.fatfs.ram.MIMXRT595S"/>
            <component_dependency value="middleware.fatfs.nand.MIMXRT595S"/>
            <component_dependency value="middleware.fatfs.usb.MIMXRT595S"/>
            <component_dependency value="middleware.fatfs.mmc.MIMXRT595S"/>
            <component_dependency value="middleware.fatfs.sd.MIMXRT595S"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="diskio.c"/>
        <files mask="ff.c"/>
        <files mask="ffsystem.c"/>
        <files mask="ffunicode.c"/>
      </source>
      <source relative_path="source" type="c_include">
        <files mask="diskio.h"/>
        <files mask="ff.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_fatfs_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.mmc.MIMXRT595S" name="mmc" brief="FatFs_MMC" version="0.14" full_name="Fatfs MMC layer" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.MIMXRT595S"/>
          <component_dependency value="middleware.fatfs.template.MIMXRT595S"/>
          <component_dependency value="middleware.sdmmc.mmc.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_mmc_disk" type="c_include">
        <files mask="fsl_mmc_disk.h"/>
      </source>
      <source relative_path="source/fsl_mmc_disk" type="src">
        <files mask="fsl_mmc_disk.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_fatfs_mmc_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_mmc_disk" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.nand.MIMXRT595S" name="nand" brief="FatFs_NAND" version="0.14" full_name="Fatfs NAND layer" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.MIMXRT595S"/>
          <component_dependency value="middleware.fatfs.template.MIMXRT595S"/>
          <component_dependency value="driver.nand_flash-controller-flexspi.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_nand_disk" type="c_include">
        <files mask="fsl_nand_disk.h"/>
      </source>
      <source relative_path="source/fsl_nand_disk" type="src">
        <files mask="fsl_nand_disk.c"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_nand_disk" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.ram.MIMXRT595S" name="ram" brief="FatFs_RAM" version="0.14" full_name="Fatfs RAM layer" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.MIMXRT595S"/>
          <component_dependency value="middleware.fatfs.template.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_ram_disk" type="c_include">
        <files mask="fsl_ram_disk.h"/>
      </source>
      <source relative_path="source/fsl_ram_disk" type="src">
        <files mask="fsl_ram_disk.c"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_ram_disk" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.sd.MIMXRT595S" name="sd" brief="FatFs_SD" version="0.14" full_name="Fatfs SD layer" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.MIMXRT595S"/>
          <component_dependency value="middleware.fatfs.template.MIMXRT595S"/>
          <component_dependency value="middleware.sdmmc.sd.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_sd_disk" type="c_include">
        <files mask="fsl_sd_disk.h"/>
      </source>
      <source relative_path="source/fsl_sd_disk" type="src">
        <files mask="fsl_sd_disk.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_fatfs_sd_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_sd_disk" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template.MIMXRT595S" name="fatfs" brief="FatFs template" version="0.14" full_name="FatFs template configuration" devices="MIMXRT595S" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <source relative_path="template" project_relative_path="./" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <include_paths>
        <include_path relative_path="template" project_relative_path="./" type="c_include"/>
        <include_path relative_path="source" type="c_include"/>
        <include_path relative_path="source/option" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.unused_files.MIMXRT595S" name="unused_files" brief="fatfs files unused by projects" version="0.14" full_name="fatfs unused" devices="MIMXRT595S" user_visible="false" type="other" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <source exclude="true" relative_path="source" type="c_include">
        <files mask="ffconf_template.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="source" type="doc">
        <files mask="00history.txt" hidden="true"/>
        <files mask="00readme.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="documents" type="doc">
        <files mask="00index_e.html" hidden="true"/>
        <files mask="updates.txt" hidden="true"/>
        <files mask="css_e.css" hidden="true"/>
      </source>
      <source exclude="true" relative_path="documents/doc" type="doc">
        <files mask="closedir.html" hidden="true"/>
        <files mask="setlabel.html" hidden="true"/>
        <files mask="chmod.html" hidden="true"/>
        <files mask="open.html" hidden="true"/>
        <files mask="error.html" hidden="true"/>
        <files mask="utime.html" hidden="true"/>
        <files mask="appnote.html" hidden="true"/>
        <files mask="fdisk.html" hidden="true"/>
        <files mask="write.html" hidden="true"/>
        <files mask="forward.html" hidden="true"/>
        <files mask="tell.html" hidden="true"/>
        <files mask="sync.html" hidden="true"/>
        <files mask="chdrive.html" hidden="true"/>
        <files mask="mkfs.html" hidden="true"/>
        <files mask="sfile.html" hidden="true"/>
        <files mask="mkdir.html" hidden="true"/>
        <files mask="dioctl.html" hidden="true"/>
        <files mask="sfatfs.html" hidden="true"/>
        <files mask="close.html" hidden="true"/>
        <files mask="puts.html" hidden="true"/>
        <files mask="unlink.html" hidden="true"/>
        <files mask="setcp.html" hidden="true"/>
        <files mask="rename.html" hidden="true"/>
        <files mask="chdir.html" hidden="true"/>
        <files mask="mount.html" hidden="true"/>
        <files mask="size.html" hidden="true"/>
        <files mask="fattime.html" hidden="true"/>
        <files mask="readdir.html" hidden="true"/>
        <files mask="read.html" hidden="true"/>
        <files mask="getcwd.html" hidden="true"/>
        <files mask="config.html" hidden="true"/>
        <files mask="truncate.html" hidden="true"/>
        <files mask="findnext.html" hidden="true"/>
        <files mask="lseek.html" hidden="true"/>
        <files mask="dwrite.html" hidden="true"/>
        <files mask="filename.html" hidden="true"/>
        <files mask="getfree.html" hidden="true"/>
        <files mask="rc.html" hidden="true"/>
        <files mask="dinit.html" hidden="true"/>
        <files mask="gets.html" hidden="true"/>
        <files mask="getlabel.html" hidden="true"/>
        <files mask="printf.html" hidden="true"/>
        <files mask="dread.html" hidden="true"/>
        <files mask="putc.html" hidden="true"/>
        <files mask="sdir.html" hidden="true"/>
        <files mask="findfirst.html" hidden="true"/>
        <files mask="opendir.html" hidden="true"/>
        <files mask="stat.html" hidden="true"/>
        <files mask="eof.html" hidden="true"/>
        <files mask="expand.html" hidden="true"/>
        <files mask="dstat.html" hidden="true"/>
        <files mask="sfileinfo.html" hidden="true"/>
      </source>
      <source exclude="true" relative_path="documents/res" type="archive">
        <files mask="mkfatimg.zip" hidden="true"/>
      </source>
      <source exclude="true" relative_path="documents/res" type="image">
        <files mask="f4.png" hidden="true"/>
        <files mask="f7.png" hidden="true"/>
        <files mask="layers2.png" hidden="true"/>
        <files mask="rwtest2.png" hidden="true"/>
        <files mask="f1.png" hidden="true"/>
        <files mask="layers3.png" hidden="true"/>
        <files mask="layers1.png" hidden="true"/>
        <files mask="layers.png" hidden="true"/>
        <files mask="f3.png" hidden="true"/>
        <files mask="f5.png" hidden="true"/>
        <files mask="rwtest1.png" hidden="true"/>
        <files mask="funcs.png" hidden="true"/>
        <files mask="f2.png" hidden="true"/>
        <files mask="f6.png" hidden="true"/>
        <files mask="rwtest3.png" hidden="true"/>
        <files mask="modules.png" hidden="true"/>
      </source>
      <source exclude="true" relative_path="documents/res" type="other">
        <files mask="mkfs.xlsx" hidden="true"/>
      </source>
      <source exclude="true" relative_path="documents/res" type="src">
        <files mask="app6.c" hidden="true"/>
        <files mask="app5.c" hidden="true"/>
        <files mask="app2.c" hidden="true"/>
        <files mask="app4.c" hidden="true"/>
        <files mask="app3.c" hidden="true"/>
        <files mask="app1.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="LICENSE.txt" hidden="true"/>
        <files mask="ChangeLogKSDK.txt" hidden="true"/>
      </source>
    </component>
    <component id="middleware.fatfs.usb.MIMXRT595S" name="usb" brief="FatFs_USB" version="0.14" full_name="Fatfs USB layer" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.MIMXRT595S"/>
          <component_dependency value="middleware.fatfs.template.MIMXRT595S"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT595S"/>
          <component_dependency value="middleware.usb.host_msd.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_usb_disk" type="c_include">
        <files mask="fsl_usb_disk.h"/>
      </source>
      <source condition="middleware.baremetal.MIMXRT595S" relative_path="source/fsl_usb_disk" type="src">
        <files mask="fsl_usb_disk_bm.c"/>
      </source>
      <source condition="middleware.freertos-kernel.MIMXRT595S" relative_path="source/fsl_usb_disk" type="src">
        <files mask="fsl_usb_disk_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_fatfs_usb_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_usb_disk" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.c_sdk.standard.serializer.MIMXRT595S" name="AWS IoT C SDK serializer" brief="AWS IoT C SDK serializer" version="202007.00.0" full_name="AWS IoT C SDK serializer" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-aws_iot.template.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.common.MIMXRT595S"/>
          <component_dependency value="middleware.mbedtls.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="libraries/c_sdk/standard/serializer/include" type="c_include">
        <files mask="iot_json_utils.h"/>
        <files mask="iot_serializer.h"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/serializer/src" type="src">
        <files mask="iot_json_utils.c"/>
        <files mask="iot_serializer_static_memory.c"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/serializer/src/json" type="src">
        <files mask="iot_serializer_json_decoder.c"/>
        <files mask="iot_serializer_json_encoder.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_freertos-aws_iot_c_sdk_standard_serializer_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/c_sdk/standard/serializer/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.c_sdk.standard.shadow.MIMXRT595S" name="AWS IoT C SDK shadow" brief="AWS IoT C SDK shadow" version="202007.00.0" full_name="AWS IoT C SDK shadow" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.template.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.common.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.mqtt.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.abstractions.platform.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.c_sdk.standard.serializer.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="libraries/c_sdk/aws/shadow/include" type="c_include">
        <files mask="aws_iot_shadow.h"/>
        <files mask="aws_shadow.h"/>
      </source>
      <source relative_path="libraries/c_sdk/aws/shadow/include/types" type="c_include">
        <files mask="aws_iot_shadow_types.h"/>
      </source>
      <source relative_path="libraries/c_sdk/aws/shadow/src" type="src">
        <files mask="aws_iot_shadow_api.c"/>
        <files mask="aws_iot_shadow_operation.c"/>
        <files mask="aws_iot_shadow_parser.c"/>
        <files mask="aws_iot_shadow_static_memory.c"/>
        <files mask="aws_iot_shadow_subscription.c"/>
        <files mask="aws_shadow.c"/>
      </source>
      <source relative_path="libraries/c_sdk/aws/shadow/src" type="c_include">
        <files mask="aws_shadow_config_defaults.h"/>
      </source>
      <source relative_path="libraries/c_sdk/aws/shadow/src/private" type="c_include">
        <files mask="aws_iot_shadow_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_freertos-aws_iot_c_sdk_standard_shadow_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/c_sdk/aws/shadow/include" type="c_include"/>
        <include_path relative_path="libraries/c_sdk/aws/shadow/include/types" type="c_include"/>
        <include_path relative_path="libraries/c_sdk/aws/shadow/src" type="c_include"/>
        <include_path relative_path="libraries/c_sdk/aws/shadow/src/private" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.common.MIMXRT595S" name="AWS IoT common" brief="AWS IoT common" version="202007.00.0" full_name="AWS IoT common" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.abstractions.platform.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="libraries/c_sdk/standard/common/include" type="c_include">
        <files mask="iot_linear_containers.h"/>
        <files mask="iot_appversion32.h"/>
        <files mask="iot_atomic.h"/>
        <files mask="iot_init.h"/>
        <files mask="iot_logging_setup.h"/>
        <files mask="iot_logging_task.h"/>
        <files mask="iot_taskpool.h"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/common/include/private" type="c_include">
        <files mask="iot_default_root_certificates.h"/>
        <files mask="iot_doubly_linked_list.h"/>
        <files mask="iot_error.h"/>
        <files mask="iot_lib_init.h"/>
        <files mask="iot_logging.h"/>
        <files mask="iot_static_memory.h"/>
        <files mask="iot_taskpool_internal.h"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/common/include/types" type="c_include">
        <files mask="iot_network_types.h"/>
        <files mask="iot_taskpool_types.h"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/common" type="src">
        <files mask="iot_device_metrics.c"/>
        <files mask="iot_init.c"/>
        <files mask="iot_static_memory_common.c"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/common/logging" type="src">
        <files mask="iot_logging.c"/>
        <files mask="iot_logging_task_dynamic_buffers.c"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/common/taskpool" type="src">
        <files mask="iot_taskpool.c"/>
        <files mask="iot_taskpool_static_memory.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_freertos-aws_iot_common_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/c_sdk/standard/common/include" type="c_include"/>
        <include_path relative_path="libraries/c_sdk/standard/common/include/private" type="c_include"/>
        <include_path relative_path="libraries/c_sdk/standard/common/include/types" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.demos.MIMXRT595S" name="AWS IoT demos" brief="AWS IoT demos" version="202007.00.0" full_name="AWS IoT demos" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.network_manager.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.abstractions.platform.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.common.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.mqtt.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="demos/demo_runner" type="src">
        <files mask="aws_demo.c"/>
        <files mask="iot_demo_freertos.c"/>
      </source>
      <source relative_path="demos/include" type="c_include">
        <files mask="aws_clientcredential.h"/>
        <files mask="aws_clientcredential_keys.h"/>
        <files mask="aws_demo.h"/>
        <files mask="aws_iot_demo_network.h"/>
        <files mask="aws_ota_codesigner_certificate.h"/>
        <files mask="iot_config_common.h"/>
        <files mask="iot_demo_logging.h"/>
        <files mask="iot_demo_runner.h"/>
      </source>
      <source relative_path="demos/network_manager" type="src">
        <files mask="aws_iot_demo_network.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_freertos-aws_iot_demos_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="demos/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.demos.dev_mode_key_provisioning.MIMXRT595S" name="AWS IoT demo key provisioning (dev mode)" brief="AWS IoT demo key provisioning (dev mode)" version="202007.00.0" full_name="AWS IoT demo key provisioning (dev mode)" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-aws_iot.common.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.freertos_plus.standard.pkcs11.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.freertos_plus.standard.utils.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.template.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
          <component_dependency value="middleware.mbedtls.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="demos/dev_mode_key_provisioning/include" type="c_include">
        <files mask="aws_dev_mode_key_provisioning.h"/>
      </source>
      <source relative_path="demos/dev_mode_key_provisioning/src" type="src">
        <files mask="aws_dev_mode_key_provisioning.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_freertos-aws_iot_demos_dev_mode_key_provisioning_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="demos/dev_mode_key_provisioning/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.demos_greengrass_discovery.MIMXRT595S" name="AWS IoT demo greengrass discovery" brief="AWS IoT demo greengrass discovery" version="202007.00.0" full_name="AWS IoT demo greengrass discovery" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-aws_iot.demos.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.abstractions.platform.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.freertos_plus.aws.greengrass.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.mqtt.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="demos/greengrass_connectivity" type="src">
        <files mask="aws_greengrass_discovery_demo.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_freertos-aws_iot_demos_greengrass_discovery_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.demos_ota.MIMXRT595S" name="FreeRTOS OTA demos" brief="FreeRTOS OTA demos" version="202007.00.0" full_name="AWS IOT OTA demos" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-aws_iot.common.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.demos.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.abstractions.platform.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.freertos_plus.aws.ota.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.mqtt.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.template.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="demos/include" type="c_include">
        <files mask="aws_application_version.h"/>
      </source>
      <source relative_path="demos/ota" type="src">
        <files mask="aws_iot_ota_update_demo.c"/>
      </source>
      <include_paths>
        <include_path relative_path="demos/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.demos_shadow.MIMXRT595S" name="AWS IoT demo shadow" brief="AWS IoT demo shadow" version="202007.00.0" full_name="AWS IoT demo shadow" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-aws_iot.c_sdk.standard.shadow.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.c_sdk.standard.serializer.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.demos.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.abstractions.platform.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.mqtt.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.template.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="demos/shadow" type="src">
        <files mask="aws_iot_demo_shadow.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_freertos-aws_iot_demos_shadow_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.demos_unused.MIMXRT595S" name="AWS IoT demos unused" brief="AWS IoT demos unused" version="202007.00.0" full_name="AWS IoT demos unused" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="demos/ble" type="src">
        <files mask="aws_ble_gatt_server_demo.c"/>
        <files mask="iot_ble_numericComparison.c"/>
      </source>
      <source relative_path="demos/ble" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="demos/ble" type="other">
        <files mask="README.md"/>
      </source>
      <source relative_path="demos" type="doc">
        <files mask="CMakeLists.txt"/>
        <files mask="directories.txt"/>
      </source>
      <source relative_path="demos/defender" type="src">
        <files mask="aws_iot_demo_defender.c"/>
      </source>
      <source relative_path="demos/defender" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="demos/demo_runner" type="src">
        <files mask="aws_demo_network_addr.c"/>
        <files mask="aws_demo_version.c"/>
        <files mask="iot_demo_runner.c"/>
      </source>
      <source relative_path="demos/dev_mode_key_provisioning" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="demos/dev_mode_key_provisioning" type="other">
        <files mask="README.md"/>
      </source>
      <source relative_path="demos/greengrass_connectivity" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="demos/greengrass_connectivity" type="other">
        <files mask="README.md"/>
      </source>
      <source relative_path="demos/include" type="c_include">
        <files mask="aws_ble_gatt_server_demo.h"/>
      </source>
      <source relative_path="demos/mqtt" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="demos/mqtt" type="src">
        <files mask="iot_demo_mqtt.c"/>
      </source>
      <source relative_path="demos/ota" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="demos/posix" type="src">
        <files mask="aws_posix_demo.c"/>
      </source>
      <source relative_path="demos/posix" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="demos" type="other">
        <files mask="README.md"/>
      </source>
      <source relative_path="demos/shadow" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="demos/tcp" type="src">
        <files mask="aws_tcp_echo_client_single_task.c"/>
      </source>
      <source relative_path="demos/tcp" type="c_include">
        <files mask="aws_tcp_echo_client_single_tasks.h"/>
      </source>
      <source relative_path="demos/tcp" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="demos/wifi_provisioning" type="src">
        <files mask="aws_wifi_connect_task.c"/>
      </source>
      <source relative_path="demos/wifi_provisioning" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="demos/wifi_provisioning" type="other">
        <files mask="README.md"/>
      </source>
      <source relative_path="demos/https" type="src">
        <files mask="iot_demo_https_common.c"/>
        <files mask="iot_demo_https_s3_download_async.c"/>
        <files mask="iot_demo_https_s3_download_sync.c"/>
        <files mask="iot_demo_https_s3_upload_async.c"/>
        <files mask="iot_demo_https_s3_upload_sync.c"/>
      </source>
      <source relative_path="demos/https" type="c_include">
        <files mask="iot_demo_https_common.h"/>
      </source>
      <source relative_path="demos/https" type="script">
        <files mask="presigned_urls_gen.py"/>
      </source>
      <source relative_path="demos/https" type="other">
        <files mask="README.md"/>
      </source>
      <source relative_path="demos/https" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <include_paths>
        <include_path relative_path="demos/include" type="c_include"/>
        <include_path relative_path="demos/tcp" type="c_include"/>
        <include_path relative_path="demos/https" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.3rdparty.cmock.MIMXRT595S" name="AWS IoT 3rd party C mocking library" brief="AWS IoT 3rd party C mocking library" version="202007.00.0" full_name="AWS IoT 3rd party C mocking library" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/3rdparty/CMock" type="other">
        <files mask=".travis.yml"/>
        <files mask="Gemfile"/>
        <files mask="meson.build"/>
        <files mask="README.md"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/config" type="other">
        <files mask="production_environment.rb"/>
        <files mask="test_environment.rb"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/docs" type="other">
        <files mask="CMock_Summary.md"/>
        <files mask="ThrowTheSwitchCodingStandard.md"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/examples/make_example" type="other">
        <files mask="Makefile"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/examples/make_example/src" type="src">
        <files mask="foo.c"/>
        <files mask="main.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/examples/make_example/src" type="c_include">
        <files mask="foo.h"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/examples/make_example/test" type="src">
        <files mask="test_foo.c"/>
        <files mask="test_main.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/examples/temp_sensor" type="other">
        <files mask="gcc.yml"/>
        <files mask="iar_v4.yml"/>
        <files mask="iar_v5.yml"/>
        <files mask="rakefile.rb"/>
        <files mask="rakefile_helper.rb"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/examples/temp_sensor/src" type="src">
        <files mask="AdcConductor.c"/>
        <files mask="AdcHardware.c"/>
        <files mask="AdcHardwareConfigurator.c"/>
        <files mask="AdcModel.c"/>
        <files mask="AdcTemperatureSensor.c"/>
        <files mask="Executor.c"/>
        <files mask="IntrinsicsWrapper.c"/>
        <files mask="Main.c"/>
        <files mask="Model.c"/>
        <files mask="TaskScheduler.c"/>
        <files mask="TemperatureCalculator.c"/>
        <files mask="TemperatureFilter.c"/>
        <files mask="TimerConductor.c"/>
        <files mask="TimerConfigurator.c"/>
        <files mask="TimerHardware.c"/>
        <files mask="TimerInterruptConfigurator.c"/>
        <files mask="TimerInterruptHandler.c"/>
        <files mask="TimerModel.c"/>
        <files mask="UsartBaudRateRegisterCalculator.c"/>
        <files mask="UsartConductor.c"/>
        <files mask="UsartConfigurator.c"/>
        <files mask="UsartHardware.c"/>
        <files mask="UsartModel.c"/>
        <files mask="UsartPutChar.c"/>
        <files mask="UsartTransmitBufferStatus.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/examples/temp_sensor/src" type="c_include">
        <files mask="AdcConductor.h"/>
        <files mask="AdcHardware.h"/>
        <files mask="AdcHardwareConfigurator.h"/>
        <files mask="AdcModel.h"/>
        <files mask="AdcTemperatureSensor.h"/>
        <files mask="AT91SAM7X256.h"/>
        <files mask="Executor.h"/>
        <files mask="IntrinsicsWrapper.h"/>
        <files mask="Main.h"/>
        <files mask="Model.h"/>
        <files mask="ModelConfig.h"/>
        <files mask="TaskScheduler.h"/>
        <files mask="TemperatureCalculator.h"/>
        <files mask="TemperatureFilter.h"/>
        <files mask="TimerConductor.h"/>
        <files mask="TimerConfigurator.h"/>
        <files mask="TimerHardware.h"/>
        <files mask="TimerInterruptConfigurator.h"/>
        <files mask="TimerInterruptHandler.h"/>
        <files mask="TimerModel.h"/>
        <files mask="Types.h"/>
        <files mask="UsartBaudRateRegisterCalculator.h"/>
        <files mask="UsartConductor.h"/>
        <files mask="UsartConfigurator.h"/>
        <files mask="UsartHardware.h"/>
        <files mask="UsartModel.h"/>
        <files mask="UsartPutChar.h"/>
        <files mask="UsartTransmitBufferStatus.h"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/examples/temp_sensor/test" type="src">
        <files mask="TestAdcConductor.c"/>
        <files mask="TestAdcHardware.c"/>
        <files mask="TestAdcHardwareConfigurator.c"/>
        <files mask="TestAdcModel.c"/>
        <files mask="TestAdcTemperatureSensor.c"/>
        <files mask="TestExecutor.c"/>
        <files mask="TestMain.c"/>
        <files mask="TestModel.c"/>
        <files mask="TestTaskScheduler.c"/>
        <files mask="TestTemperatureCalculator.c"/>
        <files mask="TestTemperatureFilter.c"/>
        <files mask="TestTimerConductor.c"/>
        <files mask="TestTimerConfigurator.c"/>
        <files mask="TestTimerHardware.c"/>
        <files mask="TestTimerInterruptConfigurator.c"/>
        <files mask="TestTimerInterruptHandler.c"/>
        <files mask="TestTimerModel.c"/>
        <files mask="TestUsartBaudRateRegisterCalculator.c"/>
        <files mask="TestUsartConductor.c"/>
        <files mask="TestUsartConfigurator.c"/>
        <files mask="TestUsartHardware.c"/>
        <files mask="TestUsartModel.c"/>
        <files mask="TestUsartPutChar.c"/>
        <files mask="TestUsartTransmitBufferStatus.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/lib" type="other">
        <files mask="cmock.rb"/>
        <files mask="cmock_config.rb"/>
        <files mask="cmock_file_writer.rb"/>
        <files mask="cmock_generator.rb"/>
        <files mask="cmock_generator_plugin_array.rb"/>
        <files mask="cmock_generator_plugin_callback.rb"/>
        <files mask="cmock_generator_plugin_cexception.rb"/>
        <files mask="cmock_generator_plugin_expect.rb"/>
        <files mask="cmock_generator_plugin_expect_any_args.rb"/>
        <files mask="cmock_generator_plugin_ignore.rb"/>
        <files mask="cmock_generator_plugin_ignore_arg.rb"/>
        <files mask="cmock_generator_plugin_return_thru_ptr.rb"/>
        <files mask="cmock_generator_utils.rb"/>
        <files mask="cmock_header_parser.rb"/>
        <files mask="cmock_plugin_manager.rb"/>
        <files mask="cmock_unityhelper_parser.rb"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock" type="doc">
        <files mask="LICENSE.txt"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/scripts" type="other">
        <files mask="create_makefile.rb"/>
        <files mask="create_mock.rb"/>
        <files mask="create_runner.rb"/>
        <files mask="test_summary.rb"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/src" type="src">
        <files mask="cmock.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/src" type="c_include">
        <files mask="cmock.h"/>
        <files mask="cmock_internals.h"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/src" type="other">
        <files mask="meson.build"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/c" type="src">
        <files mask="TestCMockC.c"/>
        <files mask="TestCMockC_Runner.c"/>
        <files mask="TestCMockCDynamic.c"/>
        <files mask="TestCMockCDynamic_Runner.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/c" type="other">
        <files mask="TestCMockC.yml"/>
        <files mask="TestCMockCDynamic.yml"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/iar/iar_v4" type="other">
        <files mask="cmock_demo.dep"/>
        <files mask="cmock_demo.eww"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/iar/iar_v4" type="debug">
        <files mask="cmock_demo.ewd"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/iar/iar_v4" type="project">
        <files mask="cmock_demo.ewp"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/iar/iar_v4/incIAR" type="c_include">
        <files mask="AT91SAM7X-EK.h"/>
        <files mask="AT91SAM7X256_inc.h"/>
        <files mask="ioat91sam7x256.h"/>
        <files mask="lib_AT91SAM7X256.h"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/iar/iar_v4/incIAR" type="asm_include">
        <files mask="AT91SAM7X256.inc"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/iar/iar_v4/incIAR" type="other">
        <files mask="AT91SAM7X256.rdf"/>
        <files mask="AT91SAM7X256.tcl"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/iar/iar_v4/Resource" type="other">
        <files mask="at91SAM7X256_FLASH.xcl"/>
        <files mask="at91SAM7X256_RAM.xcl"/>
        <files mask="ioat91sam7x256.ddf"/>
        <files mask="SAM7_FLASH.mac"/>
        <files mask="SAM7_RAM.mac"/>
        <files mask="SAM7_SIM.mac"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/iar/iar_v4/settings" type="script">
        <files mask="cmock_demo.cspy.bat"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/iar/iar_v4/settings" type="other">
        <files mask="cmock_demo.dbgdt"/>
        <files mask="cmock_demo.wsdt"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/iar/iar_v4/settings" type="configuration">
        <files mask="cmock_demo.dni"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/iar/iar_v4/srcIAR" type="other">
        <files mask="Cstartup.s79"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/iar/iar_v4/srcIAR" type="src">
        <files mask="Cstartup_SAM7.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/iar/iar_v5" type="other">
        <files mask="cmock_demo.dep"/>
        <files mask="cmock_demo.eww"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/iar/iar_v5" type="debug">
        <files mask="cmock_demo.ewd"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/iar/iar_v5" type="project">
        <files mask="cmock_demo.ewp"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/iar/iar_v5/incIAR" type="c_include">
        <files mask="AT91SAM7X-EK.h"/>
        <files mask="AT91SAM7X256_inc.h"/>
        <files mask="lib_AT91SAM7X256.h"/>
        <files mask="project.h"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/iar/iar_v5/Resource" type="linker">
        <files mask="at91SAM7X256_FLASH.icf"/>
        <files mask="at91SAM7X256_RAM.icf"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/iar/iar_v5/Resource" type="other">
        <files mask="SAM7_FLASH.mac"/>
        <files mask="SAM7_RAM.mac"/>
        <files mask="SAM7_SIM.mac"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/iar/iar_v5/settings" type="script">
        <files mask="BasicInterrupt_SAM7X.cspy.bat"/>
        <files mask="cmock_demo.cspy.bat"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/iar/iar_v5/settings" type="other">
        <files mask="BasicInterrupt_SAM7X.dbgdt"/>
        <files mask="BasicInterrupt_SAM7X.wsdt"/>
        <files mask="BasicInterrupt_SAM7X_FLASH_Debug.jlink"/>
        <files mask="cmock_demo.dbgdt"/>
        <files mask="cmock_demo.wsdt"/>
        <files mask="cmock_demo_Binary.jlink"/>
        <files mask="cmock_demo_FLASH_Debug.jlink"/>
        <files mask="cmock_demo_RAM_Debug.jlink"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/iar/iar_v5/settings" type="configuration">
        <files mask="BasicInterrupt_SAM7X.dni"/>
        <files mask="cmock_demo.dni"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/iar/iar_v5/srcIAR" type="asm_include">
        <files mask="Cstartup.s"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/iar/iar_v5/srcIAR" type="src">
        <files mask="Cstartup_SAM7.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test" type="other">
        <files mask="rakefile"/>
        <files mask="rakefile_helper.rb"/>
        <files mask="test_helper.rb"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/system" type="other">
        <files mask="systest_generator.rb"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/system/test_compilation" type="c_include">
        <files mask="callingconv.h"/>
        <files mask="const.h"/>
        <files mask="inline.h"/>
        <files mask="osek.h"/>
        <files mask="parsing.h"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/system/test_compilation" type="other">
        <files mask="config.yml"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/system/test_interactions" type="other">
        <files mask="all_plugins_but_other_limits.yml"/>
        <files mask="all_plugins_coexist.yml"/>
        <files mask="array_and_pointer_handling.yml"/>
        <files mask="basic_expect_and_return.yml"/>
        <files mask="const_primitives_handling.yml"/>
        <files mask="doesnt_leave_details_behind.yml"/>
        <files mask="enforce_strict_ordering.yml"/>
        <files mask="expect_and_return_custom_types.yml"/>
        <files mask="expect_and_return_treat_as.yml"/>
        <files mask="expect_and_throw.yml"/>
        <files mask="expect_any_args.yml"/>
        <files mask="fancy_pointer_handling.yml"/>
        <files mask="function_pointer_handling.yml"/>
        <files mask="ignore_and_return.yml"/>
        <files mask="ignore_strict_mock_calling.yml"/>
        <files mask="newer_standards_stuff1.yml"/>
        <files mask="nonstandard_parsed_stuff_1.yml"/>
        <files mask="nonstandard_parsed_stuff_2.yml"/>
        <files mask="out_of_memory.yml"/>
        <files mask="parsing_challenges.yml"/>
        <files mask="return_thru_ptr_and_expect_any_args.yml"/>
        <files mask="return_thru_ptr_ignore_arg.yml"/>
        <files mask="struct_union_enum_expect_and_return.yml"/>
        <files mask="struct_union_enum_expect_and_return_with_plugins.yml"/>
        <files mask="stubs_with_callbacks.yml"/>
        <files mask="unity_64bit_support.yml"/>
        <files mask="unity_ignores.yml"/>
        <files mask="unity_void_pointer_compare.yml"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/targets" type="other">
        <files mask="clang_strict.yml"/>
        <files mask="gcc.yml"/>
        <files mask="gcc_64.yml"/>
        <files mask="gcc_tiny.yml"/>
        <files mask="iar_arm_v4.yml"/>
        <files mask="iar_arm_v5.yml"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/unit" type="other">
        <files mask="cmock_config_test.rb"/>
        <files mask="cmock_config_test.yml"/>
        <files mask="cmock_file_writer_test.rb"/>
        <files mask="cmock_generator_main_test.rb"/>
        <files mask="cmock_generator_plugin_array_test.rb"/>
        <files mask="cmock_generator_plugin_callback_test.rb"/>
        <files mask="cmock_generator_plugin_cexception_test.rb"/>
        <files mask="cmock_generator_plugin_expect_a_test.rb"/>
        <files mask="cmock_generator_plugin_expect_any_args_test.rb"/>
        <files mask="cmock_generator_plugin_expect_b_test.rb"/>
        <files mask="cmock_generator_plugin_ignore_arg_test.rb"/>
        <files mask="cmock_generator_plugin_ignore_test.rb"/>
        <files mask="cmock_generator_plugin_return_thru_ptr_test.rb"/>
        <files mask="cmock_generator_utils_test.rb"/>
        <files mask="cmock_header_parser_test.rb"/>
        <files mask="cmock_plugin_manager_test.rb"/>
        <files mask="cmock_unityhelper_parser_test.rb"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/behaviors/lib" type="other">
        <files mask="behaviors.rb"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/behaviors/lib/behaviors" type="other">
        <files mask="reporttask.rb"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/behaviors" type="doc">
        <files mask="Manifest.txt"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/behaviors" type="other">
        <files mask="Rakefile"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/behaviors/test" type="other">
        <files mask="behaviors_tasks_test.rb"/>
        <files mask="behaviors_test.rb"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/behaviors/test/tasks_test/lib" type="other">
        <files mask="user.rb"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/behaviors/test/tasks_test" type="other">
        <files mask="Rakefile"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/behaviors/test/tasks_test/test" type="other">
        <files mask="user_test.rb"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/c_exception" type="other">
        <files mask=".travis.yml"/>
        <files mask="Gemfile"/>
        <files mask="Gemfile.lock"/>
        <files mask="project.yml"/>
        <files mask="README.md"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/c_exception/docs" type="other">
        <files mask="CException.md"/>
        <files mask="ThrowTheSwitchCodingStandard.md"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/c_exception/lib" type="src">
        <files mask="CException.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/c_exception/lib" type="c_include">
        <files mask="CException.h"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/c_exception" type="doc">
        <files mask="LICENSE.txt"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/c_exception/test/support" type="c_include">
        <files mask="CExceptionConfig.h"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/c_exception/test" type="src">
        <files mask="TestException.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity" type="other">
        <files mask=".editorconfig"/>
        <files mask=".travis.yml"/>
        <files mask="meson.build"/>
        <files mask="README.md"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/auto" type="other">
        <files mask="colour_prompt.rb"/>
        <files mask="colour_reporter.rb"/>
        <files mask="generate_config.yml"/>
        <files mask="generate_module.rb"/>
        <files mask="generate_test_runner.rb"/>
        <files mask="parse_output.rb"/>
        <files mask="run_test.erb"/>
        <files mask="stylize_as_junit.rb"/>
        <files mask="test_file_filter.rb"/>
        <files mask="type_sanitizer.rb"/>
        <files mask="unity_test_summary.rb"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/auto" type="script">
        <files mask="unity_test_summary.py"/>
        <files mask="unity_to_junit.py"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity" type="doc">
        <files mask="CMakeLists.txt"/>
        <files mask="LICENSE.txt"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/docs" type="other">
        <files mask="ThrowTheSwitchCodingStandard.md"/>
        <files mask="UnityAssertionsReference.md"/>
        <files mask="UnityConfigurationGuide.md"/>
        <files mask="UnityGettingStartedGuide.md"/>
        <files mask="UnityHelperScriptsGuide.md"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/docs" type="doc">
        <files mask="UnityAssertionsCheatSheetSuitableforPrintingandPossiblyFraming.pdf"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_1" type="other">
        <files mask="makefile"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_1" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_1/src" type="src">
        <files mask="ProductionCode.c"/>
        <files mask="ProductionCode2.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_1/src" type="c_include">
        <files mask="ProductionCode.h"/>
        <files mask="ProductionCode2.h"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_1/test/test_runners" type="src">
        <files mask="TestProductionCode2_Runner.c"/>
        <files mask="TestProductionCode_Runner.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_1/test" type="src">
        <files mask="TestProductionCode.c"/>
        <files mask="TestProductionCode2.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_2" type="other">
        <files mask="makefile"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_2" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_2/src" type="src">
        <files mask="ProductionCode.c"/>
        <files mask="ProductionCode2.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_2/src" type="c_include">
        <files mask="ProductionCode.h"/>
        <files mask="ProductionCode2.h"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_2/test/test_runners" type="src">
        <files mask="all_tests.c"/>
        <files mask="TestProductionCode2_Runner.c"/>
        <files mask="TestProductionCode_Runner.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_2/test" type="src">
        <files mask="TestProductionCode.c"/>
        <files mask="TestProductionCode2.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_3/helper" type="src">
        <files mask="UnityHelper.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_3/helper" type="c_include">
        <files mask="UnityHelper.h"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_3" type="other">
        <files mask="rakefile.rb"/>
        <files mask="rakefile_helper.rb"/>
        <files mask="target_gcc_32.yml"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_3" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_3/src" type="src">
        <files mask="ProductionCode.c"/>
        <files mask="ProductionCode2.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_3/src" type="c_include">
        <files mask="ProductionCode.h"/>
        <files mask="ProductionCode2.h"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_3/test" type="src">
        <files mask="TestProductionCode.c"/>
        <files mask="TestProductionCode2.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_4" type="other">
        <files mask="meson.build"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_4" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_4/src" type="other">
        <files mask="meson.build"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_4/src" type="src">
        <files mask="ProductionCode.c"/>
        <files mask="ProductionCode2.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_4/src" type="c_include">
        <files mask="ProductionCode.h"/>
        <files mask="ProductionCode2.h"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_4/subprojects" type="other">
        <files mask="unity.wrap"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_4/test" type="other">
        <files mask="meson.build"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_4/test/test_runners" type="other">
        <files mask="meson.build"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_4/test/test_runners" type="src">
        <files mask="TestProductionCode2_Runner.c"/>
        <files mask="TestProductionCode_Runner.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_4/test" type="src">
        <files mask="TestProductionCode.c"/>
        <files mask="TestProductionCode2.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples" type="c_include">
        <files mask="unity_config.h"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/extras/eclipse" type="doc">
        <files mask="error_parsers.txt"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/extras/fixture" type="other">
        <files mask="rakefile.rb"/>
        <files mask="rakefile_helper.rb"/>
        <files mask="readme.md"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/extras/fixture/src" type="src">
        <files mask="unity_fixture.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/extras/fixture/src" type="c_include">
        <files mask="unity_fixture.h"/>
        <files mask="unity_fixture_internals.h"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/extras/fixture/test/main" type="src">
        <files mask="AllTests.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/extras/fixture/test" type="other">
        <files mask="Makefile"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/extras/fixture/test" type="src">
        <files mask="template_fixture_tests.c"/>
        <files mask="unity_fixture_Test.c"/>
        <files mask="unity_fixture_TestRunner.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/extras/memory" type="other">
        <files mask="rakefile.rb"/>
        <files mask="rakefile_helper.rb"/>
        <files mask="readme.md"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/extras/memory/src" type="src">
        <files mask="unity_memory.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/extras/memory/src" type="c_include">
        <files mask="unity_memory.h"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/extras/memory/test" type="other">
        <files mask="Makefile"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/extras/memory/test" type="src">
        <files mask="unity_memory_Test.c"/>
        <files mask="unity_memory_TestRunner.c"/>
        <files mask="unity_output_Spy.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/extras/memory/test" type="c_include">
        <files mask="unity_output_Spy.h"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/src" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/src" type="other">
        <files mask="meson.build"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/src" type="src">
        <files mask="unity.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/src" type="c_include">
        <files mask="unity.h"/>
        <files mask="unity_internals.h"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/test" type="other">
        <files mask=".rubocop.yml"/>
        <files mask="Makefile"/>
        <files mask="rakefile"/>
        <files mask="rakefile_helper.rb"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/test/expectdata" type="src">
        <files mask="testsample_cmd.c"/>
        <files mask="testsample_def.c"/>
        <files mask="testsample_head1.c"/>
        <files mask="testsample_mock_cmd.c"/>
        <files mask="testsample_mock_def.c"/>
        <files mask="testsample_mock_head1.c"/>
        <files mask="testsample_mock_new1.c"/>
        <files mask="testsample_mock_new2.c"/>
        <files mask="testsample_mock_param.c"/>
        <files mask="testsample_mock_run1.c"/>
        <files mask="testsample_mock_run2.c"/>
        <files mask="testsample_mock_yaml.c"/>
        <files mask="testsample_new1.c"/>
        <files mask="testsample_new2.c"/>
        <files mask="testsample_param.c"/>
        <files mask="testsample_run1.c"/>
        <files mask="testsample_run2.c"/>
        <files mask="testsample_yaml.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/test/expectdata" type="c_include">
        <files mask="testsample_head1.h"/>
        <files mask="testsample_mock_head1.h"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/test/spec" type="other">
        <files mask="generate_module_existing_file_spec.rb"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/test/targets" type="other">
        <files mask="ansi.yml"/>
        <files mask="clang_file.yml"/>
        <files mask="clang_strict.yml"/>
        <files mask="gcc_32.yml"/>
        <files mask="gcc_64.yml"/>
        <files mask="gcc_auto_limits.yml"/>
        <files mask="gcc_auto_stdint.yml"/>
        <files mask="gcc_manual_math.yml"/>
        <files mask="hitech_picc18.yml"/>
        <files mask="iar_arm_v4.yml"/>
        <files mask="iar_arm_v5.yml"/>
        <files mask="iar_arm_v5_3.yml"/>
        <files mask="iar_armcortex_LM3S9B92_v5_4.yml"/>
        <files mask="iar_cortexm3_v5.yml"/>
        <files mask="iar_msp430.yml"/>
        <files mask="iar_sh2a_v6.yml"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/test/testdata" type="c_include">
        <files mask="CException.h"/>
        <files mask="cmock.h"/>
        <files mask="Defs.h"/>
        <files mask="mockMock.h"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/test/testdata" type="src">
        <files mask="testRunnerGenerator.c"/>
        <files mask="testRunnerGeneratorSmall.c"/>
        <files mask="testRunnerGeneratorWithMocks.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/test/tests" type="other">
        <files mask="test_generate_test_runner.rb"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/test/tests" type="src">
        <files mask="testparameterized.c"/>
        <files mask="testunity.c"/>
      </source>
      <source relative_path="tools/cmock" type="other">
        <files mask="project.yml"/>
      </source>
      <source relative_path="tools/cmock" type="script">
        <files mask="coverage.cmake"/>
        <files mask="create_test.cmake"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/3rdparty/CMock/examples/make_example/src" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/CMock/examples/temp_sensor/src" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/CMock/src" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/CMock/test/iar/iar_v4/incIAR" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/CMock/test/iar/iar_v5/incIAR" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/CMock/test/system/test_compilation" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/CMock/vendor/c_exception/lib" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/CMock/vendor/c_exception/test/support" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_1/src" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_2/src" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_3/helper" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_3/src" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_4/src" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/CMock/vendor/unity/examples" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/CMock/vendor/unity/extras/fixture/src" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/CMock/vendor/unity/extras/memory/src" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/CMock/vendor/unity/extras/memory/test" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/CMock/vendor/unity/src" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/CMock/vendor/unity/test/expectdata" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/CMock/vendor/unity/test/testdata" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.3rdparty.http_parser.MIMXRT595S" name="AWS IoT 3rd party http_parser" brief="AWS IoT 3rd party http_parser" version="202007.00.0" full_name="AWS IoT 3rd party http_parser" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/3rdparty/http_parser" type="src">
        <files mask="http_parser.c"/>
      </source>
      <source relative_path="libraries/3rdparty/http_parser" type="c_include">
        <files mask="http_parser.h"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/3rdparty/http_parser" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.3rdparty.http_parser_unused.MIMXRT595S" name="AWS IoT 3rd party http_parser unused" brief="AWS IoT 3rd party http_parser unused files" version="202007.00.0" full_name="AWS IoT 3rd party http_parser unused" devices="MIMXRT595S" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/3rdparty/http_parser" type="other">
        <files mask=".gitignore"/>
        <files mask=".mailmap"/>
        <files mask=".travis.yml"/>
        <files mask="AUTHORS"/>
        <files mask="http_parser.gyp"/>
        <files mask="LICENSE-MIT"/>
        <files mask="Makefile"/>
        <files mask="README.md"/>
      </source>
      <source relative_path="libraries/3rdparty/http_parser" type="src">
        <files mask="bench.c"/>
        <files mask="test.c"/>
      </source>
      <source relative_path="libraries/3rdparty/http_parser/contrib" type="src">
        <files mask="parsertrace.c"/>
        <files mask="url_parser.c"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.3rdparty.jsmn.MIMXRT595S" name="AWS IoT jsmn" brief="AWS IoT jsmn" version="202007.00.0" full_name="AWS IoT jsmn" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/3rdparty/jsmn" type="src">
        <files mask="jsmn.c"/>
      </source>
      <source relative_path="libraries/3rdparty/jsmn" type="c_include">
        <files mask="jsmn.h"/>
      </source>
      <source relative_path="libraries/3rdparty/jsmn" type="other">
        <files mask="LICENSE"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_freertos-aws_iot_libraries_3rdparty_jsmn_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/3rdparty/jsmn" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.3rdparty.mbedtls_utils.MIMXRT595S" name="AWS IoT mbedtls utils" brief="AWS IoT mbedtls utils" version="202007.00.0" full_name="AWS IoT mbedtls utils" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <component_dependency value="middleware.mbedtls.MIMXRT595S"/>
      </dependencies>
      <source relative_path="libraries/3rdparty/mbedtls_utils" type="src">
        <files mask="mbedtls_error.c"/>
        <files mask="mbedtls_utils.c"/>
      </source>
      <source relative_path="libraries/3rdparty/mbedtls_utils" type="c_include">
        <files mask="mbedtls_error.h"/>
      </source>
      <source relative_path="libraries/3rdparty/mbedtls_utils" type="other">
        <files mask="README.md"/>
      </source>
      <source relative_path="libraries/3rdparty/mbedtls_utils" type="doc">
        <files mask="LICENSE-2.0.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_freertos-aws_iot_libraries_3rdparty_mbedtls_utils_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/3rdparty/mbedtls_utils" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.3rdparty.pkcs11.MIMXRT595S" name="AWS IoT 3rd party pkcs11" brief="AWS IoT 3rd party pkcs11" version="202007.00.0" full_name="AWS IoT 3rd party pkcs11" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/3rdparty/pkcs11" type="c_include">
        <files mask="pkcs11.h"/>
        <files mask="pkcs11f.h"/>
        <files mask="pkcs11t.h"/>
      </source>
      <source relative_path="libraries/3rdparty/pkcs11" type="other">
        <files mask="CONTRIBUTING.md"/>
        <files mask="LICENSE.md"/>
        <files mask="README.md"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_freertos-aws_iot_libraries_3rdparty_pkcs11_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/3rdparty/pkcs11" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.3rdparty.tinycbor.MIMXRT595S" name="AWS IoT tinycbor" brief="AWS IoT tinycbor" version="202007.00.0" full_name="AWS IoT tinycbor" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/3rdparty/tinycbor/src" type="c_include">
        <files mask="cbor.h"/>
        <files mask="cborinternal_p.h"/>
        <files mask="compilersupport_p.h"/>
        <files mask="tinycbor-version.h"/>
        <files mask="utf8_p.h"/>
      </source>
      <source relative_path="libraries/3rdparty/tinycbor/src" type="src">
        <files mask="cborencoder.c"/>
        <files mask="cborencoder_close_container_checked.c"/>
        <files mask="cborerrorstrings.c"/>
        <files mask="cborparser.c"/>
        <files mask="cborparser_dup_string.c"/>
        <files mask="cborvalidation.c"/>
      </source>
      <source relative_path="libraries/3rdparty/tinycbor/src" type="other">
        <files mask="LICENSE"/>
        <files mask="README.md"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/3rdparty/tinycbor/src" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.3rdparty.tinycbor_unused.MIMXRT595S" name="AWS IoT tinycbor" brief="AWS IoT tinycbor" version="202007.00.0" full_name="AWS IoT tinycbor" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/3rdparty/tinycbor/src" type="src">
        <files mask="cborpretty.c"/>
        <files mask="cborpretty_stdio.c"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.3rdparty.tinycrypt.MIMXRT595S" name="AWS IoT tinycrypt" brief="AWS IoT tinycrypt" version="202007.00.0" full_name="AWS IoT tinycrypt" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/3rdparty/tinycrypt" type="other">
        <files mask=".gitignore"/>
        <files mask="AUTHORS"/>
        <files mask="LICENSE"/>
        <files mask="Makefile"/>
        <files mask="README"/>
        <files mask="VERSION"/>
      </source>
      <source relative_path="libraries/3rdparty/tinycrypt/asn1" type="c_include">
        <files mask="asn1.h"/>
      </source>
      <source relative_path="libraries/3rdparty/tinycrypt/asn1" type="src">
        <files mask="asn1parse.c"/>
      </source>
      <source relative_path="libraries/3rdparty/tinycrypt" type="script">
        <files mask="config.mk"/>
      </source>
      <source relative_path="libraries/3rdparty/tinycrypt/documentation" type="other">
        <files mask="tinycrypt.rst"/>
      </source>
      <source relative_path="libraries/3rdparty/tinycrypt/lib/include/tinycrypt" type="c_include">
        <files mask="aes.h"/>
        <files mask="cbc_mode.h"/>
        <files mask="ccm_mode.h"/>
        <files mask="cmac_mode.h"/>
        <files mask="constants.h"/>
        <files mask="ctr_mode.h"/>
        <files mask="ctr_prng.h"/>
        <files mask="ecc.h"/>
        <files mask="ecc_dh.h"/>
        <files mask="ecc_dsa.h"/>
        <files mask="ecc_platform_specific.h"/>
        <files mask="hmac.h"/>
        <files mask="hmac_prng.h"/>
        <files mask="sha256.h"/>
        <files mask="utils.h"/>
      </source>
      <source relative_path="libraries/3rdparty/tinycrypt/lib" type="other">
        <files mask="Makefile"/>
      </source>
      <source relative_path="libraries/3rdparty/tinycrypt/lib/source" type="src">
        <files mask="aes_decrypt.c"/>
        <files mask="aes_encrypt.c"/>
        <files mask="cbc_mode.c"/>
        <files mask="ccm_mode.c"/>
        <files mask="cmac_mode.c"/>
        <files mask="ctr_mode.c"/>
        <files mask="ctr_prng.c"/>
        <files mask="ecc.c"/>
        <files mask="ecc_dh.c"/>
        <files mask="ecc_dsa.c"/>
        <files mask="ecc_platform_specific.c"/>
        <files mask="hmac.c"/>
        <files mask="hmac_prng.c"/>
        <files mask="sha256.c"/>
        <files mask="utils.c"/>
      </source>
      <source relative_path="libraries/3rdparty/tinycrypt/tests/include" type="c_include">
        <files mask="test_ecc_utils.h"/>
        <files mask="test_utils.h"/>
      </source>
      <source relative_path="libraries/3rdparty/tinycrypt/tests" type="other">
        <files mask="Makefile"/>
      </source>
      <source relative_path="libraries/3rdparty/tinycrypt/tests" type="binary">
        <files mask="pseudo-random-data.bin"/>
      </source>
      <source relative_path="libraries/3rdparty/tinycrypt/tests" type="src">
        <files mask="test_aes.c"/>
        <files mask="test_cbc_mode.c"/>
        <files mask="test_ccm_mode.c"/>
        <files mask="test_cmac_mode.c"/>
        <files mask="test_ctr_mode.c"/>
        <files mask="test_ctr_prng.c"/>
        <files mask="test_ecc_dh.c"/>
        <files mask="test_ecc_dsa.c"/>
        <files mask="test_ecc_utils.c"/>
        <files mask="test_hmac.c"/>
        <files mask="test_hmac_prng.c"/>
        <files mask="test_sha256.c"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/3rdparty/tinycrypt/asn1" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/tinycrypt/lib/include/tinycrypt" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/tinycrypt/tests/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.3rdparty.tracealyzer_recorder.MIMXRT595S" name="AWS IoT tracealyzer_recorder" brief="AWS IoT tracealyzer_recorder" version="202007.00.0" full_name="AWS IoT tracealyzer_recorder" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/3rdparty/tracealyzer_recorder/config" type="c_include">
        <files mask="trcConfig.h"/>
        <files mask="trcSnapshotConfig.h"/>
        <files mask="trcStreamingConfig.h"/>
      </source>
      <source relative_path="libraries/3rdparty/tracealyzer_recorder/Include" type="c_include">
        <files mask="trcHardwarePort.h"/>
        <files mask="trcKernelPort.h"/>
        <files mask="trcPortDefines.h"/>
        <files mask="trcRecorder.h"/>
      </source>
      <source relative_path="libraries/3rdparty/tracealyzer_recorder" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source relative_path="libraries/3rdparty/tracealyzer_recorder" type="other">
        <files mask="ReadMe.url"/>
        <files mask="LICENSE"/>
      </source>
      <source relative_path="libraries/3rdparty/tracealyzer_recorder/streamports/Jlink_RTT/include" type="c_include">
        <files mask="SEGGER_RTT.h"/>
        <files mask="SEGGER_RTT_Conf.h"/>
        <files mask="trcStreamingPort.h"/>
      </source>
      <source relative_path="libraries/3rdparty/tracealyzer_recorder/streamports/Jlink_RTT" type="doc">
        <files mask="Readme-Streamport.txt"/>
      </source>
      <source relative_path="libraries/3rdparty/tracealyzer_recorder/streamports/Jlink_RTT" type="src">
        <files mask="SEGGER_RTT.c"/>
        <files mask="SEGGER_RTT_Printf.c"/>
      </source>
      <source relative_path="libraries/3rdparty/tracealyzer_recorder/streamports/TCPIP/include" type="c_include">
        <files mask="trcStreamingPort.h"/>
      </source>
      <source relative_path="libraries/3rdparty/tracealyzer_recorder/streamports/TCPIP" type="doc">
        <files mask="Readme-Streamport.txt"/>
      </source>
      <source relative_path="libraries/3rdparty/tracealyzer_recorder/streamports/TCPIP" type="src">
        <files mask="trcStreamingPort.c"/>
      </source>
      <source relative_path="libraries/3rdparty/tracealyzer_recorder/streamports/USB_CDC/include" type="c_include">
        <files mask="trcStreamingPort.h"/>
      </source>
      <source relative_path="libraries/3rdparty/tracealyzer_recorder/streamports/USB_CDC" type="doc">
        <files mask="Readme-Streamport.txt"/>
      </source>
      <source relative_path="libraries/3rdparty/tracealyzer_recorder/streamports/USB_CDC" type="src">
        <files mask="trcStreamingPort.c"/>
      </source>
      <source relative_path="libraries/3rdparty/tracealyzer_recorder" type="src">
        <files mask="trcKernelPort.c"/>
        <files mask="trcSnapshotRecorder.c"/>
        <files mask="trcStreamingRecorder.c"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/3rdparty/tracealyzer_recorder/config" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/tracealyzer_recorder/Include" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/tracealyzer_recorder/streamports/Jlink_RTT/include" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/tracealyzer_recorder/streamports/TCPIP/include" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/tracealyzer_recorder/streamports/USB_CDC/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.3rdparty.unity.auto.MIMXRT595S" name="AWS IoT unity auto" brief="AWS IoT unity auto" version="202007.00.0" full_name="AWS IoT unity auto" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/3rdparty/unity/auto" type="other">
        <files mask="colour_prompt.rb"/>
        <files mask="colour_reporter.rb"/>
        <files mask="generate_config.yml"/>
        <files mask="generate_module.rb"/>
        <files mask="generate_test_runner.rb"/>
        <files mask="parse_output.rb"/>
        <files mask="stylize_as_junit.rb"/>
        <files mask="test_file_filter.rb"/>
        <files mask="type_sanitizer.rb"/>
        <files mask="unity_test_summary.rb"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/auto" type="script">
        <files mask="unity_test_summary.py"/>
        <files mask="unity_to_junit.py"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.3rdparty.unity.examples.MIMXRT595S" name="AWS IoT unity examples" brief="AWS IoT unity examples" version="202007.00.0" full_name="AWS IoT unity examples" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/3rdparty/unity/examples/example_1" type="other">
        <files mask="makefile"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_1" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_1/src" type="src">
        <files mask="ProductionCode.c"/>
        <files mask="ProductionCode2.c"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_1/src" type="c_include">
        <files mask="ProductionCode.h"/>
        <files mask="ProductionCode2.h"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_1/test/test_runners" type="src">
        <files mask="TestProductionCode_Runner.c"/>
        <files mask="TestProductionCode2_Runner.c"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_1/test" type="src">
        <files mask="TestProductionCode.c"/>
        <files mask="TestProductionCode2.c"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_2" type="other">
        <files mask="makefile"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_2" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_2/src" type="src">
        <files mask="ProductionCode.c"/>
        <files mask="ProductionCode2.c"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_2/src" type="c_include">
        <files mask="ProductionCode.h"/>
        <files mask="ProductionCode2.h"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_2/test/test_runners" type="src">
        <files mask="all_tests.c"/>
        <files mask="TestProductionCode_Runner.c"/>
        <files mask="TestProductionCode2_Runner.c"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_2/test" type="src">
        <files mask="TestProductionCode.c"/>
        <files mask="TestProductionCode2.c"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_3/helper" type="src">
        <files mask="UnityHelper.c"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_3/helper" type="c_include">
        <files mask="UnityHelper.h"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_3" type="other">
        <files mask="rakefile.rb"/>
        <files mask="rakefile_helper.rb"/>
        <files mask="target_gcc_32.yml"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_3" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_3/src" type="src">
        <files mask="ProductionCode.c"/>
        <files mask="ProductionCode2.c"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_3/src" type="c_include">
        <files mask="ProductionCode.h"/>
        <files mask="ProductionCode2.h"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_3/test" type="src">
        <files mask="TestProductionCode.c"/>
        <files mask="TestProductionCode2.c"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_4" type="other">
        <files mask="meson.build"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_4" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_4/src" type="other">
        <files mask="meson.build"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_4/src" type="src">
        <files mask="ProductionCode.c"/>
        <files mask="ProductionCode2.c"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_4/src" type="c_include">
        <files mask="ProductionCode.h"/>
        <files mask="ProductionCode2.h"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_4/subprojects" type="other">
        <files mask="unity.wrap"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_4/test" type="other">
        <files mask="meson.build"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_4/test" type="src">
        <files mask="TestProductionCode.c"/>
        <files mask="TestProductionCode2.c"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_4/test/test_runners" type="other">
        <files mask="meson.build"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_4/test/test_runners" type="src">
        <files mask="TestProductionCode2_Runner.c"/>
        <files mask="TestProductionCode_Runner.c"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples" type="c_include">
        <files mask="unity_config.h"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/3rdparty/unity/examples/example_1/src" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/unity/examples/example_2/src" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/unity/examples/example_3/helper" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/unity/examples/example_3/src" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/unity/examples/example_4/src" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/unity/examples" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.3rdparty.unity.extras_unused.MIMXRT595S" name="AWS IoT unity extras" brief="AWS IoT unity extras" version="202007.00.0" full_name="AWS IoT unity extras" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/3rdparty/unity/extras/eclipse" type="doc">
        <files mask="error_parsers.txt"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/extras/fixture" type="other">
        <files mask="rakefile.rb"/>
        <files mask="rakefile_helper.rb"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/extras/fixture" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/extras/fixture/test/main" type="src">
        <files mask="AllTests.c"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/extras/fixture/test" type="other">
        <files mask="Makefile"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/extras/fixture/test" type="src">
        <files mask="template_fixture_tests.c"/>
        <files mask="unity_fixture_Test.c"/>
        <files mask="unity_fixture_TestRunner.c"/>
        <files mask="unity_output_Spy.c"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/extras/fixture/test" type="c_include">
        <files mask="unity_output_Spy.h"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/3rdparty/unity/extras/fixture/test" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.3rdparty.unity.tests.MIMXRT595S" name="AWS IoT unity tests" brief="AWS IoT unity tests" version="202007.00.0" full_name="AWS IoT unity tests" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/3rdparty/unity/test" type="other">
        <files mask=".rubocop.yml"/>
        <files mask="Makefile"/>
        <files mask="rakefile"/>
        <files mask="rakefile_helper.rb"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/test/expectdata" type="src">
        <files mask="testsample_cmd.c"/>
        <files mask="testsample_def.c"/>
        <files mask="testsample_head1.c"/>
        <files mask="testsample_mock_cmd.c"/>
        <files mask="testsample_mock_def.c"/>
        <files mask="testsample_mock_head1.c"/>
        <files mask="testsample_mock_new1.c"/>
        <files mask="testsample_mock_new2.c"/>
        <files mask="testsample_mock_param.c"/>
        <files mask="testsample_mock_run1.c"/>
        <files mask="testsample_mock_run2.c"/>
        <files mask="testsample_mock_yaml.c"/>
        <files mask="testsample_new1.c"/>
        <files mask="testsample_new2.c"/>
        <files mask="testsample_param.c"/>
        <files mask="testsample_run1.c"/>
        <files mask="testsample_run2.c"/>
        <files mask="testsample_yaml.c"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/test/expectdata" type="c_include">
        <files mask="testsample_head1.h"/>
        <files mask="testsample_mock_head1.h"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/test/spec" type="other">
        <files mask="generate_module_existing_file_spec.rb"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/test/targets" type="other">
        <files mask="clang_file.yml"/>
        <files mask="clang_strict.yml"/>
        <files mask="gcc_32.yml"/>
        <files mask="gcc_64.yml"/>
        <files mask="gcc_auto_limits.yml"/>
        <files mask="gcc_auto_stdint.yml"/>
        <files mask="gcc_manual_math.yml"/>
        <files mask="hitech_picc18.yml"/>
        <files mask="iar_arm_v4.yml"/>
        <files mask="iar_arm_v5.yml"/>
        <files mask="iar_arm_v5_3.yml"/>
        <files mask="iar_armcortex_LM3S9B92_v5_4.yml"/>
        <files mask="iar_cortexm3_v5.yml"/>
        <files mask="iar_msp430.yml"/>
        <files mask="iar_sh2a_v6.yml"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/test/testdata" type="c_include">
        <files mask="CException.h"/>
        <files mask="cmock.h"/>
        <files mask="Defs.h"/>
        <files mask="mockMock.h"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/test/testdata" type="src">
        <files mask="testRunnerGenerator.c"/>
        <files mask="testRunnerGeneratorSmall.c"/>
        <files mask="testRunnerGeneratorWithMocks.c"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/test/tests" type="other">
        <files mask="test_generate_test_runner.rb"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/test/tests" type="src">
        <files mask="testparameterized.c"/>
        <files mask="testunity.c"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/3rdparty/unity/test/expectdata" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/unity/test/testdata" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.3rdparty.unity_unused.MIMXRT595S" name="AWS IoT unity" brief="AWS IoT unity" version="202007.00.0" full_name="AWS IoT unity" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/3rdparty/unity" type="other">
        <files mask=".editorconfig"/>
        <files mask=".gitattributes"/>
        <files mask=".gitignore"/>
        <files mask=".travis.yml"/>
        <files mask="README.md"/>
        <files mask="meson.build"/>
      </source>
      <source relative_path="libraries/3rdparty/unity" type="doc">
        <files mask="CMakeLists.txt"/>
        <files mask="LICENSE.txt"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/release" type="other">
        <files mask="build.info"/>
        <files mask="version.info"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/docs" type="other">
        <files mask="ThrowTheSwitchCodingStandard.md"/>
        <files mask="UnityAssertionsReference.md"/>
        <files mask="UnityConfigurationGuide.md"/>
        <files mask="UnityGettingStartedGuide.md"/>
        <files mask="UnityHelperScriptsGuide.md"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/docs" type="doc">
        <files mask="UnityAssertionsCheatSheetSuitableforPrintingandPossiblyFraming.pdf"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/src" type="other">
        <files mask="meson.build"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.3rdparty.win_pcap.MIMXRT595S" name="AWS IoT win_pcap" brief="AWS IoT win_pcap" version="202007.00.0" full_name="AWS IoT win_pcap" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/3rdparty/win_pcap" type="c_include">
        <files mask="bittypes.h"/>
        <files mask="ip6_misc.h"/>
        <files mask="Packet32.h"/>
        <files mask="PacketData.h"/>
        <files mask="pcap.h"/>
        <files mask="pcap-bpf.h"/>
        <files mask="pcap-namedb.h"/>
        <files mask="pcap-stdinc.h"/>
        <files mask="remote-ext.h"/>
        <files mask="Win32-Extensions.h"/>
      </source>
      <source relative_path="libraries/3rdparty/win_pcap" type="lib">
        <files mask="libwpcap.a"/>
      </source>
      <source relative_path="libraries/3rdparty/win_pcap/pcap" type="c_include">
        <files mask="bluetooth.h"/>
        <files mask="bpf.h"/>
        <files mask="namedb.h"/>
        <files mask="pcap.h"/>
        <files mask="sll.h"/>
        <files mask="usb.h"/>
        <files mask="vlan.h"/>
      </source>
      <source relative_path="libraries/3rdparty/win_pcap" type="lib">
        <files mask="wpcap.lib"/>
      </source>
      <source relative_path="libraries/3rdparty/win_pcap" type="other">
        <files mask="LICENSE"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/3rdparty/win_pcap" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/win_pcap/pcap" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.abstractions.ble_hal.MIMXRT595S" name="AWS IoT ble_hal" brief="AWS IoT ble_hal" version="202007.00.0" full_name="AWS IoT ble_hal" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/abstractions/ble_hal" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/abstractions/ble_hal/include" type="c_include">
        <files mask="bt_hal_avsrc_profile.h"/>
        <files mask="bt_hal_gatt_client.h"/>
        <files mask="bt_hal_gatt_server.h"/>
        <files mask="bt_hal_gatt_types.h"/>
        <files mask="bt_hal_manager.h"/>
        <files mask="bt_hal_manager_adapter_ble.h"/>
        <files mask="bt_hal_manager_adapter_classic.h"/>
        <files mask="bt_hal_manager_types.h"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/abstractions/ble_hal/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.abstractions.common_io.MIMXRT595S" name="AWS IoT common_io" brief="AWS IoT common_io" version="202007.00.0" full_name="AWS IoT common_io" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
      </dependencies>
      <source relative_path="libraries/abstractions/common_io" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/abstractions/common_io/include" type="c_include">
        <files mask="iot_adc.h"/>
        <files mask="iot_battery.h"/>
        <files mask="iot_efuse.h"/>
        <files mask="iot_flash.h"/>
        <files mask="iot_gpio.h"/>
        <files mask="iot_hw.h"/>
        <files mask="iot_i2c.h"/>
        <files mask="iot_i2s.h"/>
        <files mask="iot_perfcounter.h"/>
        <files mask="iot_power.h"/>
        <files mask="iot_pwm.h"/>
        <files mask="iot_reset.h"/>
        <files mask="iot_rtc.h"/>
        <files mask="iot_sdio.h"/>
        <files mask="iot_spi.h"/>
        <files mask="iot_timer.h"/>
        <files mask="iot_tsensor.h"/>
        <files mask="iot_uart.h"/>
        <files mask="iot_usb_device.h"/>
        <files mask="iot_usb_host.h"/>
        <files mask="iot_watchdog.h"/>
      </source>
      <source relative_path="libraries/abstractions/common_io/test" type="src">
        <files mask="iot_test_common_io.c"/>
        <files mask="test_iot_adc.c"/>
        <files mask="test_iot_battery.c"/>
        <files mask="test_iot_efuse.c"/>
        <files mask="test_iot_flash.c"/>
        <files mask="test_iot_gpio.c"/>
        <files mask="test_iot_i2c.c"/>
        <files mask="test_iot_i2s.c"/>
        <files mask="test_iot_perfcounter.c"/>
        <files mask="test_iot_power.c"/>
        <files mask="test_iot_pwm.c"/>
        <files mask="test_iot_reset.c"/>
        <files mask="test_iot_rtc.c"/>
        <files mask="test_iot_sdio.c"/>
        <files mask="test_iot_spi.c"/>
        <files mask="test_iot_timer.c"/>
        <files mask="test_iot_tsensor.c"/>
        <files mask="test_iot_uart.c"/>
        <files mask="test_iot_watchdog.c"/>
      </source>
      <source relative_path="libraries/abstractions/common_io/test" type="c_include">
        <files mask="iot_test_common_io_internal.h"/>
      </source>
      <source relative_path="libraries/abstractions/common_io/test/test_scripts/adc" type="script">
        <files mask="__init__.py"/>
        <files mask="test_iot_adc_rp3.py"/>
        <files mask="test_iot_adc_test.py"/>
        <files mask="test_iot_runonPI_adc.sh"/>
      </source>
      <source relative_path="libraries/abstractions/common_io/test/test_scripts/gpio" type="script">
        <files mask="__init__.py"/>
        <files mask="test_iot_gpio_rp3.py"/>
        <files mask="test_iot_gpio_test.py"/>
        <files mask="test_iot_runonPI_gpio.sh"/>
      </source>
      <source relative_path="libraries/abstractions/common_io/test/test_scripts/i2c_master" type="script">
        <files mask="test_iot_i2c_master_rp3.py"/>
        <files mask="test_iot_i2c_master_test.py"/>
        <files mask="test_iot_runonPI_i2c_master.sh"/>
      </source>
      <source relative_path="libraries/abstractions/common_io/test/test_scripts/pwm" type="script">
        <files mask="__init__.py"/>
        <files mask="test_iot_pwm_rp3.py"/>
        <files mask="test_iot_pwm_test.py"/>
        <files mask="test_iot_runonPI_pwm.sh"/>
      </source>
      <source relative_path="libraries/abstractions/common_io/test/test_scripts/spi_master" type="script">
        <files mask="test_iot_spi_master_pyb.sh"/>
        <files mask="test_iot_spi_master_test.py"/>
      </source>
      <source relative_path="libraries/abstractions/common_io/test/test_scripts" type="script">
        <files mask="test_iot_assisted_tests.py"/>
        <files mask="test_iot_test_template.py"/>
      </source>
      <source relative_path="libraries/abstractions/common_io/test/test_scripts/tsensor" type="script">
        <files mask="__init__.py"/>
        <files mask="test_iot_runonPI_tsensor.sh"/>
        <files mask="test_iot_tsensor_rp3.py"/>
        <files mask="test_iot_tsensor_test.py"/>
      </source>
      <source relative_path="libraries/abstractions/common_io/test/test_scripts/uart" type="script">
        <files mask="__init__.py"/>
        <files mask="test_iot_runonPI_uart.sh"/>
        <files mask="test_iot_uart_rp3.py"/>
        <files mask="test_iot_uart_test.py"/>
      </source>
      <source relative_path="libraries/abstractions/common_io/test/test_scripts/usb_device" type="script">
        <files mask="test_iot_usb_device_test.py"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/abstractions/common_io/include" type="c_include"/>
        <include_path relative_path="libraries/abstractions/common_io/test" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.abstractions.pkcs11.MIMXRT595S" name="AWS IoT abstraction pkcs11" brief="AWS IoT abstraction pkcs11" version="202007.00.0" full_name="AWS IoT abstraction pkcs11" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.mbedtls.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.freertos_plus.standard.crypto.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.freertos_plus.standard.pkcs11.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.freertos_plus.standard.utils.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.3rdparty.mbedtls_utils.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.template.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="libraries/abstractions/pkcs11/include" type="c_include">
        <files mask="iot_pkcs11_pal.h"/>
      </source>
      <source relative_path="libraries/abstractions/pkcs11/mbedtls" type="src">
        <files mask="iot_pkcs11_mbedtls.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_freertos-aws_iot_libraries_abstractions_pkcs11_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/abstractions/pkcs11/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.abstractions.pkcs11_unused.MIMXRT595S" name="AWS IoT abstraction pkcs11 unused" brief="AWS IoT abstraction pkcs11 unused" version="202007.00.0" full_name="AWS IoT abstraction pkcs11 unused" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/abstractions/pkcs11/ecc608a" type="src">
        <files mask="atca_cert_chain.c"/>
        <files mask="iot_pkcs11_secure_element.c"/>
      </source>
      <source relative_path="libraries/abstractions/pkcs11/ecc608a" type="c_include">
        <files mask="atca_cert_chain.h"/>
      </source>
      <source relative_path="libraries/abstractions/pkcs11/psa" type="src">
        <files mask="iot_pkcs11_psa.c"/>
        <files mask="iot_pkcs11_psa_input_format.c"/>
        <files mask="iot_pkcs11_psa_object_management.c"/>
      </source>
      <source relative_path="libraries/abstractions/pkcs11/psa" type="c_include">
        <files mask="iot_pkcs11_psa_input_format.h"/>
        <files mask="iot_pkcs11_psa_object_management.h"/>
      </source>
      <source relative_path="libraries/abstractions/pkcs11/psa" type="other">
        <files mask="License.md"/>
        <files mask="ReadMe.md"/>
      </source>
      <source relative_path="libraries/abstractions/pkcs11/test" type="src">
        <files mask="MBT_C_CloseSession.c"/>
        <files mask="MBT_C_DigestFinal.c"/>
        <files mask="MBT_C_DigestInit.c"/>
        <files mask="MBT_C_DigestUpdate.c"/>
        <files mask="MBT_C_Finalize.c"/>
        <files mask="MBT_C_FindObjects.c"/>
        <files mask="MBT_C_FindObjectsFinal.c"/>
        <files mask="MBT_C_FindObjectsInit.c"/>
        <files mask="MBT_C_GenerateKeyPair.c"/>
        <files mask="MBT_C_GenerateRandom.c"/>
        <files mask="MBT_C_GetAttributeValue.c"/>
        <files mask="MBT_C_Initialize.c"/>
        <files mask="MBT_C_OpenSession.c"/>
        <files mask="MBT_C_Sign.c"/>
        <files mask="MBT_C_SignInit.c"/>
        <files mask="MBT_C_Verify.c"/>
        <files mask="MBT_C_VerifyInit.c"/>
        <files mask="MBT_DigestMachine.c"/>
        <files mask="MBT_GenerationMachine.c"/>
        <files mask="MBT_ObjectMachine.c"/>
        <files mask="MBT_SessionMachine.c"/>
        <files mask="MBT_SignMachine.c"/>
        <files mask="MBT_VerifyMachine.c"/>
      </source>
      <source relative_path="libraries/abstractions/pkcs11/utest" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/abstractions/pkcs11/utest" type="src">
        <files mask="iot_pkcs11_mbedtls_utest.c"/>
      </source>
      <source relative_path="libraries/abstractions/pkcs11/utest" type="other">
        <files mask="project.yml"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/abstractions/pkcs11/ecc608a" type="c_include"/>
        <include_path relative_path="libraries/abstractions/pkcs11/psa" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.abstractions.platform.MIMXRT595S" name="AWS IoT abstraction platform" brief="AWS IoT abstraction platform" version="202007.00.0" full_name="AWS IoT abstraction platform" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-aws_iot.common.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.abstractions.secure_sockets.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.template.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="libraries/abstractions/platform/freertos/include/platform" type="c_include">
        <files mask="iot_network_ble.h"/>
        <files mask="iot_network_freertos.h"/>
        <files mask="iot_platform_types_freertos.h"/>
      </source>
      <source relative_path="libraries/abstractions/platform/freertos" type="src">
        <files mask="iot_clock_freertos.c"/>
        <files mask="iot_metrics.c"/>
        <files mask="iot_network_freertos.c"/>
        <files mask="iot_threads_freertos.c"/>
      </source>
      <source relative_path="libraries/abstractions/platform/include/platform" type="c_include">
        <files mask="iot_clock.h"/>
        <files mask="iot_metrics.h"/>
        <files mask="iot_network.h"/>
        <files mask="iot_threads.h"/>
      </source>
      <source relative_path="libraries/abstractions/platform/include/types" type="c_include">
        <files mask="iot_platform_types.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_freertos-aws_iot_libraries_abstractions_platform_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/abstractions/platform/freertos/include/platform" type="c_include"/>
        <include_path relative_path="libraries/abstractions/platform/include/platform" type="c_include"/>
        <include_path relative_path="libraries/abstractions/platform/include/types" type="c_include"/>
        <include_path relative_path="libraries/abstractions/platform/freertos/include" type="c_include"/>
        <include_path relative_path="libraries/abstractions/platform/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.abstractions.posix.MIMXRT595S" name="AWS IoT abstraction POSIX" brief="AWS IoT abstraction POSIX" version="202007.00.0" full_name="AWS IoT abstraction POSIX" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <component_dependency value="middleware.freertos-aws_iot.libraries.freertos_plus.standard.freertos_plus_posix.MIMXRT595S"/>
      </dependencies>
      <source relative_path="libraries/abstractions/posix" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/abstractions/posix/include/FreeRTOS_POSIX" type="c_include">
        <files mask="errno.h"/>
        <files mask="fcntl.h"/>
        <files mask="mqueue.h"/>
        <files mask="pthread.h"/>
        <files mask="sched.h"/>
        <files mask="semaphore.h"/>
        <files mask="signal.h"/>
        <files mask="time.h"/>
        <files mask="unistd.h"/>
        <files mask="utils.h"/>
      </source>
      <source relative_path="libraries/abstractions/posix/include/FreeRTOS_POSIX/sys" type="c_include">
        <files mask="types.h"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/abstractions/posix/include/FreeRTOS_POSIX" type="c_include"/>
        <include_path relative_path="libraries/abstractions/posix/include/FreeRTOS_POSIX/sys" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.abstractions.secure_sockets.MIMXRT595S" name="AWS IoT abstraction secure sockets" brief="AWS IoT abstraction secure sockets" version="202007.00.0" full_name="AWS IoT abstraction secure sockets" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-aws_iot.common.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.template.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="libraries/abstractions/secure_sockets/include" type="c_include">
        <files mask="iot_secure_sockets.h"/>
        <files mask="iot_secure_sockets_config_defaults.h"/>
        <files mask="iot_secure_sockets_wrapper_metrics.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_freertos-aws_iot_libraries_abstractions_secure_sockets_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/abstractions/secure_sockets/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.abstractions.secure_sockets_unused.MIMXRT595S" name="AWS IoT abstraction secure sockets unused" brief="AWS IoT abstraction secure sockets unused" version="202007.00.0" full_name="AWS IoT abstraction secure sockets unused" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/abstractions/secure_sockets/utest" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/abstractions/secure_sockets/utest" type="src">
        <files mask="secure_sockets_utest.c"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.abstractions.threading_alt.MIMXRT595S" name="AWS IoT abstraction mbedtls threading_alt" brief="AWS IoT abstraction mbedtls threading_alt" version="202007.00.0" full_name="AWS IoT abstraction mbedtls threading_alt" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
      </dependencies>
      <source relative_path="libraries/abstractions/pkcs11/mbedtls" type="c_include">
        <files mask="threading_alt.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_freertos-aws_iot_libraries_abstractions_threading_alt_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/abstractions/pkcs11/mbedtls" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.abstractions.wifi.MIMXRT595S" name="AWS IoT abstractions wifi" brief="AWS IoT abstractions wifi" version="202007.00.0" full_name="AWS IoT abstractions wifi" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-aws_iot.common.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.template.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-kernel.template.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="libraries/abstractions/wifi/include" type="c_include">
        <files mask="iot_wifi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_freertos-aws_iot_libraries_abstractions_wifi_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/abstractions/wifi/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.c_sdk.aws.defender.MIMXRT595S" name="AWS IoT defender" brief="AWS IoT defender" version="202007.00.0" full_name="AWS IoT defender" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-aws_iot.common.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.mqtt.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.c_sdk.standard.shadow.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.c_sdk.standard.serializer.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.abstractions.platform.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.3rdparty.tinycbor.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="libraries/c_sdk/aws/defender" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/c_sdk/aws/defender/include" type="c_include">
        <files mask="aws_defender.h"/>
        <files mask="aws_iot_defender.h"/>
      </source>
      <source relative_path="libraries/c_sdk/aws/defender/src" type="src">
        <files mask="aws_iot_defender_api.c"/>
        <files mask="aws_iot_defender_collector.c"/>
        <files mask="aws_iot_defender_mqtt.c"/>
        <files mask="aws_iot_defender_v1.c"/>
      </source>
      <source relative_path="libraries/c_sdk/aws/defender/src/private" type="c_include">
        <files mask="aws_iot_defender_internal.h"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/c_sdk/aws/defender/include" type="c_include"/>
        <include_path relative_path="libraries/c_sdk/aws/defender/src/private" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.c_sdk.aws.defender_unused.MIMXRT595S" name="AWS IoT defender unused" brief="AWS IoT defender unused" version="202007.00.0" full_name="AWS IoT defender unused" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/c_sdk/aws/defender/test/system" type="src">
        <files mask="aws_iot_tests_defender_system.c"/>
      </source>
      <source relative_path="libraries/c_sdk/aws/defender/test/unit" type="src">
        <files mask="aws_iot_tests_defender_unit.c"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.c_sdk.standard.ble_unused.MIMXRT595S" name="AWS IoT BLE" brief="AWS IoT BLE" version="202007.00.0" full_name="AWS IoT BLE" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/c_sdk/standard/ble/utest" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/ble/utest" type="src">
        <files mask="iot_ble_data_transfer_utest.c"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/ble" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/ble/include" type="c_include">
        <files mask="iot_ble.h"/>
        <files mask="iot_ble_config_defaults.h"/>
        <files mask="iot_ble_data_transfer.h"/>
        <files mask="iot_ble_device_information.h"/>
        <files mask="iot_ble_mqtt_serialize.h"/>
        <files mask="iot_ble_wifi_provisioning.h"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/ble/src" type="src">
        <files mask="iot_ble_gap.c"/>
        <files mask="iot_ble_gatt.c"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/ble/src" type="c_include">
        <files mask="iot_ble_internal.h"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/ble/src/services/device_information" type="src">
        <files mask="iot_ble_device_information.c"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/ble/src/services/mqtt_ble" type="src">
        <files mask="iot_ble_data_transfer.c"/>
        <files mask="iot_network_ble.c"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/ble/src/services/wifi_provisioning" type="src">
        <files mask="iot_ble_wifi_provisioning.c"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/ble/test" type="c_include">
        <files mask="iot_ble_wifi_prov_test_access_declare.h"/>
        <files mask="iot_ble_wifi_prov_test_access_define.h"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/ble/test" type="src">
        <files mask="iot_test_ble_end_to_end.c"/>
        <files mask="iot_test_wifi_provisioning.c"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/c_sdk/standard/ble/include" type="c_include"/>
        <include_path relative_path="libraries/c_sdk/standard/ble/src" type="c_include"/>
        <include_path relative_path="libraries/c_sdk/standard/ble/test" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.c_sdk.standard.https.MIMXRT595S" name="AWS IoT https" brief="AWS IoT https" version="202007.00.0" full_name="AWS IoT https" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-aws_iot.common.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.3rdparty.http_parser.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.abstractions.platform.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.template.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="libraries/c_sdk/standard/https/include" type="c_include">
        <files mask="iot_https_client.h"/>
        <files mask="iot_https_utils.h"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/https/include/types" type="c_include">
        <files mask="iot_https_types.h"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/https/src" type="src">
        <files mask="iot_https_client.c"/>
        <files mask="iot_https_utils.c"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/https/src/private" type="c_include">
        <files mask="iot_https_internal.h"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/c_sdk/standard/https/include" type="c_include"/>
        <include_path relative_path="libraries/c_sdk/standard/https/include/types" type="c_include"/>
        <include_path relative_path="libraries/c_sdk/standard/https/src/private" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.c_sdk.standard.https_unused.MIMXRT595S" name="AWS IoT https unused" brief="AWS IoT https unused files" version="202007.00.0" full_name="AWS IoT https unused" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/c_sdk/standard/https" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/https/test/access" type="c_include">
        <files mask="iot_test_access_https.h"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/https/test/access" type="src">
        <files mask="iot_test_access_https_client.c"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/https/test/system" type="src">
        <files mask="iot_tests_https_system.c"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/https/test/unit" type="src">
        <files mask="iot_tests_https_async.c"/>
        <files mask="iot_tests_https_client.c"/>
        <files mask="iot_tests_https_common.c"/>
        <files mask="iot_tests_https_sync.c"/>
        <files mask="iot_tests_https_utils.c"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/https/test/unit" type="c_include">
        <files mask="iot_tests_https_common.h"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/c_sdk/standard/https/test/access" type="c_include"/>
        <include_path relative_path="libraries/c_sdk/standard/https/test/unit" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.c_sdk.standard.serializer_unused.MIMXRT595S" name="AWS IoT standard serializer" brief="AWS IoT standard serializer" version="202007.00.0" full_name="AWS IoT standard serializer" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/c_sdk/standard/serializer/src/cbor" type="src">
        <files mask="iot_serializer_tinycbor_decoder.c"/>
        <files mask="iot_serializer_tinycbor_encoder.c"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/serializer/test" type="src">
        <files mask="iot_tests_deserializer_json.c"/>
        <files mask="iot_tests_serializer_cbor.c"/>
        <files mask="iot_tests_serializer_json.c"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.freertos_plus.aws.greengrass.MIMXRT595S" name="AWS IoT libraries greengrass" brief="AWS IoT libraries greengrass" version="202007.00.0" full_name="AWS IoT libraries greengrass" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-aws_iot.libraries.3rdparty.jsmn.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.abstractions.secure_sockets.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.template.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="libraries/freertos_plus/aws/greengrass/include" type="c_include">
        <files mask="aws_ggd_config_defaults.h"/>
        <files mask="aws_greengrass_discovery.h"/>
      </source>
      <source relative_path="libraries/freertos_plus/aws/greengrass/src" type="src">
        <files mask="aws_greengrass_discovery.c"/>
        <files mask="aws_helper_secure_connect.c"/>
      </source>
      <source relative_path="libraries/freertos_plus/aws/greengrass/src" type="c_include">
        <files mask="aws_helper_secure_connect.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_freertos-aws_iot_libraries_freertos_plus_aws_greengrass_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/freertos_plus/aws/greengrass/include" type="c_include"/>
        <include_path relative_path="libraries/freertos_plus/aws/greengrass/src" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.freertos_plus.aws.greengrass_unused.MIMXRT595S" name="AWS IoT libraries greengrass unused" brief="AWS IoT libraries greengrass unused" version="202007.00.0" full_name="AWS IoT libraries greengrass unused" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/freertos_plus/aws/greengrass/test" type="src">
        <files mask="aws_test_ggd_system.c"/>
        <files mask="aws_test_ggd_unit.c"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.freertos_plus.aws.ota.MIMXRT595S" name="FreeRTOS ota" brief="FreeRTOS ota" version="202007.00.0" full_name="FreeRTOS ota" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-aws_iot.common.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.demos_ota.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.3rdparty.jsmn.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.3rdparty.tinycbor.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.abstractions.platform.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.c_sdk.standard.https.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.mqtt.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
          <component_dependency value="middleware.mbedtls.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.template.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="libraries/freertos_plus/aws/ota" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/freertos_plus/aws/ota" type="other">
        <files mask="README.md"/>
      </source>
      <source relative_path="libraries/freertos_plus/aws/ota/include" type="c_include">
        <files mask="aws_iot_ota_agent.h"/>
        <files mask="aws_iot_ota_types.h"/>
      </source>
      <source relative_path="libraries/freertos_plus/aws/ota/src" type="src">
        <files mask="aws_iot_ota_agent.c"/>
        <files mask="aws_iot_ota_interface.c"/>
      </source>
      <source relative_path="libraries/freertos_plus/aws/ota/src" type="c_include">
        <files mask="aws_iot_ota_agent_internal.h"/>
        <files mask="aws_iot_ota_interface.h"/>
        <files mask="aws_iot_ota_pal.h"/>
      </source>
      <source relative_path="libraries/freertos_plus/aws/ota/src/http" type="src">
        <files mask="aws_iot_ota_http.c"/>
      </source>
      <source relative_path="libraries/freertos_plus/aws/ota/src/http" type="c_include">
        <files mask="aws_iot_ota_http.h"/>
      </source>
      <source relative_path="libraries/freertos_plus/aws/ota/src/mqtt" type="src">
        <files mask="aws_iot_ota_cbor.c"/>
        <files mask="aws_iot_ota_mqtt.c"/>
      </source>
      <source relative_path="libraries/freertos_plus/aws/ota/src/mqtt" type="c_include">
        <files mask="aws_iot_ota_cbor.h"/>
        <files mask="aws_iot_ota_cbor_internal.h"/>
        <files mask="aws_iot_ota_mqtt.h"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/freertos_plus/aws/ota/include" type="c_include"/>
        <include_path relative_path="libraries/freertos_plus/aws/ota/src" type="c_include"/>
        <include_path relative_path="libraries/freertos_plus/aws/ota/src/http" type="c_include"/>
        <include_path relative_path="libraries/freertos_plus/aws/ota/src/mqtt" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.freertos_plus.aws.ota_unused.MIMXRT595S" name="AWS IoT freertos plus OTA" brief="AWS IoT freertos plus OTA" version="202007.00.0" full_name="AWS IoT freertos plus OTA" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/freertos_plus/aws/ota/test" type="c_include">
        <files mask="aws_ota_agent_test_access_declare.h"/>
        <files mask="aws_ota_agent_test_access_define.h"/>
        <files mask="aws_ota_codesigner_certificate.h"/>
        <files mask="aws_ota_pal_test_access_declare.h"/>
        <files mask="aws_ota_pal_test_access_define.h"/>
        <files mask="aws_test_ota_pal_ecdsa_sha256_signature.h"/>
        <files mask="aws_test_ota_pal_rsa_sha1_signature.h"/>
        <files mask="aws_test_ota_pal_rsa_sha256_signature.h"/>
        <files mask="aws_test_ota_signature_methods.h"/>
      </source>
      <source relative_path="libraries/freertos_plus/aws/ota/test" type="src">
        <files mask="aws_test_ota_agent.c"/>
        <files mask="aws_test_ota_cbor.c"/>
        <files mask="aws_test_ota_pal.c"/>
      </source>
      <source relative_path="libraries/freertos_plus/aws/ota/test" type="other">
        <files mask="README.md"/>
      </source>
      <source relative_path="libraries/freertos_plus/aws/ota/test/test_files" type="other">
        <files mask="describeStreamResponse.cbor"/>
        <files mask="ecdsa-sha256-signer.crt.pem"/>
        <files mask="ecdsa-sha256-signer.key.pem"/>
        <files mask="getStreamResponse_0.cbor"/>
        <files mask="getStreamResponse_1.cbor"/>
        <files mask="getStreamResponse_10.cbor"/>
        <files mask="getStreamResponse_11.cbor"/>
        <files mask="getStreamResponse_12.cbor"/>
        <files mask="getStreamResponse_13.cbor"/>
        <files mask="getStreamResponse_14.cbor"/>
        <files mask="getStreamResponse_15.cbor"/>
        <files mask="getStreamResponse_2.cbor"/>
        <files mask="getStreamResponse_3.cbor"/>
        <files mask="getStreamResponse_4.cbor"/>
        <files mask="getStreamResponse_5.cbor"/>
        <files mask="getStreamResponse_6.cbor"/>
        <files mask="getStreamResponse_7.cbor"/>
        <files mask="getStreamResponse_8.cbor"/>
        <files mask="getStreamResponse_9.cbor"/>
        <files mask="rsa-sha1-root-ca-cert.pem"/>
        <files mask="rsa-sha1-root-ca-cert-key.pem"/>
        <files mask="rsa-sha1-signer.crt.pem"/>
        <files mask="rsa-sha1-signer.key.pem"/>
        <files mask="rsa-sha256-signer.crt.pem"/>
        <files mask="rsa-sha256-signer.key.pem"/>
      </source>
      <source relative_path="libraries/freertos_plus/aws/ota/test/test_files" type="binary">
        <files mask="payload.bin"/>
        <files mask="rsasigner.crt"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/freertos_plus/aws/ota/test" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.freertos_plus.standard.crypto.MIMXRT595S" name="AWS IoT crypto" brief="AWS IoT crypto" version="202007.00.0" full_name="AWS IoT crypto" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-aws_iot.libraries.abstractions.threading_alt.MIMXRT595S"/>
          <component_dependency value="middleware.mbedtls.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="libraries/freertos_plus/standard/crypto/include" type="c_include">
        <files mask="iot_crypto.h"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/crypto/src" type="src">
        <files mask="iot_crypto.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_freertos-aws_iot_libraries_freertos_plus_standard_crypto_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/freertos_plus/standard/crypto/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.freertos_plus.standard.freertos_plus_posix.MIMXRT595S" name="AWS IoT freertos plus POSIX" brief="AWS IoT freertos plus POSIX" version="202007.00.0" full_name="AWS IoT freertos plus POSIX" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_posix" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_posix/doc" type="other">
        <files mask="Doxyfile"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_posix/doc" type="xml">
        <files mask="DoxygenLayout.xml"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_posix/include" type="c_include">
        <files mask="FreeRTOS_POSIX.h"/>
        <files mask="FreeRTOS_POSIX_internal.h"/>
        <files mask="FreeRTOS_POSIX_portable_default.h"/>
        <files mask="FreeRTOS_POSIX_types.h"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_posix/source" type="src">
        <files mask="FreeRTOS_POSIX_clock.c"/>
        <files mask="FreeRTOS_POSIX_mqueue.c"/>
        <files mask="FreeRTOS_POSIX_pthread.c"/>
        <files mask="FreeRTOS_POSIX_pthread_barrier.c"/>
        <files mask="FreeRTOS_POSIX_pthread_cond.c"/>
        <files mask="FreeRTOS_POSIX_pthread_mutex.c"/>
        <files mask="FreeRTOS_POSIX_sched.c"/>
        <files mask="FreeRTOS_POSIX_semaphore.c"/>
        <files mask="FreeRTOS_POSIX_timer.c"/>
        <files mask="FreeRTOS_POSIX_unistd.c"/>
        <files mask="FreeRTOS_POSIX_utils.c"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_posix/test" type="src">
        <files mask="iot_test_posix_clock.c"/>
        <files mask="iot_test_posix_mqueue.c"/>
        <files mask="iot_test_posix_pthread.c"/>
        <files mask="iot_test_posix_semaphore.c"/>
        <files mask="iot_test_posix_stress.c"/>
        <files mask="iot_test_posix_timer.c"/>
        <files mask="iot_test_posix_unistd.c"/>
        <files mask="iot_test_posix_utils.c"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/freertos_plus/standard/freertos_plus_posix/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.freertos_plus.standard.freertos_plus_tcp_unused.MIMXRT595S" name="AWS IoT freertos plus TCP" brief="AWS IoT freertos plus TCP" version="202007.00.0" full_name="AWS IoT freertos plus TCP" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_tcp" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/include" type="c_include">
        <files mask="FreeRTOS_ARP.h"/>
        <files mask="FreeRTOS_DHCP.h"/>
        <files mask="FreeRTOS_DNS.h"/>
        <files mask="FreeRTOS_errno_TCP.h"/>
        <files mask="FreeRTOS_IP.h"/>
        <files mask="FreeRTOS_IP_Private.h"/>
        <files mask="FreeRTOS_Sockets.h"/>
        <files mask="FreeRTOS_Stream_Buffer.h"/>
        <files mask="FreeRTOS_TCP_IP.h"/>
        <files mask="FreeRTOS_TCP_WIN.h"/>
        <files mask="FreeRTOS_UDP_IP.h"/>
        <files mask="FreeRTOSIPConfigDefaults.h"/>
        <files mask="IPTraceMacroDefaults.h"/>
        <files mask="NetworkBufferManagement.h"/>
        <files mask="NetworkInterface.h"/>
        <files mask="tcp_dump_packets.h"/>
        <files mask="tcp_mem_stats.h"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/source" type="src">
        <files mask="FreeRTOS_ARP.c"/>
        <files mask="FreeRTOS_DHCP.c"/>
        <files mask="FreeRTOS_DNS.c"/>
        <files mask="FreeRTOS_IP.c"/>
        <files mask="FreeRTOS_Sockets.c"/>
        <files mask="FreeRTOS_Stream_Buffer.c"/>
        <files mask="FreeRTOS_TCP_IP.c"/>
        <files mask="FreeRTOS_TCP_WIN.c"/>
        <files mask="FreeRTOS_UDP_IP.c"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/source" type="doc">
        <files mask="History.txt"/>
        <files mask="readme.txt"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/BufferManagement" type="src">
        <files mask="BufferAllocation_1.c"/>
        <files mask="BufferAllocation_2.c"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/Compiler/CompilerName" type="c_include">
        <files mask="pack_struct_end.h"/>
        <files mask="pack_struct_start.h"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/Compiler/CompilerName" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/Compiler/GCC" type="c_include">
        <files mask="pack_struct_end.h"/>
        <files mask="pack_struct_start.h"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/Compiler/IAR" type="c_include">
        <files mask="pack_struct_end.h"/>
        <files mask="pack_struct_start.h"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/Compiler/Keil" type="c_include">
        <files mask="pack_struct_end.h"/>
        <files mask="pack_struct_start.h"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/NetworkInterface/board_family" type="src">
        <files mask="NetworkInterface.c"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/NetworkInterface/board_family" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/NetworkInterface/Common" type="src">
        <files mask="phyHandling.c"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/NetworkInterface/include" type="c_include">
        <files mask="phyHandling.h"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/NetworkInterface/LPC17xx" type="src">
        <files mask="NetworkInterface.c"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/NetworkInterface/LPC18xx" type="src">
        <files mask="NetworkInterface.c"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/NetworkInterface/LPC18xx" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/NetworkInterface" type="doc">
        <files mask="README_DRIVER_DISCLAIMER.txt"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/source" type="other">
        <files mask="ReadMe.url"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/test" type="c_include">
        <files mask="iot_freertos_tcp_test_access_declare.h"/>
        <files mask="iot_freertos_tcp_test_access_dns_define.h"/>
        <files mask="iot_freertos_tcp_test_access_tcp_define.h"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/test" type="src">
        <files mask="iot_test_freertos_tcp.c"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_tcp" type="other">
        <files mask="uncrustify.cfg"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/include" type="c_include"/>
        <include_path relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/Compiler/CompilerName" type="c_include"/>
        <include_path relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/Compiler/GCC" type="c_include"/>
        <include_path relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/Compiler/IAR" type="c_include"/>
        <include_path relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/Compiler/Keil" type="c_include"/>
        <include_path relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/NetworkInterface/include" type="c_include"/>
        <include_path relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/test" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.freertos_plus.standard.pkcs11.MIMXRT595S" name="AWS IoT freertos plus pkcs11" brief="AWS IoT freertos plus pkcs11" version="202007.00.0" full_name="AWS IoT freertos plus pkcs11" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-aws_iot.libraries.3rdparty.pkcs11.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.template.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="libraries/freertos_plus/standard/pkcs11/include" type="c_include">
        <files mask="iot_pkcs11.h"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/pkcs11/src" type="src">
        <files mask="iot_pkcs11.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_freertos-aws_iot_libraries_freertos_plus_standard_pkcs11_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/freertos_plus/standard/pkcs11/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.freertos_plus.standard.pkcs11_unused.MIMXRT595S" name="AWS IoT freertos plus pkcs11 unused" brief="AWS IoT freertos plus pkcs11 unused" version="202007.00.0" full_name="AWS IoT freertos plus pkcs11 unused" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/freertos_plus/standard/pkcs11/utest" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/pkcs11/utest" type="src">
        <files mask="iot_pkcs11_utest.c"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.freertos_plus.standard.tls.MIMXRT595S" name="AWS IoT freertos plus TLS" brief="AWS IoT Transport Layer Security layer." version="202007.00.0" full_name="AWS IoT freertos plus TLS" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-aws_iot.common.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.3rdparty.mbedtls_utils.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.freertos_plus.standard.crypto.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.freertos_plus.standard.pkcs11.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.freertos_plus.standard.utils.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.template.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
          <component_dependency value="middleware.mbedtls.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="libraries/freertos_plus/standard/tls/include" type="c_include">
        <files mask="iot_tls.h"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/tls/src" type="src">
        <files mask="iot_tls.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_freertos-aws_iot_libraries_freertos_plus_standard_tls_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/freertos_plus/standard/tls/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.freertos_plus.standard.utils.MIMXRT595S" name="AWS IoT utils" brief="AWS IoT utils" version="202007.00.0" full_name="AWS IoT utils" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.freertos_plus.standard.crypto.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.abstractions.secure_sockets.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="libraries/freertos_plus/standard/utils/include" type="c_include">
        <files mask="iot_pki_utils.h"/>
        <files mask="iot_system_init.h"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/utils/src" type="src">
        <files mask="iot_pki_utils.c"/>
        <files mask="iot_system_init.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_freertos-aws_iot_libraries_freertos_plus_standard_utils_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/freertos_plus/standard/utils/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.freertos_plus.standard.utils_unused.MIMXRT595S" name="AWS IoT utils unused" brief="AWS IoT utils unused" version="202007.00.0" full_name="AWS IoT utils unused" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/freertos_plus/standard/utils/utest" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/utils/utest" type="src">
        <files mask="iot_pki_utils_utest.c"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.mqtt.MIMXRT595S" name="AWS IoT mqtt" brief="AWS IoT mqtt" version="202007.00.0" full_name="AWS IoT mqtt" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-aws_iot.common.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.abstractions.platform.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.template.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="libraries/c_sdk/standard/mqtt/include" type="c_include">
        <files mask="iot_mqtt.h"/>
        <files mask="iot_mqtt_agent.h"/>
        <files mask="iot_mqtt_agent_config_defaults.h"/>
        <files mask="iot_mqtt_config_defaults.h"/>
        <files mask="iot_mqtt_lib.h"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/mqtt/include/types" type="src">
        <files mask="iot_mqtt_types.h"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/mqtt/src" type="src">
        <files mask="iot_mqtt_agent.c"/>
        <files mask="iot_mqtt_api.c"/>
        <files mask="iot_mqtt_network.c"/>
        <files mask="iot_mqtt_operation.c"/>
        <files mask="iot_mqtt_serialize.c"/>
        <files mask="iot_mqtt_static_memory.c"/>
        <files mask="iot_mqtt_subscription.c"/>
        <files mask="iot_mqtt_validate.c"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/mqtt/src/private" type="src">
        <files mask="iot_mqtt_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_freertos-aws_iot_mqtt_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/c_sdk/standard/mqtt/include" type="c_include"/>
        <include_path relative_path="libraries/c_sdk/standard/mqtt/include/types" type="c_include"/>
        <include_path relative_path="libraries/c_sdk/standard/mqtt/src/private" type="c_include"/>
        <include_path relative_path="libraries/c_sdk/standard/mqtt/src" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.network_manager.MIMXRT595S" name="AWS IoT network manager" brief="AWS IoT network manager" version="202007.00.0" full_name="AWS IoT network manager" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-aws_iot.common.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.demos.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.abstractions.platform.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.abstractions.wifi.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.template.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="demos/include" type="c_include">
        <files mask="aws_wifi_connect_task.h"/>
        <files mask="iot_ble_numericComparison.h"/>
      </source>
      <source relative_path="demos/network_manager" type="src">
        <files mask="aws_iot_network_manager.c"/>
      </source>
      <source relative_path="demos/network_manager" type="c_include">
        <files mask="iot_network_manager_private.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_freertos-aws_iot_network_manager_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="demos/include" type="c_include"/>
        <include_path relative_path="demos/network_manager" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.projects.vendor.MIMXRT595S" name="AWS IoT vendor project template" brief="AWS IoT vendor project template" version="202007.00.0" full_name="AWS IoT vendor project template" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="projects/vendor/board/ide/aws_demos" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <source relative_path="projects/vendor/board/ide/aws_tests" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <source relative_path="projects/vendor/board/visual_studio/aws_demos" type="other">
        <files mask="aws_demos.sln"/>
        <files mask="aws_demos.vcxproj"/>
        <files mask="aws_demos.vcxproj.filters"/>
      </source>
      <source relative_path="projects/vendor/board/visual_studio/aws_tests" type="other">
        <files mask="aws_tests.sln"/>
        <files mask="aws_tests.vcxproj"/>
        <files mask="aws_tests.vcxproj.filters"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.template.MIMXRT595S" name="FreeRTOS AWS IoT configuration template" brief="Template configuration file to be edited by user." version="202007.00.0" full_name="FreeRTOS AWS IoT configuration template" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="project_template" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="template/aws" type="c_include">
        <files mask="aws_bufferpool_config.h"/>
        <files mask="aws_clientcredential.h"/>
        <files mask="aws_clientcredential_keys.h"/>
        <files mask="aws_demo_config.h"/>
        <files mask="aws_ggd_config.h"/>
        <files mask="aws_iot_network_config.h"/>
        <files mask="aws_mqtt_config.h"/>
        <files mask="aws_ota_agent_config.h"/>
        <files mask="aws_secure_sockets_config.h"/>
        <files mask="aws_shadow_config.h"/>
        <files mask="aws_wifi_config.h"/>
        <files mask="FreeRTOSIPConfig.h"/>
        <files mask="iot_config.h"/>
        <files mask="iot_mqtt_agent_config.h"/>
        <files mask="iot_pkcs11_config.h"/>
        <files mask="iot_config_common.h"/>
      </source>
      <include_paths>
        <include_path relative_path="template/aws" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.tests.MIMXRT595S" name="AWS IoT tests" brief="AWS IoT tests" version="202007.00.0" full_name="AWS IoT tests" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/3rdparty/unity/extras/fixture/src" type="src">
        <files mask="unity_fixture.c"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/extras/fixture/src" type="c_include">
        <files mask="unity_fixture.h"/>
        <files mask="unity_fixture_internals.h"/>
        <files mask="unity_fixture_malloc_overrides.h"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/src" type="src">
        <files mask="unity.c"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/src" type="c_include">
        <files mask="unity.h"/>
        <files mask="unity_internals.h"/>
      </source>
      <source relative_path="libraries/abstractions/pkcs11/test" type="src">
        <files mask="iot_test_pkcs11.c"/>
      </source>
      <source relative_path="libraries/abstractions/pkcs11/test" type="c_include">
        <files mask="iot_test_pkcs11_globals.h"/>
      </source>
      <source relative_path="libraries/abstractions/secure_sockets/test" type="src">
        <files mask="iot_test_tcp.c"/>
      </source>
      <source relative_path="libraries/abstractions/wifi/test" type="src">
        <files mask="iot_test_wifi.c"/>
      </source>
      <source relative_path="libraries/abstractions/wifi/test" type="c_include">
        <files mask="iot_test_wifi.h"/>
      </source>
      <source relative_path="libraries/c_sdk/aws/shadow/test" type="src">
        <files mask="aws_test_shadow.c"/>
      </source>
      <source relative_path="libraries/c_sdk/aws/shadow/test/system" type="src">
        <files mask="aws_iot_tests_shadow_system.c"/>
      </source>
      <source relative_path="libraries/c_sdk/aws/shadow/test/unit" type="src">
        <files mask="aws_iot_tests_shadow_api.c"/>
        <files mask="aws_iot_tests_shadow_parser.c"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/common/test" type="src">
        <files mask="iot_memory_leak.c"/>
        <files mask="iot_tests_taskpool.c"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/mqtt/test" type="src">
        <files mask="iot_test_mqtt_agent.c"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/mqtt/test/access" type="c_include">
        <files mask="iot_test_access_mqtt.h"/>
      </source>
      <source exclude="true" relative_path="libraries/c_sdk/standard/mqtt/test/access" type="src">
        <files mask="iot_test_access_mqtt_api.c"/>
        <files mask="iot_test_access_mqtt_subscription.c"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/mqtt/test/mock" type="src">
        <files mask="iot_tests_mqtt_mock.c"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/mqtt/test/mock" type="c_include">
        <files mask="iot_tests_mqtt_mock.h"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/mqtt/test/system" type="src">
        <files mask="iot_tests_mqtt_system.c"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/mqtt/test/unit" type="src">
        <files mask="iot_tests_mqtt_api.c"/>
        <files mask="iot_tests_mqtt_metrics.c"/>
        <files mask="iot_tests_mqtt_receive.c"/>
        <files mask="iot_tests_mqtt_subscription.c"/>
        <files mask="iot_tests_mqtt_validate.c"/>
      </source>
      <source relative_path="libraries/freertos_plus/aws/greengrass/test" type="c_include">
        <files mask="aws_greengrass_discovery_test_access_declare.h"/>
        <files mask="aws_greengrass_discovery_test_access_define.h"/>
      </source>
      <source relative_path="libraries/freertos_plus/aws/greengrass/test" type="src">
        <files mask="aws_test_helper_secure_connect.c"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/crypto/test" type="src">
        <files mask="iot_test_crypto.c"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/tls/test" type="src">
        <files mask="iot_test_tls.c"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/tls/test" type="c_include">
        <files mask="iot_test_tls.h"/>
      </source>
      <source relative_path="tests/common" type="src">
        <files mask="aws_test.c"/>
        <files mask="aws_test_framework.c"/>
        <files mask="aws_test_runner.c"/>
        <files mask="iot_test_freertos.c"/>
        <files mask="iot_tests_network.c"/>
      </source>
      <source relative_path="tests/include" type="c_include">
        <files mask="aws_application_version.h"/>
        <files mask="aws_clientcredential.h"/>
        <files mask="aws_clientcredential_keys.h"/>
        <files mask="aws_test_framework.h"/>
        <files mask="aws_test_runner.h"/>
        <files mask="aws_test_tcp.h"/>
        <files mask="aws_test_utils.h"/>
        <files mask="aws_unity_config.h"/>
        <files mask="iot_config_common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_freertos-aws_iot_tests_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/3rdparty/unity/extras/fixture/src" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/unity/src" type="c_include"/>
        <include_path relative_path="libraries/abstractions/pkcs11/test" type="c_include"/>
        <include_path relative_path="libraries/abstractions/wifi/test" type="c_include"/>
        <include_path relative_path="libraries/c_sdk/standard/mqtt/test/access" type="c_include"/>
        <include_path relative_path="libraries/c_sdk/standard/mqtt/test/mock" type="c_include"/>
        <include_path relative_path="libraries/freertos_plus/aws/greengrass/test" type="c_include"/>
        <include_path relative_path="libraries/freertos_plus/standard/tls/test" type="c_include"/>
        <include_path relative_path="tests/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.tests.bleTestsScripts.MIMXRT595S" name="AWS IoT bleTestsScripts" brief="AWS IoT bleTestsScripts" version="202007.00.0" full_name="AWS IoT bleTestsScripts" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/abstractions/ble_hal/test/ble_test_scipts" type="script">
        <files mask="attributesCommon.py"/>
        <files mask="bleAdapter.py"/>
        <files mask="gattClient.py"/>
        <files mask="runPI.sh"/>
        <files mask="securityAgent.py"/>
        <files mask="startTests_afqp.py"/>
        <files mask="startTests_integration.py"/>
        <files mask="startTests_kpi.py"/>
        <files mask="startTests_stress.py"/>
        <files mask="test1.py"/>
        <files mask="testClass.py"/>
        <files mask="testutils.py"/>
      </source>
      <source relative_path="libraries/abstractions/ble_hal/test/include" type="c_include">
        <files mask="iot_test_ble_hal_afqp.h"/>
        <files mask="iot_test_ble_hal_common.h"/>
        <files mask="iot_test_ble_hal_config_defaults.h"/>
        <files mask="iot_test_ble_hal_integration.h"/>
        <files mask="iot_test_ble_hal_kpi.h"/>
        <files mask="iot_test_ble_hal_stress_test.h"/>
      </source>
      <source relative_path="libraries/abstractions/ble_hal/test/src" type="src">
        <files mask="iot_test_ble_hal_afqp.c"/>
        <files mask="iot_test_ble_hal_common.c"/>
        <files mask="iot_test_ble_hal_integration.c"/>
        <files mask="iot_test_ble_hal_kpi.c"/>
        <files mask="iot_test_ble_hal_stress_test.c"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/abstractions/ble_hal/test/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.tests_unused.MIMXRT595S" name="AWS IoT tests unused" brief="AWS IoT tests unused" version="202007.00.0" full_name="AWS IoT tests unused" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="tests/unit_test/linux" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="tests/unit_test/linux" type="other">
        <files mask="README.md"/>
      </source>
      <source relative_path="tests/unit_test/linux/config_files" type="c_include">
        <files mask="aws_secure_sockets_config.h"/>
        <files mask="aws_wifi_config.h"/>
        <files mask="config.h"/>
        <files mask="FreeRTOSConfig.h"/>
        <files mask="iot_ble_config.h"/>
        <files mask="iot_config.h"/>
        <files mask="iot_config_common.h"/>
        <files mask="iot_pkcs11_config.h"/>
        <files mask="portableDefs.h"/>
        <files mask="portmacro.h"/>
        <files mask="trcConfig.h"/>
        <files mask="trcSnapshotConfig.h"/>
      </source>
      <source relative_path="tests/unit_test/linux/utils" type="c_include">
        <files mask="iot_atomic.h"/>
        <files mask="task_control.h"/>
        <files mask="wait_for_event.h"/>
      </source>
      <source relative_path="tests/unit_test/linux/utils" type="src">
        <files mask="task_control.c"/>
        <files mask="wait_for_event.c"/>
      </source>
      <include_paths>
        <include_path relative_path="tests/unit_test/linux/config_files" type="c_include"/>
        <include_path relative_path="tests/unit_test/linux/utils" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.tools.MIMXRT595S" name="AWS IoT tools" brief="AWS IoT tools" version="202007.00.0" full_name="AWS IoT tools" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="tools" type="other">
        <files mask="uncrustify.cfg"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.tools.aws_config_quick_start.MIMXRT595S" name="AWS IoT aws_config_quick_start" brief="AWS IoT aws_config_quick_start" version="202007.00.0" full_name="AWS IoT aws_config_quick_start" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="tools/aws_config_quick_start" type="other">
        <files mask="aws_clientcredential.templ"/>
        <files mask="aws_clientcredential_keys.templ"/>
        <files mask="configure.json"/>
        <files mask="policy_document.templ"/>
        <files mask="README.md"/>
      </source>
      <source relative_path="tools/aws_config_quick_start" type="script">
        <files mask="certs.py"/>
        <files mask="misc.py"/>
        <files mask="policy.py"/>
        <files mask="SetupAWS.py"/>
        <files mask="thing.py"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.tools.certificate_configuration.MIMXRT595S" name="AWS IoT certificate configuration" brief="AWS IoT certificate configuration" version="202007.00.0" full_name="AWS IoT certificate configuration" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="tools/certificate_configuration" type="doc">
        <files mask="CertificateConfigurator.html"/>
        <files mask="PEMfileToCString.html"/>
      </source>
      <source relative_path="tools/certificate_configuration/js" type="script">
        <files mask="generator.js"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.tools.checks.afqp.MIMXRT595S" name="AWS IoT afqp" brief="AWS IoT afqp" version="202007.00.0" full_name="AWS IoT afqp" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="tools/checks/afqp/afqp_check" type="other">
        <files mask="license.templ"/>
        <files mask="README.md"/>
        <files mask="rules.json"/>
        <files mask="setup.cfg"/>
      </source>
      <source relative_path="tools/checks/afqp/afqp_check/src" type="script">
        <files mask="__init__.py"/>
        <files mask="afqp_check.py"/>
      </source>
      <source relative_path="tools/checks/afqp/afqp_check/tst" type="other">
        <files mask=".cproject_compliant"/>
        <files mask=".cproject_four_different_roots"/>
        <files mask=".project_compliant"/>
        <files mask=".project_invalid_project_name"/>
        <files mask=".project_multiple_roots"/>
        <files mask=".project_seven_missing_locationURI"/>
      </source>
      <source relative_path="tools/checks/afqp/afqp_check/tst" type="c_include">
        <files mask="license_test_0.h"/>
        <files mask="license_test_1.h"/>
        <files mask="license_test_unmatching.h"/>
        <files mask="missing_platform_name.h"/>
      </source>
      <source relative_path="tools/checks/afqp/afqp_check/tst" type="script">
        <files mask="test_afqp_check.py"/>
      </source>
      <include_paths>
        <include_path relative_path="tools/checks/afqp/afqp_check/tst" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.tools.checks.style.MIMXRT595S" name="AWS IoT check style" brief="AWS IoT check style" version="202007.00.0" full_name="AWS IoT check style" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="tools/checks/style/hn_check" type="other">
        <files mask="readme.md"/>
        <files mask="setup.cfg"/>
      </source>
      <source relative_path="tools/checks/style/hn_check/src" type="script">
        <files mask="__init__.py"/>
        <files mask="hn_check.py"/>
      </source>
      <source relative_path="tools/checks/style/hn_check/test" type="src">
        <files mask="source_file.c"/>
      </source>
      <source relative_path="tools/checks/style/hn_check/test" type="script">
        <files mask="test_hn_check.py"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.tools.cmake.MIMXRT595S" name="AWS IoT cmake" brief="AWS IoT cmake" version="202007.00.0" full_name="AWS IoT cmake" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="tools/cmake" type="script">
        <files mask="cbmc_recipes.cmake"/>
        <files mask="afr.cmake"/>
        <files mask="afr_board_paths.cmake"/>
        <files mask="afr_metadata.cmake"/>
        <files mask="afr_module.cmake"/>
        <files mask="afr_utils.cmake"/>
      </source>
      <source relative_path="tools/cmake/doc/img" type="image">
        <files mask="cmake-1.png"/>
        <files mask="cmake-2.png"/>
        <files mask="cmake-3.png"/>
      </source>
      <source relative_path="tools/cmake/doc" type="other">
        <files mask="porting_guide.md"/>
      </source>
      <source relative_path="tools/cmake" type="other">
        <files mask="README.md"/>
      </source>
      <source relative_path="tools/cmake/toolchains" type="script">
        <files mask="cbmc.cmake"/>
        <files mask="linux-gcc.cmake"/>
        <files mask="arm-armclang.cmake"/>
        <files mask="arm-gcc.cmake"/>
        <files mask="arm-iar.cmake"/>
        <files mask="arm-keil.cmake"/>
        <files mask="arm-segger.cmake"/>
        <files mask="arm-ti.cmake"/>
        <files mask="cc-rx.cmake"/>
        <files mask="find_compiler.cmake"/>
        <files mask="msvc.cmake"/>
        <files mask="xc32.cmake"/>
        <files mask="xtensa-esp32.cmake"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.tools.echo_server.MIMXRT595S" name="AWS IoT echo server" brief="AWS IoT echo server" version="202007.00.0" full_name="AWS IoT echo server" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="tools/echo_server" type="other">
        <files mask="config.json"/>
        <files mask="readme.md"/>
        <files mask="echo_server.go"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.tools.git.MIMXRT595S" name="AWS IoT git hooks" brief="AWS IoT git hooks" version="202007.00.0" full_name="AWS IoT git hooks" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="tools/git/hooks" type="other">
        <files mask="install_hooks.ps1"/>
        <files mask="README.md"/>
        <files mask="setup.cfg"/>
      </source>
      <source relative_path="tools/git/hooks" type="script">
        <files mask="install_hooks.sh"/>
      </source>
      <source relative_path="tools/git/hooks/src" type="script">
        <files mask="__init__.py"/>
        <files mask="commit_msg.py"/>
        <files mask="pre_commit.py"/>
      </source>
      <source relative_path="tools/git/hooks/test" type="other">
        <files mask="bad_label.md"/>
        <files mask="long_body_line.md"/>
        <files mask="long_subject.md"/>
        <files mask="merge_commit.md"/>
        <files mask="no_sep.md"/>
        <files mask="valid_commit.md"/>
      </source>
      <source relative_path="tools/git/hooks/test" type="src">
        <files mask="clean.c"/>
        <files mask="unformatted.c"/>
      </source>
      <source relative_path="tools/git/hooks/test" type="script">
        <files mask="test_commit_msg.py"/>
        <files mask="test_pre_commit.py"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.tools.ota_e2e_tests.MIMXRT595S" name="AWS IoT ota e2e tests" brief="AWS IoT ota e2e tests" version="202007.00.0" full_name="AWS IoT ota e2e tests" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="tools/ota_e2e_tests/aws_ota_test" type="script">
        <files mask="__init__.py"/>
        <files mask="aws_flash_serial_comm.py"/>
        <files mask="aws_ota_aws_agent.py"/>
        <files mask="aws_ota_project.py"/>
        <files mask="aws_ota_test_case.py"/>
        <files mask="aws_ota_test_case_2_updates_cancel_1st.py"/>
        <files mask="aws_ota_test_case_back_to_back_downloads.py"/>
        <files mask="aws_ota_test_case_back_to_back_switch_protocol.py"/>
        <files mask="aws_ota_test_case_cancel_then_update.py"/>
        <files mask="aws_ota_test_case_default_data_protocol.py"/>
        <files mask="aws_ota_test_case_disconnect_cancel_update.py"/>
        <files mask="aws_ota_test_case_disconnect_resume.py"/>
        <files mask="aws_ota_test_case_dummy_test.py"/>
        <files mask="aws_ota_test_case_factory.py"/>
        <files mask="aws_ota_test_case_greater_version.py"/>
        <files mask="aws_ota_test_case_greater_version_max_block_config.py"/>
        <files mask="aws_ota_test_case_greater_version_min_block_config.py"/>
        <files mask="aws_ota_test_case_incorrect_platform.py"/>
        <files mask="aws_ota_test_case_missing_filename.py"/>
        <files mask="aws_ota_test_case_presigned_url_expired.py"/>
        <files mask="aws_ota_test_case_previous_version.py"/>
        <files mask="aws_ota_test_case_rollback_if_unable_to_connect_after_update.py"/>
        <files mask="aws_ota_test_case_same_version.py"/>
        <files mask="aws_ota_test_case_single_byte_image.py"/>
        <files mask="aws_ota_test_case_unsigned_image.py"/>
        <files mask="aws_ota_test_case_untrusted_certificate.py"/>
        <files mask="aws_ota_test_main.py"/>
        <files mask="aws_ota_test_result.py"/>
        <files mask="aws_ota_test_runner.py"/>
      </source>
      <source relative_path="tools/ota_e2e_tests" type="other">
        <files mask="board.json"/>
        <files mask="poetry.lock"/>
        <files mask="pyproject.toml"/>
        <files mask="README.md"/>
      </source>
      <source relative_path="tools/ota_e2e_tests/credentials" type="other">
        <files mask="untrusted-ecdsa-sha256-signer.crt.pem"/>
        <files mask="untrusted-ecdsa-sha256-signer.key.pem"/>
        <files mask="untrusted-rsa-sha256-signer.crt.pem"/>
        <files mask="untrusted-rsa-sha256-signer.key.pem"/>
      </source>
      <source relative_path="tools/ota_e2e_tests" type="script">
        <files mask="ota_e2e.py"/>
      </source>
      <source relative_path="tools/ota_e2e_tests" type="doc">
        <files mask="requirements.txt"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.unused.MIMXRT595S" name="AWS IoT unused" brief="AWS IoT unused" version="1.0.0" full_name="AWS IoT unused" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/3rdparty" type="other">
        <files mask=".clang-format"/>
      </source>
      <source relative_path="libraries/3rdparty" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/abstractions/pkcs11" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/abstractions/pkcs11" type="other">
        <files mask="ReadMe.md"/>
      </source>
      <source relative_path="libraries/abstractions/platform" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/abstractions/platform/test" type="src">
        <files mask="iot_test_platform_clock.c"/>
        <files mask="iot_test_platform_threads.c"/>
      </source>
      <source relative_path="libraries/abstractions/secure_sockets" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/abstractions/secure_sockets/freertos_plus_tcp" type="src">
        <files mask="iot_secure_sockets.c"/>
      </source>
      <source relative_path="libraries/abstractions/secure_sockets/lwip" type="src">
        <files mask="iot_secure_sockets.c"/>
      </source>
      <source relative_path="libraries/abstractions/wifi" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/c_sdk/aws/shadow" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/common" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/mqtt" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/mqtt/src" type="src">
        <files mask="iot_ble_mqtt_serialize.c"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/mqtt/test/unit" type="src">
        <files mask="iot_tests_mqtt_serialize_ble.c"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/serializer" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/freertos_plus/aws/greengrass" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/crypto" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/pkcs11" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/tls" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/utils" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="tests" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="vendors" type="doc">
        <files mask="directories.txt"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.vendor.nxp.ota.evkmimxrt1060.MIMXRT595S" name="OTA PAL for EVKMIMXRT1060" brief="OTA PAL for EVKMIMXRT1060" version="202007.00.0" full_name="OTA PAL for EVKMIMXRT1060" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-aws_iot.libraries.freertos_plus.aws.ota.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.freertos_plus.standard.crypto.MIMXRT595S"/>
          <component_dependency value="component.mflash_file.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.demos.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="vendors/nxp/ota/evkmimxrt1060" type="src">
        <files mask="aws_ota_pal.c"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.vendor.nxp.ota.evkmimxrt595.MIMXRT595S" name="OTA PAL for EVKMIMXRT595" brief="OTA PAL for EVKMIMXRT595" version="202007.00.0" full_name="OTA PAL for EVKMIMXRT595" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-aws_iot.libraries.freertos_plus.aws.ota.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.freertos_plus.standard.crypto.MIMXRT595S"/>
          <component_dependency value="component.mflash_file.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.demos.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="vendors/nxp/ota/evkmimxrt595" type="src">
        <files mask="aws_ota_pal.c"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.vendor.nxp.ota.evkmimxrt685.MIMXRT595S" name="OTA PAL for EVKMIMXRT685" brief="OTA PAL for EVKMIMXRT685" version="202007.00.0" full_name="OTA PAL for EVKMIMXRT685" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-aws_iot.libraries.freertos_plus.aws.ota.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.freertos_plus.standard.crypto.MIMXRT595S"/>
          <component_dependency value="component.mflash_file.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.demos.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="vendors/nxp/ota/evkmimxrt685" type="src">
        <files mask="aws_ota_pal.c"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.vendor.nxp.pkcs11.MIMXRT595S" name="AWS IoT pkcs11 PAL" brief="AWS IoT pkcs11 PAL" version="1.0.0" full_name="AWS IoT pkcs11 PAL" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="AWS IoT/AWS porting layer - key storage" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-aws_iot.template.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.freertos_plus.standard.crypto.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.freertos_plus.standard.pkcs11.MIMXRT595S"/>
          <component_dependency value="component.mflash_file.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="vendors/nxp/pkcs11/common" type="src">
        <files mask="iot_pkcs11_pal.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_freertos-aws_iot_vendor_nxp_pkcs11_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.vendor.nxp.secure_sockets.lwip.MIMXRT595S" name="AWS IoT secure sockets lwip" brief="AWS IoT secure sockets lwip" version="1.0.0" full_name="AWS IoT secure sockets lwip" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="AWS IoT/AWS porting layer - secure sockets" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-aws_iot.libraries.abstractions.secure_sockets.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.freertos_plus.standard.tls.MIMXRT595S"/>
          <component_dependency value="middleware.lwip.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="vendors/nxp/secure_sockets/lwip" type="src">
        <files mask="iot_secure_sockets.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_freertos-aws_iot_vendor_nxp_secure_sockets_lwip_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.vendor.nxp.wifi.MIMXRT595S" name="AWS IoT Wi-Fi NXP" brief="AWS IoT Wi-Fi NXP" version="1.0.0" full_name="AWS IoT Wi-Fi NXP" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="AWS IoT/AWS porting layer - wifi" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-aws_iot.libraries.abstractions.wifi.MIMXRT595S"/>
          <component_dependency value="middleware.wifi.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-aws_iot.template.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="vendors/nxp/wifi/nxp" type="src">
        <files mask="iot_wifi.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_freertos-aws_iot_vendor_nxp_wifi_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.vendor.nxp.wifi.wiced.MIMXRT595S" name="AWS IoT Wi-Fi WICED" brief="AWS IoT Wi-Fi over WICED (modul Wireless Internet Connectivity for Embedded Devices)" version="1.0.0" full_name="AWS IoT Wi-Fi WICED" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="AWS IoT/AWS porting layer - wifi" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-aws_iot.libraries.abstractions.wifi.MIMXRT595S"/>
          <component_dependency value="middleware.wifi_wiced.MIMXRT595S"/>
          <component_dependency value="middleware.lwip.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="vendors/nxp/wifi/wiced" type="src">
        <files mask="iot_wifi.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_freertos-aws_iot_vendor_nxp_wifi_wiced_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.vendors.vendor.MIMXRT595S" name="AWS IoT vendor board template" brief="AWS IoT vendor board template" version="202007.00.0" full_name="AWS IoT vendor board template" devices="MIMXRT595S" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="vendors/vendor/boards/board/aws_demos/application_code" type="src">
        <files mask="main.c"/>
      </source>
      <source relative_path="vendors/vendor/boards/board/aws_demos/application_code/vendor_code" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <source relative_path="vendors/vendor/boards/board/aws_demos/config_files" type="c_include">
        <files mask="aws_bufferpool_config.h"/>
        <files mask="aws_demo_config.h"/>
        <files mask="aws_ggd_config.h"/>
        <files mask="aws_mqtt_config.h"/>
        <files mask="aws_ota_agent_config.h"/>
        <files mask="aws_secure_sockets_config.h"/>
        <files mask="aws_shadow_config.h"/>
        <files mask="aws_wifi_config.h"/>
        <files mask="FreeRTOSConfig.h"/>
        <files mask="FreeRTOSIPConfig.h"/>
        <files mask="iot_mqtt_agent_config.h"/>
        <files mask="iot_pkcs11_config.h"/>
        <files mask="trcConfig.h"/>
        <files mask="trcSnapshotConfig.h"/>
      </source>
      <source relative_path="vendors/vendor/boards/board/aws_tests/application_code" type="src">
        <files mask="main.c"/>
      </source>
      <source relative_path="vendors/vendor/boards/board/aws_tests/application_code/vendor_code" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <source relative_path="vendors/vendor/boards/board/aws_tests/config_files" type="c_include">
        <files mask="aws_bufferpool_config.h"/>
        <files mask="aws_ggd_config.h"/>
        <files mask="aws_mqtt_config.h"/>
        <files mask="aws_ota_agent_config.h"/>
        <files mask="aws_secure_sockets_config.h"/>
        <files mask="aws_shadow_config.h"/>
        <files mask="aws_test_ota_config.h"/>
        <files mask="aws_test_runner_config.h"/>
        <files mask="aws_test_tcp_config.h"/>
        <files mask="aws_test_wifi_config.h"/>
        <files mask="aws_wifi_config.h"/>
        <files mask="FreeRTOSConfig.h"/>
        <files mask="FreeRTOSIPConfig.h"/>
        <files mask="iot_mqtt_agent_config.h"/>
        <files mask="iot_pkcs11_config.h"/>
        <files mask="iot_test_pkcs11_config.h"/>
        <files mask="trcConfig.h"/>
        <files mask="trcSnapshotConfig.h"/>
        <files mask="unity_config.h"/>
      </source>
      <source relative_path="vendors/vendor/boards/board" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="vendors/vendor/boards/board/ports/ota" type="src">
        <files mask="aws_ota_pal.c"/>
      </source>
      <source relative_path="vendors/vendor/boards/board/ports/pkcs11" type="src">
        <files mask="iot_pkcs11_pal.c"/>
      </source>
      <source relative_path="vendors/vendor/boards/board/ports/secure_sockets" type="src">
        <files mask="iot_secure_sockets.c"/>
      </source>
      <source relative_path="vendors/vendor/boards/board/ports/wifi" type="src">
        <files mask="iot_wifi.c"/>
      </source>
      <source relative_path="vendors/vendor/driver_library/driver_library_version" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <source relative_path="vendors/vendor" type="script">
        <files mask="manifest.cmake"/>
      </source>
      <include_paths>
        <include_path relative_path="vendors/vendor/boards/board/aws_demos/config_files" type="c_include"/>
        <include_path relative_path="vendors/vendor/boards/board/aws_tests/config_files" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.MIMXRT595S" name="FreeRTOS kernel" brief="FreeRTOS kernel" version="202007.00.0" full_name="FreeRTOS kernel" devices="MIMXRT595S" user_visible="true" type="OS" package_base_path="rtos/freertos" project_base_path="freertos">
      <defines>
        <define name="FSL_RTOS_FREE_RTOS" value=""/>
        <define name="SDK_OS_FREE_RTOS" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.extension.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-kernel.template.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="freertos_kernel" type="src">
        <files mask="event_groups.c"/>
        <files mask="croutine.c"/>
        <files mask="list.c"/>
        <files mask="queue.c"/>
        <files mask="stream_buffer.c"/>
        <files mask="tasks.c"/>
        <files mask="timers.c"/>
      </source>
      <source relative_path="freertos_kernel/include" type="c_include">
        <files mask="croutine.h"/>
        <files mask="StackMacros.h"/>
        <files mask="atomic.h"/>
        <files mask="deprecated_definitions.h"/>
        <files mask="event_groups.h"/>
        <files mask="FreeRTOS.h"/>
        <files mask="list.h"/>
        <files mask="message_buffer.h"/>
        <files mask="mpu_prototypes.h"/>
        <files mask="mpu_wrappers.h"/>
        <files mask="portable.h"/>
        <files mask="projdefs.h"/>
        <files mask="queue.h"/>
        <files mask="semphr.h"/>
        <files mask="stack_macros.h"/>
        <files mask="stream_buffer.h"/>
        <files mask="task.h"/>
        <files mask="timers.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/MemMang" type="other">
        <files mask="ReadMe.url"/>
      </source>
      <source relative_path="freertos_kernel/portable" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_freertos-kernel_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="freertos_kernel/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.armv8m.MIMXRT595S" name="FreeRTOS port ARMv8M" brief="FreeRTOS port ARMv8M" version="202007.00.0" full_name="FreeRTOS port ARMv8M" devices="MIMXRT595S" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
      </dependencies>
      <source relative_path="freertos_kernel/portable/ARMv8M" type="script">
        <files mask="copy_files.py"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure" type="src">
        <files mask="port.c"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/GCC/ARM_CM33" type="src">
        <files mask="portasm.c"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/GCC/ARM_CM33" type="c_include">
        <files mask="portmacro.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/GCC/ARM_CM33_NTZ" type="src">
        <files mask="portasm.c"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/GCC/ARM_CM33_NTZ" type="c_include">
        <files mask="portmacro.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/IAR/ARM_CM33" type="asm_include">
        <files mask="portasm.s"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/IAR/ARM_CM33" type="c_include">
        <files mask="portmacro.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/IAR/ARM_CM33_NTZ" type="asm_include">
        <files mask="portasm.s"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/IAR/ARM_CM33_NTZ" type="c_include">
        <files mask="portmacro.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure" type="c_include">
        <files mask="portasm.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/context/portable/GCC/ARM_CM33" type="src">
        <files mask="secure_context_port.c"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/context/portable/IAR/ARM_CM33" type="src">
        <files mask="secure_context_port.c"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/context/portable/IAR/ARM_CM33" type="asm_include">
        <files mask="secure_context_port_asm.s"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/context" type="src">
        <files mask="secure_context.c"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/context" type="c_include">
        <files mask="secure_context.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/heap" type="src">
        <files mask="secure_heap.c"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/heap" type="c_include">
        <files mask="secure_heap.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/init" type="src">
        <files mask="secure_init.c"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/init" type="c_include">
        <files mask="secure_init.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/macros" type="c_include">
        <files mask="secure_port_macros.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <include_paths>
        <include_path relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/GCC/ARM_CM33" type="c_include"/>
        <include_path relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/GCC/ARM_CM33_NTZ" type="c_include"/>
        <include_path relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/IAR/ARM_CM33" type="c_include"/>
        <include_path relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/IAR/ARM_CM33_NTZ" type="c_include"/>
        <include_path relative_path="freertos_kernel/portable/ARMv8M/non_secure" type="c_include"/>
        <include_path relative_path="freertos_kernel/portable/ARMv8M/secure/context" type="c_include"/>
        <include_path relative_path="freertos_kernel/portable/ARMv8M/secure/heap" type="c_include"/>
        <include_path relative_path="freertos_kernel/portable/ARMv8M/secure/init" type="c_include"/>
        <include_path relative_path="freertos_kernel/portable/ARMv8M/secure/macros" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.cm33_nonsecure_port.MIMXRT595S" name="cm33 nonsecure port" brief="FreeRTOS cm33 nonsecure port" version="202007.00.0" full_name="FreeRTOS cm33 nonsecure port" devices="MIMXRT595S" category="Operating System/FreeRTOS kernel" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-kernel.template.MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="iar" relative_path="freertos_kernel/portable/IAR/ARM_CM33_NTZ/non_secure" type="src" device_cores="cm33_MIMXRT595S">
        <files mask="port.c"/>
      </source>
      <source toolchain="iar" relative_path="freertos_kernel/portable/IAR/ARM_CM33_NTZ/non_secure" type="asm_include" device_cores="cm33_MIMXRT595S">
        <files mask="portasm.s"/>
      </source>
      <source toolchain="iar" relative_path="freertos_kernel/portable/IAR/ARM_CM33_NTZ/non_secure" type="c_include" device_cores="cm33_MIMXRT595S">
        <files mask="portmacro.h"/>
        <files mask="portasm.h"/>
      </source>
      <source toolchain="armgcc mcuxpresso mdk" relative_path="freertos_kernel/portable/GCC/ARM_CM33_NTZ/non_secure" type="src" device_cores="cm33_MIMXRT595S">
        <files mask="port.c"/>
        <files mask="portasm.c"/>
      </source>
      <source toolchain="armgcc mcuxpresso mdk" relative_path="freertos_kernel/portable/GCC/ARM_CM33_NTZ/non_secure" type="c_include" device_cores="cm33_MIMXRT595S">
        <files mask="portmacro.h"/>
        <files mask="portasm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_freertos-kernel_cm33_nonsecure_port_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="freertos_kernel/portable/IAR/ARM_CM33_NTZ/non_secure" toolchain="iar" type="c_include" device_cores="cm33_MIMXRT595S"/>
        <include_path relative_path="freertos_kernel/portable/GCC/ARM_CM33_NTZ/non_secure" toolchain="armgcc mcuxpresso mdk" type="c_include" device_cores="cm33_MIMXRT595S"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.cm33_secure_port.MIMXRT595S" name="cm33 secure port" brief="FreeRTOS cm33 secure port" version="202007.00.0" full_name="FreeRTOS cm33 secure port" devices="MIMXRT595S" category="Operating System/FreeRTOS kernel" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-kernel.mpu_wrappers.MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="iar" relative_path="freertos_kernel/portable/IAR/ARM_CM33/non_secure" type="src" device_cores="cm33_MIMXRT595S">
        <files mask="port.c"/>
      </source>
      <source toolchain="iar" relative_path="freertos_kernel/portable/IAR/ARM_CM33/non_secure" type="asm_include" device_cores="cm33_MIMXRT595S">
        <files mask="portasm.s"/>
      </source>
      <source toolchain="iar" relative_path="freertos_kernel/portable/IAR/ARM_CM33/non_secure" type="c_include" device_cores="cm33_MIMXRT595S">
        <files mask="portmacro.h"/>
        <files mask="portasm.h"/>
      </source>
      <source toolchain="armgcc mcuxpresso mdk" relative_path="freertos_kernel/portable/GCC/ARM_CM33/non_secure" type="src" device_cores="cm33_MIMXRT595S">
        <files mask="port.c"/>
        <files mask="portasm.c"/>
      </source>
      <source toolchain="armgcc mcuxpresso mdk" relative_path="freertos_kernel/portable/GCC/ARM_CM33/non_secure" type="c_include" device_cores="cm33_MIMXRT595S">
        <files mask="portmacro.h"/>
        <files mask="portasm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_freertos-kernel_cm33_secure_port_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="freertos_kernel/portable/IAR/ARM_CM33/non_secure" toolchain="iar" type="c_include" device_cores="cm33_MIMXRT595S"/>
        <include_path relative_path="freertos_kernel/portable/GCC/ARM_CM33/non_secure" toolchain="armgcc mcuxpresso mdk" type="c_include" device_cores="cm33_MIMXRT595S"/>
        <include_path relative_path="freertos_kernel/portable/IAR/ARM_CM33/secure" toolchain="iar" type="c_include" device_cores="cm33_MIMXRT595S"/>
        <include_path relative_path="freertos_kernel/portable/GCC/ARM_CM33/secure" toolchain="armgcc mcuxpresso mdk" type="c_include" device_cores="cm33_MIMXRT595S"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.doc.MIMXRT595S" name="FreeRTOS doc" brief="FreeRTOS doc" version="202007.00.0" full_name="FreeRTOS doc" devices="MIMXRT595S" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="doc" type="doc">
        <files mask="AFQ Developer Guide - Board Qualification Errata.pdf"/>
        <files mask="Amazon FreeRTOS Qualification Developer Guide.pdf"/>
        <files mask="mainpage.txt"/>
      </source>
      <source relative_path="doc/config" type="other">
        <files mask="ble"/>
        <files mask="common"/>
        <files mask="https"/>
        <files mask="main"/>
        <files mask="ota"/>
        <files mask="platform"/>
        <files mask="posix"/>
        <files mask="pkcs11"/>
        <files mask="secure_sockets"/>
        <files mask="wifi"/>
      </source>
      <source relative_path="doc/config/html" type="doc">
        <files mask="footer.html"/>
        <files mask="header.html"/>
        <files mask="style.css"/>
      </source>
      <source relative_path="doc/config" type="xml">
        <files mask="layout_library.xml"/>
        <files mask="layout_main.xml"/>
      </source>
      <source relative_path="doc/freertos_port_qual" type="doc">
        <files mask="FreeRTOS_Porting_Guide.pdf"/>
        <files mask="FreeRTOS_Qualification_Guide.pdf"/>
      </source>
      <source relative_path="doc" type="other">
        <files mask="guidance.md"/>
        <files mask="README.md"/>
      </source>
      <source relative_path="doc/guide" type="doc">
        <files mask="building.txt"/>
        <files mask="developer.txt"/>
        <files mask="style.txt"/>
      </source>
      <source relative_path="doc/lib" type="doc">
        <files mask="ble.txt"/>
        <files mask="https.txt"/>
        <files mask="platform.txt"/>
        <files mask="pkcs11.txt"/>
        <files mask="secure_sockets.txt"/>
        <files mask="wifi.txt"/>
        <files mask="posix.txt"/>
      </source>
      <source relative_path="doc/plantuml/images" type="image">
        <files mask="BLE-architecture.png"/>
        <files mask="blediagram.png"/>
        <files mask="mqtt_demo.png"/>
        <files mask="mqtt_design_typicaloperation.png"/>
        <files mask="RecyclableJobStatus.png"/>
        <files mask="StaticJobStatus.png"/>
        <files mask="taskpool_design_typicaloperation.png"/>
        <files mask="https_client_async_callback_order.png"/>
        <files mask="https_client_async_workflow.png"/>
        <files mask="https_client_sync_workflow.png"/>
        <files mask="shadow_demo.png"/>
      </source>
      <source relative_path="doc/plantuml" type="other">
        <files mask="RecyclableJobStatus.pu"/>
        <files mask="StaticJobStatus.pu"/>
        <files mask="taskpool_design_typicaloperation.pu"/>
        <files mask="https_client_async_callback_order.pu"/>
      </source>
      <source relative_path="doc/plantuml" type="xml">
        <files mask="https_client_async_workflow.xml"/>
        <files mask="https_client_sync_workflow.xml"/>
      </source>
      <source relative_path="doc/user_guide" type="doc">
        <files mask="global_config.txt"/>
      </source>
      <source relative_path="doc/extra_files/https" type="doc">
        <files mask="gettysburg.txt"/>
      </source>
      <source relative_path="doc" type="script">
        <files mask="generate_doc.sh"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.extension.MIMXRT595S" name="FreeRTOS NXP extension" brief="FreeRTOS NXP extension" version="202007.00.0" full_name="FreeRTOS NXP extension" devices="MIMXRT595S" category="Operating System/FreeRTOS kernel extensions" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="freertos_kernel/include" type="c_include">
        <files mask="freertos_tasks_c_additions.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_freertos-kernel_extension_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="freertos_kernel/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.heap_1.MIMXRT595S" name="FreeRTOS heap 1" brief="FreeRTOS heap 1" version="202007.00.0" full_name="FreeRTOS heap 1" devices="MIMXRT595S" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
      </dependencies>
      <source relative_path="freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_1.c"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_2.MIMXRT595S" name="FreeRTOS heap 2" brief="FreeRTOS heap 2" version="202007.00.0" full_name="FreeRTOS heap 2" devices="MIMXRT595S" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
      </dependencies>
      <source relative_path="freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_2.c"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_3.MIMXRT595S" name="FreeRTOS heap 3" brief="FreeRTOS heap 3" version="202007.00.0" full_name="FreeRTOS heap_3" devices="MIMXRT595S" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
      </dependencies>
      <source relative_path="freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_3.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_freertos-kernel_heap_3_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_4.MIMXRT595S" name="FreeRTOS heap 4" brief="FreeRTOS heap 4" version="202007.00.0" full_name="FreeRTOS heap 4" devices="MIMXRT595S" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
      </dependencies>
      <source relative_path="freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_4.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_freertos-kernel_heap_4_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_5.MIMXRT595S" name="FreeRTOS heap 5" brief="FreeRTOS heap 5" version="202007.00.0" full_name="FreeRTOS heap 5" devices="MIMXRT595S" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
      </dependencies>
      <source relative_path="freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_5.c"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_newlib.MIMXRT595S" name="FreeRTOS heap newlib" brief="FreeRTOS heap newlib" version="202007.00.0" full_name="FreeRTOS heap newlib" devices="MIMXRT595S" category="Operating System/FreeRTOS kernel extensions" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
      </dependencies>
      <source relative_path="freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_useNewlib.c"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.mpu_wrappers.MIMXRT595S" name="FreeRTOS MPU wrappers" brief="FreeRTOS MPU wrappers" version="202007.00.0" full_name="FreeRTOS MPU wrappers" devices="MIMXRT595S" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
      </dependencies>
      <source relative_path="freertos_kernel/portable/Common" type="src">
        <files mask="mpu_wrappers.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_freertos-kernel_mpu_wrappers_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.root_doc.MIMXRT595S" name="Root FreeRTOS documents." brief="FreeRTOS root documents" version="202007.00.0" full_name="FreeRTOS root documents" devices="MIMXRT595S" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="./" type="other">
        <files mask="CHANGELOG.md"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="directories.txt"/>
        <files mask="ChangeLogKSDK.txt"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.secure_context.MIMXRT595S" name="secure context" brief="FreeRTOS Secure Context" version="202007.00.0" full_name="FreeRTOS Secure Context" devices="MIMXRT595S" category="Operating System/FreeRTOS kernel" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.template.MIMXRT595S"/>
      </dependencies>
      <source toolchain="iar" relative_path="freertos_kernel/portable/IAR/ARM_CM33/secure" type="src">
        <files mask="secure_context_port.c"/>
        <files mask="secure_context.c"/>
        <files mask="secure_init.c"/>
        <files mask="secure_heap.c"/>
      </source>
      <source toolchain="iar" relative_path="freertos_kernel/portable/IAR/ARM_CM33/secure" type="asm_include">
        <files mask="secure_context_port_asm.s"/>
      </source>
      <source toolchain="iar" relative_path="freertos_kernel/portable/IAR/ARM_CM33/secure" type="c_include">
        <files mask="secure_context.h"/>
        <files mask="secure_port_macros.h"/>
        <files mask="secure_init.h"/>
        <files mask="secure_heap.h"/>
      </source>
      <source toolchain="armgcc mcuxpresso mdk" relative_path="freertos_kernel/portable/GCC/ARM_CM33/secure" type="src">
        <files mask="secure_context_port.c"/>
        <files mask="secure_context.c"/>
        <files mask="secure_init.c"/>
        <files mask="secure_heap.c"/>
      </source>
      <source toolchain="armgcc mcuxpresso mdk" relative_path="freertos_kernel/portable/GCC/ARM_CM33/secure" type="c_include">
        <files mask="secure_context.h"/>
        <files mask="secure_port_macros.h"/>
        <files mask="secure_init.h"/>
        <files mask="secure_heap.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_freertos-kernel_secure_context_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="freertos_kernel/portable/IAR/ARM_CM33/secure" toolchain="iar" type="c_include"/>
        <include_path relative_path="freertos_kernel/portable/GCC/ARM_CM33/secure" toolchain="armgcc mcuxpresso mdk" type="c_include"/>
        <include_path relative_path="freertos_kernel/portable/IAR/ARM_CM33/non_secure" toolchain="iar" type="c_include"/>
        <include_path relative_path="freertos_kernel/portable/GCC/ARM_CM33/non_secure" toolchain="armgcc mcuxpresso mdk" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.template.MIMXRT595S" name="FreeRTOS configuration template" brief="Template configuration file to be edited by user. Provides also memory allocator (heap_x), change variant if needed." version="202007.00.0" full_name="FreeRTOS configuration template" devices="MIMXRT595S" category="Operating System/FreeRTOS kernel" user_visible="false" type="project_template" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="template/ARM_CM33" type="c_include" device_cores="cm33_MIMXRT595S">
        <files mask="FreeRTOSConfig.h"/>
      </source>
      <source exclude="true" relative_path="freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_1.c"/>
        <files mask="heap_2.c"/>
        <files mask="heap_3.c"/>
        <files mask="heap_5.c"/>
        <files mask="heap_useNewlib.c"/>
      </source>
      <source relative_path="freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_4.c"/>
      </source>
      <source toolchain="iar" relative_path="freertos_kernel/portable/IAR/ARM_CM33_NTZ/non_secure" type="src" device_cores="cm33_MIMXRT595S">
        <files mask="port.c"/>
      </source>
      <source toolchain="iar" relative_path="freertos_kernel/portable/IAR/ARM_CM33_NTZ/non_secure" type="asm_include" device_cores="cm33_MIMXRT595S">
        <files mask="portasm.s"/>
      </source>
      <source toolchain="iar" relative_path="freertos_kernel/portable/IAR/ARM_CM33_NTZ/non_secure" type="c_include" device_cores="cm33_MIMXRT595S">
        <files mask="portmacro.h"/>
        <files mask="portasm.h"/>
      </source>
      <source toolchain="armgcc mcuxpresso mdk" relative_path="freertos_kernel/portable/GCC/ARM_CM33_NTZ/non_secure" type="src" device_cores="cm33_MIMXRT595S">
        <files mask="port.c"/>
        <files mask="portasm.c"/>
      </source>
      <source toolchain="armgcc mcuxpresso mdk" relative_path="freertos_kernel/portable/GCC/ARM_CM33_NTZ/non_secure" type="c_include" device_cores="cm33_MIMXRT595S">
        <files mask="portmacro.h"/>
        <files mask="portasm.h"/>
      </source>
      <include_paths>
        <include_path relative_path="template/ARM_CM33" type="c_include" device_cores="cm33_MIMXRT595S"/>
        <include_path relative_path="freertos_kernel/portable/IAR/ARM_CM33_NTZ/non_secure" toolchain="iar" type="c_include" device_cores="cm33_MIMXRT595S"/>
        <include_path relative_path="freertos_kernel/portable/GCC/ARM_CM33_NTZ/non_secure" toolchain="armgcc mcuxpresso mdk" type="c_include" device_cores="cm33_MIMXRT595S"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.unused.MIMXRT595S" name="FreeRTOS unused" brief="FreeRTOS unused" version="202007.00.0" full_name="FreeRTOS unused" devices="MIMXRT595S" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="./" type="other">
        <files mask="LICENSE"/>
        <files mask="README.md"/>
      </source>
      <source relative_path="./" type="script">
        <files mask="PreLoad.cmake"/>
      </source>
      <source relative_path="freertos_kernel" type="doc">
        <files mask="History.txt"/>
        <files mask="readme.txt"/>
      </source>
      <source relative_path="freertos_kernel" type="other">
        <files mask="Quick_Start_Guide.url"/>
      </source>
      <source relative_path="freertos_kernel/include" type="doc">
        <files mask="stdint.readme"/>
      </source>
      <source relative_path="freertos_kernel/License" type="doc">
        <files mask="license.txt"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMClang" type="doc">
        <files mask="Use-the-GCC-ports.txt"/>
      </source>
    </component>
    <component id="middleware.libjpeg.MIMXRT595S" name="libjpeg" brief="JPEG library" version="9.2.0" revision="1" full_name="Middleware libjpeg" devices="MIMXRT595S" category="Image/JPEG library" user_visible="true" type="middleware" package_base_path="middleware/libjpeg" project_base_path="libjpeg">
      <dependencies>
        <component_dependency value="middleware.libjpeg.template.MIMXRT595S"/>
      </dependencies>
      <source relative_path="inc" type="c_include">
        <files mask="jinclude.h"/>
        <files mask="jpeglib.h"/>
        <files mask="jerror.h"/>
        <files mask="cderror.h"/>
        <files mask="jdct.h"/>
        <files mask="jmemsys.h"/>
        <files mask="cdjpeg.h"/>
        <files mask="jversion.h"/>
        <files mask="transupp.h"/>
        <files mask="jpegint.h"/>
        <files mask="jmorecfg.h"/>
      </source>
      <source relative_path="src" type="src">
        <files mask="jaricom.c"/>
        <files mask="jcapimin.c"/>
        <files mask="jcapistd.c"/>
        <files mask="jcarith.c"/>
        <files mask="jccoefct.c"/>
        <files mask="jccolor.c"/>
        <files mask="jcdctmgr.c"/>
        <files mask="jchuff.c"/>
        <files mask="jcinit.c"/>
        <files mask="jcmainct.c"/>
        <files mask="jcmarker.c"/>
        <files mask="jcmaster.c"/>
        <files mask="jcomapi.c"/>
        <files mask="jcparam.c"/>
        <files mask="jcprepct.c"/>
        <files mask="jcsample.c"/>
        <files mask="jctrans.c"/>
        <files mask="jdapimin.c"/>
        <files mask="jdapistd.c"/>
        <files mask="jdarith.c"/>
        <files mask="jdatadst.c"/>
        <files mask="jdatasrc.c"/>
        <files mask="jdcoefct.c"/>
        <files mask="jdcolor.c"/>
        <files mask="jddctmgr.c"/>
        <files mask="jdhuff.c"/>
        <files mask="jdinput.c"/>
        <files mask="jdmainct.c"/>
        <files mask="jdmarker.c"/>
        <files mask="jdmaster.c"/>
        <files mask="jdmerge.c"/>
        <files mask="jdpostct.c"/>
        <files mask="jdsample.c"/>
        <files mask="jdtrans.c"/>
        <files mask="jerror.c"/>
        <files mask="jfdctflt.c"/>
        <files mask="jfdctfst.c"/>
        <files mask="jfdctint.c"/>
        <files mask="jidctflt.c"/>
        <files mask="jidctfst.c"/>
        <files mask="jidctint.c"/>
        <files mask="jmemmgr.c"/>
        <files mask="jmemnobs.c"/>
        <files mask="jquant1.c"/>
        <files mask="jquant2.c"/>
        <files mask="jutils.c"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="change.log" hidden="true"/>
        <files mask="README" hidden="true"/>
      </source>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="ChangeLogKSDK.txt" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_libjpeg_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="inc" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.libjpeg.template.MIMXRT595S" name="LIBJPEG configuration template" brief="Template configuration file to be edited by user. Users could map the file system functions to the file system they are using." version="9.2.0" revision="1" full_name="LIBJPEG configuration template" devices="MIMXRT595S" category="Image/JPEG library" user_visible="false" type="project_template" package_base_path="middleware/libjpeg" project_base_path="source">
      <source relative_path="template" project_relative_path="./" type="c_include">
        <files mask="jconfig.h"/>
      </source>
      <include_paths>
        <include_path relative_path="template" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.littlevgl.MIMXRT595S" name="littlevgl" brief="littlevgl library" version="7.4.0" full_name="Middleware littlevgl" devices="MIMXRT595S" user_visible="false" type="middleware" package_base_path="middleware/littlevgl" project_base_path="littlevgl">
      <source relative_path="lvgl" project_relative_path="./lvgl" type="c_include">
        <files mask="lvgl.h"/>
      </source>
      <source relative_path="lvgl/src" project_relative_path="./lvgl/src" type="c_include">
        <files mask="lv_api_map.h"/>
        <files mask="lv_conf_internal.h"/>
      </source>
      <source relative_path="lvgl/src/lv_core" project_relative_path="./lvgl/src/lv_core" type="src">
        <files mask="lv_disp.c"/>
        <files mask="lv_group.c"/>
        <files mask="lv_indev.c"/>
        <files mask="lv_obj.c"/>
        <files mask="lv_refr.c"/>
        <files mask="lv_style.c"/>
      </source>
      <source relative_path="lvgl/src/lv_core" project_relative_path="./lvgl/src/lv_core" type="c_include">
        <files mask="lv_disp.h"/>
        <files mask="lv_group.h"/>
        <files mask="lv_indev.h"/>
        <files mask="lv_obj.h"/>
        <files mask="lv_obj_style_dec.h"/>
        <files mask="lv_refr.h"/>
        <files mask="lv_style.h"/>
      </source>
      <source relative_path="lvgl/src/lv_draw" project_relative_path="./lvgl/src/lv_draw" type="c_include">
        <files mask="lv_draw.h"/>
        <files mask="lv_draw_arc.h"/>
        <files mask="lv_draw_blend.h"/>
        <files mask="lv_draw_img.h"/>
        <files mask="lv_draw_label.h"/>
        <files mask="lv_draw_line.h"/>
        <files mask="lv_draw_mask.h"/>
        <files mask="lv_draw_rect.h"/>
        <files mask="lv_draw_triangle.h"/>
        <files mask="lv_img_buf.h"/>
        <files mask="lv_img_cache.h"/>
        <files mask="lv_img_decoder.h"/>
      </source>
      <source relative_path="lvgl/src/lv_draw" project_relative_path="./lvgl/src/lv_draw" type="src">
        <files mask="lv_draw_arc.c"/>
        <files mask="lv_draw_blend.c"/>
        <files mask="lv_draw_img.c"/>
        <files mask="lv_draw_label.c"/>
        <files mask="lv_draw_line.c"/>
        <files mask="lv_draw_mask.c"/>
        <files mask="lv_draw_rect.c"/>
        <files mask="lv_draw_triangle.c"/>
        <files mask="lv_img_buf.c"/>
        <files mask="lv_img_cache.c"/>
        <files mask="lv_img_decoder.c"/>
      </source>
      <source relative_path="lvgl/src/lv_font" project_relative_path="./lvgl/src/lv_font" type="src">
        <files mask="lv_font.c"/>
        <files mask="lv_font_dejavu_16_persian_hebrew.c"/>
        <files mask="lv_font_fmt_txt.c"/>
        <files mask="lv_font_loader.c"/>
        <files mask="lv_font_montserrat_12.c"/>
        <files mask="lv_font_montserrat_12_subpx.c"/>
        <files mask="lv_font_montserrat_14.c"/>
        <files mask="lv_font_montserrat_16.c"/>
        <files mask="lv_font_montserrat_18.c"/>
        <files mask="lv_font_montserrat_20.c"/>
        <files mask="lv_font_montserrat_22.c"/>
        <files mask="lv_font_montserrat_24.c"/>
        <files mask="lv_font_montserrat_26.c"/>
        <files mask="lv_font_montserrat_28.c"/>
        <files mask="lv_font_montserrat_28_compressed.c"/>
        <files mask="lv_font_montserrat_30.c"/>
        <files mask="lv_font_montserrat_32.c"/>
        <files mask="lv_font_montserrat_34.c"/>
        <files mask="lv_font_montserrat_36.c"/>
        <files mask="lv_font_montserrat_38.c"/>
        <files mask="lv_font_montserrat_40.c"/>
        <files mask="lv_font_montserrat_42.c"/>
        <files mask="lv_font_montserrat_44.c"/>
        <files mask="lv_font_montserrat_46.c"/>
        <files mask="lv_font_montserrat_48.c"/>
        <files mask="lv_font_simsun_16_cjk.c"/>
        <files mask="lv_font_unscii_8.c"/>
      </source>
      <source relative_path="lvgl/src/lv_font" project_relative_path="./lvgl/src/lv_font" type="c_include">
        <files mask="lv_font.h"/>
        <files mask="lv_font_fmt_txt.h"/>
        <files mask="lv_font_loader.h"/>
        <files mask="lv_symbol_def.h"/>
      </source>
      <source relative_path="lvgl/src/lv_gpu" project_relative_path="./lvgl/src/lv_gpu" type="c_include">
        <files mask="lv_gpu_stm32_dma2d.h"/>
        <files mask="lv_gpu_nxp_pxp.h"/>
        <files mask="lv_gpu_nxp_pxp_osa.h"/>
        <files mask="lv_gpu_nxp_vglite.h"/>
      </source>
      <source relative_path="lvgl/src/lv_gpu" project_relative_path="./lvgl/src/lv_gpu" type="src">
        <files mask="lv_gpu_nxp_pxp.c"/>
        <files mask="lv_gpu_nxp_pxp_osa.c"/>
        <files mask="lv_gpu_nxp_vglite.c"/>
      </source>
      <source relative_path="lvgl/src/lv_hal" project_relative_path="./lvgl/src/lv_hal" type="c_include">
        <files mask="lv_hal.h"/>
        <files mask="lv_hal_disp.h"/>
        <files mask="lv_hal_indev.h"/>
        <files mask="lv_hal_tick.h"/>
      </source>
      <source relative_path="lvgl/src/lv_hal" project_relative_path="./lvgl/src/lv_hal" type="src">
        <files mask="lv_hal_disp.c"/>
        <files mask="lv_hal_indev.c"/>
        <files mask="lv_hal_tick.c"/>
      </source>
      <source relative_path="lvgl/src/lv_misc" project_relative_path="./lvgl/src/lv_misc" type="src">
        <files mask="lv_anim.c"/>
        <files mask="lv_area.c"/>
        <files mask="lv_async.c"/>
        <files mask="lv_bidi.c"/>
        <files mask="lv_color.c"/>
        <files mask="lv_debug.c"/>
        <files mask="lv_fs.c"/>
        <files mask="lv_gc.c"/>
        <files mask="lv_ll.c"/>
        <files mask="lv_log.c"/>
        <files mask="lv_math.c"/>
        <files mask="lv_mem.c"/>
        <files mask="lv_printf.c"/>
        <files mask="lv_task.c"/>
        <files mask="lv_templ.c"/>
        <files mask="lv_txt.c"/>
        <files mask="lv_txt_ap.c"/>
        <files mask="lv_utils.c"/>
      </source>
      <source relative_path="lvgl/src/lv_misc" project_relative_path="./lvgl/src/lv_misc" type="c_include">
        <files mask="lv_anim.h"/>
        <files mask="lv_area.h"/>
        <files mask="lv_async.h"/>
        <files mask="lv_bidi.h"/>
        <files mask="lv_color.h"/>
        <files mask="lv_debug.h"/>
        <files mask="lv_fs.h"/>
        <files mask="lv_gc.h"/>
        <files mask="lv_ll.h"/>
        <files mask="lv_log.h"/>
        <files mask="lv_math.h"/>
        <files mask="lv_mem.h"/>
        <files mask="lv_printf.h"/>
        <files mask="lv_task.h"/>
        <files mask="lv_templ.h"/>
        <files mask="lv_txt.h"/>
        <files mask="lv_txt_ap.h"/>
        <files mask="lv_types.h"/>
        <files mask="lv_utils.h"/>
      </source>
      <source relative_path="lvgl/src/lv_themes" project_relative_path="./lvgl/src/lv_themes" type="src">
        <files mask="lv_theme.c"/>
        <files mask="lv_theme_empty.c"/>
        <files mask="lv_theme_material.c"/>
        <files mask="lv_theme_mono.c"/>
        <files mask="lv_theme_template.c"/>
      </source>
      <source relative_path="lvgl/src/lv_themes" project_relative_path="./lvgl/src/lv_themes" type="c_include">
        <files mask="lv_theme.h"/>
        <files mask="lv_theme_empty.h"/>
        <files mask="lv_theme_material.h"/>
        <files mask="lv_theme_mono.h"/>
        <files mask="lv_theme_template.h"/>
      </source>
      <source relative_path="lvgl/src/lv_widgets" project_relative_path="./lvgl/src/lv_widgets" type="src">
        <files mask="lv_anim_img.c"/>
        <files mask="lv_arc.c"/>
        <files mask="lv_bar.c"/>
        <files mask="lv_btn.c"/>
        <files mask="lv_btnmatrix.c"/>
        <files mask="lv_calendar.c"/>
        <files mask="lv_canvas.c"/>
        <files mask="lv_chart.c"/>
        <files mask="lv_checkbox.c"/>
        <files mask="lv_cont.c"/>
        <files mask="lv_cpicker.c"/>
        <files mask="lv_dropdown.c"/>
        <files mask="lv_gauge.c"/>
        <files mask="lv_img.c"/>
        <files mask="lv_imgbtn.c"/>
        <files mask="lv_keyboard.c"/>
        <files mask="lv_label.c"/>
        <files mask="lv_led.c"/>
        <files mask="lv_line.c"/>
        <files mask="lv_linemeter.c"/>
        <files mask="lv_list.c"/>
        <files mask="lv_msgbox.c"/>
        <files mask="lv_objmask.c"/>
        <files mask="lv_objx_templ.c"/>
        <files mask="lv_page.c"/>
        <files mask="lv_roller.c"/>
        <files mask="lv_slider.c"/>
        <files mask="lv_spinbox.c"/>
        <files mask="lv_spinner.c"/>
        <files mask="lv_switch.c"/>
        <files mask="lv_table.c"/>
        <files mask="lv_tabview.c"/>
        <files mask="lv_textarea.c"/>
        <files mask="lv_tileview.c"/>
        <files mask="lv_win.c"/>
      </source>
      <source relative_path="lvgl/src/lv_widgets" project_relative_path="./lvgl/src/lv_widgets" type="c_include">
        <files mask="lv_anim_img.h"/>
        <files mask="lv_arc.h"/>
        <files mask="lv_bar.h"/>
        <files mask="lv_btn.h"/>
        <files mask="lv_btnmatrix.h"/>
        <files mask="lv_calendar.h"/>
        <files mask="lv_canvas.h"/>
        <files mask="lv_chart.h"/>
        <files mask="lv_checkbox.h"/>
        <files mask="lv_cont.h"/>
        <files mask="lv_cpicker.h"/>
        <files mask="lv_dropdown.h"/>
        <files mask="lv_gauge.h"/>
        <files mask="lv_img.h"/>
        <files mask="lv_imgbtn.h"/>
        <files mask="lv_keyboard.h"/>
        <files mask="lv_label.h"/>
        <files mask="lv_led.h"/>
        <files mask="lv_line.h"/>
        <files mask="lv_linemeter.h"/>
        <files mask="lv_list.h"/>
        <files mask="lv_msgbox.h"/>
        <files mask="lv_objmask.h"/>
        <files mask="lv_objx_templ.h"/>
        <files mask="lv_page.h"/>
        <files mask="lv_roller.h"/>
        <files mask="lv_slider.h"/>
        <files mask="lv_spinbox.h"/>
        <files mask="lv_spinner.h"/>
        <files mask="lv_switch.h"/>
        <files mask="lv_table.h"/>
        <files mask="lv_tabview.h"/>
        <files mask="lv_textarea.h"/>
        <files mask="lv_tileview.h"/>
        <files mask="lv_win.h"/>
      </source>
      <source exclude="true" relative_path="lvgl/examples/porting" project_relative_path="./lvgl/examples/porting" type="src">
        <files mask="lv_port_disp_template.c" hidden="true"/>
        <files mask="lv_port_fs_template.c" hidden="true"/>
        <files mask="lv_port_indev_template.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="lvgl/examples/porting" project_relative_path="./lvgl/examples/porting" type="c_include">
        <files mask="lv_port_disp_template.h" hidden="true"/>
        <files mask="lv_port_fs_template.h" hidden="true"/>
        <files mask="lv_port_indev_template.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="lvgl" project_relative_path="./lvgl" type="doc">
        <files mask="LICENCE.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="lvgl/docs" project_relative_path="./lvgl/docs" type="other">
        <files mask="ROADMAP.md" hidden="true"/>
        <files mask="CODING_STYLE.md" hidden="true"/>
        <files mask="CONTRIBUTING.md" hidden="true"/>
      </source>
      <source exclude="true" relative_path="lvgl" project_relative_path="./lvgl" type="other">
        <files mask="README.md" hidden="true"/>
      </source>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="ChangeLogKSDK.txt" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_littlevgl_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="lvgl" type="c_include"/>
        <include_path relative_path="lvgl/src" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.MIMXRT595S" name="lwIP" brief="lwIP - A Lightweight TCP/IP Stack" version="2.2.0" revision="3" full_name="lwIP" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.template.MIMXRT595S"/>
          <component_dependency value="utility.debug_console.MIMXRT595S"/>
          <any_of>
            <component_dependency value="middleware.lwip.empty_ethernetif.MIMXRT595S"/>
            <component_dependency value="middleware.wifi.MIMXRT595S"/>
            <component_dependency value="middleware.wifi_wiced.AW_NM372SM.MIMXRT595S"/>
            <component_dependency value="middleware.wifi_wiced.MURATA_TYPE1DX.MIMXRT595S"/>
            <component_dependency value="middleware.wifi_wiced.MURATA_TYPE1LV.MIMXRT595S"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="CHANGELOG" hidden="true"/>
        <files mask="FILES" hidden="true"/>
        <files mask="COPYING" hidden="true"/>
        <files mask="BUILDING" hidden="true"/>
        <files mask="UPGRADING" hidden="true"/>
        <files mask="FEATURES" hidden="true"/>
        <files mask="README" hidden="true"/>
        <files mask="ChangeLogKSDK.txt" hidden="true"/>
      </source>
      <source relative_path="doc" type="doc">
        <files mask="mdns.txt" hidden="true"/>
        <files mask="mqtt_client.txt" hidden="true"/>
        <files mask="ppp.txt" hidden="true"/>
        <files mask="savannah.txt" hidden="true"/>
        <files mask="contrib.txt" hidden="true"/>
        <files mask="FILES" hidden="true"/>
      </source>
      <source exclude="true" relative_path="doc" type="doc">
        <files mask="ZeroCopyRx.c" hidden="true"/>
        <files mask="NO_SYS_SampleCode.c" hidden="true"/>
      </source>
      <source relative_path="doc/doxygen" type="doc">
        <files mask="main_page.h" hidden="true"/>
        <files mask="generate.sh" hidden="true"/>
        <files mask="lwip.Doxyfile.cmake.in" hidden="true"/>
        <files mask="lwip.Doxyfile" hidden="true"/>
        <files mask="generate.bat" hidden="true"/>
      </source>
      <source relative_path="doc/doxygen/output" type="doc">
        <files mask="index.html" hidden="true"/>
      </source>
      <source relative_path="port" type="src">
        <files mask="sys_arch.c"/>
      </source>
      <source relative_path="port/arch" type="c_include">
        <files mask="cc.h"/>
        <files mask="perf.h"/>
        <files mask="sys_arch.h"/>
      </source>
      <source relative_path="src" type="doc">
        <files mask="FILES" hidden="true"/>
      </source>
      <source relative_path="src/api" type="src">
        <files mask="sockets.c"/>
        <files mask="netifapi.c"/>
        <files mask="netdb.c"/>
        <files mask="netbuf.c"/>
        <files mask="tcpip.c"/>
        <files mask="api_msg.c"/>
        <files mask="err.c"/>
        <files mask="if_api.c"/>
        <files mask="api_lib.c"/>
      </source>
      <source relative_path="src/core" type="src">
        <files mask="memp.c"/>
        <files mask="def.c"/>
        <files mask="ip.c"/>
        <files mask="pbuf.c"/>
        <files mask="altcp.c"/>
        <files mask="tcp_out.c"/>
        <files mask="raw.c"/>
        <files mask="altcp_tcp.c"/>
        <files mask="sys.c"/>
        <files mask="init.c"/>
        <files mask="inet_chksum.c"/>
        <files mask="timeouts.c"/>
        <files mask="tcp_in.c"/>
        <files mask="netif.c"/>
        <files mask="mem.c"/>
        <files mask="udp.c"/>
        <files mask="tcp.c"/>
        <files mask="stats.c"/>
        <files mask="dns.c"/>
        <files mask="altcp_alloc.c"/>
      </source>
      <source relative_path="src/core/ipv6" type="src">
        <files mask="ethip6.c"/>
        <files mask="dhcp6.c"/>
        <files mask="ip6_addr.c"/>
        <files mask="nd6.c"/>
        <files mask="mld6.c"/>
        <files mask="icmp6.c"/>
        <files mask="ip6_frag.c"/>
        <files mask="ip6.c"/>
        <files mask="inet6.c"/>
      </source>
      <source relative_path="src/core/ipv4" type="src">
        <files mask="dhcp.c"/>
        <files mask="ip4.c"/>
        <files mask="autoip.c"/>
        <files mask="icmp.c"/>
        <files mask="acd.c"/>
        <files mask="etharp.c"/>
        <files mask="ip4_addr.c"/>
        <files mask="igmp.c"/>
        <files mask="ip4_frag.c"/>
      </source>
      <source relative_path="src/include/compat/stdc" type="c_include">
        <files mask="errno.h"/>
      </source>
      <source relative_path="src/include/compat/posix" type="c_include">
        <files mask="netdb.h"/>
      </source>
      <source relative_path="src/include/compat/posix/sys" type="c_include">
        <files mask="socket.h"/>
      </source>
      <source relative_path="src/include/compat/posix/net" type="c_include">
        <files mask="if.h"/>
      </source>
      <source relative_path="src/include/compat/posix/arpa" type="c_include">
        <files mask="inet.h"/>
      </source>
      <source relative_path="src/include/lwip" type="c_include">
        <files mask="inet_chksum.h"/>
        <files mask="ip6.h"/>
        <files mask="udp.h"/>
        <files mask="def.h"/>
        <files mask="mld6.h"/>
        <files mask="err.h"/>
        <files mask="ip4.h"/>
        <files mask="opt.h"/>
        <files mask="errno.h"/>
        <files mask="debug.h"/>
        <files mask="icmp.h"/>
        <files mask="netif.h"/>
        <files mask="sio.h"/>
        <files mask="ip6_zone.h"/>
        <files mask="igmp.h"/>
        <files mask="netdb.h"/>
        <files mask="dhcp.h"/>
        <files mask="altcp_tls.h"/>
        <files mask="altcp_tcp.h"/>
        <files mask="ip_addr.h"/>
        <files mask="inet.h"/>
        <files mask="tcp.h"/>
        <files mask="api.h"/>
        <files mask="arch.h"/>
        <files mask="autoip.h"/>
        <files mask="ip4_addr.h"/>
        <files mask="altcp.h"/>
        <files mask="mem.h"/>
        <files mask="sys.h"/>
        <files mask="init.h"/>
        <files mask="dns.h"/>
        <files mask="tcpbase.h"/>
        <files mask="stats.h"/>
        <files mask="icmp6.h"/>
        <files mask="netifapi.h"/>
        <files mask="ethip6.h"/>
        <files mask="snmp.h"/>
        <files mask="raw.h"/>
        <files mask="if_api.h"/>
        <files mask="tcpip.h"/>
        <files mask="ip6_frag.h"/>
        <files mask="nd6.h"/>
        <files mask="ip.h"/>
        <files mask="pbuf.h"/>
        <files mask="acd.h"/>
        <files mask="ip4_frag.h"/>
        <files mask="timeouts.h"/>
        <files mask="dhcp6.h"/>
        <files mask="sockets.h"/>
        <files mask="netbuf.h"/>
        <files mask="etharp.h"/>
        <files mask="ip6_addr.h"/>
        <files mask="memp.h"/>
      </source>
      <source relative_path="src/include/lwip/priv" type="c_include">
        <files mask="altcp_priv.h"/>
        <files mask="mem_priv.h"/>
        <files mask="memp_priv.h"/>
        <files mask="memp_std.h"/>
        <files mask="api_msg.h"/>
        <files mask="nd6_priv.h"/>
        <files mask="tcpip_priv.h"/>
        <files mask="tcp_priv.h"/>
        <files mask="raw_priv.h"/>
        <files mask="sockets_priv.h"/>
      </source>
      <source relative_path="src/include/lwip/prot" type="c_include">
        <files mask="ip6.h"/>
        <files mask="udp.h"/>
        <files mask="mld6.h"/>
        <files mask="ip4.h"/>
        <files mask="icmp.h"/>
        <files mask="igmp.h"/>
        <files mask="dhcp.h"/>
        <files mask="tcp.h"/>
        <files mask="autoip.h"/>
        <files mask="iana.h"/>
        <files mask="ieee.h"/>
        <files mask="dns.h"/>
        <files mask="icmp6.h"/>
        <files mask="ethernet.h"/>
        <files mask="nd6.h"/>
        <files mask="ip.h"/>
        <files mask="acd.h"/>
        <files mask="dhcp6.h"/>
        <files mask="etharp.h"/>
      </source>
      <source relative_path="src/include/netif" type="c_include">
        <files mask="bridgeif.h"/>
        <files mask="zepif.h"/>
        <files mask="lowpan6.h"/>
        <files mask="ieee802154.h"/>
        <files mask="ethernet.h"/>
        <files mask="lowpan6_common.h"/>
        <files mask="lowpan6_opts.h"/>
        <files mask="bridgeif_opts.h"/>
        <files mask="slipif.h"/>
        <files mask="lowpan6_ble.h"/>
        <files mask="etharp.h"/>
      </source>
      <source relative_path="src/include/netif/ppp" type="c_include">
        <files mask="ipv6cp.h"/>
        <files mask="pppapi.h"/>
        <files mask="magic.h"/>
        <files mask="ppp.h"/>
        <files mask="upap.h"/>
        <files mask="mppe.h"/>
        <files mask="pppol2tp.h"/>
        <files mask="pppoe.h"/>
        <files mask="ipcp.h"/>
        <files mask="pppdebug.h"/>
        <files mask="eap.h"/>
        <files mask="pppos.h"/>
        <files mask="ppp_opts.h"/>
        <files mask="pppcrypt.h"/>
        <files mask="vj.h"/>
        <files mask="chap-new.h"/>
        <files mask="eui64.h"/>
        <files mask="chap_ms.h"/>
        <files mask="ccp.h"/>
        <files mask="ecp.h"/>
        <files mask="lcp.h"/>
        <files mask="fsm.h"/>
        <files mask="ppp_impl.h"/>
        <files mask="chap-md5.h"/>
      </source>
      <source relative_path="src/include/netif/ppp/polarssl" type="c_include">
        <files mask="sha1.h"/>
        <files mask="des.h"/>
        <files mask="md5.h"/>
        <files mask="md4.h"/>
        <files mask="arc4.h"/>
      </source>
      <source relative_path="src/netif" type="src">
        <files mask="lowpan6.c"/>
        <files mask="ethernet.c"/>
        <files mask="bridgeif.c"/>
        <files mask="bridgeif_fdb.c"/>
        <files mask="zepif.c"/>
        <files mask="lowpan6_common.c"/>
        <files mask="lowpan6_ble.c"/>
        <files mask="slipif.c"/>
      </source>
      <source relative_path="src/netif" type="doc">
        <files mask="FILES" hidden="true"/>
      </source>
      <source relative_path="src/netif/ppp" type="src">
        <files mask="pppol2tp.c"/>
        <files mask="mppe.c"/>
        <files mask="vj.c"/>
        <files mask="pppcrypt.c"/>
        <files mask="ppp.c"/>
        <files mask="eap.c"/>
        <files mask="chap-md5.c"/>
        <files mask="lcp.c"/>
        <files mask="pppos.c"/>
        <files mask="ipcp.c"/>
        <files mask="fsm.c"/>
        <files mask="ccp.c"/>
        <files mask="utils.c"/>
        <files mask="chap-new.c"/>
        <files mask="demand.c"/>
        <files mask="pppoe.c"/>
        <files mask="ipv6cp.c"/>
        <files mask="lwip_ecp.c"/>
        <files mask="multilink.c"/>
        <files mask="eui64.c"/>
        <files mask="magic.c"/>
        <files mask="upap.c"/>
        <files mask="pppapi.c"/>
        <files mask="chap_ms.c"/>
        <files mask="auth.c"/>
      </source>
      <source relative_path="src/netif/ppp" type="doc">
        <files mask="PPPD_FOLLOWUP" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/netif/ppp/polarssl" type="src">
        <files mask="arc4.c" hidden="true"/>
        <files mask="md5.c" hidden="true"/>
        <files mask="md4.c" hidden="true"/>
        <files mask="sha1.c" hidden="true"/>
        <files mask="des.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/netif/ppp/polarssl" type="doc">
        <files mask="README" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_lwip_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="src" type="c_include"/>
        <include_path relative_path="src/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.httpd.MIMXRT595S" name="lwIP_HTTPD" brief="lwIP HTTP Daemon" version="2.2.0" revision="3" full_name="lwIP HTTP Daemon" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT595S"/>
          <component_dependency value="middleware.lwip.apps.httpd.support.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="src/apps/http" type="src">
        <files mask="httpd.c"/>
      </source>
    </component>
    <component id="middleware.lwip.apps.httpd.support.MIMXRT595S" name="lwIP_HTTPD_support" brief="lwIP HTTP Daemon Implementation Support Files" version="2.2.0" revision="3" full_name="lwIP HTTP Daemon Implementation Support Files" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <component_dependency value="middleware.lwip.MIMXRT595S"/>
      </dependencies>
      <source relative_path="src/apps/http" type="src">
        <files mask="fs.c"/>
      </source>
      <source relative_path="src/apps/http" type="c_include">
        <files mask="fsdata.h"/>
        <files mask="httpd_structs.h"/>
      </source>
      <source exclude="true" relative_path="src/apps/http" type="src">
        <files mask="fsdata.c" hidden="true"/>
      </source>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="fs.h"/>
        <files mask="httpd.h"/>
        <files mask="httpd_opts.h"/>
      </source>
      <source relative_path="src/apps/http/fs" type="other">
        <files mask="index.html" hidden="true"/>
        <files mask="404.html" hidden="true"/>
      </source>
      <source relative_path="src/apps/http/fs/img" type="other">
        <files mask="sics.gif" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/http/makefsdata" type="c_include">
        <files mask="tinydir.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/http/makefsdata" type="src">
        <files mask="makefsdata.c" hidden="true"/>
      </source>
      <source relative_path="src/apps/http/makefsdata" type="doc">
        <files mask="readme.txt" hidden="true"/>
      </source>
      <source relative_path="src/apps/http/makefsdata" type="other">
        <files mask="makefsdata" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/apps/http" type="c_include"/>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.httpsrv.MIMXRT595S" name="lwIP_HTTP_srv" brief="lwIP HTTP Server Implementation" version="2.2.0" revision="3" full_name="lwIP HTTP Server" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="src/apps/httpsrv" type="src">
        <files mask="httpsrv.c"/>
        <files mask="httpsrv_base64.c"/>
        <files mask="httpsrv_fs.c"/>
        <files mask="httpsrv_script.c"/>
        <files mask="httpsrv_sha1.c"/>
        <files mask="httpsrv_supp.c"/>
        <files mask="httpsrv_task.c"/>
        <files mask="httpsrv_tls.c"/>
        <files mask="httpsrv_utf8.c"/>
        <files mask="httpsrv_ws.c"/>
        <files mask="httpsrv_ws_api.c"/>
      </source>
      <source relative_path="src/apps/httpsrv" type="c_include">
        <files mask="httpsrv.h"/>
        <files mask="httpsrv_base64.h"/>
        <files mask="httpsrv_config.h"/>
        <files mask="httpsrv_fs.h"/>
        <files mask="httpsrv_port.h"/>
        <files mask="httpsrv_prv.h"/>
        <files mask="httpsrv_script.h"/>
        <files mask="httpsrv_sha1.h"/>
        <files mask="httpsrv_supp.h"/>
        <files mask="httpsrv_tls.h"/>
        <files mask="httpsrv_utf8.h"/>
        <files mask="httpsrv_ws.h"/>
        <files mask="httpsrv_ws_prv.h"/>
      </source>
      <source relative_path="src/apps/httpsrv/mkfs" type="other">
        <files mask="mkfs.pl" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_lwip_apps_httpsrv_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/apps/httpsrv" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.httpssrv.MIMXRT595S" name="lwIP_HTTPS_srv" brief="lwIP HTTPS Server Implementation" version="2.2.0" revision="3" full_name="lwIP HTTPS Server" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.apps.httpsrv.MIMXRT595S"/>
          <component_dependency value="middleware.mbedtls.MIMXRT595S"/>
        </all>
      </dependencies>
      <include_paths>
        <include_path relative_path="src/apps/httpsrv" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.lwiperf.MIMXRT595S" name="lwIP_IPERF" brief="lwIP IPERF Implementation" version="2.2.0" revision="3" full_name="lwIP IPERF" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT595S"/>
          <any_of>
            <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
            <component_dependency value="middleware.baremetal.MIMXRT595S"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="src/apps/lwiperf" type="src">
        <files mask="lwiperf.c"/>
      </source>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="lwiperf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_lwip_apps_lwiperf_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.mdns.MIMXRT595S" name="lwIP_MDNS" brief="lwIP mDNS Implementation" version="2.2.0" revision="3" full_name="lwIP mDNS" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <component_dependency value="middleware.lwip.MIMXRT595S"/>
      </dependencies>
      <source relative_path="src/apps/mdns" type="src">
        <files mask="mdns.c"/>
        <files mask="mdns_domain.c"/>
        <files mask="mdns_out.c"/>
      </source>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="mdns.h"/>
        <files mask="mdns_domain.h"/>
        <files mask="mdns_priv.h"/>
        <files mask="mdns_opts.h"/>
        <files mask="mdns_out.h"/>
      </source>
      <include_paths>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.mqtt.MIMXRT595S" name="lwIP_MQTT" brief="lwIP MQTT Client" version="2.2.0" revision="3" full_name="lwIP MQTT Client" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <component_dependency value="middleware.lwip.MIMXRT595S"/>
      </dependencies>
      <source relative_path="src/apps/mqtt" type="src">
        <files mask="mqtt.c"/>
      </source>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="mqtt.h"/>
        <files mask="mqtt_opts.h"/>
        <files mask="mqtt_priv.h"/>
      </source>
      <include_paths>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.sntp.MIMXRT595S" name="lwIP_SNTP" brief="lwIP SNTP" version="2.2.0" revision="3" full_name="lwIP SNTP" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <component_dependency value="middleware.lwip.MIMXRT595S"/>
      </dependencies>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="sntp.h"/>
        <files mask="sntp_opts.h"/>
      </source>
      <source relative_path="src/apps/sntp" type="src">
        <files mask="sntp.c"/>
      </source>
      <include_paths>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.ping.MIMXRT595S" name="lwIP_ping" brief="lwIP Ping Sender contrib" version="2.2.0" revision="3" full_name="lwIP Ping Sender" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <component_dependency value="middleware.lwip.MIMXRT595S"/>
      </dependencies>
      <source relative_path="contrib/apps/ping" type="c_include">
        <files mask="ping.h"/>
      </source>
      <source relative_path="contrib/apps/ping" type="src">
        <files mask="ping.c"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/ping" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.tcpecho.MIMXRT595S" name="lwIP_tcpecho" brief="lwIP TCP Echo contrib" version="2.2.0" revision="3" full_name="lwIP TCP Echo" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <component_dependency value="middleware.lwip.MIMXRT595S"/>
      </dependencies>
      <source relative_path="contrib/apps/tcpecho" type="c_include">
        <files mask="tcpecho.h"/>
      </source>
      <source relative_path="contrib/apps/tcpecho" type="src">
        <files mask="tcpecho.c"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/tcpecho" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.tcpecho_raw.MIMXRT595S" name="lwIP_tcpecho_raw" brief="lwIP TCP Echo Raw API contrib" version="2.2.0" revision="3" full_name="lwIP TCP Echo Raw API" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <component_dependency value="middleware.lwip.MIMXRT595S"/>
      </dependencies>
      <source relative_path="contrib/apps/tcpecho_raw" type="src">
        <files mask="tcpecho_raw.c"/>
      </source>
      <source relative_path="contrib/apps/tcpecho_raw" type="c_include">
        <files mask="tcpecho_raw.h"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/tcpecho_raw" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.udpecho.MIMXRT595S" name="lwIP_udpecho" brief="lwIP UDP Echo contrib" version="2.2.0" revision="3" full_name="lwIP UDP Echo" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <component_dependency value="middleware.lwip.MIMXRT595S"/>
      </dependencies>
      <source relative_path="contrib/apps/udpecho" type="c_include">
        <files mask="udpecho.h"/>
      </source>
      <source relative_path="contrib/apps/udpecho" type="src">
        <files mask="udpecho.c"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/udpecho" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.udpecho_raw.MIMXRT595S" name="lwIP_udpecho_raw" brief="lwIP UDP Echo Raw API contrib" version="2.2.0" revision="3" full_name="lwIP UDP Echo Raw API" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <component_dependency value="middleware.lwip.MIMXRT595S"/>
      </dependencies>
      <source relative_path="contrib/apps/udpecho_raw" type="src">
        <files mask="udpecho_raw.c"/>
      </source>
      <source relative_path="contrib/apps/udpecho_raw" type="c_include">
        <files mask="udpecho_raw.h"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/udpecho_raw" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.empty_ethernetif.MIMXRT595S" name="lwIP_empty_ethernetif" brief="lwIP Empty Ethernet Layer (do not use)" version="2.2.0" revision="3" full_name="lwIP Empty Ethernet Layer (do not use)" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT595S"/>
          <component_dependency value="middleware.lwip.template.MIMXRT595S"/>
        </all>
      </dependencies>
    </component>
    <component id="middleware.lwip.template.MIMXRT595S" name="lwIP_template" brief="lwIP Template" version="2.2.0" revision="3" full_name="lwIP Template Application" devices="MIMXRT595S" user_visible="false" type="project_template" package_base_path="middleware/lwip" project_base_path="lwip">
      <source relative_path="template" type="c_include">
        <files mask="lwipopts.h"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.unused_files.MIMXRT595S" name="lwIP_unused_files" brief="lwIP files unused by projects" version="2.2.0" revision="3" full_name="lwIP - Files Unused by Projects" devices="MIMXRT595S" user_visible="false" type="other" package_base_path="middleware/lwip" project_base_path="lwip">
      <source exclude="true" relative_path="./" type="other">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src" type="other">
        <files mask="Filelists.cmake" hidden="true"/>
        <files mask="Filelists.mk" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/sockets" type="src">
        <files mask="sockets_stresstest.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/sockets" type="c_include">
        <files mask="sockets_stresstest.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/fuzz" type="src">
        <files mask="fuzz3.c" hidden="true"/>
        <files mask="fuzz_common.c" hidden="true"/>
        <files mask="fuzz2.c" hidden="true"/>
        <files mask="fuzz.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/fuzz" type="c_include">
        <files mask="config.h" hidden="true"/>
        <files mask="lwipopts.h" hidden="true"/>
        <files mask="fuzz_common.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/fuzz/inputs/arp" type="binary">
        <files mask="arp_req.bin" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/fuzz/inputs/ipv6" type="binary">
        <files mask="neighbor_solicitation.bin" hidden="true"/>
        <files mask="router_adv.bin" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/fuzz/inputs/icmp" type="binary">
        <files mask="icmp_ping.bin" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/fuzz/inputs/udp" type="binary">
        <files mask="udp_port_5000.bin" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/fuzz/inputs/tcp" type="binary">
        <files mask="tcp_syn.bin" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/fuzz" type="other">
        <files mask="Makefile" hidden="true"/>
        <files mask="README" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/fuzz" type="script">
        <files mask="output_to_pcap.sh" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/arch" type="c_include">
        <files mask="sys_arch.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/arch" type="src">
        <files mask="sys_arch.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit" type="c_include">
        <files mask="lwip_check.h" hidden="true"/>
        <files mask="lwipopts.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/ip6" type="c_include">
        <files mask="test_ip6.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/ip6" type="src">
        <files mask="test_ip6.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit" type="script">
        <files mask="Filelists.cmake" hidden="true"/>
        <files mask="Filelists.mk" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/dhcp" type="src">
        <files mask="test_dhcp.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/dhcp" type="c_include">
        <files mask="test_dhcp.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/mqtt" type="c_include">
        <files mask="test_mqtt.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/mqtt" type="src">
        <files mask="test_mqtt.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/api" type="c_include">
        <files mask="test_sockets.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/api" type="src">
        <files mask="test_sockets.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/udp" type="src">
        <files mask="test_udp.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/udp" type="c_include">
        <files mask="test_udp.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/tcp" type="c_include">
        <files mask="test_tcp_oos.h" hidden="true"/>
        <files mask="test_tcp.h" hidden="true"/>
        <files mask="tcp_helper.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/tcp" type="src">
        <files mask="tcp_helper.c" hidden="true"/>
        <files mask="test_tcp.c" hidden="true"/>
        <files mask="test_tcp_oos.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/mdns" type="c_include">
        <files mask="test_mdns.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/mdns" type="src">
        <files mask="test_mdns.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit" type="src">
        <files mask="lwip_unittests.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/etharp" type="c_include">
        <files mask="test_etharp.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/etharp" type="src">
        <files mask="test_etharp.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/ip4" type="c_include">
        <files mask="test_ip4.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/ip4" type="src">
        <files mask="test_ip4.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/core" type="src">
        <files mask="test_timers.c" hidden="true"/>
        <files mask="test_mem.c" hidden="true"/>
        <files mask="test_dns.c" hidden="true"/>
        <files mask="test_netif.c" hidden="true"/>
        <files mask="test_def.c" hidden="true"/>
        <files mask="test_pbuf.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/core" type="c_include">
        <files mask="test_pbuf.h" hidden="true"/>
        <files mask="test_timers.h" hidden="true"/>
        <files mask="test_mem.h" hidden="true"/>
        <files mask="test_dns.h" hidden="true"/>
        <files mask="test_def.h" hidden="true"/>
        <files mask="test_netif.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib" type="script">
        <files mask="Filelists.cmake" hidden="true"/>
        <files mask="Filelists.mk" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/addons/tcp_isn" type="src">
        <files mask="tcp_isn.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/addons/tcp_isn" type="c_include">
        <files mask="tcp_isn.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/addons/ipv6_static_routing" type="c_include">
        <files mask="ip6_route_table.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/addons/ipv6_static_routing" type="src">
        <files mask="ip6_route_table.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/addons/ipv6_static_routing" type="other">
        <files mask="README" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/addons/netconn/external_resolve" type="c_include">
        <files mask="dnssd.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/addons/netconn/external_resolve" type="src">
        <files mask="dnssd.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/addons/tcp_md5" type="src">
        <files mask="tcp_md5.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/addons/tcp_md5" type="other">
        <files mask="README" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/addons/tcp_md5" type="c_include">
        <files mask="tcp_md5.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/apps/chargen" type="src">
        <files mask="chargen.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/apps/chargen" type="c_include">
        <files mask="chargen.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/apps/chargen" type="other">
        <files mask="README" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/apps/httpserver" type="src">
        <files mask="httpserver-netconn.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/apps/httpserver" type="other">
        <files mask="README" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/apps/httpserver" type="c_include">
        <files mask="httpserver-netconn.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/apps/netio" type="src">
        <files mask="netio.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/apps/netio" type="c_include">
        <files mask="netio.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/apps/rtp" type="c_include">
        <files mask="rtpdata.h" hidden="true"/>
        <files mask="rtp.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/apps/rtp" type="src">
        <files mask="rtp.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/apps/shell" type="src">
        <files mask="shell.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/apps/shell" type="c_include">
        <files mask="shell.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/apps/socket_examples" type="src">
        <files mask="socket_examples.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/apps/socket_examples" type="c_include">
        <files mask="socket_examples.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/Coverity" type="src">
        <files mask="coverity.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/httpd/genfiles_example" type="src">
        <files mask="genfiles_example.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/httpd/genfiles_example" type="c_include">
        <files mask="genfiles_example.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/httpd/post_example" type="src">
        <files mask="post_example.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/httpd/https_example" type="c_include">
        <files mask="https_example.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/httpd/https_example" type="src">
        <files mask="https_example.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/httpd/cgi_example" type="c_include">
        <files mask="cgi_example.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/httpd/cgi_example" type="src">
        <files mask="cgi_example.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/httpd/fs_example" type="c_include">
        <files mask="fs_example.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/httpd/fs_example" type="src">
        <files mask="fs_example.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/httpd/examples_fs" type="doc">
        <files mask="loginfail.html" hidden="true"/>
        <files mask="index.html" hidden="true"/>
        <files mask="session.html" hidden="true"/>
        <files mask="login.html" hidden="true"/>
        <files mask="404.html" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/httpd/examples_fs" type="other">
        <files mask="ssi.shtml" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/httpd/examples_fs/img" type="image">
        <files mask="sics.gif" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/httpd/ssi_example" type="src">
        <files mask="ssi_example.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/httpd/ssi_example" type="c_include">
        <files mask="ssi_example.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/httpd" type="src">
        <files mask="examples_fsdata.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/ethernetif" type="src">
        <files mask="ethernetif.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/tftp" type="src">
        <files mask="tftp_example.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/tftp" type="c_include">
        <files mask="tftp_example.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/lwiperf" type="c_include">
        <files mask="lwiperf_example.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/lwiperf" type="src">
        <files mask="lwiperf_example.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/mqtt" type="c_include">
        <files mask="mqtt_example.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/mqtt" type="src">
        <files mask="mqtt_example.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/ppp" type="c_include">
        <files mask="pppos_example.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/ppp" type="src">
        <files mask="pppos_example.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/snmp" type="c_include">
        <files mask="snmp_example.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/snmp/snmp_private_mib" type="c_include">
        <files mask="private_mib.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/snmp/snmp_private_mib" type="src">
        <files mask="lwip_prvmib.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/snmp/snmp_v3" type="c_include">
        <files mask="snmpv3_dummy.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/snmp/snmp_v3" type="src">
        <files mask="snmpv3_dummy.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/snmp" type="src">
        <files mask="snmp_example.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/example_app" type="c_include">
        <files mask="lwippools.h" hidden="true"/>
        <files mask="default_netif.h" hidden="true"/>
        <files mask="ppp_settings.h" hidden="true"/>
        <files mask="lwipopts.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/example_app" type="other">
        <files mask="lwipcfg.h.example" hidden="true"/>
        <files mask="lwipcfg.h.travis" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/example_app/test_configs" type="c_include">
        <files mask="opt_nosys_ipv6.h" hidden="true"/>
        <files mask="opt_no_tcp_dualstack.h" hidden="true"/>
        <files mask="opt_ipv6only.h" hidden="true"/>
        <files mask="opt_nosys_dual.h" hidden="true"/>
        <files mask="opt_no_udp_ipv6only.h" hidden="true"/>
        <files mask="opt_default.h" hidden="true"/>
        <files mask="opt_nosys_ipv4.h" hidden="true"/>
        <files mask="opt_no_tcp_ipv4only.h" hidden="true"/>
        <files mask="opt_none.h" hidden="true"/>
        <files mask="opt_no_udp_dualstack.h" hidden="true"/>
        <files mask="opt_no_tcp_ipv6only.h" hidden="true"/>
        <files mask="opt_dualstack.h" hidden="true"/>
        <files mask="opt_no_udp_ipv4only.h" hidden="true"/>
        <files mask="opt_ipv4only.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/example_app" type="src">
        <files mask="test.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/mdns" type="src">
        <files mask="mdns_example.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/mdns" type="c_include">
        <files mask="mdns_example.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/sntp" type="c_include">
        <files mask="sntp_example.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/sntp" type="src">
        <files mask="sntp_example.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/freertos/include/arch" type="c_include">
        <files mask="sys_arch.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/freertos" type="src">
        <files mask="sys_arch.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/unix" type="script">
        <files mask="Filelists.cmake" hidden="true"/>
        <files mask="Common.mk" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/unix" type="other">
        <files mask="setup-tapif" hidden="true"/>
        <files mask="README" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/unix/port" type="src">
        <files mask="perf.c" hidden="true"/>
        <files mask="sys_arch.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/unix/port/include/arch" type="c_include">
        <files mask="sys_arch.h" hidden="true"/>
        <files mask="perf.h" hidden="true"/>
        <files mask="cc.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/unix/port/include/netif" type="c_include">
        <files mask="list.h" hidden="true"/>
        <files mask="pcapif.h" hidden="true"/>
        <files mask="sio.h" hidden="true"/>
        <files mask="fifo.h" hidden="true"/>
        <files mask="tapif.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/unix/port/netif" type="src">
        <files mask="list.c" hidden="true"/>
        <files mask="tapif.c" hidden="true"/>
        <files mask="pcapif.c" hidden="true"/>
        <files mask="sio.c" hidden="true"/>
        <files mask="fifo.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/unix/example_app" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/unix/example_app" type="other">
        <files mask="Makefile" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/unix/example_app" type="script">
        <files mask="iteropts.sh" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/unix/example_app" type="src">
        <files mask="default_netif.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/unix/lib" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/unix/lib" type="other">
        <files mask="README" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/unix/lib" type="c_include">
        <files mask="lwipopts.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/unix/check" type="c_include">
        <files mask="config.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/unix/check" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/unix/check" type="other">
        <files mask="Makefile" hidden="true"/>
        <files mask="README" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/win32" type="c_include">
        <files mask="pcapif.h" hidden="true"/>
        <files mask="pcapif_helper.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/win32" type="script">
        <files mask="Filelists.cmake" hidden="true"/>
        <files mask="Common.mk" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/win32/include/arch" type="c_include">
        <files mask="epstruct.h" hidden="true"/>
        <files mask="sys_arch.h" hidden="true"/>
        <files mask="bpstruct.h" hidden="true"/>
        <files mask="perf.h" hidden="true"/>
        <files mask="cc.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/win32" type="doc">
        <files mask="readme.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/win32" type="src">
        <files mask="pcapif.c" hidden="true"/>
        <files mask="sio.c" hidden="true"/>
        <files mask="sys_arch.c" hidden="true"/>
        <files mask="pcapif_helper.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/win32/msvc" type="other">
        <files mask="lwip_unittests.vcxproj.filters" hidden="true"/>
        <files mask="makefsdata.vcxproj.filters" hidden="true"/>
        <files mask="lwIP.vcxproj" hidden="true"/>
        <files mask="lwIP_unittests.sln" hidden="true"/>
        <files mask="lwIP_Test.vcxproj" hidden="true"/>
        <files mask="lwip_unittests.vcxproj" hidden="true"/>
        <files mask="lwIP.vcxproj.filters" hidden="true"/>
        <files mask="lwIP_pcapif.vcxproj.filters" hidden="true"/>
        <files mask="makefsdata.vcxproj" hidden="true"/>
        <files mask="libcheck.vcxproj" hidden="true"/>
        <files mask="libcheck.vcxproj.filters" hidden="true"/>
        <files mask="lwIP_pcapif.vcxproj" hidden="true"/>
        <files mask="lwIP_Test.sln" hidden="true"/>
        <files mask="lwIP_Test.vcxproj.filters" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/win32/msvc" type="script">
        <files mask="build_coverity.cmd" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/win32/example_app" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/win32/example_app" type="other">
        <files mask="Makefile" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/win32/example_app" type="src">
        <files mask="default_netif.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/win32/check" type="c_include">
        <files mask="stdbool.h" hidden="true"/>
        <files mask="check_stdint.h" hidden="true"/>
        <files mask="config.h" hidden="true"/>
        <files mask="unistd.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/win32/check/sys" type="c_include">
        <files mask="time.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/win32/check" type="src">
        <files mask="time.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports" type="script">
        <files mask="Common.allports.mk" hidden="true"/>
        <files mask="CMakeCommon.cmake" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/altcp_tls" type="c_include">
        <files mask="altcp_tls_mbedtls_mem.h" hidden="true"/>
        <files mask="altcp_tls_mbedtls_structs.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/altcp_tls" type="src">
        <files mask="altcp_tls_mbedtls_mem.c" hidden="true"/>
        <files mask="altcp_tls_mbedtls.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/http" type="src">
        <files mask="altcp_proxyconnect.c" hidden="true"/>
        <files mask="http_client.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/netbiosns" type="src">
        <files mask="netbiosns.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/smtp" type="src">
        <files mask="smtp.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/snmp" type="src">
        <files mask="snmp_mib2_tcp.c" hidden="true"/>
        <files mask="snmp_table.c" hidden="true"/>
        <files mask="snmp_scalar.c" hidden="true"/>
        <files mask="snmp_netconn.c" hidden="true"/>
        <files mask="snmp_mib2_ip.c" hidden="true"/>
        <files mask="snmp_traps.c" hidden="true"/>
        <files mask="snmp_msg.c" hidden="true"/>
        <files mask="snmp_mib2_udp.c" hidden="true"/>
        <files mask="snmp_mib2_icmp.c" hidden="true"/>
        <files mask="snmp_mib2_snmp.c" hidden="true"/>
        <files mask="snmp_mib2.c" hidden="true"/>
        <files mask="snmpv3.c" hidden="true"/>
        <files mask="snmp_raw.c" hidden="true"/>
        <files mask="snmp_threadsync.c" hidden="true"/>
        <files mask="snmp_snmpv2_usm.c" hidden="true"/>
        <files mask="snmp_pbuf_stream.c" hidden="true"/>
        <files mask="snmp_snmpv2_framework.c" hidden="true"/>
        <files mask="snmp_mib2_interfaces.c" hidden="true"/>
        <files mask="snmpv3_mbedtls.c" hidden="true"/>
        <files mask="snmp_mib2_system.c" hidden="true"/>
        <files mask="snmp_asn1.c" hidden="true"/>
        <files mask="snmp_core.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/snmp" type="c_include">
        <files mask="snmp_asn1.h" hidden="true"/>
        <files mask="snmp_core_priv.h" hidden="true"/>
        <files mask="snmpv3_priv.h" hidden="true"/>
        <files mask="snmp_pbuf_stream.h" hidden="true"/>
        <files mask="snmp_msg.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/tftp" type="src">
        <files mask="tftp.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/include/lwip" type="other">
        <files mask="init.h.cmake.in" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/include/lwip/apps" type="c_include">
        <files mask="altcp_proxyconnect.h" hidden="true"/>
        <files mask="altcp_tls_mbedtls_opts.h" hidden="true"/>
        <files mask="http_client.h" hidden="true"/>
        <files mask="netbiosns.h" hidden="true"/>
        <files mask="netbiosns_opts.h" hidden="true"/>
        <files mask="smtp.h" hidden="true"/>
        <files mask="smtp_opts.h" hidden="true"/>
        <files mask="snmp.h" hidden="true"/>
        <files mask="snmpv3.h" hidden="true"/>
        <files mask="snmp_core.h" hidden="true"/>
        <files mask="snmp_mib2.h" hidden="true"/>
        <files mask="snmp_opts.h" hidden="true"/>
        <files mask="snmp_scalar.h" hidden="true"/>
        <files mask="snmp_snmpv2_framework.h" hidden="true"/>
        <files mask="snmp_snmpv2_usm.h" hidden="true"/>
        <files mask="snmp_table.h" hidden="true"/>
        <files mask="snmp_threadsync.h" hidden="true"/>
        <files mask="tftp_client.h" hidden="true"/>
        <files mask="tftp_common.h" hidden="true"/>
        <files mask="tftp_opts.h" hidden="true"/>
        <files mask="tftp_server.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/include/lwip/apps" type="other">
        <files mask="FILES" hidden="true"/>
      </source>
    </component>
    <component id="middleware.mbedtls.MIMXRT595S" name="mbedtls" brief="mbedTLS library" version="2.16.6" full_name="MbedTLS open source SSL library" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="Security/mbedTLS library" user_visible="true" type="middleware" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <dependencies>
        <all>
          <component_dependency value="middleware.mbedtls.template.MIMXRT595S"/>
          <component_dependency value="utility.debug_console.MIMXRT595S"/>
          <any_of>
            <component_dependency value="middleware.mbedtls.port.ksdk.MIMXRT595S"/>
            <component_dependency value="middleware.mbedtls.port.sssapi.MIMXRT595S"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="include/mbedtls" type="c_include">
        <files mask="aes.h"/>
        <files mask="aesni.h"/>
        <files mask="arc4.h"/>
        <files mask="aria.h"/>
        <files mask="asn1.h"/>
        <files mask="asn1write.h"/>
        <files mask="base64.h"/>
        <files mask="bignum.h"/>
        <files mask="blowfish.h"/>
        <files mask="bn_mul.h"/>
        <files mask="camellia.h"/>
        <files mask="ccm.h"/>
        <files mask="certs.h"/>
        <files mask="chacha20.h"/>
        <files mask="chachapoly.h"/>
        <files mask="check_config.h"/>
        <files mask="cipher.h"/>
        <files mask="cipher_internal.h"/>
        <files mask="cmac.h"/>
        <files mask="compat-1.3.h"/>
        <files mask="config.h"/>
        <files mask="ctr_drbg.h"/>
        <files mask="debug.h"/>
        <files mask="des.h"/>
        <files mask="dhm.h"/>
        <files mask="ecdh.h"/>
        <files mask="ecdsa.h"/>
        <files mask="ecjpake.h"/>
        <files mask="ecp.h"/>
        <files mask="ecp_internal.h"/>
        <files mask="entropy.h"/>
        <files mask="entropy_poll.h"/>
        <files mask="error.h"/>
        <files mask="gcm.h"/>
        <files mask="havege.h"/>
        <files mask="hkdf.h"/>
        <files mask="hmac_drbg.h"/>
        <files mask="md.h"/>
        <files mask="md_internal.h"/>
        <files mask="md2.h"/>
        <files mask="md4.h"/>
        <files mask="md5.h"/>
        <files mask="memory_buffer_alloc.h"/>
        <files mask="net.h"/>
        <files mask="net_sockets.h"/>
        <files mask="nist_kw.h"/>
        <files mask="oid.h"/>
        <files mask="padlock.h"/>
        <files mask="pem.h"/>
        <files mask="pk.h"/>
        <files mask="pk_internal.h"/>
        <files mask="pkcs5.h"/>
        <files mask="pkcs11.h"/>
        <files mask="pkcs12.h"/>
        <files mask="platform.h"/>
        <files mask="platform_time.h"/>
        <files mask="platform_util.h"/>
        <files mask="poly1305.h"/>
        <files mask="ripemd160.h"/>
        <files mask="rsa.h"/>
        <files mask="rsa_internal.h"/>
        <files mask="sha1.h"/>
        <files mask="sha256.h"/>
        <files mask="sha512.h"/>
        <files mask="ssl.h"/>
        <files mask="ssl_cache.h"/>
        <files mask="ssl_ciphersuites.h"/>
        <files mask="ssl_cookie.h"/>
        <files mask="ssl_internal.h"/>
        <files mask="ssl_ticket.h"/>
        <files mask="threading.h"/>
        <files mask="timing.h"/>
        <files mask="version.h"/>
        <files mask="x509.h"/>
        <files mask="x509_crl.h"/>
        <files mask="x509_crt.h"/>
        <files mask="x509_csr.h"/>
        <files mask="xtea.h"/>
      </source>
      <source relative_path="library" type="src">
        <files mask="aes.c"/>
        <files mask="aesni.c"/>
        <files mask="arc4.c"/>
        <files mask="aria.c"/>
        <files mask="asn1parse.c"/>
        <files mask="asn1write.c"/>
        <files mask="base64.c"/>
        <files mask="bignum.c"/>
        <files mask="blowfish.c"/>
        <files mask="camellia.c"/>
        <files mask="ccm.c"/>
        <files mask="certs.c"/>
        <files mask="cipher.c"/>
        <files mask="cipher_wrap.c"/>
        <files mask="chacha20.c"/>
        <files mask="chachapoly.c"/>
        <files mask="cmac.c"/>
        <files mask="ctr_drbg.c"/>
        <files mask="debug.c"/>
        <files mask="des.c"/>
        <files mask="dhm.c"/>
        <files mask="ecdh.c"/>
        <files mask="ecdsa.c"/>
        <files mask="ecjpake.c"/>
        <files mask="ecp.c"/>
        <files mask="ecp_curves.c"/>
        <files mask="entropy.c"/>
        <files mask="entropy_poll.c"/>
        <files mask="error.c"/>
        <files mask="gcm.c"/>
        <files mask="havege.c"/>
        <files mask="hkdf.c"/>
        <files mask="hmac_drbg.c"/>
        <files mask="md.c"/>
        <files mask="md_wrap.c"/>
        <files mask="md2.c"/>
        <files mask="md4.c"/>
        <files mask="md5.c"/>
        <files mask="memory_buffer_alloc.c"/>
        <files mask="net_sockets.c"/>
        <files mask="nist_kw.c"/>
        <files mask="oid.c"/>
        <files mask="padlock.c"/>
        <files mask="pem.c"/>
        <files mask="pk.c"/>
        <files mask="pk_wrap.c"/>
        <files mask="pkcs5.c"/>
        <files mask="pkcs11.c"/>
        <files mask="pkcs12.c"/>
        <files mask="pkparse.c"/>
        <files mask="pkwrite.c"/>
        <files mask="platform.c"/>
        <files mask="platform_util.c"/>
        <files mask="poly1305.c"/>
        <files mask="ripemd160.c"/>
        <files mask="rsa.c"/>
        <files mask="rsa_internal.c"/>
        <files mask="sha1.c"/>
        <files mask="sha256.c"/>
        <files mask="sha512.c"/>
        <files mask="ssl_cache.c"/>
        <files mask="ssl_ciphersuites.c"/>
        <files mask="ssl_cli.c"/>
        <files mask="ssl_cookie.c"/>
        <files mask="ssl_srv.c"/>
        <files mask="ssl_ticket.c"/>
        <files mask="ssl_tls.c"/>
        <files mask="threading.c"/>
        <files mask="timing.c"/>
        <files mask="version.c"/>
        <files mask="version_features.c"/>
        <files mask="x509.c"/>
        <files mask="x509_create.c"/>
        <files mask="x509_crl.c"/>
        <files mask="x509_crt.c"/>
        <files mask="x509_csr.c"/>
        <files mask="x509write_crt.c"/>
        <files mask="x509write_csr.c"/>
        <files mask="xtea.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_mbedtls_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="library" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls.empty.MIMXRT595S" name="mbedtls_empty" brief="On-chip Kinetis Crypto accelerator" version="2.16.6" full_name="MbedTLS Adaptation" devices="MIMXRT595S" category="Security/mbedTLS library" user_visible="true" type="middleware" package_base_path="middleware/mbedtls" project_base_path="mbedtls"/>
    <component id="middleware.mbedtls.port.ksdk.MIMXRT595S" name="mbedtls_ksdk" brief="mbedTLS port library for KPSDK" version="2.16.6" full_name="MbedTLS MCUX SDK port layer" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="Security/mbedTLS library" user_visible="true" type="middleware" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <dependencies>
        <any_of>
          <component_dependency value="middleware.mbedtls.empty.MIMXRT595S"/>
          <component_dependency value="middleware.mbedtls.rt1.MIMXRT595S"/>
        </any_of>
      </dependencies>
      <source relative_path="port/ksdk" type="src">
        <files mask="ksdk_mbedtls.c"/>
        <files mask="des_alt.c"/>
        <files mask="aes_alt.c"/>
        <files mask="ecp_alt.c"/>
        <files mask="ecp_curves_alt.c"/>
        <files mask="ecp_alt_ksdk.c"/>
      </source>
      <source relative_path="port/ksdk" type="c_include">
        <files mask="ksdk_mbedtls.h"/>
        <files mask="ksdk_mbedtls_config.h"/>
        <files mask="sha1_alt.h"/>
        <files mask="sha256_alt.h"/>
        <files mask="des_alt.h"/>
        <files mask="aes_alt.h"/>
        <files mask="ecp_alt.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_mbedtls_port_ksdk_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/ksdk" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls.port.sssapi.MIMXRT595S" name="mbedtls_sssapi" brief="mbedTLS port library for SSSAPI" version="2.16.6" full_name="MbedTLS MCUX SDK port layer via SSSAPI" devices="MIMXRT595S" category="Security/mbedTLS library" user_visible="true" type="middleware" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <source relative_path="port/sssapi" type="src">
        <files mask="sssapi_mbedtls.c"/>
        <files mask="ccm_alt.c"/>
        <files mask="cmac_alt.c"/>
        <files mask="sha256_alt.c"/>
        <files mask="sha512_alt.c"/>
        <files mask="ecdh_alt.c"/>
        <files mask="ecdsa_alt.c"/>
        <files mask="entropy_poll_alt.c"/>
      </source>
      <source relative_path="port/sssapi" type="c_include">
        <files mask="sssapi_mbedtls.h"/>
        <files mask="sssapi_mbedtls_config.h"/>
        <files mask="ccm_alt.h"/>
        <files mask="cmac_alt.h"/>
        <files mask="sha256_alt.h"/>
        <files mask="sha512_alt.h"/>
        <files mask="ecdh_alt.h"/>
        <files mask="ecdsa_alt.h"/>
      </source>
      <include_paths>
        <include_path relative_path="port/sssapi" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls.rt1.MIMXRT595S" name="mbedtls_lpc" brief="On-chip RT Crypto accelerator" version="2.16.6" full_name="MbedTLS Adaptation for On-chip RT Crypto accelerator." devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="Security/mbedTLS library" user_visible="true" type="middleware" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <dependencies>
        <all>
          <component_dependency value="middleware.mbedtls.MIMXRT595S"/>
          <component_dependency value="middleware.mbedtls.port.ksdk.MIMXRT595S"/>
          <component_dependency value="platform.drivers.casper.MIMXRT595S"/>
          <component_dependency value="platform.drivers.hashcrypt.MIMXRT595S"/>
          <component_dependency value="platform.drivers.trng.MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_mbedtls_rt1_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.mbedtls.template.MIMXRT595S" name="mbedtls_template" brief="mbedTLS Template" version="2.16.6" full_name="mbedTLS Template" devices="MIMXRT595S" user_visible="false" type="project_template" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <defines>
        <define name="MBEDTLS_CONFIG_FILE" value="'&quot;ksdk_mbedtls_config.h&quot;'"/>
      </defines>
      <source relative_path="port/ksdk" type="c_include">
        <files mask="ksdk_mbedtls_config.h"/>
      </source>
      <include_paths>
        <include_path relative_path="port/ksdk" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls.unused_files.MIMXRT595S" name="unused_files" brief="mbedTLS files unused by projects" version="2.16.6" full_name="MbedTLS unused files" devices="MIMXRT595S" user_visible="false" type="other" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <source exclude="true" relative_path="configs" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="configs" type="c_include">
        <files mask="config-suite-b.h" hidden="true"/>
        <files mask="config-ccm-psk-tls1_2.h" hidden="true"/>
        <files mask="config-no-entropy.h" hidden="true"/>
        <files mask="config-mini-tls1_1.h" hidden="true"/>
        <files mask="config-thread.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="doxygen" type="other">
        <files mask="mbedtls.doxyfile" hidden="true"/>
      </source>
      <source exclude="true" relative_path="doxygen/input" type="c_include">
        <files mask="doc_ssltls.h" hidden="true"/>
        <files mask="doc_mainpage.h" hidden="true"/>
        <files mask="doc_x509.h" hidden="true"/>
        <files mask="doc_hashing.h" hidden="true"/>
        <files mask="doc_tcpip.h" hidden="true"/>
        <files mask="doc_encdec.h" hidden="true"/>
        <files mask="doc_rng.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="include" type="other">
        <files mask=".gitignore" hidden="true"/>
      </source>
      <source exclude="true" relative_path="include" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="library" type="other">
        <files mask=".gitignore" hidden="true"/>
        <files mask="Makefile" hidden="true"/>
      </source>
      <source exclude="true" relative_path="library" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs" type="other">
        <files mask="Makefile" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/aes" type="src">
        <files mask="aescrypt2.c" hidden="true"/>
        <files mask="crypt_and_hash.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/aes" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/hash" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/hash" type="src">
        <files mask="generic_sum.c" hidden="true"/>
        <files mask="hello.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/pkey" type="src">
        <files mask="rsa_decrypt.c" hidden="true"/>
        <files mask="key_app.c" hidden="true"/>
        <files mask="key_app_writer.c" hidden="true"/>
        <files mask="rsa_verify_pss.c" hidden="true"/>
        <files mask="dh_genprime.c" hidden="true"/>
        <files mask="ecdh_curve25519.c" hidden="true"/>
        <files mask="pk_encrypt.c" hidden="true"/>
        <files mask="dh_client.c" hidden="true"/>
        <files mask="mpi_demo.c" hidden="true"/>
        <files mask="rsa_genkey.c" hidden="true"/>
        <files mask="rsa_encrypt.c" hidden="true"/>
        <files mask="dh_server.c" hidden="true"/>
        <files mask="pk_decrypt.c" hidden="true"/>
        <files mask="pk_verify.c" hidden="true"/>
        <files mask="pk_sign.c" hidden="true"/>
        <files mask="ecdsa.c" hidden="true"/>
        <files mask="rsa_verify.c" hidden="true"/>
        <files mask="gen_key.c" hidden="true"/>
        <files mask="rsa_sign_pss.c" hidden="true"/>
        <files mask="rsa_sign.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/pkey" type="doc">
        <files mask="rsa_priv.txt" hidden="true"/>
        <files mask="dh_prime.txt" hidden="true"/>
        <files mask="CMakeLists.txt" hidden="true"/>
        <files mask="rsa_pub.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/random" type="src">
        <files mask="gen_random_havege.c" hidden="true"/>
        <files mask="gen_random_ctr_drbg.c" hidden="true"/>
        <files mask="gen_entropy.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/random" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/ssl" type="src">
        <files mask="ssl_server.c" hidden="true"/>
        <files mask="mini_client.c" hidden="true"/>
        <files mask="ssl_pthread_server.c" hidden="true"/>
        <files mask="dtls_client.c" hidden="true"/>
        <files mask="ssl_fork_server.c" hidden="true"/>
        <files mask="query_config.c" hidden="true"/>
        <files mask="ssl_mail_client.c" hidden="true"/>
        <files mask="ssl_client2.c" hidden="true"/>
        <files mask="dtls_server.c" hidden="true"/>
        <files mask="ssl_server2.c" hidden="true"/>
        <files mask="ssl_client1.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/ssl" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/test" type="src">
        <files mask="cpp_dummy_build.cpp" hidden="true"/>
        <files mask="selftest.c" hidden="true"/>
        <files mask="query_compile_time_config.c" hidden="true"/>
        <files mask="benchmark.c" hidden="true"/>
        <files mask="udp_proxy.c" hidden="true"/>
        <files mask="zeroize.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/test" type="script">
        <files mask="udp_proxy_wrapper.sh" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/test" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/util" type="src">
        <files mask="pem2der.c" hidden="true"/>
        <files mask="strerror.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/util" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/x509" type="src">
        <files mask="req_app.c" hidden="true"/>
        <files mask="cert_req.c" hidden="true"/>
        <files mask="cert_write.c" hidden="true"/>
        <files mask="cert_app.c" hidden="true"/>
        <files mask="crl_app.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/x509" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="scripts" type="script">
        <files mask="memory.sh" hidden="true"/>
        <files mask="footprint.sh" hidden="true"/>
        <files mask="abi_check.py" hidden="true"/>
        <files mask="tmp_ignore_makefiles.sh" hidden="true"/>
        <files mask="ecc-heap.sh" hidden="true"/>
        <files mask="output_env.sh" hidden="true"/>
        <files mask="bump_version.sh" hidden="true"/>
        <files mask="apidoc_full.sh" hidden="true"/>
      </source>
      <source exclude="true" relative_path="scripts" type="other">
        <files mask="rm-calloc-cast.cocci" hidden="true"/>
        <files mask="generate_visualc_files.pl" hidden="true"/>
        <files mask="generate_features.pl" hidden="true"/>
        <files mask="generate_query_config.pl" hidden="true"/>
        <files mask="rename.pl" hidden="true"/>
        <files mask="massif_max.pl" hidden="true"/>
        <files mask="generate_errors.pl" hidden="true"/>
        <files mask="find-mem-leak.cocci" hidden="true"/>
        <files mask="config.pl" hidden="true"/>
      </source>
      <source exclude="true" relative_path="scripts/data_files" type="other">
        <files mask="query_config.fmt" hidden="true"/>
        <files mask="vs2010-app-template.vcxproj" hidden="true"/>
        <files mask="version_features.fmt" hidden="true"/>
        <files mask="vs2010-sln-template.sln" hidden="true"/>
        <files mask="error.fmt" hidden="true"/>
        <files mask="vs2010-main-template.vcxproj" hidden="true"/>
        <files mask="vs6-workspace-template.dsw" hidden="true"/>
        <files mask="vs6-main-template.dsp" hidden="true"/>
        <files mask="vs6-app-template.dsp" hidden="true"/>
      </source>
      <source exclude="true" relative_path="scripts/data_files" type="doc">
        <files mask="rename-1.3-2.0.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tests" type="other">
        <files mask="Makefile" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tests/data_files" type="other">
        <files mask="hash_file_3" hidden="true"/>
        <files mask="hash_file_1" hidden="true"/>
        <files mask="hash_file_5" hidden="true"/>
        <files mask="mpi_10" hidden="true"/>
        <files mask="mpi_too_big" hidden="true"/>
        <files mask="Makefile" hidden="true"/>
        <files mask="hash_file_2" hidden="true"/>
        <files mask="hash_file_4" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tests/data_files/dir3" type="other">
        <files mask="Readme" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tests/data_files/dir4" type="other">
        <files mask="Readme" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tests/scripts" type="script">
        <files mask="check-python-files.sh" hidden="true"/>
        <files mask="test_generate_test_code.py" hidden="true"/>
        <files mask="generate_test_code.py" hidden="true"/>
        <files mask="list-symbols.sh" hidden="true"/>
        <files mask="check-generated-files.sh" hidden="true"/>
        <files mask="list-identifiers.sh" hidden="true"/>
        <files mask="generate-afl-tests.sh" hidden="true"/>
        <files mask="check-files.py" hidden="true"/>
        <files mask="travis-log-failure.sh" hidden="true"/>
        <files mask="check-names.sh" hidden="true"/>
        <files mask="basic-build-test.sh" hidden="true"/>
        <files mask="all.sh" hidden="true"/>
        <files mask="list-macros.sh" hidden="true"/>
        <files mask="doxygen.sh" hidden="true"/>
        <files mask="mbedtls_test.py" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tests/scripts" type="other">
        <files mask="curves.pl" hidden="true"/>
        <files mask="recursion.pl" hidden="true"/>
        <files mask="gen_pkcs1_v21_sign_verify.pl" hidden="true"/>
        <files mask="key-exchanges.pl" hidden="true"/>
        <files mask="list-enum-consts.pl" hidden="true"/>
        <files mask="tcp_client.pl" hidden="true"/>
        <files mask="gen_ctr_drbg.pl" hidden="true"/>
        <files mask="test-ref-configs.pl" hidden="true"/>
        <files mask="gen_gcm_encrypt.pl" hidden="true"/>
        <files mask="depends-hashes.pl" hidden="true"/>
        <files mask="gen_gcm_decrypt.pl" hidden="true"/>
        <files mask="check-doxy-blocks.pl" hidden="true"/>
        <files mask="depends-pkalgs.pl" hidden="true"/>
        <files mask="run-test-suites.pl" hidden="true"/>
        <files mask="test_zeroize.gdb" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tests/suites" type="other">
        <files mask="test_suite_gcm.misc.data" hidden="true"/>
        <files mask="test_suite_pkwrite.data" hidden="true"/>
        <files mask="test_suite_ctr_drbg.function" hidden="true"/>
        <files mask="test_suite_gcm.aes256_de.data" hidden="true"/>
        <files mask="target_test.function" hidden="true"/>
        <files mask="test_suite_pkcs1_v15.function" hidden="true"/>
        <files mask="test_suite_timing.function" hidden="true"/>
        <files mask="test_suite_mdx.function" hidden="true"/>
        <files mask="test_suite_hkdf.function" hidden="true"/>
        <files mask="test_suite_gcm.camellia.data" hidden="true"/>
        <files mask="test_suite_cipher.misc.data" hidden="true"/>
        <files mask="test_suite_asn1write.data" hidden="true"/>
        <files mask="test_suite_cmac.data" hidden="true"/>
        <files mask="main_test.function" hidden="true"/>
        <files mask="test_suite_debug.function" hidden="true"/>
        <files mask="test_suite_des.data" hidden="true"/>
        <files mask="test_suite_pkcs5.function" hidden="true"/>
        <files mask="test_suite_nist_kw.data" hidden="true"/>
        <files mask="test_suite_timing.data" hidden="true"/>
        <files mask="test_suite_xtea.function" hidden="true"/>
        <files mask="test_suite_ecdh.function" hidden="true"/>
        <files mask="test_suite_cipher.ccm.data" hidden="true"/>
        <files mask="test_suite_ecdh.data" hidden="true"/>
        <files mask="test_suite_hmac_drbg.pr.data" hidden="true"/>
        <files mask="test_suite_pkcs1_v15.data" hidden="true"/>
        <files mask="test_suite_camellia.function" hidden="true"/>
        <files mask="test_suite_hmac_drbg.no_reseed.data" hidden="true"/>
        <files mask="test_suite_xtea.data" hidden="true"/>
        <files mask="test_suite_aes.rest.data" hidden="true"/>
        <files mask="test_suite_ecdsa.function" hidden="true"/>
        <files mask="test_suite_memory_buffer_alloc.data" hidden="true"/>
        <files mask="test_suite_pkcs1_v21.data" hidden="true"/>
        <files mask="test_suite_chacha20.function" hidden="true"/>
        <files mask="test_suite_debug.data" hidden="true"/>
        <files mask="test_suite_mpi.data" hidden="true"/>
        <files mask="test_suite_rsa.function" hidden="true"/>
        <files mask="test_suite_md.function" hidden="true"/>
        <files mask="test_suite_shax.data" hidden="true"/>
        <files mask="test_suite_hmac_drbg.function" hidden="true"/>
        <files mask="test_suite_pkparse.function" hidden="true"/>
        <files mask="test_suite_version.function" hidden="true"/>
        <files mask="test_suite_chachapoly.function" hidden="true"/>
        <files mask="test_suite_ssl.data" hidden="true"/>
        <files mask="test_suite_mpi.function" hidden="true"/>
        <files mask="test_suite_dhm.data" hidden="true"/>
        <files mask="test_suite_cipher.gcm.data" hidden="true"/>
        <files mask="test_suite_x509parse.function" hidden="true"/>
        <files mask="test_suite_entropy.function" hidden="true"/>
        <files mask="test_suite_pkwrite.function" hidden="true"/>
        <files mask="test_suite_cipher.chachapoly.data" hidden="true"/>
        <files mask="test_suite_cipher.padding.data" hidden="true"/>
        <files mask="test_suite_asn1write.function" hidden="true"/>
        <files mask="test_suite_dhm.function" hidden="true"/>
        <files mask="test_suite_all.data" hidden="true"/>
        <files mask="test_suite_gcm.function" hidden="true"/>
        <files mask="test_suite_gcm.aes192_de.data" hidden="true"/>
        <files mask="test_suite_pem.data" hidden="true"/>
        <files mask="test_suite_pkparse.data" hidden="true"/>
        <files mask="test_suite_chachapoly.data" hidden="true"/>
        <files mask="test_suite_cipher.blowfish.data" hidden="true"/>
        <files mask="test_suite_ecp.function" hidden="true"/>
        <files mask="test_suite_ssl.function" hidden="true"/>
        <files mask="test_suite_pem.function" hidden="true"/>
        <files mask="test_suite_ctr_drbg.data" hidden="true"/>
        <files mask="test_suite_cipher.function" hidden="true"/>
        <files mask="test_suite_x509write.data" hidden="true"/>
        <files mask="test_suite_rsa.data" hidden="true"/>
        <files mask="test_suite_camellia.data" hidden="true"/>
        <files mask="test_suite_aes.xts.data" hidden="true"/>
        <files mask="test_suite_ecp.data" hidden="true"/>
        <files mask="test_suite_pk.data" hidden="true"/>
        <files mask="host_test.function" hidden="true"/>
        <files mask="test_suite_gcm.aes192_en.data" hidden="true"/>
        <files mask="test_suite_blowfish.data" hidden="true"/>
        <files mask="test_suite_x509write.function" hidden="true"/>
        <files mask="test_suite_cipher.des.data" hidden="true"/>
        <files mask="test_suite_base64.data" hidden="true"/>
        <files mask="test_suite_chacha20.data" hidden="true"/>
        <files mask="test_suite_cipher.camellia.data" hidden="true"/>
        <files mask="test_suite_cipher.arc4.data" hidden="true"/>
        <files mask="test_suite_cmac.function" hidden="true"/>
        <files mask="test_suite_hkdf.data" hidden="true"/>
        <files mask="test_suite_gcm.aes128_de.data" hidden="true"/>
        <files mask="test_suite_aes.cfb.data" hidden="true"/>
        <files mask="test_suite_mdx.data" hidden="true"/>
        <files mask="test_suite_pkcs1_v21.function" hidden="true"/>
        <files mask="test_suite_ecjpake.data" hidden="true"/>
        <files mask="test_suite_nist_kw.function" hidden="true"/>
        <files mask="test_suite_aes.ecb.data" hidden="true"/>
        <files mask="test_suite_aes.ofb.data" hidden="true"/>
        <files mask="test_suite_aes.function" hidden="true"/>
        <files mask="test_suite_poly1305.function" hidden="true"/>
        <files mask="test_suite_ecdsa.data" hidden="true"/>
        <files mask="test_suite_cipher.null.data" hidden="true"/>
        <files mask="test_suite_pkcs5.data" hidden="true"/>
        <files mask="test_suite_error.data" hidden="true"/>
        <files mask="test_suite_md.data" hidden="true"/>
        <files mask="test_suite_arc4.function" hidden="true"/>
        <files mask="test_suite_gcm.aes128_en.data" hidden="true"/>
        <files mask="test_suite_des.function" hidden="true"/>
        <files mask="test_suite_hmac_drbg.misc.data" hidden="true"/>
        <files mask="test_suite_ecjpake.function" hidden="true"/>
        <files mask="test_suite_gcm.aes256_en.data" hidden="true"/>
        <files mask="test_suite_blowfish.function" hidden="true"/>
        <files mask="test_suite_shax.function" hidden="true"/>
        <files mask="test_suite_cipher.aes.data" hidden="true"/>
        <files mask="test_suite_base64.function" hidden="true"/>
        <files mask="test_suite_memory_buffer_alloc.function" hidden="true"/>
        <files mask="helpers.function" hidden="true"/>
        <files mask="test_suite_x509parse.data" hidden="true"/>
        <files mask="test_suite_pk.function" hidden="true"/>
        <files mask="test_suite_all.function" hidden="true"/>
        <files mask="test_suite_aria.function" hidden="true"/>
        <files mask="test_suite_error.function" hidden="true"/>
        <files mask="test_suite_version.data" hidden="true"/>
        <files mask="test_suite_aes.cbc.data" hidden="true"/>
        <files mask="test_suite_ccm.data" hidden="true"/>
        <files mask="test_suite_hmac_drbg.nopr.data" hidden="true"/>
        <files mask="test_suite_arc4.data" hidden="true"/>
        <files mask="test_suite_entropy.data" hidden="true"/>
        <files mask="test_suite_aria.data" hidden="true"/>
        <files mask="test_suite_cipher.chacha20.data" hidden="true"/>
        <files mask="test_suite_ccm.function" hidden="true"/>
        <files mask="test_suite_poly1305.data" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tests/git-scripts" type="script">
        <files mask="pre-push.sh" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tests/git-scripts" type="other">
        <files mask="README.md" hidden="true"/>
      </source>
      <source exclude="true" relative_path="visualc/VS2010" type="other">
        <files mask="pk_verify.vcxproj" hidden="true"/>
        <files mask="gen_entropy.vcxproj" hidden="true"/>
        <files mask="udp_proxy.vcxproj" hidden="true"/>
        <files mask="ecdsa.vcxproj" hidden="true"/>
        <files mask="dh_server.vcxproj" hidden="true"/>
        <files mask="rsa_genkey.vcxproj" hidden="true"/>
        <files mask="pem2der.vcxproj" hidden="true"/>
        <files mask="gen_key.vcxproj" hidden="true"/>
        <files mask="ecdh_curve25519.vcxproj" hidden="true"/>
        <files mask="ssl_mail_client.vcxproj" hidden="true"/>
        <files mask="rsa_decrypt.vcxproj" hidden="true"/>
        <files mask="mini_client.vcxproj" hidden="true"/>
        <files mask="dh_genprime.vcxproj" hidden="true"/>
        <files mask="cert_write.vcxproj" hidden="true"/>
        <files mask="crypt_and_hash.vcxproj" hidden="true"/>
        <files mask="req_app.vcxproj" hidden="true"/>
        <files mask="cert_app.vcxproj" hidden="true"/>
        <files mask="hello.vcxproj" hidden="true"/>
        <files mask="ssl_fork_server.vcxproj" hidden="true"/>
        <files mask="rsa_verify_pss.vcxproj" hidden="true"/>
        <files mask="gen_random_ctr_drbg.vcxproj" hidden="true"/>
        <files mask="aescrypt2.vcxproj" hidden="true"/>
        <files mask="mpi_demo.vcxproj" hidden="true"/>
        <files mask="key_app_writer.vcxproj" hidden="true"/>
        <files mask="dtls_client.vcxproj" hidden="true"/>
        <files mask="crl_app.vcxproj" hidden="true"/>
        <files mask="ssl_client1.vcxproj" hidden="true"/>
        <files mask="pk_sign.vcxproj" hidden="true"/>
        <files mask="mbedTLS.sln" hidden="true"/>
        <files mask="rsa_verify.vcxproj" hidden="true"/>
        <files mask="rsa_sign.vcxproj" hidden="true"/>
        <files mask="pk_decrypt.vcxproj" hidden="true"/>
        <files mask="strerror.vcxproj" hidden="true"/>
        <files mask="selftest.vcxproj" hidden="true"/>
        <files mask="dtls_server.vcxproj" hidden="true"/>
        <files mask="benchmark.vcxproj" hidden="true"/>
        <files mask="rsa_sign_pss.vcxproj" hidden="true"/>
        <files mask="ssl_client2.vcxproj" hidden="true"/>
        <files mask="generic_sum.vcxproj" hidden="true"/>
        <files mask="pk_encrypt.vcxproj" hidden="true"/>
        <files mask="dh_client.vcxproj" hidden="true"/>
        <files mask="query_compile_time_config.vcxproj" hidden="true"/>
        <files mask="zeroize.vcxproj" hidden="true"/>
        <files mask="key_app.vcxproj" hidden="true"/>
        <files mask="mbedTLS.vcxproj" hidden="true"/>
        <files mask="ssl_server2.vcxproj" hidden="true"/>
        <files mask="rsa_encrypt.vcxproj" hidden="true"/>
        <files mask="gen_random_havege.vcxproj" hidden="true"/>
        <files mask="cert_req.vcxproj" hidden="true"/>
        <files mask="ssl_server.vcxproj" hidden="true"/>
      </source>
      <source exclude="true" relative_path="./" type="other">
        <files mask=".globalrc" hidden="true"/>
        <files mask=".gitignore" hidden="true"/>
        <files mask="CONTRIBUTING.md" hidden="true"/>
        <files mask="mbeTLS_for_Kinetis_SDK_v2.0_readme.meta" hidden="true"/>
        <files mask=".travis.yml" hidden="true"/>
        <files mask="DartConfiguration.tcl" hidden="true"/>
        <files mask=".pylintrc" hidden="true"/>
        <files mask="README.md" hidden="true"/>
        <files mask="ChangeLog" hidden="true"/>
        <files mask="Makefile" hidden="true"/>
        <files mask="LICENSE" hidden="true"/>
      </source>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="ChangeLogKSDK.txt" hidden="true"/>
        <files mask="apache-2.0.txt" hidden="true"/>
        <files mask="CMakeLists.txt" hidden="true"/>
        <files mask="dco.txt" hidden="true"/>
        <files mask="mbeTLS_for_Kinetis_SDK_v2.0_readme.txt" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.MIMXRT595S" name="multicore middleware" brief="Multicore SDK" version="2.9.0" full_name="Multicore Software Development Kit" devices="MIMXRT595S" user_visible="true" type="other" package_base_path="middleware/multicore" project_base_path="multicore">
      <source relative_path="./" type="doc">
        <files mask="readme.txt" hidden="true"/>
        <files mask="ChangeLogKSDK.txt" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.rpmsg_lite.MIMXRT595S" name="rpmsg_lite" brief="RPMsg-Lite" version="3.1.1" full_name="Remote Procedure Messaging Lite library" devices="MIMXRT595S" category="Multicore/RPMsg-Lite" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg_lite">
      <source relative_path="rpmsg_lite/lib/include" project_relative_path="./" type="c_include">
        <files mask="rpmsg_lite.h"/>
        <files mask="rpmsg_ns.h"/>
        <files mask="llist.h"/>
        <files mask="rpmsg_default_config.h"/>
        <files mask="virtio_ring.h"/>
        <files mask="virtqueue.h"/>
        <files mask="rpmsg_compiler.h"/>
        <files mask="rpmsg_env.h"/>
      </source>
      <source relative_path="rpmsg_lite/lib/common" project_relative_path="./" type="src">
        <files mask="llist.c"/>
      </source>
      <source relative_path="rpmsg_lite/lib/rpmsg_lite" project_relative_path="./" type="src">
        <files mask="rpmsg_lite.c"/>
        <files mask="rpmsg_ns.c"/>
      </source>
      <source relative_path="rpmsg_lite/lib/virtio" project_relative_path="./" type="src">
        <files mask="virtqueue.c"/>
      </source>
      <source relative_path="rpmsg_lite" project_relative_path="./" type="doc">
        <files mask="readme.txt" hidden="true"/>
      </source>
      <source relative_path="rpmsg_lite/doc" project_relative_path="doc" type="doc">
        <files mask="group__config.html" hidden="true"/>
        <files mask="group__rpmsg__lite.html" hidden="true"/>
        <files mask="dir_5a30104352ef4255dc24354b02eb2d20.html" hidden="true"/>
        <files mask="customdoxygen.css" hidden="true"/>
        <files mask="rpmsg__default__config_8h.html" hidden="true"/>
        <files mask="group__rpmsg__ns.html" hidden="true"/>
        <files mask="tabs.css" hidden="true"/>
        <files mask="rpmsg__lite_8h_source.html" hidden="true"/>
        <files mask="index.html" hidden="true"/>
        <files mask="group__rpmsg__queue.html" hidden="true"/>
        <files mask="rpmsg__ns_8h_source.html" hidden="true"/>
        <files mask="rpmsg__default__config_8h_source.html" hidden="true"/>
        <files mask="dir_97aefd0d527b934f1d99a682da8fe6a9.html" hidden="true"/>
        <files mask="doxygen.css" hidden="true"/>
        <files mask="rpmsg__queue_8h_source.html" hidden="true"/>
        <files mask="navtree.css" hidden="true"/>
        <files mask="modules.html" hidden="true"/>
      </source>
      <source relative_path="rpmsg_lite/doc" project_relative_path="doc" type="image">
        <files mask="tab_b.png" hidden="true"/>
        <files mask="folderclosed.png" hidden="true"/>
        <files mask="bc_s.png" hidden="true"/>
        <files mask="nxp_logo_small.png" hidden="true"/>
        <files mask="nav_h.png" hidden="true"/>
        <files mask="tab_a.png" hidden="true"/>
        <files mask="rpmsg_lite_send_receive.png" hidden="true"/>
        <files mask="bdwn.png" hidden="true"/>
        <files mask="sync_off.png" hidden="true"/>
        <files mask="rpmsg_isoosi.png" hidden="true"/>
        <files mask="tab_s.png" hidden="true"/>
        <files mask="open.png" hidden="true"/>
        <files mask="arrowdown.png" hidden="true"/>
        <files mask="splitbar.png" hidden="true"/>
        <files mask="rpmsg_lite_arch.png" hidden="true"/>
        <files mask="tab_h.png" hidden="true"/>
        <files mask="closed.png" hidden="true"/>
        <files mask="arrowright.png" hidden="true"/>
        <files mask="nav_g.png" hidden="true"/>
        <files mask="doc.png" hidden="true"/>
        <files mask="sync_on.png" hidden="true"/>
        <files mask="nav_f.png" hidden="true"/>
        <files mask="doxygen.png" hidden="true"/>
        <files mask="folderopen.png" hidden="true"/>
      </source>
      <source relative_path="rpmsg_lite/doc" project_relative_path="doc" type="script">
        <files mask="navtreeindex0.js" hidden="true"/>
        <files mask="navtreedata.js" hidden="true"/>
        <files mask="group__config.js" hidden="true"/>
        <files mask="modules.js" hidden="true"/>
        <files mask="group__rpmsg__lite.js" hidden="true"/>
        <files mask="resize.js" hidden="true"/>
        <files mask="dynsections.js" hidden="true"/>
        <files mask="group__rpmsg__ns.js" hidden="true"/>
        <files mask="group__rpmsg__queue.js" hidden="true"/>
        <files mask="navtree.js" hidden="true"/>
        <files mask="jquery.js" hidden="true"/>
      </source>
      <source relative_path="rpmsg_lite/doc/search" project_relative_path="doc" type="script">
        <files mask="all_0.js" hidden="true"/>
        <files mask="variables_5.js" hidden="true"/>
        <files mask="all_5.js" hidden="true"/>
        <files mask="groups_0.js" hidden="true"/>
        <files mask="search.js" hidden="true"/>
        <files mask="variables_1.js" hidden="true"/>
        <files mask="variables_2.js" hidden="true"/>
        <files mask="classes_0.js" hidden="true"/>
        <files mask="functions_0.js" hidden="true"/>
        <files mask="searchdata.js" hidden="true"/>
        <files mask="variables_7.js" hidden="true"/>
        <files mask="pages_0.js" hidden="true"/>
        <files mask="all_6.js" hidden="true"/>
        <files mask="typedefs_0.js" hidden="true"/>
        <files mask="variables_3.js" hidden="true"/>
        <files mask="all_3.js" hidden="true"/>
        <files mask="all_7.js" hidden="true"/>
        <files mask="all_2.js" hidden="true"/>
        <files mask="variables_6.js" hidden="true"/>
        <files mask="files_0.js" hidden="true"/>
        <files mask="variables_4.js" hidden="true"/>
        <files mask="all_1.js" hidden="true"/>
        <files mask="variables_0.js" hidden="true"/>
        <files mask="all_4.js" hidden="true"/>
      </source>
      <source relative_path="rpmsg_lite/doc/search" project_relative_path="doc" type="doc">
        <files mask="variables_2.html" hidden="true"/>
        <files mask="files_0.html" hidden="true"/>
        <files mask="variables_4.html" hidden="true"/>
        <files mask="all_1.html" hidden="true"/>
        <files mask="all_0.html" hidden="true"/>
        <files mask="variables_3.html" hidden="true"/>
        <files mask="all_2.html" hidden="true"/>
        <files mask="pages_0.html" hidden="true"/>
        <files mask="search.css" hidden="true"/>
        <files mask="functions_0.html" hidden="true"/>
        <files mask="all_3.html" hidden="true"/>
        <files mask="groups_0.html" hidden="true"/>
        <files mask="all_4.html" hidden="true"/>
        <files mask="all_7.html" hidden="true"/>
        <files mask="variables_0.html" hidden="true"/>
        <files mask="variables_7.html" hidden="true"/>
        <files mask="nomatches.html" hidden="true"/>
        <files mask="classes_0.html" hidden="true"/>
        <files mask="variables_5.html" hidden="true"/>
        <files mask="all_6.html" hidden="true"/>
        <files mask="all_5.html" hidden="true"/>
        <files mask="variables_6.html" hidden="true"/>
        <files mask="typedefs_0.html" hidden="true"/>
        <files mask="variables_1.html" hidden="true"/>
      </source>
      <source relative_path="rpmsg_lite/doc/search" project_relative_path="doc" type="image">
        <files mask="search_r.png" hidden="true"/>
        <files mask="search_l.png" hidden="true"/>
        <files mask="mag_sel.png" hidden="true"/>
        <files mask="close.png" hidden="true"/>
        <files mask="search_m.png" hidden="true"/>
      </source>
      <source condition="middleware.baremetal.MIMXRT595S" relative_path="rpmsg_lite/lib/rpmsg_lite/porting/environment" project_relative_path="env/bm" type="src">
        <files mask="rpmsg_env_bm.c"/>
      </source>
      <source condition="middleware.freertos-kernel.MIMXRT595S" relative_path="rpmsg_lite/lib/rpmsg_lite/porting/environment" project_relative_path="env/freertos" type="src">
        <files mask="rpmsg_env_freertos.c"/>
      </source>
      <source condition="middleware.freertos-kernel.MIMXRT595S" relative_path="rpmsg_lite/lib/include" project_relative_path="./" type="c_include">
        <files mask="rpmsg_queue.h"/>
      </source>
      <source condition="middleware.freertos-kernel.MIMXRT595S" relative_path="rpmsg_lite/lib/rpmsg_lite" project_relative_path="env/freertos" type="src">
        <files mask="rpmsg_queue.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_multicore_rpmsg_lite_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg_lite/lib/include" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg_lite.evkmimxrt595_bm.MIMXRT595S" name="rpmsg_lite_evkmimxrt595_bm" brief="RPMsg-Lite for evkmimxrt595 baremetal application" version="3.1.1" full_name="Remote Procedure Messaging Lite porting layer for evkmimxrt595 board" devices="MIMXRT595S" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg_lite">
      <dependencies>
        <component_dependency value="middleware.multicore.rpmsg_lite.MIMXRT595S"/>
      </dependencies>
      <source relative_path="rpmsg_lite/lib/include/platform/imxrt500_m33" project_relative_path="porting" type="c_include">
        <files mask="rpmsg_platform.h"/>
      </source>
      <source relative_path="rpmsg_lite/lib/rpmsg_lite/porting/platform/imxrt500_m33" project_relative_path="porting" type="src">
        <files mask="rpmsg_platform.c"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg_lite/lib/include/platform/imxrt500_m33" project_relative_path="porting" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg_lite.evkmimxrt595_freertos.MIMXRT595S" name="rpmsg_lite_evkmimxrt595_freertos" brief="RPMsg-Lite for evkmimxrt595 FreeRTOS application" version="3.1.1" full_name="Remote Procedure Messaging Lite porting layer for evkmimxrt595 board" devices="MIMXRT595S" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg_lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg_lite.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-kernel.heap_4.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg_lite/lib/include/platform/imxrt500_m33" project_relative_path="porting" type="c_include">
        <files mask="rpmsg_platform.h"/>
      </source>
      <source relative_path="rpmsg_lite/lib/rpmsg_lite/porting/platform/imxrt500_m33" project_relative_path="porting" type="src">
        <files mask="rpmsg_platform.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_multicore_rpmsg_lite_evkmimxrt595_freertos_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg_lite/lib/include/platform/imxrt500_m33" project_relative_path="porting" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg_lite.evkmimxrt595_fusionf1_bm.MIMXRT595S" name="rpmsg_lite_evkmimxrt595_fusionf1_bm" brief="RPMsg-Lite for evkmimxrt595 baremetal application" version="3.1.1" full_name="Remote Procedure Messaging Lite porting layer for evkmimxrt595 board" devices="MIMXRT595S" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg_lite">
      <dependencies>
        <component_dependency value="middleware.multicore.rpmsg_lite.MIMXRT595S"/>
      </dependencies>
      <source relative_path="rpmsg_lite/lib/include/platform/imxrt500_fusionf1" project_relative_path="porting" type="c_include">
        <files mask="rpmsg_platform.h"/>
      </source>
      <source relative_path="rpmsg_lite/lib/rpmsg_lite/porting/platform/imxrt500_fusionf1" project_relative_path="porting" type="src">
        <files mask="rpmsg_platform.c"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg_lite/lib/include/platform/imxrt500_fusionf1" project_relative_path="porting" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.naturedsp.naturedsp_fusionf1.MIMXRT595S" name="naturedsp_fusionf1" brief="NatureDSP" version="1.0.1" full_name="NatureDSP FusionF1 library" devices="MIMXRT595S" category="Audio/NatureDSP" user_visible="false" type="middleware" package_base_path="middleware/dsp" project_base_path="dsp">
      <source relative_path="naturedsp/fusionf1" type="src">
        <files mask="vec_dot32x16_fusion.c"/>
        <files mask="q2rotf_fusion.c"/>
        <files mask="bq3iir32x32_df2_fusion.c"/>
        <files mask="cmtx_add4x4_16x16_fusion.c"/>
        <files mask="vec_antilog2_32x32_fusion.c"/>
        <files mask="fir_xcorra32x16_fusion.c"/>
        <files mask="vec_divide24x24_fusion.c"/>
        <files mask="scl_bexp24_fusion.c"/>
        <files mask="firdecf_fusion.c"/>
        <files mask="vec_bexp16_fusion.c"/>
        <files mask="vec_antilogn_16x16_fusion.c"/>
        <files mask="ifft_real24x24_ie_24p_fusion.c"/>
        <files mask="vec_shiftf_fusion.c"/>
        <files mask="vec_sqrtf_fusion.c"/>
        <files mask="ifft_cplx_twd512_24x24_fusion.c"/>
        <files mask="bqriirf_df1_process_fusion.c"/>
        <files mask="fir_xcorr24x24_fusion.c"/>
        <files mask="fft_cplx32x32_fusion.c"/>
        <files mask="scl_tan16x16_fusion.c"/>
        <files mask="mtx_add2x2_32x32_fusion.c"/>
        <files mask="cmtx_mul2x2_32x32_fusion.c"/>
        <files mask="fft_cplx_twd256_24x24_fusion.c"/>
        <files mask="mtx_vecmpy16x16_fusion.c"/>
        <files mask="alog10f_tbl.c"/>
        <files mask="vec_shift32x32_fast_fusion.c"/>
        <files mask="mtx_add4x4f_fusion.c"/>
        <files mask="fir_blmsf_fusion.c"/>
        <files mask="vec_logn_32x32_fusion.c"/>
        <files mask="scl_antilogn_16x16_fusion.c"/>
        <files mask="bqriirf_df1_fusion.c"/>
        <files mask="fft_cplx_twd128_fusion.c"/>
        <files mask="vec_scalef_fusion.c"/>
        <files mask="vec_complex2mag_fusion.c"/>
        <files mask="vec_log10_24x24_fusion.c"/>
        <files mask="vec_shift16x16_fusion.c"/>
        <files mask="fft_cplx_twd128_32x32_fusion.c"/>
        <files mask="fft_cplx_twd1024_fusion.c"/>
        <files mask="fir_lxcorra16x16_fusion.c"/>
        <files mask="fft_realf_ie_fusion.c"/>
        <files mask="fir_xcorr16x16_fusion.c"/>
        <files mask="bkfirf_process_fusion.c"/>
        <files mask="cmtx_inv2x2f_fusion.c"/>
        <files mask="cmtx_det4x4f_fusion.c"/>
        <files mask="fft_real24x24_ie_fusion.c"/>
        <files mask="mtx_det2x2f_fusion.c"/>
        <files mask="scl_bexpf_fusion.c"/>
        <files mask="mtx_mul3x3_16x16_fusion.c"/>
        <files mask="bqriir24x24_df2_fusion.c"/>
        <files mask="vec_atan2_16x16_fusion.c"/>
        <files mask="vec_log2_16x16_fusion.c"/>
        <files mask="fir_lconvolaf_fusion.c"/>
        <files mask="ifft_cplx_twd1024_fusion.c"/>
        <files mask="vec_alog_table.c"/>
        <files mask="mtx_tran3x3_32x32_fusion.c"/>
        <files mask="fft_revorder_ie_fusion.c"/>
        <files mask="vec_max16x16_fast_fusion.c"/>
        <files mask="ifft_cplx_twd4096_24x24_fusion.c"/>
        <files mask="mtx_det3x3_32x32_fusion.c"/>
        <files mask="vec_bexp16_fast_fusion.c"/>
        <files mask="scl_divide24x24_fusion.c"/>
        <files mask="vec_sqrt24x24_fusion.c"/>
        <files mask="expf_tbl.c"/>
        <files mask="fir_convola16x16_fusion.c"/>
        <files mask="tan16x16_tbl.c"/>
        <files mask="fft_cplx24x24_ie_fusion.c"/>
        <files mask="polyrsqrtq23_tbl.c"/>
        <files mask="vec_add32x32_fusion.c"/>
        <files mask="firinterp32x32_D3_fusion.c"/>
        <files mask="latrfX_fusion.c"/>
        <files mask="vec_poly8f_fusion.c"/>
        <files mask="scl_acosf_fusion.c"/>
        <files mask="vec_poly4_24x24_fusion.c"/>
        <files mask="bqriir16x16_df1_fusion.c"/>
        <files mask="cmtx_sub2x2f_fusion.c"/>
        <files mask="scl_sine32x32_fusion.c"/>
        <files mask="fir_decimaf_Dx_fusion.c"/>
        <files mask="raw_lcorrf.c"/>
        <files mask="mtx_tran2x2_16x16_fusion.c"/>
        <files mask="cxfirf_fusion.c"/>
        <files mask="fft_cplx_twd1024_16x16_fusion.c"/>
        <files mask="mtx_sub4x4_32x32_fusion.c"/>
        <files mask="vec_minf_fusion.c"/>
        <files mask="firdec16x16_D3_fusion.c"/>
        <files mask="firinterp32x16_fusion.c"/>
        <files mask="mtx_mpyf_fusion.c"/>
        <files mask="bqriir32x16_df1_fusion.c"/>
        <files mask="scl_log10_16x16_fusion.c"/>
        <files mask="vec_rsqrtf_fusion.c"/>
        <files mask="fir_acorr16x16_fusion.c"/>
        <files mask="mtx_sub3x3_32x32_fusion.c"/>
        <files mask="fir_lconvola32x32_fusion.c"/>
        <files mask="bq3iir32x16_df2_fusion.c"/>
        <files mask="fft_cplx24x24_fusion.c"/>
        <files mask="dct_16x16_fusion.c"/>
        <files mask="vec_log10_16x16_fusion.c"/>
        <files mask="scl_atan16x16_fusion.c"/>
        <files mask="inv2pif_tbl.c"/>
        <files mask="fir_lacorraf_fusion.c"/>
        <files mask="vec_power32x32_fusion.c"/>
        <files mask="mtx_mul3x3f_fusion.c"/>
        <files mask="mtx_mul4x4f_fusion.c"/>
        <files mask="scl_float2floor_fusion.c"/>
        <files mask="vec_tan24x24_fusion.c"/>
        <files mask="mtx_mul2x2_16x16_fusion.c"/>
        <files mask="scl_asinf_fusion.c"/>
        <files mask="fft_cplx32x16_fusion.c"/>
        <files mask="fir_blms24x24_fusion.c"/>
        <files mask="vec_power32x32_fast_fusion.c"/>
        <files mask="fft_stage_last_ie_fusion.c"/>
        <files mask="firinterp16x16_fusion.c"/>
        <files mask="fft_cplx_twd256_fusion.c"/>
        <files mask="fir_xcorr32x32_fusion.c"/>
        <files mask="scl_atan_table.c"/>
        <files mask="mtx_add4x4_16x16_fusion.c"/>
        <files mask="fft_cplx16x16_fusion.c"/>
        <files mask="raw_corr32x32_fusion.c"/>
        <files mask="scl_sine16x16_fusion.c"/>
        <files mask="vec_log2_24x24_fusion.c"/>
        <files mask="vec_antilog2f_fusion.c"/>
        <files mask="scl_tanf_fusion.c"/>
        <files mask="vec_log_table.c"/>
        <files mask="cmtx_mul4x4_32x32_fusion.c"/>
        <files mask="vec_antilog2_16x16_fusion.c"/>
        <files mask="ifft_real32x16_fusion.c"/>
        <files mask="vec_divide16x16_fast_fusion.c"/>
        <files mask="ifft_real16x16_fusion.c"/>
        <files mask="vec_divide24x24_fast_fusion.c"/>
        <files mask="fft_cplx_twd32_32x32_fusion.c"/>
        <files mask="fir_interpf_2x_fusion.c"/>
        <files mask="dct_24x24_fusion.c"/>
        <files mask="vec_recip_table.c"/>
        <files mask="bqciirf_df1_process_fusion.c"/>
        <files mask="vec_scale32x24_fast_fusion.c"/>
        <files mask="vec_dot24x24_fast_fusion.c"/>
        <files mask="vec_cosinef_fusion.c"/>
        <files mask="cmtx_mul3x3_32x32_fusion.c"/>
        <files mask="mtx_add3x3_32x32_fusion.c"/>
        <files mask="bq3iirf_df1_fusion.c"/>
        <files mask="cxfir24x24_fusion.c"/>
        <files mask="dct_32x32_fusion.c"/>
        <files mask="sinf_tbl.c"/>
        <files mask="tanf_tbl.c"/>
        <files mask="polyatan16x16q23_tbl.c"/>
        <files mask="firinterp32x32_DX_fusion.c"/>
        <files mask="mtx_sub4x4_16x16_fusion.c"/>
        <files mask="vec_add16x16_fusion.c"/>
        <files mask="scl_divide16x16_fusion.c"/>
        <files mask="vec_poly8_32x32_fusion.c"/>
        <files mask="ifft_cplx_twd128_fusion.c"/>
        <files mask="latr16x16_fusion.c"/>
        <files mask="fft_real_twd32_fusion.c"/>
        <files mask="vec_lognf_fusion.c"/>
        <files mask="latrf6_fusion.c"/>
        <files mask="vec_asinf_fusion.c"/>
        <files mask="cmtx_add2x2f_fusion.c"/>
        <files mask="fir_xcorra32x32_fusion.c"/>
        <files mask="bq3iir32x16_df1_fusion.c"/>
        <files mask="vec_min24x24_fast_fusion.c"/>
        <files mask="vec_max32x32_fast_fusion.c"/>
        <files mask="latrf5_fusion.c"/>
        <files mask="vec_float2int_fusion.c"/>
        <files mask="ifft_cplx_twd512_16x16_fusion.c"/>
        <files mask="raw_corr24x24_fusion.c"/>
        <files mask="vec_maxf_fusion.c"/>
        <files mask="scl_tan32x32_fusion.c"/>
        <files mask="cmtx_tran2x2_16x16_fusion.c"/>
        <files mask="latr32x32_fusion.c"/>
        <files mask="mtx_det4x4f_fusion.c"/>
        <files mask="firdec32x32_D3_fusion.c"/>
        <files mask="cmtx_tran3x3f_fusion.c"/>
        <files mask="ifft_cplx_twd32_fusion.c"/>
        <files mask="fft_real24x24_fusion.c"/>
        <files mask="vec_dividef_fusion.c"/>
        <files mask="bqriirf_df2t_fusion.c"/>
        <files mask="cmtx_sub3x3_16x16_fusion.c"/>
        <files mask="bqciirf_df1_fusion.c"/>
        <files mask="fir_lxcorra32x32_fusion.c"/>
        <files mask="firdec32x32_D4_fusion.c"/>
        <files mask="scl_sqrt_table.c"/>
        <files mask="firdec24x24_fusion.c"/>
        <files mask="cmtx_tran4x4_16x16_fusion.c"/>
        <files mask="raw_corr32x16_fusion.c"/>
        <files mask="scl_atan32x32_fusion.c"/>
        <files mask="mtx_det4x4_16x16_fusion.c"/>
        <files mask="vec_cosine16x16_fusion.c"/>
        <files mask="bkfir16x16_fusion.c"/>
        <files mask="cmtx_sub4x4f_fusion.c"/>
        <files mask="fir_acorra24x24_fusion.c"/>
        <files mask="ifft_cplx_twd1024_24x24_fusion.c"/>
        <files mask="scl_atan_table16.c"/>
        <files mask="ifft_cplx32x16_ie_fusion.c"/>
        <files mask="bq3iirf_df2_fusion.c"/>
        <files mask="vec_poly8_24x24_fusion.c"/>
        <files mask="fft_cplx32x16_ie_fusion.c"/>
        <files mask="ifft_cplx_twd128_16x16_fusion.c"/>
        <files mask="vec_atan24x24_fusion.c"/>
        <files mask="fft_cplx_inc256_fusion.c"/>
        <files mask="mtx_add3x3f_fusion.c"/>
        <files mask="cxfirinterp16x16_DX_fusion.c"/>
        <files mask="lognf_tbl.c"/>
        <files mask="firdec16x16_fusion.c"/>
        <files mask="vec_atan32x32_fusion.c"/>
        <files mask="bkfir32x16_fusion.c"/>
        <files mask="firinterpf_fusion.c"/>
        <files mask="cxfir_convola32x16_fusion.c"/>
        <files mask="ifft_cplx32x16_fusion.c"/>
        <files mask="vec_log2_32x32_fusion.c"/>
        <files mask="vec_scale24x24_fast_fusion.c"/>
        <files mask="mtx_add3x3_16x16_fusion.c"/>
        <files mask="fft_cplx_twd2048_16x16_fusion.c"/>
        <files mask="fft_cplx_twd512_fusion.c"/>
        <files mask="ifft_cplx_twd4096_fusion.c"/>
        <files mask="fir_convola24x24_fusion.c"/>
        <files mask="vec_poly8_16x16_fusion.c"/>
        <files mask="cmtx_sub2x2_16x16_fusion.c"/>
        <files mask="mtx_vecmpy32x32_fast_fusion.c"/>
        <files mask="vec_dot32x32_fast_fusion.c"/>
        <files mask="mtx_mul4x4_16x16_fusion.c"/>
        <files mask="bq3iirf_df1_process_fusion.c"/>
        <files mask="vec_dot32x32_fusion.c"/>
        <files mask="ifft_cplx_twd32_24x24_fusion.c"/>
        <files mask="vec_power16x16_fast_fusion.c"/>
        <files mask="dctf_fusion.c"/>
        <files mask="firdec16x16_D2_fusion.c"/>
        <files mask="vec_max16x16_fusion.c"/>
        <files mask="pif_tbl.c"/>
        <files mask="ifft_real32x32_fusion.c"/>
        <files mask="fir_blms16x16_fusion.c"/>
        <files mask="fft_cplx_twd64_fusion.c"/>
        <files mask="latrf3_fusion.c"/>
        <files mask="vec_sqrt24x24_fast_fusion.c"/>
        <files mask="scl_antilogn_24x24_fusion.c"/>
        <files mask="vec_min24x24_fusion.c"/>
        <files mask="fft_cplx_twd64_24x24_fusion.c"/>
        <files mask="vec_antilog10_24x24_fusion.c"/>
        <files mask="firinterp16x16_D4_fusion.c"/>
        <files mask="scl_int2float_fusion.c"/>
        <files mask="bqriirf_df2_fusion.c"/>
        <files mask="cmtx_tran3x3_16x16_fusion.c"/>
        <files mask="fft_cplx_twd256_16x16_fusion.c"/>
        <files mask="fft_cplx_twd512_16x16_fusion.c"/>
        <files mask="vec_atan16x16_fusion.c"/>
        <files mask="vec_subf_fusion.c"/>
        <files mask="fft_cplx_twd2048_24x24_fusion.c"/>
        <files mask="mtx_mpy16x16_m8p2_fusion.c"/>
        <files mask="cxfirinterp16x16_D4_fusion.c"/>
        <files mask="nan_tbl.c"/>
        <files mask="ifft_realf_ie_fusion.c"/>
        <files mask="cmtx_det4x4_16x16_fusion.c"/>
        <files mask="vec_add24x24_fusion.c"/>
        <files mask="scl_sqrtf_fusion.c"/>
        <files mask="fft_cplx_twd4096_32x32_fusion.c"/>
        <files mask="bqriirf_df2t_process_fusion.c"/>
        <files mask="firdec16x16_DX_fusion.c"/>
        <files mask="vec_acosf_fusion.c"/>
        <files mask="scl_log2_16x16_fusion.c"/>
        <files mask="vec_add32x32_fusion_fast.c"/>
        <files mask="vec_poly4_16x16_fusion.c"/>
        <files mask="latr24x24_fusion.c"/>
        <files mask="mtx_vecmpyf_fusion.c"/>
        <files mask="vec_sine24x24_fast_fusion.c"/>
        <files mask="scl_logn_32x32_fusion.c"/>
        <files mask="mtx_mpy24x24_m8p2_fusion.c"/>
        <files mask="cmtx_mul3x3_16x16_fusion.c"/>
        <files mask="mtx_sub2x2f_fusion.c"/>
        <files mask="ifft_cplx24x24_ie_fusion.c"/>
        <files mask="firdec32x32_D2_fusion.c"/>
        <files mask="firinterp24x24_fusion.c"/>
        <files mask="vec_scale32x24_fusion.c"/>
        <files mask="firinterp32x32_D2_fusion.c"/>
        <files mask="vec_add16x16_fusion_fast.c"/>
        <files mask="version.c"/>
        <files mask="scl_recip24x24_fusion.c"/>
        <files mask="vec_min16x16_fusion.c"/>
        <files mask="scl_dividef_fusion.c"/>
        <files mask="bq3iir32x32_df1_fusion.c"/>
        <files mask="vec_bexp32_fast_fusion.c"/>
        <files mask="mtx_add4x4_32x32_fusion.c"/>
        <files mask="cmtx_sub4x4_32x32_fusion.c"/>
        <files mask="cmtx_add3x3_16x16_fusion.c"/>
        <files mask="scl_bexp16_fusion.c"/>
        <files mask="fft_real_twiddles_24x24.c"/>
        <files mask="fir_convol16x16_fusion.c"/>
        <files mask="firinterp32x32_D4_fusion.c"/>
        <files mask="latrf_fusion.c"/>
        <files mask="raw_corr16x16_fusion.c"/>
        <files mask="ifft_cplx_twd2048_fusion.c"/>
        <files mask="vec_log10_32x32_fusion.c"/>
        <files mask="fir_acorrf_fusion.c"/>
        <files mask="latrf7_fusion.c"/>
        <files mask="scl_sinef_fusion.c"/>
        <files mask="scl_antilog2_16x16_fusion.c"/>
        <files mask="fir_acorra32x32_fusion.c"/>
        <files mask="scl_logn_24x24_fusion.c"/>
        <files mask="vec_poly4_32x32_fusion.c"/>
        <files mask="fft_cplx_inc4096_fusion.c"/>
        <files mask="vec_dot16x16_fusion.c"/>
        <files mask="vec_bexp32_fusion.c"/>
        <files mask="fir_decimaf_2x_fusion.c"/>
        <files mask="vec_antilogn_24x24_fusion.c"/>
        <files mask="ifft_cplx32x32_fusion.c"/>
        <files mask="vec_scale24x24_fusion.c"/>
        <files mask="mtx_mul3x3_32x32_fusion.c"/>
        <files mask="ifft_cplx24x24_fusion.c"/>
        <files mask="mtx_vecmpy16x16_fast_fusion.c"/>
        <files mask="ifft_cplx_twd128_24x24_fusion.c"/>
        <files mask="vec_logn_16x16_fusion.c"/>
        <files mask="fft_real24x24_ie_24p_fusion.c"/>
        <files mask="fft_cplx_twd32_24x24_fusion.c"/>
        <files mask="mtx_mpyf_fast_fusion.c"/>
        <files mask="fir_acorr32x32_fusion.c"/>
        <files mask="scl_tan24x24_fusion.c"/>
        <files mask="scl_float2int_fusion.c"/>
        <files mask="vec_dotf_fusion.c"/>
        <files mask="fir_convol32x32_fusion.c"/>
        <files mask="latrf4_fusion.c"/>
        <files mask="vec_tanf_fusion.c"/>
        <files mask="fft_unpack24to32_s1_ie_fusion.c"/>
        <files mask="mtx_inv4x4f_fusion.c"/>
        <files mask="cmtx_add2x2_16x16_fusion.c"/>
        <files mask="vec_recip24x24_fusion.c"/>
        <files mask="mtx_mul2x2_32x32_fusion.c"/>
        <files mask="scl_sqrt16x16_fusion.c"/>
        <files mask="fir_acorra16x16_fusion.c"/>
        <files mask="fft_cplx_twd128_16x16_fusion.c"/>
        <files mask="polypow2q23_tbl.c"/>
        <files mask="ifft_cplx_twd256_24x24_fusion.c"/>
        <files mask="cmtx_mul4x4_16x16_fusion.c"/>
        <files mask="fir_lconvola16x16_fusion.c"/>
        <files mask="mtx_sub2x2_32x32_fusion.c"/>
        <files mask="cmtx_sub2x2_32x32_fusion.c"/>
        <files mask="cmtx_sub3x3_32x32_fusion.c"/>
        <files mask="mtx_add2x2_16x16_fusion.c"/>
        <files mask="scl_antilog2_24x24_fusion.c"/>
        <files mask="vec_min32x32_fusion.c"/>
        <files mask="cxfir_convol32x16_fusion.c"/>
        <files mask="vec_antilog10_32x32_fusion.c"/>
        <files mask="cxfirinterp16x16_D2_fusion.c"/>
        <files mask="cmtx_mul2x2f_fusion.c"/>
        <files mask="mtx_tran3x3f_fusion.c"/>
        <files mask="mtx_add2x2f_fusion.c"/>
        <files mask="vec_sine32x32_fast_fusion.c"/>
        <files mask="fft_cplx_twd2048_32x32_fusion.c"/>
        <files mask="ifft_cplx_twd512_fusion.c"/>
        <files mask="fir_convolf_fusion.c"/>
        <files mask="mtx_mpy32x32_fast_fusion.c"/>
        <files mask="cmtx_tran4x4f_fusion.c"/>
        <files mask="vec_max24x24_fast_fusion.c"/>
        <files mask="vec_dot24x24_fusion.c"/>
        <files mask="cmtx_tran3x3_32x32_fusion.c"/>
        <files mask="vec_divide32x32_fusion.c"/>
        <files mask="firdec16x16_D4_fusion.c"/>
        <files mask="mtx_tran2x2f_fusion.c"/>
        <files mask="fft_cplx_inc64_fusion.c"/>
        <files mask="ifft_cplxf_ie_fusion.c"/>
        <files mask="mtx_mpy32x32_fusion.c"/>
        <files mask="cmtx_add4x4_32x32_fusion.c"/>
        <files mask="latrf2_fusion.c"/>
        <files mask="vec_int2float_fusion.c"/>
        <files mask="bkfir32x32_fusion.c"/>
        <files mask="scl_lognf_fusion.c"/>
        <files mask="fft_cplx_twd4096_24x24_fusion.c"/>
        <files mask="vec_addf_fusion.c"/>
        <files mask="mtx_vecmpyf_fast_fusion.c"/>
        <files mask="ifft_cplx_twd2048_16x16_fusion.c"/>
        <files mask="inff_tbl.c"/>
        <files mask="q2rot_16x16_fusion.c"/>
        <files mask="fft_real_twiddles.c"/>
        <files mask="fir_blms32x32_fusion.c"/>
        <files mask="scl_antilog10f_fusion.c"/>
        <files mask="fir_blms16x32_fusion.c"/>
        <files mask="scl_antilog10_16x16_fusion.c"/>
        <files mask="fft_cplx_twd512_24x24_fusion.c"/>
        <files mask="vec_atan2f_fusion.c"/>
        <files mask="fir_xcorraf_fusion.c"/>
        <files mask="scl_log10_32x32_fusion.c"/>
        <files mask="bqriir32x32_df1_fusion.c"/>
        <files mask="fir_decimaf_3x_fusion.c"/>
        <files mask="fir_convola32x32_fusion.c"/>
        <files mask="fir_convola32x16_fusion.c"/>
        <files mask="cmtx_sub4x4_16x16_fusion.c"/>
        <files mask="cmtx_det4x4_32x32_fusion.c"/>
        <files mask="mtx_vecmpy24x24_fast_fusion.c"/>
        <files mask="fir_lxcorraf_fusion.c"/>
        <files mask="ifft_cplx_twd2048_24x24_fusion.c"/>
        <files mask="vec_bexpf_fusion.c"/>
        <files mask="vec_dot32x16_fast_fusion.c"/>
        <files mask="bkfiraf_fusion.c"/>
        <files mask="mtx_mpy16x16_fusion.c"/>
        <files mask="ifft_cplx_twd64_fusion.c"/>
        <files mask="bkfira16x16_fusion.c"/>
        <files mask="scl_sine24x24_fusion.c"/>
        <files mask="firdec32x16_fusion.c"/>
        <files mask="vec_scale_sf_fusion.c"/>
        <files mask="vec_recipf_fusion.c"/>
        <files mask="vec_antilogn_32x32_fusion.c"/>
        <files mask="fir_interpf_4x_fusion.c"/>
        <files mask="cmtx_tran2x2f_fusion.c"/>
        <files mask="vec_antilognf_fusion.c"/>
        <files mask="vec_recip16x16_fusion.c"/>
        <files mask="fft_cplx_inc512_fusion.c"/>
        <files mask="ifft_cplx16x16_fusion.c"/>
        <files mask="bqriirf_df2_process_fusion.c"/>
        <files mask="vec_cosine32x32_fast_fusion.c"/>
        <files mask="vec_log2f_fusion.c"/>
        <files mask="fir_xcorra16x16_fusion.c"/>
        <files mask="scl_antilog2_32x32_fusion.c"/>
        <files mask="scl_divide32x32_fusion.c"/>
        <files mask="raw_lcorr32x16_fusion.c"/>
        <files mask="vec_power16x16_fusion.c"/>
        <files mask="firdec32x32_DX_fusion.c"/>
        <files mask="scl_antilognf_fusion.c"/>
        <files mask="fft_cplx_twd16_24x24_fusion.c"/>
        <files mask="raw_corrf_fusion.c"/>
        <files mask="firinterp16x16_DX_fusion.c"/>
        <files mask="bq3iir16x16_df1_fusion.c"/>
        <files mask="bkfir24x24p_fusion.c"/>
        <files mask="scl_cosine24x24_fusion.c"/>
        <files mask="firinterp32x32_fusion.c"/>
        <files mask="mtx_det4x4_32x32_fusion.c"/>
        <files mask="cmtx_inv3x3f_fusion.c"/>
        <files mask="vec_power24x24_fusion.c"/>
        <files mask="mtx_vecmpy32x32_fusion.c"/>
        <files mask="vec_shift16x16_fast_fusion.c"/>
        <files mask="vec_shift24x24_fusion.c"/>
        <files mask="vec_divide32x32_fast_fusion.c"/>
        <files mask="vec_antilog10f_fusion.c"/>
        <files mask="cmtx_det2x2f_fusion.c"/>
        <files mask="bqriir32x16_df2_fusion.c"/>
        <files mask="vec_poly4f_fusion.c"/>
        <files mask="scl_atan24x24_fusion.c"/>
        <files mask="mtx_sub4x4f_fusion.c"/>
        <files mask="scl_rsqrtf_fusion.c"/>
        <files mask="fir_interpf_3x_fusion.c"/>
        <files mask="vec_antilog2_24x24_fusion.c"/>
        <files mask="q2rot_32x32_fusion.c"/>
        <files mask="fft_cplx_inc2048_fusion.c"/>
        <files mask="cxfirinterp16x16_D3_fusion.c"/>
        <files mask="vec_sine16x16_fusion.c"/>
        <files mask="mtx_det2x2_16x16_fusion.c"/>
        <files mask="fft_cplx_inc1024_fusion.c"/>
        <files mask="vec_powerf_fusion.c"/>
        <files mask="fir_decimaf_4x_fusion.c"/>
        <files mask="fft_cplx_twd64_32x32_fusion.c"/>
        <files mask="mtx_inv3x3f_fusion.c"/>
        <files mask="vec_antilog10_16x16_fusion.c"/>
        <files mask="ifft_cplx_twd64_16x16_fusion.c"/>
        <files mask="ifft_cplx_twd32_16x16_fusion.c"/>
        <files mask="cmtx_sub3x3f_fusion.c"/>
        <files mask="mtx_mpy24x24_fusion.c"/>
        <files mask="cmtx_tran4x4_32x32_fusion.c"/>
        <files mask="cmtx_add4x4f_fusion.c"/>
        <files mask="vec_sqrt32x32_fast_fusion.c"/>
        <files mask="fft_cplx_twd1024_24x24_fusion.c"/>
        <files mask="fft_cplx_twd16_16x16_fusion.c"/>
        <files mask="vec_sqrt16x16_fusion.c"/>
        <files mask="fft_cplx_twd16_fusion.c"/>
        <files mask="scl_logn_16x16_fusion.c"/>
        <files mask="fft_cplx_twd16_32x32_fusion.c"/>
        <files mask="scl_cosine32x32_fusion.c"/>
        <files mask="vec_tan16x16_fusion.c"/>
        <files mask="firdec32x32_fusion.c"/>
        <files mask="vec_logn_24x24_fusion.c"/>
        <files mask="scl_antilog10_32x32_fusion.c"/>
        <files mask="fir_xcorr32x16_fusion.c"/>
        <files mask="cmtx_tran2x2_32x32_fusion.c"/>
        <files mask="mtx_tran4x4_16x16_fusion.c"/>
        <files mask="vec_sub32x32_fusion.c"/>
        <files mask="vec_atanf_fusion.c"/>
        <files mask="log10f_tbl.c"/>
        <files mask="vec_cosine24x24_fast_fusion.c"/>
        <files mask="cmtx_det3x3_32x32_fusion.c"/>
        <files mask="scl_recip16x16_fusion.c"/>
        <files mask="cmtx_inv4x4f_fusion.c"/>
        <files mask="fft_cplx_twd32_16x16_fusion.c"/>
        <files mask="firinterp16x16_D3_fusion.c"/>
        <files mask="scl_complex2mag_fusion.c"/>
        <files mask="vec_shift32x32_fusion.c"/>
        <files mask="fir_xcorra24x24_fusion.c"/>
        <files mask="ifft_cplx_twd256_16x16_fusion.c"/>
        <files mask="vec_bexp24_fast_fusion.c"/>
        <files mask="cmtx_add3x3f_fusion.c"/>
        <files mask="scl_sine_table32.c"/>
        <files mask="scl_recipf_fusion.c"/>
        <files mask="bq3iirf_df2_process_fusion.c"/>
        <files mask="fir_convolaf_fusion.c"/>
        <files mask="fir_lxcorra32x16_fusion.c"/>
        <files mask="vec_sine32x32_fusion.c"/>
        <files mask="fir_lacorra16x16_fusion.c"/>
        <files mask="vec_max24x24_fusion.c"/>
        <files mask="scl_log2_24x24_fusion.c"/>
        <files mask="bkfir24x24_fusion.c"/>
        <files mask="mtx_mul2x2f_fusion.c"/>
        <files mask="raw_lcorr16x16_fusion.c"/>
        <files mask="scl_cosine16x16_fusion.c"/>
        <files mask="ifft_cplx_twd16_fusion.c"/>
        <files mask="cmtx_add3x3_32x32_fusion.c"/>
        <files mask="cmtx_mul3x3f_fusion.c"/>
        <files mask="vec_sub16x16_fusion.c"/>
        <files mask="cxfir32x32_fusion.c"/>
        <files mask="vec_recip32x32_fusion.c"/>
        <files mask="cmtx_mul4x4f_fusion.c"/>
        <files mask="vec_add24x24_fusion_fast.c"/>
        <files mask="fft_cplx_twd32_fusion.c"/>
        <files mask="mtx_sub2x2_16x16_fusion.c"/>
        <files mask="cmtx_det2x2_32x32_fusion.c"/>
        <files mask="raw_lcorr32x32_fusion.c"/>
        <files mask="fft_cplx_twd4096_fusion.c"/>
        <files mask="fft_real16x16_fusion.c"/>
        <files mask="fir_lacorra32x32_fusion.c"/>
        <files mask="vec_sinef_fusion.c"/>
        <files mask="cxfir_xcorraf_fusion.c"/>
        <files mask="bkfiraf_process_fusion.c"/>
        <files mask="fft_cplx_twiddles_24x24.c"/>
        <files mask="dct_32x16_fusion.c"/>
        <files mask="fft_cplx_twd256_32x32_fusion.c"/>
        <files mask="feature.c"/>
        <files mask="fft_cplx_twd1024_32x32_fusion.c"/>
        <files mask="bqriir24x24_df1_fusion.c"/>
        <files mask="vec_log10f_fusion.c"/>
        <files mask="log2f_tbl.c"/>
        <files mask="vec_complex2invmag_fusion.c"/>
        <files mask="scl_log10_24x24_fusion.c"/>
        <files mask="nanf_tbl.c"/>
        <files mask="fir_acorraf_fusion.c"/>
        <files mask="fft_pack24_ie_fusion.c"/>
        <files mask="cxfirinterp16x16_fusion.c"/>
        <files mask="mtx_sub3x3f_fusion.c"/>
        <files mask="atanf_tbl.c"/>
        <files mask="scl_log2f_fusion.c"/>
        <files mask="fir_lconvola32x16_fusion.c"/>
        <files mask="cxfir_xcorrf_fusion.c"/>
        <files mask="fft_real32x32_fusion.c"/>
        <files mask="vec_divide16x16_fusion.c"/>
        <files mask="ifft_cplx_twd256_fusion.c"/>
        <files mask="ifft_cplx_twd16_16x16_fusion.c"/>
        <files mask="firinterp16x16_D2_fusion.c"/>
        <files mask="fir_convol32x16_fusion.c"/>
        <files mask="fft_cplx_twd128_24x24_fusion.c"/>
        <files mask="scl_sine_table16.c"/>
        <files mask="mtx_mul4x4_32x32_fusion.c"/>
        <files mask="scl_atanf_fusion.c"/>
        <files mask="cmtx_add2x2_32x32_fusion.c"/>
        <files mask="scl_atan2_16x16_fusion.c"/>
        <files mask="latrf8_fusion.c"/>
        <files mask="fft_real32x16_ie_24p_fusion.c"/>
        <files mask="mtx_det3x3f_fusion.c"/>
        <files mask="scl_antilogn_32x32_fusion.c"/>
        <files mask="ifft_cplx_twd1024_16x16_fusion.c"/>
        <files mask="mtx_inv2x2f_fusion.c"/>
        <files mask="fft_cplx_twd64_16x16_fusion.c"/>
        <files mask="vec_bexp24_fusion.c"/>
        <files mask="vec_power24x24_fast_fusion.c"/>
        <files mask="fft_cplx_twd2048_fusion.c"/>
        <files mask="scl_antilog2f_fusion.c"/>
        <files mask="bqriir16x16_df2_fusion.c"/>
        <files mask="vec_float2floor_fusion.c"/>
        <files mask="fft_real32x16_ie_fusion.c"/>
        <files mask="bkfirf_fusion.c"/>
        <files mask="scl_cosinef_fusion.c"/>
        <files mask="vec_sine24x24_fusion.c"/>
        <files mask="fir_acorr24x24_fusion.c"/>
        <files mask="vec_min16x16_fast_fusion.c"/>
        <files mask="asinf_tbl.c"/>
        <files mask="vec_scale16x16_fast_fusion.c"/>
        <files mask="bkfira32x16_fusion.c"/>
        <files mask="cxfir32x16_fusion.c"/>
        <files mask="fft_cplx_24x24_s1_ie_fusion.c"/>
        <files mask="mtx_det3x3_16x16_fusion.c"/>
        <files mask="ifft_cplx_twd64_24x24_fusion.c"/>
        <files mask="scl_bexp32_fusion.c"/>
        <files mask="vec_sqrt32x32_fusion.c"/>
        <files mask="mtx_vecmpy24x24_fusion.c"/>
        <files mask="scl_recip32x32_fusion.c"/>
        <files mask="bqriir32x32_df2_fusion.c"/>
        <files mask="vec_float2ceil_fusion.c"/>
        <files mask="scl_sqrt24x24_fusion.c"/>
        <files mask="cmtx_det2x2_16x16_fusion.c"/>
        <files mask="bkfira32x32_fusion.c"/>
        <files mask="latrf1_fusion.c"/>
        <files mask="cxfirf_process_fusion.c"/>
        <files mask="fir_interpf_Dx_fusion.c"/>
        <files mask="vec_shift24x24_fast_fusion.c"/>
        <files mask="ifft_real24x24_ie_fusion.c"/>
        <files mask="vec_cosine24x24_fusion.c"/>
        <files mask="latr32x16_fusion.c"/>
        <files mask="vec_max32x32_fusion.c"/>
        <files mask="cxfir16x16_fusion.c"/>
        <files mask="cmtx_mul2x2_16x16_fusion.c"/>
        <files mask="cmtx_det3x3f_fusion.c"/>
        <files mask="fft_cplx_inc128_fusion.c"/>
        <files mask="mtx_tran4x4_32x32_fusion.c"/>
        <files mask="scl_antilog10_24x24_fusion.c"/>
        <files mask="alog2f_tbl.c"/>
        <files mask="scl_atan2f_fusion.c"/>
        <files mask="scl_complex2invmag_fusion.c"/>
        <files mask="vec_scale16x16_fusion.c"/>
        <files mask="ifft_real24x24_fusion.c"/>
        <files mask="cmtx_det3x3_16x16_fusion.c"/>
        <files mask="ifft_cplx_twd4096_16x16_fusion.c"/>
        <files mask="mtx_tran2x2_32x32_fusion.c"/>
        <files mask="mtx_det2x2_32x32_fusion.c"/>
        <files mask="fir_convol24x24_fusion.c"/>
        <files mask="fft_cplx_twd512_32x32_fusion.c"/>
        <files mask="mtx_tran4x4f_fusion.c"/>
        <files mask="fft_cplx_twd4096_16x16_fusion.c"/>
        <files mask="bkfira24x24_fusion.c"/>
        <files mask="logq23_tbl.c"/>
        <files mask="vec_dot16x16_fast_fusion.c"/>
        <files mask="ifft_cplx_twd16_24x24_fusion.c"/>
        <files mask="scl_log2_32x32_fusion.c"/>
        <files mask="fft_real32x16_fusion.c"/>
        <files mask="scl_float2ceil_fusion.c"/>
        <files mask="scl_log10f_fusion.c"/>
        <files mask="vec_min32x32_fast_fusion.c"/>
        <files mask="vec_cosine32x32_fusion.c"/>
        <files mask="ifft_real32x16_ie_fusion.c"/>
        <files mask="fir_xcorrf_fusion.c"/>
        <files mask="mtx_tran3x3_16x16_fusion.c"/>
        <files mask="mtx_sub3x3_16x16_fusion.c"/>
        <files mask="vec_tan32x32_fusion.c"/>
        <files mask="scl_sqrt32x32_fusion.c"/>
        <files mask="sqrt2f_tbl.c"/>
        <files mask="fft_cplxf_ie_fusion.c"/>
        <files mask="bq3iir16x16_df2_fusion.c"/>
        <files mask="ifft_real32x16_ie_24p_fusion.c"/>
      </source>
      <source relative_path="naturedsp/fusionf1/include" type="c_include">
        <files mask="NatureDSP_types.h"/>
        <files mask="NatureDSP_Signal.h"/>
      </source>
      <source relative_path="naturedsp/fusionf1/include_private" type="c_include">
        <files mask="scl_sine_table16.h"/>
        <files mask="bqciirf_df1.h"/>
        <files mask="fir_interpf_3x.h"/>
        <files mask="polypow2q23_tbl.h"/>
        <files mask="fir_interpf_4x.h"/>
        <files mask="scl_sqrt_table.h"/>
        <files mask="bq3iirf_df1.h"/>
        <files mask="scl_sine_table32.h"/>
        <files mask="fir_decimaf_2x.h"/>
        <files mask="fir_interpf_2x.h"/>
        <files mask="common.h"/>
        <files mask="log2f_tbl.h"/>
        <files mask="vec_recip_table.h"/>
        <files mask="fft_cplx_twiddles_32x32.h"/>
        <files mask="NatureDSP_baseopMSVC.h"/>
        <files mask="inff_tbl.h"/>
        <files mask="fir_interpf_Dx.h"/>
        <files mask="fft_real_twiddles.h"/>
        <files mask="scl_atan_table.h"/>
        <files mask="firdec16x16_common.h"/>
        <files mask="logq23_tbl.h"/>
        <files mask="raw_corr24x24.h"/>
        <files mask="sinf_tbl.h"/>
        <files mask="vec_alog_table.h"/>
        <files mask="raw_corr16x16.h"/>
        <files mask="cxfirf.h"/>
        <files mask="polyrsqrtq23_tbl.h"/>
        <files mask="bqriirf_df2.h"/>
        <files mask="raw_corrf.h"/>
        <files mask="pif_tbl.h"/>
        <files mask="expf_tbl.h"/>
        <files mask="alog10f_tbl.h"/>
        <files mask="fir_decimaf_4x.h"/>
        <files mask="__fenv.h"/>
        <files mask="NatureDSP_baseopGCC.h"/>
        <files mask="cxfirinterp16x16_common.h"/>
        <files mask="NatureDSP_baseopXtensa.h"/>
        <files mask="vec_sub.h"/>
        <files mask="firdec32x32_common.h"/>
        <files mask="firinterp16x16_common.h"/>
        <files mask="raw_corr32x32.h"/>
        <files mask="vec_log_table.h"/>
        <files mask="atanf_tbl.h"/>
        <files mask="latrf_common.h"/>
        <files mask="fft_cplx_twiddles_24x24.h"/>
        <files mask="alog2f_tbl.h"/>
        <files mask="asinf_tbl.h"/>
        <files mask="nanf_tbl.h"/>
        <files mask="raw_lcorrf.h"/>
        <files mask="fir_decimaf_3x.h"/>
        <files mask="baseop.h"/>
        <files mask="__renaming__.h"/>
        <files mask="fft_real_twiddles_24x24.h"/>
        <files mask="firinterp32x32_common.h"/>
        <files mask="inv2pif_tbl.h"/>
        <files mask="log10f_tbl.h"/>
        <files mask="bkfirf.h"/>
        <files mask="polyatan16x16q23_tbl.h"/>
        <files mask="NatureDSP_Math.h"/>
        <files mask="scl_atan_table16.h"/>
        <files mask="bqriirf_df1.h"/>
        <files mask="raw_lcorr32x16.h"/>
        <files mask="sqrt2f_tbl.h"/>
        <files mask="tanf_tbl.h"/>
        <files mask="fft_cplx_twiddles.h"/>
        <files mask="tan16x16_tbl.h"/>
        <files mask="raw_lcorr16x16.h"/>
        <files mask="bqriirf_df2t.h"/>
        <files mask="raw_lcorr32x32.h"/>
        <files mask="raw_corr32x16.h"/>
        <files mask="fir_decimaf_Dx.h"/>
        <files mask="bq3iirf_df2.h"/>
        <files mask="bkfiraf.h"/>
        <files mask="lognf_tbl.h"/>
        <files mask="nan_tbl.h"/>
        <files mask="raw_corr32x32ep.h"/>
      </source>
      <source relative_path="naturedsp/fusionf1/doc" type="doc">
        <files mask="NatureDSP_Signal Library Performance_Fusion_F1.pdf" hidden="true"/>
        <files mask="NatureDSP_Signal Library Reference_Fusion_F1.pdf" hidden="true"/>
        <files mask="release_notes.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="naturedsp/fusionf1" type="doc">
        <files mask="ChangeLogKSDK.txt" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="naturedsp/fusionf1/include" type="c_include"/>
        <include_path relative_path="naturedsp/fusionf1/include_private" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.nghttp2.MIMXRT595S" name="nghttp2" brief="nghttp2 library" version="1.32.90" full_name="Middleware nghttp2" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="Network/nghttp2 library" user_visible="true" type="middleware" package_base_path="middleware/nghttp2" project_base_path="nghttp2">
      <dependencies>
        <component_dependency value="middleware.mbedtls.MIMXRT595S"/>
      </dependencies>
      <source relative_path="lib/includes/nghttp2" project_relative_path="nghttp2_include" type="c_include">
        <files mask="nghttp2.h"/>
        <files mask="nghttp2ver.h"/>
      </source>
      <source relative_path="lib" project_relative_path="nghttp2_include" type="c_include">
        <files mask="nghttp2_buf.h"/>
        <files mask="nghttp2_callbacks.h"/>
        <files mask="nghttp2_debug.h"/>
        <files mask="nghttp2_frame.h"/>
        <files mask="nghttp2_hd.h"/>
        <files mask="nghttp2_hd_huffman.h"/>
        <files mask="nghttp2_helper.h"/>
        <files mask="nghttp2_http.h"/>
        <files mask="nghttp2_int.h"/>
        <files mask="nghttp2_map.h"/>
        <files mask="nghttp2_mem.h"/>
        <files mask="nghttp2_net.h"/>
        <files mask="nghttp2_npn.h"/>
        <files mask="nghttp2_option.h"/>
        <files mask="nghttp2_outbound_item.h"/>
        <files mask="nghttp2_pq.h"/>
        <files mask="nghttp2_priority_spec.h"/>
        <files mask="nghttp2_queue.h"/>
        <files mask="nghttp2_rcbuf.h"/>
        <files mask="nghttp2_session.h"/>
        <files mask="nghttp2_stream.h"/>
        <files mask="nghttp2_submit.h"/>
      </source>
      <source relative_path="lib" project_relative_path="nghttp2_source" type="src">
        <files mask="nghttp2_buf.c"/>
        <files mask="nghttp2_callbacks.c"/>
        <files mask="nghttp2_debug.c"/>
        <files mask="nghttp2_frame.c"/>
        <files mask="nghttp2_hd.c"/>
        <files mask="nghttp2_hd_huffman.c"/>
        <files mask="nghttp2_hd_huffman_data.c"/>
        <files mask="nghttp2_helper.c"/>
        <files mask="nghttp2_http.c"/>
        <files mask="nghttp2_map.c"/>
        <files mask="nghttp2_mem.c"/>
        <files mask="nghttp2_npn.c"/>
        <files mask="nghttp2_option.c"/>
        <files mask="nghttp2_outbound_item.c"/>
        <files mask="nghttp2_pq.c"/>
        <files mask="nghttp2_priority_spec.c"/>
        <files mask="nghttp2_queue.c"/>
        <files mask="nghttp2_rcbuf.c"/>
        <files mask="nghttp2_session.c"/>
        <files mask="nghttp2_stream.c"/>
        <files mask="nghttp2_submit.c"/>
        <files mask="nghttp2_version.c"/>
      </source>
      <include_paths>
        <include_path relative_path="lib/includes/nghttp2" project_relative_path="nghttp2_include" type="c_include"/>
        <include_path relative_path="lib" project_relative_path="nghttp2_include" type="c_include"/>
        <include_path relative_path="lib/includes" project_relative_path="nghttp2_include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.template.nghttp2.MIMXRT595S" name="nghttp2" brief="nghttp2 template" version="1.32.90" full_name="nghttp2 template application" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="Network/nghttp2 library" user_visible="true" type="project_template" package_base_path="middleware/nghttp2" project_base_path="nghttp2">
      <dependencies>
        <component_dependency value="middleware.nghttp2.MIMXRT595S"/>
      </dependencies>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
      </source>
    </component>
    <component id="middleware.nghttp2.unused_files.MIMXRT595S" name="unused_files" brief="nghttp2 files unused by projects" version="1.32.90" full_name="Middleware nghttp2 unused_files" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="false" type="other" package_base_path="middleware/nghttp2" project_base_path="nghttp2">
      <dependencies>
        <component_dependency value="middleware.nghttp2.MIMXRT595S"/>
      </dependencies>
      <source exclude="true" relative_path="./" project_relative_path="doc" type="other">
        <files mask="README.rst" hidden="true"/>
      </source>
      <source exclude="true" relative_path="doc" type="other">
        <files mask="nghttp.1.rst" hidden="true"/>
        <files mask="programmers-guide.rst" hidden="true"/>
        <files mask="README.rst" hidden="true"/>
        <files mask="h2load.1.rst" hidden="true"/>
        <files mask="nghttpd.1.rst" hidden="true"/>
        <files mask="nghttpx.1.rst" hidden="true"/>
      </source>
      <source exclude="true" relative_path="doc/sources" type="other">
        <files mask="h2load-howto.rst" hidden="true"/>
        <files mask="python-apiref.rst" hidden="true"/>
        <files mask="tutorial-client.rst" hidden="true"/>
        <files mask="libnghttp2_asio.rst" hidden="true"/>
        <files mask="building-android-binary.rst" hidden="true"/>
        <files mask="contribute.rst" hidden="true"/>
        <files mask="nghttpx-howto.rst" hidden="true"/>
        <files mask="index.rst" hidden="true"/>
        <files mask="tutorial-hpack.rst" hidden="true"/>
        <files mask="tutorial-server.rst" hidden="true"/>
      </source>
      <source exclude="true" relative_path="./" type="other">
        <files mask=".clang-format" hidden="true"/>
        <files mask="git-clang-format" hidden="true"/>
        <files mask="AUTHORS" hidden="true"/>
        <files mask="ChangeLog" hidden="true"/>
        <files mask="CONTRIBUTION" hidden="true"/>
        <files mask="COPYING" hidden="true"/>
        <files mask="LICENSE" hidden="true"/>
        <files mask="NEWS" hidden="true"/>
        <files mask="README" hidden="true"/>
      </source>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="ChangeLogKSDK.txt" hidden="true"/>
      </source>
    </component>
    <component id="middleware.sdmmc.common.MIMXRT595S" name="sdmmc_common" brief="Middleware sdmmc common" version="2.3.0" full_name="SDMMC common stack" devices="MIMXRT595S" category="Memories/SDMMC Stack" user_visible="false" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <source relative_path="common" project_relative_path="inc" type="c_include">
        <files mask="fsl_sdmmc_spec.h"/>
        <files mask="fsl_sdmmc_common.h"/>
      </source>
      <source relative_path="common" project_relative_path="src" type="src">
        <files mask="fsl_sdmmc_common.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_sdmmc_common_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="common" project_relative_path="inc" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.host.usdhc.MIMXRT595S" name="sdmmc_host_usdhc" brief="Middleware sdmmc host usdhc" version="2.5.1" full_name="Middleware sdmmc host usdhc" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <any_of>
          <component_dependency value="middleware.sdmmc.host.usdhc.interrupt.MIMXRT595S"/>
          <component_dependency value="middleware.sdmmc.host.usdhc.polling.MIMXRT595S"/>
          <component_dependency value="middleware.sdmmc.host.usdhc.freertos.MIMXRT595S"/>
        </any_of>
      </dependencies>
      <source relative_path="host/usdhc" project_relative_path="host" type="c_include">
        <files mask="fsl_sdmmc_host.h"/>
      </source>
      <source relative_path="host/usdhc" project_relative_path="host" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_sdmmc_host_usdhc_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/usdhc" project_relative_path="host" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.host.usdhc.freertos.MIMXRT595S" name="sdmmc_host_usdhc_freertos" brief="Middleware sdmmc host usdhc freertos" version="2.5.1" full_name="Middleware sdmmc host usdhc freertos" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.common.MIMXRT595S"/>
          <component_dependency value="middleware.sdmmc.osa.freertos.MIMXRT595S"/>
          <component_dependency value="platform.drivers.usdhc.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="host/usdhc/non_blocking" project_relative_path="host" type="src">
        <files mask="fsl_sdmmc_host.c"/>
      </source>
      <source relative_path="host/usdhc" project_relative_path="host" type="c_include">
        <files mask="fsl_sdmmc_host.h"/>
      </source>
      <source relative_path="host/usdhc" project_relative_path="host" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_sdmmc_host_usdhc_freertos_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/usdhc" project_relative_path="host" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.host.usdhc.interrupt.MIMXRT595S" name="sdmmc_host_usdhc_interrupt" brief="Middleware sdmmc host usdhc interrupt" version="2.5.1" full_name="Middleware sdmmc host usdhc interrupt" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.common.MIMXRT595S"/>
          <component_dependency value="middleware.sdmmc.osa.bm.MIMXRT595S"/>
          <component_dependency value="platform.drivers.usdhc.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="host/usdhc/non_blocking" project_relative_path="host" type="src">
        <files mask="fsl_sdmmc_host.c"/>
      </source>
      <source relative_path="host/usdhc" project_relative_path="host" type="c_include">
        <files mask="fsl_sdmmc_host.h"/>
      </source>
      <source relative_path="host/usdhc" project_relative_path="host" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_sdmmc_host_usdhc_interrupt_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/usdhc" project_relative_path="host" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.host.usdhc.polling.MIMXRT595S" name="sdmmc_host_usdhc_polling" brief="Middleware sdmmc host usdhc polling" version="2.5.1" full_name="Middleware sdmmc host usdhc polling" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.common.MIMXRT595S"/>
          <component_dependency value="middleware.sdmmc.osa.bm.MIMXRT595S"/>
          <component_dependency value="platform.drivers.usdhc.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="host/usdhc/blocking" project_relative_path="host" type="src">
        <files mask="fsl_sdmmc_host.c"/>
      </source>
      <source relative_path="host/usdhc" project_relative_path="host" type="c_include">
        <files mask="fsl_sdmmc_host.h"/>
      </source>
      <source relative_path="host/usdhc" project_relative_path="host" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_sdmmc_host_usdhc_polling_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/usdhc" project_relative_path="host" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.mmc.MIMXRT595S" name="mmc" brief="Middleware sdmmc mmc" version="2.4.1" full_name="SDMMC mmc stack" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.common.MIMXRT595S"/>
          <component_dependency value="middleware.sdmmc.host.usdhc.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="mmc" project_relative_path="src" type="src">
        <files mask="fsl_mmc.c"/>
      </source>
      <source relative_path="mmc" project_relative_path="inc" type="c_include">
        <files mask="fsl_mmc.h"/>
      </source>
      <source relative_path="mmc" project_relative_path="./mmc" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_sdmmc_mmc_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="mmc" project_relative_path="inc" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.osa.bm.MIMXRT595S" name="sdmmc_osa_bm" brief="Middleware sdmmc osa_bm" version="2.3.0" full_name="SDMMC common stack" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <component_dependency value="component.osa_bm.MIMXRT595S"/>
      </dependencies>
      <source relative_path="osa" type="c_include">
        <files mask="fsl_sdmmc_osa.h"/>
      </source>
      <source relative_path="osa" type="src">
        <files mask="fsl_sdmmc_osa.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_sdmmc_osa_bm_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="osa" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.osa.freertos.MIMXRT595S" name="sdmmc_osa_freertos" brief="Middleware sdmmc osa_freertos" version="2.3.0" full_name="SDMMC common stack" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <component_dependency value="component.osa_free_rtos.MIMXRT595S"/>
      </dependencies>
      <source relative_path="osa" type="c_include">
        <files mask="fsl_sdmmc_osa.h"/>
      </source>
      <source relative_path="osa" type="src">
        <files mask="fsl_sdmmc_osa.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_sdmmc_osa_freertos_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="osa" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.sd.MIMXRT595S" name="sd" brief="Middleware sdmmc sd" version="2.3.3" full_name="SDMMC sd stack" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.common.MIMXRT595S"/>
          <component_dependency value="middleware.sdmmc.host.usdhc.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="sd" project_relative_path="src" type="src">
        <files mask="fsl_sd.c"/>
      </source>
      <source relative_path="sd" project_relative_path="inc" type="c_include">
        <files mask="fsl_sd.h"/>
      </source>
      <source relative_path="sd" project_relative_path="./sd" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_sdmmc_sd_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="sd" project_relative_path="inc" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.sdio.MIMXRT595S" name="sdio" brief="Middleware sdmmc sdio" version="2.3.2" full_name="SDMMC sdio stack" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.common.MIMXRT595S"/>
          <component_dependency value="middleware.sdmmc.host.usdhc.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="sdio" project_relative_path="src" type="src">
        <files mask="fsl_sdio.c"/>
      </source>
      <source relative_path="sdio" project_relative_path="inc" type="c_include">
        <files mask="fsl_sdio.h"/>
      </source>
      <source relative_path="sdio" project_relative_path="./sdio" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_sdmmc_sdio_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="sdio" project_relative_path="inc" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.common_header.MIMXRT595S" name="USB Common Header" brief="Middleware usb common_header" version="2.7.0" full_name="USB Common Header" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="USB/USB Common Header" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <component_dependency value="component.osa.MIMXRT595S"/>
      </dependencies>
      <source relative_path="include" type="c_include">
        <files mask="usb.h"/>
        <files mask="usb_misc.h"/>
        <files mask="usb_spec.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_usb_common_header_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.audio.external.MIMXRT595S" name="USB Device Audio" brief="Middleware usb device audio external" version="2.7.0" full_name="USB Device Audio" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <component_dependency value="middleware.usb.device.stack.external.MIMXRT595S"/>
      </dependencies>
      <source relative_path="output/source/device/class" project_relative_path="device/class/audio" type="src">
        <files mask="usb_device_audio.c"/>
      </source>
      <source relative_path="output/source/device/class" project_relative_path="device/class/audio" type="c_include">
        <files mask="usb_device_audio.h"/>
      </source>
      <include_paths>
        <include_path relative_path="output/source/device/class" project_relative_path="device/class/audio" type="c_include"/>
        <include_path relative_path="output/source/device/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.ccid.external.MIMXRT595S" name="USB Device CCID" brief="Middleware usb device ccid external" version="2.7.0" full_name="USB Device CCID" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <component_dependency value="middleware.usb.device.stack.external.MIMXRT595S"/>
      </dependencies>
      <source relative_path="output/source/device/class" project_relative_path="device/class/ccid" type="src">
        <files mask="usb_device_ccid.c"/>
      </source>
      <source relative_path="output/source/device/class" project_relative_path="device/class/ccid" type="c_include">
        <files mask="usb_device_ccid.h"/>
      </source>
      <include_paths>
        <include_path relative_path="output/source/device/class" project_relative_path="device/class/ccid" type="c_include"/>
        <include_path relative_path="output/source/device/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.cdc.external.MIMXRT595S" name="USB Device CDC" brief="Middleware usb device cdc external" version="2.7.0" full_name="USB Device CDC" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <component_dependency value="middleware.usb.device.stack.external.MIMXRT595S"/>
      </dependencies>
      <source relative_path="output/source/device/class" project_relative_path="device/class/cdc" type="src">
        <files mask="usb_device_cdc_acm.c"/>
      </source>
      <source relative_path="output/source/device/class" project_relative_path="device/class/cdc" type="c_include">
        <files mask="usb_device_cdc_acm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_usb_device_cdc_external_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="output/source/device/class" project_relative_path="device/class/cdc" type="c_include"/>
        <include_path relative_path="output/source/device/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.cdc.rndis.external.MIMXRT595S" name="USB Device CDC RNDIS" brief="Middleware usb device cdc rndis external" version="2.7.0" full_name="USB Device CDC RNDIS" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.device.stack.external.MIMXRT595S"/>
          <component_dependency value="middleware.usb.device.cdc.external.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="output/source/device/class" project_relative_path="device/class/cdc_rndis" type="src">
        <files mask="usb_device_cdc_rndis.c"/>
      </source>
      <source relative_path="output/source/device/class" project_relative_path="device/class/cdc_rndis" type="c_include">
        <files mask="usb_device_cdc_rndis.h"/>
      </source>
      <include_paths>
        <include_path relative_path="output/source/device/class" project_relative_path="device/class/cdc_rndis" type="c_include"/>
        <include_path relative_path="output/source/device/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.common_header.MIMXRT595S" name="USB Device Common Header" brief="Middleware usb device common_header" version="2.7.0" full_name="USB Device Common Header" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMXRT595S"/>
          <component_dependency value="middleware.usb.common_header.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="device" project_relative_path="device/include" type="c_include">
        <files mask="usb_device.h"/>
      </source>
      <source relative_path="device" project_relative_path="device/source" type="c_include">
        <files mask="usb_device_dci.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_usb_device_common_header_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device" project_relative_path="device/include" type="c_include"/>
        <include_path relative_path="device" project_relative_path="device/source" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.controller.driver.MIMXRT595S" name="USB Device Common Controller" brief="Middleware usb device controller driver" version="2.7.0" full_name="USB Device Common Controller" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMXRT595S"/>
          <component_dependency value="middleware.usb.device_controller_ip3511hs.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="device" project_relative_path="device/include" type="c_include">
        <files mask="usb_device.h"/>
      </source>
      <source relative_path="device" project_relative_path="device/source" type="src">
        <files mask="usb_device_dci.c"/>
      </source>
      <source relative_path="device" project_relative_path="device/source" type="c_include">
        <files mask="usb_device_dci.h"/>
      </source>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="ChangeLogKSDK.txt" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_usb_device_controller_driver_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device" project_relative_path="device/include" type="c_include"/>
        <include_path relative_path="device" project_relative_path="device/source" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.dfu.external.MIMXRT595S" name="USB Device DFU" brief="Middleware usb device dfu external" version="2.7.0" full_name="USB Device DFU" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <component_dependency value="middleware.usb.device.stack.external.MIMXRT595S"/>
      </dependencies>
      <source relative_path="output/source/device/class" project_relative_path="device/class/dfu" type="src">
        <files mask="usb_device_dfu.c"/>
      </source>
      <source relative_path="output/source/device/class" project_relative_path="device/class/dfu" type="c_include">
        <files mask="usb_device_dfu.h"/>
      </source>
      <include_paths>
        <include_path relative_path="output/source/device/class" project_relative_path="device/class/dfu" type="c_include"/>
        <include_path relative_path="output/source/device/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.hid.external.MIMXRT595S" name="USB Device HID" brief="Middleware usb device hid external" version="2.7.0" full_name="USB Device HID" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <component_dependency value="middleware.usb.device.stack.external.MIMXRT595S"/>
      </dependencies>
      <source relative_path="output/source/device/class" project_relative_path="device/class/hid" type="src">
        <files mask="usb_device_hid.c"/>
      </source>
      <source relative_path="output/source/device/class" project_relative_path="device/class/hid" type="c_include">
        <files mask="usb_device_hid.h"/>
      </source>
      <include_paths>
        <include_path relative_path="output/source/device/class" project_relative_path="device/class/hid" type="c_include"/>
        <include_path relative_path="output/source/device/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device_controller_ip3511hs.MIMXRT595S" name="USB Device IP3511HS Controller Driver(HS)" brief="Middleware usb device ip3511hs" version="2.7.0" full_name="USB Device IP3511HS Controller Driver(HS)" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.phy.MIMXRT595S"/>
          <component_dependency value="middleware.usb.device.ip3511hs_config_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="device" project_relative_path="device/source/lpcip3511" type="src">
        <files mask="usb_device_lpcip3511.c"/>
      </source>
      <source relative_path="device" project_relative_path="device/source/lpcip3511" type="c_include">
        <files mask="usb_device_lpcip3511.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_usb_device_ip3511hs_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device" project_relative_path="device/source/lpcip3511" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.ip3511hs_config_header.MIMXRT595S" name="USB device ip3511hs config header" brief="USB device ip3511hs config header" version="2.7.0" full_name="USB device ip3511hs config header" devices="MIMXRT595S" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <source relative_path="output/npw/device_config/ip3511hs" project_relative_path="generated" type="c_include">
        <files mask="usb_device_config.h"/>
      </source>
      <include_paths>
        <include_path relative_path="output/npw/device_config/ip3511hs" project_relative_path="generated" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.msd.external.MIMXRT595S" name="USB Device MSD" brief="Middleware usb device msd external" version="2.7.0" full_name="USB Device MSD" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <component_dependency value="middleware.usb.device.stack.external.MIMXRT595S"/>
      </dependencies>
      <source relative_path="output/source/device/class" project_relative_path="device/class/msc" type="src">
        <files mask="usb_device_msc.c"/>
        <files mask="usb_device_msc_ufi.c"/>
      </source>
      <source relative_path="output/source/device/class" project_relative_path="device/class/msc" type="c_include">
        <files mask="usb_device_msc.h"/>
        <files mask="usb_device_msc_ufi.h"/>
      </source>
      <include_paths>
        <include_path relative_path="output/source/device/class" project_relative_path="device/class/msc" type="c_include"/>
        <include_path relative_path="output/source/device/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.phdc.external.MIMXRT595S" name="USB Device PHDC" brief="Middleware usb device phdc external" version="2.7.0" full_name="USB Device PHDC" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <component_dependency value="middleware.usb.device.stack.external.MIMXRT595S"/>
      </dependencies>
      <source relative_path="output/source/device/class" project_relative_path="device/class/phdc" type="src">
        <files mask="usb_device_phdc.c"/>
      </source>
      <source relative_path="output/source/device/class" project_relative_path="device/class/phdc" type="c_include">
        <files mask="usb_device_phdc.h"/>
      </source>
      <include_paths>
        <include_path relative_path="output/source/device/class" project_relative_path="device/class/phdc" type="c_include"/>
        <include_path relative_path="output/source/device/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.printer.external.MIMXRT595S" name="USB Device Printer" brief="Middleware usb device printer external" version="2.7.0" full_name="USB Device Printer" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <component_dependency value="middleware.usb.device.stack.external.MIMXRT595S"/>
      </dependencies>
      <source relative_path="output/source/device/class" project_relative_path="device/class/printer" type="src">
        <files mask="usb_device_printer.c"/>
      </source>
      <source relative_path="output/source/device/class" project_relative_path="device/class/printer" type="c_include">
        <files mask="usb_device_printer.h"/>
      </source>
      <include_paths>
        <include_path relative_path="output/source/device/class" project_relative_path="device/class/printer" type="c_include"/>
        <include_path relative_path="output/source/device/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.stack.external.MIMXRT595S" name="USB Device Stack" brief="Middleware usb device stack external" version="2.7.0" full_name="USB Device Stack" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMXRT595S"/>
          <component_dependency value="middleware.usb.device.controller.driver.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="output/source/device/class" project_relative_path="device/class" type="src">
        <files mask="usb_device_class.c"/>
      </source>
      <source relative_path="output/source/device/class" project_relative_path="device/class" type="c_include">
        <files mask="usb_device_class.h"/>
      </source>
      <source relative_path="output/source/device" project_relative_path="device/source" type="src">
        <files mask="usb_device_ch9.c"/>
      </source>
      <source relative_path="output/source/device" project_relative_path="device/source" type="c_include">
        <files mask="usb_device_ch9.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_usb_device_stack_external_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="output/source/device/class" project_relative_path="device/class" type="c_include"/>
        <include_path relative_path="output/source/device" project_relative_path="device/source" type="c_include"/>
        <include_path relative_path="output/source/device/class" type="c_include"/>
        <include_path relative_path="output/source/device" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.video.external.MIMXRT595S" name="USB Device Video" brief="Middleware usb device video external" version="2.7.0" full_name="USB Device Video" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <component_dependency value="middleware.usb.device.stack.external.MIMXRT595S"/>
      </dependencies>
      <source relative_path="output/source/device/class" project_relative_path="device/class/video" type="src">
        <files mask="usb_device_video.c"/>
      </source>
      <source relative_path="output/source/device/class" project_relative_path="device/class/video" type="c_include">
        <files mask="usb_device_video.h"/>
      </source>
      <include_paths>
        <include_path relative_path="output/source/device/class" project_relative_path="device/class/video" type="c_include"/>
        <include_path relative_path="output/source/device/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_audio.MIMXRT595S" name="USB Host Audio" brief="Middleware usb host audio" version="2.7.0" full_name="USB Host Audio" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <component_dependency value="middleware.usb.host.stack.MIMXRT595S"/>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_audio.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_audio.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_usb_host_audio_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_cdc.MIMXRT595S" name="USB Host CDC" brief="Middleware usb host cdc" version="2.7.0" full_name="USB Host CDC" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <component_dependency value="middleware.usb.host.stack.MIMXRT595S"/>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_cdc.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_cdc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_usb_host_cdc_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_cdc_rndis.MIMXRT595S" name="USB Host CDC RNDIS" brief="Middleware usb host cdc_rndis" version="2.7.0" full_name="USB Host CDC RNDIS" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.host.stack.MIMXRT595S"/>
          <component_dependency value="middleware.usb.host_cdc.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_cdc_rndis.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_cdc_rndis.h"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host.common_header.MIMXRT595S" name="USB Host Common Header" brief="Middleware usb host common_header" version="2.7.0" full_name="USB Host Common Header" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMXRT595S"/>
          <component_dependency value="middleware.usb.common_header.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="host" type="c_include">
        <files mask="usb_host.h"/>
        <files mask="usb_host_hci.h"/>
        <files mask="usb_host_devices.h"/>
        <files mask="usb_host_framework.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_usb_host_common_header_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_hid.MIMXRT595S" name="USB Host HID" brief="Middleware usb host hid" version="2.7.0" full_name="USB Host HID" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <component_dependency value="middleware.usb.host.stack.MIMXRT595S"/>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_hid.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_hid.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_usb_host_hid_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_controller_ip3516hs.MIMXRT595S" name="USB Host IP3516HS Controller Driver(HS)" brief="Middleware usb host ip3516hs" version="2.7.0" full_name="USB Host IP3516HS Controller Driver(HS)" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.phy.MIMXRT595S"/>
          <component_dependency value="middleware.usb.host.ip3516hs_config_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="host" type="src">
        <files mask="usb_host_ip3516hs.c"/>
      </source>
      <source relative_path="host" type="c_include">
        <files mask="usb_host_ip3516hs.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_usb_host_ip3516hs_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host.ip3516hs_config_header.MIMXRT595S" name="USB host ip3516hs config header" brief="USB host ip3516hs config header" version="2.7.0" full_name="USB host ip3516hs config header" devices="MIMXRT595S" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <source relative_path="output/npw/host_config/ip3516hs" project_relative_path="generated" type="c_include">
        <files mask="usb_host_config.h"/>
      </source>
      <include_paths>
        <include_path relative_path="output/npw/host_config/ip3516hs" project_relative_path="generated" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_msd.MIMXRT595S" name="USB Host MSD" brief="Middleware usb host msd" version="2.7.0" full_name="USB Host MSD" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <component_dependency value="middleware.usb.host.stack.MIMXRT595S"/>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_msd.c"/>
        <files mask="usb_host_msd_ufi.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_msd.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_usb_host_msd_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_phdc.MIMXRT595S" name="USB Host PHDC" brief="Middleware usb host phdc" version="2.7.0" full_name="USB Host PHDC" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <component_dependency value="middleware.usb.host.stack.MIMXRT595S"/>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_phdc.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_phdc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_usb_host_phdc_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_printer.MIMXRT595S" name="USB Host Printer" brief="Middleware usb host printer" version="2.7.0" full_name="USB Host Printer" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <component_dependency value="middleware.usb.host.stack.MIMXRT595S"/>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_printer.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_printer.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_usb_host_printer_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host.stack.MIMXRT595S" name="USB Host Stack" brief="Middleware usb host stack" version="2.7.0" full_name="USB Host Stack" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMXRT595S"/>
          <component_dependency value="middleware.usb.host_controller_ip3516hs.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="host" type="c_include">
        <files mask="usb_host.h"/>
        <files mask="usb_host_hci.h"/>
        <files mask="usb_host_devices.h"/>
        <files mask="usb_host_framework.h"/>
      </source>
      <source relative_path="host" type="src">
        <files mask="usb_host_hci.c"/>
        <files mask="usb_host_devices.c"/>
        <files mask="usb_host_framework.c"/>
      </source>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_hub.c"/>
        <files mask="usb_host_hub_app.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_hub.h"/>
        <files mask="usb_host_hub_app.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_usb_host_stack_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host" type="c_include"/>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_video.MIMXRT595S" name="USB Host Video" brief="Middleware usb host video" version="2.7.0" full_name="USB Host Video" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <component_dependency value="middleware.usb.host.stack.MIMXRT595S"/>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_video.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_video.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_usb_host_video_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.phy.MIMXRT595S" name="USB PHY" brief="Middleware usb phy" version="2.7.0" full_name="USB PHY" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="USB/USB PHY" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <component_dependency value="middleware.usb.common_header.MIMXRT595S"/>
      </dependencies>
      <source relative_path="phy" type="src">
        <files mask="usb_phy.c"/>
      </source>
      <source relative_path="phy" type="c_include">
        <files mask="usb_phy.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_usb_phy_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="phy" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.vglite.MIMXRT595S" name="vglite" brief="vglite library" version="3.0.9" revision="2" full_name="Middleware vglite" devices="MIMXRT595S" category="vglite/vglite graphics library" user_visible="false" type="middleware" package_base_path="middleware/vglite" project_base_path="vglite">
      <source relative_path="inc" type="c_include">
        <files mask="vg_lite.h"/>
        <files mask="vg_lite_hal.h"/>
        <files mask="vg_lite_text.h"/>
      </source>
      <source relative_path="VGLite" type="src">
        <files mask="vg_lite.c"/>
        <files mask="vg_lite_image.c"/>
        <files mask="vg_lite_matrix.c"/>
        <files mask="vg_lite_path.c"/>
      </source>
      <source relative_path="VGLite/rtos" type="c_include">
        <files mask="vg_lite_os.h"/>
      </source>
      <source relative_path="VGLite/rtos" type="src">
        <files mask="vg_lite_os.c"/>
      </source>
      <source relative_path="font" type="src">
        <files mask="buf_reader.c"/>
        <files mask="rle_font_read.c"/>
        <files mask="vft_debug.c"/>
        <files mask="vft_draw.c"/>
        <files mask="vg_lite_text.c"/>
      </source>
      <source relative_path="font" type="c_include">
        <files mask="buf_reader.h"/>
        <files mask="fonts.h"/>
        <files mask="vft_debug.h"/>
        <files mask="vft_draw.h"/>
      </source>
      <source relative_path="font/mcufont/decoder" type="c_include">
        <files mask="mcufont.h"/>
        <files mask="mf_bwfont.h"/>
        <files mask="mf_config.h"/>
        <files mask="mf_encoding.h"/>
        <files mask="mf_font.h"/>
        <files mask="mf_justify.h"/>
        <files mask="mf_kerning.h"/>
        <files mask="mf_rlefont.h"/>
        <files mask="mf_scaledfont.h"/>
        <files mask="mf_wordwrap.h"/>
      </source>
      <source relative_path="font/mcufont/decoder" type="src">
        <files mask="mf_bwfont.c"/>
        <files mask="mf_encoding.c"/>
        <files mask="mf_font.c"/>
        <files mask="mf_justify.c"/>
        <files mask="mf_kerning.c"/>
        <files mask="mf_rlefont.c"/>
        <files mask="mf_scaledfont.c"/>
        <files mask="mf_wordwrap.c"/>
      </source>
      <source relative_path="VGLiteKernel" type="c_include">
        <files mask="vg_lite_hw.h"/>
        <files mask="vg_lite_kernel.h"/>
      </source>
      <source relative_path="VGLiteKernel" type="src">
        <files mask="vg_lite_kernel.c"/>
      </source>
      <source relative_path="VGLiteKernel/rtos" type="src">
        <files mask="vg_lite_hal.c"/>
      </source>
      <source relative_path="VGLiteKernel/rtos" type="c_include">
        <files mask="vg_lite_platform.h"/>
      </source>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="ChangeLogKSDK.txt" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_vglite_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="inc" type="c_include"/>
        <include_path relative_path="font" type="c_include"/>
        <include_path relative_path="font/mcufont/decoder" type="c_include"/>
        <include_path relative_path="VGLite/rtos" type="c_include"/>
        <include_path relative_path="VGLiteKernel" type="c_include"/>
        <include_path relative_path="VGLiteKernel/rtos" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.vglite.elementary.MIMXRT595S" name="vglite.elementary" brief="vglite elementary library" version="3.0.9" revision="2" full_name="Middleware vglite elementary" devices="MIMXRT595S" category="vglite/vglite graphics library" user_visible="false" type="middleware" package_base_path="middleware/vglite" project_base_path="elementary">
      <source relative_path="elementary/inc" project_relative_path="inc" type="c_include">
        <files mask="Elm.h"/>
      </source>
      <source relative_path="elementary/src" project_relative_path="src" type="src">
        <files mask="elm_buffer.c"/>
        <files mask="elm_draw.c"/>
        <files mask="elm_init.c"/>
        <files mask="elm_object.c"/>
        <files mask="elm_os.c"/>
        <files mask="elm_text.c"/>
      </source>
      <source relative_path="elementary/src" project_relative_path="src" type="c_include">
        <files mask="elm_os.h"/>
        <files mask="elm_text.h"/>
        <files mask="velm.h"/>
        <files mask="elm_precom.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_vglite_elementary_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="elementary/inc" project_relative_path="inc" type="c_include"/>
        <include_path relative_path="elementary/src" project_relative_path="src" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.MIMXRT595S" name="wifi_nxp" brief="NXP WiFi functionality enables customers to quickly develop applications of interest to add connectivity to different sensors and appliances" version="1.3.23" full_name="NXP WiFi" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="Wireless/NXP WiFi" user_visible="true" type="middleware" package_base_path="middleware/wifi" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
          <component_dependency value="middleware.sdmmc.sdio.MIMXRT595S"/>
          <component_dependency value="utility.debug_console.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="dhcpd" type="c_include">
        <files mask="dhcp-bootp.h"/>
        <files mask="dhcp-priv.h"/>
        <files mask="dns.h"/>
      </source>
      <source relative_path="dhcpd" type="src">
        <files mask="dhcp-server.c"/>
        <files mask="dhcp-server-main.c"/>
        <files mask="dns-server.c"/>
      </source>
      <source relative_path="incl" type="c_include">
        <files mask="dhcp-server.h"/>
        <files mask="wm_utils.h"/>
        <files mask="wmerrno.h"/>
        <files mask="wmlog.h"/>
        <files mask="wmtypes.h"/>
      </source>
      <source relative_path="wifidriver" type="src">
        <files mask="mlan_sdio.c"/>
        <files mask="mlan_11ac.c"/>
        <files mask="mlan_11d.c"/>
        <files mask="mlan_11h.c"/>
        <files mask="mlan_11n.c"/>
        <files mask="mlan_11n_aggr.c"/>
        <files mask="mlan_11n_rxreorder.c"/>
        <files mask="mlan_cfp.c"/>
        <files mask="mlan_cmdevt.c"/>
        <files mask="mlan_glue.c"/>
        <files mask="mlan_init.c"/>
        <files mask="mlan_join.c"/>
        <files mask="mlan_misc.c"/>
        <files mask="mlan_scan.c"/>
        <files mask="mlan_shim.c"/>
        <files mask="mlan_sta_cmd.c"/>
        <files mask="mlan_sta_cmdresp.c"/>
        <files mask="mlan_sta_event.c"/>
        <files mask="mlan_sta_ioctl.c"/>
        <files mask="mlan_sta_rx.c"/>
        <files mask="mlan_txrx.c"/>
        <files mask="mlan_uap_cmdevent.c"/>
        <files mask="mlan_uap_ioctl.c"/>
        <files mask="mlan_wmm.c"/>
        <files mask="mlan_api.c"/>
        <files mask="wifi.c"/>
        <files mask="wifi_pwrmgr.c"/>
        <files mask="wifi-debug.c"/>
        <files mask="wifi-mem.c"/>
        <files mask="wifi-sdio.c"/>
        <files mask="wifi-uap.c"/>
      </source>
      <source relative_path="incl/wifidriver" type="c_include">
        <files mask="mlan_sdio_api.h"/>
        <files mask="wifi.h"/>
        <files mask="wifi_events.h"/>
        <files mask="wifi-decl.h"/>
      </source>
      <source relative_path="wifidriver/incl" type="c_include">
        <files mask="mlan.h"/>
        <files mask="mlan_11ac.h"/>
        <files mask="mlan_11h.h"/>
        <files mask="mlan_11n.h"/>
        <files mask="mlan_11n_aggr.h"/>
        <files mask="mlan_11n_rxreorder.h"/>
        <files mask="mlan_decl.h"/>
        <files mask="mlan_fw.h"/>
        <files mask="mlan_ieee.h"/>
        <files mask="mlan_init.h"/>
        <files mask="mlan_ioctl.h"/>
        <files mask="mlan_join.h"/>
        <files mask="mlan_main.h"/>
        <files mask="mlan_meas.h"/>
        <files mask="mlan_remap_mem_operations.h"/>
        <files mask="mlan_sdio.h"/>
        <files mask="mlan_uap.h"/>
        <files mask="mlan_util.h"/>
        <files mask="mlan_wmm.h"/>
        <files mask="mlan_api.h"/>
      </source>
      <source relative_path="port/lwip" type="src">
        <files mask="net.c"/>
        <files mask="wifi_netif.c"/>
      </source>
      <source relative_path="port/lwip" type="c_include">
        <files mask="netif_decl.h"/>
      </source>
      <source relative_path="port/os" type="src">
        <files mask="os.c"/>
      </source>
      <source relative_path="wifidriver" type="c_include">
        <files mask="wifi_common.h"/>
        <files mask="wifi-debug.h"/>
        <files mask="wifi-internal.h"/>
        <files mask="wifi-sdio.h"/>
      </source>
      <source relative_path="wlcmgr" type="src">
        <files mask="wlan.c"/>
        <files mask="wlan_txpwrlimit_cfg.c"/>
      </source>
      <source relative_path="incl/wlcmgr" type="c_include">
        <files mask="wlan.h"/>
        <files mask="wlan_11d.h"/>
      </source>
      <source relative_path="incl/port/lwip" type="c_include">
        <files mask="wm_net.h"/>
      </source>
      <source relative_path="incl/port/os" type="c_include">
        <files mask="wm_os.h"/>
      </source>
      <source relative_path="wifi_bt_firmware" type="c_include">
        <files mask="sd8801_wlan.h"/>
        <files mask="sduart8977_wlan_bt.h"/>
        <files mask="sduart8978_wlan_bt.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_wifi_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="dhcpd" type="c_include"/>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="incl/wifidriver" type="c_include"/>
        <include_path relative_path="wifidriver/incl" type="c_include"/>
        <include_path relative_path="port/lwip" type="c_include"/>
        <include_path relative_path="wifidriver" type="c_include"/>
        <include_path relative_path="incl/wlcmgr" type="c_include"/>
        <include_path relative_path="incl/port/lwip" type="c_include"/>
        <include_path relative_path="incl/port/os" type="c_include"/>
        <include_path relative_path="wifi_bt_firmware" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.cli.MIMXRT595S" name="wifi_nxp_cli" brief="Middlware WiFi CLI" version="1.3.23" full_name="NXP WiFi CLI" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="Wireless/NXP WiFi" user_visible="true" type="middleware" package_base_path="middleware/wifi" project_base_path="wifi">
      <dependencies>
        <component_dependency value="middleware.wifi.MIMXRT595S"/>
      </dependencies>
      <source relative_path="cli" type="c_include">
        <files mask="cli_mem.h"/>
      </source>
      <source relative_path="cli" type="src">
        <files mask="cli.c"/>
        <files mask="cli_mem_simple.c"/>
        <files mask="cli_utils.c"/>
      </source>
      <source relative_path="incl" type="c_include">
        <files mask="cli.h"/>
        <files mask="cli_utils.h"/>
        <files mask="iperf.h"/>
        <files mask="ping.h"/>
      </source>
      <source relative_path="nw_utils" type="src">
        <files mask="ping.c"/>
        <files mask="iperf.c"/>
      </source>
      <source relative_path="wlcmgr" type="src">
        <files mask="wlan_basic_cli.c"/>
        <files mask="wlan_enhanced_tests.c"/>
        <files mask="wlan_tests.c"/>
        <files mask="wlan_test_mode_tests.c"/>
      </source>
      <source relative_path="incl/wlcmgr" type="c_include">
        <files mask="wlan_tests.h"/>
      </source>
      <source relative_path="dhcpd" type="src">
        <files mask="dhcp-server-cli.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_wifi_cli_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="cli" type="c_include"/>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="incl/wlcmgr" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.unused.MIMXRT595S" name="wifi_nxp_unused" brief="Middlware WiFi unused" version="1.3.23" full_name="NXP WiFi unused" devices="MIMXRT595S" category="Wireless/NXP WiFi" user_visible="false" type="middleware" package_base_path="middleware/wifi" project_base_path="wifi">
      <source relative_path="wifi_bt_firmware" type="doc">
        <files mask="version.txt"/>
      </source>
    </component>
    <component id="middleware.wifi_wiced.MIMXRT595S" name="wifi_wiced" brief="Cypress WICED framework for MCUXpresso SDK" version="6.1.0" full_name="Cypress WICED framework" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="Wireless/Cypress WiFi" user_visible="true" type="middleware" package_base_path="middleware/wiced" project_base_path="wiced">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
          <component_dependency value="middleware.sdmmc.sdio.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="43xxx_Wi-Fi/include" type="c_include">
        <files mask="wiced_resource.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/internal" type="src">
        <files mask="wifi.c"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/network/LwIP/WWD" type="src">
        <files mask="wwd_buffer.c"/>
        <files mask="wwd_network.c"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/network/LwIP/WWD" type="c_include">
        <files mask="wwd_buffer.h"/>
        <files mask="wwd_network.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/platform/include" type="c_include">
        <files mask="platform_cache_def.h"/>
        <files mask="platform_peripheral.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/platform/MCU" type="c_include">
        <files mask="wwd_platform_common.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/platform/MCU" type="src">
        <files mask="wwd_platform_separate_mcu.c"/>
        <files mask="wwd_resources.c"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/platform/MCU/LPC" type="c_include">
        <files mask="platform_mcu_peripheral.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/platform/MCU/LPC/WWD" type="src">
        <files mask="wwd_platform.c"/>
        <files mask="wwd_SDIO.c"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/platform" type="c_include">
        <files mask="platform_toolchain.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/RTOS/FreeRTOS/WWD" type="c_include">
        <files mask="wwd_FreeRTOS_systick.h"/>
        <files mask="wwd_rtos.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/RTOS/FreeRTOS/WWD" type="src">
        <files mask="wwd_rtos.c"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/WWD/include/network" type="c_include">
        <files mask="wwd_buffer_interface.h"/>
        <files mask="wwd_network_constants.h"/>
        <files mask="wwd_network_interface.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/WWD/include/platform" type="c_include">
        <files mask="wwd_bus_interface.h"/>
        <files mask="wwd_platform_interface.h"/>
        <files mask="wwd_resource_interface.h"/>
        <files mask="wwd_sdio_interface.h"/>
        <files mask="wwd_spi_interface.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/WWD/include/RTOS" type="c_include">
        <files mask="wwd_rtos_interface.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/WWD/include" type="c_include">
        <files mask="wwd_assert.h"/>
        <files mask="wwd_constants.h"/>
        <files mask="wwd_debug.h"/>
        <files mask="wwd_eapol.h"/>
        <files mask="wwd_events.h"/>
        <files mask="wwd_management.h"/>
        <files mask="wwd_poll.h"/>
        <files mask="wwd_structures.h"/>
        <files mask="wwd_wifi.h"/>
        <files mask="wwd_wifi_sleep.h"/>
        <files mask="wwd_wlioctl.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/WWD/internal/bus_protocols/SDIO" type="src">
        <files mask="wwd_bus_protocol.c"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/WWD/internal/bus_protocols/SDIO" type="c_include">
        <files mask="wwd_bus_protocol.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/WWD/internal/bus_protocols" type="src">
        <files mask="wwd_bus_common.c"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/WWD/internal/bus_protocols" type="c_include">
        <files mask="wwd_bus_protocol_interface.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/WWD/internal" type="src">
        <files mask="tlv.c"/>
        <files mask="wwd_ap_common.c"/>
        <files mask="wwd_clm.c"/>
        <files mask="wwd_debug.c"/>
        <files mask="wwd_eapol.c"/>
        <files mask="wwd_internal.c"/>
        <files mask="wwd_management.c"/>
        <files mask="wwd_rtos_interface.c"/>
        <files mask="wwd_sdpcm.c"/>
        <files mask="wwd_thread.c"/>
        <files mask="wwd_thread_internal.c"/>
        <files mask="wwd_wifi.c"/>
        <files mask="wwd_wifi_chip_common.c"/>
        <files mask="wwd_wifi_sleep.c"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/WWD/internal" type="c_include">
        <files mask="tlv.h"/>
        <files mask="wwd_ap.h"/>
        <files mask="wwd_ap_common.h"/>
        <files mask="wwd_bcmendian.h"/>
        <files mask="wwd_clm.h"/>
        <files mask="wwd_internal.h"/>
        <files mask="wwd_logging.h"/>
        <files mask="wwd_sdpcm.h"/>
        <files mask="wwd_thread.h"/>
        <files mask="wwd_thread_internal.h"/>
        <files mask="wwd_wifi_chip_common.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/WWD" type="c_include">
        <files mask="wwd.h"/>
        <files mask="wwd_wiced.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi" type="src">
        <files mask="generated_mac_address.txt"/>
      </source>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="ChangeLogKSDK.txt" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_wifi_wiced_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="43xxx_Wi-Fi/include" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/WICED/network/LwIP/WWD" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/WICED/platform/include" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/WICED/platform/MCU" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/WICED/platform/MCU/LPC" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/WICED/platform" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/WICED/RTOS/FreeRTOS/WWD" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/WICED/WWD/include/network" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/WICED/WWD/include/platform" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/WICED/WWD/include/RTOS" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/WICED/WWD/include" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/WICED/WWD/internal/bus_protocols/SDIO" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/WICED/WWD/internal/bus_protocols" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/WICED/WWD/internal" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/WICED/WWD" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/WICED/platform/MCU/LPC/WWD" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi_wiced.43012.MIMXRT595S" name="wifi_wiced_43012" brief="Cypress WICED support for 43012 chip" version="6.1.0" full_name="Cypress WICED support for 43012 chip" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="Wireless/Cypress WiFi" user_visible="true" type="middleware" package_base_path="middleware/wiced" project_base_path="wiced">
      <dependencies>
        <component_dependency value="middleware.wifi_wiced.MIMXRT595S"/>
      </dependencies>
      <source relative_path="43xxx_Wi-Fi/WICED/WWD/internal/chips/43012" type="c_include">
        <files mask="43012.h"/>
        <files mask="43012_clm.h"/>
        <files mask="43012_mfg.h"/>
        <files mask="43012_mfg_clm.h"/>
        <files mask="chip_constants.h"/>
        <files mask="resources.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/WWD/internal/chips/43012" type="src">
        <files mask="resources.c"/>
        <files mask="wwd_ap.c"/>
        <files mask="wwd_chip_specific_functions.c"/>
      </source>
      <include_paths>
        <include_path relative_path="43xxx_Wi-Fi/WICED/WWD/internal/chips/43012" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi_wiced.4343W.MIMXRT595S" name="wifi_wiced_4343W" brief="Cypress WICED support for 4343W chip" version="6.1.0" full_name="Cypress WICED support for 4343W chip" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="Wireless/Cypress WiFi" user_visible="true" type="middleware" package_base_path="middleware/wiced" project_base_path="wiced">
      <dependencies>
        <component_dependency value="middleware.wifi_wiced.MIMXRT595S"/>
      </dependencies>
      <source relative_path="43xxx_Wi-Fi/WICED/WWD/internal/chips/4343W" type="c_include">
        <files mask="4343WA1.h"/>
        <files mask="4343WA1_clm.h"/>
        <files mask="4343WA1_mfg.h"/>
        <files mask="4343WA1_clm_mfg.h"/>
        <files mask="chip_constants.h"/>
        <files mask="resources.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/WWD/internal/chips/4343W" type="src">
        <files mask="resources.c"/>
        <files mask="wwd_ap.c"/>
        <files mask="wwd_chip_specific_functions.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_wifi_wiced_4343W_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="43xxx_Wi-Fi/WICED/WWD/internal/chips/4343W" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi_wiced.43455.MIMXRT595S" name="wifi_wiced_43455" brief="Cypress WICED support for 43455 chip" version="6.1.0" full_name="Cypress WICED support for 43455 chip" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="Wireless/Cypress WiFi" user_visible="true" type="middleware" package_base_path="middleware/wiced" project_base_path="wiced">
      <dependencies>
        <component_dependency value="middleware.wifi_wiced.MIMXRT595S"/>
      </dependencies>
      <source relative_path="43xxx_Wi-Fi/WICED/WWD/internal/chips/43455" type="c_include">
        <files mask="43455.h"/>
        <files mask="43455_clm.h"/>
        <files mask="43455_mfg.h"/>
        <files mask="43455_mfg_clm.h"/>
        <files mask="chip_constants.h"/>
        <files mask="resources.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/WWD/internal/chips/43455" type="src">
        <files mask="resources.c"/>
        <files mask="wwd_ap.c"/>
        <files mask="wwd_chip_specific_functions.c"/>
      </source>
      <include_paths>
        <include_path relative_path="43xxx_Wi-Fi/WICED/WWD/internal/chips/43455" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi_wiced.AW_NM372SM.MIMXRT595S" name="wifi_wiced_AW_NM372SM" brief="Cypress WICED support for AW_NM372SM platform" version="6.1.0" full_name="Cypress WICED support for AW_NM372SM platform" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="middleware" package_base_path="middleware/wiced" project_base_path="wiced">
      <dependencies>
        <component_dependency value="middleware.wifi_wiced.4343W.MIMXRT595S"/>
      </dependencies>
      <source relative_path="43xxx_Wi-Fi/platforms/AW_NM372SM" type="c_include">
        <files mask="wifi_nvram_image.h"/>
      </source>
      <include_paths>
        <include_path relative_path="43xxx_Wi-Fi/platforms/AW_NM372SM" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi_wiced.MURATA_TYPE1DX.MIMXRT595S" name="wifi_wiced_MURATA_TYPE1DX" brief="Cypress WICED support for MURATA_TYPE1DX platform" version="6.1.0" full_name="Cypress WICED support for MURATA_TYPE1DX platform" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="Wireless/Cypress WiFi" user_visible="true" type="middleware" package_base_path="middleware/wiced" project_base_path="wiced">
      <dependencies>
        <component_dependency value="middleware.wifi_wiced.4343W.MIMXRT595S"/>
      </dependencies>
      <source relative_path="43xxx_Wi-Fi/platforms/MURATA_TYPE1DX" type="c_include">
        <files mask="wifi_nvram_image.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_wifi_wiced_MURATA_TYPE1DX_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="43xxx_Wi-Fi/platforms/MURATA_TYPE1DX" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi_wiced.MURATA_TYPE1LV.MIMXRT595S" name="wifi_wiced_MURATA_TYPE1LV" brief="Cypress WICED support for MURATA_TYPE1LV platform" version="6.1.0" full_name="Cypress WICED support for MURATA_TYPE1LV platform" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="Wireless/Cypress WiFi" user_visible="true" type="middleware" package_base_path="middleware/wiced" project_base_path="wiced">
      <dependencies>
        <component_dependency value="middleware.wifi_wiced.43012.MIMXRT595S"/>
      </dependencies>
      <source relative_path="43xxx_Wi-Fi/platforms/MURATA_TYPE1LV" type="c_include">
        <files mask="wifi_nvram_image.h"/>
      </source>
      <include_paths>
        <include_path relative_path="43xxx_Wi-Fi/platforms/MURATA_TYPE1LV" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi_wiced.MURATA_TYPE1MW.MIMXRT595S" name="wifi_wiced_MURATA_TYPE1MW" brief="Cypress WICED support for MURATA_TYPE1MW platform" version="6.1.0" full_name="Cypress WICED support for MURATA_TYPE1MW platform" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="Wireless/Cypress WiFi" user_visible="true" type="middleware" package_base_path="middleware/wiced" project_base_path="wiced">
      <dependencies>
        <component_dependency value="middleware.wifi_wiced.43455.MIMXRT595S"/>
      </dependencies>
      <source relative_path="43xxx_Wi-Fi/platforms/MURATA_TYPE1MW" type="c_include">
        <files mask="wifi_nvram_image.h"/>
      </source>
      <include_paths>
        <include_path relative_path="43xxx_Wi-Fi/platforms/MURATA_TYPE1MW" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi_wiced.app.MIMXRT595S" name="wifi_wiced_app" brief="Cypress WICED application code" version="6.1.0" full_name="Cypress WICED application code" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="Wireless/Cypress WiFi" user_visible="false" type="middleware" package_base_path="middleware/wiced" project_base_path="wiced">
      <dependencies>
        <component_dependency value="middleware.wifi_wiced.MIMXRT595S"/>
      </dependencies>
      <source relative_path="43xxx_Wi-Fi/app" type="src">
        <files mask="dhcp_server.c"/>
        <files mask="test_apsta.c"/>
        <files mask="test_scan.c"/>
        <files mask="wlanif_add.c"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/app" type="c_include">
        <files mask="dhcp_server.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_wifi_wiced_app_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="43xxx_Wi-Fi/app" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi_wiced.wl_tool.MIMXRT595S" name="wifi_wiced_wl_tool" brief="Cypress WICED wl_tool for 4343WA1" version="6.1.0" full_name="Cypress WICED wl_tool for 4343WA1" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="Wireless/Cypress WiFi" user_visible="false" type="middleware" package_base_path="middleware/wiced" project_base_path="wiced">
      <dependencies>
        <component_dependency value="middleware.wifi_wiced.MIMXRT595S"/>
      </dependencies>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/4343WA1/common/include/devctrl_if" type="c_include">
        <files mask="phyioctl_defs.h"/>
        <files mask="wlioctl_defs.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/4343WA1/common/include/proto" type="c_include">
        <files mask="802.11.h"/>
        <files mask="802.11e.h"/>
        <files mask="802.1d.h"/>
        <files mask="bcmeth.h"/>
        <files mask="bcmevent.h"/>
        <files mask="bcmip.h"/>
        <files mask="bcmipv6.h"/>
        <files mask="ethernet.h"/>
        <files mask="vlan.h"/>
        <files mask="wpa.h"/>
        <files mask="wps.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/4343WA1/include" type="c_include">
        <files mask="bcm_cfg.h"/>
        <files mask="bcm_mpool_pub.h"/>
        <files mask="bcmcdc.h"/>
        <files mask="bcmdefs.h"/>
        <files mask="bcmdevs.h"/>
        <files mask="bcmendian.h"/>
        <files mask="bcmnvram.h"/>
        <files mask="bcmsrom_fmt.h"/>
        <files mask="bcmsrom_tbl.h"/>
        <files mask="bcmstdlib.h"/>
        <files mask="bcmutils.h"/>
        <files mask="dhdioctl.h"/>
        <files mask="epictrl.h"/>
        <files mask="epiioctl.h"/>
        <files mask="epivers.h"/>
        <files mask="irelay.h"/>
        <files mask="miniopt.h"/>
        <files mask="packed_section_end.h"/>
        <files mask="packed_section_start.h"/>
        <files mask="sbpcmcia.h"/>
        <files mask="trxhdr.h"/>
        <files mask="typedefs.h"/>
        <files mask="usbrdl.h"/>
        <files mask="wl_drv.h"/>
        <files mask="wlioctl.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/4343WA1/shared/bcmwifi/include" type="c_include">
        <files mask="bcmwifi_channels.h"/>
        <files mask="bcmwifi_rates.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/4343WA1/wl/exe" type="c_include">
        <files mask="wlu.h"/>
        <files mask="wlu_client_shared.h"/>
        <files mask="wlu_cmd.h"/>
        <files mask="wlu_common.h"/>
        <files mask="wlu_pipe.h"/>
        <files mask="wlu_remote.h"/>
        <files mask="wlu_server_shared.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/4343WA1/wl/exe" type="src">
        <files mask="wlu_pipe.c"/>
        <files mask="wlu_server_shared.c"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/dummy/arpa" type="c_include">
        <files mask="inet.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/dummy/net" type="c_include">
        <files mask="if.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/dummy" type="c_include">
        <files mask="netdb.h"/>
        <files mask="ntddndis.h"/>
        <files mask="nuiouser.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/dummy/sys" type="c_include">
        <files mask="socket.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool" type="c_include">
        <files mask="wl_tool.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool" type="src">
        <files mask="wlu_server.c"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool" type="other">
        <files mask="wl4343WA1.exe" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_wifi_wiced_wl_tool_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/4343WA1/common/include/devctrl_if" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/4343WA1/common/include/proto" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/4343WA1/include" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/4343WA1/shared/bcmwifi/include" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/4343WA1/wl/exe" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/dummy/arpa" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/dummy/net" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/dummy" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/dummy/sys" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/libraries/test/wl_tool" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/4343WA1/common/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi_wiced.wl_tool.43012.MIMXRT595S" name="wifi_wiced_wl_tool_43012" brief="Cypress WICED wl_tool for 43012C0" version="6.1.0" full_name="Cypress WICED wl_tool for 43012C0" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="false" type="middleware" package_base_path="middleware/wiced" project_base_path="wiced">
      <dependencies>
        <component_dependency value="middleware.wifi_wiced.MIMXRT595S"/>
      </dependencies>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/43012C0/common/include/devctrl_if" type="c_include">
        <files mask="phyioctl_defs.h"/>
        <files mask="wlioctl.h"/>
        <files mask="wlioctl_defs.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/43012C0/common/include/proto" type="c_include">
        <files mask="802.11.h"/>
        <files mask="802.11e.h"/>
        <files mask="802.1d.h"/>
        <files mask="bcmeth.h"/>
        <files mask="bcmevent.h"/>
        <files mask="bcmip.h"/>
        <files mask="bcmipv6.h"/>
        <files mask="ethernet.h"/>
        <files mask="wpa.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/43012C0/include" type="c_include">
        <files mask="bcm_cfg.h"/>
        <files mask="bcm_mpool_pub.h"/>
        <files mask="bcmcdc.h"/>
        <files mask="bcmdefs.h"/>
        <files mask="bcmdevs.h"/>
        <files mask="bcmendian.h"/>
        <files mask="bcmnvram.h"/>
        <files mask="bcmsrom_fmt.h"/>
        <files mask="bcmsrom_tbl.h"/>
        <files mask="bcmstdlib.h"/>
        <files mask="bcmtlv.h"/>
        <files mask="bcmutils.h"/>
        <files mask="dhdioctl.h"/>
        <files mask="epictrl.h"/>
        <files mask="epitimers.h"/>
        <files mask="epivers.h"/>
        <files mask="event_log.h"/>
        <files mask="irelay.h"/>
        <files mask="miniopt.h"/>
        <files mask="packed_section_end.h"/>
        <files mask="packed_section_start.h"/>
        <files mask="rte_ioctl.h"/>
        <files mask="sbpcmcia.h"/>
        <files mask="sdiovar.h"/>
        <files mask="trxhdr.h"/>
        <files mask="typedefs.h"/>
        <files mask="usbrdl.h"/>
        <files mask="wl_drv.h"/>
        <files mask="wlioctl.h"/>
        <files mask="wlioctl_utils.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/43012C0/shared/bcmwifi/include" type="c_include">
        <files mask="bcmwifi_channels.h"/>
        <files mask="bcmwifi_monitor.h"/>
        <files mask="bcmwifi_radiotap.h"/>
        <files mask="bcmwifi_rates.h"/>
        <files mask="bcmwifi_rclass.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/43012C0/wl/exe" type="c_include">
        <files mask="wlu.h"/>
        <files mask="wlu_client_shared.h"/>
        <files mask="wlu_cmd.h"/>
        <files mask="wlu_common.h"/>
        <files mask="wlu_pipe.h"/>
        <files mask="wlu_remote.h"/>
        <files mask="wlu_server_shared.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/43012C0/wl/exe" type="src">
        <files mask="wlu_pipe.c"/>
        <files mask="wlu_server_shared.c"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/dummy/arpa" type="c_include">
        <files mask="inet.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/dummy/net" type="c_include">
        <files mask="if.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/dummy" type="c_include">
        <files mask="netdb.h"/>
        <files mask="ntddndis.h"/>
        <files mask="nuiouser.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/dummy/sys" type="c_include">
        <files mask="socket.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool" type="c_include">
        <files mask="wl_tool.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool" type="src">
        <files mask="wlu_server.c"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool" type="other">
        <files mask="wl43012C0.exe" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/43012C0/common/include/devctrl_if" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/43012C0/common/include/proto" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/43012C0/include" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/43012C0/shared/bcmwifi/include" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/43012C0/wl/exe" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/dummy/arpa" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/dummy/net" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/dummy" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/dummy/sys" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/libraries/test/wl_tool" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/43012C0/common/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi_wiced.wl_tool.43455.MIMXRT595S" name="wifi_wiced_wl_tool_43455" brief="Cypress WICED wl_tool for 43455" version="6.1.0" full_name="Cypress WICED wl_tool for 43455" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="false" type="middleware" package_base_path="middleware/wiced" project_base_path="wiced">
      <dependencies>
        <component_dependency value="middleware.wifi_wiced.MIMXRT595S"/>
      </dependencies>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool" type="other">
        <files mask="wl43455C0.exe" hidden="true"/>
      </source>
    </component>
    <component id="platform.utilities.misc_utilities.MIMXRT595S" name="misc_utilities" brief="Utilities which is needed for particular toolchain like the SBRK function required to address limitation between HEAP and STACK in GCC toolchain library." version="1.0.0" full_name="Utilities miscellaneous" devices="MIMXRT595S" user_visible="true" type="utilities" package_base_path="devices/MIMXRT595S/utilities" project_base_path="utilities">
      <source toolchain="armgcc" relative_path="./" type="src">
        <files mask="fsl_sbrk.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="utilities_misc_utilities_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
    </component>
    <component id="platform.utilities.assert.MIMXRT595S" name="assert" brief="Utility assert" version="1.0.0" full_name="Utility assert" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="utilities" package_base_path="devices/MIMXRT595S/utilities" project_base_path="utilities">
      <dependencies>
        <component_dependency value="utility.debug_console.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_assert.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="utility_assert_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
    </component>
    <component id="platform.utilities.assert_lite.MIMXRT595S" name="assert_lite" brief="Utility assert_lite" version="1.0.0" full_name="Utility assert_lite" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="utilities" package_base_path="devices/MIMXRT595S/utilities/debug_console_lite" project_base_path="utilities">
      <dependencies>
        <component_dependency value="utility.debug_console_lite.MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_assert.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="utility_assert_lite_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
    </component>
    <component id="utility.debug_console.MIMXRT595S" name="debug_console" brief="Utility debug_console" version="1.0.0" full_name="Utility debug_console" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="utilities" package_base_path="devices/MIMXRT595S/utilities" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="component.serial_manager.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="str" project_relative_path="./" type="src">
        <files mask="fsl_str.c"/>
      </source>
      <source relative_path="str" project_relative_path="./" type="c_include">
        <files mask="fsl_str.h"/>
      </source>
      <source relative_path="debug_console" project_relative_path="./" type="src">
        <files mask="fsl_debug_console.c"/>
      </source>
      <source relative_path="debug_console" project_relative_path="./" type="c_include">
        <files mask="fsl_debug_console.h"/>
        <files mask="fsl_debug_console_conf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="utility_debug_console_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="str" project_relative_path="./" type="c_include"/>
        <include_path relative_path="debug_console" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="utility.debug_console_lite.MIMXRT595S" name="debug_console_lite" brief="Utility debug_console_lite" version="1.0.0" full_name="Utility debug_console_lite" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="utilities" package_base_path="devices/MIMXRT595S/utilities/debug_console_lite" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="component.usart_adapter.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_debug_console.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_debug_console.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="utility_debug_console_lite_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="utility.shell.MIMXRT595S" name="shell" brief="Utility shell" version="1.0.0" full_name="Utility shell" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="utilities" package_base_path="devices/MIMXRT595S/utilities" project_base_path="utilities">
      <defines>
        <define name="DEBUG_CONSOLE_RX_ENABLE" value="0"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="utility.debug_console.MIMXRT595S"/>
          <component_dependency value="component.lists.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_shell.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_shell.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="utility_shell_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="project_template.evkmimxrt595_agm01.MIMXRT595S" name="evkmimxrt595_agm01" brief="Board_project_template evkmimxrt595_agm01" version="1.0.0" full_name="Board_project_template evkmimxrt595_agm01" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" category="Board Support/SDK Project Template" user_visible="true" type="project_template" package_base_path="boards/evkmimxrt595_agm01/project_template" project_base_path="evkmimxrt595_agm01/project_template">
      <defines>
        <define name="FSL_SDK_DRIVER_QUICK_ACCESS_ENABLE" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="device.MIMXRT595S_startup.MIMXRT595S"/>
          <component_dependency value="platform.drivers.power.MIMXRT595S"/>
          <component_dependency value="platform.drivers.flexcomm_usart.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="platform.drivers.lpc_iopctl.MIMXRT595S"/>
          <component_dependency value="platform.drivers.lpc_gpio.MIMXRT595S"/>
          <component_dependency value="platform.drivers.reset.MIMXRT595S"/>
          <component_dependency value="utility.debug_console.MIMXRT595S"/>
          <component_dependency value="platform.drivers.clock.MIMXRT595S"/>
          <component_dependency value="platform.drivers.flash_config.MIMXRT595S"/>
          <component_dependency value="component.usart_adapter.MIMXRT595S"/>
          <component_dependency value="component.serial_manager_uart.MIMXRT595S"/>
          <component_dependency value="component.serial_manager.MIMXRT595S"/>
          <component_dependency value="platform.drivers.flexspi.MIMXRT595S"/>
          <component_dependency value="platform.drivers.cache_cache64.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="pin_mux.c"/>
        <files mask="peripherals.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="pin_mux.h"/>
        <files mask="peripherals.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.drivers.gpio_imx.MIMXRT595S" name="gpio_imx" brief="ISSDK GPIO Driver for i.MXRT10xx" version="1.7.0" full_name="Middleware issdk drivers gpio_imx" devices="MIMXRT595S" user_visible="false" type="middleware" package_base_path="middleware/issdk" project_base_path="gpio_driver">
      <source relative_path="drivers/gpio/i.mx" project_relative_path="./" type="src">
        <files mask="gpio_driver_irq.c"/>
        <files mask="gpio_driver.c"/>
      </source>
      <source relative_path="drivers/gpio/i.mx" project_relative_path="./" type="c_include">
        <files mask="gpio_driver.h"/>
      </source>
      <source relative_path="drivers/gpio" project_relative_path="./" type="c_include">
        <files mask="Driver_GPIO.h"/>
      </source>
      <include_paths>
        <include_path relative_path="drivers/gpio/i.mx" project_relative_path="./" type="c_include"/>
        <include_path relative_path="drivers/gpio" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.drivers.gpio_imx8.MIMXRT595S" name="gpio_imx" brief="ISSDK GPIO Driver for i.MX8xx" version="1.7.0" full_name="Middleware issdk drivers gpio_imx8" devices="MIMXRT595S" user_visible="false" type="middleware" package_base_path="middleware/issdk" project_base_path="gpio_driver">
      <source relative_path="drivers/gpio/i.mx" project_relative_path="./" type="src">
        <files mask="gpio_driver.c"/>
      </source>
      <source relative_path="drivers/gpio/i.mx" project_relative_path="./" type="c_include">
        <files mask="gpio_driver.h"/>
      </source>
      <source relative_path="drivers/gpio" project_relative_path="./" type="c_include">
        <files mask="Driver_GPIO.h"/>
      </source>
      <include_paths>
        <include_path relative_path="drivers/gpio/i.mx" project_relative_path="./" type="c_include"/>
        <include_path relative_path="drivers/gpio" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.drivers.gpio_imxrt.MIMXRT595S" name="gpio_imxrt" brief="ISSDK GPIO Driver for i.MXRT" version="1.7.0" full_name="Middleware issdk drivers gpio_imxrt" devices="MIMXRT595S" user_visible="false" type="middleware" package_base_path="middleware/issdk" project_base_path="gpio_driver">
      <source relative_path="drivers/gpio/i.mx" project_relative_path="./" type="src">
        <files mask="gpio_driver.c"/>
      </source>
      <source relative_path="drivers/gpio/i.mx" project_relative_path="./" type="c_include">
        <files mask="gpio_driver.h"/>
      </source>
      <source relative_path="drivers/gpio" project_relative_path="./" type="c_include">
        <files mask="Driver_GPIO.h"/>
      </source>
      <include_paths>
        <include_path relative_path="drivers/gpio/i.mx" project_relative_path="./" type="c_include"/>
        <include_path relative_path="drivers/gpio" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.drivers.gpio_imxrt600.MIMXRT595S" name="gpio_imx" brief="ISSDK GPIO Driver for i.MXRT685" version="1.7.0" full_name="Middleware issdk drivers gpio_imxrt600" devices="MIMXRT595S" user_visible="false" type="middleware" package_base_path="middleware/issdk" project_base_path="gpio_driver">
      <source relative_path="drivers/gpio/i.mx/i.mxrt600" project_relative_path="./" type="src">
        <files mask="gpio_driver.c"/>
      </source>
      <source relative_path="drivers/gpio/i.mx/i.mxrt600" project_relative_path="./" type="c_include">
        <files mask="gpio_driver.h"/>
      </source>
      <source relative_path="drivers/gpio" project_relative_path="./" type="c_include">
        <files mask="Driver_GPIO.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_issdk_drivers_gpio_imxrt600_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="drivers/gpio/i.mx/i.mxrt600" project_relative_path="./" type="c_include"/>
        <include_path relative_path="drivers/gpio" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.drivers.host.MIMXRT595S" name="issdk_host" brief="ISSDK Host Interface Service" version="1.7.0" full_name="Middleware issdk drivers host" devices="MIMXRT595S" device_cores="cm33_MIMXRT595S" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="host">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT595S"/>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="host_io_uart.c"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="host_io_uart.h"/>
      </source>
      <source relative_path="drivers/host" project_relative_path="./" type="src">
        <files mask="comm_if_uart.c"/>
        <files mask="data_format_hdlc.c"/>
        <files mask="data_format_json.c"/>
        <files mask="host_interface_service.c"/>
      </source>
      <source relative_path="drivers/host" project_relative_path="./" type="c_include">
        <files mask="comm_interface.h"/>
        <files mask="data_format_hdlc.h"/>
        <files mask="data_format_json.h"/>
        <files mask="data_format_service.h"/>
        <files mask="host_interface_service.h"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
        <include_path relative_path="drivers/host" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.drivers.systick_utils.MIMXRT595S" name="systick_utils" brief="ISSDK Utils" version="1.7.0" full_name="Middleware issdk drivers systick_utils" devices="MIMXRT595S" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="utilities">
      <source relative_path="drivers/systick" project_relative_path="./" type="src">
        <files mask="systick_utils.c"/>
      </source>
      <source relative_path="drivers/systick" project_relative_path="./" type="c_include">
        <files mask="systick_utils.h"/>
      </source>
      <include_paths>
        <include_path relative_path="drivers/systick" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.drivers.systick_utils.evkmimxrt595.MIMXRT595S" name="systick_utils" brief="ISSDK Utils" version="1.7.0" full_name="Middleware issdk drivers systick_utils evkmimxrt595" devices="MIMXRT595S" user_visible="false" type="middleware" package_base_path="middleware/issdk" project_base_path="utilities">
      <source relative_path="drivers/systick" project_relative_path="./" type="src">
        <files mask="systick_utils.c"/>
      </source>
      <source relative_path="drivers/systick" project_relative_path="./" type="c_include">
        <files mask="systick_utils.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_issdk_drivers_systick_utils_evkmimxrt595_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="drivers/systick" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.allregdefs.MIMXRT595S" name="issdk_allregdefs" brief="ISSDK Sensors RegDefs" version="1.7.0" full_name="Middleware issdk sensor allregdefs" devices="MIMXRT595S" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="sensors">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT595S"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="fxas21002.h"/>
        <files mask="fxos8700.h"/>
        <files mask="mpl3115.h"/>
        <files mask="fxlc95000.h"/>
        <files mask="fxls8471q.h"/>
        <files mask="fxls8962.h"/>
        <files mask="fxpq3115.h"/>
        <files mask="mag3110.h"/>
        <files mask="mma845x.h"/>
        <files mask="mma865x.h"/>
        <files mask="mma8491q.h"/>
        <files mask="mma9553.h"/>
        <files mask="diff_p.h"/>
        <files mask="dbap.h"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.boardkit.evkmimxrt595.MIMXRT595S" name="issdk_boardkit_evkmimxrt595" brief="ISSDK Board-Kit files for i.MXRT595 kit" version="1.7.0" full_name="Middleware issdk sensor boardkit evkmimxrt595" devices="MIMXRT595S" user_visible="false" type="other" package_base_path="middleware/issdk" project_base_path="issdk_boardkit">
      <source relative_path="boardkit/evk-mimxrt595" project_relative_path="./" type="src">
        <files mask="pin_mux.c"/>
        <files mask="evkmimxrt595.c"/>
      </source>
      <source relative_path="boardkit/evk-mimxrt595" project_relative_path="./" type="c_include">
        <files mask="evkmimxrt595.h"/>
        <files mask="pin_mux.h"/>
        <files mask="RTE_Device.h"/>
      </source>
      <source relative_path="boardkit/evk-mimxrt595/frdm-stbc-agm01" project_relative_path="./" type="c_include">
        <files mask="issdk_hal.h"/>
        <files mask="frdm_stbc_agm01_shield.h"/>
      </source>
    </component>
    <component id="middleware.issdk.sensor.fxas21002.MIMXRT595S" name="issdk_fxas21002" brief="ISSDK FXAS21002 Sensor Driver Files" version="1.7.0" full_name="Middleware issdk sensor fxas21002" devices="MIMXRT595S" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="sensors">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT595S"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="fxas21002.h"/>
        <files mask="fxas21002_drv.h"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="fxas21002_drv.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_issdk_sensor_fxas21002_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.fxlc95000.MIMXRT595S" name="issdk_fxlc95000" brief="ISSDK FXLC95000 Sensor Driver Files" version="1.7.0" full_name="Middleware issdk sensor fxlc95000" devices="MIMXRT595S" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="sensors">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT595S"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="fxlc95000.h"/>
        <files mask="fxlc95000_drv.h"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="fxlc95000_drv.c"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.fxls8471q.MIMXRT595S" name="issdk_fxls8471q" brief="ISSDK FXLS8471 Sensor Driver Files" version="1.7.0" full_name="Middleware issdk sensor fxls8471q" devices="MIMXRT595S" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="sensors">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT595S"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="fxls8471q.h"/>
        <files mask="fxls8471q_drv.h"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="fxls8471q_drv.c"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.fxls8962.MIMXRT595S" name="issdk_fxls8962" brief="ISSDK FXLS8962 Sensor Driver Files" version="1.7.0" full_name="Middleware issdk sensor fxls8962" devices="MIMXRT595S" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="sensors">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT595S"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="fxls8962.h"/>
        <files mask="fxls8962_drv.h"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="fxls8962_drv.c"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.fxos8700.MIMXRT595S" name="issdk_fxos8700" brief="ISSDK FXOS8700 Sensor Driver Files" version="1.7.0" full_name="Middleware issdk sensor fxos8700" devices="MIMXRT595S" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="sensors">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT595S"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="fxos8700.h"/>
        <files mask="fxos8700_drv.h"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="fxos8700_drv.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_issdk_sensor_fxos8700_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.fxpq3115.MIMXRT595S" name="issdk_fxpq3115" brief="ISSDK FXPQ3115 Sensor Driver Files" version="1.7.0" full_name="Middleware issdk sensor fxpq3115" devices="MIMXRT595S" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="sensors">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT595S"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="fxpq3115.h"/>
        <files mask="fxpq3115_drv.h"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="fxpq3115_drv.c"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.fxps7250d4.MIMXRT595S" name="issdk_fxps7250d4" brief="ISSDK fxps7250d4 Sensor Driver Files" version="1.7.0" full_name="Middleware issdk sensor fxps7250d4" devices="MIMXRT595S" user_visible="false" type="middleware" package_base_path="middleware/issdk" project_base_path="sensors">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT595S"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="dbap.h"/>
        <files mask="dbap_drv.h"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="dbap_drv.c"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.interface.common.MIMXRT595S" name="issdk_interfaces" brief="ISSDK Sensor Interface Common" version="1.7.0" full_name="Middleware issdk sensor interface common" devices="MIMXRT595S" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="interfaces">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT595S"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="register_io_i2c.c"/>
        <files mask="register_io_spi.c"/>
        <files mask="sensor_io_spi.c"/>
        <files mask="sensor_io_i2c.c"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="register_io_i2c.h"/>
        <files mask="register_io_spi.h"/>
        <files mask="sensor_io_spi.h"/>
        <files mask="sensor_io_i2c.h"/>
        <files mask="sensor_drv.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_issdk_sensor_interface_common_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.isl29023.MIMXRT595S" name="issdk_isl29023" brief="ISSDK ISL29023 Sensor Driver Files" version="1.7.0" full_name="Middleware issdk sensor isl29023" devices="MIMXRT595S" user_visible="false" type="middleware" package_base_path="middleware/issdk" project_base_path="sensors">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT595S"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="isl29023.h"/>
        <files mask="isl29023_drv.h"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="isl29023_drv.c"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.mag3110.MIMXRT595S" name="issdk_mag3110" brief="ISSDK MAG3110 Sensor Driver Files" version="1.7.0" full_name="Middleware issdk sensor mag3110" devices="MIMXRT595S" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="sensors">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT595S"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="mag3110.h"/>
        <files mask="mag3110_drv.h"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="mag3110_drv.c"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.mma845x.MIMXRT595S" name="issdk_mma845x" brief="ISSDK MMA845x Sensor Driver Files" version="1.7.0" full_name="Middleware issdk sensor mma845x" devices="MIMXRT595S" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="sensors">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT595S"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="mma845x.h"/>
        <files mask="mma845x_drv.h"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="mma845x_drv.c"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.mma8491q.MIMXRT595S" name="issdk_mma8491q" brief="ISSDK MMA8491 Sensor Driver Files" version="1.7.0" full_name="Middleware issdk sensor mma8491q" devices="MIMXRT595S" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="sensors">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT595S"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="mma8491q.h"/>
        <files mask="mma8491q_drv.h"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="mma8491q_drv.c"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.mma865x.MIMXRT595S" name="issdk_mma865x" brief="ISSDK MMA865x Sensor Driver Files" version="1.7.0" full_name="Middleware issdk sensor mma865x" devices="MIMXRT595S" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="sensors">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT595S"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="mma865x.h"/>
        <files mask="mma865x_drv.h"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="mma865x_drv.c"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.mma9553.MIMXRT595S" name="issdk_mma9553" brief="ISSDK MMA9553 Sensor Driver Files" version="1.7.0" full_name="Middleware issdk sensor mma9553" devices="MIMXRT595S" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="sensors">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT595S"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="mma9553.h"/>
        <files mask="mma9553_drv.h"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="mma9553_drv.c"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.mpl3115.MIMXRT595S" name="issdk_mpl3115" brief="ISSDK MPL3115 Sensor Driver Files" version="1.7.0" full_name="Middleware issdk sensor mpl3115" devices="MIMXRT595S" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="sensors">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT595S"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="mpl3115.h"/>
        <files mask="mpl3115_drv.h"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="mpl3115_drv.c"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.nps300x.MIMXRT595S" name="issdk_nps300x" brief="ISSDK nps300x Sensor Driver Files" version="1.7.0" full_name="Middleware issdk sensor nps300x" devices="MIMXRT595S" user_visible="false" type="middleware" package_base_path="middleware/issdk" project_base_path="sensors">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT595S"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="diff_p.h"/>
        <files mask="diff_p_drv.h"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="diff_p_drv.c"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.tools.MIMXRT595S" name="issdk_tools" brief="ISSDK Serial to MQTT bridge application" version="1.7.0" full_name="Middleware issdk sensor tools" devices="MIMXRT595S" user_visible="false" type="other" package_base_path="middleware/issdk" project_base_path="issdk_senor">
      <source relative_path="tools/Serial_To_MQTT" project_relative_path="./" type="script">
        <files mask="CloudBridgeNXPDemo.py"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.CMSIS_cm7_headers.MIMXRT595S" name="CMSIS_cm7_headers" brief="CMSIS cm7 headers" version="2.8.0" full_name="Middleware mcu-boot cmsis_cm7_headers" devices="MIMXRT595S" user_visible="false" type="middleware" package_base_path="CMSIS/Include" project_base_path="CMSIS">
      <source toolchain="mcuxpresso" relative_path="./" type="c_include">
        <files mask="mpu_armv7.h"/>
        <files mask="core_cm7.h"/>
        <files mask="cmsis_version.h"/>
        <files mask="cmsis_gcc.h"/>
        <files mask="cmsis_compiler.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" toolchain="mcuxpresso" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcu-boot.MIMXRT595S_sources.MIMXRT595S" name="MCUBOOT_MIMXRT595S_sources" brief="MCUBOOT MIMXRT595S sources" version="1.0.0" full_name="Middleware mcu-boot mimxrt595s_sources" devices="MIMXRT595S" user_visible="false" type="middleware" package_base_path="middleware/mcu-boot/" project_base_path="source">
      <source relative_path="targets/MIMXRT595S/src" project_relative_path="../MIMXRT595S" type="c_include">
        <files mask="bootloader_config.h"/>
        <files mask="target_config.h"/>
        <files mask="bl_api.h"/>
      </source>
      <source relative_path="targets/MIMXRT595S/src" project_relative_path="../MIMXRT595S" type="src">
        <files mask="bl_clock_config_MIMXRT595S.c"/>
        <files mask="hardware_init_MIMXRT595S.c"/>
        <files mask="memory_map_MIMXRT595S.c"/>
        <files mask="external_memory_property_map_MIMXRT595S.c"/>
        <files mask="bl_api.c"/>
      </source>
      <source relative_path="targets/MIMXRT595S/src" project_relative_path="bootloader/src" type="src">
        <files mask="bl_main.c"/>
      </source>
      <source relative_path="src/bootloader" project_relative_path="bootloader" type="c_include">
        <files mask="bl_version.h"/>
        <files mask="bootloader.h"/>
        <files mask="bl_context.h"/>
        <files mask="bl_peripheral_interface.h"/>
        <files mask="bl_user_entry.h"/>
        <files mask="bl_command.h"/>
        <files mask="bl_peripheral.h"/>
        <files mask="bl_shutdown_cleanup.h"/>
        <files mask="bl_app_crc_check.h"/>
      </source>
      <source relative_path="src/bootloader/src" project_relative_path="bootloader/src" type="src">
        <files mask="bl_context.c"/>
        <files mask="bl_exception_handler.c"/>
        <files mask="bl_tree_root.c"/>
        <files mask="bl_app_crc_check.c"/>
      </source>
      <source relative_path="src/crc" project_relative_path="crc" type="c_include">
        <files mask="crc16.h"/>
        <files mask="crc32.h"/>
      </source>
      <source relative_path="src/crc/src" project_relative_path="crc" type="src">
        <files mask="crc16.c"/>
        <files mask="crc32.c"/>
      </source>
      <source relative_path="src/include" project_relative_path="include" type="c_include">
        <files mask="bootloader_common.h"/>
        <files mask="bootloader_core.h"/>
      </source>
      <source relative_path="src/memory" project_relative_path="memory" type="c_include">
        <files mask="memory.h"/>
      </source>
      <source relative_path="src/memory/src" project_relative_path="memory/src" type="c_include">
        <files mask="sram_init.h"/>
        <files mask="normal_memory.h"/>
        <files mask="pattern_fill.h"/>
      </source>
      <source relative_path="src/memory/src" project_relative_path="memory/src" type="src">
        <files mask="memory.c"/>
        <files mask="normal_memory.c"/>
      </source>
      <source toolchain="iar" relative_path="src/memory/src" project_relative_path="memory/src" type="asm_include">
        <files mask="pattern_fill.s"/>
      </source>
      <source toolchain="mcuxpresso armgcc" relative_path="src/memory/src" project_relative_path="memory/src" type="asm_include">
        <files mask="pattern_fill_gcc.S"/>
      </source>
      <source toolchain="mdk" relative_path="src/memory/src" project_relative_path="memory/src" type="asm_include">
        <files mask="pattern_fill_mdk.s"/>
      </source>
      <source relative_path="src/startup" project_relative_path="../startup" type="c_include">
        <files mask="ar_asm_macros.h"/>
      </source>
      <source relative_path="src/packet" project_relative_path="packet" type="c_include">
        <files mask="command_packet.h"/>
        <files mask="serial_packet.h"/>
      </source>
      <source relative_path="src/property" project_relative_path="property" type="c_include">
        <files mask="property.h"/>
      </source>
      <source relative_path="src/utilities" project_relative_path="utilities" type="c_include">
        <files mask="fsl_rtos_abstraction.h"/>
        <files mask="fsl_assert.h"/>
        <files mask="vector_table_info.h"/>
      </source>
      <source relative_path="src/utilities/src" project_relative_path="utilities/src" type="src">
        <files mask="fsl_assert.c"/>
        <files mask="fsl_rtos_abstraction.c"/>
        <files mask="debug_util.c"/>
      </source>
      <source relative_path="src/property/src" project_relative_path="property/src" type="src">
        <files mask="property_rt685s.c"/>
      </source>
      <source relative_path="src/startup" project_relative_path="startup" type="src">
        <files mask="startup.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_mcu-boot_MIMXRT595S_sources_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="targets/MIMXRT595S/src" project_relative_path="../MIMXRT595S" type="c_include"/>
        <include_path relative_path="components/osa" project_relative_path="osa" type="c_include"/>
        <include_path relative_path="src/bootloader" project_relative_path="bootloader" type="c_include"/>
        <include_path relative_path="src/crc" project_relative_path="crc" type="c_include"/>
        <include_path relative_path="src/include" project_relative_path="include" type="c_include"/>
        <include_path relative_path="src/memory" project_relative_path="memory" type="c_include"/>
        <include_path relative_path="src/memory/src" project_relative_path="memory/src" type="c_include"/>
        <include_path relative_path="src/startup" project_relative_path="../startup" type="c_include"/>
        <include_path relative_path="src/packet" project_relative_path="packet" type="c_include"/>
        <include_path relative_path="src/property" project_relative_path="property" type="c_include"/>
        <include_path relative_path="src/utilities" project_relative_path="utilities" type="c_include"/>
        <include_path relative_path="src/startup" project_relative_path="../startup" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcu-boot.MIMXRT595S_startup.MIMXRT595S" name="MCUBOOT_MIMXRT595S_startup" brief="MCUBOOT MIMXRT595S startup sources" version="1.0.0" full_name="Middleware mcu-boot mimxrt595s_startup" devices="MIMXRT595S" user_visible="false" type="middleware" package_base_path="middleware/mcu-boot" project_base_path="mcu-boot">
      <source relative_path="../../devices/MIMXRT595S" project_relative_path="../device" type="c_include">
        <files mask="system_MIMXRT595S_cm33.h"/>
      </source>
      <source relative_path="../../devices/MIMXRT595S" project_relative_path="../device" type="src">
        <files mask="system_MIMXRT595S_cm33.c"/>
      </source>
      <source toolchain="iar" relative_path="targets/MIMXRT595S/src/startup/iar" project_relative_path="../startup" type="asm_include">
        <files mask="startup_MIMXRT595S.s"/>
      </source>
      <source toolchain="mcuxpresso armgcc" relative_path="targets/MIMXRT595S/src/startup/gcc" project_relative_path="../startup" type="asm_include">
        <files mask="startup_MIMXRT595S.S"/>
      </source>
      <source toolchain="mcuxpresso armgcc" relative_path="src/startup" project_relative_path="../startup" type="asm_include">
        <files mask="crt0_gcc.S"/>
      </source>
      <source toolchain="mdk" relative_path="targets/MIMXRT595S/src/startup/arm" project_relative_path="../startup" type="asm_include">
        <files mask="startup_MIMXRT595S.s"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_mcu-boot_MIMXRT595S_startup_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="../../devices/MIMXRT595S" project_relative_path="../device" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcu-boot.drv_flexspi_nor.MIMXRT595S" name="MCUBOOT_flexspi_nor" brief="MCUBOOT flexspi nor driver" version="1.0.0" full_name="Middleware mcu-boot drv_flexspi_nor" devices="MIMXRT595S" user_visible="false" type="middleware" package_base_path="middleware/mcu-boot" project_base_path="source">
      <source relative_path="src/drivers/flexspi" project_relative_path="drivers/flexspi" type="src">
        <files mask="bl_flexspi.c"/>
      </source>
      <source relative_path="src/drivers/flexspi" project_relative_path="drivers/flexspi" type="c_include">
        <files mask="bl_flexspi.h"/>
      </source>
      <source relative_path="src/drivers/flexspi_nor" project_relative_path="drivers/flexspi_nor" type="src">
        <files mask="flexspi_nor_flash.c"/>
      </source>
      <source relative_path="src/drivers/flexspi_nor" project_relative_path="drivers/flexspi_nor" type="c_include">
        <files mask="flexspi_nor_flash.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_mcu-boot_drv_flexspi_nor_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/drivers/flexspi" project_relative_path="drivers/flexspi" type="c_include"/>
        <include_path relative_path="src/drivers/flexspi_nor" project_relative_path="drivers/flexspi_nor" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcu-boot.drv_microseconds.MIMXRT595S" name="MCUBOOT_microseconds_sysclk" brief="MCUBOOT microseconds sysclk" version="1.0.0" full_name="Middleware mcu-boot drv_microseconds" devices="MIMXRT595S" user_visible="false" type="middleware" package_base_path="middleware/mcu-boot" project_base_path="source">
      <source relative_path="src/drivers/microseconds" project_relative_path="drivers/microseconds" type="c_include">
        <files mask="microseconds.h"/>
      </source>
      <source relative_path="src/drivers/microseconds/src" project_relative_path="drivers/microseconds" type="src">
        <files mask="microseconds_sysclk.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_mcu-boot_drv_microseconds_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/drivers/microseconds" project_relative_path="drivers/microseconds" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcu-boot.drv_microseconds_pit.MIMXRT595S" name="MCUBOOT_microseconds_pit" brief="MCUBOOT microseconds pit" version="1.0.0" full_name="Middleware mcu-boot drv_microseconds_pit" devices="MIMXRT595S" user_visible="false" type="middleware" package_base_path="middleware/mcu-boot" project_base_path="source">
      <source relative_path="src/drivers/microseconds" project_relative_path="drivers/microseconds" type="c_include">
        <files mask="microseconds.h"/>
      </source>
      <source relative_path="src/drivers/microseconds/src" project_relative_path="drivers/microseconds" type="src">
        <files mask="microseconds_pit.c"/>
      </source>
      <include_paths>
        <include_path relative_path="src/drivers/microseconds" project_relative_path="drivers/microseconds" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcu-boot.mem_flexspi_nor.MIMXRT595S" name="MCUBOOT_mem_flexspi_nor" brief="MCUBOOT flexspi nor memory interface" version="1.0.0" full_name="Middleware mcu-boot mem_flexspi_nor" devices="MIMXRT595S" user_visible="false" type="middleware" package_base_path="middleware/mcu-boot" project_base_path="source">
      <dependencies>
        <component_dependency value="middleware.mcu-boot.drv_flexspi_nor.MIMXRT595S"/>
      </dependencies>
      <source relative_path="src/memory/src" project_relative_path="memory/src" type="src">
        <files mask="flexspi_nor_memory.c"/>
      </source>
      <source relative_path="src/memory/src" project_relative_path="memory/src" type="c_include">
        <files mask="flexspi_nor_memory.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_mcu-boot_mem_flexspi_nor_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/memory/src" project_relative_path="memory/src" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcu-boot.reliable_update.MIMXRT595S" name="MCUBOOT_reliable_update" brief="MCUBOOT reliable update" version="1.0.0" full_name="Middleware mcu-boot reliable_update" devices="MIMXRT595S" user_visible="false" type="middleware" package_base_path="middleware/mcu-boot" project_base_path="source">
      <source relative_path="src/bootloader" project_relative_path="bootloader" type="c_include">
        <files mask="bl_reliable_update.h"/>
      </source>
      <source relative_path="src/bootloader/src" project_relative_path="bootloader/src" type="src">
        <files mask="bl_reliable_update_common.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm33_MIMXRT595S">
        <files mask="middleware_mcu-boot_reliable_update_MIMXRT595S_cm33.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/bootloader" project_relative_path="bootloader" type="c_include"/>
      </include_paths>
    </component>
  </components>
</ksdk:manifest>
