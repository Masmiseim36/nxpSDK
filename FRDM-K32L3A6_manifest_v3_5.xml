<?xml version="1.0" encoding="UTF-8"?>
<ksdk:manifest xmlns:ksdk="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="SDK_2.x_FRDM-K32L3A6" name="FRDM-K32L3A6" brief="This is SDK version 2.6.0 manifest file. It describes the content of the FRDM-K32L3A6 and additional settings for tools that support SDK version 2.6.0" format_version="3.5" api_version="2.0.0" configuration="ff4294669a31604816f42467cc56e157" xsi:schemaLocation="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd http://nxp.com/mcuxpresso/sdk/sdk_manifest_v3.5.xsd">
  <!--Timestamp (UTC): 2019-08-12 09:57:49.043924-->
  <defines>
    <define name="CPU_$|package|" value=""/>
    <define name="CPU_$|package|_$|core|" value=""/>
  </defines>
  <ksdk id="MCUXpresso260" name="MCUXpresso260" version="2.6.0" revision="253 2019-08-12"/>
  <compilers>
    <compiler id="compiler_armcc" name="armcc" type="armcc"/>
    <compiler id="compiler_gcc" name="gcc" type="gcc"/>
    <compiler id="compiler_iar" name="iar" type="iar"/>
  </compilers>
  <core_slave_roles_definitions>
    <slave_role id="M0SLAVE" name="Cortex-M0 acts as slave by default"/>
  </core_slave_roles_definitions>
  <toolchainSettings>
    <toolchainSetting id="com.nxp.mcuxpresso" name="mcuxpresso" version="11.0.1" full_name="MCUXpresso IDE" compiler="compiler_gcc" toolchain="mcuxpresso">
      <option id="gnu.cpp.compiler.option.optimization.flags" type="string" user_name="">
        <value>-fno-common</value>
      </option>
      <option id="gnu.c.compiler.option.optimization.flags" type="string" user_name="">
        <value>-fno-common</value>
      </option>
      <option id="gnu.cpp.link.option.nostdlibs" type="boolean" user_name="">
        <value>true</value>
      </option>
      <option id="com.crt.advproject.link.cpp.flashconfigenable" type="boolean" user_name="">
        <value>true</value>
      </option>
      <option id="com.crt.advproject.link.flashconfigenable" type="boolean" user_name="">
        <value>true</value>
      </option>
      <option id="gnu.c.link.option.nostdlibs" type="boolean" user_name="">
        <value>true</value>
      </option>
    </toolchainSetting>
  </toolchainSettings>
  <toolchains>
    <toolchain id="armgcc" name="GCC_ARM_Embedded" version="8.2.1" full_name="GCC ARM Embedded" compiler="compiler_gcc" type="armgcc" vendor="GCC ARM Embedded" vendor_url="http://launchpad.net/gcc-arm-embedded"/>
    <toolchain id="mdk" name="Keil_MDK" version="5.27" full_name="Keil MDK" compiler="compiler_armcc" type="mdk" vendor="ARM" vendor_url="http://www.arm.com"/>
    <toolchain id="iar" name="IAR_Embedded_Workbench_for_ARM" version="8.32.3" full_name="IAR Embedded Workbench for ARM" compiler="compiler_iar" type="iar" vendor="IAR Systems" vendor_url="http://www.iar.com"/>
    <toolchain id="mcuxpresso" name="MCUXpresso_IDE" version="11.0.1" full_name="MCUXpresso IDE" compiler="compiler_gcc" type="mcuxpresso" vendor="NXP Semiconductors" vendor_url="http://www.nxp.com">
      <debug>
        <debug_configuration id="com.crt.advproject.config.exe.release" name="Release Configuration" probe="LinkServer">
          <scripts>
            <script type="init" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>
set remotetimeout 60000
##target_extended_remote##
set mem inaccessible-by-default ${mem.access}
mon ondisconnect ${ondisconnect}
set arm force-mode thumb
${load}</script>
            </script>
            <script type="run" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>${run}</script>
            </script>
          </scripts>
          <params>
            <params id="vector.catch.release.mcuxpresso" name="vector.catch" value="false"/>
            <params id="internal.cache.release.mcuxpresso" name="internal.cache" value="Disable"/>
          </params>
        </debug_configuration>
        <debug_configuration id="com.crt.advproject.config.exe.debug" name="Debug Configuration" probe="LinkServer">
          <scripts>
            <script type="init" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>
set remotetimeout 60000
##target_extended_remote##
set mem inaccessible-by-default ${mem.access}
mon ondisconnect ${ondisconnect}
set arm force-mode thumb
${load}</script>
            </script>
            <script type="run" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>${run}</script>
            </script>
          </scripts>
          <params>
            <params id="vector.catch.debug.mcuxpresso" name="vector.catch" value="false"/>
            <params id="internal.cache.debug.mcuxpresso" name="internal.cache" value="Disable"/>
          </params>
        </debug_configuration>
        <debug_configuration id="com.nxp.mcuxpresso.core.debug.support.segger.debug" name="Debug Configuration" probe="Segger"/>
        <debug_configuration id="com.nxp.mcuxpresso.core.debug.support.segger.release" name="Release Configuration" probe="Segger"/>
      </debug>
    </toolchain>
  </toolchains>
  <boards>
    <board id="frdmk32l3a6" name="FRDM-K32L3A6" href="http://www.nxp.com/frdmk32l3a6" version="1.0.0" package="K32L3A60VPJ1A">
      <description>FRDM-K32L3A6: Freedom Development Platform for Kinetis K32L3A60 MCUs</description>
      <image path="docs/images" type="image">
        <files mask="FRDM-K32L3A6.gif"/>
      </image>
      <metadataSet>
        <metadata key="html">
          <specific>
            <content>The NXP FRDM-K32L3A6 is a development board for the Kinetis K32L3A60 72 MHz 32-bit ARM® Cortex®-M4 and ARM® Cortex®-M0P MCUs</content>
          </specific>
        </metadata>
      </metadataSet>
      <examples>
        <example id="frdmk32l3a6_bubble_cm0plus" name="bubble_cm0plus" brief="The bubble level demo demonstrates basic usage of the on-board accelerometer to implement a bubble level. A bubble level utilizes two axes to visually show deviation from a level plane (0 degrees) on a given axis." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="demo_apps" path="boards/frdmk32l3a6/demo_apps/bubble/cm0plus">
          <external path="boards/frdmk32l3a6/demo_apps/bubble/cm0plus" type="xml">
            <files mask="bubble_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_cau3_cm0plus" name="cau3_cm0plus" brief="The CAU3 Example project is a demonstration program that uses the KSDK software implementseveral cryptography algorithms using the CAU3 software driver." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples" path="boards/frdmk32l3a6/driver_examples/cau3/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/cau3/cm0plus" type="xml">
            <files mask="cau3_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_cmsis_lpi2c_edma_b2b_transfer_master_cm0plus" name="cmsis_lpi2c_edma_b2b_transfer_master_cm0plus" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_edma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with EDMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="cmsis_driver_examples/lpi2c" path="boards/frdmk32l3a6/cmsis_driver_examples/lpi2c/edma_b2b_transfer/master/cm0plus">
          <external path="boards/frdmk32l3a6/cmsis_driver_examples/lpi2c/edma_b2b_transfer/master/cm0plus" type="xml">
            <files mask="cmsis_lpi2c_edma_b2b_transfer_master_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_cmsis_lpi2c_edma_b2b_transfer_slave_cm0plus" name="cmsis_lpi2c_edma_b2b_transfer_slave_cm0plus" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_edma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with EDMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="cmsis_driver_examples/lpi2c" path="boards/frdmk32l3a6/cmsis_driver_examples/lpi2c/edma_b2b_transfer/slave/cm0plus">
          <external path="boards/frdmk32l3a6/cmsis_driver_examples/lpi2c/edma_b2b_transfer/slave/cm0plus" type="xml">
            <files mask="cmsis_lpi2c_edma_b2b_transfer_slave_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_cmsis_lpi2c_int_b2b_transfer_master_cm0plus" name="cmsis_lpi2c_int_b2b_transfer_master_cm0plus" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The lpi2c_int_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="cmsis_driver_examples/lpi2c" path="boards/frdmk32l3a6/cmsis_driver_examples/lpi2c/int_b2b_transfer/master/cm0plus">
          <external path="boards/frdmk32l3a6/cmsis_driver_examples/lpi2c/int_b2b_transfer/master/cm0plus" type="xml">
            <files mask="cmsis_lpi2c_int_b2b_transfer_master_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_cmsis_lpi2c_int_b2b_transfer_slave_cm0plus" name="cmsis_lpi2c_int_b2b_transfer_slave_cm0plus" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The lpi2c_int_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="cmsis_driver_examples/lpi2c" path="boards/frdmk32l3a6/cmsis_driver_examples/lpi2c/int_b2b_transfer/slave/cm0plus">
          <external path="boards/frdmk32l3a6/cmsis_driver_examples/lpi2c/int_b2b_transfer/slave/cm0plus" type="xml">
            <files mask="cmsis_lpi2c_int_b2b_transfer_slave_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_cmsis_lpspi_edma_b2b_transfer_master_cm0plus" name="cmsis_lpspi_edma_b2b_transfer_master_cm0plus" brief="The cmsis_lpspi_edma_b2b_transfer example shows how to use LPSPI CMSIS driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_edma_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in edma . " toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="cmsis_driver_examples/lpspi" path="boards/frdmk32l3a6/cmsis_driver_examples/lpspi/edma_b2b_transfer/master/cm0plus">
          <external path="boards/frdmk32l3a6/cmsis_driver_examples/lpspi/edma_b2b_transfer/master/cm0plus" type="xml">
            <files mask="cmsis_lpspi_edma_b2b_transfer_master_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_cmsis_lpspi_edma_b2b_transfer_slave_cm0plus" name="cmsis_lpspi_edma_b2b_transfer_slave_cm0plus" brief="The cmsis_lpspi_edma_b2b_transfer example shows how to use LPSPI CMSIS driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_edma_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in edma . " toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="cmsis_driver_examples/lpspi" path="boards/frdmk32l3a6/cmsis_driver_examples/lpspi/edma_b2b_transfer/slave/cm0plus">
          <external path="boards/frdmk32l3a6/cmsis_driver_examples/lpspi/edma_b2b_transfer/slave/cm0plus" type="xml">
            <files mask="cmsis_lpspi_edma_b2b_transfer_slave_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_cmsis_lpspi_int_b2b_transfer_master_cm0plus" name="cmsis_lpspi_int_b2b_transfer_master_cm0plus" brief="The cmsis_lpspi_int_b2b_transfer example shows how to use LPSPI CMSIS driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_int_b2b_transfer_master.c' includes the LPSPI master code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . " toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="cmsis_driver_examples/lpspi" path="boards/frdmk32l3a6/cmsis_driver_examples/lpspi/int_b2b_transfer/master/cm0plus">
          <external path="boards/frdmk32l3a6/cmsis_driver_examples/lpspi/int_b2b_transfer/master/cm0plus" type="xml">
            <files mask="cmsis_lpspi_int_b2b_transfer_master_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_cmsis_lpspi_int_b2b_transfer_slave_cm0plus" name="cmsis_lpspi_int_b2b_transfer_slave_cm0plus" brief="The lpspi_int_b2b_transfer example shows how to use LPSPI CMSIS driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_int_b2b_transfer_slave.c' includes the LPSPI slave code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . " toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="cmsis_driver_examples/lpspi" path="boards/frdmk32l3a6/cmsis_driver_examples/lpspi/int_b2b_transfer/slave/cm0plus">
          <external path="boards/frdmk32l3a6/cmsis_driver_examples/lpspi/int_b2b_transfer/slave/cm0plus" type="xml">
            <files mask="cmsis_lpspi_int_b2b_transfer_slave_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_cmsis_lpuart_interrupt_transfer_cm0plus" name="cmsis_lpuart_interrupt_transfer_cm0plus" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_interrupt_transfer example shows how to use uart cmsis driver in interrupt way:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="cmsis_driver_examples/lpuart" path="boards/frdmk32l3a6/cmsis_driver_examples/lpuart/interrupt_transfer/cm0plus">
          <external path="boards/frdmk32l3a6/cmsis_driver_examples/lpuart/interrupt_transfer/cm0plus" type="xml">
            <files mask="cmsis_lpuart_interrupt_transfer_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_crc_cm0plus" name="crc_cm0plus" brief="The CRC Example project is a demonstration program that uses the KSDK software to generate checksumsfor an ASCII string. Several CRC protocols are implemented using the CRC driver API." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples" path="boards/frdmk32l3a6/driver_examples/crc/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/crc/cm0plus" type="xml">
            <files mask="crc_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dac_1_basic_cm0plus" name="dac_1_basic_cm0plus" brief="The dac_basic example shows how to use DAC module simply as the general DAC converter.When the DAC's buffer feature is not enabled, the first item of the buffer is used as the DAC output data register.The converter would always output the value of the first item. In this example, it gets the value from terminal,outputs the DAC output voltage through DAC output pin." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/dac" path="boards/frdmk32l3a6/driver_examples/dac/dac_basic/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/dac/dac_basic/cm0plus" type="xml">
            <files mask="dac_1_basic_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dac_1_buffer_interrupt_cm0plus" name="dac_1_buffer_interrupt_cm0plus" brief="The dac_buffer_interrupt example shows how to use DAC FIFO interrupt.When the DAC FIFO empty interrupt is enabled firstly, the application would enter the DAC ISR immediately, since the FIFO is actually empty. Then the FIFO would be feed inside the ISR. Then the DAC interrupt could be restrained. Once the DAC FIFO is triggered in while loop, the data in FIFO is read out, then it becomes empty, so the FIFO would be feed again in DAC ISR. With this example, user can define the DAC output array to generate the different wave output. Also the software trigger can be called in some timer ISR so that the DAC would output the analog signal in indicated period. Or even use the hardware trigger to release the CPU." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/dac" path="boards/frdmk32l3a6/driver_examples/dac/dac_buffer_interrupt/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/dac/dac_buffer_interrupt/cm0plus" type="xml">
            <files mask="dac_1_buffer_interrupt_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_edma_memory_to_memory_cm0plus" name="edma_memory_to_memory_cm0plus" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/edma" path="boards/frdmk32l3a6/driver_examples/edma/memory_to_memory/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/edma/memory_to_memory/cm0plus" type="xml">
            <files mask="edma_memory_to_memory_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_edma_scatter_gather_cm0plus" name="edma_scatter_gather_cm0plus" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/edma" path="boards/frdmk32l3a6/driver_examples/edma/scatter_gather/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/edma/scatter_gather/cm0plus" type="xml">
            <files mask="edma_scatter_gather_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_erpc_matrix_multiply_mu_cm0plus" name="erpc_matrix_multiply_mu_cm0plus" brief="The Multicore eRPC Matrix Multiply project is a simple demonstration program that uses theMCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Callbetween cores of the multicore system. The primary core (eRPC client) releases the secondary core(eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let thesecondary core to perform the multiplication of two randomly generated matrices. The originalmatrices and the result matrix is printed out to the serial console by the primary core. Thematrix multiplication can be issued repeatedly when pressing a SW board button. MU (Messaging Unit)erpc transport layer is used in this example application.eRPC documentation eRPC specific files are stored in: middleware/multicore/erpc eRPC documentation is stored in: middleware/multicore/erpc/doc eRPC is open-source project stored on github: https://github.com/EmbeddedRPC/erpc eRPC documentation can be also found in: http://embeddedrpc.github.io" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="multicore_examples" path="boards/frdmk32l3a6/multicore_examples/erpc_matrix_multiply_mu/cm0plus">
          <external path="boards/frdmk32l3a6/multicore_examples/erpc_matrix_multiply_mu/cm0plus" type="xml">
            <files mask="erpc_matrix_multiply_mu_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_erpc_matrix_multiply_mu_rtos_cm0plus" name="erpc_matrix_multiply_mu_rtos_cm0plus" brief="The Multicore eRPC Matrix Multiply RTOS project is a simple demonstration program that uses theMCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Callbetween cores of the multicore system. The primary core (eRPC client) releases the secondary core(eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let thesecondary core to perform the multiplication of two randomly generated matrices. The originalmatrices and the result matrix is printed out to the serial console by the primary core. Thematrix multiplication can be issued repeatedly when pressing a SW board button. MU (Messaging Unit)erpc transport layer is used in this example application.eRPC documentation eRPC specific files are stored in: middleware/multicore/erpc eRPC documentation is stored in: middleware/multicore/erpc/doc eRPC is open-source project stored on github: https://github.com/EmbeddedRPC/erpc eRPC documentation can be also found in: http://embeddedrpc.github.io" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="multicore_examples" path="boards/frdmk32l3a6/multicore_examples/erpc_matrix_multiply_mu_rtos/cm0plus">
          <external path="boards/frdmk32l3a6/multicore_examples/erpc_matrix_multiply_mu_rtos/cm0plus" type="xml">
            <files mask="erpc_matrix_multiply_mu_rtos_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_erpc_matrix_multiply_rpmsg_cm0plus" name="erpc_matrix_multiply_rpmsg_cm0plus" brief="The Multicore eRPC Matrix Multiply project is a simple demonstration program that uses theMCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Callbetween cores of the multicore system. The primary core (eRPC client) releases the secondary core(eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let thesecondary core to perform the multiplication of two randomly generated matrices. The originalmatrices and the result matrix is printed out to the serial console by the primary core. Thematrix multiplication can be issued repeatedly when pressing a SW board button. RPMsg-Lite erpctransport layer is used in this example application.Shared memory usageThis multicore example uses the shared memory for data exchange. The shared memory region isdefined and the size can be adjustable in the linker file. The shared memory region start addressand the size have to be defined in linker file for each core equally. The shared memory startaddress is then exported from the linker to the application.eRPC documentationeRPC specific files are stored in: middleware/multicore_&lt;version&gt;/erpceRPC documentation is stored in: middleware/multicore_&lt;version&gt;/erpc/doceRPC is open-source project stored on github: https://github.com/EmbeddedRPC/erpceRPC documentation can be also found in: http://embeddedrpc.github.io" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="multicore_examples" path="boards/frdmk32l3a6/multicore_examples/erpc_matrix_multiply_rpmsg/cm0plus">
          <external path="boards/frdmk32l3a6/multicore_examples/erpc_matrix_multiply_rpmsg/cm0plus" type="xml">
            <files mask="erpc_matrix_multiply_rpmsg_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_erpc_matrix_multiply_rpmsg_rtos_cm0plus" name="erpc_matrix_multiply_rpmsg_rtos_cm0plus" brief="The Multicore eRPC Matrix Multiply RTOS project is a simple demonstration program that uses theMCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Callbetween cores of the multicore system. The primary core (eRPC client) releases the secondary core(eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let thesecondary core to perform the multiplication of two randomly generated matrices. The originalmatrices and the result matrix is printed out to the serial console by the primary core. Thematrix multiplication can be issued repeatedly when pressing a SW board button. RPMsg-Lite erpctransport layer is used in this example application.Shared memory usageThis multicore example uses the shared memory for data exchange. The shared memory region isdefined and the size can be adjustable in the linker file. The shared memory region start addressand the size have to be defined in linker file for each core equally. The shared memory startaddress is then exported from the linker to the application.eRPC documentationeRPC specific files are stored in: middleware/multicore_&lt;version&gt;/erpceRPC documentation is stored in: middleware/multicore_&lt;version&gt;/erpc/doceRPC is open-source project stored on github: https://github.com/EmbeddedRPC/erpceRPC documentation can be also found in: http://embeddedrpc.github.io" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="multicore_examples" path="boards/frdmk32l3a6/multicore_examples/erpc_matrix_multiply_rpmsg_rtos/cm0plus">
          <external path="boards/frdmk32l3a6/multicore_examples/erpc_matrix_multiply_rpmsg_rtos/cm0plus" type="xml">
            <files mask="erpc_matrix_multiply_rpmsg_rtos_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_ewm_cm0plus" name="ewm_cm0plus" brief="The EWM Example project is to demonstrate usage of the KSDK EWM driver.In the example, EWM counter is continuously refreshed until button is pressed.Once the button is pressed, EWM counter will expire and interrupt will be generated.After the first pressing, another interrupt can be triggered by pressing button again." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples" path="boards/frdmk32l3a6/driver_examples/ewm/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/ewm/cm0plus" type="xml">
            <files mask="ewm_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_fatfs_sdcard_cm0plus" name="fatfs_sdcard_cm0plus" brief="The SDCARD FATFS project is a demonstration program that uses the SDK software. Tt mounts a file system based on a SD card then does &quot;creat directory/read directory/create file/write file/read file&quot;operation. The file sdhc_config.h has default SDHC configuration which can be adjusted to let carddriver has different performance. The purpose of this example is to show how to use SDCARD driver based FATFS disk in SDK software." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="fatfs_examples/fatfs_sdcard" path="boards/frdmk32l3a6/fatfs_examples/fatfs_sdcard/cm0plus">
          <external path="boards/frdmk32l3a6/fatfs_examples/fatfs_sdcard/cm0plus" type="xml">
            <files mask="fatfs_sdcard_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_flexio_i2c_interrupt_lpi2c_transfer_cm0plus" name="flexio_i2c_interrupt_lpi2c_transfer_cm0plus" brief="The flexio_lpi2c_interrupt example shows how to use flexio i2c master  driver in interrupt way:In this example, a flexio simulated i2c master connect to a LPI2C slave" toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/frdmk32l3a6/driver_examples/flexio/i2c/interrupt_lpi2c_transfer/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/flexio/i2c/interrupt_lpi2c_transfer/cm0plus" type="xml">
            <files mask="flexio_i2c_interrupt_lpi2c_transfer_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_flexio_i2c_read_accel_value_transfer_cm0plus" name="flexio_i2c_read_accel_value_transfer_cm0plus" brief="The flexio_i2c_read_accel_value example shows how to use FLEXIO I2C  Master driver to communicate with an i2c device: 1. How to use the flexio i2c master driver to read a i2c device who_am_I register. 2. How to use the flexio i2c master driver to write/read the device registers.In this example, the values of three-axis accelerometer print to the serial terminal on PC throughthe virtual serial port on board." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/frdmk32l3a6/driver_examples/flexio/i2c/read_accel_value_transfer/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/flexio/i2c/read_accel_value_transfer/cm0plus" type="xml">
            <files mask="flexio_i2c_read_accel_value_transfer_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_flexio_pwm_cm0plus" name="flexio_pwm_cm0plus" brief="This demo describes how to use SDK drivers to implement the PWM feature by FLEXIO IP module. It outputs the PWM singal with fixed frequency defined by &quot;DEMO_FLEXIO_FREQUENCY&quot; in source code and dynamic duty from 99 to 1 to one of the FLEXIO pin." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/frdmk32l3a6/driver_examples/flexio/pwm/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/flexio/pwm/cm0plus" type="xml">
            <files mask="flexio_pwm_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_flexio_spi_edma_lpspi_transfer_master_cm0plus" name="flexio_spi_edma_lpspi_transfer_master_cm0plus" brief="The flexio_spi_master_edma_lpspi_slave example shows how to use flexio spi master driver in edma way:In this example, a flexio simulated master connect to a lpspi slave ." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/frdmk32l3a6/driver_examples/flexio/spi/edma_lpspi_transfer/master/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/flexio/spi/edma_lpspi_transfer/master/cm0plus" type="xml">
            <files mask="flexio_spi_edma_lpspi_transfer_master_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_flexio_spi_edma_lpspi_transfer_slave_cm0plus" name="flexio_spi_edma_lpspi_transfer_slave_cm0plus" brief="The flexio_spi_slave_edma_lpspi_master example shows how to use flexio spi slave driver in edma way:In this example, a flexio simulated slave connect to a lpspi master." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/frdmk32l3a6/driver_examples/flexio/spi/edma_lpspi_transfer/slave/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/flexio/spi/edma_lpspi_transfer/slave/cm0plus" type="xml">
            <files mask="flexio_spi_edma_lpspi_transfer_slave_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_flexio_spi_int_lpspi_transfer_master_cm0plus" name="flexio_spi_int_lpspi_transfer_master_cm0plus" brief="The flexio_spi_master_interrupt_lpspi_slave example shows how to use flexio spi master driver in interrupt way. In this example, a flexio simulated master connect to a lpspi slave ." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/frdmk32l3a6/driver_examples/flexio/spi/int_lpspi_transfer/master/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/flexio/spi/int_lpspi_transfer/master/cm0plus" type="xml">
            <files mask="flexio_spi_int_lpspi_transfer_master_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_flexio_spi_int_lpspi_transfer_slave_cm0plus" name="flexio_spi_int_lpspi_transfer_slave_cm0plus" brief="The flexio_spi_slave_interrupt_lpspi_master example shows how to use flexio spi slave driver in interrupt way. In this example, a flexio simulated slave connect to a lpspi master." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/frdmk32l3a6/driver_examples/flexio/spi/int_lpspi_transfer/slave/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/flexio/spi/int_lpspi_transfer/slave/cm0plus" type="xml">
            <files mask="flexio_spi_int_lpspi_transfer_slave_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_flexio_uart_edma_transfer_cm0plus" name="flexio_uart_edma_transfer_cm0plus" brief="The flexio_uart_edma example shows how to use flexio uart driver in edma way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send back all charactersthat PC send to the board." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/frdmk32l3a6/driver_examples/flexio/uart/edma_transfer/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/flexio/uart/edma_transfer/cm0plus" type="xml">
            <files mask="flexio_uart_edma_transfer_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_flexio_uart_int_rb_transfer_cm0plus" name="flexio_uart_int_rb_transfer_cm0plus" brief="The flexio_uart_interrupt_ring_buffer example shows how to use flexio uart driver in interrupt way withRX ring buffer enabled:In this example, a flexio simulated uart connect to PC through USB-Serial, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/frdmk32l3a6/driver_examples/flexio/uart/int_rb_transfer/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/flexio/uart/int_rb_transfer/cm0plus" type="xml">
            <files mask="flexio_uart_int_rb_transfer_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_flexio_uart_interrupt_transfer_cm0plus" name="flexio_uart_interrupt_transfer_cm0plus" brief="The flexio_uart_interrupt example shows how to use flexio uart driver in interrupt way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send back all charactersthat PC send to the board. Note: two queued transfer in this example, so please input even number characters." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/frdmk32l3a6/driver_examples/flexio/uart/interrupt_transfer/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/flexio/uart/interrupt_transfer/cm0plus" type="xml">
            <files mask="flexio_uart_interrupt_transfer_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_flexio_uart_polling_transfer_cm0plus" name="flexio_uart_polling_transfer_cm0plus" brief="The flexio_uart_polling example shows how to use flexio uart driver in polling way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send backall characters that PC send to the board." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/frdmk32l3a6/driver_examples/flexio/uart/polling_transfer/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/flexio/uart/polling_transfer/cm0plus" type="xml">
            <files mask="flexio_uart_polling_transfer_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_event_cm0plus" name="freertos_event_cm0plus" brief="This document explains the freertos_event example. It shows how task waits for an event (defined setof bits in event group). This event can be set by any other process or interrupt in the system.The example application creates three tasks. Two write tasks write_task_1 and write_task_2continuously setting event bit 0 and bit 1.Read_task is waiting for any event bit and printing actual state on console. Event bits areautomatically cleared after read task is entered.Three possible states can occurre:Both bits are set.zBit B0 is set.Bit B1 is set." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="rtos_examples" path="boards/frdmk32l3a6/rtos_examples/freertos_event/cm0plus">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_event/cm0plus" type="xml">
            <files mask="freertos_event_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_generic_cm0plus" name="freertos_generic_cm0plus" brief="This document explains the freertos_generic example. It is based on code FreeRTOS documentation fromhttp://www.freertos.org/Hardware-independent-RTOS-example.html. It shows combination of severaltasks with queue, software timer, tick hook and semaphore.The example application creates three tasks. The prvQueueSendTask periodically sending data toxQueue queue. The prvQueueReceiveTask is waiting for incoming message and counting number ofreceived messages. Task prvEventSemaphoreTask is waiting for xEventSemaphore semaphore given fromvApplicationTickHook. Tick hook give semaphore every 500 ms.Other hook types used for RTOS and resource statistics are also demonstrated in example:* vApplicationIdleHook* vApplicationStackOverflowHook* vApplicationMallocFailedHook" toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="rtos_examples" path="boards/frdmk32l3a6/rtos_examples/freertos_generic/cm0plus">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_generic/cm0plus" type="xml">
            <files mask="freertos_generic_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_hello_cm0plus" name="freertos_hello_cm0plus" brief="The Hello World project is a simple demonstration program that uses the SDK UART drivere incombination with FreeRTOS. The purpose of this demo is to show how to use the debug console and toprovide a simple project for debugging and further development.The example application creates one task called hello_task. This task print &quot;Hello world.&quot; messagevia debug console utility and suspend itself." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="rtos_examples" path="boards/frdmk32l3a6/rtos_examples/freertos_hello/cm0plus">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_hello/cm0plus" type="xml">
            <files mask="freertos_hello_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_lpi2c_cm0plus" name="freertos_lpi2c_cm0plus" brief="The LPI2C Example project is a demonstration program that uses the KSDK software to manipulate the Low Power Inter-Integrated Circuit.The example uses two instances of LPI2C, one in configured as master and the other one as slave.The LPI2C master sends data to LPI2C slave. The slave will check the data it receives and shows the log." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="rtos_examples" path="boards/frdmk32l3a6/rtos_examples/freertos_lpi2c/cm0plus">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_lpi2c/cm0plus" type="xml">
            <files mask="freertos_lpi2c_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_lpspi_cm0plus" name="freertos_lpspi_cm0plus" brief="The lpspi_interrupt example shows how to use LPSPI driver in interrupt way:In this example , one lpspi instance used as LPSPI master and another lpspi instance used as LPSPI slave.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="rtos_examples" path="boards/frdmk32l3a6/rtos_examples/freertos_lpspi/cm0plus">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_lpspi/cm0plus" type="xml">
            <files mask="freertos_lpspi_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_lpuart_cm0plus" name="freertos_lpuart_cm0plus" brief="The LPUART example for FreeRTOS demonstrates the possibility to use the LPUART driver in the RTOS.The example uses single instance of LPUART IP and writes string into, then reads back chars.After every 4B received, these are sent back on LPUART." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="rtos_examples" path="boards/frdmk32l3a6/rtos_examples/freertos_lpuart/cm0plus">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_lpuart/cm0plus" type="xml">
            <files mask="freertos_lpuart_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_mutex_cm0plus" name="freertos_mutex_cm0plus" brief="This document explains the freertos_mutex example. It shows how mutex manage access to commonresource (terminal output).The example application creates two identical instances of write_task. Each task will lock the mutexbefore printing and unlock it after printing to ensure that the outputs from tasks are not mixedtogether.The test_task accept output message during creation as function parameter. Output message have twoparts. If xMutex is unlocked, the write_task_1 acquire xMutex and print first part of message. Thenrescheduling is performed. In this moment scheduler check if some other task could run, but secondtask write_task+_2 is blocked because xMutex is already locked by first write task. The firstwrite_task_1 continue from last point by printing of second message part. Finaly the xMutex isunlocked and second instance of write_task_2 is executed." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="rtos_examples" path="boards/frdmk32l3a6/rtos_examples/freertos_mutex/cm0plus">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_mutex/cm0plus" type="xml">
            <files mask="freertos_mutex_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_percepio_snapshot_cm0plus" name="freertos_percepio_snapshot_cm0plus" brief="Percepio_snapshot demo shows the basic capabilities of Percepio tool.Required Segger software     - J-Link Software and Documentation Pack ( https://www.segger.com/downloads/jlink )    - J-Link OpenSDA - Board-Specific Firmwares ( https://www.segger.com/downloads/jlink )    - Tracealyzer for FreeRTOS ( http://percepio.com/download/ )Demo requires JLink connected. The JLink can be external probe or on board SDA debugger.In case of SDA debugger you have to change firmware to J-Link OpenSDA by holding board RESET button while power up board. The board is then detected as USB mass storage device and it's required to copy the .bin firmware to the device. When it's done you have to reset the board once more." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="rtos_examples/visualization" path="boards/frdmk32l3a6/rtos_examples/visualization/freertos_percepio_snapshot/cm0plus">
          <external path="boards/frdmk32l3a6/rtos_examples/visualization/freertos_percepio_snapshot/cm0plus" type="xml">
            <files mask="freertos_percepio_snapshot_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_queue_cm0plus" name="freertos_queue_cm0plus" brief="This document explains the freertos_queue example. This example introduce simple logging mechanismbased on message passing.Example could be devided in two parts. First part is logger. It contain three tasks:log_add().....Add new message into the log. Call xQueueSend function to pass new message into              message queue.log_init()....Initialize logger (create logging task and message queue log_queue).log_task()....Task responsible for printing of log output.Second part is application of this simple logging mechanism. Each of two tasks write_task_1 andwrite_task_2 print 5 messages into log." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="rtos_examples" path="boards/frdmk32l3a6/rtos_examples/freertos_queue/cm0plus">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_queue/cm0plus" type="xml">
            <files mask="freertos_queue_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_sdcard_cm0plus" name="freertos_sdcard_cm0plus" brief="The SDCARD FreeRTOS project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver with FreeRTOS in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="rtos_examples/freertos_sdcard" path="boards/frdmk32l3a6/rtos_examples/freertos_sdcard/cm0plus">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_sdcard/cm0plus" type="xml">
            <files mask="freertos_sdcard_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_sem_cm0plus" name="freertos_sem_cm0plus" brief="This document explains the freertos_sem example, what to expect when running it and a briefintroduction to the API. The freertos_sem example code shows how semaphores works. Two differenttasks are synchronized in bilateral rendezvous model.The example uses four tasks. One producer_task and three consumer_tasks. The producer_task starts bycreating of two semaphores (xSemaphore_producer and xSemaphore_consumer). These semaphores controlaccess to virtual item. The synchronization is based on bilateral rendezvous pattern. Both ofconsumer and producer must be prepared to enable transaction." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="rtos_examples" path="boards/frdmk32l3a6/rtos_examples/freertos_sem/cm0plus">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_sem/cm0plus" type="xml">
            <files mask="freertos_sem_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_sem_static_cm0plus" name="freertos_sem_static_cm0plus" brief="This document explains the freertos_sem example, what to expect when running it and a briefintroduction to the API. The freertos_sem example code shows how semaphores works. Two differenttasks are synchronized in bilateral rendezvous model.The example uses four tasks. One producer_task and three consumer_tasks. The producer_task starts bycreating of two semaphores (xSemaphore_producer and xSemaphore_consumer). These semaphores controlaccess to virtual item. The synchronization is based on bilateral rendezvous pattern. Both ofconsumer and producer must be prepared to enable transaction." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="rtos_examples" path="boards/frdmk32l3a6/rtos_examples/freertos_sem_static/cm0plus">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_sem_static/cm0plus" type="xml">
            <files mask="freertos_sem_static_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_swtimer_cm0plus" name="freertos_swtimer_cm0plus" brief="This document explains the freertos_swtimer example. It shows usage of software timer and itscallback.The example application creates one software timer SwTimer. The timer's callback SwTimerCallback isperiodically executed and text &quot;Tick.&quot; is printed to terminal." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="rtos_examples" path="boards/frdmk32l3a6/rtos_examples/freertos_swtimer/cm0plus">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_swtimer/cm0plus" type="xml">
            <files mask="freertos_swtimer_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_tickless_cm0plus" name="freertos_tickless_cm0plus" brief="This document explains the freertos_tickless example. It shows the CPU enter at sleep mode and then it is waked up by expired time delay that using GPT module." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="rtos_examples" path="boards/frdmk32l3a6/rtos_examples/freertos_tickless/cm0plus">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_tickless/cm0plus" type="xml">
            <files mask="freertos_tickless_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_gpio_input_interrupt_cm0plus" name="gpio_input_interrupt_cm0plus" brief="The GPIO Example project is a demonstration program that uses the KSDK software to manipulate the general-purposeoutputs.The example is supported by the set, clear, and toggle write-only registers for each port output data register. The example uses the software button to control/toggle the LED." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/gpio" path="boards/frdmk32l3a6/driver_examples/gpio/input_interrupt/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/gpio/input_interrupt/cm0plus" type="xml">
            <files mask="gpio_input_interrupt_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_gpio_led_output_cm0plus" name="gpio_led_output_cm0plus" brief="The GPIO Example project is a demonstration program that uses the KSDK software to manipulate the general-purposeoutputs.The example is supported by the set, clear, and toggle write-only registers for each port output data register. The example take turns to shine the LED." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/gpio" path="boards/frdmk32l3a6/driver_examples/gpio/led_output/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/gpio/led_output/cm0plus" type="xml">
            <files mask="gpio_led_output_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_hello_world_demo_cm0plus" name="hello_world_demo_cm0plus" brief="The Hello World demo application provides a sanity check for the new SDK build environments and board bring up. The HelloWorld demo prints the &quot;Hello World&quot; string to the terminal using the SDK UART drivers. The purpose of this demo is toshow how to use the UART, and to provide a simple project for debugging and further development." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="demo_apps" path="boards/frdmk32l3a6/demo_apps/hello_world/cm0plus">
          <external path="boards/frdmk32l3a6/demo_apps/hello_world/cm0plus" type="xml">
            <files mask="hello_world_demo_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_hello_world_cm0plus" name="hello_world_cm0plus" brief="The Multicore Hello World demo application demonstrates how to set up projects for individualcores on a multicore system. In this demo, the primary core prints the &quot;Hello World from the Primary Core!&quot;string to the terminal and then releases the secondary core from the reset. The secondarycore toggles an on-board LED indicating that the secondary core is running." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="multicore_examples" path="boards/frdmk32l3a6/multicore_examples/hello_world/cm0plus">
          <external path="boards/frdmk32l3a6/multicore_examples/hello_world/cm0plus" type="xml">
            <files mask="hello_world_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpadc_interrupt_cm0plus" name="lpadc_interrupt_cm0plus" brief="The lpdc_single_interrupt example shows how to use interrupt with LPADC driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the LPADC'ssample input. When running the project, typing any key into debug console would trigger the conversion. ADC watermark interrupt would be asserted once the number of datawords stored in the ADC Result FIFO is greater than watermark value.In ADC ISR, the watermark flag would be cleared by reading the conversion result value. Also, result information wouldbe printed when the execution return to the main function." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpadc" path="boards/frdmk32l3a6/driver_examples/lpadc/interrupt/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpadc/interrupt/cm0plus" type="xml">
            <files mask="lpadc_interrupt_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpadc_polling_cm0plus" name="lpadc_polling_cm0plus" brief="The lpadc_single_polling example shows the simplest way to use LPADC driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the LPADC'ssample input. When running the project, typing any key into debug console would trigger the conversion. The execution would check the FIFO valid flag in loop until the flag is asserted, which means the conversion is completed. Then read the conversion result value and print it to debug console.Note, the default setting of initialization for the ADC converter is just an available configuration. User can changethe configuration structure's setting in application to fit the special requirement." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpadc" path="boards/frdmk32l3a6/driver_examples/lpadc/polling/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpadc/polling/cm0plus" type="xml">
            <files mask="lpadc_polling_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpcmp_interrupt_cm0plus" name="lpcmp_interrupt_cm0plus" brief="The LPCMP interrupt Example shows how to use interrupt with LPCMP driver.In this example, user should indicate an input channel to capture a voltage signal (can be controlled by user) as the LPCMP's positive channel input. On the negative side, the internal 6-bit DAC is used to generate the fixed voltage abouthalf value of reference voltage.When running the project, change the input voltage of user-defined channel, then the comparator's output would changebetween logic one and zero when the user-defined channel's voltage crosses the internal DAC's value. The change ofcomparator's output would generate the falling and rising edge events with their interrupts enabled. When any LPCMP interrupt happens, the LPCMP's ISR would turn on the LED light if detecting the output's rising edge, or turn off it whendetecting the output's falling edge." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpcmp" path="boards/frdmk32l3a6/driver_examples/lpcmp/interrupt/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpcmp/interrupt/cm0plus" type="xml">
            <files mask="lpcmp_interrupt_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpcmp_polling_cm0plus" name="lpcmp_polling_cm0plus" brief="The LPCMP polling Example shows the simplest way to use LPCMP driver and help user with a quick start.In this example, user should indicate an input channel to capture a voltage signal (can be controlled by user) as the LPCMP's positive channel input. On the negative side, the internal 6-bit DAC is used to generate the fixed voltage abouthalf value of reference voltage.When running the project, change the input voltage of user-defined channel, then the comparator's output would changebetween logic one and zero when the user's voltage crosses the internal DAC's value. The endless loop in main() functionwould detect the logic value of comparator's output, and change the LED. The LED would be turned on when the compareoutput is logic one, or turned off when zero." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpcmp" path="boards/frdmk32l3a6/driver_examples/lpcmp/polling/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpcmp/polling/cm0plus" type="xml">
            <files mask="lpcmp_polling_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpi2c_edma_b2b_transfer_master_cm0plus" name="lpi2c_edma_b2b_transfer_master_cm0plus" brief="The lpi2c_edma_b2b_transfer_master example shows how to use lpi2c driver as master to do board to board transfer with EDMA:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/frdmk32l3a6/driver_examples/lpi2c/edma_b2b_transfer/master/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpi2c/edma_b2b_transfer/master/cm0plus" type="xml">
            <files mask="lpi2c_edma_b2b_transfer_master_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpi2c_edma_b2b_transfer_slave_cm0plus" name="lpi2c_edma_b2b_transfer_slave_cm0plus" brief="The lpi2c_edma_b2b_transfer_slave example shows how to use lpi2c driver as slave to do board to board transfer with a EDMA master:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/frdmk32l3a6/driver_examples/lpi2c/edma_b2b_transfer/slave/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpi2c/edma_b2b_transfer/slave/cm0plus" type="xml">
            <files mask="lpi2c_edma_b2b_transfer_slave_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpi2c_interrupt_cm0plus" name="lpi2c_interrupt_cm0plus" brief="The lpi2c_functional_interrupt example shows how to use lpi2c functional driver to build a interrupt based application:In this example , one lpi2c instance used as lpi2c master and another lpi2c instance used as lpi2c slave .1. lpi2c master send data using interrupt to lpi2c slave in interrupt .2. lpi2c master read data using interrupt from lpi2c slave in interrupt .3. The example assumes that the connection is OK between master and slave, so there's NO error handling code." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/frdmk32l3a6/driver_examples/lpi2c/interrupt/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpi2c/interrupt/cm0plus" type="xml">
            <files mask="lpi2c_interrupt_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpi2c_interrupt_b2b_transfer_master_cm0plus" name="lpi2c_interrupt_b2b_transfer_master_cm0plus" brief="The lpi2c_interrupt_b2b_transfer_master example shows how to use lpi2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/frdmk32l3a6/driver_examples/lpi2c/interrupt_b2b_transfer/master/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpi2c/interrupt_b2b_transfer/master/cm0plus" type="xml">
            <files mask="lpi2c_interrupt_b2b_transfer_master_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpi2c_interrupt_b2b_transfer_slave_cm0plus" name="lpi2c_interrupt_b2b_transfer_slave_cm0plus" brief="The lpi2c_interrupt_b2b_transfer_slave example shows how to use lpi2c driver as slave to do board to board transfer with interrupt:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/frdmk32l3a6/driver_examples/lpi2c/interrupt_b2b_transfer/slave/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpi2c/interrupt_b2b_transfer/slave/cm0plus" type="xml">
            <files mask="lpi2c_interrupt_b2b_transfer_slave_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpi2c_polling_b2b_transfer_master_cm0plus" name="lpi2c_polling_b2b_transfer_master_cm0plus" brief="The lpi2c_polling_b2b_transfer_master example shows how to use lpi2c driver as master to do board to board transfer using polling method:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/frdmk32l3a6/driver_examples/lpi2c/polling_b2b_transfer/master/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpi2c/polling_b2b_transfer/master/cm0plus" type="xml">
            <files mask="lpi2c_polling_b2b_transfer_master_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpi2c_polling_b2b_transfer_slave_cm0plus" name="lpi2c_polling_b2b_transfer_slave_cm0plus" brief="The lpi2c_polling_b2b_transfer_slave example shows how to use lpi2c driver as slave to do board to board transfer with a polling master:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/frdmk32l3a6/driver_examples/lpi2c/polling_b2b_transfer/slave/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpi2c/polling_b2b_transfer/slave/cm0plus" type="xml">
            <files mask="lpi2c_polling_b2b_transfer_slave_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpi2c_read_accel_value_transfer_cm0plus" name="lpi2c_read_accel_value_transfer_cm0plus" brief="The lpi2c_read_accel_value example shows how to use LPI2C driver to communicate with an lpi2c device: 1. How to use the lpi2c driver to read a lpi2c device who_am_I register. 2. How to use the lpi2c driver to write/read the device registers.In this example, the values of three-axis accelerometer print to the serial terminal on PC throughthe virtual serial port on board." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/frdmk32l3a6/driver_examples/lpi2c/read_accel_value_transfer/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpi2c/read_accel_value_transfer/cm0plus" type="xml">
            <files mask="lpi2c_read_accel_value_transfer_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpit_cm0plus" name="lpit_cm0plus" brief="The LPIT project is a simple example of the SDK LPIT driver. It sets up the LPIThardware block to trigger a periodic interrupt after every 1 second. When the LPIT interrupt is triggereda message a printed on the serial terminal and an LED is toggled on the board." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples" path="boards/frdmk32l3a6/driver_examples/lpit/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpit/cm0plus" type="xml">
            <files mask="lpit_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpspi_edma_b2b_transfer_master_cm0plus" name="lpspi_edma_b2b_transfer_master_cm0plus" brief="The lpspi_edma_b2b_transfer example shows how to use LPSPI driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_edma_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in edma . (LPSPI Slave using edma to receive/send the data)" toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/frdmk32l3a6/driver_examples/lpspi/edma_b2b_transfer/master/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpspi/edma_b2b_transfer/master/cm0plus" type="xml">
            <files mask="lpspi_edma_b2b_transfer_master_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpspi_edma_b2b_transfer_slave_cm0plus" name="lpspi_edma_b2b_transfer_slave_cm0plus" brief="The lpspi_edma_b2b_transfer example shows how to use LPSPI driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_edma_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in edma . (LPSPI Slave using edma to receive/send the data)" toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/frdmk32l3a6/driver_examples/lpspi/edma_b2b_transfer/slave/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpspi/edma_b2b_transfer/slave/cm0plus" type="xml">
            <files mask="lpspi_edma_b2b_transfer_slave_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpspi_interrupt_cm0plus" name="lpspi_interrupt_cm0plus" brief="The lpspi_functional_interrupt example shows how to use LPSPI driver in interrupt way:In this example , one lpspi instance used as LPSPI master and another lpspi instance used as LPSPI slave .1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/frdmk32l3a6/driver_examples/lpspi/interrupt/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpspi/interrupt/cm0plus" type="xml">
            <files mask="lpspi_interrupt_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpspi_interrupt_b2b_master_cm0plus" name="lpspi_interrupt_b2b_master_cm0plus" brief="The lpspi_interrupt_b2b example shows how to use LPSPI driver in interrupt way:In this example , we need two boards , one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_interrupt_b2b_master.c' includes the LPSPI master code.This example does not use the transactional API in LPSPI driver. It's a demonstration that how to use the interrupt in KSDK driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/frdmk32l3a6/driver_examples/lpspi/interrupt_b2b/master/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpspi/interrupt_b2b/master/cm0plus" type="xml">
            <files mask="lpspi_interrupt_b2b_master_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpspi_interrupt_b2b_slave_cm0plus" name="lpspi_interrupt_b2b_slave_cm0plus" brief="The lpspi_interrupt_b2b example shows how to use LPSPI driver in interrupt way:In this example , we need two boards , one board used as LPSPI master and another board used as LPSPI slave.The file 'dspi_interrupt_b2b_slave.c' includes the LPSPI slave code.This example does not use the transactional API in LPSPI driver. It's a demonstration that how to use the interrupt in KSDK driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/frdmk32l3a6/driver_examples/lpspi/interrupt_b2b/slave/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpspi/interrupt_b2b/slave/cm0plus" type="xml">
            <files mask="lpspi_interrupt_b2b_slave_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpspi_interrupt_b2b_transfer_master_cm0plus" name="lpspi_interrupt_b2b_transfer_master_cm0plus" brief="The lpspi_interrupt_b2b_transfer example shows how to use LPSPI driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_interrupt_b2b_transfer_master.c' includes the LPSPI master code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/frdmk32l3a6/driver_examples/lpspi/interrupt_b2b_transfer/master/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpspi/interrupt_b2b_transfer/master/cm0plus" type="xml">
            <files mask="lpspi_interrupt_b2b_transfer_master_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpspi_interrupt_b2b_transfer_slave_cm0plus" name="lpspi_interrupt_b2b_transfer_slave_cm0plus" brief="The lpspi_interrupt_b2b_transfer example shows how to use LPSPI driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_interrupt_b2b_transfer_slave.c' includes the LPSPI slave code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/frdmk32l3a6/driver_examples/lpspi/interrupt_b2b_transfer/slave/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpspi/interrupt_b2b_transfer/slave/cm0plus" type="xml">
            <files mask="lpspi_interrupt_b2b_transfer_slave_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpspi_polling_b2b_transfer_master_cm0plus" name="lpspi_polling_b2b_transfer_master_cm0plus" brief="The lpspi_polling_b2b_transfer example shows how to use LPSPI driver in polling way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_polling_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in polling . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/frdmk32l3a6/driver_examples/lpspi/polling_b2b_transfer/master/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpspi/polling_b2b_transfer/master/cm0plus" type="xml">
            <files mask="lpspi_polling_b2b_transfer_master_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpspi_polling_b2b_transfer_slave_cm0plus" name="lpspi_polling_b2b_transfer_slave_cm0plus" brief="The lpspi_polling_b2b_transfer example shows how to use LPSPI driver in polling way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_polling_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in polling . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/frdmk32l3a6/driver_examples/lpspi/polling_b2b_transfer/slave/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpspi/polling_b2b_transfer/slave/cm0plus" type="xml">
            <files mask="lpspi_polling_b2b_transfer_slave_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lptmr_cm0plus" name="lptmr_cm0plus" brief="The LPTMR project is a simple demonstration program of the SDK LPTMR driver. It sets up the LPTMRhardware block to trigger a periodic interrupt after every 1 second. When the LPTMR interrupt is triggereda message a printed on the UART terminal and an LED is toggled on the board." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples" path="boards/frdmk32l3a6/driver_examples/lptmr/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lptmr/cm0plus" type="xml">
            <files mask="lptmr_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpuart_interrupt_cm0plus" name="lpuart_interrupt_cm0plus" brief="The lpuart_functioncal_interrupt example shows how to use lpuart driver functionalAPI to receive data with interrupt method:In this example, one lpuart instance connect to PC, the board willsend back all characters that PC send to the board." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/frdmk32l3a6/driver_examples/lpuart/interrupt/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpuart/interrupt/cm0plus" type="xml">
            <files mask="lpuart_interrupt_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpuart_interrupt_rb_transfer_cm0plus" name="lpuart_interrupt_rb_transfer_cm0plus" brief="The lpuart_interrupt_ring_buffer Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/frdmk32l3a6/driver_examples/lpuart/interrupt_rb_transfer/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpuart/interrupt_rb_transfer/cm0plus" type="xml">
            <files mask="lpuart_interrupt_rb_transfer_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpuart_interrupt_transfer_cm0plus" name="lpuart_interrupt_transfer_cm0plus" brief="The lpuart_interrupt Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/frdmk32l3a6/driver_examples/lpuart/interrupt_transfer/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpuart/interrupt_transfer/cm0plus" type="xml">
            <files mask="lpuart_interrupt_transfer_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpuart_interrupt_transfer_seven_bits_cm0plus" name="lpuart_interrupt_transfer_seven_bits_cm0plus" brief="The lpuart_interrupt_transfer_seven_bits Example project is to demonstrate usage of the KSDK lpuart driver with seven data bits feature enabled.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters.NOTE: Please set com port format to &quot;7 data bits without parity bit&quot; in PC's com port tool" toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/frdmk32l3a6/driver_examples/lpuart/interrupt_transfer_seven_bits/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpuart/interrupt_transfer_seven_bits/cm0plus" type="xml">
            <files mask="lpuart_interrupt_transfer_seven_bits_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpuart_polling_cm0plus" name="lpuart_polling_cm0plus" brief="The lpuart_polling Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console instantly." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/frdmk32l3a6/driver_examples/lpuart/polling/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpuart/polling/cm0plus" type="xml">
            <files mask="lpuart_polling_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpuart_polling_seven_bits_cm0plus" name="lpuart_polling_seven_bits_cm0plus" brief="The lpuart_polling_seven_bits Example project is to demonstrate usage of the KSDK lpuart driver with seven data bits feature enabled.In the example, you can send characters to the console back and they will be printed out onto console instantly.NOTE: Please set com port format to &quot;7 data bits without parity bit&quot; in PC's com port tool" toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/frdmk32l3a6/driver_examples/lpuart/polling_seven_bits/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpuart/polling_seven_bits/cm0plus" type="xml">
            <files mask="lpuart_polling_seven_bits_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_mbedtls_benchmark_cm0plus" name="mbedtls_benchmark_cm0plus" brief="The mbdedTLS Benchmark demo application performs cryptographic algorithm benchmarking and prints results to theterminal." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="mbedtls_examples" path="boards/frdmk32l3a6/mbedtls_examples/mbedtls_benchmark/cm0plus">
          <external path="boards/frdmk32l3a6/mbedtls_examples/mbedtls_benchmark/cm0plus" type="xml">
            <files mask="mbedtls_benchmark_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_mbedtls_selftest_cm0plus" name="mbedtls_selftest_cm0plus" brief="The mbdedTLS SelfTest program performs cryptographic algorithm testing and prints results to theterminal." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="mbedtls_examples" path="boards/frdmk32l3a6/mbedtls_examples/mbedtls_selftest/cm0plus">
          <external path="boards/frdmk32l3a6/mbedtls_examples/mbedtls_selftest/cm0plus" type="xml">
            <files mask="mbedtls_selftest_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_mmdvsq_cm0plus" name="mmdvsq_cm0plus" brief="The MMDVSQ Example project is a demonstration program that uses the KSDK software to Calculation square root and QuotientMMDVSQ Peripheral Driver ExampleStart MMDVSQ ExampleCalculation square root, please enter radicandSquare root of 9 is 3Calculation division to get remainder and quotientEnter dividend and divisorRemainder of 10 and 5 is 0Quotient of 10 and 5 is 2" toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples" path="boards/frdmk32l3a6/driver_examples/mmdvsq/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/mmdvsq/cm0plus" type="xml">
            <files mask="mmdvsq_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_mu_interrupt_core1" name="mu_interrupt_core1" brief="The mu_interrupt example shows how to use MU driver in interrupt way:In this example:1. Core 0 send message to Core 1 in interrupt mode via MU module.2. Core 1 send message back to Core 0 in interrupt mode.3. Core 0 receive message sent from Core 1 in interrupt mode." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/mu" path="boards/frdmk32l3a6/driver_examples/mu/interrupt/core1">
          <external path="boards/frdmk32l3a6/driver_examples/mu/interrupt/core1" type="xml">
            <files mask="mu_interrupt_core1.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_mu_polling_core1" name="mu_polling_core1" brief="The mu_polling example shows how to use MU driver in polling way:In this example:1. Core 0 send message to Core 1 in polling mode via MU module.2. Core 1 send message back to Core 0 in polling mode.3. Core 0 receive message sent from Core 1 in polling mode." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/mu" path="boards/frdmk32l3a6/driver_examples/mu/polling/core1">
          <external path="boards/frdmk32l3a6/driver_examples/mu/polling/core1" type="xml">
            <files mask="mu_polling_core1.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_multicore_manager_cm0plus" name="multicore_manager_cm0plus" brief="The Multicore Manager example application demonstrates advanced features of the MCMgr component.&#10;In this demo, the primary core prints the &quot;Hello World from the Primary Core!&quot; string to the terminal&#10;and then releases the secondary core from the reset. The secondary&#10;core toggles an on-board LED indicating that the secondary core is running. It is also possible to&#10;stop/start the secondary core during the runtime by pressing on-board buttons. The&#10;on-board LED then indicates the change, it stops/starts toggling accordingly.&#10;&#10;This application also shows how to use the Multicore Manager for&#10;remote core monitoring and handling of events such as application, CoreUp, CoreDown and exception events.&#10;Application-specific callback functions for events are registered by the MCMGR_RegisterEvent() API&#10;on the primary core. Triggering these events is done using the MCMGR_TriggerEvent() API on the&#10;secondary core. While CoreUp, CoreDown events are triggered from startup and MCMGR code, the&#10;application event is triggered from the application.&#10;The exception event is triggered in the secondary application after 100 LED toggles by trying&#10;to write to flash. This raises the exception on the secondary core and triggers the&#10;RemoteExceptionEvent on the primary core.&#10;" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="multicore_examples" path="boards/frdmk32l3a6/multicore_examples/multicore_manager/cm0plus">
          <external path="boards/frdmk32l3a6/multicore_examples/multicore_manager/cm0plus" type="xml">
            <files mask="multicore_manager_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_pflash_cm0plus" name="pflash_cm0plus" brief="The pflash example shows how to use flash driver to operate program flash:" toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/flash" path="boards/frdmk32l3a6/driver_examples/flash/pflash/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/flash/pflash/cm0plus" type="xml">
            <files mask="pflash_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_power_mode_switch_cm0plus" name="power_mode_switch_cm0plus" brief="The IEE IEER MMDC demo application demonstrates usage of the IEE and IEER driver. The Inline Encryption Engine (IEE) together with Inline Encryption Engine Router (IEER) provides a means to perform inline encryption and decryption of information transferred over external memory interfaces. In this demo application encrypted read and write is performed to external DDR Ram using MMDC. At first IEE is configured to perform AES XTS encryprion/decryption using KEY1 &amp; KEY2 for region 3 (highest priority region). Offset setting for region 3 is calculated using IEE_GetOffset() function. IEE uses offset to determine the physical address of the memory location that you are accessing. Offset is added to IEE address when performing read or write access to IEE. Then IEER is set to cover all its address space for region 3. Now all data written/read to/from IEE address will be encrypted/decrypted and written/read to/from physical DDR memory. Then test data are written over IEE to DDR. After the successful write, data are read directly from the DDR (without using IEE) to see that they are crypted. Then read using IEE is performed and the data are compared to written data in the begining of this demo." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="demo_apps" path="boards/frdmk32l3a6/demo_apps/power_mode_switch/cm0plus">
          <external path="boards/frdmk32l3a6/demo_apps/power_mode_switch/cm0plus" type="xml">
            <files mask="power_mode_switch_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_rpmsg_lite_pingpong_cm0plus" name="rpmsg_lite_pingpong_cm0plus" brief="The Multicore RPMsg-Lite pingpong project is a simple demonstration program that uses theMCUXpresso SDK software and the RPMsg-Lite library and shows how to implement the inter-corecommunicaton between cores of the multicore system. The primary core releases the secondary corefrom the reset and then the inter-core communication is established. Once the RPMsg is initializedand endpoints are created the message exchange starts, incrementing a virtual counter that is partof the message payload. The message pingpong finishes when the counter reaches the value of 100.Then the RPMsg-Lite is deinitialized and the procedure of the data exchange is repeated again.Shared memory usageThis multicore example uses the shared memory for data exchange. The shared memory region isdefined and the size can be adjustable in the linker file. The shared memory region start addressand the size have to be defined in linker file for each core equally. The shared memory startaddress is then exported from the linker to the application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="multicore_examples" path="boards/frdmk32l3a6/multicore_examples/rpmsg_lite_pingpong/cm0plus">
          <external path="boards/frdmk32l3a6/multicore_examples/rpmsg_lite_pingpong/cm0plus" type="xml">
            <files mask="rpmsg_lite_pingpong_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_rpmsg_lite_pingpong_rtos_cm0plus" name="rpmsg_lite_pingpong_rtos_cm0plus" brief="The Multicore RPMsg-Lite pingpong RTOS project is a simple demonstration program that uses theMCUXpresso SDK software and the RPMsg-Lite library and shows how to implement the inter-corecommunicaton between cores of the multicore system. The primary core releases the secondary corefrom the reset and then the inter-core communication is established. Once the RPMsg is initializedand endpoints are created the message exchange starts, incrementing a virtual counter that is partof the message payload. The message pingpong finishes when the counter reaches the value of 100.Then the RPMsg-Lite is deinitialized and the procedure of the data exchange is repeated again.Shared memory usageThis multicore example uses the shared memory for data exchange. The shared memory region isdefined and the size can be adjustable in the linker file. The shared memory region start addressand the size have to be defined in linker file for each core equally. The shared memory startaddress is then exported from the linker to the application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="multicore_examples" path="boards/frdmk32l3a6/multicore_examples/rpmsg_lite_pingpong_rtos/cm0plus">
          <external path="boards/frdmk32l3a6/multicore_examples/rpmsg_lite_pingpong_rtos/cm0plus" type="xml">
            <files mask="rpmsg_lite_pingpong_rtos_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_rtc_cm0plus" name="rtc_cm0plus" brief="The RTC project is a simple demonstration program of the SDK RTC driver. It sets up the RTChardware block to trigger an alarm after a user specified time period. The test will set the currentdate and time to a predefined value. The alarm will be set with reference to this predefined dateand time." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples" path="boards/frdmk32l3a6/driver_examples/rtc/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/rtc/cm0plus" type="xml">
            <files mask="rtc_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_rtc_func_cm0plus" name="rtc_func_cm0plus" brief="The RTC demo application demonstrates the important features of the RTC Module by using the RTC Peripheral Driver.The RTC demo supports the following features:- Calendar  + Get the current date time with Year, Month, Day, Hour, Minute, and Second.  + Set the current date time with Year, Month, Day, Hour, Minute, and Second.- Alarm  + Set the alarm based on the current time.  + Application prints a notification when the alarm expires.- Seconds interrupt  + Use second interrupt function to display a digital time blink every second." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="demo_apps" path="boards/frdmk32l3a6/demo_apps/rtc_func/cm0plus">
          <external path="boards/frdmk32l3a6/demo_apps/rtc_func/cm0plus" type="xml">
            <files mask="rtc_func_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_sdcard_fatfs_freertos_cm0plus" name="sdcard_fatfs_freertos_cm0plus" brief="The SDCARD FATFS FREERTOS project is a demonstration program that uses the SDK software. The purpose of this example is to show how to use SDCARD with fatfs and freertos." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="demo_apps/sdcard_fatfs_freertos" path="boards/frdmk32l3a6/demo_apps/sdcard_fatfs_freertos/cm0plus">
          <external path="boards/frdmk32l3a6/demo_apps/sdcard_fatfs_freertos/cm0plus" type="xml">
            <files mask="sdcard_fatfs_freertos_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_sdcard_interrupt_cm0plus" name="sdcard_interrupt_cm0plus" brief="The SDCARD Interrupt project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver andshow how to use interrupt based transfer API in SDHC driver in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/sdcard" path="boards/frdmk32l3a6/driver_examples/sdcard/interrupt/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/sdcard/interrupt/cm0plus" type="xml">
            <files mask="sdcard_interrupt_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_sdcard_polling_cm0plus" name="sdcard_polling_cm0plus" brief="The SDCARD Polling project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver andshow how to use polling based transfer API in SDHC driver in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/sdcard" path="boards/frdmk32l3a6/driver_examples/sdcard/polling/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/sdcard/polling/cm0plus" type="xml">
            <files mask="sdcard_polling_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_sema42_dual_core_core1" name="sema42_dual_core_core1" brief="The sema42 example shows how to use SEMA42 driver to lock and unlock a sema gate:In this example:1. Firstly, Core 0 turn on LED  and lock a sema gate then boot up Core 1 wake up.2. Core 1 must be wait until Core 0 unlocks this sema gate to lock it.3. After user press any key in terminal window, the sema gate will be unlocked by core 0,then core 1 will lock it and turn off the LEDIf the board does not have LED to show the status, then core 1 will send a flagto core 0 when core 1 has locked the sema gate. Core 0 outputs the success logafter it received the flag." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/sema42" path="boards/frdmk32l3a6/driver_examples/sema42/dual_core/core1">
          <external path="boards/frdmk32l3a6/driver_examples/sema42/dual_core/core1" type="xml">
            <files mask="sema42_dual_core_core1.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_shell_cm0plus" name="shell_cm0plus" brief="The Shell Demo application demonstrates to control Leds by commands." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="demo_apps" path="boards/frdmk32l3a6/demo_apps/shell/cm0plus">
          <external path="boards/frdmk32l3a6/demo_apps/shell/cm0plus" type="xml">
            <files mask="shell_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_tpm_combine_pwm_cm0plus" name="tpm_combine_pwm_cm0plus" brief="The TPM project is a demonstration program of generating a combined PWM signal by the SDK TPM driver. It sets up the TPMhardware block to output PWM signals on two TPM channels. The example also show's the complementary mode of operationand deadtime insertion.On boards that have 2 LEDs connected to the TPM pins, the user will seea change in LED brightness if user enter different values.And if the board do not support LEDs to show, the outputs can be observed by oscilloscope." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/tpm" path="boards/frdmk32l3a6/driver_examples/tpm/combine_pwm/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/tpm/combine_pwm/cm0plus" type="xml">
            <files mask="tpm_combine_pwm_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_tpm_dual_edge_capture_cm0plus" name="tpm_dual_edge_capture_cm0plus" brief="The TPM project is a demonstration program of the SDK TPM driver's dual-edge capture feature.This feature is available only on certain SoC's.The example sets up a TPM channel-pair for dual-edge capture. Once the input signal is received,this example will print the capture values and period of the input signal on the terminal window." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/tpm" path="boards/frdmk32l3a6/driver_examples/tpm/dual_edge_capture/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/tpm/dual_edge_capture/cm0plus" type="xml">
            <files mask="tpm_dual_edge_capture_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_tpm_input_capture_cm0plus" name="tpm_input_capture_cm0plus" brief="The TPM project is a demonstration program of the SDK TPM driver's input capture feature.The example sets up a TPM channel for dual-edge capture. Once the input signal is received,this example will print the capture value." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/tpm" path="boards/frdmk32l3a6/driver_examples/tpm/input_capture/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/tpm/input_capture/cm0plus" type="xml">
            <files mask="tpm_input_capture_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_tpm_output_compare_cm0plus" name="tpm_output_compare_cm0plus" brief="The TPM project is a demonstration program of the SDK TPM driver's output compare feature.It sets up one TPM channel to toggle the output when a match occurs with the channel value. The usershould probe the TPM output with a oscilloscope to see the signal toggling." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/tpm" path="boards/frdmk32l3a6/driver_examples/tpm/output_compare/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/tpm/output_compare/cm0plus" type="xml">
            <files mask="tpm_output_compare_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_tpm_pwm_twochannel_cm0plus" name="tpm_pwm_twochannel_cm0plus" brief="The TPM project is a simple demonstration program of the SDK TPM driver. It sets up the TPMhardware block to output PWM signals on two TPM channels. The PWM dutycycle on both channelsis manually updated. On boards that have an LED connected to the TPM pins, the user will seea change in LED brightness if user enter different values." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/tpm" path="boards/frdmk32l3a6/driver_examples/tpm/pwm_twochannel/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/tpm/pwm_twochannel/cm0plus" type="xml">
            <files mask="tpm_pwm_twochannel_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_tpm_simple_pwm_cm0plus" name="tpm_simple_pwm_cm0plus" brief="The TPM project is a simple demonstration program of the SDK TPM driver. It sets up the TPMhardware block to output a center-aligned PWM signal. The PWM dutycycle is manually updated.On boards that have an LED connected to the TPM pins, the user will see a change in LEDbrightness if user enter different values." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/tpm" path="boards/frdmk32l3a6/driver_examples/tpm/simple_pwm/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/tpm/simple_pwm/cm0plus" type="xml">
            <files mask="tpm_simple_pwm_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_tpm_timer_cm0plus" name="tpm_timer_cm0plus" brief="The TPM project is a simple demonstration program of the SDK TPM driver to use TPM as a timer.It sets up the TPM hardware block to trigger an interrupt every 1 millisecond.When the TPM interrupt is triggered a message a printed on the UART terminal." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/tpm" path="boards/frdmk32l3a6/driver_examples/tpm/timer/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/tpm/timer/cm0plus" type="xml">
            <files mask="tpm_timer_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_trng_random_cm0plus" name="trng_random_cm0plus" brief="The True Random Number Generator (TRNG) is a hardware accelerator module that generates a 512-bitentropy as needed by an entropy consuming module or by other post processing functions. The TRNGExample project is a demonstration program that uses the KSDK software to generate random numbersand prints them to the terminal." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/trng" path="boards/frdmk32l3a6/driver_examples/trng/random/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/trng/random/cm0plus" type="xml">
            <files mask="trng_random_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_tstmr_cm0plus" name="tstmr_cm0plus" brief="The tstmr example shows the usage of TSTMR driver in application. The TSTMR module is a free running incrementing counter that starts running after system reset de-assertion and can be read at any time by the software for determining the software ticks.The TSTMR runs off the 1 MHz clock and resets on every system reset.In this example, it would output a time stamp information when the application is ready. And then, delay for 1 second with TSTMR_DelayUs() function. Before and after the delay, it would output the two time stamps information again." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples" path="boards/frdmk32l3a6/driver_examples/tstmr/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/tstmr/cm0plus" type="xml">
            <files mask="tstmr_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_xrdc_cm0plus" name="xrdc_cm0plus" brief="The xrdc example shows how to control the memory and peripheral accesspolicy using XRDC.In this example, one peripheral and a memory region are set to unaccessible, thenthe hardfault occurs." toolchain="armgcc iar mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples" path="boards/frdmk32l3a6/driver_examples/xrdc/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/xrdc/cm0plus" type="xml">
            <files mask="xrdc_cm0plus.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_bubble_cm4" name="bubble_cm4" brief="The bubble level demo demonstrates basic usage of the on-board accelerometer to implement a bubble level. A bubble level utilizes two axes to visually show deviation from a level plane (0 degrees) on a given axis." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="demo_apps" path="boards/frdmk32l3a6/demo_apps/bubble/cm4">
          <external path="boards/frdmk32l3a6/demo_apps/bubble/cm4" type="xml">
            <files mask="bubble_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_cau3_cm4" name="cau3_cm4" brief="The CAU3 Example project is a demonstration program that uses the KSDK software implementseveral cryptography algorithms using the CAU3 software driver." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples" path="boards/frdmk32l3a6/driver_examples/cau3/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/cau3/cm4" type="xml">
            <files mask="cau3_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_cmsis_lpi2c_edma_b2b_transfer_master_cm4" name="cmsis_lpi2c_edma_b2b_transfer_master_cm4" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_edma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with EDMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="cmsis_driver_examples/lpi2c" path="boards/frdmk32l3a6/cmsis_driver_examples/lpi2c/edma_b2b_transfer/master/cm4">
          <external path="boards/frdmk32l3a6/cmsis_driver_examples/lpi2c/edma_b2b_transfer/master/cm4" type="xml">
            <files mask="cmsis_lpi2c_edma_b2b_transfer_master_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_cmsis_lpi2c_edma_b2b_transfer_slave_cm4" name="cmsis_lpi2c_edma_b2b_transfer_slave_cm4" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_edma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with EDMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="cmsis_driver_examples/lpi2c" path="boards/frdmk32l3a6/cmsis_driver_examples/lpi2c/edma_b2b_transfer/slave/cm4">
          <external path="boards/frdmk32l3a6/cmsis_driver_examples/lpi2c/edma_b2b_transfer/slave/cm4" type="xml">
            <files mask="cmsis_lpi2c_edma_b2b_transfer_slave_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_cmsis_lpi2c_int_b2b_transfer_master_cm4" name="cmsis_lpi2c_int_b2b_transfer_master_cm4" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The lpi2c_int_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="cmsis_driver_examples/lpi2c" path="boards/frdmk32l3a6/cmsis_driver_examples/lpi2c/int_b2b_transfer/master/cm4">
          <external path="boards/frdmk32l3a6/cmsis_driver_examples/lpi2c/int_b2b_transfer/master/cm4" type="xml">
            <files mask="cmsis_lpi2c_int_b2b_transfer_master_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_cmsis_lpi2c_int_b2b_transfer_slave_cm4" name="cmsis_lpi2c_int_b2b_transfer_slave_cm4" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The lpi2c_int_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="cmsis_driver_examples/lpi2c" path="boards/frdmk32l3a6/cmsis_driver_examples/lpi2c/int_b2b_transfer/slave/cm4">
          <external path="boards/frdmk32l3a6/cmsis_driver_examples/lpi2c/int_b2b_transfer/slave/cm4" type="xml">
            <files mask="cmsis_lpi2c_int_b2b_transfer_slave_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_cmsis_lpspi_edma_b2b_transfer_master_cm4" name="cmsis_lpspi_edma_b2b_transfer_master_cm4" brief="The cmsis_lpspi_edma_b2b_transfer example shows how to use LPSPI CMSIS driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_edma_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in edma . " toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="cmsis_driver_examples/lpspi" path="boards/frdmk32l3a6/cmsis_driver_examples/lpspi/edma_b2b_transfer/master/cm4">
          <external path="boards/frdmk32l3a6/cmsis_driver_examples/lpspi/edma_b2b_transfer/master/cm4" type="xml">
            <files mask="cmsis_lpspi_edma_b2b_transfer_master_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_cmsis_lpspi_edma_b2b_transfer_slave_cm4" name="cmsis_lpspi_edma_b2b_transfer_slave_cm4" brief="The cmsis_lpspi_edma_b2b_transfer example shows how to use LPSPI CMSIS driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_edma_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in edma . " toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="cmsis_driver_examples/lpspi" path="boards/frdmk32l3a6/cmsis_driver_examples/lpspi/edma_b2b_transfer/slave/cm4">
          <external path="boards/frdmk32l3a6/cmsis_driver_examples/lpspi/edma_b2b_transfer/slave/cm4" type="xml">
            <files mask="cmsis_lpspi_edma_b2b_transfer_slave_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_cmsis_lpspi_int_b2b_transfer_master_cm4" name="cmsis_lpspi_int_b2b_transfer_master_cm4" brief="The cmsis_lpspi_int_b2b_transfer example shows how to use LPSPI CMSIS driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_int_b2b_transfer_master.c' includes the LPSPI master code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . " toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="cmsis_driver_examples/lpspi" path="boards/frdmk32l3a6/cmsis_driver_examples/lpspi/int_b2b_transfer/master/cm4">
          <external path="boards/frdmk32l3a6/cmsis_driver_examples/lpspi/int_b2b_transfer/master/cm4" type="xml">
            <files mask="cmsis_lpspi_int_b2b_transfer_master_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_cmsis_lpspi_int_b2b_transfer_slave_cm4" name="cmsis_lpspi_int_b2b_transfer_slave_cm4" brief="The lpspi_int_b2b_transfer example shows how to use LPSPI CMSIS driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_int_b2b_transfer_slave.c' includes the LPSPI slave code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . " toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="cmsis_driver_examples/lpspi" path="boards/frdmk32l3a6/cmsis_driver_examples/lpspi/int_b2b_transfer/slave/cm4">
          <external path="boards/frdmk32l3a6/cmsis_driver_examples/lpspi/int_b2b_transfer/slave/cm4" type="xml">
            <files mask="cmsis_lpspi_int_b2b_transfer_slave_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_cmsis_lpuart_edma_transfer_cm4" name="cmsis_lpuart_edma_transfer_cm4" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_edma_transfer example shows how to use uart cmsis  driver with EDMA:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="cmsis_driver_examples/lpuart" path="boards/frdmk32l3a6/cmsis_driver_examples/lpuart/edma_transfer/cm4">
          <external path="boards/frdmk32l3a6/cmsis_driver_examples/lpuart/edma_transfer/cm4" type="xml">
            <files mask="cmsis_lpuart_edma_transfer_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_cmsis_lpuart_interrupt_transfer_cm4" name="cmsis_lpuart_interrupt_transfer_cm4" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_interrupt_transfer example shows how to use uart cmsis driver in interrupt way:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="cmsis_driver_examples/lpuart" path="boards/frdmk32l3a6/cmsis_driver_examples/lpuart/interrupt_transfer/cm4">
          <external path="boards/frdmk32l3a6/cmsis_driver_examples/lpuart/interrupt_transfer/cm4" type="xml">
            <files mask="cmsis_lpuart_interrupt_transfer_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_crc_cm4" name="crc_cm4" brief="The CRC Example project is a demonstration program that uses the KSDK software to generate checksumsfor an ASCII string. Several CRC protocols are implemented using the CRC driver API." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples" path="boards/frdmk32l3a6/driver_examples/crc/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/crc/cm4" type="xml">
            <files mask="crc_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dac_1_basic_cm4" name="dac_1_basic_cm4" brief="The dac_basic example shows how to use DAC module simply as the general DAC converter.When the DAC's buffer feature is not enabled, the first item of the buffer is used as the DAC output data register.The converter would always output the value of the first item. In this example, it gets the value from terminal,outputs the DAC output voltage through DAC output pin." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/dac" path="boards/frdmk32l3a6/driver_examples/dac/dac_basic/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/dac/dac_basic/cm4" type="xml">
            <files mask="dac_1_basic_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dac_1_buffer_interrupt_cm4" name="dac_1_buffer_interrupt_cm4" brief="The dac_buffer_interrupt example shows how to use DAC FIFO interrupt.When the DAC FIFO empty interrupt is enabled firstly, the application would enter the DAC ISR immediately, since the FIFO is actually empty. Then the FIFO would be feed inside the ISR. Then the DAC interrupt could be restrained. Once the DAC FIFO is triggered in while loop, the data in FIFO is read out, then it becomes empty, so the FIFO would be feed again in DAC ISR. With this example, user can define the DAC output array to generate the different wave output. Also the software trigger can be called in some timer ISR so that the DAC would output the analog signal in indicated period. Or even use the hardware trigger to release the CPU." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/dac" path="boards/frdmk32l3a6/driver_examples/dac/dac_buffer_interrupt/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/dac/dac_buffer_interrupt/cm4" type="xml">
            <files mask="dac_1_buffer_interrupt_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dcdc_framework_cm4" name="dcdc_framework_cm4" brief="The SD JPEG Demo application reads the JPEG pictures from the SD card, decodesthem, and shows them in the LCD panel one by one." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="demo_apps" path="boards/frdmk32l3a6/demo_apps/dcdc_framework/cm4">
          <external path="boards/frdmk32l3a6/demo_apps/dcdc_framework/cm4" type="xml">
            <files mask="dcdc_framework_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_audio_generator_bm" name="dev_audio_generator_bm" brief="The USB Audio Generator application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a recording device and users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_audio_generator/bm/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_audio_generator/bm/cm4" type="xml">
            <files mask="dev_audio_generator_bm.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_audio_generator_freertos" name="dev_audio_generator_freertos" brief="The USB Audio Generator application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a recording device and users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_audio_generator/freertos/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_audio_generator/freertos/cm4" type="xml">
            <files mask="dev_audio_generator_freertos.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_audio_generator_lite_bm" name="dev_audio_generator_lite_bm" brief="The USB Audio Generator application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a recording device and users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_audio_generator_lite/bm/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_audio_generator_lite/bm/cm4" type="xml">
            <files mask="dev_audio_generator_lite_bm.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_cdc_vcom_bm" name="dev_cdc_vcom_bm" brief="The Virtual COM project is enumerated as a COM port, which the users can open using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_cdc_vcom/bm/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_cdc_vcom/bm/cm4" type="xml">
            <files mask="dev_cdc_vcom_bm.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_cdc_vcom_freertos" name="dev_cdc_vcom_freertos" brief="The Virtual COM project is  enumerated as a COM port, which the users can open using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_cdc_vcom/freertos/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_cdc_vcom/freertos/cm4" type="xml">
            <files mask="dev_cdc_vcom_freertos.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_cdc_vcom_lite_bm" name="dev_cdc_vcom_lite_bm" brief="The Virtual COM project enumerated as a COM port, which the users can open using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_cdc_vcom_lite/bm/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_cdc_vcom_lite/bm/cm4" type="xml">
            <files mask="dev_cdc_vcom_lite_bm.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_composite_cdc_msc_bm" name="dev_composite_cdc_msc_bm" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted.." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_composite_cdc_msc/bm/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_composite_cdc_msc/bm/cm4" type="xml">
            <files mask="dev_composite_cdc_msc_bm.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_composite_cdc_msc_freertos" name="dev_composite_cdc_msc_freertos" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_composite_cdc_msc/freertos/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_composite_cdc_msc/freertos/cm4" type="xml">
            <files mask="dev_composite_cdc_msc_freertos.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_composite_cdc_msc_lite_bm" name="dev_composite_cdc_msc_lite_bm" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_composite_cdc_msc_lite/bm/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_composite_cdc_msc_lite/bm/cm4" type="xml">
            <files mask="dev_composite_cdc_msc_lite_bm.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_composite_hid_audio_bm" name="dev_composite_hid_audio_bm" brief="The USB Composite device application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a recording device. Users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories with an HID mouse device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_composite_hid_audio/bm/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_composite_hid_audio/bm/cm4" type="xml">
            <files mask="dev_composite_hid_audio_bm.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_composite_hid_audio_freertos" name="dev_composite_hid_audio_freertos" brief="The USB Composite device application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a recording device. Users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories with an HID mouse device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_composite_hid_audio/freertos/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_composite_hid_audio/freertos/cm4" type="xml">
            <files mask="dev_composite_hid_audio_freertos.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_composite_hid_audio_lite_bm" name="dev_composite_hid_audio_lite_bm" brief="The USB Composite device application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a recording device. Users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories with an HID mouse device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_composite_hid_audio_lite/bm/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_composite_hid_audio_lite/bm/cm4" type="xml">
            <files mask="dev_composite_hid_audio_lite_bm.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_composite_hid_mouse_hid_keyboard_bm" name="dev_composite_hid_mouse_hid_keyboard_bm" brief="The application is a simple demonstration program based on the MCUXpresso SDK. The application is enumerated as HID-compliant mouse and keyboard devices." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/bm/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/bm/cm4" type="xml">
            <files mask="dev_composite_hid_mouse_hid_keyboard_bm.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_composite_hid_mouse_hid_keyboard_freertos" name="dev_composite_hid_mouse_hid_keyboard_freertos" brief="The application is a simple demonstration program based on the MCUXpresso SDK. The application is enumerated as HID-compliant mouse and keyboard devices." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/freertos/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/freertos/cm4" type="xml">
            <files mask="dev_composite_hid_mouse_hid_keyboard_freertos.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_composite_hid_mouse_hid_keyboard_lite_bm" name="dev_composite_hid_mouse_hid_keyboard_lite_bm" brief="The application is a simple demonstration program based on the MCUXpresso SDK. The application is enumerated as HID-compliant mouse and keyboard devices." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_composite_hid_mouse_hid_keyboard_lite/bm/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_composite_hid_mouse_hid_keyboard_lite/bm/cm4" type="xml">
            <files mask="dev_composite_hid_mouse_hid_keyboard_lite_bm.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_hid_generic_bm" name="dev_hid_generic_bm" brief="The USB HID generic application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a HID-compliant device. A PC application can be used to exchange data with the device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_hid_generic/bm/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_hid_generic/bm/cm4" type="xml">
            <files mask="dev_hid_generic_bm.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_hid_generic_freertos" name="dev_hid_generic_freertos" brief="The USB HID generic application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a HID-compliant device. A PC application can be used to exchange data with the device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_hid_generic/freertos/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_hid_generic/freertos/cm4" type="xml">
            <files mask="dev_hid_generic_freertos.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_hid_generic_lite_bm" name="dev_hid_generic_lite_bm" brief="The USB HID generic application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a HID-compliant device. A PC application can be used to exchange data with the device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_hid_generic_lite/bm/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_hid_generic_lite/bm/cm4" type="xml">
            <files mask="dev_hid_generic_lite_bm.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_hid_mouse_bm" name="dev_hid_mouse_bm" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_hid_mouse/bm/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_hid_mouse/bm/cm4" type="xml">
            <files mask="dev_hid_mouse_bm.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_hid_mouse_freertos" name="dev_hid_mouse_freertos" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_hid_mouse/freertos/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_hid_mouse/freertos/cm4" type="xml">
            <files mask="dev_hid_mouse_freertos.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_hid_mouse_freertos_static" name="dev_hid_mouse_freertos_static" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_hid_mouse/freertos_static/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_hid_mouse/freertos_static/cm4" type="xml">
            <files mask="dev_hid_mouse_freertos_static.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_hid_mouse_lite_bm" name="dev_hid_mouse_lite_bm" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_hid_mouse_lite/bm/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_hid_mouse_lite/bm/cm4" type="xml">
            <files mask="dev_hid_mouse_lite_bm.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_msc_ramdisk_bm" name="dev_msc_ramdisk_bm" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk and can be read and written to as a normal U-disk ." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_msc_ramdisk/bm/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_msc_ramdisk/bm/cm4" type="xml">
            <files mask="dev_msc_ramdisk_bm.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_msc_ramdisk_freertos" name="dev_msc_ramdisk_freertos" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk and can be read and written to as a normal U-disk ." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_msc_ramdisk/freertos/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_msc_ramdisk/freertos/cm4" type="xml">
            <files mask="dev_msc_ramdisk_freertos.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_msc_ramdisk_lite_bm" name="dev_msc_ramdisk_lite_bm" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk and can be read and written to as a normal U-disk ." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_msc_ramdisk_lite/bm/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_msc_ramdisk_lite/bm/cm4" type="xml">
            <files mask="dev_msc_ramdisk_lite_bm.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_phdc_weighscale_bm" name="dev_phdc_weighscale_bm" brief="The USB PHDC WeighScale application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a weight scale device and the HealthLink software is used to interact with thisdevice to simulate the personal weight scale data, such as body mass and body mass index." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_phdc_weighscale/bm/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_phdc_weighscale/bm/cm4" type="xml">
            <files mask="dev_phdc_weighscale_bm.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_phdc_weighscale_freertos" name="dev_phdc_weighscale_freertos" brief="The USB PHDC WeighScale application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a weight scale device and the HealthLink software is used to interact with thisdevice to simulate the personal weight scale data, such as body mass and body mass index." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_phdc_weighscale/freertos/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_phdc_weighscale/freertos/cm4" type="xml">
            <files mask="dev_phdc_weighscale_freertos.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_phdc_weighscale_lite_bm" name="dev_phdc_weighscale_lite_bm" brief="The USB PHDC WeighScale application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a weight scale device and the HealthLink software is used to interact with thisdevice to simulate the personal weight scale data, such as body mass and body mass index." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_phdc_weighscale_lite/bm/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_phdc_weighscale_lite/bm/cm4" type="xml">
            <files mask="dev_phdc_weighscale_lite_bm.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_printer_virtual_plain_text_bm" name="dev_printer_virtual_plain_text_bm" brief="The USB virtual printer application is a simple application to demonstrate a virtual printer functionality.Because there is no printer language parsing, the received raw data is output directly in the debug console.As a result, only plain text is suitable for testing. For other printer language support, such as postscript, implement the corresponding parser." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_printer_virtual_plain_text/bm/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_printer_virtual_plain_text/bm/cm4" type="xml">
            <files mask="dev_printer_virtual_plain_text_bm.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_printer_virtual_plain_text_freertos" name="dev_printer_virtual_plain_text_freertos" brief="The USB virtual printer application is a simple application to demonstrate a virtual printer functionality.Because there is no printer language parsing, the received raw data is output directly in the debug console.As a result, only plain text is suitable for testing. For other printer language support, such as postscript, implement the corresponding parser." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_printer_virtual_plain_text/freertos/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_printer_virtual_plain_text/freertos/cm4" type="xml">
            <files mask="dev_printer_virtual_plain_text_freertos.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_printer_virtual_plain_text_lite_bm" name="dev_printer_virtual_plain_text_lite_bm" brief="The USB virtual printer application is a simple application to demonstrate a virtual printer functionality.Because there is no printer language parsing, the received raw data is output directly in the debug console.As a result, only plain text is suitable for testing. For other printer language support, such as postscript, implement the corresponding parser." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_printer_virtual_plain_text_lite/bm/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_printer_virtual_plain_text_lite/bm/cm4" type="xml">
            <files mask="dev_printer_virtual_plain_text_lite_bm.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_suspend_resume_hid_mouse_bm" name="dev_suspend_resume_hid_mouse_bm" brief="the application is enumerated as a mouse. When host releases the USB Bus, the device will enter into low power mode. The device can be waked up when resume signal is detected on the bus. Or the device can remote wake-up the host by delivering the resume signal when the remote wake-up is enabled by the host." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_suspend_resume_device_hid_mouse/bm/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_suspend_resume_device_hid_mouse/bm/cm4" type="xml">
            <files mask="dev_suspend_resume_hid_mouse_bm.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_suspend_resume_hid_mouse_freertos" name="dev_suspend_resume_hid_mouse_freertos" brief="the application is enumerated as a mouse. When host releases the USB Bus, the device will enter into low power mode. The device can be waked up when resume signal is detected on the bus. Or the device can remote wake-up the host by delivering the resume signal when the remote wake-up is enabled by the host." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_suspend_resume_device_hid_mouse/freertos/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_suspend_resume_device_hid_mouse/freertos/cm4" type="xml">
            <files mask="dev_suspend_resume_hid_mouse_freertos.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_suspend_resume_hid_mouse_lite_bm" name="dev_suspend_resume_hid_mouse_lite_bm" brief="the application is enumerated as a mouse. When host releases the USB Bus, the device will enter into low power mode. The device can be waked up when resume signal is detected on the bus. Or the device can remote wake-up the host by delivering the resume signal when the remote wake-up is enabled by the host." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_suspend_resume_device_hid_mouse_lite/bm/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_suspend_resume_device_hid_mouse_lite/bm/cm4" type="xml">
            <files mask="dev_suspend_resume_hid_mouse_lite_bm.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_video_virtual_camera_bm" name="dev_video_virtual_camera_bm" brief="The USB video virtual camera application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a camera and users can see the video of the device by using a PC test tool." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_video_virtual_camera/bm/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_video_virtual_camera/bm/cm4" type="xml">
            <files mask="dev_video_virtual_camera_bm.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_video_virtual_camera_freertos" name="dev_video_virtual_camera_freertos" brief="The USB video virtual camera application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a camera and users can see the video of the device by using a PC test tool." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_video_virtual_camera/freertos/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_video_virtual_camera/freertos/cm4" type="xml">
            <files mask="dev_video_virtual_camera_freertos.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_video_virtual_camera_lite_bm" name="dev_video_virtual_camera_lite_bm" brief="The USB video virtual camera application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a camera and users can see the video of the device by using a PC test tool." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_video_virtual_camera_lite/bm/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_video_virtual_camera_lite/bm/cm4" type="xml">
            <files mask="dev_video_virtual_camera_lite_bm.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_edma_memory_to_memory_cm4" name="edma_memory_to_memory_cm4" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/edma" path="boards/frdmk32l3a6/driver_examples/edma/memory_to_memory/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/edma/memory_to_memory/cm4" type="xml">
            <files mask="edma_memory_to_memory_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_edma_scatter_gather_cm4" name="edma_scatter_gather_cm4" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/edma" path="boards/frdmk32l3a6/driver_examples/edma/scatter_gather/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/edma/scatter_gather/cm4" type="xml">
            <files mask="edma_scatter_gather_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_erpc_matrix_multiply_mu_cm4" name="erpc_matrix_multiply_mu_cm4" brief="The Multicore eRPC Matrix Multiply project is a simple demonstration program that uses theMCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Callbetween cores of the multicore system. The primary core (eRPC client) releases the secondary core(eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let thesecondary core to perform the multiplication of two randomly generated matrices. The originalmatrices and the result matrix is printed out to the serial console by the primary core. Thematrix multiplication can be issued repeatedly when pressing a SW board button. MU (Messaging Unit)erpc transport layer is used in this example application.eRPC documentation eRPC specific files are stored in: middleware/multicore/erpc eRPC documentation is stored in: middleware/multicore/erpc/doc eRPC is open-source project stored on github: https://github.com/EmbeddedRPC/erpc eRPC documentation can be also found in: http://embeddedrpc.github.io" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="multicore_examples" linked_projects="frdmk32l3a6_erpc_matrix_multiply_mu_cm0plus" path="boards/frdmk32l3a6/multicore_examples/erpc_matrix_multiply_mu/cm4">
          <external path="boards/frdmk32l3a6/multicore_examples/erpc_matrix_multiply_mu/cm4" type="xml">
            <files mask="erpc_matrix_multiply_mu_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_erpc_matrix_multiply_mu_rtos_cm4" name="erpc_matrix_multiply_mu_rtos_cm4" brief="The Multicore eRPC Matrix Multiply RTOS project is a simple demonstration program that uses theMCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Callbetween cores of the multicore system. The primary core (eRPC client) releases the secondary core(eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let thesecondary core to perform the multiplication of two randomly generated matrices. The originalmatrices and the result matrix is printed out to the serial console by the primary core. Thematrix multiplication can be issued repeatedly when pressing a SW board button. MU (Messaging Unit)erpc transport layer is used in this example application.eRPC documentation eRPC specific files are stored in: middleware/multicore/erpc eRPC documentation is stored in: middleware/multicore/erpc/doc eRPC is open-source project stored on github: https://github.com/EmbeddedRPC/erpc eRPC documentation can be also found in: http://embeddedrpc.github.io" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="multicore_examples" linked_projects="frdmk32l3a6_erpc_matrix_multiply_mu_rtos_cm0plus" path="boards/frdmk32l3a6/multicore_examples/erpc_matrix_multiply_mu_rtos/cm4">
          <external path="boards/frdmk32l3a6/multicore_examples/erpc_matrix_multiply_mu_rtos/cm4" type="xml">
            <files mask="erpc_matrix_multiply_mu_rtos_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_erpc_matrix_multiply_rpmsg_cm4" name="erpc_matrix_multiply_rpmsg_cm4" brief="The Multicore eRPC Matrix Multiply project is a simple demonstration program that uses theMCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Callbetween cores of the multicore system. The primary core (eRPC client) releases the secondary core(eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let thesecondary core to perform the multiplication of two randomly generated matrices. The originalmatrices and the result matrix is printed out to the serial console by the primary core. Thematrix multiplication can be issued repeatedly when pressing a SW board button. RPMsg-Lite erpctransport layer is used in this example application.Shared memory usageThis multicore example uses the shared memory for data exchange. The shared memory region isdefined and the size can be adjustable in the linker file. The shared memory region start addressand the size have to be defined in linker file for each core equally. The shared memory startaddress is then exported from the linker to the application.eRPC documentationeRPC specific files are stored in: middleware/multicore_&lt;version&gt;/erpceRPC documentation is stored in: middleware/multicore_&lt;version&gt;/erpc/doceRPC is open-source project stored on github: https://github.com/EmbeddedRPC/erpceRPC documentation can be also found in: http://embeddedrpc.github.io" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="multicore_examples" linked_projects="frdmk32l3a6_erpc_matrix_multiply_rpmsg_cm0plus" path="boards/frdmk32l3a6/multicore_examples/erpc_matrix_multiply_rpmsg/cm4">
          <external path="boards/frdmk32l3a6/multicore_examples/erpc_matrix_multiply_rpmsg/cm4" type="xml">
            <files mask="erpc_matrix_multiply_rpmsg_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_erpc_matrix_multiply_rpmsg_rtos_cm4" name="erpc_matrix_multiply_rpmsg_rtos_cm4" brief="The Multicore eRPC Matrix Multiply RTOS project is a simple demonstration program that uses theMCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Callbetween cores of the multicore system. The primary core (eRPC client) releases the secondary core(eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let thesecondary core to perform the multiplication of two randomly generated matrices. The originalmatrices and the result matrix is printed out to the serial console by the primary core. Thematrix multiplication can be issued repeatedly when pressing a SW board button. RPMsg-Lite erpctransport layer is used in this example application.Shared memory usageThis multicore example uses the shared memory for data exchange. The shared memory region isdefined and the size can be adjustable in the linker file. The shared memory region start addressand the size have to be defined in linker file for each core equally. The shared memory startaddress is then exported from the linker to the application.eRPC documentationeRPC specific files are stored in: middleware/multicore_&lt;version&gt;/erpceRPC documentation is stored in: middleware/multicore_&lt;version&gt;/erpc/doceRPC is open-source project stored on github: https://github.com/EmbeddedRPC/erpceRPC documentation can be also found in: http://embeddedrpc.github.io" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="multicore_examples" linked_projects="frdmk32l3a6_erpc_matrix_multiply_rpmsg_rtos_cm0plus" path="boards/frdmk32l3a6/multicore_examples/erpc_matrix_multiply_rpmsg_rtos/cm4">
          <external path="boards/frdmk32l3a6/multicore_examples/erpc_matrix_multiply_rpmsg_rtos/cm4" type="xml">
            <files mask="erpc_matrix_multiply_rpmsg_rtos_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_ewm_cm4" name="ewm_cm4" brief="The EWM Example project is to demonstrate usage of the KSDK EWM driver.In the example, EWM counter is continuously refreshed until button is pressed.Once the button is pressed, EWM counter will expire and interrupt will be generated.After the first pressing, another interrupt can be triggered by pressing button again." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples" path="boards/frdmk32l3a6/driver_examples/ewm/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/ewm/cm4" type="xml">
            <files mask="ewm_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_fatfs_sdcard_cm4" name="fatfs_sdcard_cm4" brief="The SDCARD FATFS project is a demonstration program that uses the SDK software. Tt mounts a file system based on a SD card then does &quot;creat directory/read directory/create file/write file/read file&quot;operation. The file sdhc_config.h has default SDHC configuration which can be adjusted to let carddriver has different performance. The purpose of this example is to show how to use SDCARD driver based FATFS disk in SDK software." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="fatfs_examples/fatfs_sdcard" path="boards/frdmk32l3a6/fatfs_examples/fatfs_sdcard/cm4">
          <external path="boards/frdmk32l3a6/fatfs_examples/fatfs_sdcard/cm4" type="xml">
            <files mask="fatfs_sdcard_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_flexio_i2c_interrupt_lpi2c_transfer_cm4" name="flexio_i2c_interrupt_lpi2c_transfer_cm4" brief="The flexio_lpi2c_interrupt example shows how to use flexio i2c master  driver in interrupt way:In this example, a flexio simulated i2c master connect to a LPI2C slave" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/frdmk32l3a6/driver_examples/flexio/i2c/interrupt_lpi2c_transfer/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/flexio/i2c/interrupt_lpi2c_transfer/cm4" type="xml">
            <files mask="flexio_i2c_interrupt_lpi2c_transfer_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_flexio_i2c_read_accel_value_transfer_cm4" name="flexio_i2c_read_accel_value_transfer_cm4" brief="The flexio_i2c_read_accel_value example shows how to use FLEXIO I2C  Master driver to communicate with an i2c device: 1. How to use the flexio i2c master driver to read a i2c device who_am_I register. 2. How to use the flexio i2c master driver to write/read the device registers.In this example, the values of three-axis accelerometer print to the serial terminal on PC throughthe virtual serial port on board." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/frdmk32l3a6/driver_examples/flexio/i2c/read_accel_value_transfer/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/flexio/i2c/read_accel_value_transfer/cm4" type="xml">
            <files mask="flexio_i2c_read_accel_value_transfer_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_flexio_pwm_cm4" name="flexio_pwm_cm4" brief="This demo describes how to use SDK drivers to implement the PWM feature by FLEXIO IP module. It outputs the PWM singal with fixed frequency defined by &quot;DEMO_FLEXIO_FREQUENCY&quot; in source code and dynamic duty from 99 to 1 to one of the FLEXIO pin." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/frdmk32l3a6/driver_examples/flexio/pwm/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/flexio/pwm/cm4" type="xml">
            <files mask="flexio_pwm_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_flexio_spi_edma_lpspi_transfer_master_cm4" name="flexio_spi_edma_lpspi_transfer_master_cm4" brief="The flexio_spi_master_edma_lpspi_slave example shows how to use flexio spi master driver in edma way:In this example, a flexio simulated master connect to a lpspi slave ." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/frdmk32l3a6/driver_examples/flexio/spi/edma_lpspi_transfer/master/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/flexio/spi/edma_lpspi_transfer/master/cm4" type="xml">
            <files mask="flexio_spi_edma_lpspi_transfer_master_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_flexio_spi_edma_lpspi_transfer_slave_cm4" name="flexio_spi_edma_lpspi_transfer_slave_cm4" brief="The flexio_spi_slave_edma_lpspi_master example shows how to use flexio spi slave driver in edma way:In this example, a flexio simulated slave connect to a lpspi master." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/frdmk32l3a6/driver_examples/flexio/spi/edma_lpspi_transfer/slave/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/flexio/spi/edma_lpspi_transfer/slave/cm4" type="xml">
            <files mask="flexio_spi_edma_lpspi_transfer_slave_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_flexio_spi_int_lpspi_transfer_master_cm4" name="flexio_spi_int_lpspi_transfer_master_cm4" brief="The flexio_spi_master_interrupt_lpspi_slave example shows how to use flexio spi master driver in interrupt way. In this example, a flexio simulated master connect to a lpspi slave ." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/frdmk32l3a6/driver_examples/flexio/spi/int_lpspi_transfer/master/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/flexio/spi/int_lpspi_transfer/master/cm4" type="xml">
            <files mask="flexio_spi_int_lpspi_transfer_master_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_flexio_spi_int_lpspi_transfer_slave_cm4" name="flexio_spi_int_lpspi_transfer_slave_cm4" brief="The flexio_spi_slave_interrupt_lpspi_master example shows how to use flexio spi slave driver in interrupt way. In this example, a flexio simulated slave connect to a lpspi master." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/frdmk32l3a6/driver_examples/flexio/spi/int_lpspi_transfer/slave/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/flexio/spi/int_lpspi_transfer/slave/cm4" type="xml">
            <files mask="flexio_spi_int_lpspi_transfer_slave_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_flexio_uart_edma_transfer_cm4" name="flexio_uart_edma_transfer_cm4" brief="The flexio_uart_edma example shows how to use flexio uart driver in edma way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send back all charactersthat PC send to the board." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/frdmk32l3a6/driver_examples/flexio/uart/edma_transfer/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/flexio/uart/edma_transfer/cm4" type="xml">
            <files mask="flexio_uart_edma_transfer_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_flexio_uart_int_rb_transfer_cm4" name="flexio_uart_int_rb_transfer_cm4" brief="The flexio_uart_interrupt_ring_buffer example shows how to use flexio uart driver in interrupt way withRX ring buffer enabled:In this example, a flexio simulated uart connect to PC through USB-Serial, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/frdmk32l3a6/driver_examples/flexio/uart/int_rb_transfer/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/flexio/uart/int_rb_transfer/cm4" type="xml">
            <files mask="flexio_uart_int_rb_transfer_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_flexio_uart_interrupt_transfer_cm4" name="flexio_uart_interrupt_transfer_cm4" brief="The flexio_uart_interrupt example shows how to use flexio uart driver in interrupt way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send back all charactersthat PC send to the board. Note: two queued transfer in this example, so please input even number characters." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/frdmk32l3a6/driver_examples/flexio/uart/interrupt_transfer/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/flexio/uart/interrupt_transfer/cm4" type="xml">
            <files mask="flexio_uart_interrupt_transfer_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_flexio_uart_polling_transfer_cm4" name="flexio_uart_polling_transfer_cm4" brief="The flexio_uart_polling example shows how to use flexio uart driver in polling way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send backall characters that PC send to the board." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/frdmk32l3a6/driver_examples/flexio/uart/polling_transfer/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/flexio/uart/polling_transfer/cm4" type="xml">
            <files mask="flexio_uart_polling_transfer_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_event_cm4" name="freertos_event_cm4" brief="This document explains the freertos_event example. It shows how task waits for an event (defined setof bits in event group). This event can be set by any other process or interrupt in the system.The example application creates three tasks. Two write tasks write_task_1 and write_task_2continuously setting event bit 0 and bit 1.Read_task is waiting for any event bit and printing actual state on console. Event bits areautomatically cleared after read task is entered.Three possible states can occurre:Both bits are set.zBit B0 is set.Bit B1 is set." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="rtos_examples" path="boards/frdmk32l3a6/rtos_examples/freertos_event/cm4">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_event/cm4" type="xml">
            <files mask="freertos_event_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_generic_cm4" name="freertos_generic_cm4" brief="This document explains the freertos_generic example. It is based on code FreeRTOS documentation fromhttp://www.freertos.org/Hardware-independent-RTOS-example.html. It shows combination of severaltasks with queue, software timer, tick hook and semaphore.The example application creates three tasks. The prvQueueSendTask periodically sending data toxQueue queue. The prvQueueReceiveTask is waiting for incoming message and counting number ofreceived messages. Task prvEventSemaphoreTask is waiting for xEventSemaphore semaphore given fromvApplicationTickHook. Tick hook give semaphore every 500 ms.Other hook types used for RTOS and resource statistics are also demonstrated in example:* vApplicationIdleHook* vApplicationStackOverflowHook* vApplicationMallocFailedHook" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="rtos_examples" path="boards/frdmk32l3a6/rtos_examples/freertos_generic/cm4">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_generic/cm4" type="xml">
            <files mask="freertos_generic_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_hello_cm4" name="freertos_hello_cm4" brief="The Hello World project is a simple demonstration program that uses the SDK UART drivere incombination with FreeRTOS. The purpose of this demo is to show how to use the debug console and toprovide a simple project for debugging and further development.The example application creates one task called hello_task. This task print &quot;Hello world.&quot; messagevia debug console utility and suspend itself." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="rtos_examples" path="boards/frdmk32l3a6/rtos_examples/freertos_hello/cm4">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_hello/cm4" type="xml">
            <files mask="freertos_hello_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_lpi2c_cm4" name="freertos_lpi2c_cm4" brief="The LPI2C Example project is a demonstration program that uses the KSDK software to manipulate the Low Power Inter-Integrated Circuit.The example uses two instances of LPI2C, one in configured as master and the other one as slave.The LPI2C master sends data to LPI2C slave. The slave will check the data it receives and shows the log." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="rtos_examples" path="boards/frdmk32l3a6/rtos_examples/freertos_lpi2c/cm4">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_lpi2c/cm4" type="xml">
            <files mask="freertos_lpi2c_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_lpspi_cm4" name="freertos_lpspi_cm4" brief="The lpspi_interrupt example shows how to use LPSPI driver in interrupt way:In this example , one lpspi instance used as LPSPI master and another lpspi instance used as LPSPI slave.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="rtos_examples" path="boards/frdmk32l3a6/rtos_examples/freertos_lpspi/cm4">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_lpspi/cm4" type="xml">
            <files mask="freertos_lpspi_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_lpuart_cm4" name="freertos_lpuart_cm4" brief="The LPUART example for FreeRTOS demonstrates the possibility to use the LPUART driver in the RTOS.The example uses single instance of LPUART IP and writes string into, then reads back chars.After every 4B received, these are sent back on LPUART." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="rtos_examples" path="boards/frdmk32l3a6/rtos_examples/freertos_lpuart/cm4">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_lpuart/cm4" type="xml">
            <files mask="freertos_lpuart_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_mutex_cm4" name="freertos_mutex_cm4" brief="This document explains the freertos_mutex example. It shows how mutex manage access to commonresource (terminal output).The example application creates two identical instances of write_task. Each task will lock the mutexbefore printing and unlock it after printing to ensure that the outputs from tasks are not mixedtogether.The test_task accept output message during creation as function parameter. Output message have twoparts. If xMutex is unlocked, the write_task_1 acquire xMutex and print first part of message. Thenrescheduling is performed. In this moment scheduler check if some other task could run, but secondtask write_task+_2 is blocked because xMutex is already locked by first write task. The firstwrite_task_1 continue from last point by printing of second message part. Finaly the xMutex isunlocked and second instance of write_task_2 is executed." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="rtos_examples" path="boards/frdmk32l3a6/rtos_examples/freertos_mutex/cm4">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_mutex/cm4" type="xml">
            <files mask="freertos_mutex_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_percepio_snapshot_cm4" name="freertos_percepio_snapshot_cm4" brief="Percepio_snapshot demo shows the basic capabilities of Percepio tool.Required Segger software     - J-Link Software and Documentation Pack ( https://www.segger.com/downloads/jlink )    - J-Link OpenSDA - Board-Specific Firmwares ( https://www.segger.com/downloads/jlink )    - Tracealyzer for FreeRTOS ( http://percepio.com/download/ )Demo requires JLink connected. The JLink can be external probe or on board SDA debugger.In case of SDA debugger you have to change firmware to J-Link OpenSDA by holding board RESET button while power up board. The board is then detected as USB mass storage device and it's required to copy the .bin firmware to the device. When it's done you have to reset the board once more." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="rtos_examples/visualization" path="boards/frdmk32l3a6/rtos_examples/visualization/freertos_percepio_snapshot/cm4">
          <external path="boards/frdmk32l3a6/rtos_examples/visualization/freertos_percepio_snapshot/cm4" type="xml">
            <files mask="freertos_percepio_snapshot_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_queue_cm4" name="freertos_queue_cm4" brief="This document explains the freertos_queue example. This example introduce simple logging mechanismbased on message passing.Example could be devided in two parts. First part is logger. It contain three tasks:log_add().....Add new message into the log. Call xQueueSend function to pass new message into              message queue.log_init()....Initialize logger (create logging task and message queue log_queue).log_task()....Task responsible for printing of log output.Second part is application of this simple logging mechanism. Each of two tasks write_task_1 andwrite_task_2 print 5 messages into log." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="rtos_examples" path="boards/frdmk32l3a6/rtos_examples/freertos_queue/cm4">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_queue/cm4" type="xml">
            <files mask="freertos_queue_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_sdcard_cm4" name="freertos_sdcard_cm4" brief="The SDCARD FreeRTOS project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver with FreeRTOS in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="rtos_examples/freertos_sdcard" path="boards/frdmk32l3a6/rtos_examples/freertos_sdcard/cm4">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_sdcard/cm4" type="xml">
            <files mask="freertos_sdcard_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_segger_sysview_cm4" name="freertos_segger_sysview_cm4" brief="Segger Sysview demo shows the basic capabilities of Segger System Viewer tool.Required software:    - J-Link Software and Documentation Pack    - SystemView - Real-time analysis and visualization    - J-Link OpenSDA - Board-Specific Firmwarescan be downloaded from https://www.segger.com/downloads/jlinkDemo requires JLink connected. The JLink can be external probe or on board SDA debugger.In case of SDA debugger you have to change firmware to J-Link OpenSDA by holding board RESET button while power up board. The board is then detected as USB mass storage device and it's required to copy the .bin firmware to the device. When it's done you have to reset the board once more." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="rtos_examples/visualization" path="boards/frdmk32l3a6/rtos_examples/visualization/freertos_segger_sysview/cm4">
          <external path="boards/frdmk32l3a6/rtos_examples/visualization/freertos_segger_sysview/cm4" type="xml">
            <files mask="freertos_segger_sysview_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_sem_cm4" name="freertos_sem_cm4" brief="This document explains the freertos_sem example, what to expect when running it and a briefintroduction to the API. The freertos_sem example code shows how semaphores works. Two differenttasks are synchronized in bilateral rendezvous model.The example uses four tasks. One producer_task and three consumer_tasks. The producer_task starts bycreating of two semaphores (xSemaphore_producer and xSemaphore_consumer). These semaphores controlaccess to virtual item. The synchronization is based on bilateral rendezvous pattern. Both ofconsumer and producer must be prepared to enable transaction." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="rtos_examples" path="boards/frdmk32l3a6/rtos_examples/freertos_sem/cm4">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_sem/cm4" type="xml">
            <files mask="freertos_sem_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_sem_static_cm4" name="freertos_sem_static_cm4" brief="This document explains the freertos_sem example, what to expect when running it and a briefintroduction to the API. The freertos_sem example code shows how semaphores works. Two differenttasks are synchronized in bilateral rendezvous model.The example uses four tasks. One producer_task and three consumer_tasks. The producer_task starts bycreating of two semaphores (xSemaphore_producer and xSemaphore_consumer). These semaphores controlaccess to virtual item. The synchronization is based on bilateral rendezvous pattern. Both ofconsumer and producer must be prepared to enable transaction." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="rtos_examples" path="boards/frdmk32l3a6/rtos_examples/freertos_sem_static/cm4">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_sem_static/cm4" type="xml">
            <files mask="freertos_sem_static_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_swtimer_cm4" name="freertos_swtimer_cm4" brief="This document explains the freertos_swtimer example. It shows usage of software timer and itscallback.The example application creates one software timer SwTimer. The timer's callback SwTimerCallback isperiodically executed and text &quot;Tick.&quot; is printed to terminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="rtos_examples" path="boards/frdmk32l3a6/rtos_examples/freertos_swtimer/cm4">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_swtimer/cm4" type="xml">
            <files mask="freertos_swtimer_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_tickless_cm4" name="freertos_tickless_cm4" brief="This document explains the freertos_tickless example. It shows the CPU enter at sleep mode and then it is waked up by expired time delay that using GPT module." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="rtos_examples" path="boards/frdmk32l3a6/rtos_examples/freertos_tickless/cm4">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_tickless/cm4" type="xml">
            <files mask="freertos_tickless_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_gpio_input_interrupt_cm4" name="gpio_input_interrupt_cm4" brief="The GPIO Example project is a demonstration program that uses the KSDK software to manipulate the general-purposeoutputs.The example is supported by the set, clear, and toggle write-only registers for each port output data register. The example uses the software button to control/toggle the LED." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/gpio" path="boards/frdmk32l3a6/driver_examples/gpio/input_interrupt/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/gpio/input_interrupt/cm4" type="xml">
            <files mask="gpio_input_interrupt_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_gpio_led_output_cm4" name="gpio_led_output_cm4" brief="The GPIO Example project is a demonstration program that uses the KSDK software to manipulate the general-purposeoutputs.The example is supported by the set, clear, and toggle write-only registers for each port output data register. The example take turns to shine the LED." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/gpio" path="boards/frdmk32l3a6/driver_examples/gpio/led_output/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/gpio/led_output/cm4" type="xml">
            <files mask="gpio_led_output_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_hello_world_demo_cm4" name="hello_world_demo_cm4" brief="The Hello World demo application provides a sanity check for the new SDK build environments and board bring up. The HelloWorld demo prints the &quot;Hello World&quot; string to the terminal using the SDK UART drivers. The purpose of this demo is toshow how to use the UART, and to provide a simple project for debugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="demo_apps" path="boards/frdmk32l3a6/demo_apps/hello_world/cm4">
          <external path="boards/frdmk32l3a6/demo_apps/hello_world/cm4" type="xml">
            <files mask="hello_world_demo_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_hello_world_cm4" name="hello_world_cm4" brief="The Multicore Hello World demo application demonstrates how to set up projects for individualcores on a multicore system. In this demo, the primary core prints the &quot;Hello World from the Primary Core!&quot;string to the terminal and then releases the secondary core from the reset. The secondarycore toggles an on-board LED indicating that the secondary core is running." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="multicore_examples" linked_projects="frdmk32l3a6_hello_world_cm0plus" path="boards/frdmk32l3a6/multicore_examples/hello_world/cm4">
          <external path="boards/frdmk32l3a6/multicore_examples/hello_world/cm4" type="xml">
            <files mask="hello_world_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpadc_interrupt_cm4" name="lpadc_interrupt_cm4" brief="The lpdc_single_interrupt example shows how to use interrupt with LPADC driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the LPADC'ssample input. When running the project, typing any key into debug console would trigger the conversion. ADC watermark interrupt would be asserted once the number of datawords stored in the ADC Result FIFO is greater than watermark value.In ADC ISR, the watermark flag would be cleared by reading the conversion result value. Also, result information wouldbe printed when the execution return to the main function." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpadc" path="boards/frdmk32l3a6/driver_examples/lpadc/interrupt/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpadc/interrupt/cm4" type="xml">
            <files mask="lpadc_interrupt_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpadc_polling_cm4" name="lpadc_polling_cm4" brief="The lpadc_single_polling example shows the simplest way to use LPADC driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the LPADC'ssample input. When running the project, typing any key into debug console would trigger the conversion. The execution would check the FIFO valid flag in loop until the flag is asserted, which means the conversion is completed. Then read the conversion result value and print it to debug console.Note, the default setting of initialization for the ADC converter is just an available configuration. User can changethe configuration structure's setting in application to fit the special requirement." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpadc" path="boards/frdmk32l3a6/driver_examples/lpadc/polling/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpadc/polling/cm4" type="xml">
            <files mask="lpadc_polling_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpcmp_interrupt_cm4" name="lpcmp_interrupt_cm4" brief="The LPCMP interrupt Example shows how to use interrupt with LPCMP driver.In this example, user should indicate an input channel to capture a voltage signal (can be controlled by user) as the LPCMP's positive channel input. On the negative side, the internal 6-bit DAC is used to generate the fixed voltage abouthalf value of reference voltage.When running the project, change the input voltage of user-defined channel, then the comparator's output would changebetween logic one and zero when the user-defined channel's voltage crosses the internal DAC's value. The change ofcomparator's output would generate the falling and rising edge events with their interrupts enabled. When any LPCMP interrupt happens, the LPCMP's ISR would turn on the LED light if detecting the output's rising edge, or turn off it whendetecting the output's falling edge." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpcmp" path="boards/frdmk32l3a6/driver_examples/lpcmp/interrupt/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpcmp/interrupt/cm4" type="xml">
            <files mask="lpcmp_interrupt_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpcmp_polling_cm4" name="lpcmp_polling_cm4" brief="The LPCMP polling Example shows the simplest way to use LPCMP driver and help user with a quick start.In this example, user should indicate an input channel to capture a voltage signal (can be controlled by user) as the LPCMP's positive channel input. On the negative side, the internal 6-bit DAC is used to generate the fixed voltage abouthalf value of reference voltage.When running the project, change the input voltage of user-defined channel, then the comparator's output would changebetween logic one and zero when the user's voltage crosses the internal DAC's value. The endless loop in main() functionwould detect the logic value of comparator's output, and change the LED. The LED would be turned on when the compareoutput is logic one, or turned off when zero." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpcmp" path="boards/frdmk32l3a6/driver_examples/lpcmp/polling/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpcmp/polling/cm4" type="xml">
            <files mask="lpcmp_polling_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpi2c_edma_b2b_transfer_master_cm4" name="lpi2c_edma_b2b_transfer_master_cm4" brief="The lpi2c_edma_b2b_transfer_master example shows how to use lpi2c driver as master to do board to board transfer with EDMA:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/frdmk32l3a6/driver_examples/lpi2c/edma_b2b_transfer/master/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpi2c/edma_b2b_transfer/master/cm4" type="xml">
            <files mask="lpi2c_edma_b2b_transfer_master_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpi2c_edma_b2b_transfer_slave_cm4" name="lpi2c_edma_b2b_transfer_slave_cm4" brief="The lpi2c_edma_b2b_transfer_slave example shows how to use lpi2c driver as slave to do board to board transfer with a EDMA master:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/frdmk32l3a6/driver_examples/lpi2c/edma_b2b_transfer/slave/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpi2c/edma_b2b_transfer/slave/cm4" type="xml">
            <files mask="lpi2c_edma_b2b_transfer_slave_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpi2c_interrupt_cm4" name="lpi2c_interrupt_cm4" brief="The lpi2c_functional_interrupt example shows how to use lpi2c functional driver to build a interrupt based application:In this example , one lpi2c instance used as lpi2c master and another lpi2c instance used as lpi2c slave .1. lpi2c master send data using interrupt to lpi2c slave in interrupt .2. lpi2c master read data using interrupt from lpi2c slave in interrupt .3. The example assumes that the connection is OK between master and slave, so there's NO error handling code." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/frdmk32l3a6/driver_examples/lpi2c/interrupt/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpi2c/interrupt/cm4" type="xml">
            <files mask="lpi2c_interrupt_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpi2c_interrupt_b2b_transfer_master_cm4" name="lpi2c_interrupt_b2b_transfer_master_cm4" brief="The lpi2c_interrupt_b2b_transfer_master example shows how to use lpi2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/frdmk32l3a6/driver_examples/lpi2c/interrupt_b2b_transfer/master/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpi2c/interrupt_b2b_transfer/master/cm4" type="xml">
            <files mask="lpi2c_interrupt_b2b_transfer_master_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpi2c_interrupt_b2b_transfer_slave_cm4" name="lpi2c_interrupt_b2b_transfer_slave_cm4" brief="The lpi2c_interrupt_b2b_transfer_slave example shows how to use lpi2c driver as slave to do board to board transfer with interrupt:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/frdmk32l3a6/driver_examples/lpi2c/interrupt_b2b_transfer/slave/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpi2c/interrupt_b2b_transfer/slave/cm4" type="xml">
            <files mask="lpi2c_interrupt_b2b_transfer_slave_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpi2c_polling_b2b_transfer_master_cm4" name="lpi2c_polling_b2b_transfer_master_cm4" brief="The lpi2c_polling_b2b_transfer_master example shows how to use lpi2c driver as master to do board to board transfer using polling method:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/frdmk32l3a6/driver_examples/lpi2c/polling_b2b_transfer/master/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpi2c/polling_b2b_transfer/master/cm4" type="xml">
            <files mask="lpi2c_polling_b2b_transfer_master_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpi2c_polling_b2b_transfer_slave_cm4" name="lpi2c_polling_b2b_transfer_slave_cm4" brief="The lpi2c_polling_b2b_transfer_slave example shows how to use lpi2c driver as slave to do board to board transfer with a polling master:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/frdmk32l3a6/driver_examples/lpi2c/polling_b2b_transfer/slave/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpi2c/polling_b2b_transfer/slave/cm4" type="xml">
            <files mask="lpi2c_polling_b2b_transfer_slave_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpi2c_read_accel_value_transfer_cm4" name="lpi2c_read_accel_value_transfer_cm4" brief="The lpi2c_read_accel_value example shows how to use LPI2C driver to communicate with an lpi2c device: 1. How to use the lpi2c driver to read a lpi2c device who_am_I register. 2. How to use the lpi2c driver to write/read the device registers.In this example, the values of three-axis accelerometer print to the serial terminal on PC throughthe virtual serial port on board." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/frdmk32l3a6/driver_examples/lpi2c/read_accel_value_transfer/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpi2c/read_accel_value_transfer/cm4" type="xml">
            <files mask="lpi2c_read_accel_value_transfer_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpit_cm4" name="lpit_cm4" brief="The LPIT project is a simple example of the SDK LPIT driver. It sets up the LPIThardware block to trigger a periodic interrupt after every 1 second. When the LPIT interrupt is triggereda message a printed on the serial terminal and an LED is toggled on the board." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples" path="boards/frdmk32l3a6/driver_examples/lpit/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpit/cm4" type="xml">
            <files mask="lpit_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpspi_edma_b2b_transfer_master_cm4" name="lpspi_edma_b2b_transfer_master_cm4" brief="The lpspi_edma_b2b_transfer example shows how to use LPSPI driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_edma_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in edma . (LPSPI Slave using edma to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/frdmk32l3a6/driver_examples/lpspi/edma_b2b_transfer/master/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpspi/edma_b2b_transfer/master/cm4" type="xml">
            <files mask="lpspi_edma_b2b_transfer_master_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpspi_edma_b2b_transfer_slave_cm4" name="lpspi_edma_b2b_transfer_slave_cm4" brief="The lpspi_edma_b2b_transfer example shows how to use LPSPI driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_edma_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in edma . (LPSPI Slave using edma to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/frdmk32l3a6/driver_examples/lpspi/edma_b2b_transfer/slave/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpspi/edma_b2b_transfer/slave/cm4" type="xml">
            <files mask="lpspi_edma_b2b_transfer_slave_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpspi_interrupt_cm4" name="lpspi_interrupt_cm4" brief="The lpspi_functional_interrupt example shows how to use LPSPI driver in interrupt way:In this example , one lpspi instance used as LPSPI master and another lpspi instance used as LPSPI slave .1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/frdmk32l3a6/driver_examples/lpspi/interrupt/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpspi/interrupt/cm4" type="xml">
            <files mask="lpspi_interrupt_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpspi_interrupt_b2b_master_cm4" name="lpspi_interrupt_b2b_master_cm4" brief="The lpspi_interrupt_b2b example shows how to use LPSPI driver in interrupt way:In this example , we need two boards , one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_interrupt_b2b_master.c' includes the LPSPI master code.This example does not use the transactional API in LPSPI driver. It's a demonstration that how to use the interrupt in KSDK driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/frdmk32l3a6/driver_examples/lpspi/interrupt_b2b/master/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpspi/interrupt_b2b/master/cm4" type="xml">
            <files mask="lpspi_interrupt_b2b_master_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpspi_interrupt_b2b_slave_cm4" name="lpspi_interrupt_b2b_slave_cm4" brief="The lpspi_interrupt_b2b example shows how to use LPSPI driver in interrupt way:In this example , we need two boards , one board used as LPSPI master and another board used as LPSPI slave.The file 'dspi_interrupt_b2b_slave.c' includes the LPSPI slave code.This example does not use the transactional API in LPSPI driver. It's a demonstration that how to use the interrupt in KSDK driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/frdmk32l3a6/driver_examples/lpspi/interrupt_b2b/slave/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpspi/interrupt_b2b/slave/cm4" type="xml">
            <files mask="lpspi_interrupt_b2b_slave_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpspi_interrupt_b2b_transfer_master_cm4" name="lpspi_interrupt_b2b_transfer_master_cm4" brief="The lpspi_interrupt_b2b_transfer example shows how to use LPSPI driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_interrupt_b2b_transfer_master.c' includes the LPSPI master code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/frdmk32l3a6/driver_examples/lpspi/interrupt_b2b_transfer/master/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpspi/interrupt_b2b_transfer/master/cm4" type="xml">
            <files mask="lpspi_interrupt_b2b_transfer_master_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpspi_interrupt_b2b_transfer_slave_cm4" name="lpspi_interrupt_b2b_transfer_slave_cm4" brief="The lpspi_interrupt_b2b_transfer example shows how to use LPSPI driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_interrupt_b2b_transfer_slave.c' includes the LPSPI slave code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/frdmk32l3a6/driver_examples/lpspi/interrupt_b2b_transfer/slave/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpspi/interrupt_b2b_transfer/slave/cm4" type="xml">
            <files mask="lpspi_interrupt_b2b_transfer_slave_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpspi_polling_b2b_transfer_master_cm4" name="lpspi_polling_b2b_transfer_master_cm4" brief="The lpspi_polling_b2b_transfer example shows how to use LPSPI driver in polling way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_polling_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in polling . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/frdmk32l3a6/driver_examples/lpspi/polling_b2b_transfer/master/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpspi/polling_b2b_transfer/master/cm4" type="xml">
            <files mask="lpspi_polling_b2b_transfer_master_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpspi_polling_b2b_transfer_slave_cm4" name="lpspi_polling_b2b_transfer_slave_cm4" brief="The lpspi_polling_b2b_transfer example shows how to use LPSPI driver in polling way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_polling_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in polling . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/frdmk32l3a6/driver_examples/lpspi/polling_b2b_transfer/slave/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpspi/polling_b2b_transfer/slave/cm4" type="xml">
            <files mask="lpspi_polling_b2b_transfer_slave_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lptmr_cm4" name="lptmr_cm4" brief="The LPTMR project is a simple demonstration program of the SDK LPTMR driver. It sets up the LPTMRhardware block to trigger a periodic interrupt after every 1 second. When the LPTMR interrupt is triggereda message a printed on the UART terminal and an LED is toggled on the board." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples" path="boards/frdmk32l3a6/driver_examples/lptmr/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lptmr/cm4" type="xml">
            <files mask="lptmr_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpuart_edma_transfer_cm4" name="lpuart_edma_transfer_cm4" brief="The lpuart_edma Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/frdmk32l3a6/driver_examples/lpuart/edma_transfer/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpuart/edma_transfer/cm4" type="xml">
            <files mask="lpuart_edma_transfer_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpuart_interrupt_cm4" name="lpuart_interrupt_cm4" brief="The lpuart_functioncal_interrupt example shows how to use lpuart driver functionalAPI to receive data with interrupt method:In this example, one lpuart instance connect to PC, the board willsend back all characters that PC send to the board." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/frdmk32l3a6/driver_examples/lpuart/interrupt/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpuart/interrupt/cm4" type="xml">
            <files mask="lpuart_interrupt_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpuart_interrupt_rb_transfer_cm4" name="lpuart_interrupt_rb_transfer_cm4" brief="The lpuart_interrupt_ring_buffer Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/frdmk32l3a6/driver_examples/lpuart/interrupt_rb_transfer/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpuart/interrupt_rb_transfer/cm4" type="xml">
            <files mask="lpuart_interrupt_rb_transfer_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpuart_interrupt_transfer_cm4" name="lpuart_interrupt_transfer_cm4" brief="The lpuart_interrupt Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/frdmk32l3a6/driver_examples/lpuart/interrupt_transfer/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpuart/interrupt_transfer/cm4" type="xml">
            <files mask="lpuart_interrupt_transfer_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpuart_interrupt_transfer_seven_bits_cm4" name="lpuart_interrupt_transfer_seven_bits_cm4" brief="The lpuart_interrupt_transfer_seven_bits Example project is to demonstrate usage of the KSDK lpuart driver with seven data bits feature enabled.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters.NOTE: Please set com port format to &quot;7 data bits without parity bit&quot; in PC's com port tool" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/frdmk32l3a6/driver_examples/lpuart/interrupt_transfer_seven_bits/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpuart/interrupt_transfer_seven_bits/cm4" type="xml">
            <files mask="lpuart_interrupt_transfer_seven_bits_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpuart_polling_cm4" name="lpuart_polling_cm4" brief="The lpuart_polling Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console instantly." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/frdmk32l3a6/driver_examples/lpuart/polling/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpuart/polling/cm4" type="xml">
            <files mask="lpuart_polling_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpuart_polling_seven_bits_cm4" name="lpuart_polling_seven_bits_cm4" brief="The lpuart_polling_seven_bits Example project is to demonstrate usage of the KSDK lpuart driver with seven data bits feature enabled.In the example, you can send characters to the console back and they will be printed out onto console instantly.NOTE: Please set com port format to &quot;7 data bits without parity bit&quot; in PC's com port tool" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/frdmk32l3a6/driver_examples/lpuart/polling_seven_bits/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpuart/polling_seven_bits/cm4" type="xml">
            <files mask="lpuart_polling_seven_bits_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_mbedtls_benchmark_cm4" name="mbedtls_benchmark_cm4" brief="The mbdedTLS Benchmark demo application performs cryptographic algorithm benchmarking and prints results to theterminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="mbedtls_examples" path="boards/frdmk32l3a6/mbedtls_examples/mbedtls_benchmark/cm4">
          <external path="boards/frdmk32l3a6/mbedtls_examples/mbedtls_benchmark/cm4" type="xml">
            <files mask="mbedtls_benchmark_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_mbedtls_selftest_cm4" name="mbedtls_selftest_cm4" brief="The mbdedTLS SelfTest program performs cryptographic algorithm testing and prints results to theterminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="mbedtls_examples" path="boards/frdmk32l3a6/mbedtls_examples/mbedtls_selftest/cm4">
          <external path="boards/frdmk32l3a6/mbedtls_examples/mbedtls_selftest/cm4" type="xml">
            <files mask="mbedtls_selftest_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_mu_interrupt_core0" name="mu_interrupt_core0" brief="The mu_interrupt example shows how to use MU driver in interrupt way:In this example:1. Core 0 send message to Core 1 in interrupt mode via MU module.2. Core 1 send message back to Core 0 in interrupt mode.3. Core 0 receive message sent from Core 1 in interrupt mode." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/mu" linked_projects="frdmk32l3a6_mu_interrupt_core1" path="boards/frdmk32l3a6/driver_examples/mu/interrupt/core0">
          <external path="boards/frdmk32l3a6/driver_examples/mu/interrupt/core0" type="xml">
            <files mask="mu_interrupt_core0.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_mu_polling_core0" name="mu_polling_core0" brief="The mu_polling example shows how to use MU driver in polling way:In this example:1. Core 0 send message to Core 1 in polling mode via MU module.2. Core 1 send message back to Core 0 in polling mode.3. Core 0 receive message sent from Core 1 in polling mode." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/mu" linked_projects="frdmk32l3a6_mu_polling_core1" path="boards/frdmk32l3a6/driver_examples/mu/polling/core0">
          <external path="boards/frdmk32l3a6/driver_examples/mu/polling/core0" type="xml">
            <files mask="mu_polling_core0.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_multicore_manager_cm4" name="multicore_manager_cm4" brief="The Multicore Manager example application demonstrates advanced features of the MCMgr component.&#10;In this demo, the primary core prints the &quot;Hello World from the Primary Core!&quot; string to the terminal&#10;and then releases the secondary core from the reset. The secondary&#10;core toggles an on-board LED indicating that the secondary core is running. It is also possible to&#10;stop/start the secondary core during the runtime by pressing on-board buttons. The&#10;on-board LED then indicates the change, it stops/starts toggling accordingly.&#10;&#10;This application also shows how to use the Multicore Manager for&#10;remote core monitoring and handling of events such as application, CoreUp, CoreDown and exception events.&#10;Application-specific callback functions for events are registered by the MCMGR_RegisterEvent() API&#10;on the primary core. Triggering these events is done using the MCMGR_TriggerEvent() API on the&#10;secondary core. While CoreUp, CoreDown events are triggered from startup and MCMGR code, the&#10;application event is triggered from the application.&#10;The exception event is triggered in the secondary application after 100 LED toggles by trying&#10;to write to flash. This raises the exception on the secondary core and triggers the&#10;RemoteExceptionEvent on the primary core.&#10;" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="multicore_examples" linked_projects="frdmk32l3a6_multicore_manager_cm0plus" path="boards/frdmk32l3a6/multicore_examples/multicore_manager/cm4">
          <external path="boards/frdmk32l3a6/multicore_examples/multicore_manager/cm4" type="xml">
            <files mask="multicore_manager_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_pflash_cm4" name="pflash_cm4" brief="The pflash example shows how to use flash driver to operate program flash:" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/flash" path="boards/frdmk32l3a6/driver_examples/flash/pflash/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/flash/pflash/cm4" type="xml">
            <files mask="pflash_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_power_mode_switch_cm4" name="power_mode_switch_cm4" brief="The IEE IEER MMDC demo application demonstrates usage of the IEE and IEER driver. The Inline Encryption Engine (IEE) together with Inline Encryption Engine Router (IEER) provides a means to perform inline encryption and decryption of information transferred over external memory interfaces. In this demo application encrypted read and write is performed to external DDR Ram using MMDC. At first IEE is configured to perform AES XTS encryprion/decryption using KEY1 &amp; KEY2 for region 3 (highest priority region). Offset setting for region 3 is calculated using IEE_GetOffset() function. IEE uses offset to determine the physical address of the memory location that you are accessing. Offset is added to IEE address when performing read or write access to IEE. Then IEER is set to cover all its address space for region 3. Now all data written/read to/from IEE address will be encrypted/decrypted and written/read to/from physical DDR memory. Then test data are written over IEE to DDR. After the successful write, data are read directly from the DDR (without using IEE) to see that they are crypted. Then read using IEE is performed and the data are compared to written data in the begining of this demo." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="demo_apps" linked_projects="frdmk32l3a6_power_mode_switch_cm0plus" path="boards/frdmk32l3a6/demo_apps/power_mode_switch/cm4">
          <external path="boards/frdmk32l3a6/demo_apps/power_mode_switch/cm4" type="xml">
            <files mask="power_mode_switch_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_qca_demo_cm4" name="qca_demo_cm4" brief="The qca_demo example provides basic commands to show the functionality of qca_wifi stack.The default IP configuration is &quot;addr: 192.168.1.10 mask: 255.255.255.0 gw: 192.168.1.1&quot;.To obtain a valid IP configuration from DHCP server, press 'd' after WiFi connection is established." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="wifi_qca_examples" path="boards/frdmk32l3a6/wifi_qca_examples/qca_demo/cm4">
          <external path="boards/frdmk32l3a6/wifi_qca_examples/qca_demo/cm4" type="xml">
            <files mask="qca_demo_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_qca_throughput_cm4" name="qca_throughput_cm4" brief="The qca_throughput demo tests transfer throughput." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="wifi_qca_examples" path="boards/frdmk32l3a6/wifi_qca_examples/qca_throughput/cm4">
          <external path="boards/frdmk32l3a6/wifi_qca_examples/qca_throughput/cm4" type="xml">
            <files mask="qca_throughput_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_rpmsg_lite_pingpong_cm4" name="rpmsg_lite_pingpong_cm4" brief="The Multicore RPMsg-Lite pingpong project is a simple demonstration program that uses theMCUXpresso SDK software and the RPMsg-Lite library and shows how to implement the inter-corecommunicaton between cores of the multicore system. The primary core releases the secondary corefrom the reset and then the inter-core communication is established. Once the RPMsg is initializedand endpoints are created the message exchange starts, incrementing a virtual counter that is partof the message payload. The message pingpong finishes when the counter reaches the value of 100.Then the RPMsg-Lite is deinitialized and the procedure of the data exchange is repeated again.Shared memory usageThis multicore example uses the shared memory for data exchange. The shared memory region isdefined and the size can be adjustable in the linker file. The shared memory region start addressand the size have to be defined in linker file for each core equally. The shared memory startaddress is then exported from the linker to the application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="multicore_examples" linked_projects="frdmk32l3a6_rpmsg_lite_pingpong_cm0plus" path="boards/frdmk32l3a6/multicore_examples/rpmsg_lite_pingpong/cm4">
          <external path="boards/frdmk32l3a6/multicore_examples/rpmsg_lite_pingpong/cm4" type="xml">
            <files mask="rpmsg_lite_pingpong_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_rpmsg_lite_pingpong_rtos_cm4" name="rpmsg_lite_pingpong_rtos_cm4" brief="The Multicore RPMsg-Lite pingpong RTOS project is a simple demonstration program that uses theMCUXpresso SDK software and the RPMsg-Lite library and shows how to implement the inter-corecommunicaton between cores of the multicore system. The primary core releases the secondary corefrom the reset and then the inter-core communication is established. Once the RPMsg is initializedand endpoints are created the message exchange starts, incrementing a virtual counter that is partof the message payload. The message pingpong finishes when the counter reaches the value of 100.Then the RPMsg-Lite is deinitialized and the procedure of the data exchange is repeated again.Shared memory usageThis multicore example uses the shared memory for data exchange. The shared memory region isdefined and the size can be adjustable in the linker file. The shared memory region start addressand the size have to be defined in linker file for each core equally. The shared memory startaddress is then exported from the linker to the application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="multicore_examples" linked_projects="frdmk32l3a6_rpmsg_lite_pingpong_rtos_cm0plus" path="boards/frdmk32l3a6/multicore_examples/rpmsg_lite_pingpong_rtos/cm4">
          <external path="boards/frdmk32l3a6/multicore_examples/rpmsg_lite_pingpong_rtos/cm4" type="xml">
            <files mask="rpmsg_lite_pingpong_rtos_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_rtc_cm4" name="rtc_cm4" brief="The RTC project is a simple demonstration program of the SDK RTC driver. It sets up the RTChardware block to trigger an alarm after a user specified time period. The test will set the currentdate and time to a predefined value. The alarm will be set with reference to this predefined dateand time." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples" path="boards/frdmk32l3a6/driver_examples/rtc/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/rtc/cm4" type="xml">
            <files mask="rtc_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_rtc_func_cm4" name="rtc_func_cm4" brief="The RTC demo application demonstrates the important features of the RTC Module by using the RTC Peripheral Driver.The RTC demo supports the following features:- Calendar  + Get the current date time with Year, Month, Day, Hour, Minute, and Second.  + Set the current date time with Year, Month, Day, Hour, Minute, and Second.- Alarm  + Set the alarm based on the current time.  + Application prints a notification when the alarm expires.- Seconds interrupt  + Use second interrupt function to display a digital time blink every second." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="demo_apps" path="boards/frdmk32l3a6/demo_apps/rtc_func/cm4">
          <external path="boards/frdmk32l3a6/demo_apps/rtc_func/cm4" type="xml">
            <files mask="rtc_func_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_sdcard_fatfs_freertos_cm4" name="sdcard_fatfs_freertos_cm4" brief="The SDCARD FATFS FREERTOS project is a demonstration program that uses the SDK software. The purpose of this example is to show how to use SDCARD with fatfs and freertos." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="demo_apps/sdcard_fatfs_freertos" path="boards/frdmk32l3a6/demo_apps/sdcard_fatfs_freertos/cm4">
          <external path="boards/frdmk32l3a6/demo_apps/sdcard_fatfs_freertos/cm4" type="xml">
            <files mask="sdcard_fatfs_freertos_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_sdcard_interrupt_cm4" name="sdcard_interrupt_cm4" brief="The SDCARD Interrupt project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver andshow how to use interrupt based transfer API in SDHC driver in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/sdcard" path="boards/frdmk32l3a6/driver_examples/sdcard/interrupt/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/sdcard/interrupt/cm4" type="xml">
            <files mask="sdcard_interrupt_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_sdcard_polling_cm4" name="sdcard_polling_cm4" brief="The SDCARD Polling project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver andshow how to use polling based transfer API in SDHC driver in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/sdcard" path="boards/frdmk32l3a6/driver_examples/sdcard/polling/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/sdcard/polling/cm4" type="xml">
            <files mask="sdcard_polling_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_sema42_dual_core_core0" name="sema42_dual_core_core0" brief="The sema42 example shows how to use SEMA42 driver to lock and unlock a sema gate:In this example:1. Firstly, Core 0 turn on LED  and lock a sema gate then boot up Core 1 wake up.2. Core 1 must be wait until Core 0 unlocks this sema gate to lock it.3. After user press any key in terminal window, the sema gate will be unlocked by core 0,then core 1 will lock it and turn off the LEDIf the board does not have LED to show the status, then core 1 will send a flagto core 0 when core 1 has locked the sema gate. Core 0 outputs the success logafter it received the flag." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/sema42" linked_projects="frdmk32l3a6_sema42_dual_core_core1" path="boards/frdmk32l3a6/driver_examples/sema42/dual_core/core0">
          <external path="boards/frdmk32l3a6/driver_examples/sema42/dual_core/core0" type="xml">
            <files mask="sema42_dual_core_core0.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_shell_cm4" name="shell_cm4" brief="The Shell Demo application demonstrates to control Leds by commands." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="demo_apps" path="boards/frdmk32l3a6/demo_apps/shell/cm4">
          <external path="boards/frdmk32l3a6/demo_apps/shell/cm4" type="xml">
            <files mask="shell_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_tpm_combine_pwm_cm4" name="tpm_combine_pwm_cm4" brief="The TPM project is a demonstration program of generating a combined PWM signal by the SDK TPM driver. It sets up the TPMhardware block to output PWM signals on two TPM channels. The example also show's the complementary mode of operationand deadtime insertion.On boards that have 2 LEDs connected to the TPM pins, the user will seea change in LED brightness if user enter different values.And if the board do not support LEDs to show, the outputs can be observed by oscilloscope." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/tpm" path="boards/frdmk32l3a6/driver_examples/tpm/combine_pwm/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/tpm/combine_pwm/cm4" type="xml">
            <files mask="tpm_combine_pwm_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_tpm_dual_edge_capture_cm4" name="tpm_dual_edge_capture_cm4" brief="The TPM project is a demonstration program of the SDK TPM driver's dual-edge capture feature.This feature is available only on certain SoC's.The example sets up a TPM channel-pair for dual-edge capture. Once the input signal is received,this example will print the capture values and period of the input signal on the terminal window." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/tpm" path="boards/frdmk32l3a6/driver_examples/tpm/dual_edge_capture/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/tpm/dual_edge_capture/cm4" type="xml">
            <files mask="tpm_dual_edge_capture_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_tpm_input_capture_cm4" name="tpm_input_capture_cm4" brief="The TPM project is a demonstration program of the SDK TPM driver's input capture feature.The example sets up a TPM channel for dual-edge capture. Once the input signal is received,this example will print the capture value." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/tpm" path="boards/frdmk32l3a6/driver_examples/tpm/input_capture/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/tpm/input_capture/cm4" type="xml">
            <files mask="tpm_input_capture_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_tpm_output_compare_cm4" name="tpm_output_compare_cm4" brief="The TPM project is a demonstration program of the SDK TPM driver's output compare feature.It sets up one TPM channel to toggle the output when a match occurs with the channel value. The usershould probe the TPM output with a oscilloscope to see the signal toggling." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/tpm" path="boards/frdmk32l3a6/driver_examples/tpm/output_compare/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/tpm/output_compare/cm4" type="xml">
            <files mask="tpm_output_compare_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_tpm_pwm_twochannel_cm4" name="tpm_pwm_twochannel_cm4" brief="The TPM project is a simple demonstration program of the SDK TPM driver. It sets up the TPMhardware block to output PWM signals on two TPM channels. The PWM dutycycle on both channelsis manually updated. On boards that have an LED connected to the TPM pins, the user will seea change in LED brightness if user enter different values." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/tpm" path="boards/frdmk32l3a6/driver_examples/tpm/pwm_twochannel/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/tpm/pwm_twochannel/cm4" type="xml">
            <files mask="tpm_pwm_twochannel_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_tpm_simple_pwm_cm4" name="tpm_simple_pwm_cm4" brief="The TPM project is a simple demonstration program of the SDK TPM driver. It sets up the TPMhardware block to output a center-aligned PWM signal. The PWM dutycycle is manually updated.On boards that have an LED connected to the TPM pins, the user will see a change in LEDbrightness if user enter different values." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/tpm" path="boards/frdmk32l3a6/driver_examples/tpm/simple_pwm/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/tpm/simple_pwm/cm4" type="xml">
            <files mask="tpm_simple_pwm_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_tpm_timer_cm4" name="tpm_timer_cm4" brief="The TPM project is a simple demonstration program of the SDK TPM driver to use TPM as a timer.It sets up the TPM hardware block to trigger an interrupt every 1 millisecond.When the TPM interrupt is triggered a message a printed on the UART terminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/tpm" path="boards/frdmk32l3a6/driver_examples/tpm/timer/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/tpm/timer/cm4" type="xml">
            <files mask="tpm_timer_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_trng_random_cm4" name="trng_random_cm4" brief="The True Random Number Generator (TRNG) is a hardware accelerator module that generates a 512-bitentropy as needed by an entropy consuming module or by other post processing functions. The TRNGExample project is a demonstration program that uses the KSDK software to generate random numbersand prints them to the terminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples/trng" path="boards/frdmk32l3a6/driver_examples/trng/random/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/trng/random/cm4" type="xml">
            <files mask="trng_random_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_tstmr_cm4" name="tstmr_cm4" brief="The tstmr example shows the usage of TSTMR driver in application. The TSTMR module is a free running incrementing counter that starts running after system reset de-assertion and can be read at any time by the software for determining the software ticks.The TSTMR runs off the 1 MHz clock and resets on every system reset.In this example, it would output a time stamp information when the application is ready. And then, delay for 1 second with TSTMR_DelayUs() function. Before and after the delay, it would output the two time stamps information again." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples" path="boards/frdmk32l3a6/driver_examples/tstmr/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/tstmr/cm4" type="xml">
            <files mask="tstmr_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_wdog32_cm4" name="wdog32_cm4" brief="The WDOG32 Example project is to demonstrate usage of the KSDK wdog32 driver.In this example, fast testing is first implemented to test the wdog32.After this, refreshing the watchdog in None-window mode and window mode is executed.Note wdog32 is disabled in SystemInit function which means wdog32 is disabledafter chip emerges from reset." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples" path="boards/frdmk32l3a6/driver_examples/wdog32/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/wdog32/cm4" type="xml">
            <files mask="wdog32_cm4.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_xrdc_cm4" name="xrdc_cm4" brief="The xrdc example shows how to control the memory and peripheral accesspolicy using XRDC.In this example, one peripheral and a memory region are set to unaccessible, thenthe hardfault occurs." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="driver_examples" path="boards/frdmk32l3a6/driver_examples/xrdc/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/xrdc/cm4" type="xml">
            <files mask="xrdc_cm4.xml"/>
          </external>
        </example>
      </examples>
    </board>
    <board id="frdmk32l3a6_agm01" name="FRDM-K32L3A6-AGM01" href="http://www.nxp.com/products/sensors/sensor-toolbox-sensor-development-ecosystem/evaluation-boards:SNSTOOLBOX" version="1.0.0" package="K32L3A60VPJ1A" type="kit">
      <description>
Sensor Toolbox Development Platform for FXAS21002C and FXOS8700C 9-Axis Solution
        </description>
      <image path="docs/images" type="image">
        <files mask="FRDM-K32L3A6-AGM01.gif"/>
      </image>
      <metadataSet>
        <metadata key="vendor" value="NXP"/>
        <metadata key="html">
          <specific>
            <content>
FRDM-K32L3A6 with FRDM-STBC-AGM01 Custom Kit (FRDM-STBC-AGM01 Sensor Shield Development Board with FRDM-K32L3A6 Board):
&lt;ul&gt;
&lt;li&gt; FRDM-STBC-AGM01 Sensor Shield board is a sensor expansion board enabling NXP’s 9-axis solution (FXAS21002C 3-Axis Gyroscope with FXOS8700CQ 3-Axis Accelerometer + 3-Axis Magnetometer).&lt;/li&gt;
&lt;/ul&gt;
</content>
          </specific>
        </metadata>
      </metadataSet>
      <examples>
        <example id="frdmk32l3a6_agm01_fxas21002_fifo" name="fxas21002_fifo" brief="The FXAS21002 FIFO example application demonstrates the use of the FXAS21002 sensor in Buffered (FIFO) Mode.The example demonstrates configuration of all registers reguired to put the sensor in FIFO Mode and read out samples.The sensor reads samples and are buffered upto the configured Water Mark Level and then a Flag is set.The application consistently checks the Flag and when set, reads out all(count=Water Mark Level) samples." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="issdk/sensors" path="boards/frdmk32l3a6_agm01/issdk_examples/sensors/fxas21002/fxas21002_fifo/cm4">
          <external path="boards/frdmk32l3a6_agm01/issdk_examples/sensors/fxas21002/fxas21002_fifo/cm4" type="xml">
            <files mask="fxas21002_fifo.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_agm01_fxas21002_poll" name="fxas21002_poll" brief="The FXAS21002 Poll example application demonstrates the use of the FXAS21002 sensor in the Poll (Non-Buffered) Mode. The example demonstrates configuration of all registers reguired to put the sensor into Poll Mode and read out a sample." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="issdk/sensors" path="boards/frdmk32l3a6_agm01/issdk_examples/sensors/fxas21002/fxas21002_poll/cm4">
          <external path="boards/frdmk32l3a6_agm01/issdk_examples/sensors/fxas21002/fxas21002_poll/cm4" type="xml">
            <files mask="fxas21002_poll.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_agm01_fxos8700_fifo" name="fxos8700_fifo" brief="The FXAS8700 FIFO example application demonstrates the use of the FXAS8700 sensor in Buffered (FIFO) Mode.The example demonstrates configuration of all registers reguired to put the sensor in FIFO Mode and read out samples.The sensor reads samples and are buffered upto the configured Water Mark Level and then a Flag is set.The application consistently checks the Flag and when set, reads out all(count=Water Mark Level) samples." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="issdk/sensors" path="boards/frdmk32l3a6_agm01/issdk_examples/sensors/fxos8700/fxos8700_fifo/cm4">
          <external path="boards/frdmk32l3a6_agm01/issdk_examples/sensors/fxos8700/fxos8700_fifo/cm4" type="xml">
            <files mask="fxos8700_fifo.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_agm01_fxos8700_poll" name="fxos8700_poll" brief="The FXOS8700 Poll example application demonstrates the use of the FXOS8700 sensor in the Poll (Non-Buffered) Mode. The example demonstrates configuration of all registers reguired to put the sensor into Poll Mode and read out a sample." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armcc compiler_gcc compiler_iar" category="issdk/sensors" path="boards/frdmk32l3a6_agm01/issdk_examples/sensors/fxos8700/fxos8700_poll/cm4">
          <external path="boards/frdmk32l3a6_agm01/issdk_examples/sensors/fxos8700/fxos8700_poll/cm4" type="xml">
            <files mask="fxos8700_poll.xml"/>
          </external>
        </example>
      </examples>
    </board>
  </boards>
  <devices>
    <device id="K32L3A60xxx" name="K32L3A60" href="http://www.nxp.com/kinetis" version="1.0.0" full_name="K32L3A60xxx" family="K32L3A60" platform="Kinetis">
      <description>K32L3A60: Kinetis® K32L3A60 72MHz, 386KB SRAM Microcontrollers (MCUs) based on ARM® Cortex®-M4 Core and ARM® Cortex®-M0P Core</description>
      <image path="docs/images" type="image">
        <files mask="device.jpg"/>
      </image>
      <metadataSet>
        <metadata key="USB_KHCI_COUNT" value="1"/>
        <metadata key="compatible_device.segger" value="K32L3A60"/>
        <metadata key="html">
          <specific>
            <content>The K32L3A60 are ARM Cortex-M4 and ARM Cortex-M0P based microcontrollers for embedded applications.</content>
          </specific>
        </metadata>
        <metadata key="vendor" value="NXP"/>
      </metadataSet>
      <core id="cm0plus_K32L3A60xxx" name="cm0plus" fpu="false" type="cm0plus" slave_roles="M0SLAVE" boot_role="primary_secondary"/>
      <core id="cm4_K32L3A60xxx" name="cm4" fpu="true" type="cm4" boot_role="primary"/>
      <memory>
        <memoryBlock id="PROGRAM_FLASH_cm4_K32L3A60xxx" name="PROGRAM_FLASH_cm4" addr="00000000" size="00100000" type="Flash" access="RO"/>
        <memoryBlock id="PROGRAM_FLASH_cm0plus_K32L3A60xxx" name="PROGRAM_FLASH_cm0plus" addr="01000000" size="00040000" type="Flash" access="RO"/>
        <memoryBlock id="SRAM_DTC_cm4_K32L3A60xxx" name="SRAM_DTC_cm4" addr="20000000" size="00030000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM_TCM_cm0plus_K32L3A60xxx" name="SRAM_TCM_cm0plus" addr="09000000" size="00020000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM_ITC_cm4_K32L3A60xxx" name="SRAM_ITC_cm4" addr="08000000" size="00010000" type="RAM" access="RW"/>
        <memoryBlock id="FLEX_RAM_K32L3A60xxx" name="FLEX_RAM" addr="48000000" size="00001000" type="RAM" access="RW"/>
        <memoryBlock id="USB_RAM_K32L3A60xxx" name="USB_RAM" addr="48010000" size="00000800" type="RAM" access="RW"/>
      </memory>
      <total_memory flash_size_kb="1280" ram_size_kb="384"/>
      <package id="K32L3A60VPJ1A" name="K32L3A60VPJ1A"/>
      <evaluation_boards>
        <evaluation_board name="frdmk32l3a6"/>
      </evaluation_boards>
      <debug_configurations>
        <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
          <params>
            <params id="internal.attach.slave.release.K32L3A60xxx" name="internal.attach.slave" value="true"/>
            <params id="internal.multi.swd.release.K32L3A60xxx" name="internal.multi.swd" value="true"/>
            <params id="internal.wiretype.release.K32L3A60xxx" name="internal.wiretype" value="SWD*,JTAG"/>
            <params id="internal.has_swo.release.K32L3A60xxx" name="internal.has_swo" value="true"/>
            <params id="internal.connect.script.debug.mcuxpresso.K32L3A60xxx" name="internal.connect.script" value="K32L3Aconnect.scp"/>
          </params>
          <drivers>
            <driver id_refs="PROGRAM_FLASH_cm4_K32L3A60xxx">
              <driverBinary path="devices/K32L3A60/mcuxpresso" type="binary">
                <files mask="FTFE_4K_K32L3A_cm4.cfx"/>
              </driverBinary>
            </driver>
            <driver id_refs="PROGRAM_FLASH_cm0plus_K32L3A60xxx">
              <driverBinary path="devices/K32L3A60/mcuxpresso" type="binary">
                <files mask="FTFE_2K_K32L3A_cm0plus.cfx"/>
              </driverBinary>
            </driver>
          </drivers>
        </debug_configuration>
      </debug_configurations>
      <linkerSettings nature="c_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="8"/>
        <linker property="data_align" value="8"/>
        <linker property="bss_align" value="8"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
      <linkerSettings nature="cpp_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="8"/>
        <linker property="data_align" value="8"/>
        <linker property="bss_align" value="8"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
    </device>
  </devices>
  <components>
    <component id="project_template.frdmk32l3a6.K32L3A60" name="frdmk32l3a6" version="1.0.0" devices="K32L3A60xxx" dependency="component.lists.K32L3A60 component.lpuart_adapter.K32L3A60 component.serial_manager.K32L3A60 component.serial_manager_uart.K32L3A60 platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.devices.K32L3A60_startup.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60 platform.drivers.gpio.K32L3A60 platform.drivers.lpuart.K32L3A60 platform.drivers.msmc.K32L3A60 platform.drivers.port.K32L3A60 platform.utilities.assert.K32L3A60 utility.debug_console.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="Board Support/SDK Project Template" user_visible="true" type="project_template">
      <source path="boards/frdmk32l3a6/project_template" target_path="board" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="peripherals.c"/>
        <files mask="pin_mux.c"/>
      </source>
      <source path="boards/frdmk32l3a6/project_template" target_path="board" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="peripherals.h"/>
        <files mask="pin_mux.h"/>
      </source>
    </component>
    <component id="platform.CMSIS.K32L3A60" name="CMSIS" version="5.1.1" devices="K32L3A60xxx" dependency="platform.CMSIS_Driver platform.CMSIS_Driver_Include.CAN_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.Common_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.Ethernet_MAC_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.Ethernet_PHY_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.Flash_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.I2C_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.MCI_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.NAND_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.SAI_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.SPI_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.USART_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.USB_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.USB_Device_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.USB_Host_CMSISInclude.K32L3A60 platform.Include_common.K32L3A60" user_visible="true" type="CMSIS">
      <source path="CMSIS/Include" target_path="src" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_math.h"/>
        <files mask="cmsis_armcc.h"/>
        <files mask="cmsis_armclang.h"/>
        <files mask="cmsis_compiler.h"/>
        <files mask="cmsis_gcc.h"/>
        <files mask="cmsis_iccarm.h"/>
        <files mask="cmsis_version.h"/>
        <files mask="core_armv8mbl.h"/>
        <files mask="core_armv8mml.h"/>
        <files mask="core_cm0.h"/>
        <files mask="core_cm0plus.h"/>
        <files mask="core_cm23.h"/>
        <files mask="core_cm3.h"/>
        <files mask="core_cm33.h"/>
        <files mask="core_cm4.h"/>
        <files mask="core_cm7.h"/>
        <files mask="core_dsp.h"/>
        <files mask="core_sc000.h"/>
        <files mask="core_sc300.h"/>
        <files mask="mpu_armv7.h"/>
        <files mask="mpu_armv8.h"/>
        <files mask="tz_context.h"/>
      </source>
      <source path="CMSIS" target_path="src" type="doc">
        <files mask="LICENSE.txt"/>
      </source>
    </component>
    <component id="platform.CMSIS_DSP_Lib.K32L3A60" name="CMSIS_DSP_Lib" version="5.1.1" devices="K32L3A60xxx" user_visible="false" type="CMSIS">
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example" target_path="src" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM0" target_path="src" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM0" target_path="src" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM3" target_path="src" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM3" target_path="src" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM4_FP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM4_FP" target_path="src" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM7_SP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM7_SP" target_path="src" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example/RTE" target_path="src" type="c_include">
        <files mask="RTE_Components.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example" target_path="src" type="configuration">
        <files mask="arm_class_marks_example.ini"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example" target_path="src" type="project">
        <files mask="arm_class_marks_example.uvoptx"/>
        <files mask="arm_class_marks_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_class_marks_example" target_path="src" type="src">
        <files mask="arm_class_marks_example_f32.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example" target_path="src" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM0" target_path="src" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM0" target_path="src" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM3" target_path="src" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM3" target_path="src" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM4_FP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM4_FP" target_path="src" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM7_SP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM7_SP" target_path="src" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example/RTE" target_path="src" type="c_include">
        <files mask="RTE_Components.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example" target_path="src" type="configuration">
        <files mask="arm_convolution_example.ini"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example" target_path="src" type="project">
        <files mask="arm_convolution_example.uvoptx"/>
        <files mask="arm_convolution_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example" target_path="src" type="src">
        <files mask="arm_convolution_example_f32.c"/>
        <files mask="math_helper.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_convolution_example" target_path="src" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example" target_path="src" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM0" target_path="src" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM0" target_path="src" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM3" target_path="src" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM3" target_path="src" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM4_FP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM4_FP" target_path="src" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM7_SP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM7_SP" target_path="src" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example/RTE" target_path="src" type="c_include">
        <files mask="RTE_Components.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example" target_path="src" type="configuration">
        <files mask="arm_dotproduct_example.ini"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example" target_path="src" type="project">
        <files mask="arm_dotproduct_example.uvoptx"/>
        <files mask="arm_dotproduct_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_dotproduct_example" target_path="src" type="src">
        <files mask="arm_dotproduct_example_f32.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example" target_path="src" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM0" target_path="src" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM0" target_path="src" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM3" target_path="src" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM3" target_path="src" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM4_FP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM4_FP" target_path="src" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM7_SP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM7_SP" target_path="src" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example/RTE" target_path="src" type="c_include">
        <files mask="RTE_Components.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example" target_path="src" type="src">
        <files mask="arm_fft_bin_data.c"/>
        <files mask="arm_fft_bin_example_f32.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example" target_path="src" type="configuration">
        <files mask="arm_fft_bin_example.ini"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fft_bin_example" target_path="src" type="project">
        <files mask="arm_fft_bin_example.uvoptx"/>
        <files mask="arm_fft_bin_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example" target_path="src" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example/RTE/Device/ARMCM0" target_path="src" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example/RTE/Device/ARMCM0" target_path="src" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example/RTE/Device/ARMCM3" target_path="src" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example/RTE/Device/ARMCM3" target_path="src" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example/RTE/Device/ARMCM4_FP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example/RTE/Device/ARMCM4_FP" target_path="src" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example/RTE/Device/ARMCM7_SP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example/RTE/Device/ARMCM7_SP" target_path="src" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example/RTE" target_path="src" type="c_include">
        <files mask="RTE_Components.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example" target_path="src" type="src">
        <files mask="arm_fir_data.c"/>
        <files mask="arm_fir_example_f32.c"/>
        <files mask="math_helper.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example" target_path="src" type="configuration">
        <files mask="arm_fir_example.ini"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example" target_path="src" type="project">
        <files mask="arm_fir_example.uvoptx"/>
        <files mask="arm_fir_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_fir_example" target_path="src" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example" target_path="src" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM0" target_path="src" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM0" target_path="src" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM3" target_path="src" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM3" target_path="src" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM4_FP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM4_FP" target_path="src" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM7_SP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM7_SP" target_path="src" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example/RTE" target_path="src" type="c_include">
        <files mask="RTE_Components.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example" target_path="src" type="src">
        <files mask="arm_graphic_equalizer_data.c"/>
        <files mask="arm_graphic_equalizer_example_q31.c"/>
        <files mask="math_helper.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example" target_path="src" type="configuration">
        <files mask="arm_graphic_equalizer_example.ini"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example" target_path="src" type="project">
        <files mask="arm_graphic_equalizer_example.uvoptx"/>
        <files mask="arm_graphic_equalizer_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_graphic_equalizer_example" target_path="src" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example" target_path="src" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM0" target_path="src" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM0" target_path="src" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM3" target_path="src" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM3" target_path="src" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM4_FP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM4_FP" target_path="src" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM7_SP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM7_SP" target_path="src" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example/RTE" target_path="src" type="c_include">
        <files mask="RTE_Components.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example" target_path="src" type="src">
        <files mask="arm_linear_interp_data.c"/>
        <files mask="arm_linear_interp_example_f32.c"/>
        <files mask="math_helper.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example" target_path="src" type="configuration">
        <files mask="arm_linear_interp_example.ini"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example" target_path="src" type="project">
        <files mask="arm_linear_interp_example.uvoptx"/>
        <files mask="arm_linear_interp_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_linear_interp_example" target_path="src" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example" target_path="src" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM0" target_path="src" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM0" target_path="src" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM3" target_path="src" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM3" target_path="src" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM4_FP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM4_FP" target_path="src" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM7_SP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM7_SP" target_path="src" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example/RTE" target_path="src" type="c_include">
        <files mask="RTE_Components.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example" target_path="src" type="configuration">
        <files mask="arm_matrix_example.ini"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example" target_path="src" type="project">
        <files mask="arm_matrix_example.uvoptx"/>
        <files mask="arm_matrix_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example" target_path="src" type="src">
        <files mask="arm_matrix_example_f32.c"/>
        <files mask="math_helper.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_matrix_example" target_path="src" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example" target_path="src" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM0" target_path="src" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM0" target_path="src" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM3" target_path="src" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM3" target_path="src" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM4_FP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM4_FP" target_path="src" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM7_SP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM7_SP" target_path="src" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example/RTE" target_path="src" type="c_include">
        <files mask="RTE_Components.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example" target_path="src" type="src">
        <files mask="arm_signal_converge_data.c"/>
        <files mask="arm_signal_converge_example_f32.c"/>
        <files mask="math_helper.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example" target_path="src" type="configuration">
        <files mask="arm_signal_converge_example.ini"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example" target_path="src" type="project">
        <files mask="arm_signal_converge_example.uvoptx"/>
        <files mask="arm_signal_converge_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_signal_converge_example" target_path="src" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example" target_path="src" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM0" target_path="src" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM0" target_path="src" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM3" target_path="src" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM3" target_path="src" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM4_FP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM4_FP" target_path="src" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM7_SP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM7_SP" target_path="src" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example/RTE" target_path="src" type="c_include">
        <files mask="RTE_Components.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example" target_path="src" type="configuration">
        <files mask="arm_sin_cos_example.ini"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example" target_path="src" type="project">
        <files mask="arm_sin_cos_example.uvoptx"/>
        <files mask="arm_sin_cos_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_sin_cos_example" target_path="src" type="src">
        <files mask="arm_sin_cos_example_f32.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example" target_path="src" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example/RTE/Device/ARMCM0" target_path="src" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example/RTE/Device/ARMCM0" target_path="src" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example/RTE/Device/ARMCM3" target_path="src" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example/RTE/Device/ARMCM3" target_path="src" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example/RTE/Device/ARMCM4_FP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example/RTE/Device/ARMCM4_FP" target_path="src" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example/RTE/Device/ARMCM7_SP" target_path="src" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example/RTE/Device/ARMCM7_SP" target_path="src" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example/RTE" target_path="src" type="c_include">
        <files mask="RTE_Components.h"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example" target_path="src" type="configuration">
        <files mask="arm_variance_example.ini"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example" target_path="src" type="project">
        <files mask="arm_variance_example.uvoptx"/>
        <files mask="arm_variance_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Examples/ARM/arm_variance_example" target_path="src" type="src">
        <files mask="arm_variance_example_f32.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/ARM" target_path="src" type="project">
        <files mask="arm_cortexM_math.uvoptx"/>
        <files mask="arm_cortexM_math.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/ARM" target_path="src" type="script">
        <files mask="arm_cortexM_math_Build.bat"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/BasicMathFunctions" target_path="src" type="src">
        <files mask="arm_abs_f32.c"/>
        <files mask="arm_abs_q15.c"/>
        <files mask="arm_abs_q31.c"/>
        <files mask="arm_abs_q7.c"/>
        <files mask="arm_add_f32.c"/>
        <files mask="arm_add_q15.c"/>
        <files mask="arm_add_q31.c"/>
        <files mask="arm_add_q7.c"/>
        <files mask="arm_dot_prod_f32.c"/>
        <files mask="arm_dot_prod_q15.c"/>
        <files mask="arm_dot_prod_q31.c"/>
        <files mask="arm_dot_prod_q7.c"/>
        <files mask="arm_mult_f32.c"/>
        <files mask="arm_mult_q15.c"/>
        <files mask="arm_mult_q31.c"/>
        <files mask="arm_mult_q7.c"/>
        <files mask="arm_negate_f32.c"/>
        <files mask="arm_negate_q15.c"/>
        <files mask="arm_negate_q31.c"/>
        <files mask="arm_negate_q7.c"/>
        <files mask="arm_offset_f32.c"/>
        <files mask="arm_offset_q15.c"/>
        <files mask="arm_offset_q31.c"/>
        <files mask="arm_offset_q7.c"/>
        <files mask="arm_scale_f32.c"/>
        <files mask="arm_scale_q15.c"/>
        <files mask="arm_scale_q31.c"/>
        <files mask="arm_scale_q7.c"/>
        <files mask="arm_shift_q15.c"/>
        <files mask="arm_shift_q31.c"/>
        <files mask="arm_shift_q7.c"/>
        <files mask="arm_sub_f32.c"/>
        <files mask="arm_sub_q15.c"/>
        <files mask="arm_sub_q31.c"/>
        <files mask="arm_sub_q7.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/CommonTables" target_path="src" type="src">
        <files mask="arm_common_tables.c"/>
        <files mask="arm_const_structs.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/ComplexMathFunctions" target_path="src" type="src">
        <files mask="arm_cmplx_conj_f32.c"/>
        <files mask="arm_cmplx_conj_q15.c"/>
        <files mask="arm_cmplx_conj_q31.c"/>
        <files mask="arm_cmplx_dot_prod_f32.c"/>
        <files mask="arm_cmplx_dot_prod_q15.c"/>
        <files mask="arm_cmplx_dot_prod_q31.c"/>
        <files mask="arm_cmplx_mag_f32.c"/>
        <files mask="arm_cmplx_mag_q15.c"/>
        <files mask="arm_cmplx_mag_q31.c"/>
        <files mask="arm_cmplx_mag_squared_f32.c"/>
        <files mask="arm_cmplx_mag_squared_q15.c"/>
        <files mask="arm_cmplx_mag_squared_q31.c"/>
        <files mask="arm_cmplx_mult_cmplx_f32.c"/>
        <files mask="arm_cmplx_mult_cmplx_q15.c"/>
        <files mask="arm_cmplx_mult_cmplx_q31.c"/>
        <files mask="arm_cmplx_mult_real_f32.c"/>
        <files mask="arm_cmplx_mult_real_q15.c"/>
        <files mask="arm_cmplx_mult_real_q31.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/ControllerFunctions" target_path="src" type="src">
        <files mask="arm_pid_init_f32.c"/>
        <files mask="arm_pid_init_q15.c"/>
        <files mask="arm_pid_init_q31.c"/>
        <files mask="arm_pid_reset_f32.c"/>
        <files mask="arm_pid_reset_q15.c"/>
        <files mask="arm_pid_reset_q31.c"/>
        <files mask="arm_sin_cos_f32.c"/>
        <files mask="arm_sin_cos_q31.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/FastMathFunctions" target_path="src" type="src">
        <files mask="arm_cos_f32.c"/>
        <files mask="arm_cos_q15.c"/>
        <files mask="arm_cos_q31.c"/>
        <files mask="arm_sin_f32.c"/>
        <files mask="arm_sin_q15.c"/>
        <files mask="arm_sin_q31.c"/>
        <files mask="arm_sqrt_q15.c"/>
        <files mask="arm_sqrt_q31.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/FilteringFunctions" target_path="src" type="src">
        <files mask="arm_biquad_cascade_df1_32x64_init_q31.c"/>
        <files mask="arm_biquad_cascade_df1_32x64_q31.c"/>
        <files mask="arm_biquad_cascade_df1_f32.c"/>
        <files mask="arm_biquad_cascade_df1_fast_q15.c"/>
        <files mask="arm_biquad_cascade_df1_fast_q31.c"/>
        <files mask="arm_biquad_cascade_df1_init_f32.c"/>
        <files mask="arm_biquad_cascade_df1_init_q15.c"/>
        <files mask="arm_biquad_cascade_df1_init_q31.c"/>
        <files mask="arm_biquad_cascade_df1_q15.c"/>
        <files mask="arm_biquad_cascade_df1_q31.c"/>
        <files mask="arm_biquad_cascade_df2T_f32.c"/>
        <files mask="arm_biquad_cascade_df2T_f64.c"/>
        <files mask="arm_biquad_cascade_df2T_init_f32.c"/>
        <files mask="arm_biquad_cascade_df2T_init_f64.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_f32.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_init_f32.c"/>
        <files mask="arm_conv_f32.c"/>
        <files mask="arm_conv_fast_opt_q15.c"/>
        <files mask="arm_conv_fast_q15.c"/>
        <files mask="arm_conv_fast_q31.c"/>
        <files mask="arm_conv_opt_q15.c"/>
        <files mask="arm_conv_opt_q7.c"/>
        <files mask="arm_conv_partial_f32.c"/>
        <files mask="arm_conv_partial_fast_opt_q15.c"/>
        <files mask="arm_conv_partial_fast_q15.c"/>
        <files mask="arm_conv_partial_fast_q31.c"/>
        <files mask="arm_conv_partial_opt_q15.c"/>
        <files mask="arm_conv_partial_opt_q7.c"/>
        <files mask="arm_conv_partial_q15.c"/>
        <files mask="arm_conv_partial_q31.c"/>
        <files mask="arm_conv_partial_q7.c"/>
        <files mask="arm_conv_q15.c"/>
        <files mask="arm_conv_q31.c"/>
        <files mask="arm_conv_q7.c"/>
        <files mask="arm_correlate_f32.c"/>
        <files mask="arm_correlate_fast_opt_q15.c"/>
        <files mask="arm_correlate_fast_q15.c"/>
        <files mask="arm_correlate_fast_q31.c"/>
        <files mask="arm_correlate_opt_q15.c"/>
        <files mask="arm_correlate_opt_q7.c"/>
        <files mask="arm_correlate_q15.c"/>
        <files mask="arm_correlate_q31.c"/>
        <files mask="arm_correlate_q7.c"/>
        <files mask="arm_fir_decimate_f32.c"/>
        <files mask="arm_fir_decimate_fast_q15.c"/>
        <files mask="arm_fir_decimate_fast_q31.c"/>
        <files mask="arm_fir_decimate_init_f32.c"/>
        <files mask="arm_fir_decimate_init_q15.c"/>
        <files mask="arm_fir_decimate_init_q31.c"/>
        <files mask="arm_fir_decimate_q15.c"/>
        <files mask="arm_fir_decimate_q31.c"/>
        <files mask="arm_fir_f32.c"/>
        <files mask="arm_fir_fast_q15.c"/>
        <files mask="arm_fir_fast_q31.c"/>
        <files mask="arm_fir_init_f32.c"/>
        <files mask="arm_fir_init_q15.c"/>
        <files mask="arm_fir_init_q31.c"/>
        <files mask="arm_fir_init_q7.c"/>
        <files mask="arm_fir_interpolate_f32.c"/>
        <files mask="arm_fir_interpolate_init_f32.c"/>
        <files mask="arm_fir_interpolate_init_q15.c"/>
        <files mask="arm_fir_interpolate_init_q31.c"/>
        <files mask="arm_fir_interpolate_q15.c"/>
        <files mask="arm_fir_interpolate_q31.c"/>
        <files mask="arm_fir_lattice_f32.c"/>
        <files mask="arm_fir_lattice_init_f32.c"/>
        <files mask="arm_fir_lattice_init_q15.c"/>
        <files mask="arm_fir_lattice_init_q31.c"/>
        <files mask="arm_fir_lattice_q15.c"/>
        <files mask="arm_fir_lattice_q31.c"/>
        <files mask="arm_fir_q15.c"/>
        <files mask="arm_fir_q31.c"/>
        <files mask="arm_fir_q7.c"/>
        <files mask="arm_fir_sparse_f32.c"/>
        <files mask="arm_fir_sparse_init_f32.c"/>
        <files mask="arm_fir_sparse_init_q15.c"/>
        <files mask="arm_fir_sparse_init_q31.c"/>
        <files mask="arm_fir_sparse_init_q7.c"/>
        <files mask="arm_fir_sparse_q15.c"/>
        <files mask="arm_fir_sparse_q31.c"/>
        <files mask="arm_fir_sparse_q7.c"/>
        <files mask="arm_iir_lattice_f32.c"/>
        <files mask="arm_iir_lattice_init_f32.c"/>
        <files mask="arm_iir_lattice_init_q15.c"/>
        <files mask="arm_iir_lattice_init_q31.c"/>
        <files mask="arm_iir_lattice_q15.c"/>
        <files mask="arm_iir_lattice_q31.c"/>
        <files mask="arm_lms_f32.c"/>
        <files mask="arm_lms_init_f32.c"/>
        <files mask="arm_lms_init_q15.c"/>
        <files mask="arm_lms_init_q31.c"/>
        <files mask="arm_lms_norm_f32.c"/>
        <files mask="arm_lms_norm_init_f32.c"/>
        <files mask="arm_lms_norm_init_q15.c"/>
        <files mask="arm_lms_norm_init_q31.c"/>
        <files mask="arm_lms_norm_q15.c"/>
        <files mask="arm_lms_norm_q31.c"/>
        <files mask="arm_lms_q15.c"/>
        <files mask="arm_lms_q31.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/GCC" target_path="src" type="project">
        <files mask="arm_cortexM_math.uvoptx"/>
        <files mask="arm_cortexM_math.uvprojx"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/GCC" target_path="src" type="script">
        <files mask="arm_cortexM_math_Build.bat"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/MatrixFunctions" target_path="src" type="src">
        <files mask="arm_mat_add_f32.c"/>
        <files mask="arm_mat_add_q15.c"/>
        <files mask="arm_mat_add_q31.c"/>
        <files mask="arm_mat_cmplx_mult_f32.c"/>
        <files mask="arm_mat_cmplx_mult_q15.c"/>
        <files mask="arm_mat_cmplx_mult_q31.c"/>
        <files mask="arm_mat_init_f32.c"/>
        <files mask="arm_mat_init_q15.c"/>
        <files mask="arm_mat_init_q31.c"/>
        <files mask="arm_mat_inverse_f32.c"/>
        <files mask="arm_mat_inverse_f64.c"/>
        <files mask="arm_mat_mult_f32.c"/>
        <files mask="arm_mat_mult_fast_q15.c"/>
        <files mask="arm_mat_mult_fast_q31.c"/>
        <files mask="arm_mat_mult_q15.c"/>
        <files mask="arm_mat_mult_q31.c"/>
        <files mask="arm_mat_scale_f32.c"/>
        <files mask="arm_mat_scale_q15.c"/>
        <files mask="arm_mat_scale_q31.c"/>
        <files mask="arm_mat_sub_f32.c"/>
        <files mask="arm_mat_sub_q15.c"/>
        <files mask="arm_mat_sub_q31.c"/>
        <files mask="arm_mat_trans_f32.c"/>
        <files mask="arm_mat_trans_q15.c"/>
        <files mask="arm_mat_trans_q31.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/StatisticsFunctions" target_path="src" type="src">
        <files mask="arm_max_f32.c"/>
        <files mask="arm_max_q15.c"/>
        <files mask="arm_max_q31.c"/>
        <files mask="arm_max_q7.c"/>
        <files mask="arm_mean_f32.c"/>
        <files mask="arm_mean_q15.c"/>
        <files mask="arm_mean_q31.c"/>
        <files mask="arm_mean_q7.c"/>
        <files mask="arm_min_f32.c"/>
        <files mask="arm_min_q15.c"/>
        <files mask="arm_min_q31.c"/>
        <files mask="arm_min_q7.c"/>
        <files mask="arm_power_f32.c"/>
        <files mask="arm_power_q15.c"/>
        <files mask="arm_power_q31.c"/>
        <files mask="arm_power_q7.c"/>
        <files mask="arm_rms_f32.c"/>
        <files mask="arm_rms_q15.c"/>
        <files mask="arm_rms_q31.c"/>
        <files mask="arm_std_f32.c"/>
        <files mask="arm_std_q15.c"/>
        <files mask="arm_std_q31.c"/>
        <files mask="arm_var_f32.c"/>
        <files mask="arm_var_q15.c"/>
        <files mask="arm_var_q31.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/SupportFunctions" target_path="src" type="src">
        <files mask="arm_copy_f32.c"/>
        <files mask="arm_copy_q15.c"/>
        <files mask="arm_copy_q31.c"/>
        <files mask="arm_copy_q7.c"/>
        <files mask="arm_fill_f32.c"/>
        <files mask="arm_fill_q15.c"/>
        <files mask="arm_fill_q31.c"/>
        <files mask="arm_fill_q7.c"/>
        <files mask="arm_float_to_q15.c"/>
        <files mask="arm_float_to_q31.c"/>
        <files mask="arm_float_to_q7.c"/>
        <files mask="arm_q15_to_float.c"/>
        <files mask="arm_q15_to_q31.c"/>
        <files mask="arm_q15_to_q7.c"/>
        <files mask="arm_q31_to_float.c"/>
        <files mask="arm_q31_to_q15.c"/>
        <files mask="arm_q31_to_q7.c"/>
        <files mask="arm_q7_to_float.c"/>
        <files mask="arm_q7_to_q15.c"/>
        <files mask="arm_q7_to_q31.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/TransformFunctions" target_path="src" type="src">
        <files mask="arm_bitreversal.c"/>
        <files mask="arm_cfft_f32.c"/>
        <files mask="arm_cfft_q15.c"/>
        <files mask="arm_cfft_q31.c"/>
        <files mask="arm_cfft_radix2_f32.c"/>
        <files mask="arm_cfft_radix2_init_f32.c"/>
        <files mask="arm_cfft_radix2_init_q15.c"/>
        <files mask="arm_cfft_radix2_init_q31.c"/>
        <files mask="arm_cfft_radix2_q15.c"/>
        <files mask="arm_cfft_radix2_q31.c"/>
        <files mask="arm_cfft_radix4_f32.c"/>
        <files mask="arm_cfft_radix4_init_f32.c"/>
        <files mask="arm_cfft_radix4_init_q15.c"/>
        <files mask="arm_cfft_radix4_init_q31.c"/>
        <files mask="arm_cfft_radix4_q15.c"/>
        <files mask="arm_cfft_radix4_q31.c"/>
        <files mask="arm_cfft_radix8_f32.c"/>
        <files mask="arm_dct4_f32.c"/>
        <files mask="arm_dct4_init_f32.c"/>
        <files mask="arm_dct4_init_q15.c"/>
        <files mask="arm_dct4_init_q31.c"/>
        <files mask="arm_dct4_q15.c"/>
        <files mask="arm_dct4_q31.c"/>
        <files mask="arm_rfft_f32.c"/>
        <files mask="arm_rfft_fast_f32.c"/>
        <files mask="arm_rfft_fast_init_f32.c"/>
        <files mask="arm_rfft_init_f32.c"/>
        <files mask="arm_rfft_init_q15.c"/>
        <files mask="arm_rfft_init_q31.c"/>
        <files mask="arm_rfft_q15.c"/>
        <files mask="arm_rfft_q31.c"/>
      </source>
      <source path="CMSIS/DSP_Lib/Source/TransformFunctions" target_path="src" type="asm_include">
        <files mask="arm_bitreversal2.S"/>
      </source>
    </component>
    <component id="platform.CMSIS_DSP_Lib.arm_cortexM0b_math.K32L3A60" name="arm_cortexM0b_math" version="1.5.2" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="CMSIS_driver">
      <source toolchain="mdk" path="CMSIS/Lib/ARM" target_path="libs" type="lib">
        <files mask="arm_cortexM0b_math.lib"/>
      </source>
    </component>
    <component id="platform.CMSIS_DSP_Lib.arm_cortexM0l_math.K32L3A60" name="arm_cortexM0l_math" version="1.5.2" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="CMSIS_driver">
      <source toolchain="mdk" path="CMSIS/Lib/ARM" target_path="libs" type="lib">
        <files mask="arm_cortexM0l_math.lib"/>
      </source>
      <source toolchain="armgcc mcuxpresso" path="CMSIS/Lib/GCC" target_path="libs" type="lib">
        <files mask="libarm_cortexM0l_math.a"/>
      </source>
    </component>
    <component id="platform.CMSIS_DSP_Lib.arm_cortexM4bf_math.K32L3A60" name="arm_cortexM4bf_math" version="1.5.2" devices="K32L3A60xxx" device_cores="cm4_K32L3A60xxx" user_visible="true" type="CMSIS_driver">
      <source toolchain="mdk" path="CMSIS/Lib/ARM" target_path="libs" type="lib">
        <files mask="arm_cortexM4bf_math.lib"/>
      </source>
      <source toolchain="armgcc mcuxpresso" path="CMSIS/Lib/GCC" target_path="libs" type="lib">
        <files mask="libarm_cortexM7l_math.a"/>
      </source>
    </component>
    <component id="platform.CMSIS_DSP_Lib.arm_cortexM4lf_math.K32L3A60" name="arm_cortexM4lf_math" version="1.5.2" devices="K32L3A60xxx" device_cores="cm4_K32L3A60xxx" user_visible="true" type="CMSIS_driver">
      <source toolchain="mdk" path="CMSIS/Lib/ARM" target_path="libs" type="lib">
        <files mask="arm_cortexM4lf_math.lib"/>
      </source>
      <source toolchain="armgcc mcuxpresso" path="CMSIS/Lib/GCC" target_path="libs" type="lib">
        <files mask="libarm_cortexM4lf_math.a"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver" name="CMSIS_Driver" version="5.1.1" user_visible="true" type="CMSIS">
      <source path="CMSIS/Driver/DriverTemplates" target_path="src" type="src">
        <files mask="Driver_CAN.c"/>
        <files mask="Driver_ETH_MAC.c"/>
        <files mask="Driver_ETH_PHY.c"/>
        <files mask="Driver_Flash.c"/>
        <files mask="Driver_I2C.c"/>
        <files mask="Driver_MCI.c"/>
        <files mask="Driver_SAI.c"/>
        <files mask="Driver_SPI.c"/>
        <files mask="Driver_Storage.c"/>
        <files mask="Driver_USART.c"/>
        <files mask="Driver_USBD.c"/>
        <files mask="Driver_USBH.c"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.CAN_CMSISInclude.K32L3A60" name="CAN" version="1.2.0" devices="K32L3A60xxx" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.K32L3A60" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_CAN.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.Common_CMSISInclude.K32L3A60" name="Common" version="5.1.1" devices="K32L3A60xxx" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_Common.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.K32L3A60" name="Ethernet" version="2.1.0" devices="K32L3A60xxx" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.K32L3A60" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_ETH.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.Ethernet_MAC_CMSISInclude.K32L3A60" name="Ethernet_MAC" version="2.1.0" devices="K32L3A60xxx" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.K32L3A60" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_ETH_MAC.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.Ethernet_PHY_CMSISInclude.K32L3A60" name="Ethernet_PHY" version="2.1.0" devices="K32L3A60xxx" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.K32L3A60" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_ETH_PHY.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.Flash_CMSISInclude.K32L3A60" name="Flash" version="2.1.0" devices="K32L3A60xxx" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.K32L3A60" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_Flash.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.I2C_CMSISInclude.K32L3A60" name="I2C" version="2.3.0" devices="K32L3A60xxx" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.K32L3A60" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_I2C.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.MCI_CMSISInclude.K32L3A60" name="MCI" version="2.3.0" devices="K32L3A60xxx" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.K32L3A60" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_MCI.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.NAND_CMSISInclude.K32L3A60" name="NAND" version="2.3.0" devices="K32L3A60xxx" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.K32L3A60" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_NAND.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.SAI_CMSISInclude.K32L3A60" name="SAI" version="1.1.0" devices="K32L3A60xxx" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.K32L3A60" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_SAI.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.SPI_CMSISInclude.K32L3A60" name="SPI" version="2.2.0" devices="K32L3A60xxx" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.K32L3A60" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_SPI.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.USART_CMSISInclude.K32L3A60" name="USART" version="2.3.0" devices="K32L3A60xxx" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.K32L3A60" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_USART.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.USB_CMSISInclude.K32L3A60" name="USB" version="2.2.0" devices="K32L3A60xxx" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.K32L3A60" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_USB.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.USB_Device_CMSISInclude.K32L3A60" name="USB_Device" version="2.2.0" devices="K32L3A60xxx" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.USB_CMSISInclude.K32L3A60" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_USBD.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.USB_Host_CMSISInclude.K32L3A60" name="USB_Host" version="2.2.0" devices="K32L3A60xxx" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.USB_CMSISInclude.K32L3A60" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_USBH.h"/>
      </source>
    </component>
    <component id="platform.Include_common.K32L3A60" name="CMSIS_Include_common" version="5.1.1" devices="K32L3A60xxx" user_visible="true" type="CMSIS_Include">
      <source path="CMSIS/Include" target_path="CMSIS" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_math.h"/>
        <files mask="cmsis_armcc.h"/>
        <files mask="cmsis_armclang.h"/>
        <files mask="cmsis_compiler.h"/>
        <files mask="cmsis_gcc.h"/>
        <files mask="cmsis_iccarm.h"/>
        <files mask="cmsis_version.h"/>
        <files mask="core_armv8mbl.h"/>
        <files mask="core_armv8mml.h"/>
        <files mask="mpu_armv7.h"/>
        <files mask="mpu_armv8.h"/>
      </source>
    </component>
    <component id="platform.Include_core_cm0plus.K32L3A60" name="CMSIS_Include_core_cm0plus" version="5.1.1" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60" device_cores="cm0plus_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="CMSIS_Include">
      <source path="CMSIS/Include" target_path="CMSIS" type="c_include">
        <files mask="core_cm0plus.h"/>
      </source>
    </component>
    <component id="platform.Include_core_cm4.K32L3A60" name="CMSIS_Include_core_cm4" version="5.1.1" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60" device_cores="cm4_K32L3A60xxx" user_visible="true" type="CMSIS_Include">
      <source path="CMSIS/Include" target_path="CMSIS" type="c_include">
        <files mask="core_cm4.h"/>
      </source>
    </component>
    <component id="project_template.K32L3A60.K32L3A60" name="K32L3A60" version="1.0.0" devices="K32L3A60xxx" dependency="component.lists.K32L3A60 component.lpuart_adapter.K32L3A60 component.serial_manager.K32L3A60 component.serial_manager_uart.K32L3A60 platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.devices.K32L3A60_startup.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60 platform.drivers.gpio.K32L3A60 platform.drivers.lpuart.K32L3A60 platform.drivers.msmc.K32L3A60 platform.drivers.port.K32L3A60 platform.utilities.assert.K32L3A60 utility.debug_console.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="Board Support/SDK Project Template" user_visible="true" type="project_template">
      <source path="devices/K32L3A60/project_template" target_path="board" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="peripherals.c"/>
        <files mask="pin_mux.c"/>
      </source>
      <source path="devices/K32L3A60/project_template" target_path="board" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="peripherals.h"/>
        <files mask="pin_mux.h"/>
      </source>
    </component>
    <component id="RTE_Device.K32L3A60" name="RTE_Device" version="1.0.0" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60 platform.drivers.dmamux.K32L3A60 platform.drivers.edma.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="Device/SDK Project Template" user_visible="true" type="project_template">
      <source path="devices/K32L3A60/template" target_path="board" type="c_include">
        <files mask="RTE_Device.h"/>
      </source>
    </component>
    <component id="tools.K32L3A60" name="cmake_toolchain" version="1.0.0" devices="K32L3A60xxx" user_visible="true" type="other">
      <source path="tools/cmake_toolchain_files" target_path="src" type="script">
        <files mask="armgcc.cmake"/>
        <files mask="armgcc_force_cpp.cmake"/>
        <files mask="xcc.cmake"/>
      </source>
    </component>
    <component id="component.lists.K32L3A60" name="lists" version="1.0.0" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="software_component">
      <source path="components/lists" target_path="component/lists" type="src">
        <files mask="generic_list.c"/>
      </source>
      <source path="components/lists" target_path="component/lists" type="c_include">
        <files mask="generic_list.h"/>
      </source>
    </component>
    <component id="component.lpuart_adapter.K32L3A60" name="lpuart_adapter" version="1.0.0" full_name="lpuart_adapter" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60 platform.drivers.lpuart.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="utilities">
      <source path="components/uart" target_path="component/uart" type="src">
        <files mask="lpuart_adapter.c"/>
      </source>
      <source path="components/uart" target_path="component/uart" type="c_include">
        <files mask="uart.h"/>
      </source>
    </component>
    <component id="component.serial_manager.K32L3A60" name="serial_manager" version="1.0.0" full_name="Serial Manager" devices="K32L3A60xxx" dependency="component.lists.K32L3A60 platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="utilities">
      <source path="components/serial_manager" target_path="component/serial_manager" type="src">
        <files mask="serial_manager.c"/>
      </source>
      <source path="components/serial_manager" target_path="component/serial_manager" type="c_include">
        <files mask="serial_manager.h"/>
        <files mask="serial_port_internal.h"/>
      </source>
    </component>
    <component id="component.serial_manager_uart.K32L3A60" name="serial_manager_uart" version="1.0.0" full_name="Serial Manager uart" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60 platform.drivers.lpuart.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="utilities">
      <source path="components/serial_manager" target_path="component/serial_manager" type="src">
        <files mask="serial_port_uart.c"/>
      </source>
      <source path="components/serial_manager" target_path="component/serial_manager" type="c_include">
        <files mask="serial_port_uart.h"/>
      </source>
    </component>
    <component id="platform.devices.K32L3A60_CMSIS.K32L3A60" name="K32L3A60_CMSIS" version="1.0.0" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="CMSIS_Include">
      <source path="devices/K32L3A60" target_path="device" type="c_include" device_cores="cm0plus_K32L3A60xxx">
        <files mask="K32L3A60_cm0plus.h"/>
        <files mask="K32L3A60_cm0plus_features.h"/>
        <files mask="system_K32L3A60_cm0plus.h"/>
      </source>
      <source path="devices/K32L3A60" target_path="device" type="c_include" device_cores="cm4_K32L3A60xxx">
        <files mask="K32L3A60_cm4.h"/>
        <files mask="K32L3A60_cm4_features.h"/>
        <files mask="system_K32L3A60_cm4.h"/>
      </source>
      <source path="devices/K32L3A60" target_path="device" type="c_include">
        <files mask="fsl_device_registers.h"/>
      </source>
      <source path="devices/K32L3A60" target_path="device" type="src" device_cores="cm0plus_K32L3A60xxx">
        <files mask="system_K32L3A60_cm0plus.c"/>
      </source>
      <source path="devices/K32L3A60" target_path="device" type="src" device_cores="cm4_K32L3A60xxx">
        <files mask="system_K32L3A60_cm4.c"/>
      </source>
    </component>
    <component id="platform.devices.K32L3A60_debugger.K32L3A60" name="K32L3A60_debugger" version="1.0.0" devices="K32L3A60xxx" user_visible="true" type="debugger">
      <source path="devices/K32L3A60" target_path="svd" type="xml" device_cores="cm0plus_K32L3A60xxx">
        <files mask="K32L3A60_cm0plus.xml"/>
      </source>
      <source path="devices/K32L3A60" target_path="svd" type="xml" device_cores="cm4_K32L3A60xxx">
        <files mask="K32L3A60_cm4.xml"/>
      </source>
    </component>
    <component id="platform.devices.K32L3A60_linker.K32L3A60" name="K32L3A60_linker" version="1.0.0" devices="K32L3A60xxx" user_visible="true" type="linker">
      <source toolchain="mdk" path="devices/K32L3A60/arm" target_path="src" type="linker" device_cores="cm0plus_K32L3A60xxx">
        <files mask="K32L3A60xxx_cm0plus_flash.scf"/>
        <files mask="K32L3A60xxx_cm0plus_ram.scf"/>
      </source>
      <source toolchain="mdk" path="devices/K32L3A60/arm" target_path="src" type="linker" device_cores="cm4_K32L3A60xxx">
        <files mask="K32L3A60xxx_cm4_flash.scf"/>
        <files mask="K32L3A60xxx_cm4_ram.scf"/>
      </source>
      <source toolchain="armgcc" path="devices/K32L3A60/gcc" target_path="src" type="linker" device_cores="cm0plus_K32L3A60xxx">
        <files mask="K32L3A60xxx_cm0plus_flash.ld"/>
        <files mask="K32L3A60xxx_cm0plus_ram.ld"/>
      </source>
      <source toolchain="armgcc" path="devices/K32L3A60/gcc" target_path="src" type="linker" device_cores="cm4_K32L3A60xxx">
        <files mask="K32L3A60xxx_cm4_flash.ld"/>
        <files mask="K32L3A60xxx_cm4_ram.ld"/>
      </source>
      <source toolchain="iar" path="devices/K32L3A60/iar" target_path="src" type="linker" device_cores="cm0plus_K32L3A60xxx">
        <files mask="K32L3A60xxx_cm0plus_flash.icf"/>
        <files mask="K32L3A60xxx_cm0plus_ram.icf"/>
      </source>
      <source toolchain="iar" path="devices/K32L3A60/iar" target_path="src" type="linker" device_cores="cm4_K32L3A60xxx">
        <files mask="K32L3A60xxx_cm4_flash.icf"/>
        <files mask="K32L3A60xxx_cm4_ram.icf"/>
      </source>
    </component>
    <component id="platform.devices.K32L3A60_startup.K32L3A60" name="K32L3A60_startup" version="1.0.0" devices="K32L3A60xxx" category="Device/Startup" user_visible="true" type="startup">
      <source toolchain="mdk" path="devices/K32L3A60/arm" target_path="startup" type="asm_include" device_cores="cm0plus_K32L3A60xxx">
        <files mask="startup_K32L3A60_cm0plus.s"/>
      </source>
      <source toolchain="mdk" path="devices/K32L3A60/arm" target_path="startup" type="asm_include" device_cores="cm4_K32L3A60xxx">
        <files mask="startup_K32L3A60_cm4.s"/>
      </source>
      <source toolchain="armgcc" path="devices/K32L3A60/gcc" target_path="startup" type="asm_include" device_cores="cm0plus_K32L3A60xxx">
        <files mask="startup_K32L3A60_cm0plus.S"/>
      </source>
      <source toolchain="armgcc" path="devices/K32L3A60/gcc" target_path="startup" type="asm_include" device_cores="cm4_K32L3A60xxx">
        <files mask="startup_K32L3A60_cm4.S"/>
      </source>
      <source toolchain="iar" path="devices/K32L3A60/iar" target_path="startup" type="asm_include" device_cores="cm0plus_K32L3A60xxx">
        <files mask="startup_K32L3A60_cm0plus.s"/>
      </source>
      <source toolchain="iar" path="devices/K32L3A60/iar" target_path="startup" type="asm_include" device_cores="cm4_K32L3A60xxx">
        <files mask="startup_K32L3A60_cm4.s"/>
      </source>
      <source toolchain="mcuxpresso" path="devices/K32L3A60/mcuxpresso" target_path="startup" type="src_c" device_cores="cm0plus_K32L3A60xxx">
        <files mask="startup_k32l3a60_cm0plus.c"/>
      </source>
      <source toolchain="mcuxpresso" path="devices/K32L3A60/mcuxpresso" target_path="startup" type="src_cpp" device_cores="cm0plus_K32L3A60xxx">
        <files mask="startup_k32l3a60_cm0plus.cpp"/>
      </source>
      <source toolchain="mcuxpresso" path="devices/K32L3A60/mcuxpresso" target_path="startup" type="src_c" device_cores="cm4_K32L3A60xxx">
        <files mask="startup_k32l3a60_cm4.c"/>
      </source>
      <source toolchain="mcuxpresso" path="devices/K32L3A60/mcuxpresso" target_path="startup" type="src_cpp" device_cores="cm4_K32L3A60xxx">
        <files mask="startup_k32l3a60_cm4.cpp"/>
      </source>
    </component>
    <component id="docs.K32L3A60.K32L3A60" name="K32L3A60" version="1.0.0" devices="K32L3A60xxx" user_visible="true" type="documentation">
      <source path="docs" target_path="src" type="doc">
        <files mask="Getting Started with MCUXpresso SDK for FRDM-K32L3A6.pdf"/>
        <files mask="MCUXpresso SDK Release Notes Supporting FRDM-K32L3A6.pdf"/>
      </source>
    </component>
    <component id="docs.images.K32L3A60" name="images" version="1.0.0" devices="K32L3A60xxx" user_visible="true" type="documentation">
      <source path="docs/images" target_path="src" type="image">
        <files mask="FRDM-K32L3A6-AGM01.gif"/>
        <files mask="FRDM-K32L3A6.gif"/>
        <files mask="device.jpg"/>
      </source>
    </component>
    <component id="platform.drivers.cache_lplmem.K32L3A60" name="cache_lplmem" brief="CACHE Driver" version="2.1.0" full_name="CACHE Lplmem Driver" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60" device_cores="cm0plus_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers/cm0plus" target_path="drivers" type="src">
        <files mask="fsl_cache.c"/>
      </source>
      <source path="devices/K32L3A60/drivers/cm0plus" target_path="drivers" type="c_include">
        <files mask="fsl_cache.h"/>
      </source>
    </component>
    <component id="platform.drivers.cau3.K32L3A60" name="cau3" brief="CAU3 Driver" version="2.0.2" full_name="CAU3 Driver" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="src">
        <files mask="fsl_cau3.c"/>
      </source>
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_cau3.h"/>
      </source>
    </component>
    <component id="platform.drivers.clock.K32L3A60" name="clock" brief="Clock Driver" version="2.1.0" full_name="Clock Driver" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.common.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="src">
        <files mask="fsl_clock.c"/>
      </source>
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_clock.h"/>
      </source>
    </component>
    <component id="platform.drivers.lpi2c_cmsis.K32L3A60" name="lpi2c_cmsis" brief="LPI2C CMSIS Driver" version="2.0.0" devices="K32L3A60xxx" dependency="RTE_Device.K32L3A60 platform.CMSIS_Driver_Include.Common_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.I2C_CMSISInclude.K32L3A60 platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60 platform.drivers.dmamux.K32L3A60 platform.drivers.edma.K32L3A60 platform.drivers.lpi2c.K32L3A60 platform.drivers.lpi2c_edma.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="CMSIS_driver">
      <source path="devices/K32L3A60/cmsis_drivers" target_path="drivers" type="src">
        <files mask="fsl_lpi2c_cmsis.c"/>
      </source>
      <source path="devices/K32L3A60/cmsis_drivers" target_path="drivers" type="c_include">
        <files mask="fsl_lpi2c_cmsis.h"/>
      </source>
    </component>
    <component id="platform.drivers.lpspi_cmsis.K32L3A60" name="lpspi_cmsis" brief="LPSPI CMSIS Driver" version="2.0.0" devices="K32L3A60xxx" dependency="RTE_Device.K32L3A60 platform.CMSIS_Driver_Include.Common_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.SPI_CMSISInclude.K32L3A60 platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60 platform.drivers.dmamux.K32L3A60 platform.drivers.edma.K32L3A60 platform.drivers.lpspi.K32L3A60 platform.drivers.lpspi_edma.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="CMSIS_driver">
      <source path="devices/K32L3A60/cmsis_drivers" target_path="drivers" type="src">
        <files mask="fsl_lpspi_cmsis.c"/>
      </source>
      <source path="devices/K32L3A60/cmsis_drivers" target_path="drivers" type="c_include">
        <files mask="fsl_lpspi_cmsis.h"/>
      </source>
    </component>
    <component id="platform.drivers.lpuart_cmsis_edma.K32L3A60" name="lpuart_cmsis" brief="LPUART CMSIS Driver" version="2.0.1" devices="K32L3A60xxx" dependency="RTE_Device.K32L3A60 platform.CMSIS_Driver_Include.Common_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.USART_CMSISInclude.K32L3A60 platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60 platform.drivers.dmamux.K32L3A60 platform.drivers.edma.K32L3A60 platform.drivers.lpuart.K32L3A60 platform.drivers.lpuart_edma.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="CMSIS_driver">
      <source path="devices/K32L3A60/cmsis_drivers" target_path="drivers" type="src">
        <files mask="fsl_lpuart_cmsis.c"/>
      </source>
      <source path="devices/K32L3A60/cmsis_drivers" target_path="drivers" type="c_include">
        <files mask="fsl_lpuart_cmsis.h"/>
      </source>
    </component>
    <component id="platform.drivers.common.K32L3A60" name="common" brief="COMMON Driver" version="2.1.3" full_name="COMMON Driver" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="src">
        <files mask="fsl_common.c"/>
      </source>
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_common.h"/>
      </source>
    </component>
    <component id="platform.drivers.crc.K32L3A60" name="crc" brief="CRC Driver" version="2.0.1" full_name="CRC Driver" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="src">
        <files mask="fsl_crc.c"/>
      </source>
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_crc.h"/>
      </source>
    </component>
    <component id="platform.drivers.dac_1.K32L3A60" name="dac" brief="DAC Driver" version="2.0.1" full_name="DAC Driver" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="src">
        <files mask="fsl_dac.c"/>
      </source>
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_dac.h"/>
      </source>
    </component>
    <component id="platform.drivers.dmamux.K32L3A60" name="dmamux" brief="DMAMUX Driver" version="2.0.2" full_name="DMAMUX Driver" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="src">
        <files mask="fsl_dmamux.c"/>
      </source>
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_dmamux.h"/>
      </source>
    </component>
    <component id="platform.drivers.edma.K32L3A60" name="edma" brief="EDMA Driver" version="2.1.9" full_name="EDMA Driver" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="src">
        <files mask="fsl_edma.c"/>
      </source>
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_edma.h"/>
      </source>
    </component>
    <component id="platform.drivers.ewm.K32L3A60" name="ewm" brief="EWM Driver" version="2.0.1" full_name="EWM Driver" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="src">
        <files mask="fsl_ewm.c"/>
      </source>
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_ewm.h"/>
      </source>
    </component>
    <component id="platform.drivers.flash.K32L3A60" name="flash" brief="Flash Driver" version="3.0.0" full_name="Flash Driver" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_flash.h"/>
        <files mask="fsl_ftfx_adapter.h"/>
        <files mask="fsl_ftfx_cache.h"/>
        <files mask="fsl_ftfx_controller.h"/>
        <files mask="fsl_ftfx_features.h"/>
        <files mask="fsl_ftfx_flash.h"/>
        <files mask="fsl_ftfx_flexnvm.h"/>
        <files mask="fsl_ftfx_utilities.h"/>
      </source>
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="src">
        <files mask="fsl_ftfx_cache.c"/>
        <files mask="fsl_ftfx_controller.c"/>
        <files mask="fsl_ftfx_flash.c"/>
        <files mask="fsl_ftfx_flexnvm.c"/>
      </source>
    </component>
    <component id="platform.drivers.flexbus.K32L3A60" name="flexbus" brief="FLEXBUS Driver" version="2.1.0" full_name="FLEXBUS Driver" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="src">
        <files mask="fsl_flexbus.c"/>
      </source>
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_flexbus.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexio.K32L3A60" name="flexio" brief="FLEXIO Driver" version="2.0.2" full_name="FLEXIO Driver" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="src">
        <files mask="fsl_flexio.c"/>
      </source>
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_flexio.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexio_i2c_master.K32L3A60" name="flexio_i2c_master" brief="FLEXIO I2C Driver" version="2.1.7" full_name="FLEXIO I2C Driver" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60 platform.drivers.flexio.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="src">
        <files mask="fsl_flexio_i2c_master.c"/>
      </source>
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_flexio_i2c_master.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexio_spi.K32L3A60" name="flexio_spi" brief="FLEXIO SPI Driver" version="2.1.3" full_name="FLEXIO SPI Driver" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60 platform.drivers.flexio.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="src">
        <files mask="fsl_flexio_spi.c"/>
      </source>
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_flexio_spi.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexio_spi_edma.K32L3A60" name="flexio_spi_edma" brief="FLEXIO SPI EDMA Driver" version="2.1.3" full_name="FLEXIO SPI EDMA Driver" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60 platform.drivers.edma.K32L3A60 platform.drivers.flexio.K32L3A60 platform.drivers.flexio_spi.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="src">
        <files mask="fsl_flexio_spi_edma.c"/>
      </source>
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_flexio_spi_edma.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexio_uart.K32L3A60" name="flexio_uart" brief="FLEXIO UART Driver" version="2.1.5" full_name="FLEXIO UART Driver" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60 platform.drivers.flexio.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="src">
        <files mask="fsl_flexio_uart.c"/>
      </source>
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_flexio_uart.h"/>
      </source>
    </component>
    <component id="platform.drivers.flexio_uart_edma.K32L3A60" name="flexio_uart_edma" brief="FLEXIO UART EDMA Driver" version="2.1.5" full_name="FLEXIO UART EDMA Driver" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60 platform.drivers.edma.K32L3A60 platform.drivers.flexio.K32L3A60 platform.drivers.flexio_uart.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="src">
        <files mask="fsl_flexio_uart_edma.c"/>
      </source>
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_flexio_uart_edma.h"/>
      </source>
    </component>
    <component id="driver.fxos8700cq.K32L3A60" name="fxos8700cq" version="1.0.0" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="board_component">
      <source path="components/fxos8700cq" target_path="accel" type="src">
        <files mask="fsl_fxos.c"/>
      </source>
      <source path="components/fxos8700cq" target_path="accel" type="c_include">
        <files mask="fsl_fxos.h"/>
      </source>
    </component>
    <component id="platform.drivers.gpio.K32L3A60" name="gpio" brief="GPIO Driver" version="2.4.0" full_name="GPIO Driver" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="src">
        <files mask="fsl_gpio.c"/>
      </source>
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_gpio.h"/>
      </source>
    </component>
    <component id="platform.drivers.intmux.K32L3A60" name="intmux" brief="INTMUX Driver" version="2.0.1" full_name="INTMUX Driver" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60" device_cores="cm0plus_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="src">
        <files mask="fsl_intmux.c"/>
      </source>
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_intmux.h"/>
      </source>
    </component>
    <component id="platform.drivers.llwu.K32L3A60" name="llwu" brief="LLWU Driver" version="2.0.3" full_name="LLWU Driver" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="src">
        <files mask="fsl_llwu.c"/>
      </source>
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_llwu.h"/>
      </source>
    </component>
    <component id="platform.drivers.lpadc.K32L3A60" name="lpadc" brief="LPADC Driver" version="2.1.1" full_name="LPADC Driver" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="src">
        <files mask="fsl_lpadc.c"/>
      </source>
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_lpadc.h"/>
      </source>
    </component>
    <component id="platform.drivers.lpcmp.K32L3A60" name="lpcmp" brief="LPCMP Driver" version="2.0.1" full_name="LPCMP Driver" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="src">
        <files mask="fsl_lpcmp.c"/>
      </source>
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_lpcmp.h"/>
      </source>
    </component>
    <component id="platform.drivers.lpi2c.K32L3A60" name="i2c" brief="LPI2C Driver" version="2.1.10" full_name="LPI2C Driver" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="src">
        <files mask="fsl_lpi2c.c"/>
      </source>
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_lpi2c.h"/>
      </source>
    </component>
    <component id="platform.drivers.lpi2c_edma.K32L3A60" name="i2c_edma" brief="LPI2C Driver" version="2.1.6" full_name="LPI2C Edma Driver" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60 platform.drivers.edma.K32L3A60 platform.drivers.lpi2c.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="src">
        <files mask="fsl_lpi2c_edma.c"/>
      </source>
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_lpi2c_edma.h"/>
      </source>
    </component>
    <component id="platform.drivers.lpi2c_freertos.K32L3A60" name="i2c_freertos" brief="LPI2C Driver" version="2.1.9" full_name="LPI2C Freerto Driver" devices="K32L3A60xxx" dependency="middleware.amazon_freertos.freertos.K32L3A60 middleware.template_application.amazon_freertos.K32L3A60 platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60 platform.drivers.lpi2c.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers/freertos" type="src">
        <files mask="fsl_lpi2c_freertos.c"/>
      </source>
      <source path="devices/K32L3A60/drivers" target_path="drivers/freertos" type="c_include">
        <files mask="fsl_lpi2c_freertos.h"/>
      </source>
    </component>
    <component id="platform.drivers.lpit.K32L3A60" name="lpit" brief="LPIT Driver" version="2.0.0" full_name="LPIT Driver" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="src">
        <files mask="fsl_lpit.c"/>
      </source>
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_lpit.h"/>
      </source>
    </component>
    <component id="platform.drivers.lpspi.K32L3A60" name="lpspi" brief="LPSPI Driver" version="2.0.4" full_name="LPSPI Driver" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="src">
        <files mask="fsl_lpspi.c"/>
      </source>
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_lpspi.h"/>
      </source>
    </component>
    <component id="platform.drivers.lpspi_edma.K32L3A60" name="lpspi_edma" brief="LPSPI Driver" version="2.0.4" full_name="LPSPI Edma Driver" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60 platform.drivers.edma.K32L3A60 platform.drivers.lpspi.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="src">
        <files mask="fsl_lpspi_edma.c"/>
      </source>
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_lpspi_edma.h"/>
      </source>
    </component>
    <component id="platform.drivers.lpspi_freertos.K32L3A60" name="lpspi_freertos" brief="LPSPI Driver" version="2.0.4" full_name="LPSPI Freertos Driver" devices="K32L3A60xxx" dependency="middleware.amazon_freertos.freertos.K32L3A60 middleware.template_application.amazon_freertos.K32L3A60 platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60 platform.drivers.lpspi.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers/freertos" type="src">
        <files mask="fsl_lpspi_freertos.c"/>
      </source>
      <source path="devices/K32L3A60/drivers" target_path="drivers/freertos" type="c_include">
        <files mask="fsl_lpspi_freertos.h"/>
      </source>
    </component>
    <component id="platform.drivers.lptmr.K32L3A60" name="lptmr" brief="LPTMR Driver" version="2.1.0" full_name="LPTMR Driver" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="src">
        <files mask="fsl_lptmr.c"/>
      </source>
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_lptmr.h"/>
      </source>
    </component>
    <component id="platform.drivers.lpuart.K32L3A60" name="lpuart" brief="LPUART Driver" version="2.2.7" full_name="LPUART Driver" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="src">
        <files mask="fsl_lpuart.c"/>
      </source>
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_lpuart.h"/>
      </source>
    </component>
    <component id="platform.drivers.lpuart_edma.K32L3A60" name="lpuart_edma" brief="LPUART Driver" version="2.2.7" full_name="LPUART Edma Driver" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60 platform.drivers.edma.K32L3A60 platform.drivers.lpuart.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="src">
        <files mask="fsl_lpuart_edma.c"/>
      </source>
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_lpuart_edma.h"/>
      </source>
    </component>
    <component id="platform.drivers.lpuart_freertos.K32L3A60" name="lpuart_freertos" brief="LPUART Driver" version="2.2.7" full_name="LPUART Freertos Driver" devices="K32L3A60xxx" dependency="middleware.amazon_freertos.freertos.K32L3A60 middleware.template_application.amazon_freertos.K32L3A60 platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60 platform.drivers.lpuart.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers/freertos" type="src">
        <files mask="fsl_lpuart_freertos.c"/>
      </source>
      <source path="devices/K32L3A60/drivers" target_path="drivers/freertos" type="c_include">
        <files mask="fsl_lpuart_freertos.h"/>
      </source>
    </component>
    <component id="platform.drivers.mmdvsq.K32L3A60" name="mmdvsq" brief="MMDVSQ Driver" version="2.0.2" full_name="MMDVSQ Driver" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60" device_cores="cm0plus_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="src">
        <files mask="fsl_mmdvsq.c"/>
      </source>
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_mmdvsq.h"/>
      </source>
    </component>
    <component id="platform.drivers.msmc.K32L3A60" name="msmc" brief="MSMC Driver" version="2.1.0" full_name="MSMC Driver" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="src">
        <files mask="fsl_msmc.c"/>
      </source>
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_msmc.h"/>
      </source>
    </component>
    <component id="platform.drivers.mu.K32L3A60" name="mu" brief="MU Driver" version="2.0.2" full_name="MU Driver" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="src">
        <files mask="fsl_mu.c"/>
      </source>
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_mu.h"/>
      </source>
    </component>
    <component id="platform.drivers.port.K32L3A60" name="port" brief="PORT Driver" version="2.1.0" full_name="PORT Driver" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_port.h"/>
      </source>
    </component>
    <component id="platform.drivers.rtc.K32L3A60" name="rtc" brief="RTC Driver" version="2.2.0" full_name="RTC Driver" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="src">
        <files mask="fsl_rtc.c"/>
      </source>
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_rtc.h"/>
      </source>
    </component>
    <component id="platform.drivers.sai.K32L3A60" name="sai" brief="SAI Driver" version="2.2.1" full_name="SAI Driver" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="src">
        <files mask="fsl_sai.c"/>
      </source>
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_sai.h"/>
      </source>
    </component>
    <component id="platform.drivers.sema42.K32L3A60" name="sema42" brief="SEMA42 Driver" version="2.0.0" full_name="SEMA42 Driver" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="src">
        <files mask="fsl_sema42.c"/>
      </source>
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_sema42.h"/>
      </source>
    </component>
    <component id="platform.drivers.sim.K32L3A60" name="sim" brief="SIM Driver" version="2.1.0" full_name="SIM Driver" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="src">
        <files mask="fsl_sim.c"/>
      </source>
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_sim.h"/>
      </source>
    </component>
    <component id="platform.drivers.smartcard_emvsim.K32L3A60" name="smartcard_emvsim" brief="SMARTCARD EMVSIM Driver" version="2.2.0" full_name="SMARTCARD EMVSIM Driver" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_smartcard.h"/>
        <files mask="fsl_smartcard_emvsim.h"/>
      </source>
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="src">
        <files mask="fsl_smartcard_emvsim.c"/>
      </source>
    </component>
    <component id="platform.drivers.smartcard_phy_emvsim.K32L3A60" name="smartcard_phy_emvsim" brief="SMARTCARD PHY EMVSIM, use only one SMARTCARD PHY in the project" version="2.2.0" full_name="SMARTCARD PHY EMVSIM" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60 platform.drivers.smartcard_emvsim.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_smartcard_phy.h"/>
      </source>
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="src">
        <files mask="fsl_smartcard_phy_emvsim.c"/>
      </source>
    </component>
    <component id="platform.drivers.spm.K32L3A60" name="spm" brief="SPM Driver" version="2.2.0" full_name="SPM Driver" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="src">
        <files mask="fsl_spm.c"/>
      </source>
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_spm.h"/>
      </source>
    </component>
    <component id="platform.drivers.tpm.K32L3A60" name="tpm" brief="TPM Driver" version="2.0.5" full_name="TPM Driver" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="src">
        <files mask="fsl_tpm.c"/>
      </source>
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_tpm.h"/>
      </source>
    </component>
    <component id="platform.drivers.trgmux.K32L3A60" name="trgmux" brief="TRGMUX Driver" version="2.0.0" full_name="TRGMUX Driver" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="src">
        <files mask="fsl_trgmux.c"/>
      </source>
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_trgmux.h"/>
      </source>
    </component>
    <component id="platform.drivers.trng.K32L3A60" name="trng" brief="TRNG Driver" version="2.0.4" full_name="TRNG Driver" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="src">
        <files mask="fsl_trng.c"/>
      </source>
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_trng.h"/>
      </source>
    </component>
    <component id="platform.drivers.tstmr.K32L3A60" name="tstmr" brief="TSTMR Driver" version="2.0.0" full_name="TSTMR Driver" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_tstmr.h"/>
      </source>
    </component>
    <component id="platform.drivers.usdhc.K32L3A60" name="sdhc" brief="USDHC Driver" version="2.3.0" full_name="USDHC Driver" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="src">
        <files mask="fsl_usdhc.c"/>
      </source>
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_usdhc.h"/>
      </source>
    </component>
    <component id="platform.drivers.vref.K32L3A60" name="vref" brief="VREF Driver" version="2.1.1" full_name="VREF Driver" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="src">
        <files mask="fsl_vref.c"/>
      </source>
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_vref.h"/>
      </source>
    </component>
    <component id="platform.drivers.wdog32.K32L3A60" name="wdog" brief="WDOG32 Driver" version="2.0.1" full_name="WDOG32 Driver" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="src">
        <files mask="fsl_wdog32.c"/>
      </source>
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_wdog32.h"/>
      </source>
    </component>
    <component id="platform.drivers.xrdc.K32L3A60" name="xrdc" brief="XRDC Driver" version="2.0.3" full_name="XRDC Driver" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="src">
        <files mask="fsl_xrdc.c"/>
      </source>
      <source path="devices/K32L3A60/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_xrdc.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.freertos.K32L3A60" name="Amazon-FreeRTOS" brief="Amazon FreeRTOS, Real Time Operating System" version="10.2.0" full_name="Amazon-FreeRTOS Kernel" devices="K32L3A60xxx" dependency="middleware.template_application.amazon_freertos.K32L3A60" user_visible="true" type="OS">
      <defines>
        <define name="FSL_RTOS_FREE_RTOS" value=""/>
        <define name="SDK_OS_FREE_RTOS" value=""/>
      </defines>
      <source exclude="true" path="rtos/amazon-freertos" target_path="amazon-freertos" type="other">
        <files mask="CHANGELOG.md"/>
        <files mask="README.md"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos" target_path="amazon-freertos" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
        <files mask="directories.txt"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos" target_path="amazon-freertos/license" type="other">
        <files mask="LICENSE"/>
      </source>
      <source path="rtos/amazon-freertos/lib/FreeRTOS" target_path="amazon-freertos/freertos" type="src">
        <files mask="event_groups.c"/>
        <files mask="list.c"/>
        <files mask="queue.c"/>
        <files mask="stream_buffer.c"/>
        <files mask="tasks.c"/>
        <files mask="timers.c"/>
      </source>
      <source toolchain="armgcc mcuxpresso" path="rtos/amazon-freertos/lib/FreeRTOS/portable/GCC/ARM_CM0" target_path="amazon-freertos/freertos/portable" type="src" device_cores="cm0plus_K32L3A60xxx">
        <files mask="port.c"/>
      </source>
      <source toolchain="armgcc mcuxpresso" path="rtos/amazon-freertos/lib/FreeRTOS/portable/GCC/ARM_CM0" target_path="amazon-freertos/freertos/portable" type="c_include" device_cores="cm0plus_K32L3A60xxx">
        <files mask="portmacro.h"/>
      </source>
      <source toolchain="armgcc mcuxpresso" path="rtos/amazon-freertos/lib/FreeRTOS/portable/GCC/ARM_CM4F" target_path="amazon-freertos/freertos/portable" type="src" device_cores="cm4_K32L3A60xxx">
        <files mask="port.c"/>
      </source>
      <source toolchain="armgcc mcuxpresso" path="rtos/amazon-freertos/lib/FreeRTOS/portable/GCC/ARM_CM4F" target_path="amazon-freertos/freertos/portable" type="c_include" device_cores="cm4_K32L3A60xxx">
        <files mask="portmacro.h"/>
      </source>
      <source toolchain="iar" path="rtos/amazon-freertos/lib/FreeRTOS/portable/IAR/ARM_CM0" target_path="amazon-freertos/freertos/portable" type="src" device_cores="cm0plus_K32L3A60xxx">
        <files mask="port.c"/>
      </source>
      <source toolchain="iar" path="rtos/amazon-freertos/lib/FreeRTOS/portable/IAR/ARM_CM0" target_path="amazon-freertos/freertos/portable" type="asm_include" device_cores="cm0plus_K32L3A60xxx">
        <files mask="portasm.s"/>
      </source>
      <source toolchain="iar" path="rtos/amazon-freertos/lib/FreeRTOS/portable/IAR/ARM_CM0" target_path="amazon-freertos/freertos/portable" type="c_include" device_cores="cm0plus_K32L3A60xxx">
        <files mask="portmacro.h"/>
      </source>
      <source toolchain="iar" path="rtos/amazon-freertos/lib/FreeRTOS/portable/IAR/ARM_CM4F" target_path="amazon-freertos/freertos/portable" type="src" device_cores="cm4_K32L3A60xxx">
        <files mask="port.c"/>
      </source>
      <source toolchain="iar" path="rtos/amazon-freertos/lib/FreeRTOS/portable/IAR/ARM_CM4F" target_path="amazon-freertos/freertos/portable" type="asm_include" device_cores="cm4_K32L3A60xxx">
        <files mask="portasm.s"/>
      </source>
      <source toolchain="iar" path="rtos/amazon-freertos/lib/FreeRTOS/portable/IAR/ARM_CM4F" target_path="amazon-freertos/freertos/portable" type="c_include" device_cores="cm4_K32L3A60xxx">
        <files mask="portmacro.h"/>
      </source>
      <source toolchain="mdk" path="rtos/amazon-freertos/lib/FreeRTOS/portable/RVDS/ARM_CM0" target_path="amazon-freertos/freertos/portable" type="src" device_cores="cm0plus_K32L3A60xxx">
        <files mask="port.c"/>
      </source>
      <source toolchain="mdk" path="rtos/amazon-freertos/lib/FreeRTOS/portable/RVDS/ARM_CM0" target_path="amazon-freertos/freertos/portable" type="c_include" device_cores="cm0plus_K32L3A60xxx">
        <files mask="portmacro.h"/>
      </source>
      <source toolchain="mdk" path="rtos/amazon-freertos/lib/FreeRTOS/portable/RVDS/ARM_CM4F" target_path="amazon-freertos/freertos/portable" type="src" device_cores="cm4_K32L3A60xxx">
        <files mask="port.c"/>
      </source>
      <source toolchain="mdk" path="rtos/amazon-freertos/lib/FreeRTOS/portable/RVDS/ARM_CM4F" target_path="amazon-freertos/freertos/portable" type="c_include" device_cores="cm4_K32L3A60xxx">
        <files mask="portmacro.h"/>
      </source>
      <source path="rtos/amazon-freertos/lib/FreeRTOS/portable" target_path="amazon-freertos/freertos/portable" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib" target_path="amazon-freertos/license" type="doc">
        <files mask="directories.txt"/>
      </source>
      <source path="rtos/amazon-freertos/lib/include" target_path="amazon-freertos/include" type="c_include">
        <files mask="FreeRTOS.h"/>
        <files mask="event_groups.h"/>
        <files mask="freertos_tasks_c_additions.h"/>
        <files mask="message_buffer.h"/>
        <files mask="queue.h"/>
        <files mask="semphr.h"/>
        <files mask="stream_buffer.h"/>
        <files mask="task.h"/>
        <files mask="timers.h"/>
      </source>
      <source path="rtos/amazon-freertos/lib/include/private" target_path="amazon-freertos/include" type="c_include">
        <files mask="deprecated_definitions.h"/>
        <files mask="list.h"/>
        <files mask="mpu_prototypes.h"/>
        <files mask="mpu_wrappers.h"/>
        <files mask="portable.h"/>
        <files mask="projdefs.h"/>
        <files mask="stack_macros.h"/>
        <files mask="threading_alt.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.freertos.freertos_plus_posix.K32L3A60" name="Amazon-FreeRTOS plus POSIX" brief="Amazon FreeRTOS plus POSIX" version="10.2.0" full_name="Amazon-FreeRTOS plus POSIX" devices="K32L3A60xxx" category="Operating System/FreeRTOS Operating System" user_visible="true" type="other">
      <source path="rtos/amazon-freertos/lib/FreeRTOS-Plus-POSIX/include" target_path="amazon-freertos/freertos-plus-posix" type="c_include">
        <files mask="FreeRTOS_POSIX.h"/>
        <files mask="FreeRTOS_POSIX_internal.h"/>
        <files mask="FreeRTOS_POSIX_types.h"/>
      </source>
      <source path="rtos/amazon-freertos/lib/FreeRTOS-Plus-POSIX/include/portable" target_path="amazon-freertos/freertos-plus-posix" type="c_include">
        <files mask="FreeRTOS_POSIX_portable_default.h"/>
      </source>
      <source path="rtos/amazon-freertos/lib/FreeRTOS-Plus-POSIX/include/portable/nxp/lpc54018iotmodule" target_path="amazon-freertos/freertos-plus-posix" type="c_include">
        <files mask="FreeRTOS_POSIX_portable.h"/>
      </source>
      <source path="rtos/amazon-freertos/lib/FreeRTOS-Plus-POSIX/source" target_path="amazon-freertos/freertos-plus-posix" type="src">
        <files mask="FreeRTOS_POSIX_clock.c"/>
        <files mask="FreeRTOS_POSIX_mqueue.c"/>
        <files mask="FreeRTOS_POSIX_pthread.c"/>
        <files mask="FreeRTOS_POSIX_pthread_barrier.c"/>
        <files mask="FreeRTOS_POSIX_pthread_cond.c"/>
        <files mask="FreeRTOS_POSIX_pthread_mutex.c"/>
        <files mask="FreeRTOS_POSIX_sched.c"/>
        <files mask="FreeRTOS_POSIX_semaphore.c"/>
        <files mask="FreeRTOS_POSIX_timer.c"/>
        <files mask="FreeRTOS_POSIX_unistd.c"/>
        <files mask="FreeRTOS_POSIX_utils.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/include/FreeRTOS_POSIX" target_path="amazon-freertos/freertos-plus-posix" type="c_include">
        <files mask="errno.h"/>
        <files mask="fcntl.h"/>
        <files mask="mqueue.h"/>
        <files mask="pthread.h"/>
        <files mask="sched.h"/>
        <files mask="semaphore.h"/>
        <files mask="signal.h"/>
        <files mask="time.h"/>
        <files mask="unistd.h"/>
        <files mask="utils.h"/>
      </source>
      <source path="rtos/amazon-freertos/lib/include/FreeRTOS_POSIX/sys" target_path="amazon-freertos/freertos-plus-posix" type="c_include">
        <files mask="types.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.freertos.freertos_plus_tcp.K32L3A60" name="Amazon-FreeRTOS plus TCP" brief="Amazon FreeRTOS plus TCP" version="10.2.0" full_name="Amazon-FreeRTOS plus TCP" devices="K32L3A60xxx" category="Operating System/FreeRTOS Operating System" user_visible="true" type="other">
      <source path="rtos/amazon-freertos/lib/FreeRTOS-Plus-TCP/include" target_path="amazon-freertos/freertos-plus-posix" type="c_include">
        <files mask="FreeRTOSIPConfigDefaults.h"/>
        <files mask="FreeRTOS_ARP.h"/>
        <files mask="FreeRTOS_DHCP.h"/>
        <files mask="FreeRTOS_DNS.h"/>
        <files mask="FreeRTOS_IP.h"/>
        <files mask="FreeRTOS_IP_Private.h"/>
        <files mask="FreeRTOS_Sockets.h"/>
        <files mask="FreeRTOS_Stream_Buffer.h"/>
        <files mask="FreeRTOS_TCP_IP.h"/>
        <files mask="FreeRTOS_TCP_WIN.h"/>
        <files mask="FreeRTOS_UDP_IP.h"/>
        <files mask="FreeRTOS_errno_TCP.h"/>
        <files mask="IPTraceMacroDefaults.h"/>
        <files mask="NetworkBufferManagement.h"/>
        <files mask="NetworkInterface.h"/>
      </source>
      <source path="rtos/amazon-freertos/lib/FreeRTOS-Plus-TCP/source" target_path="amazon-freertos/freertos-plus-posix" type="src">
        <files mask="FreeRTOS_ARP.c"/>
        <files mask="FreeRTOS_DHCP.c"/>
        <files mask="FreeRTOS_DNS.c"/>
        <files mask="FreeRTOS_IP.c"/>
        <files mask="FreeRTOS_Sockets.c"/>
        <files mask="FreeRTOS_Stream_Buffer.c"/>
        <files mask="FreeRTOS_TCP_IP.c"/>
        <files mask="FreeRTOS_TCP_WIN.c"/>
        <files mask="FreeRTOS_UDP_IP.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/FreeRTOS-Plus-TCP/source" target_path="amazon-freertos/freertos-plus-posix" type="doc">
        <files mask="History.txt"/>
        <files mask="readme.txt"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/FreeRTOS-Plus-TCP/source" target_path="amazon-freertos/freertos-plus-posix" type="other">
        <files mask="ReadMe.url"/>
      </source>
      <source path="rtos/amazon-freertos/lib/FreeRTOS-Plus-TCP/source/portable/BufferManagement" target_path="amazon-freertos/freertos-plus-posix" type="src">
        <files mask="BufferAllocation_1.c"/>
        <files mask="BufferAllocation_2.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/FreeRTOS-Plus-TCP/source/portable/Compiler/CompilerName" target_path="amazon-freertos/freertos-plus-posix" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/FreeRTOS-Plus-TCP/source/portable/Compiler/CompilerName" target_path="amazon-freertos/freertos-plus-posix" type="c_include">
        <files mask="pack_struct_end.h"/>
        <files mask="pack_struct_start.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/FreeRTOS-Plus-TCP/source/portable/Compiler/GCC" target_path="amazon-freertos/freertos-plus-posix" type="c_include">
        <files mask="pack_struct_end.h"/>
        <files mask="pack_struct_start.h"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/FreeRTOS-Plus-TCP/source/portable/Compiler/IAR" target_path="amazon-freertos/freertos-plus-posix" type="c_include">
        <files mask="pack_struct_end.h"/>
        <files mask="pack_struct_start.h"/>
      </source>
      <source path="rtos/amazon-freertos/lib/FreeRTOS-Plus-TCP/source/portable/NetworkInterface/LPC17xx" target_path="amazon-freertos/freertos-plus-posix" type="src">
        <files mask="NetworkInterface.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/FreeRTOS-Plus-TCP/source/portable/NetworkInterface/LPC18xx" target_path="amazon-freertos/freertos-plus-posix" type="src">
        <files mask="NetworkInterface.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/FreeRTOS-Plus-TCP/source/portable/NetworkInterface/LPC18xx" target_path="amazon-freertos/freertos-plus-posix" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/FreeRTOS-Plus-TCP/source/portable/NetworkInterface" target_path="amazon-freertos/freertos-plus-posix" type="doc">
        <files mask="README_DRIVER_DISCLAIMER.txt"/>
      </source>
      <source path="rtos/amazon-freertos/lib/FreeRTOS-Plus-TCP/source/portable/NetworkInterface/board_family" target_path="amazon-freertos/freertos-plus-posix" type="src">
        <files mask="NetworkInterface.c"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/FreeRTOS-Plus-TCP/source/portable/NetworkInterface/board_family" target_path="amazon-freertos/freertos-plus-posix" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.freertos.heap_1.K32L3A60" name="heap_1" brief="FreeRTOS heap_1 allocator" version="10.2.0" full_name="FreeRTOS_heap_1" devices="K32L3A60xxx" dependency="middleware.amazon_freertos.freertos.K32L3A60 middleware.template_application.amazon_freertos.K32L3A60" category="Operating System/FreeRTOS Operating System" user_visible="true" type="other">
      <source path="rtos/amazon-freertos/lib/FreeRTOS/portable/MemMang" target_path="amazon-freertos/freertos/portable" type="src">
        <files mask="heap_1.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.freertos.heap_2.K32L3A60" name="heap_2" brief="FreeRTOS heap_2 allocator" version="10.2.0" full_name="FreeRTOS_heap_2" devices="K32L3A60xxx" dependency="middleware.amazon_freertos.freertos.K32L3A60 middleware.template_application.amazon_freertos.K32L3A60" category="Operating System/FreeRTOS Operating System" user_visible="true" type="other">
      <source path="rtos/amazon-freertos/lib/FreeRTOS/portable/MemMang" target_path="amazon-freertos/freertos/portable" type="src">
        <files mask="heap_2.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.freertos.heap_3.K32L3A60" name="heap_3" brief="FreeRTOS heap_3 allocator" version="10.2.0" full_name="FreeRTOS_heap_3" devices="K32L3A60xxx" dependency="middleware.amazon_freertos.freertos.K32L3A60 middleware.template_application.amazon_freertos.K32L3A60 platform.utilities.misc_utilities.K32L3A60" category="Operating System/FreeRTOS Operating System" user_visible="true" type="other">
      <source path="rtos/amazon-freertos/lib/FreeRTOS/portable/MemMang" target_path="amazon-freertos/freertos/portable" type="src">
        <files mask="heap_3.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.freertos.heap_4.K32L3A60" name="heap_4" brief="FreeRTOS heap_4 allocator" version="10.2.0" full_name="FreeRTOS_heap_4" devices="K32L3A60xxx" dependency="middleware.amazon_freertos.freertos.K32L3A60 middleware.template_application.amazon_freertos.K32L3A60" category="Operating System/FreeRTOS Operating System" user_visible="true" type="other">
      <source path="rtos/amazon-freertos/lib/FreeRTOS/portable/MemMang" target_path="amazon-freertos/freertos/portable" type="src">
        <files mask="heap_4.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.freertos.heap_5.K32L3A60" name="heap_5" brief="FreeRTOS heap_5 allocator" version="10.2.0" full_name="FreeRTOS_heap_5" devices="K32L3A60xxx" dependency="middleware.amazon_freertos.freertos.K32L3A60 middleware.template_application.amazon_freertos.K32L3A60" category="Operating System/FreeRTOS Operating System" user_visible="true" type="other">
      <source path="rtos/amazon-freertos/lib/FreeRTOS/portable/MemMang" target_path="amazon-freertos/freertos/portable" type="src">
        <files mask="heap_5.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos.freertos.heap_newlib.K32L3A60" name="heap_newlib" brief="FreeRTOS heap_newlib allocator" version="10.2.0" full_name="FreeRTOS_heap_newlib" devices="K32L3A60xxx" dependency="middleware.amazon_freertos.freertos.K32L3A60 middleware.template_application.amazon_freertos.K32L3A60" category="Operating System/FreeRTOS Operating System" user_visible="true" type="other">
      <source path="rtos/amazon-freertos/lib/FreeRTOS/portable/MemMang" target_path="amazon-freertos/freertos/portable" type="src">
        <files mask="heap_useNewlib.c"/>
      </source>
    </component>
    <component id="middleware.baremetal.K32L3A60" name="baremetal" version="1.0.0" full_name="Baremetal" devices="K32L3A60xxx" user_visible="true" type="OS">
      <defines>
        <define name="FSL_RTOS_BM" value=""/>
        <define name="SDK_OS_BAREMETAL" value=""/>
      </defines>
    </component>
    <component id="middleware.fatfs.K32L3A60" name="fatfs" brief="FatFs" version="0.13.1" revision="0" full_name="FAT File System stack" devices="K32L3A60xxx" category="File System/FAT File System" user_visible="false" type="middleware">
      <source path="middleware/fatfs/source" target_path="fatfs/source" type="src">
        <files mask="diskio.c"/>
        <files mask="ff.c"/>
        <files mask="ffsystem.c"/>
        <files mask="ffunicode.c"/>
      </source>
      <source path="middleware/fatfs/source" target_path="fatfs/source" type="c_include">
        <files mask="diskio.h"/>
        <files mask="ff.h"/>
      </source>
    </component>
    <component id="middleware.fatfs.mmc.K32L3A60" name="mmc" brief="FatFs_MMC" version="0.13" full_name="Fatfs MMC layer" devices="K32L3A60xxx" dependency="middleware.fatfs.K32L3A60 middleware.sdmmc.common.K32L3A60 middleware.sdmmc.mmc.K32L3A60" category="File System/FAT File System" user_visible="false" type="middleware">
      <source path="middleware/fatfs/source/fsl_mmc_disk" target_path="fatfs/source/fsl_mmc_disk" type="src">
        <files mask="fsl_mmc_disk.c"/>
      </source>
      <source path="middleware/fatfs/source/fsl_mmc_disk" target_path="fatfs/source/fsl_mmc_disk" type="c_include">
        <files mask="fsl_mmc_disk.h"/>
      </source>
    </component>
    <component id="middleware.fatfs.nand.K32L3A60" name="nand" brief="FatFs_NAND" version="0.13" full_name="Fatfs NAND layer" devices="K32L3A60xxx" dependency="middleware.fatfs.K32L3A60" category="File System/FAT File System" user_visible="false" type="middleware">
      <source path="middleware/fatfs/source/fsl_nand_disk" target_path="fatfs/source/fsl_nand_disk" type="src">
        <files mask="fsl_nand_disk.c"/>
      </source>
      <source path="middleware/fatfs/source/fsl_nand_disk" target_path="fatfs/source/fsl_nand_disk" type="c_include">
        <files mask="fsl_nand_disk.h"/>
      </source>
    </component>
    <component id="middleware.fatfs.ram.K32L3A60" name="ram" brief="FatFs_RAM" version="0.13" full_name="Fatfs RAM layer" devices="K32L3A60xxx" dependency="middleware.fatfs.K32L3A60" category="File System/FAT File System" user_visible="false" type="middleware">
      <source path="middleware/fatfs/source/fsl_ram_disk" target_path="fatfs/source/fsl_ram_disk" type="src">
        <files mask="fsl_ram_disk.c"/>
      </source>
      <source path="middleware/fatfs/source/fsl_ram_disk" target_path="fatfs/source/fsl_ram_disk" type="c_include">
        <files mask="fsl_ram_disk.h"/>
      </source>
    </component>
    <component id="middleware.fatfs.sd.K32L3A60" name="sd" brief="FatFs_SD" version="0.13" full_name="Fatfs SD layer" devices="K32L3A60xxx" dependency="middleware.fatfs.K32L3A60 middleware.sdmmc.common.K32L3A60 middleware.sdmmc.sd.K32L3A60" category="File System/FAT File System" user_visible="false" type="middleware">
      <source path="middleware/fatfs/source/fsl_sd_disk" target_path="fatfs/source/fsl_sd_disk" type="src">
        <files mask="fsl_sd_disk.c"/>
      </source>
      <source path="middleware/fatfs/source/fsl_sd_disk" target_path="fatfs/source/fsl_sd_disk" type="c_include">
        <files mask="fsl_sd_disk.h"/>
      </source>
    </component>
    <component id="middleware.fatfs.unused_files.K32L3A60" name="unused_files" brief="fatfs files unused by projects" version="3.9.8" revision="3" devices="K32L3A60xxx" user_visible="false" type="other">
      <source exclude="true" path="middleware/fatfs" target_path="fatfs" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
        <files mask="LICENSE.txt"/>
      </source>
      <source exclude="true" path="middleware/fatfs/documents" target_path="fatfs/source" type="doc">
        <files mask="00index_e.html"/>
        <files mask="css_e.css"/>
        <files mask="updates.txt"/>
      </source>
      <source exclude="true" path="middleware/fatfs/documents/doc" target_path="fatfs/source" type="doc">
        <files mask="appnote.html"/>
        <files mask="chdir.html"/>
        <files mask="chdrive.html"/>
        <files mask="chmod.html"/>
        <files mask="close.html"/>
        <files mask="closedir.html"/>
        <files mask="config.html"/>
        <files mask="dinit.html"/>
        <files mask="dioctl.html"/>
        <files mask="dread.html"/>
        <files mask="dstat.html"/>
        <files mask="dwrite.html"/>
        <files mask="eof.html"/>
        <files mask="error.html"/>
        <files mask="expand.html"/>
        <files mask="fattime.html"/>
        <files mask="fdisk.html"/>
        <files mask="filename.html"/>
        <files mask="findfirst.html"/>
        <files mask="findnext.html"/>
        <files mask="forward.html"/>
        <files mask="getcwd.html"/>
        <files mask="getfree.html"/>
        <files mask="getlabel.html"/>
        <files mask="gets.html"/>
        <files mask="lseek.html"/>
        <files mask="mkdir.html"/>
        <files mask="mkfs.html"/>
        <files mask="mount.html"/>
        <files mask="open.html"/>
        <files mask="opendir.html"/>
        <files mask="printf.html"/>
        <files mask="putc.html"/>
        <files mask="puts.html"/>
        <files mask="rc.html"/>
        <files mask="read.html"/>
        <files mask="readdir.html"/>
        <files mask="rename.html"/>
        <files mask="sdir.html"/>
        <files mask="setcp.html"/>
        <files mask="setlabel.html"/>
        <files mask="sfatfs.html"/>
        <files mask="sfile.html"/>
        <files mask="sfileinfo.html"/>
        <files mask="size.html"/>
        <files mask="stat.html"/>
        <files mask="sync.html"/>
        <files mask="tell.html"/>
        <files mask="truncate.html"/>
        <files mask="unlink.html"/>
        <files mask="utime.html"/>
        <files mask="write.html"/>
      </source>
      <source exclude="true" path="middleware/fatfs/documents/res" target_path="fatfs/source" type="src">
        <files mask="app1.c"/>
        <files mask="app2.c"/>
        <files mask="app3.c"/>
        <files mask="app4.c"/>
        <files mask="app5.c"/>
      </source>
      <source exclude="true" path="middleware/fatfs/documents/res" target_path="fatfs/source" type="image">
        <files mask="f1.png"/>
        <files mask="f2.png"/>
        <files mask="f3.png"/>
        <files mask="f4.png"/>
        <files mask="f5.png"/>
        <files mask="f6.png"/>
        <files mask="f7.png"/>
        <files mask="funcs.png"/>
        <files mask="layers.png"/>
        <files mask="layers1.png"/>
        <files mask="layers2.png"/>
        <files mask="layers3.png"/>
        <files mask="modules.png"/>
        <files mask="rwtest1.png"/>
        <files mask="rwtest2.png"/>
        <files mask="rwtest3.png"/>
      </source>
      <source exclude="true" path="middleware/fatfs/documents/res" target_path="fatfs/source" type="archive">
        <files mask="mkfatimg.zip"/>
      </source>
      <source exclude="true" path="middleware/fatfs/documents/res" target_path="fatfs/source" type="doc">
        <files mask="mkfs.xls"/>
      </source>
      <source exclude="true" path="middleware/fatfs/source" target_path="fatfs/source" type="doc">
        <files mask="00history.txt"/>
        <files mask="00readme.txt"/>
      </source>
      <source exclude="true" path="middleware/fatfs/source" target_path="fatfs/source" type="c_include">
        <files mask="ffconf_template.h"/>
      </source>
    </component>
    <component id="middleware.mbedtls.K32L3A60" name="mbedtls" brief="mbedTLS library" version="2.13.1" devices="K32L3A60xxx" dependency="middleware.template_application.mbedtls.K32L3A60" category="Security/mbedTLS library" user_visible="true" type="middleware">
      <source path="middleware/mbedtls/include/mbedtls" target_path="mbedtls/include/mbedtls" type="src">
        <files mask="aes.h"/>
        <files mask="aesni.h"/>
        <files mask="arc4.h"/>
        <files mask="aria.h"/>
        <files mask="asn1.h"/>
        <files mask="asn1write.h"/>
        <files mask="base64.h"/>
        <files mask="bignum.h"/>
        <files mask="blowfish.h"/>
        <files mask="bn_mul.h"/>
        <files mask="camellia.h"/>
        <files mask="ccm.h"/>
        <files mask="certs.h"/>
        <files mask="chacha20.h"/>
        <files mask="chachapoly.h"/>
        <files mask="check_config.h"/>
        <files mask="cipher.h"/>
        <files mask="cipher_internal.h"/>
        <files mask="cmac.h"/>
        <files mask="compat-1.3.h"/>
        <files mask="config.h"/>
        <files mask="ctr_drbg.h"/>
        <files mask="debug.h"/>
        <files mask="des.h"/>
        <files mask="dhm.h"/>
        <files mask="ecdh.h"/>
        <files mask="ecdsa.h"/>
        <files mask="ecjpake.h"/>
        <files mask="ecp.h"/>
        <files mask="ecp_internal.h"/>
        <files mask="entropy.h"/>
        <files mask="entropy_poll.h"/>
        <files mask="error.h"/>
        <files mask="gcm.h"/>
        <files mask="havege.h"/>
        <files mask="hkdf.h"/>
        <files mask="hmac_drbg.h"/>
        <files mask="md.h"/>
        <files mask="md2.h"/>
        <files mask="md4.h"/>
        <files mask="md5.h"/>
        <files mask="md_internal.h"/>
        <files mask="memory_buffer_alloc.h"/>
        <files mask="net.h"/>
        <files mask="net_sockets.h"/>
        <files mask="nist_kw.h"/>
        <files mask="oid.h"/>
        <files mask="padlock.h"/>
        <files mask="pem.h"/>
        <files mask="pk.h"/>
        <files mask="pk_internal.h"/>
        <files mask="pkcs11.h"/>
        <files mask="pkcs12.h"/>
        <files mask="pkcs5.h"/>
        <files mask="platform.h"/>
        <files mask="platform_time.h"/>
        <files mask="platform_util.h"/>
        <files mask="poly1305.h"/>
        <files mask="ripemd160.h"/>
        <files mask="rsa.h"/>
        <files mask="rsa_internal.h"/>
        <files mask="sha1.h"/>
        <files mask="sha256.h"/>
        <files mask="sha512.h"/>
        <files mask="ssl.h"/>
        <files mask="ssl_cache.h"/>
        <files mask="ssl_ciphersuites.h"/>
        <files mask="ssl_cookie.h"/>
        <files mask="ssl_internal.h"/>
        <files mask="ssl_ticket.h"/>
        <files mask="threading.h"/>
        <files mask="timing.h"/>
        <files mask="version.h"/>
        <files mask="x509.h"/>
        <files mask="x509_crl.h"/>
        <files mask="x509_crt.h"/>
        <files mask="x509_csr.h"/>
        <files mask="xtea.h"/>
      </source>
      <source path="middleware/mbedtls/library" target_path="mbedtls/library" type="src">
        <files mask="aes.c"/>
        <files mask="aesni.c"/>
        <files mask="arc4.c"/>
        <files mask="aria.c"/>
        <files mask="asn1parse.c"/>
        <files mask="asn1write.c"/>
        <files mask="base64.c"/>
        <files mask="bignum.c"/>
        <files mask="blowfish.c"/>
        <files mask="camellia.c"/>
        <files mask="ccm.c"/>
        <files mask="certs.c"/>
        <files mask="chacha20.c"/>
        <files mask="chachapoly.c"/>
        <files mask="cipher.c"/>
        <files mask="cipher_wrap.c"/>
        <files mask="cmac.c"/>
        <files mask="ctr_drbg.c"/>
        <files mask="debug.c"/>
        <files mask="des.c"/>
        <files mask="dhm.c"/>
        <files mask="ecdh.c"/>
        <files mask="ecdsa.c"/>
        <files mask="ecjpake.c"/>
        <files mask="ecp.c"/>
        <files mask="ecp_curves.c"/>
        <files mask="entropy.c"/>
        <files mask="entropy_poll.c"/>
        <files mask="error.c"/>
        <files mask="gcm.c"/>
        <files mask="havege.c"/>
        <files mask="hkdf.c"/>
        <files mask="hmac_drbg.c"/>
        <files mask="md.c"/>
        <files mask="md2.c"/>
        <files mask="md4.c"/>
        <files mask="md5.c"/>
        <files mask="md_wrap.c"/>
        <files mask="memory_buffer_alloc.c"/>
        <files mask="net_sockets.c"/>
        <files mask="nist_kw.c"/>
        <files mask="oid.c"/>
        <files mask="padlock.c"/>
        <files mask="pem.c"/>
        <files mask="pk.c"/>
        <files mask="pk_wrap.c"/>
        <files mask="pkcs11.c"/>
        <files mask="pkcs12.c"/>
        <files mask="pkcs5.c"/>
        <files mask="pkparse.c"/>
        <files mask="pkwrite.c"/>
        <files mask="platform.c"/>
        <files mask="platform_util.c"/>
        <files mask="poly1305.c"/>
        <files mask="ripemd160.c"/>
        <files mask="rsa.c"/>
        <files mask="rsa_internal.c"/>
        <files mask="sha1.c"/>
        <files mask="sha256.c"/>
        <files mask="sha512.c"/>
        <files mask="ssl_cache.c"/>
        <files mask="ssl_ciphersuites.c"/>
        <files mask="ssl_cli.c"/>
        <files mask="ssl_cookie.c"/>
        <files mask="ssl_srv.c"/>
        <files mask="ssl_ticket.c"/>
        <files mask="ssl_tls.c"/>
        <files mask="threading.c"/>
        <files mask="timing.c"/>
        <files mask="version.c"/>
        <files mask="version_features.c"/>
        <files mask="x509.c"/>
        <files mask="x509_create.c"/>
        <files mask="x509_crl.c"/>
        <files mask="x509_crt.c"/>
        <files mask="x509_csr.c"/>
        <files mask="x509write_crt.c"/>
        <files mask="x509write_csr.c"/>
        <files mask="xtea.c"/>
      </source>
      <source path="middleware/mbedtls/port/ksdk" target_path="mbedtls/port/ksdk" type="src">
        <files mask="aes_alt.c"/>
        <files mask="des_alt.c"/>
        <files mask="ecp_alt.c"/>
        <files mask="ecp_alt_ksdk.c"/>
        <files mask="ecp_curves_alt.c"/>
        <files mask="ksdk_mbedtls.c"/>
      </source>
      <source path="middleware/mbedtls/port/ksdk" target_path="mbedtls/port/ksdk" type="c_include">
        <files mask="aes_alt.h"/>
        <files mask="des_alt.h"/>
        <files mask="ecp_alt.h"/>
        <files mask="ksdk_mbedtls.h"/>
        <files mask="ksdk_mbedtls_config.h"/>
        <files mask="sha1_alt.h"/>
        <files mask="sha256_alt.h"/>
      </source>
      <include_paths>
        <include_path path="mbedtls/include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls.unused_files.K32L3A60" name="unused_files" brief="mbedTLS files unused by projects" version="2.13.1" devices="K32L3A60xxx" category="Security/mbedTLS library" user_visible="false" type="other">
      <source exclude="true" path="middleware/mbedtls" target_path="mbedtls" type="other">
        <files mask=".gitignore"/>
        <files mask=".travis.yml"/>
        <files mask="ChangeLog"/>
        <files mask="DartConfiguration.tcl"/>
        <files mask="LICENSE"/>
        <files mask="Makefile"/>
        <files mask="README.md"/>
        <files mask="circle.yml"/>
      </source>
      <source exclude="true" path="middleware/mbedtls" target_path="mbedtls" type="doc">
        <files mask="CMakeLists.txt"/>
        <files mask="ChangeLogKSDK.txt"/>
        <files mask="apache-2.0.txt"/>
        <files mask="mbeTLS_for_Kinetis_SDK_v2.0_readme.txt"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/configs" target_path="mbedtls/configs" type="doc">
        <files mask="README.txt"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/configs" target_path="mbedtls/configs" type="c_include">
        <files mask="config-ccm-psk-tls1_2.h"/>
        <files mask="config-mini-tls1_1.h"/>
        <files mask="config-no-entropy.h"/>
        <files mask="config-suite-b.h"/>
        <files mask="config-thread.h"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/doxygen/input" target_path="mbedtls/doxygen/input" type="c_include">
        <files mask="doc_encdec.h"/>
        <files mask="doc_hashing.h"/>
        <files mask="doc_mainpage.h"/>
        <files mask="doc_rng.h"/>
        <files mask="doc_ssltls.h"/>
        <files mask="doc_tcpip.h"/>
        <files mask="doc_x509.h"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/doxygen" target_path="mbedtls/doxygen" type="other">
        <files mask="mbedtls.doxyfile"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/include" target_path="mbedtls/include" type="other">
        <files mask=".gitignore"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/include" target_path="mbedtls/include" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/library" target_path="mbedtls/library" type="other">
        <files mask=".gitignore"/>
        <files mask="Makefile"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/library" target_path="mbedtls/library" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs" target_path="mbedtls/programs" type="other">
        <files mask="Makefile"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/aes" target_path="mbedtls/programs/aes" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/aes" target_path="mbedtls/programs/aes" type="src">
        <files mask="aescrypt2.c"/>
        <files mask="crypt_and_hash.c"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/hash" target_path="mbedtls/programs/hash" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/hash" target_path="mbedtls/programs/hash" type="src">
        <files mask="generic_sum.c"/>
        <files mask="hello.c"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/pkey" target_path="mbedtls/programs/pkey" type="doc">
        <files mask="CMakeLists.txt"/>
        <files mask="dh_prime.txt"/>
        <files mask="rsa_priv.txt"/>
        <files mask="rsa_pub.txt"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/pkey" target_path="mbedtls/programs/pkey" type="src">
        <files mask="dh_client.c"/>
        <files mask="dh_genprime.c"/>
        <files mask="dh_server.c"/>
        <files mask="ecdh_curve25519.c"/>
        <files mask="ecdsa.c"/>
        <files mask="gen_key.c"/>
        <files mask="key_app.c"/>
        <files mask="key_app_writer.c"/>
        <files mask="mpi_demo.c"/>
        <files mask="pk_decrypt.c"/>
        <files mask="pk_encrypt.c"/>
        <files mask="pk_sign.c"/>
        <files mask="pk_verify.c"/>
        <files mask="rsa_decrypt.c"/>
        <files mask="rsa_encrypt.c"/>
        <files mask="rsa_genkey.c"/>
        <files mask="rsa_sign.c"/>
        <files mask="rsa_sign_pss.c"/>
        <files mask="rsa_verify.c"/>
        <files mask="rsa_verify_pss.c"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/random" target_path="mbedtls/programs/random" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/random" target_path="mbedtls/programs/random" type="src">
        <files mask="gen_entropy.c"/>
        <files mask="gen_random_ctr_drbg.c"/>
        <files mask="gen_random_havege.c"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/ssl" target_path="mbedtls/programs/ssl" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/ssl" target_path="mbedtls/programs/ssl" type="src">
        <files mask="dtls_client.c"/>
        <files mask="dtls_server.c"/>
        <files mask="mini_client.c"/>
        <files mask="ssl_client1.c"/>
        <files mask="ssl_client2.c"/>
        <files mask="ssl_fork_server.c"/>
        <files mask="ssl_mail_client.c"/>
        <files mask="ssl_pthread_server.c"/>
        <files mask="ssl_server.c"/>
        <files mask="ssl_server2.c"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/test" target_path="mbedtls/programs/test" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/test" target_path="mbedtls/programs/test" type="src">
        <files mask="benchmark.c"/>
        <files mask="cpp_dummy_build.cpp"/>
        <files mask="selftest.c"/>
        <files mask="ssl_cert_test.c"/>
        <files mask="udp_proxy.c"/>
        <files mask="zeroize.c"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/test" target_path="mbedtls/programs/test" type="script">
        <files mask="udp_proxy_wrapper.sh"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/util" target_path="mbedtls/programs/util" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/util" target_path="mbedtls/programs/util" type="src">
        <files mask="pem2der.c"/>
        <files mask="strerror.c"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/x509" target_path="mbedtls/programs/x509" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/programs/x509" target_path="mbedtls/programs/x509" type="src">
        <files mask="cert_app.c"/>
        <files mask="cert_req.c"/>
        <files mask="cert_write.c"/>
        <files mask="crl_app.c"/>
        <files mask="req_app.c"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/scripts" target_path="mbedtls/scripts" type="script">
        <files mask="abi_check.py"/>
        <files mask="apidoc_full.sh"/>
        <files mask="bump_version.sh"/>
        <files mask="ecc-heap.sh"/>
        <files mask="footprint.sh"/>
        <files mask="memory.sh"/>
        <files mask="output_env.sh"/>
        <files mask="tmp_ignore_makefiles.sh"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/scripts" target_path="mbedtls/scripts" type="other">
        <files mask="config.pl"/>
        <files mask="find-mem-leak.cocci"/>
        <files mask="generate_errors.pl"/>
        <files mask="generate_features.pl"/>
        <files mask="generate_visualc_files.pl"/>
        <files mask="massif_max.pl"/>
        <files mask="rename.pl"/>
        <files mask="rm-calloc-cast.cocci"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/scripts/data_files" target_path="mbedtls/scripts/data_files" type="other">
        <files mask="error.fmt"/>
        <files mask="version_features.fmt"/>
        <files mask="vs2010-app-template.vcxproj"/>
        <files mask="vs2010-main-template.vcxproj"/>
        <files mask="vs2010-sln-template.sln"/>
        <files mask="vs6-app-template.dsp"/>
        <files mask="vs6-main-template.dsp"/>
        <files mask="vs6-workspace-template.dsw"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/scripts/data_files" target_path="mbedtls/scripts/data_files" type="doc">
        <files mask="rename-1.3-2.0.txt"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/tests" target_path="mbedtls/tests" type="other">
        <files mask="Makefile"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/tests/data_files" target_path="mbedtls/tests/data_files" type="other">
        <files mask="Makefile"/>
        <files mask="hash_file_1"/>
        <files mask="hash_file_2"/>
        <files mask="hash_file_3"/>
        <files mask="hash_file_4"/>
        <files mask="hash_file_5"/>
        <files mask="mpi_10"/>
        <files mask="mpi_too_big"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/tests/data_files/dir3" target_path="mbedtls/tests/data_files/dir3" type="other">
        <files mask="Readme"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/tests/data_files/dir4" target_path="mbedtls/tests/data_files/dir4" type="other">
        <files mask="Readme"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/tests/git-scripts" target_path="mbedtls/tests/git-scripts" type="other">
        <files mask="README.md"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/tests/git-scripts" target_path="mbedtls/tests/git-scripts" type="script">
        <files mask="pre-push.sh"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/tests/scripts" target_path="mbedtls/tests/scripts" type="script">
        <files mask="all.sh"/>
        <files mask="basic-build-test.sh"/>
        <files mask="check-files.py"/>
        <files mask="check-generated-files.sh"/>
        <files mask="check-names.sh"/>
        <files mask="check-python-files.sh"/>
        <files mask="doxygen.sh"/>
        <files mask="generate-afl-tests.sh"/>
        <files mask="generate_test_code.py"/>
        <files mask="list-identifiers.sh"/>
        <files mask="list-macros.sh"/>
        <files mask="list-symbols.sh"/>
        <files mask="mbedtls_test.py"/>
        <files mask="test_generate_test_code.py"/>
        <files mask="travis-log-failure.sh"/>
        <files mask="yotta-build.sh"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/tests/scripts" target_path="mbedtls/tests/scripts" type="other">
        <files mask="check-doxy-blocks.pl"/>
        <files mask="curves.pl"/>
        <files mask="depends-hashes.pl"/>
        <files mask="depends-pkalgs.pl"/>
        <files mask="gen_ctr_drbg.pl"/>
        <files mask="gen_gcm_decrypt.pl"/>
        <files mask="gen_gcm_encrypt.pl"/>
        <files mask="gen_pkcs1_v21_sign_verify.pl"/>
        <files mask="key-exchanges.pl"/>
        <files mask="list-enum-consts.pl"/>
        <files mask="recursion.pl"/>
        <files mask="run-test-suites.pl"/>
        <files mask="tcp_client.pl"/>
        <files mask="test-ref-configs.pl"/>
        <files mask="test_zeroize.gdb"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/tests/suites" target_path="mbedtls/tests/suites" type="other">
        <files mask="helpers.function"/>
        <files mask="host_test.function"/>
        <files mask="main_test.function"/>
        <files mask="target_test.function"/>
        <files mask="test_suite_aes.cbc.data"/>
        <files mask="test_suite_aes.cfb.data"/>
        <files mask="test_suite_aes.ecb.data"/>
        <files mask="test_suite_aes.function"/>
        <files mask="test_suite_aes.ofb.data"/>
        <files mask="test_suite_aes.rest.data"/>
        <files mask="test_suite_aes.xts.data"/>
        <files mask="test_suite_arc4.data"/>
        <files mask="test_suite_arc4.function"/>
        <files mask="test_suite_aria.data"/>
        <files mask="test_suite_aria.function"/>
        <files mask="test_suite_asn1write.data"/>
        <files mask="test_suite_asn1write.function"/>
        <files mask="test_suite_base64.data"/>
        <files mask="test_suite_base64.function"/>
        <files mask="test_suite_blowfish.data"/>
        <files mask="test_suite_blowfish.function"/>
        <files mask="test_suite_camellia.data"/>
        <files mask="test_suite_camellia.function"/>
        <files mask="test_suite_ccm.data"/>
        <files mask="test_suite_ccm.function"/>
        <files mask="test_suite_chacha20.data"/>
        <files mask="test_suite_chacha20.function"/>
        <files mask="test_suite_chachapoly.data"/>
        <files mask="test_suite_chachapoly.function"/>
        <files mask="test_suite_cipher.aes.data"/>
        <files mask="test_suite_cipher.arc4.data"/>
        <files mask="test_suite_cipher.blowfish.data"/>
        <files mask="test_suite_cipher.camellia.data"/>
        <files mask="test_suite_cipher.ccm.data"/>
        <files mask="test_suite_cipher.chacha20.data"/>
        <files mask="test_suite_cipher.chachapoly.data"/>
        <files mask="test_suite_cipher.des.data"/>
        <files mask="test_suite_cipher.function"/>
        <files mask="test_suite_cipher.gcm.data"/>
        <files mask="test_suite_cipher.null.data"/>
        <files mask="test_suite_cipher.padding.data"/>
        <files mask="test_suite_cmac.data"/>
        <files mask="test_suite_cmac.function"/>
        <files mask="test_suite_ctr_drbg.data"/>
        <files mask="test_suite_ctr_drbg.function"/>
        <files mask="test_suite_debug.data"/>
        <files mask="test_suite_debug.function"/>
        <files mask="test_suite_des.data"/>
        <files mask="test_suite_des.function"/>
        <files mask="test_suite_dhm.data"/>
        <files mask="test_suite_dhm.function"/>
        <files mask="test_suite_ecdh.data"/>
        <files mask="test_suite_ecdh.function"/>
        <files mask="test_suite_ecdsa.data"/>
        <files mask="test_suite_ecdsa.function"/>
        <files mask="test_suite_ecjpake.data"/>
        <files mask="test_suite_ecjpake.function"/>
        <files mask="test_suite_ecp.data"/>
        <files mask="test_suite_ecp.function"/>
        <files mask="test_suite_entropy.data"/>
        <files mask="test_suite_entropy.function"/>
        <files mask="test_suite_error.data"/>
        <files mask="test_suite_error.function"/>
        <files mask="test_suite_gcm.aes128_de.data"/>
        <files mask="test_suite_gcm.aes128_en.data"/>
        <files mask="test_suite_gcm.aes192_de.data"/>
        <files mask="test_suite_gcm.aes192_en.data"/>
        <files mask="test_suite_gcm.aes256_de.data"/>
        <files mask="test_suite_gcm.aes256_en.data"/>
        <files mask="test_suite_gcm.camellia.data"/>
        <files mask="test_suite_gcm.function"/>
        <files mask="test_suite_hkdf.data"/>
        <files mask="test_suite_hkdf.function"/>
        <files mask="test_suite_hmac_drbg.function"/>
        <files mask="test_suite_hmac_drbg.misc.data"/>
        <files mask="test_suite_hmac_drbg.no_reseed.data"/>
        <files mask="test_suite_hmac_drbg.nopr.data"/>
        <files mask="test_suite_hmac_drbg.pr.data"/>
        <files mask="test_suite_md.data"/>
        <files mask="test_suite_md.function"/>
        <files mask="test_suite_mdx.data"/>
        <files mask="test_suite_mdx.function"/>
        <files mask="test_suite_memory_buffer_alloc.data"/>
        <files mask="test_suite_memory_buffer_alloc.function"/>
        <files mask="test_suite_mpi.data"/>
        <files mask="test_suite_mpi.function"/>
        <files mask="test_suite_nist_kw.data"/>
        <files mask="test_suite_nist_kw.function"/>
        <files mask="test_suite_pem.data"/>
        <files mask="test_suite_pem.function"/>
        <files mask="test_suite_pk.data"/>
        <files mask="test_suite_pk.function"/>
        <files mask="test_suite_pkcs1_v15.data"/>
        <files mask="test_suite_pkcs1_v15.function"/>
        <files mask="test_suite_pkcs1_v21.data"/>
        <files mask="test_suite_pkcs1_v21.function"/>
        <files mask="test_suite_pkcs5.data"/>
        <files mask="test_suite_pkcs5.function"/>
        <files mask="test_suite_pkparse.data"/>
        <files mask="test_suite_pkparse.function"/>
        <files mask="test_suite_pkwrite.data"/>
        <files mask="test_suite_pkwrite.function"/>
        <files mask="test_suite_poly1305.data"/>
        <files mask="test_suite_poly1305.function"/>
        <files mask="test_suite_rsa.data"/>
        <files mask="test_suite_rsa.function"/>
        <files mask="test_suite_shax.data"/>
        <files mask="test_suite_shax.function"/>
        <files mask="test_suite_ssl.data"/>
        <files mask="test_suite_ssl.function"/>
        <files mask="test_suite_timing.data"/>
        <files mask="test_suite_timing.function"/>
        <files mask="test_suite_version.data"/>
        <files mask="test_suite_version.function"/>
        <files mask="test_suite_x509parse.data"/>
        <files mask="test_suite_x509parse.function"/>
        <files mask="test_suite_x509write.data"/>
        <files mask="test_suite_x509write.function"/>
        <files mask="test_suite_xtea.data"/>
        <files mask="test_suite_xtea.function"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/visualc/VS2010" target_path="mbedtls/visualc/VS2010" type="other">
        <files mask="aescrypt2.vcxproj"/>
        <files mask="benchmark.vcxproj"/>
        <files mask="cert_app.vcxproj"/>
        <files mask="cert_req.vcxproj"/>
        <files mask="cert_write.vcxproj"/>
        <files mask="crl_app.vcxproj"/>
        <files mask="crypt_and_hash.vcxproj"/>
        <files mask="dh_client.vcxproj"/>
        <files mask="dh_genprime.vcxproj"/>
        <files mask="dh_server.vcxproj"/>
        <files mask="dtls_client.vcxproj"/>
        <files mask="dtls_server.vcxproj"/>
        <files mask="ecdh_curve25519.vcxproj"/>
        <files mask="ecdsa.vcxproj"/>
        <files mask="gen_entropy.vcxproj"/>
        <files mask="gen_key.vcxproj"/>
        <files mask="gen_random_ctr_drbg.vcxproj"/>
        <files mask="gen_random_havege.vcxproj"/>
        <files mask="generic_sum.vcxproj"/>
        <files mask="hello.vcxproj"/>
        <files mask="key_app.vcxproj"/>
        <files mask="key_app_writer.vcxproj"/>
        <files mask="mbedTLS.sln"/>
        <files mask="mbedTLS.vcxproj"/>
        <files mask="mini_client.vcxproj"/>
        <files mask="mpi_demo.vcxproj"/>
        <files mask="pem2der.vcxproj"/>
        <files mask="pk_decrypt.vcxproj"/>
        <files mask="pk_encrypt.vcxproj"/>
        <files mask="pk_sign.vcxproj"/>
        <files mask="pk_verify.vcxproj"/>
        <files mask="req_app.vcxproj"/>
        <files mask="rsa_decrypt.vcxproj"/>
        <files mask="rsa_encrypt.vcxproj"/>
        <files mask="rsa_genkey.vcxproj"/>
        <files mask="rsa_sign.vcxproj"/>
        <files mask="rsa_sign_pss.vcxproj"/>
        <files mask="rsa_verify.vcxproj"/>
        <files mask="rsa_verify_pss.vcxproj"/>
        <files mask="selftest.vcxproj"/>
        <files mask="ssl_cert_test.vcxproj"/>
        <files mask="ssl_client1.vcxproj"/>
        <files mask="ssl_client2.vcxproj"/>
        <files mask="ssl_fork_server.vcxproj"/>
        <files mask="ssl_mail_client.vcxproj"/>
        <files mask="ssl_server.vcxproj"/>
        <files mask="ssl_server2.vcxproj"/>
        <files mask="strerror.vcxproj"/>
        <files mask="udp_proxy.vcxproj"/>
        <files mask="zeroize.vcxproj"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/yotta/data" target_path="mbedtls/yotta/data" type="other">
        <files mask="README.md"/>
        <files mask="module.json"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/yotta/data" target_path="mbedtls/yotta/data" type="script">
        <files mask="adjust-config.sh"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/yotta/data" target_path="mbedtls/yotta/data" type="src">
        <files mask="entropy_hardware_poll.c"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/yotta/data/example-authcrypt" target_path="mbedtls/yotta/data/example-authcrypt" type="other">
        <files mask="README.md"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/yotta/data/example-authcrypt" target_path="mbedtls/yotta/data/example-authcrypt" type="src">
        <files mask="main.cpp"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/yotta/data/example-benchmark" target_path="mbedtls/yotta/data/example-benchmark" type="other">
        <files mask="README.md"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/yotta/data/example-benchmark" target_path="mbedtls/yotta/data/example-benchmark" type="src">
        <files mask="main.cpp"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/yotta/data/example-hashing" target_path="mbedtls/yotta/data/example-hashing" type="other">
        <files mask="README.md"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/yotta/data/example-hashing" target_path="mbedtls/yotta/data/example-hashing" type="src">
        <files mask="main.cpp"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/yotta/data/example-selftest" target_path="mbedtls/yotta/data/example-selftest" type="other">
        <files mask="README.md"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/yotta/data/example-selftest" target_path="mbedtls/yotta/data/example-selftest" type="src">
        <files mask="main.cpp"/>
      </source>
      <source exclude="true" path="middleware/mbedtls/yotta/data" target_path="mbedtls/yotta/data" type="c_include">
        <files mask="target_config.h"/>
      </source>
    </component>
    <component id="middleware.multicore.K32L3A60" name="multicore" brief="Multicore SDK" version="2.6.0" full_name="Multicore Software Development Kit" devices="K32L3A60xxx" user_visible="true" type="other">
      <source path="middleware/multicore" target_path="src" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
        <files mask="readme.txt"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.K32L3A60" name="eRPC" brief="eRPC" version="1.7.2" full_name="Embedded Remote Procedure Call" devices="K32L3A60xxx" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc" target_path="erpc/aux" type="project">
        <files mask=".cproject"/>
        <files mask=".project"/>
      </source>
      <source path="middleware/multicore/erpc" target_path="erpc/aux" type="other">
        <files mask="LICENSE"/>
        <files mask="Makefile"/>
        <files mask="README.md"/>
      </source>
      <source path="middleware/multicore/erpc/docs/eRPC_infrastructure/eRPC" target_path="erpc/doc" type="doc">
        <files mask="annotated.html"/>
        <files mask="class_dynamic_message_buffer_factory-members.html"/>
        <files mask="class_dynamic_message_buffer_factory.html"/>
        <files mask="class_r_p_msg_message_buffer_factory-members.html"/>
        <files mask="class_r_p_msg_message_buffer_factory.html"/>
        <files mask="class_r_p_msg_t_t_y_message_buffer_factory-members.html"/>
        <files mask="class_r_p_msg_t_t_y_message_buffer_factory.html"/>
        <files mask="class_static_message_buffer_factory-members.html"/>
        <files mask="class_static_message_buffer_factory.html"/>
        <files mask="classerpc_1_1_arbitrated_client_manager-members.html"/>
        <files mask="classerpc_1_1_arbitrated_client_manager.html"/>
        <files mask="classerpc_1_1_basic_codec-members.html"/>
        <files mask="classerpc_1_1_basic_codec.html"/>
        <files mask="classerpc_1_1_basic_codec_factory-members.html"/>
        <files mask="classerpc_1_1_basic_codec_factory.html"/>
        <files mask="classerpc_1_1_client_manager-members.html"/>
        <files mask="classerpc_1_1_client_manager.html"/>
        <files mask="classerpc_1_1_codec-members.html"/>
        <files mask="classerpc_1_1_codec.html"/>
        <files mask="classerpc_1_1_codec_factory-members.html"/>
        <files mask="classerpc_1_1_codec_factory.html"/>
        <files mask="classerpc_1_1_crc16-members.html"/>
        <files mask="classerpc_1_1_crc16.html"/>
        <files mask="classerpc_1_1_dspi_master_transport-members.html"/>
        <files mask="classerpc_1_1_dspi_master_transport.html"/>
        <files mask="classerpc_1_1_dspi_slave_transport-members.html"/>
        <files mask="classerpc_1_1_dspi_slave_transport.html"/>
        <files mask="classerpc_1_1_framed_transport-members.html"/>
        <files mask="classerpc_1_1_framed_transport.html"/>
        <files mask="classerpc_1_1_inter_thread_buffer_transport-members.html"/>
        <files mask="classerpc_1_1_inter_thread_buffer_transport.html"/>
        <files mask="classerpc_1_1_m_u_transport-members.html"/>
        <files mask="classerpc_1_1_m_u_transport.html"/>
        <files mask="classerpc_1_1_manually_constructed-members.html"/>
        <files mask="classerpc_1_1_manually_constructed.html"/>
        <files mask="classerpc_1_1_message_buffer-members.html"/>
        <files mask="classerpc_1_1_message_buffer.html"/>
        <files mask="classerpc_1_1_message_buffer_1_1_cursor-members.html"/>
        <files mask="classerpc_1_1_message_buffer_1_1_cursor.html"/>
        <files mask="classerpc_1_1_message_buffer_factory-members.html"/>
        <files mask="classerpc_1_1_message_buffer_factory.html"/>
        <files mask="classerpc_1_1_message_logger-members.html"/>
        <files mask="classerpc_1_1_message_logger.html"/>
        <files mask="classerpc_1_1_message_loggers-members.html"/>
        <files mask="classerpc_1_1_message_loggers.html"/>
        <files mask="classerpc_1_1_mutex-members.html"/>
        <files mask="classerpc_1_1_mutex.html"/>
        <files mask="classerpc_1_1_mutex_1_1_guard-members.html"/>
        <files mask="classerpc_1_1_mutex_1_1_guard.html"/>
        <files mask="classerpc_1_1_r_p_msg_base_transport-members.html"/>
        <files mask="classerpc_1_1_r_p_msg_base_transport.html"/>
        <files mask="classerpc_1_1_r_p_msg_linux_transport-members.html"/>
        <files mask="classerpc_1_1_r_p_msg_linux_transport.html"/>
        <files mask="classerpc_1_1_r_p_msg_r_t_o_s_transport-members.html"/>
        <files mask="classerpc_1_1_r_p_msg_r_t_o_s_transport.html"/>
        <files mask="classerpc_1_1_r_p_msg_t_t_y_r_t_o_s_transport-members.html"/>
        <files mask="classerpc_1_1_r_p_msg_t_t_y_r_t_o_s_transport.html"/>
        <files mask="classerpc_1_1_r_p_msg_transport-members.html"/>
        <files mask="classerpc_1_1_r_p_msg_transport.html"/>
        <files mask="classerpc_1_1_request_context-members.html"/>
        <files mask="classerpc_1_1_request_context.html"/>
        <files mask="classerpc_1_1_semaphore-members.html"/>
        <files mask="classerpc_1_1_semaphore.html"/>
        <files mask="classerpc_1_1_serial_transport-members.html"/>
        <files mask="classerpc_1_1_serial_transport.html"/>
        <files mask="classerpc_1_1_server-members.html"/>
        <files mask="classerpc_1_1_server.html"/>
        <files mask="classerpc_1_1_service-members.html"/>
        <files mask="classerpc_1_1_service.html"/>
        <files mask="classerpc_1_1_simple_server-members.html"/>
        <files mask="classerpc_1_1_simple_server.html"/>
        <files mask="classerpc_1_1_spi_master_transport-members.html"/>
        <files mask="classerpc_1_1_spi_master_transport.html"/>
        <files mask="classerpc_1_1_spi_slave_transport-members.html"/>
        <files mask="classerpc_1_1_spi_slave_transport.html"/>
        <files mask="classerpc_1_1_static_queue-members.html"/>
        <files mask="classerpc_1_1_static_queue.html"/>
        <files mask="classerpc_1_1_t_c_p_transport-members.html"/>
        <files mask="classerpc_1_1_t_c_p_transport.html"/>
        <files mask="classerpc_1_1_thread-members.html"/>
        <files mask="classerpc_1_1_thread.html"/>
        <files mask="classerpc_1_1_transport-members.html"/>
        <files mask="classerpc_1_1_transport.html"/>
        <files mask="classerpc_1_1_transport_arbitrator-members.html"/>
        <files mask="classerpc_1_1_transport_arbitrator.html"/>
        <files mask="classerpc_1_1_transport_factory-members.html"/>
        <files mask="classerpc_1_1_transport_factory.html"/>
        <files mask="classerpc_1_1_uart_transport-members.html"/>
        <files mask="classerpc_1_1_uart_transport.html"/>
        <files mask="classes.html"/>
        <files mask="customdoxygen.css"/>
        <files mask="dir_000001_000004.html"/>
        <files mask="dir_000002_000001.html"/>
        <files mask="dir_000002_000004.html"/>
        <files mask="dir_000002_000005.html"/>
        <files mask="dir_000004_000003.html"/>
        <files mask="dir_000005_000001.html"/>
        <files mask="dir_000005_000004.html"/>
        <files mask="dir_318b660cd76dff0271d6acfa47597bac.html"/>
        <files mask="dir_4c1986dc9092ab2d1c997193a3634562.html"/>
        <files mask="dir_52949f44d4caf8ec53681e2fdb42569d.html"/>
        <files mask="dir_62e9b24ece508051f26d84717c79c815.html"/>
        <files mask="dir_65f3d2eaa0376abba9fa4e8a5e7d2f88.html"/>
        <files mask="dir_ecce72d14eab190b8175cc3cd0696eeb.html"/>
        <files mask="doxygen.css"/>
        <files mask="erpc__arbitrated__client__manager_8h.html"/>
        <files mask="erpc__arbitrated__client__manager_8h_source.html"/>
        <files mask="erpc__arbitrated__client__setup_8h.html"/>
        <files mask="erpc__arbitrated__client__setup_8h_source.html"/>
        <files mask="erpc__basic__codec_8h.html"/>
        <files mask="erpc__basic__codec_8h_source.html"/>
        <files mask="erpc__client__manager_8h.html"/>
        <files mask="erpc__client__manager_8h_source.html"/>
        <files mask="erpc__client__setup_8h.html"/>
        <files mask="erpc__client__setup_8h_source.html"/>
        <files mask="erpc__codec_8h.html"/>
        <files mask="erpc__codec_8h_source.html"/>
        <files mask="erpc__common_8h_source.html"/>
        <files mask="erpc__config_8h.html"/>
        <files mask="erpc__config_8h_source.html"/>
        <files mask="erpc__config__internal_8h_source.html"/>
        <files mask="erpc__crc16_8h.html"/>
        <files mask="erpc__crc16_8h_source.html"/>
        <files mask="erpc__dspi__master__transport_8h.html"/>
        <files mask="erpc__dspi__master__transport_8h_source.html"/>
        <files mask="erpc__dspi__slave__transport_8h.html"/>
        <files mask="erpc__dspi__slave__transport_8h_source.html"/>
        <files mask="erpc__framed__transport_8h.html"/>
        <files mask="erpc__framed__transport_8h_source.html"/>
        <files mask="erpc__inter__thread__buffer__transport_8h.html"/>
        <files mask="erpc__inter__thread__buffer__transport_8h_source.html"/>
        <files mask="erpc__manually__constructed_8h.html"/>
        <files mask="erpc__manually__constructed_8h_source.html"/>
        <files mask="erpc__mbf__setup_8h.html"/>
        <files mask="erpc__mbf__setup_8h_source.html"/>
        <files mask="erpc__message__buffer_8h.html"/>
        <files mask="erpc__message__buffer_8h_source.html"/>
        <files mask="erpc__message__loggers_8h.html"/>
        <files mask="erpc__message__loggers_8h_source.html"/>
        <files mask="erpc__mu__transport_8h.html"/>
        <files mask="erpc__mu__transport_8h_source.html"/>
        <files mask="erpc__port_8h.html"/>
        <files mask="erpc__port_8h_source.html"/>
        <files mask="erpc__rpmsg__linux__transport_8h_source.html"/>
        <files mask="erpc__rpmsg__lite__base__transport_8h.html"/>
        <files mask="erpc__rpmsg__lite__base__transport_8h_source.html"/>
        <files mask="erpc__rpmsg__lite__rtos__transport_8h.html"/>
        <files mask="erpc__rpmsg__lite__rtos__transport_8h_source.html"/>
        <files mask="erpc__rpmsg__lite__transport_8h.html"/>
        <files mask="erpc__rpmsg__lite__transport_8h_source.html"/>
        <files mask="erpc__rpmsg__tty__rtos__transport_8h.html"/>
        <files mask="erpc__rpmsg__tty__rtos__transport_8h_source.html"/>
        <files mask="erpc__serial_8h.html"/>
        <files mask="erpc__serial_8h_source.html"/>
        <files mask="erpc__serial__transport_8h.html"/>
        <files mask="erpc__serial__transport_8h_source.html"/>
        <files mask="erpc__server_8h.html"/>
        <files mask="erpc__server_8h_source.html"/>
        <files mask="erpc__server__setup_8h.html"/>
        <files mask="erpc__server__setup_8h_source.html"/>
        <files mask="erpc__simple__server_8h.html"/>
        <files mask="erpc__simple__server_8h_source.html"/>
        <files mask="erpc__spi__master__transport_8h.html"/>
        <files mask="erpc__spi__master__transport_8h_source.html"/>
        <files mask="erpc__spi__slave__transport_8h.html"/>
        <files mask="erpc__spi__slave__transport_8h_source.html"/>
        <files mask="erpc__static__queue_8h.html"/>
        <files mask="erpc__static__queue_8h_source.html"/>
        <files mask="erpc__tcp__transport_8h.html"/>
        <files mask="erpc__tcp__transport_8h_source.html"/>
        <files mask="erpc__threading_8h.html"/>
        <files mask="erpc__threading_8h_source.html"/>
        <files mask="erpc__transport_8h.html"/>
        <files mask="erpc__transport_8h_source.html"/>
        <files mask="erpc__transport__arbitrator_8h.html"/>
        <files mask="erpc__transport__arbitrator_8h_source.html"/>
        <files mask="erpc__transport__setup_8h.html"/>
        <files mask="erpc__transport__setup_8h_source.html"/>
        <files mask="erpc__uart__cmsis__transport_8h.html"/>
        <files mask="erpc__uart__cmsis__transport_8h_source.html"/>
        <files mask="erpc__version_8h_source.html"/>
        <files mask="files.html"/>
        <files mask="functions.html"/>
        <files mask="functions_0x7e.html"/>
        <files mask="functions_c.html"/>
        <files mask="functions_d.html"/>
        <files mask="functions_f.html"/>
        <files mask="functions_func.html"/>
        <files mask="functions_func_0x7e.html"/>
        <files mask="functions_func_c.html"/>
        <files mask="functions_func_d.html"/>
        <files mask="functions_func_f.html"/>
        <files mask="functions_func_g.html"/>
        <files mask="functions_func_h.html"/>
        <files mask="functions_func_i.html"/>
        <files mask="functions_func_l.html"/>
        <files mask="functions_func_m.html"/>
        <files mask="functions_func_o.html"/>
        <files mask="functions_func_p.html"/>
        <files mask="functions_func_r.html"/>
        <files mask="functions_func_s.html"/>
        <files mask="functions_func_t.html"/>
        <files mask="functions_func_u.html"/>
        <files mask="functions_func_v.html"/>
        <files mask="functions_func_w.html"/>
        <files mask="functions_g.html"/>
        <files mask="functions_h.html"/>
        <files mask="functions_i.html"/>
        <files mask="functions_k.html"/>
        <files mask="functions_l.html"/>
        <files mask="functions_m.html"/>
        <files mask="functions_o.html"/>
        <files mask="functions_p.html"/>
        <files mask="functions_r.html"/>
        <files mask="functions_s.html"/>
        <files mask="functions_t.html"/>
        <files mask="functions_type.html"/>
        <files mask="functions_u.html"/>
        <files mask="functions_v.html"/>
        <files mask="functions_vars.html"/>
        <files mask="functions_w.html"/>
        <files mask="globals.html"/>
        <files mask="globals_defs.html"/>
        <files mask="globals_func.html"/>
        <files mask="globals_type.html"/>
        <files mask="graph_legend.html"/>
        <files mask="group__client__setup.html"/>
        <files mask="group__config.html"/>
        <files mask="group__dspi__master__transport.html"/>
        <files mask="group__dspi__slave__transport.html"/>
        <files mask="group__infra.html"/>
        <files mask="group__infra__client.html"/>
        <files mask="group__infra__codec.html"/>
        <files mask="group__infra__server.html"/>
        <files mask="group__infra__transport.html"/>
        <files mask="group__infra__utility.html"/>
        <files mask="group__itbp__transport.html"/>
        <files mask="group__message__buffer__factory__setup.html"/>
        <files mask="group__mu__transport.html"/>
        <files mask="group__port.html"/>
        <files mask="group__port__mem.html"/>
        <files mask="group__port__serial.html"/>
        <files mask="group__port__threads.html"/>
        <files mask="group__rpmsg__linux__transport.html"/>
        <files mask="group__rpmsg__lite__rtos__transport.html"/>
        <files mask="group__rpmsg__lite__transport.html"/>
        <files mask="group__rpmsg__tty__rtos__transport.html"/>
        <files mask="group__serial__transport.html"/>
        <files mask="group__server__setup.html"/>
        <files mask="group__setup.html"/>
        <files mask="group__spi__master__transport.html"/>
        <files mask="group__spi__slave__transport.html"/>
        <files mask="group__tcp__transport.html"/>
        <files mask="group__transport__setup.html"/>
        <files mask="group__transports.html"/>
        <files mask="group__uart__transport.html"/>
        <files mask="hierarchy.html"/>
        <files mask="index.html"/>
        <files mask="inherits.html"/>
        <files mask="modules.html"/>
        <files mask="navtree.css"/>
        <files mask="structerpc_1_1_transport_arbitrator_1_1_pending_client_info-members.html"/>
        <files mask="structerpc_1_1_transport_arbitrator_1_1_pending_client_info.html"/>
        <files mask="tabs.css"/>
      </source>
      <source path="middleware/multicore/erpc/docs/eRPC_infrastructure/eRPC" target_path="erpc/doc" type="script">
        <files mask="annotated_dup.js"/>
        <files mask="class_dynamic_message_buffer_factory.js"/>
        <files mask="class_r_p_msg_message_buffer_factory.js"/>
        <files mask="class_r_p_msg_t_t_y_message_buffer_factory.js"/>
        <files mask="class_static_message_buffer_factory.js"/>
        <files mask="classerpc_1_1_arbitrated_client_manager.js"/>
        <files mask="classerpc_1_1_basic_codec.js"/>
        <files mask="classerpc_1_1_basic_codec_factory.js"/>
        <files mask="classerpc_1_1_client_manager.js"/>
        <files mask="classerpc_1_1_codec.js"/>
        <files mask="classerpc_1_1_codec_factory.js"/>
        <files mask="classerpc_1_1_crc16.js"/>
        <files mask="classerpc_1_1_dspi_master_transport.js"/>
        <files mask="classerpc_1_1_dspi_slave_transport.js"/>
        <files mask="classerpc_1_1_framed_transport.js"/>
        <files mask="classerpc_1_1_inter_thread_buffer_transport.js"/>
        <files mask="classerpc_1_1_m_u_transport.js"/>
        <files mask="classerpc_1_1_manually_constructed.js"/>
        <files mask="classerpc_1_1_message_buffer.js"/>
        <files mask="classerpc_1_1_message_buffer_1_1_cursor.js"/>
        <files mask="classerpc_1_1_message_buffer_factory.js"/>
        <files mask="classerpc_1_1_message_logger.js"/>
        <files mask="classerpc_1_1_message_loggers.js"/>
        <files mask="classerpc_1_1_mutex.js"/>
        <files mask="classerpc_1_1_mutex_1_1_guard.js"/>
        <files mask="classerpc_1_1_r_p_msg_base_transport.js"/>
        <files mask="classerpc_1_1_r_p_msg_linux_transport.js"/>
        <files mask="classerpc_1_1_r_p_msg_r_t_o_s_transport.js"/>
        <files mask="classerpc_1_1_r_p_msg_t_t_y_r_t_o_s_transport.js"/>
        <files mask="classerpc_1_1_r_p_msg_transport.js"/>
        <files mask="classerpc_1_1_request_context.js"/>
        <files mask="classerpc_1_1_semaphore.js"/>
        <files mask="classerpc_1_1_serial_transport.js"/>
        <files mask="classerpc_1_1_server.js"/>
        <files mask="classerpc_1_1_service.js"/>
        <files mask="classerpc_1_1_simple_server.js"/>
        <files mask="classerpc_1_1_spi_master_transport.js"/>
        <files mask="classerpc_1_1_spi_slave_transport.js"/>
        <files mask="classerpc_1_1_static_queue.js"/>
        <files mask="classerpc_1_1_t_c_p_transport.js"/>
        <files mask="classerpc_1_1_thread.js"/>
        <files mask="classerpc_1_1_transport.js"/>
        <files mask="classerpc_1_1_transport_arbitrator.js"/>
        <files mask="classerpc_1_1_transport_factory.js"/>
        <files mask="classerpc_1_1_uart_transport.js"/>
        <files mask="dynsections.js"/>
        <files mask="erpc__arbitrated__client__setup_8h.js"/>
        <files mask="erpc__basic__codec_8h.js"/>
        <files mask="erpc__client__manager_8h.js"/>
        <files mask="erpc__client__setup_8h.js"/>
        <files mask="erpc__codec_8h.js"/>
        <files mask="erpc__config_8h.js"/>
        <files mask="erpc__mbf__setup_8h.js"/>
        <files mask="erpc__mu__transport_8h.js"/>
        <files mask="erpc__port_8h.js"/>
        <files mask="erpc__serial_8h.js"/>
        <files mask="erpc__server__setup_8h.js"/>
        <files mask="erpc__threading_8h.js"/>
        <files mask="erpc__transport__setup_8h.js"/>
        <files mask="files.js"/>
        <files mask="functions_dup.js"/>
        <files mask="functions_func.js"/>
        <files mask="group__client__setup.js"/>
        <files mask="group__config.js"/>
        <files mask="group__dspi__master__transport.js"/>
        <files mask="group__dspi__slave__transport.js"/>
        <files mask="group__infra.js"/>
        <files mask="group__infra__client.js"/>
        <files mask="group__infra__codec.js"/>
        <files mask="group__infra__server.js"/>
        <files mask="group__infra__transport.js"/>
        <files mask="group__infra__utility.js"/>
        <files mask="group__itbp__transport.js"/>
        <files mask="group__message__buffer__factory__setup.js"/>
        <files mask="group__mu__transport.js"/>
        <files mask="group__port.js"/>
        <files mask="group__port__mem.js"/>
        <files mask="group__port__serial.js"/>
        <files mask="group__port__threads.js"/>
        <files mask="group__rpmsg__linux__transport.js"/>
        <files mask="group__rpmsg__lite__rtos__transport.js"/>
        <files mask="group__rpmsg__lite__transport.js"/>
        <files mask="group__rpmsg__tty__rtos__transport.js"/>
        <files mask="group__serial__transport.js"/>
        <files mask="group__server__setup.js"/>
        <files mask="group__setup.js"/>
        <files mask="group__spi__master__transport.js"/>
        <files mask="group__spi__slave__transport.js"/>
        <files mask="group__tcp__transport.js"/>
        <files mask="group__transport__setup.js"/>
        <files mask="group__transports.js"/>
        <files mask="group__uart__transport.js"/>
        <files mask="hierarchy.js"/>
        <files mask="jquery.js"/>
        <files mask="modules.js"/>
        <files mask="navtree.js"/>
        <files mask="navtreedata.js"/>
        <files mask="navtreeindex0.js"/>
        <files mask="navtreeindex1.js"/>
        <files mask="navtreeindex2.js"/>
        <files mask="navtreeindex3.js"/>
        <files mask="resize.js"/>
        <files mask="structerpc_1_1_transport_arbitrator_1_1_pending_client_info.js"/>
      </source>
      <source path="middleware/multicore/erpc/docs/eRPC_infrastructure/eRPC" target_path="erpc/doc" type="image">
        <files mask="arrowdown.png"/>
        <files mask="arrowright.png"/>
        <files mask="bc_s.png"/>
        <files mask="bdwn.png"/>
        <files mask="closed.png"/>
        <files mask="doc.png"/>
        <files mask="doxygen.png"/>
        <files mask="folderclosed.png"/>
        <files mask="folderopen.png"/>
        <files mask="nav_f.png"/>
        <files mask="nav_g.png"/>
        <files mask="nav_h.png"/>
        <files mask="nxp_logo_small.png"/>
        <files mask="open.png"/>
        <files mask="rpc_block_diagram.png"/>
        <files mask="splitbar.png"/>
        <files mask="sync_off.png"/>
        <files mask="sync_on.png"/>
        <files mask="tab_a.png"/>
        <files mask="tab_b.png"/>
        <files mask="tab_h.png"/>
        <files mask="tab_s.png"/>
      </source>
      <source path="middleware/multicore/erpc/docs/eRPC_infrastructure/eRPC" target_path="erpc/doc" type="other">
        <files mask="class_dynamic_message_buffer_factory__coll__graph.map"/>
        <files mask="class_dynamic_message_buffer_factory__coll__graph.md5"/>
        <files mask="class_dynamic_message_buffer_factory__coll__graph.svg"/>
        <files mask="class_dynamic_message_buffer_factory__inherit__graph.map"/>
        <files mask="class_dynamic_message_buffer_factory__inherit__graph.md5"/>
        <files mask="class_dynamic_message_buffer_factory__inherit__graph.svg"/>
        <files mask="class_r_p_msg_message_buffer_factory__coll__graph.map"/>
        <files mask="class_r_p_msg_message_buffer_factory__coll__graph.md5"/>
        <files mask="class_r_p_msg_message_buffer_factory__coll__graph.svg"/>
        <files mask="class_r_p_msg_message_buffer_factory__inherit__graph.map"/>
        <files mask="class_r_p_msg_message_buffer_factory__inherit__graph.md5"/>
        <files mask="class_r_p_msg_message_buffer_factory__inherit__graph.svg"/>
        <files mask="class_r_p_msg_t_t_y_message_buffer_factory__coll__graph.map"/>
        <files mask="class_r_p_msg_t_t_y_message_buffer_factory__coll__graph.md5"/>
        <files mask="class_r_p_msg_t_t_y_message_buffer_factory__coll__graph.svg"/>
        <files mask="class_r_p_msg_t_t_y_message_buffer_factory__inherit__graph.map"/>
        <files mask="class_r_p_msg_t_t_y_message_buffer_factory__inherit__graph.md5"/>
        <files mask="class_r_p_msg_t_t_y_message_buffer_factory__inherit__graph.svg"/>
        <files mask="class_static_message_buffer_factory__coll__graph.map"/>
        <files mask="class_static_message_buffer_factory__coll__graph.md5"/>
        <files mask="class_static_message_buffer_factory__coll__graph.svg"/>
        <files mask="class_static_message_buffer_factory__inherit__graph.map"/>
        <files mask="class_static_message_buffer_factory__inherit__graph.md5"/>
        <files mask="class_static_message_buffer_factory__inherit__graph.svg"/>
        <files mask="classerpc_1_1_arbitrated_client_manager__coll__graph.map"/>
        <files mask="classerpc_1_1_arbitrated_client_manager__coll__graph.md5"/>
        <files mask="classerpc_1_1_arbitrated_client_manager__coll__graph.svg"/>
        <files mask="classerpc_1_1_arbitrated_client_manager__inherit__graph.map"/>
        <files mask="classerpc_1_1_arbitrated_client_manager__inherit__graph.md5"/>
        <files mask="classerpc_1_1_arbitrated_client_manager__inherit__graph.svg"/>
        <files mask="classerpc_1_1_basic_codec__coll__graph.map"/>
        <files mask="classerpc_1_1_basic_codec__coll__graph.md5"/>
        <files mask="classerpc_1_1_basic_codec__coll__graph.svg"/>
        <files mask="classerpc_1_1_basic_codec__inherit__graph.map"/>
        <files mask="classerpc_1_1_basic_codec__inherit__graph.md5"/>
        <files mask="classerpc_1_1_basic_codec__inherit__graph.svg"/>
        <files mask="classerpc_1_1_basic_codec_factory__coll__graph.map"/>
        <files mask="classerpc_1_1_basic_codec_factory__coll__graph.md5"/>
        <files mask="classerpc_1_1_basic_codec_factory__coll__graph.svg"/>
        <files mask="classerpc_1_1_basic_codec_factory__inherit__graph.map"/>
        <files mask="classerpc_1_1_basic_codec_factory__inherit__graph.md5"/>
        <files mask="classerpc_1_1_basic_codec_factory__inherit__graph.svg"/>
        <files mask="classerpc_1_1_client_manager__coll__graph.map"/>
        <files mask="classerpc_1_1_client_manager__coll__graph.md5"/>
        <files mask="classerpc_1_1_client_manager__coll__graph.svg"/>
        <files mask="classerpc_1_1_client_manager__inherit__graph.map"/>
        <files mask="classerpc_1_1_client_manager__inherit__graph.md5"/>
        <files mask="classerpc_1_1_client_manager__inherit__graph.svg"/>
        <files mask="classerpc_1_1_codec__coll__graph.map"/>
        <files mask="classerpc_1_1_codec__coll__graph.md5"/>
        <files mask="classerpc_1_1_codec__coll__graph.svg"/>
        <files mask="classerpc_1_1_codec__inherit__graph.map"/>
        <files mask="classerpc_1_1_codec__inherit__graph.md5"/>
        <files mask="classerpc_1_1_codec__inherit__graph.svg"/>
        <files mask="classerpc_1_1_codec_factory__inherit__graph.map"/>
        <files mask="classerpc_1_1_codec_factory__inherit__graph.md5"/>
        <files mask="classerpc_1_1_codec_factory__inherit__graph.svg"/>
        <files mask="classerpc_1_1_dspi_master_transport__coll__graph.map"/>
        <files mask="classerpc_1_1_dspi_master_transport__coll__graph.md5"/>
        <files mask="classerpc_1_1_dspi_master_transport__coll__graph.svg"/>
        <files mask="classerpc_1_1_dspi_master_transport__inherit__graph.map"/>
        <files mask="classerpc_1_1_dspi_master_transport__inherit__graph.md5"/>
        <files mask="classerpc_1_1_dspi_master_transport__inherit__graph.svg"/>
        <files mask="classerpc_1_1_dspi_slave_transport__coll__graph.map"/>
        <files mask="classerpc_1_1_dspi_slave_transport__coll__graph.md5"/>
        <files mask="classerpc_1_1_dspi_slave_transport__coll__graph.svg"/>
        <files mask="classerpc_1_1_dspi_slave_transport__inherit__graph.map"/>
        <files mask="classerpc_1_1_dspi_slave_transport__inherit__graph.md5"/>
        <files mask="classerpc_1_1_dspi_slave_transport__inherit__graph.svg"/>
        <files mask="classerpc_1_1_framed_transport__coll__graph.map"/>
        <files mask="classerpc_1_1_framed_transport__coll__graph.md5"/>
        <files mask="classerpc_1_1_framed_transport__coll__graph.svg"/>
        <files mask="classerpc_1_1_framed_transport__inherit__graph.map"/>
        <files mask="classerpc_1_1_framed_transport__inherit__graph.md5"/>
        <files mask="classerpc_1_1_framed_transport__inherit__graph.svg"/>
        <files mask="classerpc_1_1_inter_thread_buffer_transport__coll__graph.map"/>
        <files mask="classerpc_1_1_inter_thread_buffer_transport__coll__graph.md5"/>
        <files mask="classerpc_1_1_inter_thread_buffer_transport__coll__graph.svg"/>
        <files mask="classerpc_1_1_inter_thread_buffer_transport__inherit__graph.map"/>
        <files mask="classerpc_1_1_inter_thread_buffer_transport__inherit__graph.md5"/>
        <files mask="classerpc_1_1_inter_thread_buffer_transport__inherit__graph.svg"/>
        <files mask="classerpc_1_1_m_u_transport__coll__graph.map"/>
        <files mask="classerpc_1_1_m_u_transport__coll__graph.md5"/>
        <files mask="classerpc_1_1_m_u_transport__coll__graph.svg"/>
        <files mask="classerpc_1_1_m_u_transport__inherit__graph.map"/>
        <files mask="classerpc_1_1_m_u_transport__inherit__graph.md5"/>
        <files mask="classerpc_1_1_m_u_transport__inherit__graph.svg"/>
        <files mask="classerpc_1_1_message_buffer_factory__inherit__graph.map"/>
        <files mask="classerpc_1_1_message_buffer_factory__inherit__graph.md5"/>
        <files mask="classerpc_1_1_message_buffer_factory__inherit__graph.svg"/>
        <files mask="classerpc_1_1_message_logger__coll__graph.map"/>
        <files mask="classerpc_1_1_message_logger__coll__graph.md5"/>
        <files mask="classerpc_1_1_message_logger__coll__graph.svg"/>
        <files mask="classerpc_1_1_message_loggers__coll__graph.map"/>
        <files mask="classerpc_1_1_message_loggers__coll__graph.md5"/>
        <files mask="classerpc_1_1_message_loggers__coll__graph.svg"/>
        <files mask="classerpc_1_1_r_p_msg_base_transport__coll__graph.map"/>
        <files mask="classerpc_1_1_r_p_msg_base_transport__coll__graph.md5"/>
        <files mask="classerpc_1_1_r_p_msg_base_transport__coll__graph.svg"/>
        <files mask="classerpc_1_1_r_p_msg_base_transport__inherit__graph.map"/>
        <files mask="classerpc_1_1_r_p_msg_base_transport__inherit__graph.md5"/>
        <files mask="classerpc_1_1_r_p_msg_base_transport__inherit__graph.svg"/>
        <files mask="classerpc_1_1_r_p_msg_linux_transport__coll__graph.map"/>
        <files mask="classerpc_1_1_r_p_msg_linux_transport__coll__graph.md5"/>
        <files mask="classerpc_1_1_r_p_msg_linux_transport__coll__graph.svg"/>
        <files mask="classerpc_1_1_r_p_msg_linux_transport__inherit__graph.map"/>
        <files mask="classerpc_1_1_r_p_msg_linux_transport__inherit__graph.md5"/>
        <files mask="classerpc_1_1_r_p_msg_linux_transport__inherit__graph.svg"/>
        <files mask="classerpc_1_1_r_p_msg_r_t_o_s_transport__coll__graph.map"/>
        <files mask="classerpc_1_1_r_p_msg_r_t_o_s_transport__coll__graph.md5"/>
        <files mask="classerpc_1_1_r_p_msg_r_t_o_s_transport__coll__graph.svg"/>
        <files mask="classerpc_1_1_r_p_msg_r_t_o_s_transport__inherit__graph.map"/>
        <files mask="classerpc_1_1_r_p_msg_r_t_o_s_transport__inherit__graph.md5"/>
        <files mask="classerpc_1_1_r_p_msg_r_t_o_s_transport__inherit__graph.svg"/>
        <files mask="classerpc_1_1_r_p_msg_t_t_y_r_t_o_s_transport__coll__graph.map"/>
        <files mask="classerpc_1_1_r_p_msg_t_t_y_r_t_o_s_transport__coll__graph.md5"/>
        <files mask="classerpc_1_1_r_p_msg_t_t_y_r_t_o_s_transport__coll__graph.svg"/>
        <files mask="classerpc_1_1_r_p_msg_t_t_y_r_t_o_s_transport__inherit__graph.map"/>
        <files mask="classerpc_1_1_r_p_msg_t_t_y_r_t_o_s_transport__inherit__graph.md5"/>
        <files mask="classerpc_1_1_r_p_msg_t_t_y_r_t_o_s_transport__inherit__graph.svg"/>
        <files mask="classerpc_1_1_r_p_msg_transport__coll__graph.map"/>
        <files mask="classerpc_1_1_r_p_msg_transport__coll__graph.md5"/>
        <files mask="classerpc_1_1_r_p_msg_transport__coll__graph.svg"/>
        <files mask="classerpc_1_1_r_p_msg_transport__inherit__graph.map"/>
        <files mask="classerpc_1_1_r_p_msg_transport__inherit__graph.md5"/>
        <files mask="classerpc_1_1_r_p_msg_transport__inherit__graph.svg"/>
        <files mask="classerpc_1_1_request_context__coll__graph.map"/>
        <files mask="classerpc_1_1_request_context__coll__graph.md5"/>
        <files mask="classerpc_1_1_request_context__coll__graph.svg"/>
        <files mask="classerpc_1_1_serial_transport__coll__graph.map"/>
        <files mask="classerpc_1_1_serial_transport__coll__graph.md5"/>
        <files mask="classerpc_1_1_serial_transport__coll__graph.svg"/>
        <files mask="classerpc_1_1_serial_transport__inherit__graph.map"/>
        <files mask="classerpc_1_1_serial_transport__inherit__graph.md5"/>
        <files mask="classerpc_1_1_serial_transport__inherit__graph.svg"/>
        <files mask="classerpc_1_1_server__coll__graph.map"/>
        <files mask="classerpc_1_1_server__coll__graph.md5"/>
        <files mask="classerpc_1_1_server__coll__graph.svg"/>
        <files mask="classerpc_1_1_server__inherit__graph.map"/>
        <files mask="classerpc_1_1_server__inherit__graph.md5"/>
        <files mask="classerpc_1_1_server__inherit__graph.svg"/>
        <files mask="classerpc_1_1_service__coll__graph.map"/>
        <files mask="classerpc_1_1_service__coll__graph.md5"/>
        <files mask="classerpc_1_1_service__coll__graph.svg"/>
        <files mask="classerpc_1_1_simple_server__coll__graph.map"/>
        <files mask="classerpc_1_1_simple_server__coll__graph.md5"/>
        <files mask="classerpc_1_1_simple_server__coll__graph.svg"/>
        <files mask="classerpc_1_1_simple_server__inherit__graph.map"/>
        <files mask="classerpc_1_1_simple_server__inherit__graph.md5"/>
        <files mask="classerpc_1_1_simple_server__inherit__graph.svg"/>
        <files mask="classerpc_1_1_spi_master_transport__coll__graph.map"/>
        <files mask="classerpc_1_1_spi_master_transport__coll__graph.md5"/>
        <files mask="classerpc_1_1_spi_master_transport__coll__graph.svg"/>
        <files mask="classerpc_1_1_spi_master_transport__inherit__graph.map"/>
        <files mask="classerpc_1_1_spi_master_transport__inherit__graph.md5"/>
        <files mask="classerpc_1_1_spi_master_transport__inherit__graph.svg"/>
        <files mask="classerpc_1_1_spi_slave_transport__coll__graph.map"/>
        <files mask="classerpc_1_1_spi_slave_transport__coll__graph.md5"/>
        <files mask="classerpc_1_1_spi_slave_transport__coll__graph.svg"/>
        <files mask="classerpc_1_1_spi_slave_transport__inherit__graph.map"/>
        <files mask="classerpc_1_1_spi_slave_transport__inherit__graph.md5"/>
        <files mask="classerpc_1_1_spi_slave_transport__inherit__graph.svg"/>
        <files mask="classerpc_1_1_t_c_p_transport__coll__graph.map"/>
        <files mask="classerpc_1_1_t_c_p_transport__coll__graph.md5"/>
        <files mask="classerpc_1_1_t_c_p_transport__coll__graph.svg"/>
        <files mask="classerpc_1_1_t_c_p_transport__inherit__graph.map"/>
        <files mask="classerpc_1_1_t_c_p_transport__inherit__graph.md5"/>
        <files mask="classerpc_1_1_t_c_p_transport__inherit__graph.svg"/>
        <files mask="classerpc_1_1_transport__inherit__graph.map"/>
        <files mask="classerpc_1_1_transport__inherit__graph.md5"/>
        <files mask="classerpc_1_1_transport__inherit__graph.svg"/>
        <files mask="classerpc_1_1_transport_arbitrator__coll__graph.map"/>
        <files mask="classerpc_1_1_transport_arbitrator__coll__graph.md5"/>
        <files mask="classerpc_1_1_transport_arbitrator__coll__graph.svg"/>
        <files mask="classerpc_1_1_transport_arbitrator__inherit__graph.map"/>
        <files mask="classerpc_1_1_transport_arbitrator__inherit__graph.md5"/>
        <files mask="classerpc_1_1_transport_arbitrator__inherit__graph.svg"/>
        <files mask="classerpc_1_1_uart_transport__coll__graph.map"/>
        <files mask="classerpc_1_1_uart_transport__coll__graph.md5"/>
        <files mask="classerpc_1_1_uart_transport__coll__graph.svg"/>
        <files mask="classerpc_1_1_uart_transport__inherit__graph.map"/>
        <files mask="classerpc_1_1_uart_transport__inherit__graph.md5"/>
        <files mask="classerpc_1_1_uart_transport__inherit__graph.svg"/>
        <files mask="dir_318b660cd76dff0271d6acfa47597bac_dep.map"/>
        <files mask="dir_318b660cd76dff0271d6acfa47597bac_dep.md5"/>
        <files mask="dir_318b660cd76dff0271d6acfa47597bac_dep.svg"/>
        <files mask="dir_4c1986dc9092ab2d1c997193a3634562_dep.map"/>
        <files mask="dir_4c1986dc9092ab2d1c997193a3634562_dep.md5"/>
        <files mask="dir_4c1986dc9092ab2d1c997193a3634562_dep.svg"/>
        <files mask="dir_62e9b24ece508051f26d84717c79c815_dep.map"/>
        <files mask="dir_62e9b24ece508051f26d84717c79c815_dep.md5"/>
        <files mask="dir_62e9b24ece508051f26d84717c79c815_dep.svg"/>
        <files mask="dir_65f3d2eaa0376abba9fa4e8a5e7d2f88_dep.map"/>
        <files mask="dir_65f3d2eaa0376abba9fa4e8a5e7d2f88_dep.md5"/>
        <files mask="dir_65f3d2eaa0376abba9fa4e8a5e7d2f88_dep.svg"/>
        <files mask="dir_ecce72d14eab190b8175cc3cd0696eeb_dep.map"/>
        <files mask="dir_ecce72d14eab190b8175cc3cd0696eeb_dep.md5"/>
        <files mask="dir_ecce72d14eab190b8175cc3cd0696eeb_dep.svg"/>
        <files mask="erpc__arbitrated__client__manager_8h__incl.map"/>
        <files mask="erpc__arbitrated__client__manager_8h__incl.md5"/>
        <files mask="erpc__arbitrated__client__manager_8h__incl.svg"/>
        <files mask="erpc__arbitrated__client__setup_8h__incl.map"/>
        <files mask="erpc__arbitrated__client__setup_8h__incl.md5"/>
        <files mask="erpc__arbitrated__client__setup_8h__incl.svg"/>
        <files mask="erpc__basic__codec_8h__incl.map"/>
        <files mask="erpc__basic__codec_8h__incl.md5"/>
        <files mask="erpc__basic__codec_8h__incl.svg"/>
        <files mask="erpc__client__manager_8h__dep__incl.map"/>
        <files mask="erpc__client__manager_8h__dep__incl.md5"/>
        <files mask="erpc__client__manager_8h__dep__incl.svg"/>
        <files mask="erpc__client__manager_8h__incl.map"/>
        <files mask="erpc__client__manager_8h__incl.md5"/>
        <files mask="erpc__client__manager_8h__incl.svg"/>
        <files mask="erpc__client__setup_8h__incl.map"/>
        <files mask="erpc__client__setup_8h__incl.md5"/>
        <files mask="erpc__client__setup_8h__incl.svg"/>
        <files mask="erpc__codec_8h__dep__incl.map"/>
        <files mask="erpc__codec_8h__dep__incl.md5"/>
        <files mask="erpc__codec_8h__dep__incl.svg"/>
        <files mask="erpc__codec_8h__incl.map"/>
        <files mask="erpc__codec_8h__incl.md5"/>
        <files mask="erpc__codec_8h__incl.svg"/>
        <files mask="erpc__config_8h__dep__incl.map"/>
        <files mask="erpc__config_8h__dep__incl.md5"/>
        <files mask="erpc__config_8h__dep__incl.svg"/>
        <files mask="erpc__crc16_8h__dep__incl.map"/>
        <files mask="erpc__crc16_8h__dep__incl.md5"/>
        <files mask="erpc__crc16_8h__dep__incl.svg"/>
        <files mask="erpc__crc16_8h__incl.map"/>
        <files mask="erpc__crc16_8h__incl.md5"/>
        <files mask="erpc__crc16_8h__incl.svg"/>
        <files mask="erpc__dspi__master__transport_8h__incl.map"/>
        <files mask="erpc__dspi__master__transport_8h__incl.md5"/>
        <files mask="erpc__dspi__master__transport_8h__incl.svg"/>
        <files mask="erpc__dspi__slave__transport_8h__incl.map"/>
        <files mask="erpc__dspi__slave__transport_8h__incl.md5"/>
        <files mask="erpc__dspi__slave__transport_8h__incl.svg"/>
        <files mask="erpc__framed__transport_8h__dep__incl.map"/>
        <files mask="erpc__framed__transport_8h__dep__incl.md5"/>
        <files mask="erpc__framed__transport_8h__dep__incl.svg"/>
        <files mask="erpc__framed__transport_8h__incl.map"/>
        <files mask="erpc__framed__transport_8h__incl.md5"/>
        <files mask="erpc__framed__transport_8h__incl.svg"/>
        <files mask="erpc__inter__thread__buffer__transport_8h__incl.map"/>
        <files mask="erpc__inter__thread__buffer__transport_8h__incl.md5"/>
        <files mask="erpc__inter__thread__buffer__transport_8h__incl.svg"/>
        <files mask="erpc__manually__constructed_8h__incl.map"/>
        <files mask="erpc__manually__constructed_8h__incl.md5"/>
        <files mask="erpc__manually__constructed_8h__incl.svg"/>
        <files mask="erpc__mbf__setup_8h__dep__incl.map"/>
        <files mask="erpc__mbf__setup_8h__dep__incl.md5"/>
        <files mask="erpc__mbf__setup_8h__dep__incl.svg"/>
        <files mask="erpc__mbf__setup_8h__incl.map"/>
        <files mask="erpc__mbf__setup_8h__incl.md5"/>
        <files mask="erpc__mbf__setup_8h__incl.svg"/>
        <files mask="erpc__message__buffer_8h__dep__incl.map"/>
        <files mask="erpc__message__buffer_8h__dep__incl.md5"/>
        <files mask="erpc__message__buffer_8h__dep__incl.svg"/>
        <files mask="erpc__message__buffer_8h__incl.map"/>
        <files mask="erpc__message__buffer_8h__incl.md5"/>
        <files mask="erpc__message__buffer_8h__incl.svg"/>
        <files mask="erpc__message__loggers_8h__incl.map"/>
        <files mask="erpc__message__loggers_8h__incl.md5"/>
        <files mask="erpc__message__loggers_8h__incl.svg"/>
        <files mask="erpc__mu__transport_8h__incl.map"/>
        <files mask="erpc__mu__transport_8h__incl.md5"/>
        <files mask="erpc__mu__transport_8h__incl.svg"/>
        <files mask="erpc__port_8h__incl.map"/>
        <files mask="erpc__port_8h__incl.md5"/>
        <files mask="erpc__port_8h__incl.svg"/>
        <files mask="erpc__rpmsg__lite__base__transport_8h__dep__incl.map"/>
        <files mask="erpc__rpmsg__lite__base__transport_8h__dep__incl.md5"/>
        <files mask="erpc__rpmsg__lite__base__transport_8h__dep__incl.svg"/>
        <files mask="erpc__rpmsg__lite__base__transport_8h__incl.map"/>
        <files mask="erpc__rpmsg__lite__base__transport_8h__incl.md5"/>
        <files mask="erpc__rpmsg__lite__base__transport_8h__incl.svg"/>
        <files mask="erpc__rpmsg__lite__rtos__transport_8h__incl.map"/>
        <files mask="erpc__rpmsg__lite__rtos__transport_8h__incl.md5"/>
        <files mask="erpc__rpmsg__lite__rtos__transport_8h__incl.svg"/>
        <files mask="erpc__rpmsg__lite__transport_8h__incl.map"/>
        <files mask="erpc__rpmsg__lite__transport_8h__incl.md5"/>
        <files mask="erpc__rpmsg__lite__transport_8h__incl.svg"/>
        <files mask="erpc__rpmsg__tty__rtos__transport_8h__incl.map"/>
        <files mask="erpc__rpmsg__tty__rtos__transport_8h__incl.md5"/>
        <files mask="erpc__rpmsg__tty__rtos__transport_8h__incl.svg"/>
        <files mask="erpc__serial_8h__incl.map"/>
        <files mask="erpc__serial_8h__incl.md5"/>
        <files mask="erpc__serial_8h__incl.svg"/>
        <files mask="erpc__serial__transport_8h__incl.map"/>
        <files mask="erpc__serial__transport_8h__incl.md5"/>
        <files mask="erpc__serial__transport_8h__incl.svg"/>
        <files mask="erpc__server_8h__dep__incl.map"/>
        <files mask="erpc__server_8h__dep__incl.md5"/>
        <files mask="erpc__server_8h__dep__incl.svg"/>
        <files mask="erpc__server_8h__incl.map"/>
        <files mask="erpc__server_8h__incl.md5"/>
        <files mask="erpc__server_8h__incl.svg"/>
        <files mask="erpc__server__setup_8h__incl.map"/>
        <files mask="erpc__server__setup_8h__incl.md5"/>
        <files mask="erpc__server__setup_8h__incl.svg"/>
        <files mask="erpc__simple__server_8h__incl.map"/>
        <files mask="erpc__simple__server_8h__incl.md5"/>
        <files mask="erpc__simple__server_8h__incl.svg"/>
        <files mask="erpc__spi__master__transport_8h__incl.map"/>
        <files mask="erpc__spi__master__transport_8h__incl.md5"/>
        <files mask="erpc__spi__master__transport_8h__incl.svg"/>
        <files mask="erpc__spi__slave__transport_8h__incl.map"/>
        <files mask="erpc__spi__slave__transport_8h__incl.md5"/>
        <files mask="erpc__spi__slave__transport_8h__incl.svg"/>
        <files mask="erpc__static__queue_8h__dep__incl.map"/>
        <files mask="erpc__static__queue_8h__dep__incl.md5"/>
        <files mask="erpc__static__queue_8h__dep__incl.svg"/>
        <files mask="erpc__static__queue_8h__incl.map"/>
        <files mask="erpc__static__queue_8h__incl.md5"/>
        <files mask="erpc__static__queue_8h__incl.svg"/>
        <files mask="erpc__tcp__transport_8h__incl.map"/>
        <files mask="erpc__tcp__transport_8h__incl.md5"/>
        <files mask="erpc__tcp__transport_8h__incl.svg"/>
        <files mask="erpc__threading_8h__dep__incl.map"/>
        <files mask="erpc__threading_8h__dep__incl.md5"/>
        <files mask="erpc__threading_8h__dep__incl.svg"/>
        <files mask="erpc__threading_8h__incl.map"/>
        <files mask="erpc__threading_8h__incl.md5"/>
        <files mask="erpc__threading_8h__incl.svg"/>
        <files mask="erpc__transport_8h__dep__incl.map"/>
        <files mask="erpc__transport_8h__dep__incl.md5"/>
        <files mask="erpc__transport_8h__dep__incl.svg"/>
        <files mask="erpc__transport_8h__incl.map"/>
        <files mask="erpc__transport_8h__incl.md5"/>
        <files mask="erpc__transport_8h__incl.svg"/>
        <files mask="erpc__transport__arbitrator_8h__incl.map"/>
        <files mask="erpc__transport__arbitrator_8h__incl.md5"/>
        <files mask="erpc__transport__arbitrator_8h__incl.svg"/>
        <files mask="erpc__transport__setup_8h__dep__incl.map"/>
        <files mask="erpc__transport__setup_8h__dep__incl.md5"/>
        <files mask="erpc__transport__setup_8h__dep__incl.svg"/>
        <files mask="erpc__transport__setup_8h__incl.map"/>
        <files mask="erpc__transport__setup_8h__incl.md5"/>
        <files mask="erpc__transport__setup_8h__incl.svg"/>
        <files mask="erpc__uart__cmsis__transport_8h__incl.map"/>
        <files mask="erpc__uart__cmsis__transport_8h__incl.md5"/>
        <files mask="erpc__uart__cmsis__transport_8h__incl.svg"/>
        <files mask="graph_legend.md5"/>
        <files mask="graph_legend.svg"/>
        <files mask="group__client__setup.map"/>
        <files mask="group__client__setup.md5"/>
        <files mask="group__client__setup.svg"/>
        <files mask="group__dspi__master__transport.map"/>
        <files mask="group__dspi__master__transport.md5"/>
        <files mask="group__dspi__master__transport.svg"/>
        <files mask="group__dspi__slave__transport.map"/>
        <files mask="group__dspi__slave__transport.md5"/>
        <files mask="group__dspi__slave__transport.svg"/>
        <files mask="group__infra.map"/>
        <files mask="group__infra.md5"/>
        <files mask="group__infra.svg"/>
        <files mask="group__infra__client.map"/>
        <files mask="group__infra__client.md5"/>
        <files mask="group__infra__client.svg"/>
        <files mask="group__infra__codec.map"/>
        <files mask="group__infra__codec.md5"/>
        <files mask="group__infra__codec.svg"/>
        <files mask="group__infra__server.map"/>
        <files mask="group__infra__server.md5"/>
        <files mask="group__infra__server.svg"/>
        <files mask="group__infra__transport.map"/>
        <files mask="group__infra__transport.md5"/>
        <files mask="group__infra__transport.svg"/>
        <files mask="group__infra__utility.map"/>
        <files mask="group__infra__utility.md5"/>
        <files mask="group__infra__utility.svg"/>
        <files mask="group__itbp__transport.map"/>
        <files mask="group__itbp__transport.md5"/>
        <files mask="group__itbp__transport.svg"/>
        <files mask="group__mu__transport.map"/>
        <files mask="group__mu__transport.md5"/>
        <files mask="group__mu__transport.svg"/>
        <files mask="group__port.map"/>
        <files mask="group__port.md5"/>
        <files mask="group__port.svg"/>
        <files mask="group__port__mem.map"/>
        <files mask="group__port__mem.md5"/>
        <files mask="group__port__mem.svg"/>
        <files mask="group__port__serial.map"/>
        <files mask="group__port__serial.md5"/>
        <files mask="group__port__serial.svg"/>
        <files mask="group__port__threads.map"/>
        <files mask="group__port__threads.md5"/>
        <files mask="group__port__threads.svg"/>
        <files mask="group__rpmsg__linux__transport.map"/>
        <files mask="group__rpmsg__linux__transport.md5"/>
        <files mask="group__rpmsg__linux__transport.svg"/>
        <files mask="group__rpmsg__lite__rtos__transport.map"/>
        <files mask="group__rpmsg__lite__rtos__transport.md5"/>
        <files mask="group__rpmsg__lite__rtos__transport.svg"/>
        <files mask="group__rpmsg__lite__transport.map"/>
        <files mask="group__rpmsg__lite__transport.md5"/>
        <files mask="group__rpmsg__lite__transport.svg"/>
        <files mask="group__rpmsg__tty__rtos__transport.map"/>
        <files mask="group__rpmsg__tty__rtos__transport.md5"/>
        <files mask="group__rpmsg__tty__rtos__transport.svg"/>
        <files mask="group__serial__transport.map"/>
        <files mask="group__serial__transport.md5"/>
        <files mask="group__serial__transport.svg"/>
        <files mask="group__server__setup.map"/>
        <files mask="group__server__setup.md5"/>
        <files mask="group__server__setup.svg"/>
        <files mask="group__setup.map"/>
        <files mask="group__setup.md5"/>
        <files mask="group__setup.svg"/>
        <files mask="group__spi__master__transport.map"/>
        <files mask="group__spi__master__transport.md5"/>
        <files mask="group__spi__master__transport.svg"/>
        <files mask="group__spi__slave__transport.map"/>
        <files mask="group__spi__slave__transport.md5"/>
        <files mask="group__spi__slave__transport.svg"/>
        <files mask="group__tcp__transport.map"/>
        <files mask="group__tcp__transport.md5"/>
        <files mask="group__tcp__transport.svg"/>
        <files mask="group__transport__setup.map"/>
        <files mask="group__transport__setup.md5"/>
        <files mask="group__transport__setup.svg"/>
        <files mask="group__transports.map"/>
        <files mask="group__transports.md5"/>
        <files mask="group__transports.svg"/>
        <files mask="group__uart__transport.map"/>
        <files mask="group__uart__transport.md5"/>
        <files mask="group__uart__transport.svg"/>
        <files mask="inherit_graph_0.map"/>
        <files mask="inherit_graph_0.md5"/>
        <files mask="inherit_graph_0.svg"/>
        <files mask="inherit_graph_1.map"/>
        <files mask="inherit_graph_1.md5"/>
        <files mask="inherit_graph_1.svg"/>
        <files mask="inherit_graph_10.map"/>
        <files mask="inherit_graph_10.md5"/>
        <files mask="inherit_graph_10.svg"/>
        <files mask="inherit_graph_11.map"/>
        <files mask="inherit_graph_11.md5"/>
        <files mask="inherit_graph_11.svg"/>
        <files mask="inherit_graph_12.map"/>
        <files mask="inherit_graph_12.md5"/>
        <files mask="inherit_graph_12.svg"/>
        <files mask="inherit_graph_13.map"/>
        <files mask="inherit_graph_13.md5"/>
        <files mask="inherit_graph_13.svg"/>
        <files mask="inherit_graph_14.map"/>
        <files mask="inherit_graph_14.md5"/>
        <files mask="inherit_graph_14.svg"/>
        <files mask="inherit_graph_15.map"/>
        <files mask="inherit_graph_15.md5"/>
        <files mask="inherit_graph_15.svg"/>
        <files mask="inherit_graph_16.map"/>
        <files mask="inherit_graph_16.md5"/>
        <files mask="inherit_graph_16.svg"/>
        <files mask="inherit_graph_17.map"/>
        <files mask="inherit_graph_17.md5"/>
        <files mask="inherit_graph_17.svg"/>
        <files mask="inherit_graph_18.map"/>
        <files mask="inherit_graph_18.md5"/>
        <files mask="inherit_graph_18.svg"/>
        <files mask="inherit_graph_19.map"/>
        <files mask="inherit_graph_19.md5"/>
        <files mask="inherit_graph_19.svg"/>
        <files mask="inherit_graph_2.map"/>
        <files mask="inherit_graph_2.md5"/>
        <files mask="inherit_graph_2.svg"/>
        <files mask="inherit_graph_20.map"/>
        <files mask="inherit_graph_20.md5"/>
        <files mask="inherit_graph_20.svg"/>
        <files mask="inherit_graph_21.map"/>
        <files mask="inherit_graph_21.md5"/>
        <files mask="inherit_graph_21.svg"/>
        <files mask="inherit_graph_22.map"/>
        <files mask="inherit_graph_22.md5"/>
        <files mask="inherit_graph_22.svg"/>
        <files mask="inherit_graph_23.map"/>
        <files mask="inherit_graph_23.md5"/>
        <files mask="inherit_graph_23.svg"/>
        <files mask="inherit_graph_3.map"/>
        <files mask="inherit_graph_3.md5"/>
        <files mask="inherit_graph_3.svg"/>
        <files mask="inherit_graph_4.map"/>
        <files mask="inherit_graph_4.md5"/>
        <files mask="inherit_graph_4.svg"/>
        <files mask="inherit_graph_5.map"/>
        <files mask="inherit_graph_5.md5"/>
        <files mask="inherit_graph_5.svg"/>
        <files mask="inherit_graph_6.map"/>
        <files mask="inherit_graph_6.md5"/>
        <files mask="inherit_graph_6.svg"/>
        <files mask="inherit_graph_7.map"/>
        <files mask="inherit_graph_7.md5"/>
        <files mask="inherit_graph_7.svg"/>
        <files mask="inherit_graph_8.map"/>
        <files mask="inherit_graph_8.md5"/>
        <files mask="inherit_graph_8.svg"/>
        <files mask="inherit_graph_9.map"/>
        <files mask="inherit_graph_9.md5"/>
        <files mask="inherit_graph_9.svg"/>
        <files mask="structerpc_1_1_inter_thread_buffer_transport_1_1_shared_state__coll__graph.map"/>
        <files mask="structerpc_1_1_inter_thread_buffer_transport_1_1_shared_state__coll__graph.md5"/>
        <files mask="structerpc_1_1_inter_thread_buffer_transport_1_1_shared_state__coll__graph.svg"/>
        <files mask="structerpc_1_1_transport_arbitrator_1_1_pending_client_info__coll__graph.map"/>
        <files mask="structerpc_1_1_transport_arbitrator_1_1_pending_client_info__coll__graph.md5"/>
        <files mask="structerpc_1_1_transport_arbitrator_1_1_pending_client_info__coll__graph.svg"/>
      </source>
      <source path="middleware/multicore/erpc/docs/eRPC_infrastructure/eRPC/search" target_path="erpc/doc" type="doc">
        <files mask="all_0.html"/>
        <files mask="all_1.html"/>
        <files mask="all_10.html"/>
        <files mask="all_11.html"/>
        <files mask="all_12.html"/>
        <files mask="all_13.html"/>
        <files mask="all_14.html"/>
        <files mask="all_15.html"/>
        <files mask="all_2.html"/>
        <files mask="all_3.html"/>
        <files mask="all_4.html"/>
        <files mask="all_5.html"/>
        <files mask="all_6.html"/>
        <files mask="all_7.html"/>
        <files mask="all_8.html"/>
        <files mask="all_9.html"/>
        <files mask="all_a.html"/>
        <files mask="all_b.html"/>
        <files mask="all_c.html"/>
        <files mask="all_d.html"/>
        <files mask="all_e.html"/>
        <files mask="all_f.html"/>
        <files mask="classes_0.html"/>
        <files mask="classes_1.html"/>
        <files mask="classes_2.html"/>
        <files mask="classes_3.html"/>
        <files mask="classes_4.html"/>
        <files mask="classes_5.html"/>
        <files mask="classes_6.html"/>
        <files mask="classes_7.html"/>
        <files mask="classes_8.html"/>
        <files mask="classes_9.html"/>
        <files mask="classes_a.html"/>
        <files mask="classes_b.html"/>
        <files mask="classes_c.html"/>
        <files mask="classes_d.html"/>
        <files mask="enums_0.html"/>
        <files mask="enums_1.html"/>
        <files mask="enumvalues_0.html"/>
        <files mask="files_0.html"/>
        <files mask="functions_0.html"/>
        <files mask="functions_1.html"/>
        <files mask="functions_10.html"/>
        <files mask="functions_11.html"/>
        <files mask="functions_12.html"/>
        <files mask="functions_2.html"/>
        <files mask="functions_3.html"/>
        <files mask="functions_4.html"/>
        <files mask="functions_5.html"/>
        <files mask="functions_6.html"/>
        <files mask="functions_7.html"/>
        <files mask="functions_8.html"/>
        <files mask="functions_9.html"/>
        <files mask="functions_a.html"/>
        <files mask="functions_b.html"/>
        <files mask="functions_c.html"/>
        <files mask="functions_d.html"/>
        <files mask="functions_e.html"/>
        <files mask="functions_f.html"/>
        <files mask="groups_0.html"/>
        <files mask="groups_1.html"/>
        <files mask="groups_2.html"/>
        <files mask="groups_3.html"/>
        <files mask="groups_4.html"/>
        <files mask="groups_5.html"/>
        <files mask="groups_6.html"/>
        <files mask="groups_7.html"/>
        <files mask="groups_8.html"/>
        <files mask="nomatches.html"/>
        <files mask="pages_0.html"/>
        <files mask="search.css"/>
        <files mask="typedefs_0.html"/>
        <files mask="typedefs_1.html"/>
        <files mask="typedefs_2.html"/>
        <files mask="typedefs_3.html"/>
        <files mask="variables_0.html"/>
        <files mask="variables_1.html"/>
        <files mask="variables_2.html"/>
      </source>
      <source path="middleware/multicore/erpc/docs/eRPC_infrastructure/eRPC/search" target_path="erpc/doc" type="script">
        <files mask="all_0.js"/>
        <files mask="all_1.js"/>
        <files mask="all_10.js"/>
        <files mask="all_11.js"/>
        <files mask="all_12.js"/>
        <files mask="all_13.js"/>
        <files mask="all_14.js"/>
        <files mask="all_15.js"/>
        <files mask="all_2.js"/>
        <files mask="all_3.js"/>
        <files mask="all_4.js"/>
        <files mask="all_5.js"/>
        <files mask="all_6.js"/>
        <files mask="all_7.js"/>
        <files mask="all_8.js"/>
        <files mask="all_9.js"/>
        <files mask="all_a.js"/>
        <files mask="all_b.js"/>
        <files mask="all_c.js"/>
        <files mask="all_d.js"/>
        <files mask="all_e.js"/>
        <files mask="all_f.js"/>
        <files mask="classes_0.js"/>
        <files mask="classes_1.js"/>
        <files mask="classes_2.js"/>
        <files mask="classes_3.js"/>
        <files mask="classes_4.js"/>
        <files mask="classes_5.js"/>
        <files mask="classes_6.js"/>
        <files mask="classes_7.js"/>
        <files mask="classes_8.js"/>
        <files mask="classes_9.js"/>
        <files mask="classes_a.js"/>
        <files mask="classes_b.js"/>
        <files mask="classes_c.js"/>
        <files mask="classes_d.js"/>
        <files mask="enums_0.js"/>
        <files mask="enums_1.js"/>
        <files mask="enumvalues_0.js"/>
        <files mask="files_0.js"/>
        <files mask="functions_0.js"/>
        <files mask="functions_1.js"/>
        <files mask="functions_10.js"/>
        <files mask="functions_11.js"/>
        <files mask="functions_12.js"/>
        <files mask="functions_2.js"/>
        <files mask="functions_3.js"/>
        <files mask="functions_4.js"/>
        <files mask="functions_5.js"/>
        <files mask="functions_6.js"/>
        <files mask="functions_7.js"/>
        <files mask="functions_8.js"/>
        <files mask="functions_9.js"/>
        <files mask="functions_a.js"/>
        <files mask="functions_b.js"/>
        <files mask="functions_c.js"/>
        <files mask="functions_d.js"/>
        <files mask="functions_e.js"/>
        <files mask="functions_f.js"/>
        <files mask="groups_0.js"/>
        <files mask="groups_1.js"/>
        <files mask="groups_2.js"/>
        <files mask="groups_3.js"/>
        <files mask="groups_4.js"/>
        <files mask="groups_5.js"/>
        <files mask="groups_6.js"/>
        <files mask="groups_7.js"/>
        <files mask="groups_8.js"/>
        <files mask="pages_0.js"/>
        <files mask="search.js"/>
        <files mask="searchdata.js"/>
        <files mask="typedefs_0.js"/>
        <files mask="typedefs_1.js"/>
        <files mask="typedefs_2.js"/>
        <files mask="typedefs_3.js"/>
        <files mask="variables_0.js"/>
        <files mask="variables_1.js"/>
        <files mask="variables_2.js"/>
      </source>
      <source path="middleware/multicore/erpc/docs/eRPC_infrastructure/eRPC/search" target_path="erpc/doc" type="image">
        <files mask="close.png"/>
        <files mask="mag_sel.png"/>
        <files mask="search_l.png"/>
        <files mask="search_m.png"/>
        <files mask="search_r.png"/>
      </source>
      <source path="middleware/multicore/erpc/docs/eRPC_infrastructure/erpcgen" target_path="erpc/doc" type="doc">
        <files mask="_alias_type_8h_source.html"/>
        <files mask="_annotation_8h_source.html"/>
        <files mask="_array_type_8h_source.html"/>
        <files mask="_ast_node_8h_source.html"/>
        <files mask="_ast_walker_8h_source.html"/>
        <files mask="_builtin_type_8h_source.html"/>
        <files mask="_c_generator_8h_source.html"/>
        <files mask="_const_type_8h_source.html"/>
        <files mask="_data_type_8h_source.html"/>
        <files mask="_enum_member_8h_source.html"/>
        <files mask="_enum_type_8h_source.html"/>
        <files mask="_erpc_lexer_8h_source.html"/>
        <files mask="_function_8h_source.html"/>
        <files mask="_function_type_8h_source.html"/>
        <files mask="_generator_8h_source.html"/>
        <files mask="_group_8h_source.html"/>
        <files mask="_hex_values_8h_source.html"/>
        <files mask="_interface_8h_source.html"/>
        <files mask="_interface_definition_8h_source.html"/>
        <files mask="_list_type_8h_source.html"/>
        <files mask="_logging_8h_source.html"/>
        <files mask="_parse_errors_8h_source.html"/>
        <files mask="_program_8h_source.html"/>
        <files mask="_python_generator_8h_source.html"/>
        <files mask="_search_path_8h_source.html"/>
        <files mask="_struct_member_8h_source.html"/>
        <files mask="_struct_type_8h_source.html"/>
        <files mask="_symbol_8h_source.html"/>
        <files mask="_symbol_scanner_8h_source.html"/>
        <files mask="_symbol_scope_8h_source.html"/>
        <files mask="_token_8h_source.html"/>
        <files mask="_union_case_8h_source.html"/>
        <files mask="_union_type_8h_source.html"/>
        <files mask="_unique_id_checker_8h_source.html"/>
        <files mask="_value_8h_source.html"/>
        <files mask="_void_type_8h_source.html"/>
        <files mask="annotated.html"/>
        <files mask="annotations_8h_source.html"/>
        <files mask="class_float_value-members.html"/>
        <files mask="class_float_value.html"/>
        <files mask="class_integer_value-members.html"/>
        <files mask="class_integer_value.html"/>
        <files mask="class_log-members.html"/>
        <files mask="class_log.html"/>
        <files mask="class_log_1_1_set_output_level-members.html"/>
        <files mask="class_log_1_1_set_output_level.html"/>
        <files mask="class_logger-members.html"/>
        <files mask="class_logger.html"/>
        <files mask="class_opt_argv_iter-members.html"/>
        <files mask="class_opt_argv_iter.html"/>
        <files mask="class_opt_istream_iter-members.html"/>
        <files mask="class_opt_istream_iter.html"/>
        <files mask="class_opt_iter-members.html"/>
        <files mask="class_opt_iter.html"/>
        <files mask="class_opt_iter_rwd-members.html"/>
        <files mask="class_opt_iter_rwd.html"/>
        <files mask="class_opt_str_tok_iter-members.html"/>
        <files mask="class_opt_str_tok_iter.html"/>
        <files mask="class_option_spec-members.html"/>
        <files mask="class_option_spec.html"/>
        <files mask="class_options-members.html"/>
        <files mask="class_options.html"/>
        <files mask="class_path_searcher-members.html"/>
        <files mask="class_path_searcher.html"/>
        <files mask="class_stdout_logger-members.html"/>
        <files mask="class_stdout_logger.html"/>
        <files mask="class_string_value-members.html"/>
        <files mask="class_string_value.html"/>
        <files mask="class_value-members.html"/>
        <files mask="class_value.html"/>
        <files mask="classcpptempl_1_1_data-members.html"/>
        <files mask="classcpptempl_1_1_data.html"/>
        <files mask="classcpptempl_1_1_data_bool-members.html"/>
        <files mask="classcpptempl_1_1_data_bool.html"/>
        <files mask="classcpptempl_1_1_data_int-members.html"/>
        <files mask="classcpptempl_1_1_data_int.html"/>
        <files mask="classcpptempl_1_1_data_list-members.html"/>
        <files mask="classcpptempl_1_1_data_list.html"/>
        <files mask="classcpptempl_1_1_data_map-members.html"/>
        <files mask="classcpptempl_1_1_data_map.html"/>
        <files mask="classcpptempl_1_1_data_template-members.html"/>
        <files mask="classcpptempl_1_1_data_template.html"/>
        <files mask="classcpptempl_1_1_data_value-members.html"/>
        <files mask="classcpptempl_1_1_data_value.html"/>
        <files mask="classcpptempl_1_1_template_exception-members.html"/>
        <files mask="classcpptempl_1_1_template_exception.html"/>
        <files mask="classcpptempl_1_1data__map-members.html"/>
        <files mask="classcpptempl_1_1data__map.html"/>
        <files mask="classcpptempl_1_1data__map_1_1key__error-members.html"/>
        <files mask="classcpptempl_1_1data__map_1_1key__error.html"/>
        <files mask="classcpptempl_1_1data__ptr-members.html"/>
        <files mask="classcpptempl_1_1data__ptr.html"/>
        <files mask="classerpcgen_1_1_alias_type-members.html"/>
        <files mask="classerpcgen_1_1_alias_type.html"/>
        <files mask="classerpcgen_1_1_annotation-members.html"/>
        <files mask="classerpcgen_1_1_annotation.html"/>
        <files mask="classerpcgen_1_1_array_type-members.html"/>
        <files mask="classerpcgen_1_1_array_type.html"/>
        <files mask="classerpcgen_1_1_ast_node-members.html"/>
        <files mask="classerpcgen_1_1_ast_node.html"/>
        <files mask="classerpcgen_1_1_ast_printer-members.html"/>
        <files mask="classerpcgen_1_1_ast_printer.html"/>
        <files mask="classerpcgen_1_1_ast_walker-members.html"/>
        <files mask="classerpcgen_1_1_ast_walker.html"/>
        <files mask="classerpcgen_1_1_builtin_type-members.html"/>
        <files mask="classerpcgen_1_1_builtin_type.html"/>
        <files mask="classerpcgen_1_1_c_generator-members.html"/>
        <files mask="classerpcgen_1_1_c_generator.html"/>
        <files mask="classerpcgen_1_1_const_type-members.html"/>
        <files mask="classerpcgen_1_1_const_type.html"/>
        <files mask="classerpcgen_1_1_current_file_info-members.html"/>
        <files mask="classerpcgen_1_1_current_file_info.html"/>
        <files mask="classerpcgen_1_1_data_type-members.html"/>
        <files mask="classerpcgen_1_1_data_type.html"/>
        <files mask="classerpcgen_1_1_enum_member-members.html"/>
        <files mask="classerpcgen_1_1_enum_member.html"/>
        <files mask="classerpcgen_1_1_enum_type-members.html"/>
        <files mask="classerpcgen_1_1_enum_type.html"/>
        <files mask="classerpcgen_1_1_erpc_lexer-members.html"/>
        <files mask="classerpcgen_1_1_erpc_lexer.html"/>
        <files mask="classerpcgen_1_1_function-members.html"/>
        <files mask="classerpcgen_1_1_function.html"/>
        <files mask="classerpcgen_1_1_function_base-members.html"/>
        <files mask="classerpcgen_1_1_function_base.html"/>
        <files mask="classerpcgen_1_1_function_type-members.html"/>
        <files mask="classerpcgen_1_1_function_type.html"/>
        <files mask="classerpcgen_1_1_generator-members.html"/>
        <files mask="classerpcgen_1_1_generator.html"/>
        <files mask="classerpcgen_1_1_group-members.html"/>
        <files mask="classerpcgen_1_1_group.html"/>
        <files mask="classerpcgen_1_1_interface-members.html"/>
        <files mask="classerpcgen_1_1_interface.html"/>
        <files mask="classerpcgen_1_1_interface_definition-members.html"/>
        <files mask="classerpcgen_1_1_interface_definition.html"/>
        <files mask="classerpcgen_1_1_list_type-members.html"/>
        <files mask="classerpcgen_1_1_list_type.html"/>
        <files mask="classerpcgen_1_1_program-members.html"/>
        <files mask="classerpcgen_1_1_program.html"/>
        <files mask="classerpcgen_1_1_python_generator-members.html"/>
        <files mask="classerpcgen_1_1_python_generator.html"/>
        <files mask="classerpcgen_1_1_struct_member-members.html"/>
        <files mask="classerpcgen_1_1_struct_member.html"/>
        <files mask="classerpcgen_1_1_struct_type-members.html"/>
        <files mask="classerpcgen_1_1_struct_type.html"/>
        <files mask="classerpcgen_1_1_symbol-members.html"/>
        <files mask="classerpcgen_1_1_symbol.html"/>
        <files mask="classerpcgen_1_1_symbol_scanner-members.html"/>
        <files mask="classerpcgen_1_1_symbol_scanner.html"/>
        <files mask="classerpcgen_1_1_symbol_scope-members.html"/>
        <files mask="classerpcgen_1_1_symbol_scope.html"/>
        <files mask="classerpcgen_1_1_symbol_scope_1_1typed__iterator-members.html"/>
        <files mask="classerpcgen_1_1_symbol_scope_1_1typed__iterator.html"/>
        <files mask="classerpcgen_1_1_token-members.html"/>
        <files mask="classerpcgen_1_1_token.html"/>
        <files mask="classerpcgen_1_1_union_case-members.html"/>
        <files mask="classerpcgen_1_1_union_case.html"/>
        <files mask="classerpcgen_1_1_union_type-members.html"/>
        <files mask="classerpcgen_1_1_union_type.html"/>
        <files mask="classerpcgen_1_1_unique_id_checker-members.html"/>
        <files mask="classerpcgen_1_1_unique_id_checker.html"/>
        <files mask="classerpcgen_1_1_void_type-members.html"/>
        <files mask="classerpcgen_1_1_void_type.html"/>
        <files mask="classerpcgen_1_1erpc__error-members.html"/>
        <files mask="classerpcgen_1_1erpc__error.html"/>
        <files mask="classerpcgen_1_1erpcgen_tool-members.html"/>
        <files mask="classerpcgen_1_1erpcgen_tool.html"/>
        <files mask="classerpcgen_1_1internal__error-members.html"/>
        <files mask="classerpcgen_1_1internal__error.html"/>
        <files mask="classerpcgen_1_1lexical__error-members.html"/>
        <files mask="classerpcgen_1_1lexical__error.html"/>
        <files mask="classerpcgen_1_1semantic__error-members.html"/>
        <files mask="classerpcgen_1_1semantic__error.html"/>
        <files mask="classerpcgen_1_1syntax__error-members.html"/>
        <files mask="classerpcgen_1_1syntax__error.html"/>
        <files mask="classerpcgen_1_1syntax__error2-members.html"/>
        <files mask="classerpcgen_1_1syntax__error2.html"/>
        <files mask="classes.html"/>
        <files mask="classsmart__ptr-members.html"/>
        <files mask="classsmart__ptr.html"/>
        <files mask="cpptempl_8h_source.html"/>
        <files mask="customdoxygen.css"/>
        <files mask="dir_5d74497626cd518006bfc4bb021f3cae.html"/>
        <files mask="dir_61c3f993326311b905af09f643fec799.html"/>
        <files mask="dir_acfaa839b8ffb0f73c7c3063e82240f2.html"/>
        <files mask="dir_b0461de83f30261a836ec46318e22617.html"/>
        <files mask="doxygen.css"/>
        <files mask="files.html"/>
        <files mask="format__string_8h_source.html"/>
        <files mask="functions.html"/>
        <files mask="functions_0x7e.html"/>
        <files mask="functions_a.html"/>
        <files mask="functions_b.html"/>
        <files mask="functions_c.html"/>
        <files mask="functions_d.html"/>
        <files mask="functions_e.html"/>
        <files mask="functions_enum.html"/>
        <files mask="functions_eval.html"/>
        <files mask="functions_f.html"/>
        <files mask="functions_func.html"/>
        <files mask="functions_func_0x7e.html"/>
        <files mask="functions_func_a.html"/>
        <files mask="functions_func_b.html"/>
        <files mask="functions_func_c.html"/>
        <files mask="functions_func_d.html"/>
        <files mask="functions_func_e.html"/>
        <files mask="functions_func_f.html"/>
        <files mask="functions_func_g.html"/>
        <files mask="functions_func_h.html"/>
        <files mask="functions_func_i.html"/>
        <files mask="functions_func_j.html"/>
        <files mask="functions_func_l.html"/>
        <files mask="functions_func_m.html"/>
        <files mask="functions_func_n.html"/>
        <files mask="functions_func_o.html"/>
        <files mask="functions_func_p.html"/>
        <files mask="functions_func_r.html"/>
        <files mask="functions_func_s.html"/>
        <files mask="functions_func_t.html"/>
        <files mask="functions_func_u.html"/>
        <files mask="functions_func_v.html"/>
        <files mask="functions_func_w.html"/>
        <files mask="functions_func_y.html"/>
        <files mask="functions_g.html"/>
        <files mask="functions_h.html"/>
        <files mask="functions_i.html"/>
        <files mask="functions_j.html"/>
        <files mask="functions_k.html"/>
        <files mask="functions_l.html"/>
        <files mask="functions_m.html"/>
        <files mask="functions_n.html"/>
        <files mask="functions_o.html"/>
        <files mask="functions_p.html"/>
        <files mask="functions_q.html"/>
        <files mask="functions_r.html"/>
        <files mask="functions_s.html"/>
        <files mask="functions_t.html"/>
        <files mask="functions_type.html"/>
        <files mask="functions_u.html"/>
        <files mask="functions_v.html"/>
        <files mask="functions_vars.html"/>
        <files mask="functions_w.html"/>
        <files mask="functions_y.html"/>
        <files mask="hierarchy.html"/>
        <files mask="index.html"/>
        <files mask="navtree.css"/>
        <files mask="options_8h_source.html"/>
        <files mask="os__config_8h_source.html"/>
        <files mask="smart__ptr_8h_source.html"/>
        <files mask="structerpcgen_1_1token__loc__t-members.html"/>
        <files mask="structerpcgen_1_1token__loc__t.html"/>
        <files mask="structsmart__ptr__delete-members.html"/>
        <files mask="structsmart__ptr__delete.html"/>
        <files mask="structsmart__ptr__delete__array-members.html"/>
        <files mask="structsmart__ptr__delete__array.html"/>
        <files mask="structsmart__ptr__free-members.html"/>
        <files mask="structsmart__ptr__free.html"/>
        <files mask="tabs.css"/>
      </source>
      <source path="middleware/multicore/erpc/docs/eRPC_infrastructure/erpcgen" target_path="erpc/doc" type="script">
        <files mask="annotated_dup.js"/>
        <files mask="class_float_value.js"/>
        <files mask="class_integer_value.js"/>
        <files mask="class_log.js"/>
        <files mask="class_log_1_1_set_output_level.js"/>
        <files mask="class_logger.js"/>
        <files mask="class_opt_argv_iter.js"/>
        <files mask="class_opt_istream_iter.js"/>
        <files mask="class_opt_iter.js"/>
        <files mask="class_opt_iter_rwd.js"/>
        <files mask="class_opt_str_tok_iter.js"/>
        <files mask="class_option_spec.js"/>
        <files mask="class_options.js"/>
        <files mask="class_path_searcher.js"/>
        <files mask="class_stdout_logger.js"/>
        <files mask="class_string_value.js"/>
        <files mask="class_value.js"/>
        <files mask="classcpptempl_1_1_data.js"/>
        <files mask="classcpptempl_1_1_data_bool.js"/>
        <files mask="classcpptempl_1_1_data_int.js"/>
        <files mask="classcpptempl_1_1_data_list.js"/>
        <files mask="classcpptempl_1_1_data_map.js"/>
        <files mask="classcpptempl_1_1_data_template.js"/>
        <files mask="classcpptempl_1_1_data_value.js"/>
        <files mask="classcpptempl_1_1_template_exception.js"/>
        <files mask="classcpptempl_1_1data__map.js"/>
        <files mask="classcpptempl_1_1data__map_1_1key__error.js"/>
        <files mask="classcpptempl_1_1data__ptr.js"/>
        <files mask="classerpcgen_1_1_alias_type.js"/>
        <files mask="classerpcgen_1_1_annotation.js"/>
        <files mask="classerpcgen_1_1_array_type.js"/>
        <files mask="classerpcgen_1_1_ast_node.js"/>
        <files mask="classerpcgen_1_1_ast_printer.js"/>
        <files mask="classerpcgen_1_1_ast_walker.js"/>
        <files mask="classerpcgen_1_1_builtin_type.js"/>
        <files mask="classerpcgen_1_1_c_generator.js"/>
        <files mask="classerpcgen_1_1_const_type.js"/>
        <files mask="classerpcgen_1_1_current_file_info.js"/>
        <files mask="classerpcgen_1_1_data_type.js"/>
        <files mask="classerpcgen_1_1_enum_member.js"/>
        <files mask="classerpcgen_1_1_enum_type.js"/>
        <files mask="classerpcgen_1_1_erpc_lexer.js"/>
        <files mask="classerpcgen_1_1_function.js"/>
        <files mask="classerpcgen_1_1_function_base.js"/>
        <files mask="classerpcgen_1_1_function_type.js"/>
        <files mask="classerpcgen_1_1_generator.js"/>
        <files mask="classerpcgen_1_1_group.js"/>
        <files mask="classerpcgen_1_1_interface.js"/>
        <files mask="classerpcgen_1_1_interface_definition.js"/>
        <files mask="classerpcgen_1_1_list_type.js"/>
        <files mask="classerpcgen_1_1_program.js"/>
        <files mask="classerpcgen_1_1_python_generator.js"/>
        <files mask="classerpcgen_1_1_struct_member.js"/>
        <files mask="classerpcgen_1_1_struct_type.js"/>
        <files mask="classerpcgen_1_1_symbol.js"/>
        <files mask="classerpcgen_1_1_symbol_scanner.js"/>
        <files mask="classerpcgen_1_1_symbol_scope.js"/>
        <files mask="classerpcgen_1_1_symbol_scope_1_1typed__iterator.js"/>
        <files mask="classerpcgen_1_1_token.js"/>
        <files mask="classerpcgen_1_1_union_case.js"/>
        <files mask="classerpcgen_1_1_union_type.js"/>
        <files mask="classerpcgen_1_1_unique_id_checker.js"/>
        <files mask="classerpcgen_1_1_void_type.js"/>
        <files mask="classerpcgen_1_1erpc__error.js"/>
        <files mask="classerpcgen_1_1erpcgen_tool.js"/>
        <files mask="classerpcgen_1_1internal__error.js"/>
        <files mask="classerpcgen_1_1lexical__error.js"/>
        <files mask="classerpcgen_1_1semantic__error.js"/>
        <files mask="classerpcgen_1_1syntax__error.js"/>
        <files mask="classerpcgen_1_1syntax__error2.js"/>
        <files mask="classsmart__ptr.js"/>
        <files mask="dynsections.js"/>
        <files mask="files.js"/>
        <files mask="functions_dup.js"/>
        <files mask="functions_func.js"/>
        <files mask="hierarchy.js"/>
        <files mask="jquery.js"/>
        <files mask="navtree.js"/>
        <files mask="navtreedata.js"/>
        <files mask="navtreeindex0.js"/>
        <files mask="navtreeindex1.js"/>
        <files mask="navtreeindex2.js"/>
        <files mask="navtreeindex3.js"/>
        <files mask="navtreeindex4.js"/>
        <files mask="resize.js"/>
        <files mask="structerpcgen_1_1token__loc__t.js"/>
      </source>
      <source path="middleware/multicore/erpc/docs/eRPC_infrastructure/erpcgen" target_path="erpc/doc" type="image">
        <files mask="arrowdown.png"/>
        <files mask="arrowright.png"/>
        <files mask="bc_s.png"/>
        <files mask="bdwn.png"/>
        <files mask="class_float_value.png"/>
        <files mask="class_integer_value.png"/>
        <files mask="class_logger.png"/>
        <files mask="class_opt_argv_iter.png"/>
        <files mask="class_opt_istream_iter.png"/>
        <files mask="class_opt_iter.png"/>
        <files mask="class_opt_iter_rwd.png"/>
        <files mask="class_opt_str_tok_iter.png"/>
        <files mask="class_stdout_logger.png"/>
        <files mask="class_string_value.png"/>
        <files mask="class_value.png"/>
        <files mask="classcpptempl_1_1_data.png"/>
        <files mask="classcpptempl_1_1_data_bool.png"/>
        <files mask="classcpptempl_1_1_data_int.png"/>
        <files mask="classcpptempl_1_1_data_list.png"/>
        <files mask="classcpptempl_1_1_data_map.png"/>
        <files mask="classcpptempl_1_1_data_template.png"/>
        <files mask="classcpptempl_1_1_data_value.png"/>
        <files mask="classcpptempl_1_1_template_exception.png"/>
        <files mask="classcpptempl_1_1data__map_1_1key__error.png"/>
        <files mask="classerpcgen_1_1_alias_type.png"/>
        <files mask="classerpcgen_1_1_array_type.png"/>
        <files mask="classerpcgen_1_1_ast_walker.png"/>
        <files mask="classerpcgen_1_1_builtin_type.png"/>
        <files mask="classerpcgen_1_1_c_generator.png"/>
        <files mask="classerpcgen_1_1_const_type.png"/>
        <files mask="classerpcgen_1_1_data_type.png"/>
        <files mask="classerpcgen_1_1_enum_member.png"/>
        <files mask="classerpcgen_1_1_enum_type.png"/>
        <files mask="classerpcgen_1_1_erpc_lexer.png"/>
        <files mask="classerpcgen_1_1_function.png"/>
        <files mask="classerpcgen_1_1_function_base.png"/>
        <files mask="classerpcgen_1_1_function_type.png"/>
        <files mask="classerpcgen_1_1_generator.png"/>
        <files mask="classerpcgen_1_1_interface.png"/>
        <files mask="classerpcgen_1_1_list_type.png"/>
        <files mask="classerpcgen_1_1_program.png"/>
        <files mask="classerpcgen_1_1_python_generator.png"/>
        <files mask="classerpcgen_1_1_struct_member.png"/>
        <files mask="classerpcgen_1_1_struct_type.png"/>
        <files mask="classerpcgen_1_1_symbol.png"/>
        <files mask="classerpcgen_1_1_symbol_scanner.png"/>
        <files mask="classerpcgen_1_1_union_case.png"/>
        <files mask="classerpcgen_1_1_union_type.png"/>
        <files mask="classerpcgen_1_1_void_type.png"/>
        <files mask="classerpcgen_1_1erpc__error.png"/>
        <files mask="classerpcgen_1_1internal__error.png"/>
        <files mask="classerpcgen_1_1lexical__error.png"/>
        <files mask="classerpcgen_1_1semantic__error.png"/>
        <files mask="classerpcgen_1_1syntax__error.png"/>
        <files mask="classerpcgen_1_1syntax__error2.png"/>
        <files mask="closed.png"/>
        <files mask="doc.png"/>
        <files mask="doxygen.png"/>
        <files mask="folderclosed.png"/>
        <files mask="folderopen.png"/>
        <files mask="nav_f.png"/>
        <files mask="nav_g.png"/>
        <files mask="nav_h.png"/>
        <files mask="nxp_logo_small.png"/>
        <files mask="open.png"/>
        <files mask="splitbar.png"/>
        <files mask="sync_off.png"/>
        <files mask="sync_on.png"/>
        <files mask="tab_a.png"/>
        <files mask="tab_b.png"/>
        <files mask="tab_h.png"/>
        <files mask="tab_s.png"/>
      </source>
      <source path="middleware/multicore/erpc/docs/eRPC_infrastructure/erpcgen/search" target_path="erpc/doc" type="doc">
        <files mask="all_0.html"/>
        <files mask="all_1.html"/>
        <files mask="all_10.html"/>
        <files mask="all_11.html"/>
        <files mask="all_12.html"/>
        <files mask="all_13.html"/>
        <files mask="all_14.html"/>
        <files mask="all_15.html"/>
        <files mask="all_16.html"/>
        <files mask="all_17.html"/>
        <files mask="all_18.html"/>
        <files mask="all_19.html"/>
        <files mask="all_2.html"/>
        <files mask="all_3.html"/>
        <files mask="all_4.html"/>
        <files mask="all_5.html"/>
        <files mask="all_6.html"/>
        <files mask="all_7.html"/>
        <files mask="all_8.html"/>
        <files mask="all_9.html"/>
        <files mask="all_a.html"/>
        <files mask="all_b.html"/>
        <files mask="all_c.html"/>
        <files mask="all_d.html"/>
        <files mask="all_e.html"/>
        <files mask="all_f.html"/>
        <files mask="classes_0.html"/>
        <files mask="classes_1.html"/>
        <files mask="classes_2.html"/>
        <files mask="classes_3.html"/>
        <files mask="classes_4.html"/>
        <files mask="classes_5.html"/>
        <files mask="classes_6.html"/>
        <files mask="classes_7.html"/>
        <files mask="classes_8.html"/>
        <files mask="classes_9.html"/>
        <files mask="classes_a.html"/>
        <files mask="classes_b.html"/>
        <files mask="classes_c.html"/>
        <files mask="classes_d.html"/>
        <files mask="classes_e.html"/>
        <files mask="classes_f.html"/>
        <files mask="enums_0.html"/>
        <files mask="enums_1.html"/>
        <files mask="enums_2.html"/>
        <files mask="enums_3.html"/>
        <files mask="enums_4.html"/>
        <files mask="enums_5.html"/>
        <files mask="enumvalues_0.html"/>
        <files mask="enumvalues_1.html"/>
        <files mask="enumvalues_2.html"/>
        <files mask="enumvalues_3.html"/>
        <files mask="enumvalues_4.html"/>
        <files mask="enumvalues_5.html"/>
        <files mask="enumvalues_6.html"/>
        <files mask="enumvalues_7.html"/>
        <files mask="functions_0.html"/>
        <files mask="functions_1.html"/>
        <files mask="functions_10.html"/>
        <files mask="functions_11.html"/>
        <files mask="functions_12.html"/>
        <files mask="functions_13.html"/>
        <files mask="functions_14.html"/>
        <files mask="functions_15.html"/>
        <files mask="functions_16.html"/>
        <files mask="functions_17.html"/>
        <files mask="functions_2.html"/>
        <files mask="functions_3.html"/>
        <files mask="functions_4.html"/>
        <files mask="functions_5.html"/>
        <files mask="functions_6.html"/>
        <files mask="functions_7.html"/>
        <files mask="functions_8.html"/>
        <files mask="functions_9.html"/>
        <files mask="functions_a.html"/>
        <files mask="functions_b.html"/>
        <files mask="functions_c.html"/>
        <files mask="functions_d.html"/>
        <files mask="functions_e.html"/>
        <files mask="functions_f.html"/>
        <files mask="nomatches.html"/>
        <files mask="pages_0.html"/>
        <files mask="search.css"/>
        <files mask="typedefs_0.html"/>
        <files mask="typedefs_1.html"/>
        <files mask="typedefs_2.html"/>
        <files mask="typedefs_3.html"/>
        <files mask="typedefs_4.html"/>
        <files mask="typedefs_5.html"/>
        <files mask="typedefs_6.html"/>
        <files mask="variables_0.html"/>
        <files mask="variables_1.html"/>
        <files mask="variables_2.html"/>
        <files mask="variables_3.html"/>
      </source>
      <source path="middleware/multicore/erpc/docs/eRPC_infrastructure/erpcgen/search" target_path="erpc/doc" type="script">
        <files mask="all_0.js"/>
        <files mask="all_1.js"/>
        <files mask="all_10.js"/>
        <files mask="all_11.js"/>
        <files mask="all_12.js"/>
        <files mask="all_13.js"/>
        <files mask="all_14.js"/>
        <files mask="all_15.js"/>
        <files mask="all_16.js"/>
        <files mask="all_17.js"/>
        <files mask="all_18.js"/>
        <files mask="all_19.js"/>
        <files mask="all_2.js"/>
        <files mask="all_3.js"/>
        <files mask="all_4.js"/>
        <files mask="all_5.js"/>
        <files mask="all_6.js"/>
        <files mask="all_7.js"/>
        <files mask="all_8.js"/>
        <files mask="all_9.js"/>
        <files mask="all_a.js"/>
        <files mask="all_b.js"/>
        <files mask="all_c.js"/>
        <files mask="all_d.js"/>
        <files mask="all_e.js"/>
        <files mask="all_f.js"/>
        <files mask="classes_0.js"/>
        <files mask="classes_1.js"/>
        <files mask="classes_2.js"/>
        <files mask="classes_3.js"/>
        <files mask="classes_4.js"/>
        <files mask="classes_5.js"/>
        <files mask="classes_6.js"/>
        <files mask="classes_7.js"/>
        <files mask="classes_8.js"/>
        <files mask="classes_9.js"/>
        <files mask="classes_a.js"/>
        <files mask="classes_b.js"/>
        <files mask="classes_c.js"/>
        <files mask="classes_d.js"/>
        <files mask="classes_e.js"/>
        <files mask="classes_f.js"/>
        <files mask="enums_0.js"/>
        <files mask="enums_1.js"/>
        <files mask="enums_2.js"/>
        <files mask="enums_3.js"/>
        <files mask="enums_4.js"/>
        <files mask="enums_5.js"/>
        <files mask="enumvalues_0.js"/>
        <files mask="enumvalues_1.js"/>
        <files mask="enumvalues_2.js"/>
        <files mask="enumvalues_3.js"/>
        <files mask="enumvalues_4.js"/>
        <files mask="enumvalues_5.js"/>
        <files mask="enumvalues_6.js"/>
        <files mask="enumvalues_7.js"/>
        <files mask="functions_0.js"/>
        <files mask="functions_1.js"/>
        <files mask="functions_10.js"/>
        <files mask="functions_11.js"/>
        <files mask="functions_12.js"/>
        <files mask="functions_13.js"/>
        <files mask="functions_14.js"/>
        <files mask="functions_15.js"/>
        <files mask="functions_16.js"/>
        <files mask="functions_17.js"/>
        <files mask="functions_2.js"/>
        <files mask="functions_3.js"/>
        <files mask="functions_4.js"/>
        <files mask="functions_5.js"/>
        <files mask="functions_6.js"/>
        <files mask="functions_7.js"/>
        <files mask="functions_8.js"/>
        <files mask="functions_9.js"/>
        <files mask="functions_a.js"/>
        <files mask="functions_b.js"/>
        <files mask="functions_c.js"/>
        <files mask="functions_d.js"/>
        <files mask="functions_e.js"/>
        <files mask="functions_f.js"/>
        <files mask="pages_0.js"/>
        <files mask="search.js"/>
        <files mask="searchdata.js"/>
        <files mask="typedefs_0.js"/>
        <files mask="typedefs_1.js"/>
        <files mask="typedefs_2.js"/>
        <files mask="typedefs_3.js"/>
        <files mask="typedefs_4.js"/>
        <files mask="typedefs_5.js"/>
        <files mask="typedefs_6.js"/>
        <files mask="variables_0.js"/>
        <files mask="variables_1.js"/>
        <files mask="variables_2.js"/>
        <files mask="variables_3.js"/>
      </source>
      <source path="middleware/multicore/erpc/docs/eRPC_infrastructure/erpcgen/search" target_path="erpc/doc" type="image">
        <files mask="close.png"/>
        <files mask="mag_sel.png"/>
        <files mask="search_l.png"/>
        <files mask="search_m.png"/>
        <files mask="search_r.png"/>
      </source>
      <source path="middleware/multicore/erpc/docs/eRPC_infrastructure" target_path="erpc/doc" type="doc">
        <files mask="index.html"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c" target_path="erpc/aux" type="other">
        <files mask="Makefile"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/config" target_path="erpc/aux" type="c_include">
        <files mask="erpc_config.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/port" target_path="erpc/aux" type="src">
        <files mask="erpc_serial.cpp"/>
        <files mask="erpc_threading_pthreads.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/port" target_path="erpc/aux" type="c_include">
        <files mask="erpc_serial.h"/>
        <files mask="erpc_threading.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c" target_path="erpc/doc" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/aux" type="src">
        <files mask="erpc_setup_mbf_static.cpp"/>
        <files mask="erpc_setup_serial.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/transports" target_path="erpc/aux" type="src">
        <files mask="erpc_inter_thread_buffer_transport.cpp"/>
        <files mask="erpc_serial_transport.cpp"/>
        <files mask="erpc_tcp_transport.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/transports" target_path="erpc/aux" type="c_include">
        <files mask="erpc_inter_thread_buffer_transport.h"/>
        <files mask="erpc_serial_transport.h"/>
        <files mask="erpc_tcp_transport.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_python" target_path="erpc/aux" type="other">
        <files mask="README.rst"/>
        <files mask="readme.md"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_python/erpc" target_path="erpc/aux" type="script">
        <files mask="__init__.py"/>
        <files mask="arbitrator.py"/>
        <files mask="basic_codec.py"/>
        <files mask="client.py"/>
        <files mask="codec.py"/>
        <files mask="crc16.py"/>
        <files mask="erpc_version.py"/>
        <files mask="server.py"/>
        <files mask="simple_server.py"/>
        <files mask="transport.py"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_python" target_path="erpc/aux" type="script">
        <files mask="setup.py"/>
      </source>
      <source path="middleware/multicore/erpc/erpcgen" target_path="erpc/aux" type="other">
        <files mask="Makefile"/>
      </source>
      <source path="middleware/multicore/erpc/erpcgen/VisualStudio_v14" target_path="erpc/aux" type="other">
        <files mask="erpcgen.sln"/>
        <files mask="erpcgen.vcxproj"/>
        <files mask="erpcgen.vcxproj.filters"/>
        <files mask="erpcgen.vcxproj.user"/>
      </source>
      <source path="middleware/multicore/erpc/erpcgen/VisualStudio_v14" target_path="erpc/aux" type="doc">
        <files mask="readme_erpcgen.txt"/>
      </source>
      <source path="middleware/multicore/erpc/erpcgen/VisualStudio_v14" target_path="erpc/aux" type="src">
        <files mask="stdafx.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpcgen/VisualStudio_v14" target_path="erpc/aux" type="c_include">
        <files mask="stdafx.h"/>
        <files mask="stdbool.h"/>
        <files mask="targetver.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpcgen/bin" target_path="erpc/aux" type="script">
        <files mask="txt_to_c.py"/>
      </source>
      <source path="middleware/multicore/erpc/erpcgen/embedded-rpc.xcodeproj" target_path="erpc/aux" type="other">
        <files mask="project.pbxproj"/>
      </source>
      <source path="middleware/multicore/erpc/erpcgen/embedded-rpc.xcodeproj/project.xcworkspace" target_path="erpc/aux" type="other">
        <files mask="contents.xcworkspacedata"/>
      </source>
      <source path="middleware/multicore/erpc/erpcgen" target_path="erpc/aux" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source path="middleware/multicore/erpc/erpcgen/src" target_path="erpc/aux" type="src">
        <files mask="AstNode.cpp"/>
        <files mask="AstWalker.cpp"/>
        <files mask="CGenerator.cpp"/>
        <files mask="ErpcLexer.cpp"/>
        <files mask="Generator.cpp"/>
        <files mask="HexValues.cpp"/>
        <files mask="InterfaceDefinition.cpp"/>
        <files mask="Logging.cpp"/>
        <files mask="ParseErrors.cpp"/>
        <files mask="PythonGenerator.cpp"/>
        <files mask="SearchPath.cpp"/>
        <files mask="SymbolScanner.cpp"/>
        <files mask="Token.cpp"/>
        <files mask="UniqueIdChecker.cpp"/>
        <files mask="erpcgen.cpp"/>
        <files mask="format_string.cpp"/>
        <files mask="options.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpcgen/src" target_path="erpc/aux" type="c_include">
        <files mask="AstNode.h"/>
        <files mask="AstWalker.h"/>
        <files mask="CGenerator.h"/>
        <files mask="ErpcLexer.h"/>
        <files mask="Generator.h"/>
        <files mask="HexValues.h"/>
        <files mask="InterfaceDefinition.h"/>
        <files mask="Logging.h"/>
        <files mask="ParseErrors.h"/>
        <files mask="PythonGenerator.h"/>
        <files mask="SearchPath.h"/>
        <files mask="SymbolScanner.h"/>
        <files mask="Token.h"/>
        <files mask="UniqueIdChecker.h"/>
        <files mask="Value.h"/>
        <files mask="annotations.h"/>
        <files mask="format_string.h"/>
        <files mask="options.h"/>
        <files mask="os_config.h"/>
        <files mask="smart_ptr.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpcgen/src/cpptemplate" target_path="erpc/aux" type="doc">
        <files mask="LICENSE.txt"/>
      </source>
      <source path="middleware/multicore/erpc/erpcgen/src/cpptemplate" target_path="erpc/aux" type="other">
        <files mask="README.rst"/>
      </source>
      <source path="middleware/multicore/erpc/erpcgen/src/cpptemplate" target_path="erpc/aux" type="src">
        <files mask="cpptempl.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpcgen/src/cpptemplate" target_path="erpc/aux" type="c_include">
        <files mask="cpptempl.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpcgen/src" target_path="erpc/aux" type="other">
        <files mask="erpcgen_lexer.l"/>
        <files mask="erpcgen_parser.y"/>
      </source>
      <source path="middleware/multicore/erpc/erpcgen/src/templates" target_path="erpc/aux" type="other">
        <files mask="c_client_source.template"/>
        <files mask="c_coders.template"/>
        <files mask="c_common_functions.template"/>
        <files mask="c_common_header.template"/>
        <files mask="c_crc.template"/>
        <files mask="c_server_header.template"/>
        <files mask="c_server_source.template"/>
        <files mask="py_client.template"/>
        <files mask="py_coders.template"/>
        <files mask="py_common.template"/>
        <files mask="py_global_init.template"/>
        <files mask="py_init.template"/>
        <files mask="py_interface.template"/>
        <files mask="py_server.template"/>
      </source>
      <source path="middleware/multicore/erpc/erpcgen/src/types" target_path="erpc/aux" type="c_include">
        <files mask="AliasType.h"/>
        <files mask="Annotation.h"/>
        <files mask="ArrayType.h"/>
        <files mask="BuiltinType.h"/>
        <files mask="ConstType.h"/>
        <files mask="DataType.h"/>
        <files mask="EnumMember.h"/>
        <files mask="EnumType.h"/>
        <files mask="Function.h"/>
        <files mask="FunctionType.h"/>
        <files mask="Group.h"/>
        <files mask="Interface.h"/>
        <files mask="ListType.h"/>
        <files mask="Program.h"/>
        <files mask="StructMember.h"/>
        <files mask="StructType.h"/>
        <files mask="Symbol.h"/>
        <files mask="SymbolScope.h"/>
        <files mask="UnionCase.h"/>
        <files mask="UnionType.h"/>
        <files mask="VoidType.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpcgen/src/types" target_path="erpc/aux" type="src">
        <files mask="Type.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpcsniffer" target_path="erpc/aux" type="other">
        <files mask="Makefile"/>
      </source>
      <source path="middleware/multicore/erpc/erpcsniffer" target_path="erpc/aux" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source path="middleware/multicore/erpc/erpcsniffer/src" target_path="erpc/aux" type="src">
        <files mask="Sniffer.cpp"/>
        <files mask="erpcsniffer.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpcsniffer/src" target_path="erpc/aux" type="c_include">
        <files mask="Sniffer.h"/>
        <files mask="erpc_config.h"/>
      </source>
      <source path="middleware/multicore/erpc/mk" target_path="erpc/aux" type="script">
        <files mask="common.mk"/>
        <files mask="erpc_common.mk"/>
        <files mask="flags.mk"/>
        <files mask="paths.mk"/>
        <files mask="subdirs.mk"/>
        <files mask="targets.mk"/>
      </source>
      <source path="middleware/multicore/erpc/utilities" target_path="erpc/aux" type="doc">
        <files mask="README.txt"/>
      </source>
      <source path="middleware/multicore/erpc/utilities/styles/NOTEPADpp" target_path="erpc/aux" type="xml">
        <files mask="IDl_deep_black.xml"/>
        <files mask="IDl_default.xml"/>
        <files mask="template_deep_black.xml"/>
        <files mask="template_default.xml"/>
      </source>
      <source path="middleware/multicore/erpc/utilities/styles" target_path="erpc/aux" type="doc">
        <files mask="README.txt"/>
      </source>
      <source path="middleware/multicore/tools/erpcgen/Linux_x64" target_path="erpc/aux" type="other">
        <files mask="erpcgen"/>
      </source>
      <source path="middleware/multicore/tools/erpcgen/Linux_x86" target_path="erpc/aux" type="other">
        <files mask="erpcgen"/>
      </source>
      <source path="middleware/multicore/tools/erpcgen/Mac" target_path="erpc/aux" type="other">
        <files mask="erpcgen"/>
      </source>
      <source path="middleware/multicore/tools/erpcgen/Windows" target_path="erpc/aux" type="other">
        <files mask="erpcgen.exe"/>
      </source>
      <source path="middleware/multicore/tools/erpcsniffer/Linux_x64" target_path="erpc/aux" type="other">
        <files mask="erpcsniffer"/>
      </source>
      <source path="middleware/multicore/tools/erpcsniffer/Linux_x86" target_path="erpc/aux" type="other">
        <files mask="erpcsniffer"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.common.K32L3A60" name="eRPC_common" brief="eRPC" version="1.7.2" full_name="Embedded Remote Procedure Call" devices="K32L3A60xxx" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/infra" target_path="erpc/infra" type="src">
        <files mask="erpc_basic_codec.cpp"/>
        <files mask="erpc_crc16.cpp"/>
        <files mask="erpc_message_buffer.cpp"/>
        <files mask="erpc_message_loggers.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/infra" target_path="erpc/infra" type="c_include">
        <files mask="erpc_basic_codec.h"/>
        <files mask="erpc_codec.h"/>
        <files mask="erpc_common.h"/>
        <files mask="erpc_crc16.h"/>
        <files mask="erpc_manually_constructed.h"/>
        <files mask="erpc_message_buffer.h"/>
        <files mask="erpc_message_loggers.h"/>
        <files mask="erpc_transport.h"/>
        <files mask="erpc_version.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="c_include">
        <files mask="erpc_mbf_setup.h"/>
        <files mask="erpc_transport_setup.h"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.doc.K32L3A60" name="eRPC_port_stdlib" brief="erpc_doc" version="1.7.2" full_name="eRPC doc" devices="K32L3A60xxx" dependency="middleware.multicore.erpc.common.K32L3A60" category="Multicore/eRPC" user_visible="false" type="other">
      <source path="middleware/multicore/erpc/docs" target_path="erpc/doc" type="other">
        <files mask="Contributing.md"/>
        <files mask="Getting-Started.md"/>
        <files mask="Home.md"/>
        <files mask="IDL-Reference.md"/>
        <files mask="Porting-Guide.md"/>
        <files mask="_Sidebar.md"/>
        <files mask="eRPC-footprint.md"/>
        <files mask="eRPC-infrastructure.md"/>
        <files mask="erpcgen.md"/>
        <files mask="erpcsniffer.md"/>
      </source>
      <source path="middleware/multicore/erpc/docs/images" target_path="erpc/doc" type="image">
        <files mask="RPCblockDiagram.png"/>
        <files mask="client_side_flowchart.png"/>
        <files mask="eRPC_directory.png"/>
        <files mask="eRPCusing_erpc_server_poll_function.png"/>
        <files mask="eRPCwith_erpc_server_run_function.png"/>
        <files mask="sendingReceivingParameterValue.png"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_arbitrator.K32L3A60" name="eRPC_arbitrator" brief="eRPC_arbitrator" version="1.7.2" full_name="eRPC arbitrator" devices="K32L3A60xxx" dependency="middleware.multicore.erpc.common.K32L3A60" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/infra" target_path="erpc/infra" type="src">
        <files mask="erpc_arbitrated_client_manager.cpp"/>
        <files mask="erpc_client_manager.cpp"/>
        <files mask="erpc_server.cpp"/>
        <files mask="erpc_simple_server.cpp"/>
        <files mask="erpc_transport_arbitrator.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/infra" target_path="erpc/infra" type="c_include">
        <files mask="erpc_arbitrated_client_manager.h"/>
        <files mask="erpc_client_manager.h"/>
        <files mask="erpc_server.h"/>
        <files mask="erpc_simple_server.h"/>
        <files mask="erpc_transport_arbitrator.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/port" target_path="erpc/port" type="c_include">
        <files mask="erpc_threading.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/port" target_path="erpc/port" type="src">
        <files mask="erpc_threading_freertos.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="src">
        <files mask="erpc_arbitrated_client_setup.cpp"/>
        <files mask="erpc_server_setup.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="c_include">
        <files mask="erpc_arbitrated_client_setup.h"/>
        <files mask="erpc_server_setup.h"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_client.K32L3A60" name="eRPC_client" brief="eRPC_client" version="1.7.2" full_name="eRPC client" devices="K32L3A60xxx" dependency="middleware.multicore.erpc.common.K32L3A60" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/infra" target_path="erpc/infra" type="src">
        <files mask="erpc_client_manager.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/infra" target_path="erpc/infra" type="c_include">
        <files mask="erpc_client_manager.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="src">
        <files mask="erpc_client_setup.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="c_include">
        <files mask="erpc_client_setup.h"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_dspi_master_c_wrapper.K32L3A60" name="eRPC_dspi_master_c_wrapper" brief="eRPC_dspi_master_c_wrapper" version="1.7.2" full_name="eRPC DSPI master C Wrapper" devices="K32L3A60xxx" dependency="middleware.multicore.erpc.common.K32L3A60" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="src">
        <files mask="erpc_setup_dspi_master.cpp"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_dspi_master_transport.K32L3A60" name="eRPC_dspi_master_transport" brief="eRPC_dspi_master_transport" version="1.7.2" full_name="eRPC DSPI master transport layer" devices="K32L3A60xxx" dependency="middleware.multicore.erpc.common.K32L3A60" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/infra" target_path="erpc/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/infra" target_path="erpc/infra" type="c_include">
        <files mask="erpc_framed_transport.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/transports" target_path="erpc/transports" type="src">
        <files mask="erpc_dspi_master_transport.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/transports" target_path="erpc/transports" type="c_include">
        <files mask="erpc_dspi_master_transport.h"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_dspi_slave_c_wrapper.K32L3A60" name="eRPC_dspi_slave_c_wrapper" brief="eRPC_dspi_slave_c_wrapper" version="1.7.2" full_name="eRPC DSPI slave C Wrapper" devices="K32L3A60xxx" dependency="middleware.multicore.erpc.common.K32L3A60" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="src">
        <files mask="erpc_setup_dspi_slave.cpp"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_dspi_slave_transport.K32L3A60" name="eRPC_dspi_slave_transport" brief="eRPC_dspi_slave_transport" version="1.7.2" full_name="eRPC DSPI slave transport layer" devices="K32L3A60xxx" dependency="middleware.multicore.erpc.common.K32L3A60" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/infra" target_path="erpc/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/infra" target_path="erpc/infra" type="c_include">
        <files mask="erpc_framed_transport.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/transports" target_path="erpc/transports" type="src">
        <files mask="erpc_dspi_slave_transport.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/transports" target_path="erpc/transports" type="c_include">
        <files mask="erpc_dspi_slave_transport.h"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_mu_c_wrapper.K32L3A60" name="eRPC_mu_c_wrapper" brief="eRPC_mu_c_wrapper" version="1.7.2" full_name="eRPC Messaging Unit C Wrapper" devices="K32L3A60xxx" dependency="middleware.multicore.erpc.common.K32L3A60" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="src">
        <files mask="erpc_setup_mu.cpp"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_mu_rtos_transport.K32L3A60" name="eRPC_mu_rtos_transport" brief="eRPC_mu_rtos_transport" version="1.7.2" full_name="eRPC MU RTOS transport layer" devices="K32L3A60xxx" dependency="middleware.multicore.erpc.common.K32L3A60" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/port" target_path="erpc/port" type="c_include">
        <files mask="erpc_threading.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/port" target_path="erpc/port" type="src">
        <files mask="erpc_threading_freertos.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/transports" target_path="erpc/transports" type="src">
        <files mask="erpc_mu_transport.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/transports" target_path="erpc/transports" type="c_include">
        <files mask="erpc_mu_transport.h"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_mu_transport.K32L3A60" name="eRPC_mu_transport" brief="eRPC_mu_transport" version="1.7.2" full_name="eRPC MU transport layer" devices="K32L3A60xxx" dependency="middleware.multicore.erpc.common.K32L3A60" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/transports" target_path="erpc/transports" type="src">
        <files mask="erpc_mu_transport.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/transports" target_path="erpc/transports" type="c_include">
        <files mask="erpc_mu_transport.h"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_port_freertos.K32L3A60" name="eRPC_port_freertos" brief="eRPC_port_freertos" version="1.7.2" full_name="eRPC FreeRTOS port layer" devices="K32L3A60xxx" dependency="middleware.multicore.erpc.common.K32L3A60" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/port" target_path="erpc/port" type="c_include">
        <files mask="erpc_config_internal.h"/>
        <files mask="erpc_port.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/port" target_path="erpc/port" type="src">
        <files mask="erpc_port_freertos.cpp"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_port_stdlib.K32L3A60" name="eRPC_port_stdlib" brief="eRPC_port_stdlib" version="1.7.2" full_name="eRPC stdlib port layer" devices="K32L3A60xxx" dependency="middleware.multicore.erpc.common.K32L3A60" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/port" target_path="erpc/port" type="c_include">
        <files mask="erpc_config_internal.h"/>
        <files mask="erpc_port.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/port" target_path="erpc/port" type="src">
        <files mask="erpc_port_stdlib.cpp"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_lite_master_c_wrapper.K32L3A60" name="eRPC_rpmsg_lite_master_c_wrapper" brief="eRPC_rpmsg_lite_master_c_wrapper" version="1.7.2" full_name="eRPC RPMsg-Lite master C Wrapper" devices="K32L3A60xxx" dependency="middleware.multicore.erpc.common.K32L3A60" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="src">
        <files mask="erpc_setup_rpmsg_lite_master.cpp"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_lite_remote_c_wrapper.K32L3A60" name="eRPC_rpmsg_lite_remote_c_wrapper" brief="eRPC_rpmsg_lite_remote_c_wrapper" version="1.7.2" full_name="eRPC RPMsg-Lite remote C Wrapper" devices="K32L3A60xxx" dependency="middleware.multicore.erpc.common.K32L3A60" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="src">
        <files mask="erpc_setup_rpmsg_lite_remote.cpp"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_lite_rtos_master_c_wrapper.K32L3A60" name="eRPC_rpmsg_lite_rtos_master_c_wrapper" brief="eRPC_rpmsg_lite_rtos_master_c_wrapper" version="1.7.2" full_name="eRPC RPMsg-Lite RTOS master C Wrapper" devices="K32L3A60xxx" dependency="middleware.multicore.erpc.common.K32L3A60" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="src">
        <files mask="erpc_setup_rpmsg_lite_rtos_master.cpp"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_lite_rtos_remote_c_wrapper.K32L3A60" name="eRPC_rpmsg_lite_rtos_remote_c_wrapper" brief="eRPC_rpmsg_lite_rtos_remote_c_wrapper" version="1.7.2" full_name="eRPC RPMsg-Lite RTOS remote C Wrapper" devices="K32L3A60xxx" dependency="middleware.multicore.erpc.common.K32L3A60" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="src">
        <files mask="erpc_setup_rpmsg_lite_rtos_remote.cpp"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_lite_rtos_transport.K32L3A60" name="eRPC_rpmsg_lite_rtos_transport" brief="eRPC_rpmsg_lite_rtos_transport" version="1.7.2" full_name="eRPC RPMsg-Lite RTOS transport layer" devices="K32L3A60xxx" dependency="middleware.multicore.erpc.common.K32L3A60" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="src">
        <files mask="erpc_setup_mbf_rpmsg.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/transports" target_path="erpc/transports" type="c_include">
        <files mask="erpc_rpmsg_lite_base_transport.h"/>
        <files mask="erpc_rpmsg_lite_rtos_transport.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/transports" target_path="erpc/transports" type="src">
        <files mask="erpc_rpmsg_lite_rtos_transport.cpp"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_lite_transport.K32L3A60" name="eRPC_rpmsg_lite_transport" brief="eRPC_rpmsg_lite_transport" version="1.7.2" full_name="eRPC RPMsg-Lite transport layer" devices="K32L3A60xxx" dependency="middleware.multicore.erpc.common.K32L3A60" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/infra" target_path="erpc/infra" type="c_include">
        <files mask="erpc_static_queue.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="src">
        <files mask="erpc_setup_mbf_rpmsg.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/transports" target_path="erpc/transports" type="c_include">
        <files mask="erpc_rpmsg_lite_base_transport.h"/>
        <files mask="erpc_rpmsg_lite_transport.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/transports" target_path="erpc/transports" type="src">
        <files mask="erpc_rpmsg_lite_transport.cpp"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_tty_rtos_remote_c_wrapper.K32L3A60" name="eRPC_rpmsg_tty_rtos_remote_c_wrapper" brief="eRPC_rpmsg_tty_rtos_remote_c_wrapper" version="1.7.2" full_name="eRPC RPMsg-Lite remote TTY RTOS C Wrapper" devices="K32L3A60xxx" dependency="middleware.multicore.erpc.common.K32L3A60" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="src">
        <files mask="erpc_setup_rpmsg_tty_rtos_remote.cpp"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_tty_rtos_transport.K32L3A60" name="eRPC_rpmsg_tty_rtos_transport" brief="eRPC_rpmsg_tty_rtos_transport" version="1.7.2" full_name="eRPC RPMsg-Lite TTY RTOS transport layer" devices="K32L3A60xxx" dependency="middleware.multicore.erpc.common.K32L3A60" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/port" target_path="erpc/port" type="c_include">
        <files mask="erpc_threading.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/port" target_path="erpc/port" type="src">
        <files mask="erpc_threading_freertos.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="src">
        <files mask="erpc_setup_mbf_rpmsg_tty.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/transports" target_path="erpc/transports" type="c_include">
        <files mask="erpc_rpmsg_lite_base_transport.h"/>
        <files mask="erpc_rpmsg_tty_rtos_transport.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/transports" target_path="erpc/transports" type="src">
        <files mask="erpc_rpmsg_tty_rtos_transport.cpp"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_server.K32L3A60" name="eRPC_server" brief="eRPC_server" version="1.7.2" full_name="eRPC server" devices="K32L3A60xxx" dependency="middleware.multicore.erpc.common.K32L3A60" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/infra" target_path="erpc/infra" type="src">
        <files mask="erpc_server.cpp"/>
        <files mask="erpc_simple_server.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/infra" target_path="erpc/infra" type="c_include">
        <files mask="erpc_server.h"/>
        <files mask="erpc_simple_server.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="src">
        <files mask="erpc_server_setup.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="c_include">
        <files mask="erpc_server_setup.h"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_spi_master_c_wrapper.K32L3A60" name="eRPC_spi_master_c_wrapper" brief="eRPC_spi_master_c_wrapper" version="1.7.2" full_name="eRPC SPI master C Wrapper" devices="K32L3A60xxx" dependency="middleware.multicore.erpc.common.K32L3A60" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="src">
        <files mask="erpc_setup_spi_master.cpp"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_spi_master_transport.K32L3A60" name="eRPC_spi_master_transport" brief="eRPC_spi_master_transport" version="1.7.2" full_name="eRPC SPI master transport layer" devices="K32L3A60xxx" dependency="middleware.multicore.erpc.common.K32L3A60" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/infra" target_path="erpc/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/infra" target_path="erpc/infra" type="c_include">
        <files mask="erpc_framed_transport.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/transports" target_path="erpc/transports" type="src">
        <files mask="erpc_spi_master_transport.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/transports" target_path="erpc/transports" type="c_include">
        <files mask="erpc_spi_master_transport.h"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_spi_slave_c_wrapper.K32L3A60" name="eRPC_spi_slave_c_wrapper" brief="eRPC_spi_slave_c_wrapper" version="1.7.2" full_name="eRPC SPI slave C Wrapper" devices="K32L3A60xxx" dependency="middleware.multicore.erpc.common.K32L3A60" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="src">
        <files mask="erpc_setup_spi_slave.cpp"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_spi_slave_transport.K32L3A60" name="eRPC_spi_slave_transport" brief="eRPC_spi_slave_transport" version="1.7.2" full_name="eRPC SPI slave transport layer" devices="K32L3A60xxx" dependency="middleware.multicore.erpc.common.K32L3A60" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/infra" target_path="erpc/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/infra" target_path="erpc/infra" type="c_include">
        <files mask="erpc_framed_transport.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/transports" target_path="erpc/transports" type="src">
        <files mask="erpc_spi_slave_transport.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/transports" target_path="erpc/transports" type="c_include">
        <files mask="erpc_spi_slave_transport.h"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_uart_cmsis_transport.K32L3A60" name="eRPC_uart_cmsis_transport" brief="eRPC_uart_cmsis_transport" version="1.7.2" full_name="eRPC UART CMSIS transport layer" devices="K32L3A60xxx" dependency="middleware.multicore.erpc.common.K32L3A60" category="Multicore/eRPC" user_visible="true" type="other">
      <source path="middleware/multicore/erpc/erpc_c/infra" target_path="erpc/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/infra" target_path="erpc/infra" type="c_include">
        <files mask="erpc_framed_transport.h"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/setup" target_path="erpc/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
        <files mask="erpc_setup_uart_cmsis.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/transports" target_path="erpc/transports" type="src">
        <files mask="erpc_uart_cmsis_transport.cpp"/>
      </source>
      <source path="middleware/multicore/erpc/erpc_c/transports" target_path="erpc/transports" type="c_include">
        <files mask="erpc_uart_cmsis_transport.h"/>
      </source>
    </component>
    <component id="middleware.multicore.mcmgr.K32L3A60" name="mcmgr" brief="MCMgr" version="4.0.3" full_name="Multicore Manager" devices="K32L3A60xxx" category="Multicore/MCMgr" user_visible="true" type="other">
      <source path="middleware/multicore/mcmgr/doc" target_path="mcmgr/doc" type="image">
        <files mask="MCMgrDataExchangeDiagram.png"/>
        <files mask="arrowdown.png"/>
        <files mask="arrowright.png"/>
        <files mask="bc_s.png"/>
        <files mask="bdwn.png"/>
        <files mask="closed.png"/>
        <files mask="doc.png"/>
        <files mask="doxygen.png"/>
        <files mask="folderclosed.png"/>
        <files mask="folderopen.png"/>
        <files mask="mcsdk.png"/>
        <files mask="nav_f.png"/>
        <files mask="nav_g.png"/>
        <files mask="nav_h.png"/>
        <files mask="nxp_logo_small.png"/>
        <files mask="open.png"/>
        <files mask="splitbar.png"/>
        <files mask="sync_off.png"/>
        <files mask="sync_on.png"/>
        <files mask="tab_a.png"/>
        <files mask="tab_b.png"/>
        <files mask="tab_h.png"/>
        <files mask="tab_s.png"/>
      </source>
      <source path="middleware/multicore/mcmgr/doc" target_path="mcmgr/doc" type="doc">
        <files mask="customdoxygen.css"/>
        <files mask="dir_68267d1309a1af8e8297ef4c3efbcdba.html"/>
        <files mask="doxygen.css"/>
        <files mask="group__mcmgr.html"/>
        <files mask="index.html"/>
        <files mask="mcmgr_8h_source.html"/>
        <files mask="modules.html"/>
        <files mask="navtree.css"/>
        <files mask="tabs.css"/>
      </source>
      <source path="middleware/multicore/mcmgr/doc" target_path="mcmgr/doc" type="script">
        <files mask="dynsections.js"/>
        <files mask="group__mcmgr.js"/>
        <files mask="jquery.js"/>
        <files mask="modules.js"/>
        <files mask="navtree.js"/>
        <files mask="navtreedata.js"/>
        <files mask="navtreeindex0.js"/>
        <files mask="resize.js"/>
      </source>
      <source path="middleware/multicore/mcmgr/doc/search" target_path="mcmgr/doc" type="doc">
        <files mask="all_0.html"/>
        <files mask="all_1.html"/>
        <files mask="all_2.html"/>
        <files mask="enums_0.html"/>
        <files mask="enums_1.html"/>
        <files mask="enumvalues_0.html"/>
        <files mask="functions_0.html"/>
        <files mask="groups_0.html"/>
        <files mask="nomatches.html"/>
        <files mask="pages_0.html"/>
        <files mask="search.css"/>
        <files mask="typedefs_0.html"/>
      </source>
      <source path="middleware/multicore/mcmgr/doc/search" target_path="mcmgr/doc" type="script">
        <files mask="all_0.js"/>
        <files mask="all_1.js"/>
        <files mask="all_2.js"/>
        <files mask="enums_0.js"/>
        <files mask="enums_1.js"/>
        <files mask="enumvalues_0.js"/>
        <files mask="functions_0.js"/>
        <files mask="groups_0.js"/>
        <files mask="pages_0.js"/>
        <files mask="search.js"/>
        <files mask="searchdata.js"/>
        <files mask="typedefs_0.js"/>
      </source>
      <source path="middleware/multicore/mcmgr/doc/search" target_path="mcmgr/doc" type="image">
        <files mask="close.png"/>
        <files mask="mag_sel.png"/>
        <files mask="search_l.png"/>
        <files mask="search_m.png"/>
        <files mask="search_r.png"/>
      </source>
      <source path="middleware/multicore/mcmgr" target_path="mcmgr" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source path="middleware/multicore/mcmgr/src" target_path="mcmgr" type="src">
        <files mask="mcmgr.c"/>
      </source>
      <source path="middleware/multicore/mcmgr/src" target_path="mcmgr" type="c_include">
        <files mask="mcmgr.h"/>
        <files mask="mcmgr_internal_core_api.h"/>
      </source>
    </component>
    <component id="middleware.multicore.mcmgr.k32l3a6.K32L3A60" name="mcmgr_k32l3a6" brief="MCMgr_frdmk32l3a6_porting_layer" version="4.0.3" full_name="Multicore Manager porting layer for frdmk32l3a6 board" devices="K32L3A60xxx" dependency="middleware.multicore.mcmgr.K32L3A60 platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60 platform.drivers.mu.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="Multicore/MCMgr" user_visible="true" type="middleware">
      <source path="middleware/multicore/mcmgr/src" target_path="mcmgr" type="src">
        <files mask="mcmgr_internal_core_api_k32l3a6.c"/>
        <files mask="mcmgr_mu_internal.c"/>
      </source>
    </component>
    <component id="middleware.multicore.rpmsg_lite.K32L3A60" name="rpmsg_lite" brief="RPMsg-Lite" version="2.2.0" full_name="Remote Procedure Messaging Lite library" devices="K32L3A60xxx" category="Multicore/RPMsg-Lite" user_visible="false" type="middleware">
      <source path="middleware/multicore/rpmsg_lite/doc" target_path="rpmsg_lite/doc" type="image">
        <files mask="arrowdown.png"/>
        <files mask="arrowright.png"/>
        <files mask="bc_s.png"/>
        <files mask="bdwn.png"/>
        <files mask="closed.png"/>
        <files mask="doc.png"/>
        <files mask="doxygen.png"/>
        <files mask="folderclosed.png"/>
        <files mask="folderopen.png"/>
        <files mask="nav_f.png"/>
        <files mask="nav_g.png"/>
        <files mask="nav_h.png"/>
        <files mask="nxp_logo_small.png"/>
        <files mask="open.png"/>
        <files mask="rpmsg_isoosi.png"/>
        <files mask="rpmsg_lite_arch.png"/>
        <files mask="rpmsg_lite_send_receive.png"/>
        <files mask="splitbar.png"/>
        <files mask="sync_off.png"/>
        <files mask="sync_on.png"/>
        <files mask="tab_a.png"/>
        <files mask="tab_b.png"/>
        <files mask="tab_h.png"/>
        <files mask="tab_s.png"/>
      </source>
      <source path="middleware/multicore/rpmsg_lite/doc" target_path="rpmsg_lite/doc" type="doc">
        <files mask="customdoxygen.css"/>
        <files mask="dir_5a30104352ef4255dc24354b02eb2d20.html"/>
        <files mask="dir_97aefd0d527b934f1d99a682da8fe6a9.html"/>
        <files mask="doxygen.css"/>
        <files mask="group__config.html"/>
        <files mask="group__rpmsg__lite.html"/>
        <files mask="group__rpmsg__ns.html"/>
        <files mask="group__rpmsg__queue.html"/>
        <files mask="index.html"/>
        <files mask="modules.html"/>
        <files mask="navtree.css"/>
        <files mask="rpmsg__default__config_8h.html"/>
        <files mask="rpmsg__default__config_8h_source.html"/>
        <files mask="rpmsg__lite_8h_source.html"/>
        <files mask="rpmsg__ns_8h_source.html"/>
        <files mask="rpmsg__queue_8h_source.html"/>
        <files mask="tabs.css"/>
      </source>
      <source path="middleware/multicore/rpmsg_lite/doc" target_path="rpmsg_lite/doc" type="script">
        <files mask="dynsections.js"/>
        <files mask="group__config.js"/>
        <files mask="group__rpmsg__lite.js"/>
        <files mask="group__rpmsg__ns.js"/>
        <files mask="group__rpmsg__queue.js"/>
        <files mask="jquery.js"/>
        <files mask="modules.js"/>
        <files mask="navtree.js"/>
        <files mask="navtreedata.js"/>
        <files mask="navtreeindex0.js"/>
        <files mask="resize.js"/>
      </source>
      <source path="middleware/multicore/rpmsg_lite/doc/search" target_path="rpmsg_lite/doc" type="doc">
        <files mask="all_0.html"/>
        <files mask="all_1.html"/>
        <files mask="all_2.html"/>
        <files mask="all_3.html"/>
        <files mask="all_4.html"/>
        <files mask="all_5.html"/>
        <files mask="all_6.html"/>
        <files mask="all_7.html"/>
        <files mask="classes_0.html"/>
        <files mask="files_0.html"/>
        <files mask="functions_0.html"/>
        <files mask="groups_0.html"/>
        <files mask="nomatches.html"/>
        <files mask="pages_0.html"/>
        <files mask="search.css"/>
        <files mask="typedefs_0.html"/>
        <files mask="variables_0.html"/>
        <files mask="variables_1.html"/>
        <files mask="variables_2.html"/>
        <files mask="variables_3.html"/>
        <files mask="variables_4.html"/>
        <files mask="variables_5.html"/>
        <files mask="variables_6.html"/>
        <files mask="variables_7.html"/>
      </source>
      <source path="middleware/multicore/rpmsg_lite/doc/search" target_path="rpmsg_lite/doc" type="script">
        <files mask="all_0.js"/>
        <files mask="all_1.js"/>
        <files mask="all_2.js"/>
        <files mask="all_3.js"/>
        <files mask="all_4.js"/>
        <files mask="all_5.js"/>
        <files mask="all_6.js"/>
        <files mask="all_7.js"/>
        <files mask="classes_0.js"/>
        <files mask="files_0.js"/>
        <files mask="functions_0.js"/>
        <files mask="groups_0.js"/>
        <files mask="pages_0.js"/>
        <files mask="search.js"/>
        <files mask="searchdata.js"/>
        <files mask="typedefs_0.js"/>
        <files mask="variables_0.js"/>
        <files mask="variables_1.js"/>
        <files mask="variables_2.js"/>
        <files mask="variables_3.js"/>
        <files mask="variables_4.js"/>
        <files mask="variables_5.js"/>
        <files mask="variables_6.js"/>
        <files mask="variables_7.js"/>
      </source>
      <source path="middleware/multicore/rpmsg_lite/doc/search" target_path="rpmsg_lite/doc" type="image">
        <files mask="close.png"/>
        <files mask="mag_sel.png"/>
        <files mask="search_l.png"/>
        <files mask="search_m.png"/>
        <files mask="search_r.png"/>
      </source>
      <source path="middleware/multicore/rpmsg_lite/lib/common" target_path="rpmsg_lite" type="src">
        <files mask="llist.c"/>
      </source>
      <source path="middleware/multicore/rpmsg_lite/lib/include" target_path="rpmsg_lite" type="c_include">
        <files mask="llist.h"/>
        <files mask="rpmsg_compiler.h"/>
        <files mask="rpmsg_default_config.h"/>
        <files mask="rpmsg_lite.h"/>
        <files mask="rpmsg_ns.h"/>
        <files mask="virtio_ring.h"/>
        <files mask="virtqueue.h"/>
      </source>
      <source path="middleware/multicore/rpmsg_lite/lib/rpmsg_lite" target_path="rpmsg_lite" type="src">
        <files mask="rpmsg_lite.c"/>
        <files mask="rpmsg_ns.c"/>
      </source>
      <source path="middleware/multicore/rpmsg_lite/lib/virtio" target_path="rpmsg_lite" type="src">
        <files mask="virtqueue.c"/>
      </source>
      <source path="middleware/multicore/rpmsg_lite" target_path="rpmsg_lite" type="doc">
        <files mask="readme.txt"/>
      </source>
    </component>
    <component id="middleware.multicore.rpmsg_lite.bm.K32L3A60" name="rpmsg_lite_bm_env" brief="RPMsg-Lite_baremetal_env" version="2.2.0" full_name="RPMsg-Lite baremetal environment layer" devices="K32L3A60xxx" dependency="middleware.multicore.rpmsg_lite.K32L3A60" category="Multicore/RPMsg-Lite BM" user_visible="false" type="middleware">
      <source path="middleware/multicore/rpmsg_lite/lib/include" target_path="rpmsg_lite/env/bm" type="c_include">
        <files mask="rpmsg_env.h"/>
      </source>
      <source path="middleware/multicore/rpmsg_lite/lib/rpmsg_lite/porting/environment" target_path="rpmsg_lite/env/bm" type="src">
        <files mask="rpmsg_env_bm.c"/>
      </source>
    </component>
    <component id="middleware.multicore.rpmsg_lite.bm.config.k32l3a6.K32L3A60" name="rpmsg_lite_bm_config" brief="RPMsg-Lite_bm_config" version="2.2.0" full_name="RPMsg-Lite BM configuration" devices="K32L3A60xxx" dependency="middleware.multicore.mcmgr.K32L3A60 middleware.multicore.mcmgr.k32l3a6.K32L3A60 middleware.multicore.rpmsg_lite.K32L3A60 middleware.multicore.rpmsg_lite.bm.K32L3A60 platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60 platform.drivers.mu.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="Multicore/RPMsg-Lite BM" user_visible="true" type="middleware">
      <source path="middleware/multicore/rpmsg_lite/template_application" target_path="source" type="c_include">
        <files mask="rpmsg_config.h"/>
      </source>
    </component>
    <component id="middleware.multicore.rpmsg_lite.freertos.K32L3A60" name="rpmsg_lite_freertos_env" brief="RPMsg-Lite_freertos_env" version="2.2.0" full_name="RPMsg-Lite FreeRTOS environment layer" devices="K32L3A60xxx" dependency="middleware.multicore.rpmsg_lite.K32L3A60" category="Multicore/RPMsg-Lite FreeRTOS" user_visible="false" type="middleware">
      <source path="middleware/multicore/rpmsg_lite/lib/include" target_path="rpmsg_lite/env/freertos" type="c_include">
        <files mask="rpmsg_env.h"/>
        <files mask="rpmsg_queue.h"/>
      </source>
      <source path="middleware/multicore/rpmsg_lite/lib/rpmsg_lite/porting/environment" target_path="rpmsg_lite/env/freertos" type="src">
        <files mask="rpmsg_env_freertos.c"/>
      </source>
      <source path="middleware/multicore/rpmsg_lite/lib/rpmsg_lite" target_path="rpmsg_lite/env/freertos" type="src">
        <files mask="rpmsg_queue.c"/>
      </source>
    </component>
    <component id="middleware.multicore.rpmsg_lite.freertos.config.k32l3a6.K32L3A60" name="rpmsg_lite_freertos_config" brief="RPMsg-Lite_freertos_config" version="2.2.0" full_name="RPMsg-Lite FreeRTOS configuration" devices="K32L3A60xxx" dependency="middleware.multicore.mcmgr.K32L3A60 middleware.multicore.mcmgr.k32l3a6.K32L3A60 middleware.multicore.rpmsg_lite.K32L3A60 middleware.multicore.rpmsg_lite.freertos.K32L3A60 platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60 platform.drivers.mu.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="Multicore/RPMsg-Lite FreeRTOS" user_visible="true" type="middleware">
      <source path="middleware/multicore/rpmsg_lite/template_application" target_path="source" type="c_include">
        <files mask="rpmsg_config.h"/>
      </source>
    </component>
    <component id="middleware.multicore.rpmsg_lite.k32l3a6_bm.K32L3A60" name="rpmsg_lite_k32l3a6_bm" brief="RPMsg-Lite_frdmk32l3a6_porting_layer" version="2.2.0" full_name="Remote Procedure Messaging Lite porting layer for frdmk32l3a6 board" devices="K32L3A60xxx" dependency="middleware.multicore.rpmsg_lite.K32L3A60 middleware.multicore.rpmsg_lite.bm.K32L3A60" category="Multicore/RPMsg-Lite BM" user_visible="true" type="middleware">
      <source path="middleware/multicore/rpmsg_lite/lib/include/platform/k32l3a6" target_path="rpmsg_lite/porting" type="c_include">
        <files mask="rpmsg_platform.h"/>
      </source>
      <source path="middleware/multicore/rpmsg_lite/lib/rpmsg_lite/porting/platform/k32l3a6" target_path="rpmsg_lite/porting" type="src">
        <files mask="rpmsg_platform.c"/>
      </source>
    </component>
    <component id="middleware.multicore.rpmsg_lite.k32l3a6_freertos.K32L3A60" name="rpmsg_lite_k32l3a6_freertos" brief="RPMsg-Lite_frdmk32l3a6_porting_layer" version="2.2.0" full_name="Remote Procedure Messaging Lite porting layer for frdmk32l3a6 board" devices="K32L3A60xxx" dependency="middleware.amazon_freertos.freertos.K32L3A60 middleware.amazon_freertos.freertos.heap_3.K32L3A60 middleware.multicore.rpmsg_lite.K32L3A60 middleware.multicore.rpmsg_lite.freertos.K32L3A60 middleware.template_application.amazon_freertos.K32L3A60 platform.utilities.misc_utilities.K32L3A60" category="Multicore/RPMsg-Lite FreeRTOS" user_visible="true" type="middleware">
      <source path="middleware/multicore/rpmsg_lite/lib/include/platform/k32l3a6" target_path="rpmsg_lite/porting" type="c_include">
        <files mask="rpmsg_platform.h"/>
      </source>
      <source path="middleware/multicore/rpmsg_lite/lib/rpmsg_lite/porting/platform/k32l3a6" target_path="rpmsg_lite/porting" type="src">
        <files mask="rpmsg_platform.c"/>
      </source>
    </component>
    <component id="middleware.sdmmc.common.K32L3A60" name="common" version="2.2.12" full_name="SDMMC common stack" devices="K32L3A60xxx" category="Memories/SDMMC Stack" user_visible="true" type="middleware">
      <source path="middleware/sdmmc/inc" target_path="sdmmc/inc" type="c_include">
        <files mask="fsl_sdmmc_spec.h"/>
      </source>
    </component>
    <component id="middleware.sdmmc.mmc.K32L3A60" name="mmc" version="2.2.12" full_name="SDMMC mmc stack" devices="K32L3A60xxx" dependency="middleware.sdmmc.common.K32L3A60" category="Memories/SDMMC Stack" user_visible="true" type="middleware">
      <source path="middleware/sdmmc/inc" target_path="sdmmc/inc" type="c_include">
        <files mask="fsl_mmc.h"/>
        <files mask="fsl_sdmmc_common.h"/>
        <files mask="fsl_sdmmc_host.h"/>
      </source>
      <source path="middleware/sdmmc/src" target_path="sdmmc/src" type="src">
        <files mask="fsl_mmc.c"/>
        <files mask="fsl_sdmmc_common.c"/>
      </source>
    </component>
    <component id="middleware.sdmmc.sd.K32L3A60" name="sd" version="2.2.12" full_name="SDMMC sd stack" devices="K32L3A60xxx" dependency="middleware.sdmmc.common.K32L3A60" category="Memories/SDMMC Stack" user_visible="true" type="middleware">
      <source path="middleware/sdmmc/inc" target_path="sdmmc/inc" type="c_include">
        <files mask="fsl_sd.h"/>
        <files mask="fsl_sdmmc_common.h"/>
        <files mask="fsl_sdmmc_host.h"/>
      </source>
      <source path="middleware/sdmmc/src" target_path="sdmmc/src" type="src">
        <files mask="fsl_sd.c"/>
        <files mask="fsl_sdmmc_common.c"/>
      </source>
    </component>
    <component id="middleware.sdmmc.sdio.K32L3A60" name="sdio" version="2.2.12" full_name="SDMMC sdio stack" devices="K32L3A60xxx" dependency="middleware.sdmmc.common.K32L3A60" category="Memories/SDMMC Stack" user_visible="true" type="middleware">
      <source path="middleware/sdmmc/inc" target_path="sdmmc/inc" type="c_include">
        <files mask="fsl_sdio.h"/>
        <files mask="fsl_sdmmc_common.h"/>
        <files mask="fsl_sdmmc_host.h"/>
      </source>
      <source path="middleware/sdmmc/src" target_path="sdmmc/src" type="src">
        <files mask="fsl_sdio.c"/>
        <files mask="fsl_sdmmc_common.c"/>
      </source>
    </component>
    <component id="middleware.sdmmc.usdhcadaptor.freertos.K32L3A60" name="adapter_freertos" version="2.2.12" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60 platform.drivers.usdhc.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="Memories/SDMMC Stack" user_visible="true" type="middleware">
      <source path="middleware/sdmmc/port" target_path="sdmmc/port" type="c_include">
        <files mask="fsl_sdmmc_event.h"/>
      </source>
      <source path="middleware/sdmmc/port/usdhc/freertos" target_path="sdmmc/port" type="src">
        <files mask="fsl_sdmmc_event.c"/>
        <files mask="fsl_sdmmc_host.c"/>
      </source>
    </component>
    <component id="middleware.sdmmc.usdhcadaptor.interrupt.K32L3A60" name="adapter_interrupt" version="2.2.12" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60 platform.drivers.usdhc.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="Memories/SDMMC Stack" user_visible="true" type="middleware">
      <source path="middleware/sdmmc/port" target_path="sdmmc/port" type="c_include">
        <files mask="fsl_sdmmc_event.h"/>
      </source>
      <source path="middleware/sdmmc/port/usdhc/interrupt" target_path="sdmmc/port" type="src">
        <files mask="fsl_sdmmc_event.c"/>
        <files mask="fsl_sdmmc_host.c"/>
      </source>
    </component>
    <component id="middleware.sdmmc.usdhcadaptor.polling.K32L3A60" name="adapter_polling" version="2.2.12" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60 platform.drivers.usdhc.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="Memories/SDMMC Stack" user_visible="true" type="middleware">
      <source path="middleware/sdmmc/port" target_path="sdmmc/port" type="c_include">
        <files mask="fsl_sdmmc_event.h"/>
      </source>
      <source path="middleware/sdmmc/port/usdhc/polling" target_path="sdmmc/port" type="src">
        <files mask="fsl_sdmmc_event.c"/>
        <files mask="fsl_sdmmc_host.c"/>
      </source>
    </component>
    <component id="middleware.template_application.amazon_freertos.K32L3A60" name="Amazon-FreeRTOS" brief="FreeRTOS template application" version="10.2.0" full_name="FreeRTOS template" devices="K32L3A60xxx" dependency="middleware.amazon_freertos.freertos.K32L3A60" category="Operating System/FreeRTOS Operating System" user_visible="true" type="project_template">
      <source exclude="true" path="rtos/amazon-freertos/lib/FreeRTOS/portable/MemMang" target_path="amazon-freertos/freertos/portable" type="other">
        <files mask="ReadMe.url"/>
      </source>
      <source exclude="true" path="rtos/amazon-freertos/lib/FreeRTOS/portable/MemMang" target_path="amazon-freertos/freertos/portable" type="src">
        <files mask="heap_1.c"/>
        <files mask="heap_2.c"/>
        <files mask="heap_3.c"/>
        <files mask="heap_5.c"/>
      </source>
      <source path="rtos/amazon-freertos/lib/FreeRTOS/portable/MemMang" target_path="amazon-freertos/freertos/portable" type="src">
        <files mask="heap_4.c"/>
      </source>
      <source path="rtos/amazon-freertos/template_application/ARM_CM0" target_path="source" type="c_include" device_cores="cm0plus_K32L3A60xxx">
        <files mask="FreeRTOSConfig.h"/>
      </source>
      <source path="rtos/amazon-freertos/template_application/ARM_CM4F" target_path="source" type="c_include" device_cores="cm4_K32L3A60xxx">
        <files mask="FreeRTOSConfig.h"/>
      </source>
    </component>
    <component id="middleware.template_application.mbedtls.K32L3A60" name="mbedtls" brief="mbedtls template" version="2.13.1" full_name="mbedtls template application" devices="K32L3A60xxx" dependency="middleware.mbedtls.K32L3A60" category="Security/mbedTLS library" user_visible="true" type="middleware"/>
    <component id="middleware.usb.device.K32L3A60" name="common driver" version="1.0.0" full_name="USB stack" devices="K32L3A60xxx" user_visible="false" type="middleware">
      <source path="middleware/usb/device" target_path="usb/device/include" type="c_include">
        <files mask="usb_device.h"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source" type="src">
        <files mask="usb_device_dci.c"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source" type="c_include">
        <files mask="usb_device_dci.h"/>
      </source>
    </component>
    <component id="middleware.usb.device_controller_khci.K32L3A60" name="KHCI driver(FS)" version="1.0.0" full_name="USB stack" devices="K32L3A60xxx" dependency="middleware.usb.device.K32L3A60" user_visible="false" type="middleware">
      <source path="middleware/usb/device" target_path="usb/device/source/khci" type="src">
        <files mask="usb_device_khci.c"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source/khci" type="c_include">
        <files mask="usb_device_khci.h"/>
      </source>
      <source path="middleware/usb/include" target_path="usb/include" type="c_include">
        <files mask="usb.h"/>
        <files mask="usb_misc.h"/>
        <files mask="usb_spec.h"/>
      </source>
      <source path="middleware/usb/osa" target_path="osa" type="c_include">
        <files mask="usb_osa.h"/>
      </source>
      <source condition="middleware.baremetal.K32L3A60" path="middleware/usb/osa" target_path="osa" type="src">
        <files mask="usb_osa_bm.c"/>
      </source>
      <source condition="middleware.baremetal.K32L3A60" path="middleware/usb/osa" target_path="osa" type="c_include">
        <files mask="usb_osa_bm.h"/>
      </source>
      <source condition="middleware.amazon_freertos.freertos.K32L3A60" path="middleware/usb/osa" target_path="osa" type="src">
        <files mask="usb_osa_freertos.c"/>
      </source>
      <source condition="middleware.amazon_freertos.freertos.K32L3A60" path="middleware/usb/osa" target_path="osa" type="c_include">
        <files mask="usb_osa_freertos.h"/>
      </source>
    </component>
    <component id="middleware.usb.device_config_template.K32L3A60" name="USB device config template" brief="USB device config template" version="2.2.0" full_name="USB device config template" devices="K32L3A60xxx" category="Board Support/SDK Project Template" user_visible="false" type="project_template">
      <source path="middleware/usb/templates/config" target_path="source/generated" type="c_include">
        <files mask="usb_device_config.h"/>
      </source>
    </component>
    <component id="middleware.usb.device_stack.K32L3A60" name="USB device" brief="USB device stack" version="2.2.0" full_name="USB device stack" devices="K32L3A60xxx" dependency="middleware.usb.device_config_template.K32L3A60 middleware.usb.stack_common.K32L3A60" user_visible="true" type="middleware">
      <source path="middleware/usb/templates/device/class" target_path="usb/device/class" type="src">
        <files mask="usb_device_audio.c"/>
        <files mask="usb_device_ccid.c"/>
        <files mask="usb_device_cdc_acm.c"/>
        <files mask="usb_device_cdc_rndis.c"/>
        <files mask="usb_device_class.c"/>
        <files mask="usb_device_hid.c"/>
        <files mask="usb_device_msc.c"/>
        <files mask="usb_device_msc_ufi.c"/>
        <files mask="usb_device_phdc.c"/>
        <files mask="usb_device_printer.c"/>
        <files mask="usb_device_video.c"/>
      </source>
      <source path="middleware/usb/templates/device/class" target_path="usb/device/class" type="c_include">
        <files mask="usb_device_audio.h"/>
        <files mask="usb_device_ccid.h"/>
        <files mask="usb_device_cdc_acm.h"/>
        <files mask="usb_device_cdc_rndis.h"/>
        <files mask="usb_device_class.h"/>
        <files mask="usb_device_hid.h"/>
        <files mask="usb_device_msc.h"/>
        <files mask="usb_device_msc_ufi.h"/>
        <files mask="usb_device_phdc.h"/>
        <files mask="usb_device_printer.h"/>
        <files mask="usb_device_video.h"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/include" type="c_include">
        <files mask="usb_device.h"/>
      </source>
      <source path="middleware/usb/templates/device" target_path="usb/device/source" type="src">
        <files mask="usb_device_ch9.c"/>
      </source>
      <source path="middleware/usb/templates/device" target_path="usb/device/source" type="c_include">
        <files mask="usb_device_ch9.h"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source" type="src">
        <files mask="usb_device_dci.c"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source" type="c_include">
        <files mask="usb_device_dci.h"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source/ehci" type="src">
        <files mask="usb_device_ehci.c"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source/ehci" type="c_include">
        <files mask="usb_device_ehci.h"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source/khci" type="src">
        <files mask="usb_device_khci.c"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source/khci" type="c_include">
        <files mask="usb_device_khci.h"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source/lpcip3511" type="src">
        <files mask="usb_device_lpcip3511.c"/>
      </source>
      <source path="middleware/usb/device" target_path="usb/device/source/lpcip3511" type="c_include">
        <files mask="usb_device_lpcip3511.h"/>
      </source>
    </component>
    <component id="middleware.usb.stack_common.K32L3A60" name="USB common" brief="USB common" version="2.2.0" full_name="USB common" devices="K32L3A60xxx" user_visible="true" type="middleware">
      <source path="middleware/usb/include" target_path="usb/include" type="c_include">
        <files mask="usb.h"/>
        <files mask="usb_misc.h"/>
        <files mask="usb_spec.h"/>
      </source>
      <source path="middleware/usb/osa" target_path="osa" type="c_include">
        <files mask="usb_osa.h"/>
      </source>
      <source condition="middleware.baremetal.K32L3A60" path="middleware/usb/osa" target_path="osa" type="src">
        <files mask="usb_osa_bm.c"/>
      </source>
      <source condition="middleware.baremetal.K32L3A60" path="middleware/usb/osa" target_path="osa" type="c_include">
        <files mask="usb_osa_bm.h"/>
      </source>
      <source condition="middleware.amazon_freertos.freertos.K32L3A60" path="middleware/usb/osa" target_path="osa" type="src">
        <files mask="usb_osa_freertos.c"/>
      </source>
      <source condition="middleware.amazon_freertos.freertos.K32L3A60" path="middleware/usb/osa" target_path="osa" type="c_include">
        <files mask="usb_osa_freertos.h"/>
      </source>
      <source path="middleware/usb/phy" target_path="usb/phy" type="src">
        <files mask="usb_phy.c"/>
      </source>
      <source path="middleware/usb/phy" target_path="usb/phy" type="c_include">
        <files mask="usb_phy.h"/>
      </source>
    </component>
    <component id="middleware.wifi_qca.K32L3A60" name="wifi_qca" version="2.0.0" revision="1" full_name="QCA400x WiFi" devices="K32L3A60xxx" category="WiFi/QCA400x WiFi" user_visible="true" type="middleware">
      <source path="middleware/wifi_qca" target_path="wifi_qca/include" type="c_include">
        <files mask="atheros_stack_offload.h"/>
        <files mask="atheros_wifi.h"/>
        <files mask="atheros_wifi_api.h"/>
        <files mask="atheros_wifi_internal.h"/>
        <files mask="qcom_api.h"/>
      </source>
      <source path="middleware/wifi_qca/common_src/api_interface" target_path="wifi_qca/common_src/api_interface" type="src">
        <files mask="api_init.c"/>
        <files mask="api_ioctl.c"/>
        <files mask="api_txrx.c"/>
        <files mask="api_wmi_rx.c"/>
      </source>
      <source path="middleware/wifi_qca/common_src/bmi" target_path="wifi_qca/common_src/bmi" type="src">
        <files mask="bmi.c"/>
      </source>
      <source path="middleware/wifi_qca/common_src/driver" target_path="wifi_qca/common_src/driver" type="src">
        <files mask="driver_diag.c"/>
        <files mask="driver_init.c"/>
        <files mask="driver_main.c"/>
        <files mask="driver_netbuf.c"/>
        <files mask="driver_txrx.c"/>
      </source>
      <source path="middleware/wifi_qca/common_src/hcd" target_path="wifi_qca/common_src/hcd" type="c_include">
        <files mask="hcd_api.h"/>
      </source>
      <source path="middleware/wifi_qca/common_src/hcd" target_path="wifi_qca/common_src/htc" type="src">
        <files mask="spi_hcd.c"/>
      </source>
      <source path="middleware/wifi_qca/common_src/htc" target_path="wifi_qca/common_src/htc" type="src">
        <files mask="htc.c"/>
      </source>
      <source path="middleware/wifi_qca/common_src/hw_interface" target_path="wifi_qca/common_src/hw_interface" type="src">
        <files mask="hw_api.c"/>
      </source>
      <source path="middleware/wifi_qca/common_src/include" target_path="wifi_qca/common_src/include" type="c_include">
        <files mask="a_debug.h"/>
        <files mask="a_drv.h"/>
        <files mask="a_drv_api.h"/>
        <files mask="aggr_recv_api.h"/>
        <files mask="bmi.h"/>
        <files mask="common_api.h"/>
        <files mask="dbglog_api.h"/>
        <files mask="driver_cxt.h"/>
        <files mask="dset.h"/>
        <files mask="dset_api.h"/>
        <files mask="hif_internal.h"/>
        <files mask="htc_api.h"/>
        <files mask="ieee80211.h"/>
        <files mask="netbuf.h"/>
        <files mask="spi_hcd_if.h"/>
        <files mask="wlan_api.h"/>
        <files mask="wmi_api.h"/>
      </source>
      <source path="middleware/wifi_qca/common_src/qapi" target_path="wifi_qca/common_src/qapi" type="src">
        <files mask="qcom_api.c"/>
        <files mask="qcom_dns.c"/>
        <files mask="qcom_legacy.c"/>
      </source>
      <source path="middleware/wifi_qca/common_src/reorder" target_path="wifi_qca/common_src/reorder" type="src">
        <files mask="rcv_aggr.c"/>
      </source>
      <source path="middleware/wifi_qca/common_src/stack_common" target_path="wifi_qca/common_src/qapi" type="src">
        <files mask="api_stack_offload.c"/>
      </source>
      <source path="middleware/wifi_qca/common_src/stack_common" target_path="wifi_qca/common_src/stack_common" type="c_include">
        <files mask="common_stack_offload.h"/>
      </source>
      <source path="middleware/wifi_qca/common_src/storerecall" target_path="wifi_qca/common_src/storerecall" type="src">
        <files mask="dset.c"/>
        <files mask="storerecall.c"/>
      </source>
      <source path="middleware/wifi_qca/common_src/storerecall" target_path="wifi_qca/common_src/stack_common" type="src">
        <files mask="dset_api.c"/>
      </source>
      <source path="middleware/wifi_qca/common_src/util" target_path="wifi_qca/common_src/util" type="src">
        <files mask="util.c"/>
      </source>
      <source path="middleware/wifi_qca/common_src/wmi" target_path="wifi_qca/common_src/wmi" type="src">
        <files mask="wmi.c"/>
      </source>
      <source path="middleware/wifi_qca/common_src/wmi" target_path="wifi_qca/common_src/wmi" type="c_include">
        <files mask="wmi_host.h"/>
      </source>
      <source path="middleware/wifi_qca/custom_src/api_interface" target_path="wifi_qca/custom_src/api_interface" type="src">
        <files mask="cust_api_init.c"/>
        <files mask="cust_api_ioctl.c"/>
        <files mask="cust_api_txrx.c"/>
        <files mask="cust_api_wmi_rx.c"/>
      </source>
      <source path="middleware/wifi_qca/custom_src/driver" target_path="wifi_qca/custom_src/driver" type="src">
        <files mask="cust_driver_main.c"/>
        <files mask="cust_driver_netbuf.c"/>
      </source>
      <source path="middleware/wifi_qca/custom_src/hw_interface" target_path="wifi_qca/custom_src/hw_interface" type="src">
        <files mask="cust_spi_hcd.c"/>
      </source>
      <source path="middleware/wifi_qca/custom_src/include" target_path="wifi_qca/custom_src/include" type="c_include">
        <files mask="a_config.h"/>
        <files mask="a_osapi.h"/>
        <files mask="a_types.h"/>
        <files mask="cust_netbuf.h"/>
        <files mask="custom_wlan_api.h"/>
        <files mask="wlan_config.h"/>
      </source>
      <source path="middleware/wifi_qca/custom_src/qapi" target_path="wifi_qca/custom_src/qapi" type="src">
        <files mask="custom_qcom_api.c"/>
      </source>
      <source path="middleware/wifi_qca/custom_src/stack_custom" target_path="wifi_qca/custom_src/stack_custom" type="src">
        <files mask="cust_api_stack_offload.c"/>
        <files mask="cust_api_stack_txrx.c"/>
      </source>
      <source path="middleware/wifi_qca/custom_src/stack_custom" target_path="wifi_qca/custom_src/stack_custom" type="c_include">
        <files mask="custom_stack_offload.h"/>
        <files mask="qca_structs.h"/>
      </source>
      <source path="middleware/wifi_qca/include/AR6002" target_path="wifi_qca/include/AR6002" type="c_include">
        <files mask="AR6K_version.h"/>
      </source>
      <source path="middleware/wifi_qca/include/AR6002/hw2.0/hw" target_path="wifi_qca/include/AR6002/hw2.0/hw" type="c_include">
        <files mask="hw20_apb_map.h"/>
        <files mask="hw20_gpio_reg.h"/>
        <files mask="hw20_mbox_host_reg.h"/>
        <files mask="hw20_mbox_reg.h"/>
        <files mask="hw20_rtc_reg.h"/>
        <files mask="hw20_si_reg.h"/>
        <files mask="hw20_uart_reg.h"/>
        <files mask="hw20_vmc_reg.h"/>
      </source>
      <source path="middleware/wifi_qca/include/AR6002/hw4.0/hw" target_path="wifi_qca/include/AR6002/hw4.0/hw" type="c_include">
        <files mask="hw40_rtc_reg.h"/>
        <files mask="hw40_rtc_wlan_reg.h"/>
      </source>
      <source path="middleware/wifi_qca/include" target_path="wifi_qca/include" type="c_include">
        <files mask="athdefs.h"/>
        <files mask="bmi_msg.h"/>
        <files mask="dbglog.h"/>
        <files mask="dbglog_id.h"/>
        <files mask="htc.h"/>
        <files mask="htc_services.h"/>
        <files mask="p2p.h"/>
        <files mask="pkt_log.h"/>
        <files mask="pmu.h"/>
        <files mask="targaddrs.h"/>
        <files mask="wlan_defs.h"/>
        <files mask="wmi.h"/>
      </source>
      <source path="middleware/wifi_qca/port" target_path="wifi_qca/port" type="c_include">
        <files mask="wifi_common.h"/>
        <files mask="wifi_shield_common.h"/>
      </source>
    </component>
    <component id="middleware.wifi_qca.frdmk32l3a6.freertos.shields.K32L3A60" name="shields" version="1.0.0" devices="K32L3A60xxx" dependency="middleware.amazon_freertos.freertos.K32L3A60 middleware.template_application.amazon_freertos.K32L3A60 middleware.wifi_qca.K32L3A60 middleware.wifi_qca.freertos.K32L3A60 middleware.wifi_qca.freertos.drivers.lpspi_edma.K32L3A60 platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60 platform.drivers.dmamux.K32L3A60 platform.drivers.edma.K32L3A60 platform.drivers.gpio.K32L3A60 platform.drivers.lpspi.K32L3A60 platform.drivers.lpspi_edma.K32L3A60 platform.drivers.port.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="WiFi/QCA400x WiFi" user_visible="false" type="other">
      <source path="middleware/wifi_qca/port/boards/frdmk32l3a6/freertos" target_path="wifi_qca/port/shields" type="src">
        <files mask="wifi_shield.c"/>
      </source>
      <source path="middleware/wifi_qca/port/boards/frdmk32l3a6/freertos" target_path="wifi_qca/port/shields" type="c_include">
        <files mask="wifi_shield.h"/>
      </source>
    </component>
    <component id="middleware.wifi_qca.frdmk32l3a6.freertos.shields.gt202.K32L3A60" name="gt202" version="1.0.0" devices="K32L3A60xxx" dependency="middleware.amazon_freertos.freertos.K32L3A60 middleware.template_application.amazon_freertos.K32L3A60 middleware.wifi_qca.K32L3A60 middleware.wifi_qca.frdmk32l3a6.freertos.shields.K32L3A60 middleware.wifi_qca.freertos.K32L3A60 middleware.wifi_qca.freertos.drivers.lpspi_edma.K32L3A60 platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60 platform.drivers.dmamux.K32L3A60 platform.drivers.edma.K32L3A60 platform.drivers.gpio.K32L3A60 platform.drivers.lpspi.K32L3A60 platform.drivers.lpspi_edma.K32L3A60 platform.drivers.port.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="WiFi/QCA400x WiFi" user_visible="false" type="other">
      <source path="middleware/wifi_qca/port/boards/frdmk32l3a6/freertos/gt202" target_path="wifi_qca/port/shields/gt202" type="c_include">
        <files mask="wifi_shield_gt202.h"/>
      </source>
    </component>
    <component id="middleware.wifi_qca.frdmk32l3a6.freertos.shields.silex2401.K32L3A60" name="silex2401" version="1.0.0" devices="K32L3A60xxx" dependency="middleware.amazon_freertos.freertos.K32L3A60 middleware.template_application.amazon_freertos.K32L3A60 middleware.wifi_qca.K32L3A60 middleware.wifi_qca.frdmk32l3a6.freertos.shields.K32L3A60 middleware.wifi_qca.freertos.K32L3A60 middleware.wifi_qca.freertos.drivers.lpspi_edma.K32L3A60 platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60 platform.drivers.dmamux.K32L3A60 platform.drivers.edma.K32L3A60 platform.drivers.gpio.K32L3A60 platform.drivers.lpspi.K32L3A60 platform.drivers.lpspi_edma.K32L3A60 platform.drivers.port.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="WiFi/QCA400x WiFi" user_visible="false" type="other">
      <source path="middleware/wifi_qca/port/boards/frdmk32l3a6/freertos/silex2401" target_path="wifi_qca/port/shields/silex2401" type="c_include">
        <files mask="wifi_shield_silex2401.h"/>
      </source>
    </component>
    <component id="middleware.wifi_qca.freertos.K32L3A60" name="freertos" version="1.0.0" devices="K32L3A60xxx" dependency="middleware.amazon_freertos.freertos.K32L3A60 middleware.template_application.amazon_freertos.K32L3A60 middleware.wifi_qca.K32L3A60" category="WiFi/QCA400x WiFi" user_visible="false" type="other">
      <source path="middleware/wifi_qca/port/env/freertos" target_path="wifi_qca/port/env/freertos" type="src">
        <files mask="wifi_env.c"/>
      </source>
      <source path="middleware/wifi_qca/port/env/freertos" target_path="wifi_qca/port/env/freertos" type="c_include">
        <files mask="wifi_env.h"/>
        <files mask="wifi_env_port.h"/>
        <files mask="wifi_port.h"/>
      </source>
    </component>
    <component id="middleware.wifi_qca.freertos.drivers.lpspi_edma.K32L3A60" name="lpspi_edma" version="1.0.0" devices="K32L3A60xxx" dependency="middleware.amazon_freertos.freertos.K32L3A60 middleware.template_application.amazon_freertos.K32L3A60 middleware.wifi_qca.K32L3A60 middleware.wifi_qca.freertos.K32L3A60 platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60 platform.drivers.dmamux.K32L3A60 platform.drivers.edma.K32L3A60 platform.drivers.lpspi.K32L3A60 platform.drivers.lpspi_edma.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="WiFi/QCA400x WiFi" user_visible="false" type="other">
      <source path="middleware/wifi_qca/port/drivers/lpspi_edma_freertos" target_path="wifi_qca/port/drivers/lpspi_edma_freertos" type="src">
        <files mask="wifi_spi.c"/>
      </source>
      <source path="middleware/wifi_qca/port/drivers/lpspi_edma_freertos" target_path="wifi_qca/port/drivers/lpspi_edma_freertos" type="c_include">
        <files mask="wifi_spi.h"/>
      </source>
    </component>
    <component id="platform.utilities.misc_utilities.K32L3A60" name="misc_utilities" brief="Utilities which is needed for particular toolchain like the SBRK function required to address limitation between HEAP and STACK in GCC toolchain library." version="1.0.0" devices="K32L3A60xxx" user_visible="true" type="utilities">
      <source toolchain="armgcc" path="devices/K32L3A60/utilities" target_path="utilities" type="src">
        <files mask="fsl_sbrk.c"/>
      </source>
    </component>
    <component id="platform.utilities.assert.K32L3A60" name="assert" version="1.0.0" devices="K32L3A60xxx" dependency="component.lists.K32L3A60 component.serial_manager.K32L3A60 platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60 utility.debug_console.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="utilities">
      <source path="devices/K32L3A60/utilities" target_path="utilities" type="src">
        <files mask="fsl_assert.c"/>
      </source>
    </component>
    <component id="utility.debug_console.K32L3A60" name="debug_console" version="1.0.0" devices="K32L3A60xxx" dependency="component.lists.K32L3A60 component.serial_manager.K32L3A60 platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="utilities">
      <source path="devices/K32L3A60/utilities/debug_console" target_path="utilities" type="src">
        <files mask="fsl_debug_console.c"/>
      </source>
      <source path="devices/K32L3A60/utilities/debug_console" target_path="utilities" type="c_include">
        <files mask="fsl_debug_console.h"/>
        <files mask="fsl_debug_console_conf.h"/>
      </source>
      <source path="devices/K32L3A60/utilities/str" target_path="utilities" type="src">
        <files mask="fsl_str.c"/>
      </source>
      <source path="devices/K32L3A60/utilities/str" target_path="utilities" type="c_include">
        <files mask="fsl_str.h"/>
      </source>
    </component>
    <component id="platform.utilities.notifier.K32L3A60" name="notifier" version="1.0.0" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="utilities">
      <source path="devices/K32L3A60/utilities" target_path="utilities/utilities" type="src">
        <files mask="fsl_notifier.c"/>
      </source>
      <source path="devices/K32L3A60/utilities" target_path="utilities/utilities" type="c_include">
        <files mask="fsl_notifier.h"/>
      </source>
    </component>
    <component id="utility.shell.K32L3A60" name="shell" version="1.0.0" devices="K32L3A60xxx" dependency="component.lists.K32L3A60 component.serial_manager.K32L3A60 platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60 utility.debug_console.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="utilities">
      <source path="devices/K32L3A60/utilities" target_path="utilities" type="src">
        <files mask="fsl_shell.c"/>
      </source>
      <source path="devices/K32L3A60/utilities" target_path="utilities" type="c_include">
        <files mask="fsl_shell.h"/>
      </source>
    </component>
    <component id="project_template.frdmk32l3a6_agm01.K32L3A60" name="frdmk32l3a6_agm01" version="1.0.0" devices="K32L3A60xxx" dependency="component.lists.K32L3A60 component.lpuart_adapter.K32L3A60 component.serial_manager.K32L3A60 component.serial_manager_uart.K32L3A60 platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.devices.K32L3A60_startup.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60 platform.drivers.gpio.K32L3A60 platform.drivers.lpuart.K32L3A60 platform.drivers.msmc.K32L3A60 platform.drivers.port.K32L3A60 platform.utilities.assert.K32L3A60 utility.debug_console.K32L3A60" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="Board Support/SDK Project Template" user_visible="true" type="project_template">
      <source path="boards/frdmk32l3a6_agm01/project_template" target_path="src" type="src">
        <files mask="clock_config.c"/>
        <files mask="peripherals.c"/>
        <files mask="pin_mux.c"/>
      </source>
      <source path="boards/frdmk32l3a6_agm01/project_template" target_path="src" type="c_include">
        <files mask="clock_config.h"/>
        <files mask="peripherals.h"/>
        <files mask="pin_mux.h"/>
      </source>
    </component>
    <component id="platform.drivers.cache_lpcac.K32L3A60" name="cache_lpcac" brief="CACHE Driver" version="2.1.0" full_name="CACHE Lpcac Driver" devices="K32L3A60xxx" dependency="platform.Include_common.K32L3A60 platform.Include_core_cm0plus.K32L3A60 platform.Include_core_cm4.K32L3A60 platform.devices.K32L3A60_CMSIS.K32L3A60 platform.drivers.clock.K32L3A60 platform.drivers.common.K32L3A60" device_cores="cm4_K32L3A60xxx" user_visible="true" type="driver">
      <source path="devices/K32L3A60/drivers/cm4" target_path="drivers" type="src">
        <files mask="fsl_cache.c"/>
      </source>
      <source path="devices/K32L3A60/drivers/cm4" target_path="drivers" type="c_include">
        <files mask="fsl_cache.h"/>
      </source>
    </component>
    <component id="cmsis.drivers.include.K32L3A60" name="issdk_cmsis_drivers" brief="CMSIS Core header files" version="1.7.0" devices="K32L3A60xxx" user_visible="true" type="other">
      <source path="CMSIS/Driver/Include" target_path="cmsis_driver" type="c_include">
        <files mask="Driver_Common.h"/>
        <files mask="Driver_I2C.h"/>
        <files mask="Driver_SPI.h"/>
        <files mask="Driver_USART.h"/>
      </source>
    </component>
    <component id="middleware.issdk.drivers.gpio_kinetis.K32L3A60" name="gpio_kinetis" brief="ISSDK GPIO Driver for Kinetis" version="1.7.0" devices="K32L3A60xxx" user_visible="true" type="other">
      <source path="middleware/issdk/drivers/gpio" target_path="gpio_driver" type="c_include">
        <files mask="Driver_GPIO.h"/>
      </source>
      <source path="middleware/issdk/drivers/gpio/kinetis" target_path="gpio_driver" type="src">
        <files mask="gpio_driver.c"/>
        <files mask="gpio_driver_irq.c"/>
      </source>
      <source path="middleware/issdk/drivers/gpio/kinetis" target_path="gpio_driver" type="c_include">
        <files mask="gpio_driver.h"/>
      </source>
    </component>
    <component id="middleware.issdk.drivers.systick_utils.K32L3A60" name="systick_utils" brief="ISSDK Utils" version="1.7.0" devices="K32L3A60xxx" user_visible="true" type="other">
      <source path="middleware/issdk/drivers/systick" target_path="utilities" type="src">
        <files mask="systick_utils.c"/>
      </source>
      <source path="middleware/issdk/drivers/systick" target_path="utilities" type="c_include">
        <files mask="systick_utils.h"/>
      </source>
    </component>
    <component id="middleware.issdk.sensor.allregdefs.K32L3A60" name="issdk_allregdefs" brief="ISSDK Sensors RegDefs" version="1.7.0" devices="K32L3A60xxx" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.I2C_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.SPI_CMSISInclude.K32L3A60" user_visible="true" type="other">
      <source path="middleware/issdk/sensors" target_path="sensors" type="c_include">
        <files mask="diff_p.h"/>
        <files mask="fxas21002.h"/>
        <files mask="fxlc95000.h"/>
        <files mask="fxls8471q.h"/>
        <files mask="fxls8962.h"/>
        <files mask="fxos8700.h"/>
        <files mask="fxpq3115.h"/>
        <files mask="mag3110.h"/>
        <files mask="mma845x.h"/>
        <files mask="mma8491q.h"/>
        <files mask="mma865x.h"/>
        <files mask="mma9553.h"/>
        <files mask="mpl3115.h"/>
      </source>
    </component>
    <component id="middleware.issdk.sensor.boardkit.K32L3A60" name="issdk_boardkit" brief="ISSDK Board-Kit files" version="1.7.0" devices="K32L3A60xxx" user_visible="false" type="other">
      <source path="middleware/issdk/boardkit/evk-mimxrt1050" target_path="issdk_boardkit" type="c_include">
        <files mask="RTE_Device.h"/>
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="evkmimxrt1050.h"/>
        <files mask="pin_mux.h"/>
      </source>
      <source path="middleware/issdk/boardkit/evk-mimxrt1050" target_path="issdk_boardkit" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="evkmimxrt1050.c"/>
        <files mask="pin_mux.c"/>
      </source>
      <source path="middleware/issdk/boardkit/evk-mimxrt1050/frdm-stbc-agm01" target_path="issdk_boardkit" type="c_include">
        <files mask="frdm_stbc_agm01_shield.h"/>
        <files mask="issdk_hal.h"/>
      </source>
      <source path="middleware/issdk/boardkit/evkb-imxrt1050" target_path="issdk_boardkit" type="c_include">
        <files mask="RTE_Device.h"/>
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="evkbimxrt1050.h"/>
        <files mask="pin_mux.h"/>
      </source>
      <source path="middleware/issdk/boardkit/evkb-imxrt1050" target_path="issdk_boardkit" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="evkbimxrt1050.c"/>
        <files mask="pin_mux.c"/>
      </source>
      <source path="middleware/issdk/boardkit/evkb-imxrt1050/frdm-stbc-agm01" target_path="issdk_boardkit" type="c_include">
        <files mask="frdm_stbc_agm01_shield.h"/>
        <files mask="issdk_hal.h"/>
      </source>
      <source path="middleware/issdk/boardkit/frdm-k22f" target_path="issdk_boardkit" type="c_include">
        <files mask="RTE_Device.h"/>
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="frdm_k22f.h"/>
        <files mask="pin_mux.h"/>
      </source>
      <source path="middleware/issdk/boardkit/frdm-k22f" target_path="issdk_boardkit" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="frdm_k22f.c"/>
        <files mask="pin_mux.c"/>
      </source>
      <source path="middleware/issdk/boardkit/frdm-k22f/frdm-stbc-agm01" target_path="issdk_boardkit" type="c_include">
        <files mask="frdm_stbc_agm01_shield.h"/>
        <files mask="issdk_hal.h"/>
      </source>
      <source path="middleware/issdk/boardkit/frdm-k22f/frdm-stbc-agmp03" target_path="issdk_boardkit" type="c_include">
        <files mask="frdm_stbc_agmp03_shield.h"/>
        <files mask="issdk_hal.h"/>
      </source>
      <source path="middleware/issdk/boardkit/frdm-k22f/frdm-stbc-sa9500" target_path="issdk_boardkit" type="c_include">
        <files mask="frdm_stbc_sa9500_shield.h"/>
        <files mask="issdk_hal.h"/>
      </source>
      <source path="middleware/issdk/boardkit/frdm-k32w042" target_path="issdk_boardkit" type="c_include">
        <files mask="RTE_Device.h"/>
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="frdm_k32w042.h"/>
        <files mask="pin_mux.h"/>
      </source>
      <source path="middleware/issdk/boardkit/frdm-k32w042" target_path="issdk_boardkit" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="frdm_k32w042.c"/>
        <files mask="pin_mux.c"/>
      </source>
      <source path="middleware/issdk/boardkit/frdm-k32w042/frdm-stbc-agm01" target_path="issdk_boardkit" type="c_include">
        <files mask="frdm_stbc_agm01_shield.h"/>
        <files mask="issdk_hal.h"/>
      </source>
      <source path="middleware/issdk/boardkit/frdm-k64f" target_path="issdk_boardkit" type="c_include">
        <files mask="RTE_Device.h"/>
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="frdm_k64f.h"/>
        <files mask="pin_mux.h"/>
      </source>
      <source path="middleware/issdk/boardkit/frdm-k64f" target_path="issdk_boardkit" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="frdm_k64f.c"/>
        <files mask="pin_mux.c"/>
      </source>
      <source path="middleware/issdk/boardkit/frdm-k64f/frdm-fxs-mult2-b" target_path="issdk_boardkit" type="c_include">
        <files mask="frdm_fxs_mult2b_shield.h"/>
        <files mask="issdk_hal.h"/>
      </source>
      <source path="middleware/issdk/boardkit/frdm-k64f/frdm-stbc-agm01" target_path="issdk_boardkit" type="c_include">
        <files mask="frdm_stbc_agm01_shield.h"/>
        <files mask="issdk_hal.h"/>
      </source>
      <source path="middleware/issdk/boardkit/frdm-k64f/frdm-stbc-agm04" target_path="issdk_boardkit" type="c_include">
        <files mask="frdm_stbc_agm04_shield.h"/>
        <files mask="issdk_hal.h"/>
      </source>
      <source path="middleware/issdk/boardkit/frdm-ke15z" target_path="issdk_boardkit" type="c_include">
        <files mask="RTE_Device.h"/>
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="frdm_ke15z.h"/>
        <files mask="pin_mux.h"/>
      </source>
      <source path="middleware/issdk/boardkit/frdm-ke15z" target_path="issdk_boardkit" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="frdm_ke15z.c"/>
        <files mask="pin_mux.c"/>
      </source>
      <source path="middleware/issdk/boardkit/frdm-ke15z/frdm-stbc-dp5004" target_path="issdk_boardkit" type="c_include">
        <files mask="frdm-stbc-dp5004_shield.h"/>
        <files mask="issdk_hal.h"/>
      </source>
      <source path="middleware/issdk/boardkit/frdm-ke15z/frdm-stbi-dp300x" target_path="issdk_boardkit" type="c_include">
        <files mask="frdm-stbi-dp300x_shield.h"/>
        <files mask="issdk_hal.h"/>
      </source>
      <source path="middleware/issdk/boardkit/frdm-kl25z" target_path="issdk_boardkit" type="c_include">
        <files mask="RTE_Device.h"/>
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="frdm_kl25z.h"/>
        <files mask="pin_mux.h"/>
      </source>
      <source path="middleware/issdk/boardkit/frdm-kl25z" target_path="issdk_boardkit" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="frdm_kl25z.c"/>
        <files mask="pin_mux.c"/>
      </source>
      <source path="middleware/issdk/boardkit/frdm-kl25z/frdm-stbc-a8471" target_path="issdk_boardkit" type="c_include">
        <files mask="frdm_stbc_a8471_shield.h"/>
        <files mask="issdk_hal.h"/>
      </source>
      <source path="middleware/issdk/boardkit/frdm-kl25z/frdm-stbc-a8491" target_path="issdk_boardkit" type="c_include">
        <files mask="frdm_stbc_a8491_shield.h"/>
        <files mask="issdk_hal.h"/>
      </source>
      <source path="middleware/issdk/boardkit/frdm-kl25z/frdm-stbc-p3115" target_path="issdk_boardkit" type="c_include">
        <files mask="frdm_stbc_p3115_shield.h"/>
        <files mask="issdk_hal.h"/>
      </source>
      <source path="middleware/issdk/boardkit/frdm-kl25z/frdm" target_path="issdk_boardkit" type="c_include">
        <files mask="issdk_hal.h"/>
      </source>
      <source path="middleware/issdk/boardkit/frdm-kl25z/rd-kl25z" target_path="issdk_boardkit" type="c_include">
        <files mask="issdk_hal.h"/>
        <files mask="rd_kl25z_gdl.h"/>
      </source>
      <source path="middleware/issdk/boardkit/frdm-kl25z/virtual_shield" target_path="issdk_boardkit" type="c_include">
        <files mask="issdk_hal.h"/>
        <files mask="virtual_shield.h"/>
      </source>
      <source path="middleware/issdk/boardkit/frdm-kl27z" target_path="issdk_boardkit" type="c_include">
        <files mask="RTE_Device.h"/>
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="frdm_kl27z.h"/>
        <files mask="pin_mux.h"/>
      </source>
      <source path="middleware/issdk/boardkit/frdm-kl27z" target_path="issdk_boardkit" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="frdm_kl27z.c"/>
        <files mask="pin_mux.c"/>
      </source>
      <source path="middleware/issdk/boardkit/frdm-kl27z/frdm-stbc-agmp03" target_path="issdk_boardkit" type="c_include">
        <files mask="frdm_stbc_agmp03_shield.h"/>
        <files mask="issdk_hal.h"/>
      </source>
      <source path="middleware/issdk/boardkit/frdm-kl27z/frdm-stbc-b3115" target_path="issdk_boardkit" type="c_include">
        <files mask="frdm_stbc_b3115_shield.h"/>
        <files mask="issdk_hal.h"/>
      </source>
      <source path="middleware/issdk/boardkit/frdm-kl27z/frdm" target_path="issdk_boardkit" type="c_include">
        <files mask="issdk_hal.h"/>
      </source>
      <source path="middleware/issdk/boardkit/lpcxpresso54114" target_path="issdk_boardkit" type="c_include">
        <files mask="RTE_Device.h"/>
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="lpc54114.h"/>
        <files mask="pin_mux.h"/>
      </source>
      <source path="middleware/issdk/boardkit/lpcxpresso54114" target_path="issdk_boardkit" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="lpc54114.c"/>
        <files mask="pin_mux.c"/>
      </source>
      <source path="middleware/issdk/boardkit/lpcxpresso54114/frdm-stbc-agm01" target_path="issdk_boardkit" type="c_include">
        <files mask="frdm_stbc_agm01_shield.h"/>
        <files mask="issdk_hal.h"/>
      </source>
      <source path="middleware/issdk/boardkit/lpcxpresso54114/frdm-stbc-agmp03" target_path="issdk_boardkit" type="c_include">
        <files mask="frdm_stbc_agmp03_shield.h"/>
        <files mask="issdk_hal.h"/>
      </source>
      <source path="middleware/issdk/boardkit/lpcxpresso55s69" target_path="issdk_boardkit" type="c_include">
        <files mask="RTE_Device.h"/>
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="lpc55s69.h"/>
        <files mask="pin_mux.h"/>
      </source>
      <source path="middleware/issdk/boardkit/lpcxpresso55s69" target_path="issdk_boardkit" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="lpc55s69.c"/>
        <files mask="pin_mux.c"/>
      </source>
      <source path="middleware/issdk/boardkit/lpcxpresso55s69/frdm-stbc-agm01" target_path="issdk_boardkit" type="c_include">
        <files mask="frdm_stbc_agm01_shield.h"/>
        <files mask="issdk_hal.h"/>
      </source>
    </component>
    <component id="middleware.issdk.sensor.driverexamples.K32L3A60" name="issdk_driverexamples" brief="ISSDK Sensor Driver Examples files" version="1.7.0" devices="K32L3A60xxx" user_visible="false" type="other">
      <source path="middleware/issdk/driverexamples/demos" target_path="issdk_driverexamples" type="src">
        <files mask="data_logger_demo.c"/>
        <files mask="demo_11_axis_mult2b.c"/>
        <files mask="diff_p_demo.c"/>
        <files mask="dp5004_demo.c"/>
        <files mask="fxas21002_demo.c"/>
        <files mask="fxas21002_poll_demo.c"/>
        <files mask="fxlc95000_flash_demo.c"/>
        <files mask="fxls8471_demo.c"/>
        <files mask="fxls8471_demo_kl25z.c"/>
        <files mask="fxls8962_demo.c"/>
        <files mask="fxos8700_demo.c"/>
        <files mask="fxos8700_poll_demo.c"/>
        <files mask="fxpq3115_demo.c"/>
        <files mask="host_demo.c"/>
        <files mask="mag3110_demo.c"/>
        <files mask="mag3110_poll_demo.c"/>
        <files mask="mma845x_demo.c"/>
        <files mask="mma8491q_demo.c"/>
        <files mask="mma865x_demo.c"/>
        <files mask="mma9553_demo.c"/>
        <files mask="mpl3115_demo.c"/>
        <files mask="mpl3115_oneShot_demo.c"/>
        <files mask="mpl3115_poll_demo.c"/>
        <files mask="orientaion_application_baremetal_agm01.c"/>
        <files mask="orientaion_application_baremetal_agm04.c"/>
        <files mask="orientaion_application_baremetal_agmp03.c"/>
      </source>
      <source path="middleware/issdk/driverexamples/dp5004" target_path="issdk_driverexamples" type="src">
        <files mask="dp5004_interrupt.c"/>
      </source>
      <source path="middleware/issdk/driverexamples/fxas21002" target_path="issdk_driverexamples" type="src">
        <files mask="fxas21002_fifo.c"/>
        <files mask="fxas21002_interrupt.c"/>
        <files mask="fxas21002_poll.c"/>
        <files mask="fxas21002_poll_spi.c"/>
      </source>
      <source path="middleware/issdk/driverexamples/fxlc95000" target_path="issdk_driverexamples" type="src">
        <files mask="fxlc95000_accel_i2c.c"/>
        <files mask="fxlc95000_accel_spi.c"/>
      </source>
      <source path="middleware/issdk/driverexamples/fxls8471q" target_path="issdk_driverexamples" type="src">
        <files mask="fxls8471q_spi_fifo.c"/>
        <files mask="fxls8471q_spi_interrupt.c"/>
        <files mask="fxls8471q_spi_poll.c"/>
      </source>
      <source path="middleware/issdk/driverexamples/fxls8962" target_path="issdk_driverexamples" type="src">
        <files mask="fxls8962_fifo_spi.c"/>
        <files mask="fxls8962_freefall.c"/>
        <files mask="fxls8962_interrupt.c"/>
        <files mask="fxls8962_motion_detection.c"/>
        <files mask="fxls8962_normal.c"/>
        <files mask="fxls8962_normal_spi.c"/>
        <files mask="fxls8962_orientation_detection.c"/>
      </source>
      <source path="middleware/issdk/driverexamples/fxos8700" target_path="issdk_driverexamples" type="src">
        <files mask="fxos8700_fifo.c"/>
        <files mask="fxos8700_interrupt.c"/>
        <files mask="fxos8700_poll.c"/>
        <files mask="fxos8700_poll_spi.c"/>
      </source>
      <source path="middleware/issdk/driverexamples/fxpq3115" target_path="issdk_driverexamples" type="src">
        <files mask="fxpq3115_altitude.c"/>
        <files mask="fxpq3115_fifo.c"/>
        <files mask="fxpq3115_fifo_interrupt.c"/>
        <files mask="fxpq3115_normal.c"/>
        <files mask="fxpq3115_normal_interrupt.c"/>
        <files mask="fxpq3115_oneshot.c"/>
      </source>
      <source path="middleware/issdk/driverexamples/mag3110" target_path="issdk_driverexamples" type="src">
        <files mask="mag3110_normal.c"/>
        <files mask="mag3110_normal_interrupt.c"/>
        <files mask="mag3110_oneshot.c"/>
      </source>
      <source path="middleware/issdk/driverexamples/mma845x" target_path="issdk_driverexamples" type="src">
        <files mask="mma845x_fifo.c"/>
        <files mask="mma845x_interrupt.c"/>
        <files mask="mma845x_poll.c"/>
      </source>
      <source path="middleware/issdk/driverexamples/mma8491q" target_path="issdk_driverexamples" type="src">
        <files mask="mma8491q_example.c"/>
      </source>
      <source path="middleware/issdk/driverexamples/mma865x" target_path="issdk_driverexamples" type="src">
        <files mask="mma865x_auto-wake-sleep.c"/>
        <files mask="mma865x_doubletap-detection.c"/>
        <files mask="mma865x_fifo.c"/>
        <files mask="mma865x_freefall-detection.c"/>
        <files mask="mma865x_freefall.c"/>
        <files mask="mma865x_interrupt.c"/>
        <files mask="mma865x_poll.c"/>
      </source>
      <source path="middleware/issdk/driverexamples/mma9553" target_path="issdk_driverexamples" type="src">
        <files mask="mma9553_pedometer_i2c.c"/>
        <files mask="mma9553_pedometer_interrupt.c"/>
        <files mask="mma9553_pedometer_spi.c"/>
      </source>
      <source path="middleware/issdk/driverexamples/mpl3115" target_path="issdk_driverexamples" type="src">
        <files mask="mpl3115_altitude.c"/>
        <files mask="mpl3115_fifo.c"/>
        <files mask="mpl3115_fifo_interrupt.c"/>
        <files mask="mpl3115_normal.c"/>
        <files mask="mpl3115_normal_interrupt.c"/>
        <files mask="mpl3115_oneshot.c"/>
      </source>
    </component>
    <component id="middleware.issdk.sensor.fxas21002.K32L3A60" name="issdk_fxas21002" brief="ISSDK FXAS21002 Sensor Driver Files" version="1.7.0" devices="K32L3A60xxx" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.I2C_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.SPI_CMSISInclude.K32L3A60" user_visible="true" type="other">
      <source path="middleware/issdk/sensors" target_path="sensors" type="c_include">
        <files mask="fxas21002.h"/>
        <files mask="fxas21002_drv.h"/>
      </source>
      <source path="middleware/issdk/sensors" target_path="sensors" type="src">
        <files mask="fxas21002_drv.c"/>
      </source>
    </component>
    <component id="middleware.issdk.sensor.fxlc95000.K32L3A60" name="issdk_fxlc95000" brief="ISSDK FXLC95000 Sensor Driver Files" version="1.7.0" devices="K32L3A60xxx" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.I2C_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.SPI_CMSISInclude.K32L3A60" user_visible="true" type="other">
      <source path="middleware/issdk/sensors" target_path="sensors" type="c_include">
        <files mask="fxlc95000.h"/>
        <files mask="fxlc95000_drv.h"/>
      </source>
      <source path="middleware/issdk/sensors" target_path="sensors" type="src">
        <files mask="fxlc95000_drv.c"/>
      </source>
    </component>
    <component id="middleware.issdk.sensor.fxls8471q.K32L3A60" name="issdk_fxls8471q" brief="ISSDK FXLS8471 Sensor Driver Files" version="1.7.0" devices="K32L3A60xxx" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.I2C_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.SPI_CMSISInclude.K32L3A60" user_visible="true" type="other">
      <source path="middleware/issdk/sensors" target_path="sensors" type="c_include">
        <files mask="fxls8471q.h"/>
        <files mask="fxls8471q_drv.h"/>
      </source>
      <source path="middleware/issdk/sensors" target_path="sensors" type="src">
        <files mask="fxls8471q_drv.c"/>
      </source>
    </component>
    <component id="middleware.issdk.sensor.fxls8962.K32L3A60" name="issdk_fxls8962" brief="ISSDK FXLS8962 Sensor Driver Files" version="1.7.0" devices="K32L3A60xxx" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.I2C_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.SPI_CMSISInclude.K32L3A60" user_visible="true" type="other">
      <source path="middleware/issdk/sensors" target_path="sensors" type="c_include">
        <files mask="fxls8962.h"/>
        <files mask="fxls8962_drv.h"/>
      </source>
      <source path="middleware/issdk/sensors" target_path="sensors" type="src">
        <files mask="fxls8962_drv.c"/>
      </source>
    </component>
    <component id="middleware.issdk.sensor.fxos8700.K32L3A60" name="issdk_fxos8700" brief="ISSDK FXOS8700 Sensor Driver Files" version="1.7.0" devices="K32L3A60xxx" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.I2C_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.SPI_CMSISInclude.K32L3A60" user_visible="true" type="other">
      <source path="middleware/issdk/sensors" target_path="sensors" type="c_include">
        <files mask="fxos8700.h"/>
        <files mask="fxos8700_drv.h"/>
      </source>
      <source path="middleware/issdk/sensors" target_path="sensors" type="src">
        <files mask="fxos8700_drv.c"/>
      </source>
    </component>
    <component id="middleware.issdk.sensor.fxpq3115.K32L3A60" name="issdk_fxpq3115" brief="ISSDK FXPQ3115 Sensor Driver Files" version="1.7.0" devices="K32L3A60xxx" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.I2C_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.SPI_CMSISInclude.K32L3A60" user_visible="true" type="other">
      <source path="middleware/issdk/sensors" target_path="sensors" type="c_include">
        <files mask="fxpq3115.h"/>
        <files mask="fxpq3115_drv.h"/>
      </source>
      <source path="middleware/issdk/sensors" target_path="sensors" type="src">
        <files mask="fxpq3115_drv.c"/>
      </source>
    </component>
    <component id="middleware.issdk.sensor.interface.common.K32L3A60" name="issdk_interfaces" brief="ISSDK Sensor Interface Common" version="1.7.0" devices="K32L3A60xxx" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.I2C_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.SPI_CMSISInclude.K32L3A60" user_visible="true" type="other">
      <source path="middleware/issdk/sensors" target_path="interfaces" type="src">
        <files mask="register_io_i2c.c"/>
        <files mask="register_io_spi.c"/>
        <files mask="sensor_io_i2c.c"/>
        <files mask="sensor_io_spi.c"/>
      </source>
      <source path="middleware/issdk/sensors" target_path="interfaces" type="c_include">
        <files mask="register_io_i2c.h"/>
        <files mask="register_io_spi.h"/>
        <files mask="sensor_drv.h"/>
        <files mask="sensor_io_i2c.h"/>
        <files mask="sensor_io_spi.h"/>
      </source>
    </component>
    <component id="middleware.issdk.sensor.isl29023.K32L3A60" name="issdk_isl29023" brief="ISSDK ISL29023 Sensor Driver Files" version="1.7.0" devices="K32L3A60xxx" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.I2C_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.SPI_CMSISInclude.K32L3A60" user_visible="false" type="other">
      <source path="middleware/issdk/sensors" target_path="sensors" type="c_include">
        <files mask="isl29023.h"/>
        <files mask="isl29023_drv.h"/>
      </source>
      <source path="middleware/issdk/sensors" target_path="sensors" type="src">
        <files mask="isl29023_drv.c"/>
      </source>
    </component>
    <component id="middleware.issdk.sensor.mag3110.K32L3A60" name="issdk_mag3110" brief="ISSDK MAG3110 Sensor Driver Files" version="1.7.0" devices="K32L3A60xxx" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.I2C_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.SPI_CMSISInclude.K32L3A60" user_visible="true" type="other">
      <source path="middleware/issdk/sensors" target_path="sensors" type="c_include">
        <files mask="mag3110.h"/>
        <files mask="mag3110_drv.h"/>
      </source>
      <source path="middleware/issdk/sensors" target_path="sensors" type="src">
        <files mask="mag3110_drv.c"/>
      </source>
    </component>
    <component id="middleware.issdk.sensor.mma845x.K32L3A60" name="issdk_mma845x" brief="ISSDK MMA845x Sensor Driver Files" version="1.7.0" devices="K32L3A60xxx" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.I2C_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.SPI_CMSISInclude.K32L3A60" user_visible="true" type="other">
      <source path="middleware/issdk/sensors" target_path="sensors" type="c_include">
        <files mask="mma845x.h"/>
        <files mask="mma845x_drv.h"/>
      </source>
      <source path="middleware/issdk/sensors" target_path="sensors" type="src">
        <files mask="mma845x_drv.c"/>
      </source>
    </component>
    <component id="middleware.issdk.sensor.mma8491q.K32L3A60" name="issdk_mma8491q" brief="ISSDK MMA8491 Sensor Driver Files" version="1.7.0" devices="K32L3A60xxx" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.I2C_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.SPI_CMSISInclude.K32L3A60" user_visible="true" type="other">
      <source path="middleware/issdk/sensors" target_path="sensors" type="c_include">
        <files mask="mma8491q.h"/>
        <files mask="mma8491q_drv.h"/>
      </source>
      <source path="middleware/issdk/sensors" target_path="sensors" type="src">
        <files mask="mma8491q_drv.c"/>
      </source>
    </component>
    <component id="middleware.issdk.sensor.mma865x.K32L3A60" name="issdk_mma865x" brief="ISSDK MMA865x Sensor Driver Files" version="1.7.0" devices="K32L3A60xxx" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.I2C_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.SPI_CMSISInclude.K32L3A60" user_visible="true" type="other">
      <source path="middleware/issdk/sensors" target_path="sensors" type="c_include">
        <files mask="mma865x.h"/>
        <files mask="mma865x_drv.h"/>
      </source>
      <source path="middleware/issdk/sensors" target_path="sensors" type="src">
        <files mask="mma865x_drv.c"/>
      </source>
    </component>
    <component id="middleware.issdk.sensor.mma9553.K32L3A60" name="issdk_mma9553" brief="ISSDK MMA9553 Sensor Driver Files" version="1.7.0" devices="K32L3A60xxx" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.I2C_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.SPI_CMSISInclude.K32L3A60" user_visible="true" type="other">
      <source path="middleware/issdk/sensors" target_path="sensors" type="c_include">
        <files mask="mma9553.h"/>
        <files mask="mma9553_drv.h"/>
      </source>
      <source path="middleware/issdk/sensors" target_path="sensors" type="src">
        <files mask="mma9553_drv.c"/>
      </source>
    </component>
    <component id="middleware.issdk.sensor.mpl3115.K32L3A60" name="issdk_mpl3115" brief="ISSDK MPL3115 Sensor Driver Files" version="1.7.0" devices="K32L3A60xxx" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.I2C_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.SPI_CMSISInclude.K32L3A60" user_visible="true" type="other">
      <source path="middleware/issdk/sensors" target_path="sensors" type="c_include">
        <files mask="mpl3115.h"/>
        <files mask="mpl3115_drv.h"/>
      </source>
      <source path="middleware/issdk/sensors" target_path="sensors" type="src">
        <files mask="mpl3115_drv.c"/>
      </source>
    </component>
    <component id="middleware.issdk.sensor.nps300x.K32L3A60" name="issdk_nps300x" brief="ISSDK nps300x Sensor Driver Files" version="1.7.0" devices="K32L3A60xxx" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.I2C_CMSISInclude.K32L3A60 platform.CMSIS_Driver_Include.SPI_CMSISInclude.K32L3A60" user_visible="false" type="other">
      <source path="middleware/issdk/sensors" target_path="sensors" type="c_include">
        <files mask="diff_p.h"/>
        <files mask="diff_p_drv.h"/>
      </source>
      <source path="middleware/issdk/sensors" target_path="sensors" type="src">
        <files mask="diff_p_drv.c"/>
      </source>
    </component>
    <component id="middleware.issdk.sensor.tools.K32L3A60" name="issdk_tools" brief="ISSDK Serial to MQTT bridge application" version="1.7.0" devices="K32L3A60xxx" user_visible="false" type="other">
      <source path="middleware/issdk/tools/Serial_To_MQTT" target_path="issdk_senor" type="script">
        <files mask="CloudBridgeNXPDemo.py"/>
      </source>
    </component>
  </components>
</ksdk:manifest>
