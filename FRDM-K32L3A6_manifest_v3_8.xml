<?xml version="1.0" encoding="UTF-8"?>
<ksdk:manifest xmlns:ksdk="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="SDK_2.x_FRDM-K32L3A6" name="FRDM-K32L3A6" brief="This is SDK version 2.9.0 manifest file. It describes the content of the FRDM-K32L3A6 and additional settings for tools that support SDK version 2.9.0" format_version="3.8" api_version="2.0.0" configuration="81f70173c5312ea29a3334e7a1edf3b5" xsi:schemaLocation="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd http://nxp.com/mcuxpresso/sdk/sdk_manifest_v3.8.xsd">
  <!--Timestamp (UTC): 2021-02-24 16:37:51.202907-->
  <!--This manifest is generated based on sdk repo commit: 3073e476325c80265f0c6d9a806af8fd0bfd767b-->
  <defines>
    <define name="CPU_$|package|" value=""/>
    <define name="CPU_$|package|_$|core|" value=""/>
  </defines>
  <ksdk id="MCUXpresso290" name="MCUXpresso290" version="2.9.0" revision="435 2021-01-15"/>
  <compilers>
    <compiler id="compiler_armclang" name="armclang" type="armclang"/>
    <compiler id="compiler_gcc" name="gcc" type="gcc"/>
    <compiler id="compiler_iar" name="iar" type="iar"/>
  </compilers>
  <core_slave_roles_definitions>
    <slave_role id="M0SLAVE" name="Cortex-M0 acts as slave by default"/>
  </core_slave_roles_definitions>
  <toolchainSettings>
    <toolchainSetting id="com.nxp.mcuxpresso" name="mcuxpresso" version="11.3.0" full_name="MCUXpresso IDE" compiler="compiler_gcc" toolchain="mcuxpresso">
      <option id="gnu.cpp.compiler.option.optimization.flags" type="string" user_name="">
        <value>-fno-common</value>
      </option>
      <option id="gnu.c.compiler.option.optimization.flags" type="string" user_name="">
        <value>-fno-common</value>
      </option>
      <option id="gnu.cpp.link.option.nostdlibs" type="boolean" user_name="">
        <value>true</value>
      </option>
      <option id="com.crt.advproject.link.cpp.flashconfigenable" type="boolean" user_name="">
        <value>true</value>
      </option>
      <option id="com.crt.advproject.link.flashconfigenable" type="boolean" user_name="">
        <value>true</value>
      </option>
      <option id="gnu.c.link.option.nostdlibs" type="boolean" user_name="">
        <value>true</value>
      </option>
    </toolchainSetting>
  </toolchainSettings>
  <toolchains>
    <toolchain id="armgcc" name="GCC_ARM_Embedded" version="9.3.1" full_name="GCC ARM Embedded" compiler="compiler_gcc" type="armgcc" vendor="GCC ARM Embedded" vendor_url="http://launchpad.net/gcc-arm-embedded"/>
    <toolchain id="mdk" name="Keil_MDK" version="5.33" full_name="Keil MDK" compiler="compiler_armclang" type="mdk" vendor="ARM" vendor_url="http://www.arm.com"/>
    <toolchain id="iar" name="IAR_Embedded_Workbench_for_ARM" version="8.50.9" full_name="IAR Embedded Workbench for ARM" compiler="compiler_iar" type="iar" vendor="IAR Systems" vendor_url="http://www.iar.com"/>
    <toolchain id="mcuxpresso" name="MCUXpresso_IDE" version="11.3.0" full_name="MCUXpresso IDE" compiler="compiler_gcc" type="mcuxpresso" vendor="NXP Semiconductors" vendor_url="http://www.nxp.com">
      <debug>
        <debug_configuration id="com.crt.advproject.config.exe.release" name="Release Configuration" probe="LinkServer">
          <scripts>
            <script type="init" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>
set remotetimeout 60000
##target_extended_remote##
set mem inaccessible-by-default ${mem.access}
mon ondisconnect ${ondisconnect}
set arm force-mode thumb
${load}</script>
            </script>
            <script type="run" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>${run}</script>
            </script>
          </scripts>
          <params>
            <params id="vector.catch.release.mcuxpresso" name="vector.catch" value="false"/>
            <params id="internal.cache.release.mcuxpresso" name="internal.cache" value="Disable"/>
          </params>
        </debug_configuration>
        <debug_configuration id="com.crt.advproject.config.exe.debug" name="Debug Configuration" probe="LinkServer">
          <scripts>
            <script type="init" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>
set remotetimeout 60000
##target_extended_remote##
set mem inaccessible-by-default ${mem.access}
mon ondisconnect ${ondisconnect}
set arm force-mode thumb
${load}</script>
            </script>
            <script type="run" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>${run}</script>
            </script>
          </scripts>
          <params>
            <params id="vector.catch.debug.mcuxpresso" name="vector.catch" value="false"/>
            <params id="internal.cache.debug.mcuxpresso" name="internal.cache" value="Disable"/>
          </params>
        </debug_configuration>
        <debug_configuration id="com.nxp.mcuxpresso.core.debug.support.segger.debug" name="Debug Configuration" probe="Segger"/>
        <debug_configuration id="com.nxp.mcuxpresso.core.debug.support.segger.release" name="Release Configuration" probe="Segger"/>
      </debug>
    </toolchain>
  </toolchains>
  <boards>
    <board id="frdmk32l3a6" name="FRDM-K32L3A6" href="https://www.nxp.com/pip/FRDM-K32L3A6" version="1.0.0" package="K32L3A60VPJ1A">
      <description>Freedom Development Platform for K32 L3 MCUs</description>
      <image path="boards/frdmk32l3a6" type="image">
        <files mask="frdmk32l3a6.png"/>
      </image>
      <examples>
        <example id="frdmk32l3a6_bubble_cm0plus" name="bubble_cm0plus" brief="The bubble level demo demonstrates basic usage of the on-board accelerometer to implement a bubble level. A bubble level utilizes two axes to visually show deviation from a level plane (0 degrees) on a given axis." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/frdmk32l3a6/demo_apps/bubble/cm0plus">
          <external path="boards/frdmk32l3a6/demo_apps/bubble/cm0plus" type="xml">
            <files mask="bubble_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_cau3_cm0plus" name="cau3_cm0plus" brief="The CAU3 Example project is a demonstration program that uses the KSDK software implementseveral cryptography algorithms using the CAU3 software driver." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples" path="boards/frdmk32l3a6/driver_examples/cau3/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/cau3/cm0plus" type="xml">
            <files mask="cau3_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_cmsis_lpi2c_edma_b2b_transfer_master_cm0plus" name="cmsis_lpi2c_edma_b2b_transfer_master_cm0plus" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_edma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with EDMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpi2c" path="boards/frdmk32l3a6/cmsis_driver_examples/lpi2c/edma_b2b_transfer/master/cm0plus">
          <external path="boards/frdmk32l3a6/cmsis_driver_examples/lpi2c/edma_b2b_transfer/master/cm0plus" type="xml">
            <files mask="cmsis_lpi2c_edma_b2b_transfer_master_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_cmsis_lpi2c_edma_b2b_transfer_slave_cm0plus" name="cmsis_lpi2c_edma_b2b_transfer_slave_cm0plus" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_edma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with EDMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpi2c" path="boards/frdmk32l3a6/cmsis_driver_examples/lpi2c/edma_b2b_transfer/slave/cm0plus">
          <external path="boards/frdmk32l3a6/cmsis_driver_examples/lpi2c/edma_b2b_transfer/slave/cm0plus" type="xml">
            <files mask="cmsis_lpi2c_edma_b2b_transfer_slave_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_cmsis_lpi2c_int_b2b_transfer_master_cm0plus" name="cmsis_lpi2c_int_b2b_transfer_master_cm0plus" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The lpi2c_int_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpi2c" path="boards/frdmk32l3a6/cmsis_driver_examples/lpi2c/int_b2b_transfer/master/cm0plus">
          <external path="boards/frdmk32l3a6/cmsis_driver_examples/lpi2c/int_b2b_transfer/master/cm0plus" type="xml">
            <files mask="cmsis_lpi2c_int_b2b_transfer_master_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_cmsis_lpi2c_int_b2b_transfer_slave_cm0plus" name="cmsis_lpi2c_int_b2b_transfer_slave_cm0plus" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The lpi2c_int_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpi2c" path="boards/frdmk32l3a6/cmsis_driver_examples/lpi2c/int_b2b_transfer/slave/cm0plus">
          <external path="boards/frdmk32l3a6/cmsis_driver_examples/lpi2c/int_b2b_transfer/slave/cm0plus" type="xml">
            <files mask="cmsis_lpi2c_int_b2b_transfer_slave_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_cmsis_lpspi_edma_b2b_transfer_master_cm0plus" name="cmsis_lpspi_edma_b2b_transfer_master_cm0plus" brief="The cmsis_lpspi_edma_b2b_transfer example shows how to use LPSPI CMSIS driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_edma_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in edma . " toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpspi" path="boards/frdmk32l3a6/cmsis_driver_examples/lpspi/edma_b2b_transfer/master/cm0plus">
          <external path="boards/frdmk32l3a6/cmsis_driver_examples/lpspi/edma_b2b_transfer/master/cm0plus" type="xml">
            <files mask="cmsis_lpspi_edma_b2b_transfer_master_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_cmsis_lpspi_edma_b2b_transfer_slave_cm0plus" name="cmsis_lpspi_edma_b2b_transfer_slave_cm0plus" brief="The cmsis_lpspi_edma_b2b_transfer example shows how to use LPSPI CMSIS driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_edma_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in edma . " toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpspi" path="boards/frdmk32l3a6/cmsis_driver_examples/lpspi/edma_b2b_transfer/slave/cm0plus">
          <external path="boards/frdmk32l3a6/cmsis_driver_examples/lpspi/edma_b2b_transfer/slave/cm0plus" type="xml">
            <files mask="cmsis_lpspi_edma_b2b_transfer_slave_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_cmsis_lpspi_int_b2b_transfer_master_cm0plus" name="cmsis_lpspi_int_b2b_transfer_master_cm0plus" brief="The cmsis_lpspi_int_b2b_transfer example shows how to use LPSPI CMSIS driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_int_b2b_transfer_master.c' includes the LPSPI master code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . " toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpspi" path="boards/frdmk32l3a6/cmsis_driver_examples/lpspi/int_b2b_transfer/master/cm0plus">
          <external path="boards/frdmk32l3a6/cmsis_driver_examples/lpspi/int_b2b_transfer/master/cm0plus" type="xml">
            <files mask="cmsis_lpspi_int_b2b_transfer_master_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_cmsis_lpspi_int_b2b_transfer_slave_cm0plus" name="cmsis_lpspi_int_b2b_transfer_slave_cm0plus" brief="The lpspi_int_b2b_transfer example shows how to use LPSPI CMSIS driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_int_b2b_transfer_slave.c' includes the LPSPI slave code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . " toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpspi" path="boards/frdmk32l3a6/cmsis_driver_examples/lpspi/int_b2b_transfer/slave/cm0plus">
          <external path="boards/frdmk32l3a6/cmsis_driver_examples/lpspi/int_b2b_transfer/slave/cm0plus" type="xml">
            <files mask="cmsis_lpspi_int_b2b_transfer_slave_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_cmsis_lpuart_interrupt_transfer_cm0plus" name="cmsis_lpuart_interrupt_transfer_cm0plus" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_interrupt_transfer example shows how to use uart cmsis driver in interrupt way:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpuart" path="boards/frdmk32l3a6/cmsis_driver_examples/lpuart/interrupt_transfer/cm0plus">
          <external path="boards/frdmk32l3a6/cmsis_driver_examples/lpuart/interrupt_transfer/cm0plus" type="xml">
            <files mask="cmsis_lpuart_interrupt_transfer_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_crc_cm0plus" name="crc_cm0plus" brief="The CRC Example project is a demonstration program that uses the KSDK software to generate checksumsfor an ASCII string. Several CRC protocols are implemented using the CRC driver API." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples" path="boards/frdmk32l3a6/driver_examples/crc/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/crc/cm0plus" type="xml">
            <files mask="crc_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dac_1_basic_cm0plus" name="dac_1_basic_cm0plus" brief="The dac_basic example shows how to use DAC module simply as the general DAC converter.When the DAC's buffer feature is not enabled, the first item of the buffer is used as the DAC output data register.The converter would always output the value of the first item. In this example, it gets the value from terminal,outputs the DAC output voltage through DAC output pin." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/dac" path="boards/frdmk32l3a6/driver_examples/dac/dac_basic/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/dac/dac_basic/cm0plus" type="xml">
            <files mask="dac_1_basic_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dac_1_buffer_interrupt_cm0plus" name="dac_1_buffer_interrupt_cm0plus" brief="The dac_buffer_interrupt example shows how to use DAC FIFO interrupt.When the DAC FIFO empty interrupt is enabled firstly, the application would enter the DAC ISR immediately, since the FIFO is actually empty. Then the FIFO would be feed inside the ISR. Then the DAC interrupt could be restrained. Once the DAC FIFO is triggered in while loop, the data in FIFO is read out, then it becomes empty, so the FIFO would be feed again in DAC ISR. With this example, user can define the DAC output array to generate the different wave output. Also the software trigger can be called in some timer ISR so that the DAC would output the analog signal in indicated period. Or even use the hardware trigger to release the CPU." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/dac" path="boards/frdmk32l3a6/driver_examples/dac/dac_buffer_interrupt/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/dac/dac_buffer_interrupt/cm0plus" type="xml">
            <files mask="dac_1_buffer_interrupt_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_edma_channel_link_cm0plus" name="edma_channel_link_cm0plus" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/edma" path="boards/frdmk32l3a6/driver_examples/edma/channel_link/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/edma/channel_link/cm0plus" type="xml">
            <files mask="edma_channel_link_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_edma_interleave_transfer_cm0plus" name="edma_interleave_transfer_cm0plus" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/edma" path="boards/frdmk32l3a6/driver_examples/edma/interleave_transfer/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/edma/interleave_transfer/cm0plus" type="xml">
            <files mask="edma_interleave_transfer_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_edma_memory_to_memory_cm0plus" name="edma_memory_to_memory_cm0plus" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/edma" path="boards/frdmk32l3a6/driver_examples/edma/memory_to_memory/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/edma/memory_to_memory/cm0plus" type="xml">
            <files mask="edma_memory_to_memory_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_edma_ping_pong_transfer_cm0plus" name="edma_ping_pong_transfer_cm0plus" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/edma" path="boards/frdmk32l3a6/driver_examples/edma/ping_pong_transfer/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/edma/ping_pong_transfer/cm0plus" type="xml">
            <files mask="edma_ping_pong_transfer_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_edma_scatter_gather_cm0plus" name="edma_scatter_gather_cm0plus" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/edma" path="boards/frdmk32l3a6/driver_examples/edma/scatter_gather/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/edma/scatter_gather/cm0plus" type="xml">
            <files mask="edma_scatter_gather_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_edma_wrap_transfer_cm0plus" name="edma_wrap_transfer_cm0plus" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/edma" path="boards/frdmk32l3a6/driver_examples/edma/wrap_transfer/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/edma/wrap_transfer/cm0plus" type="xml">
            <files mask="edma_wrap_transfer_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_erpc_matrix_multiply_mu_cm0plus" name="erpc_matrix_multiply_mu_cm0plus" brief="The Multicore eRPC Matrix Multiply project is a simple demonstration program that uses theMCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Callbetween cores of the multicore system. The primary core (eRPC client) releases the secondary core(eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let thesecondary core to perform the multiplication of two randomly generated matrices. The originalmatrices and the result matrix is printed out to the serial console by the primary core. Thematrix multiplication can be issued repeatedly when pressing a SW board button. MU (Messaging Unit)erpc transport layer is used in this example application.eRPC documentation eRPC specific files are stored in: middleware/multicore/erpc eRPC documentation is stored in: middleware/multicore/erpc/doc eRPC is open-source project stored on github: https://github.com/EmbeddedRPC/erpc eRPC documentation can be also found in: http://embeddedrpc.github.io" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" path="boards/frdmk32l3a6/multicore_examples/erpc_matrix_multiply_mu/cm0plus">
          <external path="boards/frdmk32l3a6/multicore_examples/erpc_matrix_multiply_mu/cm0plus" type="xml">
            <files mask="erpc_matrix_multiply_mu_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_erpc_matrix_multiply_mu_rtos_cm0plus" name="erpc_matrix_multiply_mu_rtos_cm0plus" brief="The Multicore eRPC Matrix Multiply RTOS project is a simple demonstration program that uses theMCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Callbetween cores of the multicore system. The primary core (eRPC client) releases the secondary core(eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let thesecondary core to perform the multiplication of two randomly generated matrices. The originalmatrices and the result matrix is printed out to the serial console by the primary core. Thematrix multiplication can be issued repeatedly when pressing a SW board button. MU (Messaging Unit)erpc transport layer is used in this example application.eRPC documentation eRPC specific files are stored in: middleware/multicore/erpc eRPC documentation is stored in: middleware/multicore/erpc/doc eRPC is open-source project stored on github: https://github.com/EmbeddedRPC/erpc eRPC documentation can be also found in: http://embeddedrpc.github.io" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" path="boards/frdmk32l3a6/multicore_examples/erpc_matrix_multiply_mu_rtos/cm0plus">
          <external path="boards/frdmk32l3a6/multicore_examples/erpc_matrix_multiply_mu_rtos/cm0plus" type="xml">
            <files mask="erpc_matrix_multiply_mu_rtos_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_erpc_matrix_multiply_rpmsg_cm0plus" name="erpc_matrix_multiply_rpmsg_cm0plus" brief="The Multicore eRPC Matrix Multiply project is a simple demonstration program that uses theMCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Callbetween cores of the multicore system. The primary core (eRPC client) releases the secondary core(eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let thesecondary core to perform the multiplication of two randomly generated matrices. The originalmatrices and the result matrix is printed out to the serial console by the primary core. Thematrix multiplication can be issued repeatedly when pressing a SW board button. RPMsg-Lite erpctransport layer is used in this example application.Shared memory usageThis multicore example uses the shared memory for data exchange. The shared memory region isdefined and the size can be adjustable in the linker file. The shared memory region start addressand the size have to be defined in linker file for each core equally. The shared memory startaddress is then exported from the linker to the application.eRPC documentationeRPC specific files are stored in: middleware/multicore_&lt;version&gt;/erpceRPC documentation is stored in: middleware/multicore_&lt;version&gt;/erpc/doceRPC is open-source project stored on github: https://github.com/EmbeddedRPC/erpceRPC documentation can be also found in: http://embeddedrpc.github.io" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" path="boards/frdmk32l3a6/multicore_examples/erpc_matrix_multiply_rpmsg/cm0plus">
          <external path="boards/frdmk32l3a6/multicore_examples/erpc_matrix_multiply_rpmsg/cm0plus" type="xml">
            <files mask="erpc_matrix_multiply_rpmsg_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_erpc_matrix_multiply_rpmsg_rtos_cm0plus" name="erpc_matrix_multiply_rpmsg_rtos_cm0plus" brief="The Multicore eRPC Matrix Multiply RTOS project is a simple demonstration program that uses theMCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Callbetween cores of the multicore system. The primary core (eRPC client) releases the secondary core(eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let thesecondary core to perform the multiplication of two randomly generated matrices. The originalmatrices and the result matrix is printed out to the serial console by the primary core. Thematrix multiplication can be issued repeatedly when pressing a SW board button. RPMsg-Lite erpctransport layer is used in this example application.Shared memory usageThis multicore example uses the shared memory for data exchange. The shared memory region isdefined and the size can be adjustable in the linker file. The shared memory region start addressand the size have to be defined in linker file for each core equally. The shared memory startaddress is then exported from the linker to the application.eRPC documentationeRPC specific files are stored in: middleware/multicore_&lt;version&gt;/erpceRPC documentation is stored in: middleware/multicore_&lt;version&gt;/erpc/doceRPC is open-source project stored on github: https://github.com/EmbeddedRPC/erpceRPC documentation can be also found in: http://embeddedrpc.github.io" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" path="boards/frdmk32l3a6/multicore_examples/erpc_matrix_multiply_rpmsg_rtos/cm0plus">
          <external path="boards/frdmk32l3a6/multicore_examples/erpc_matrix_multiply_rpmsg_rtos/cm0plus" type="xml">
            <files mask="erpc_matrix_multiply_rpmsg_rtos_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_erpc_two_way_rpc_rpmsg_rtos_cm0plus" name="erpc_two_way_rpc_rpmsg_rtos_cm0plus" brief="The Multicore eRPC Two Way RPC RTOS project is a simple demonstration program that uses the MCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Call between cores of the multicore system. This multicore example shows how both the eRPC client and the eRPC server can be setup on one side/core (bidirectional communication) and how to handle callback functions in eRPC. The primary core (Core0) creates client and server tasks first. The client task releases the secondary core from the reset, initializes the RPMsg-Lite erpc transport and once the server task is running it configures the arbitrated client. Then the application logic is running. The secondary core (Core1) creates client and server tasks two. The client task initializes the RPMsg-Lite erpc transport and once the server task is running it configures the arbitrated client. Then the application logic is running. The client task logic of the Core1 is very simple, it repeatedly calls the increaseNumber() erpc function that is implemented on the Core0 and that increments the counter. The client task logic of the Core0 alternately issues either getNumberFromCore0() function implementation on the Core0 or getNumberFromCore1() function implementation on the Core1 (erpc call). Then, the nestedCallGetNumber() erpc function call is issued that alternately triggers either getNumberFromCore1() function implementation on the Core1 (normal erpc call) or it triggers the getNumberFromCore0() function implementation on the Core0 (nested erpc call, routed through the Core1 erpc server)." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" path="boards/frdmk32l3a6/multicore_examples/erpc_two_way_rpc_rpmsg_rtos/cm0plus">
          <external path="boards/frdmk32l3a6/multicore_examples/erpc_two_way_rpc_rpmsg_rtos/cm0plus" type="xml">
            <files mask="erpc_two_way_rpc_rpmsg_rtos_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_ewm_cm0plus" name="ewm_cm0plus" brief="The EWM Example project is to demonstrate usage of the KSDK EWM driver.In the example, EWM counter is continuously refreshed until button is pressed.Once the button is pressed, EWM counter will expire and interrupt will be generated.After the first pressing, another interrupt can be triggered by pressing button again." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples" path="boards/frdmk32l3a6/driver_examples/ewm/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/ewm/cm0plus" type="xml">
            <files mask="ewm_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_flexio_i2c_interrupt_lpi2c_transfer_cm0plus" name="flexio_i2c_interrupt_lpi2c_transfer_cm0plus" brief="The flexio_lpi2c_interrupt example shows how to use flexio i2c master  driver in interrupt way:In this example, a flexio simulated i2c master connect to a LPI2C slave" toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/frdmk32l3a6/driver_examples/flexio/i2c/interrupt_lpi2c_transfer/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/flexio/i2c/interrupt_lpi2c_transfer/cm0plus" type="xml">
            <files mask="flexio_i2c_interrupt_lpi2c_transfer_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_flexio_i2c_read_accel_value_transfer_cm0plus" name="flexio_i2c_read_accel_value_transfer_cm0plus" brief="The flexio_i2c_read_accel_value example shows how to use FLEXIO I2C  Master driver to communicate with an i2c device: 1. How to use the flexio i2c master driver to read a i2c device who_am_I register. 2. How to use the flexio i2c master driver to write/read the device registers.In this example, the values of three-axis accelerometer print to the serial terminal on PC throughthe virtual serial port on board." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/frdmk32l3a6/driver_examples/flexio/i2c/read_accel_value_transfer/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/flexio/i2c/read_accel_value_transfer/cm0plus" type="xml">
            <files mask="flexio_i2c_read_accel_value_transfer_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_flexio_pwm_cm0plus" name="flexio_pwm_cm0plus" brief="This demo describes how to use SDK drivers to implement the PWM feature by FLEXIO IP module. It outputs the PWM singal with fixed frequency defined by &quot;DEMO_FLEXIO_FREQUENCY&quot; in source code and dynamic duty from 99 to 1 to one of the FLEXIO pin." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/frdmk32l3a6/driver_examples/flexio/pwm/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/flexio/pwm/cm0plus" type="xml">
            <files mask="flexio_pwm_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_flexio_spi_edma_lpspi_transfer_master_cm0plus" name="flexio_spi_edma_lpspi_transfer_master_cm0plus" brief="The flexio_spi_master_edma_lpspi_slave example shows how to use flexio spi master driver in edma way:In this example, a flexio simulated master connect to a lpspi slave ." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/frdmk32l3a6/driver_examples/flexio/spi/edma_lpspi_transfer/master/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/flexio/spi/edma_lpspi_transfer/master/cm0plus" type="xml">
            <files mask="flexio_spi_edma_lpspi_transfer_master_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_flexio_spi_edma_lpspi_transfer_slave_cm0plus" name="flexio_spi_edma_lpspi_transfer_slave_cm0plus" brief="The flexio_spi_slave_edma_lpspi_master example shows how to use flexio spi slave driver in edma way:In this example, a flexio simulated slave connect to a lpspi master." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/frdmk32l3a6/driver_examples/flexio/spi/edma_lpspi_transfer/slave/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/flexio/spi/edma_lpspi_transfer/slave/cm0plus" type="xml">
            <files mask="flexio_spi_edma_lpspi_transfer_slave_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_flexio_spi_int_lpspi_transfer_master_cm0plus" name="flexio_spi_int_lpspi_transfer_master_cm0plus" brief="The flexio_spi_master_interrupt_lpspi_slave example shows how to use flexio spi master driver in interrupt way. In this example, a flexio simulated master connect to a lpspi slave ." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/frdmk32l3a6/driver_examples/flexio/spi/int_lpspi_transfer/master/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/flexio/spi/int_lpspi_transfer/master/cm0plus" type="xml">
            <files mask="flexio_spi_int_lpspi_transfer_master_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_flexio_spi_int_lpspi_transfer_slave_cm0plus" name="flexio_spi_int_lpspi_transfer_slave_cm0plus" brief="The flexio_spi_slave_interrupt_lpspi_master example shows how to use flexio spi slave driver in interrupt way. In this example, a flexio simulated slave connect to a lpspi master." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/frdmk32l3a6/driver_examples/flexio/spi/int_lpspi_transfer/slave/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/flexio/spi/int_lpspi_transfer/slave/cm0plus" type="xml">
            <files mask="flexio_spi_int_lpspi_transfer_slave_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_flexio_uart_edma_transfer_cm0plus" name="flexio_uart_edma_transfer_cm0plus" brief="The flexio_uart_edma example shows how to use flexio uart driver in edma way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send back all charactersthat PC send to the board." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/frdmk32l3a6/driver_examples/flexio/uart/edma_transfer/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/flexio/uart/edma_transfer/cm0plus" type="xml">
            <files mask="flexio_uart_edma_transfer_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_flexio_uart_int_rb_transfer_cm0plus" name="flexio_uart_int_rb_transfer_cm0plus" brief="The flexio_uart_interrupt_ring_buffer example shows how to use flexio uart driver in interrupt way withRX ring buffer enabled:In this example, a flexio simulated uart connect to PC through USB-Serial, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/frdmk32l3a6/driver_examples/flexio/uart/int_rb_transfer/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/flexio/uart/int_rb_transfer/cm0plus" type="xml">
            <files mask="flexio_uart_int_rb_transfer_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_flexio_uart_interrupt_transfer_cm0plus" name="flexio_uart_interrupt_transfer_cm0plus" brief="The flexio_uart_interrupt example shows how to use flexio uart driver in interrupt way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send back all charactersthat PC send to the board. Note: two queued transfer in this example, so please input even number characters." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/frdmk32l3a6/driver_examples/flexio/uart/interrupt_transfer/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/flexio/uart/interrupt_transfer/cm0plus" type="xml">
            <files mask="flexio_uart_interrupt_transfer_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_flexio_uart_polling_transfer_cm0plus" name="flexio_uart_polling_transfer_cm0plus" brief="The flexio_uart_polling example shows how to use flexio uart driver in polling way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send backall characters that PC send to the board." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/frdmk32l3a6/driver_examples/flexio/uart/polling_transfer/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/flexio/uart/polling_transfer/cm0plus" type="xml">
            <files mask="flexio_uart_polling_transfer_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_fmstr_example_any_cm0plus" name="fmstr_example_any_cm0plus" brief="FreeMASTER example fully configured by MCUXpresso ConfigTools. Serial communication is used by default, but it can be changed easily to CAN or other in the MCUXpresso Peripheral Tool. Also FreeMASTER driver features are configured graphically in this tool. The Pins and Clock Tool are used to configure pin multiplexers and clocks. Just like other FreeMASTER examples, the application demonstrates use of FreeMASTER tool to visualize internal variables and to control the application flow by modifying variables. The application also shows use of advanced FreeMASTER features like TSA tables and Pipes." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="FreeMASTER_examples" path="boards/frdmk32l3a6/freemaster_examples/fmstr_any/cm0plus">
          <external path="boards/frdmk32l3a6/freemaster_examples/fmstr_any/cm0plus" type="xml">
            <files mask="fmstr_example_any_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_fmstr_example_pdbdm_cm0plus" name="fmstr_example_pdbdm_cm0plus" brief="FreeMASTER example using a special packet-driven protocol on top of JTAG or BDM direct memory access. This example application demonstrates use of FreeMASTER tool to visualize internal variables and to control the application flow by modifying variables. The application also shows use of advanced FreeMASTER features like TSA tables and Pipes." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="FreeMASTER_examples" path="boards/frdmk32l3a6/freemaster_examples/fmstr_pdbdm/cm0plus">
          <external path="boards/frdmk32l3a6/freemaster_examples/fmstr_pdbdm/cm0plus" type="xml">
            <files mask="fmstr_example_pdbdm_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_fmstr_example_uart_cm0plus" name="fmstr_example_uart_cm0plus" brief="FreeMASTER example using Serial-UART communication with the target microcontroller. This example application demonstrates use of FreeMASTER tool to visualize internal variables and to control the application flow by modifying variables. The application also shows use of advanced FreeMASTER features like TSA tables and Pipes." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="FreeMASTER_examples" path="boards/frdmk32l3a6/freemaster_examples/fmstr_uart/cm0plus">
          <external path="boards/frdmk32l3a6/freemaster_examples/fmstr_uart/cm0plus" type="xml">
            <files mask="fmstr_example_uart_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_lpspi_cm0plus" name="freertos_lpspi_cm0plus" brief="The lpspi_interrupt example shows how to use LPSPI driver in interrupt way:In this example , one lpspi instance used as LPSPI master and another lpspi instance used as LPSPI slave.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/frdmk32l3a6/rtos_examples/freertos_lpspi/cm0plus">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_lpspi/cm0plus" type="xml">
            <files mask="freertos_lpspi_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_lpspi_b2b_master_cm0plus" name="freertos_lpspi_b2b_master_cm0plus" brief="The freertos_lpspi_b2b_master example shows how to use LPSPI driver in FreeRTOS." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/frdmk32l3a6/rtos_examples/freertos_lpspi_b2b/master/cm0plus">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_lpspi_b2b/master/cm0plus" type="xml">
            <files mask="freertos_lpspi_b2b_master_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_lpspi_b2b_slave_cm0plus" name="freertos_lpspi_b2b_slave_cm0plus" brief="The freertos_lpspi_b2b_slave example shows how to use LPSPI driver in FreeRTOS." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/frdmk32l3a6/rtos_examples/freertos_lpspi_b2b/slave/cm0plus">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_lpspi_b2b/slave/cm0plus" type="xml">
            <files mask="freertos_lpspi_b2b_slave_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_lpuart_cm0plus" name="freertos_lpuart_cm0plus" brief="The LPUART example for FreeRTOS demonstrates the possibility to use the LPUART driver in the RTOS.The example uses single instance of LPUART IP and writes string into, then reads back chars.After every 4B received, these are sent back on LPUART." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/frdmk32l3a6/rtos_examples/freertos_lpuart/cm0plus">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_lpuart/cm0plus" type="xml">
            <files mask="freertos_lpuart_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_message_buffers_cm0plus" name="freertos_message_buffers_cm0plus" brief="The FreeRTOS Message Buffers multicore project is a simple demonstration program that uses the MCUXpresso SDK software and the Message Buffers component of FreeRTOS. It shows how to implement lightweight core to core communication using FreeRTOS Message Buffers, which are lockless circular buffers that can pass data packets of varying sizes from a single sender to a single receiver. The primary core releases the secondary core from the reset and then the inter-core communication is established then. Once the Message Buffers are initialized on both cores the message exchange starts, incrementing a virtual counter that is part of the message payload. The message pingpong finishes when the counter reaches the value of 100. The Message Buffer is deinitialized at the end. NXP Multicore Manager (MCMGR) component is used for several purposes in this example: - it releases the secondary core from the reset (starts the secondary code) - it registers and use the application event for init handshaking (the secondary core application signals to the primary core it is ready to communicate) - it registers and use the FreeRtosMessageBuffersEvent for inter-core interrupts triggering and interrupts handling. Shared memory usage: This multicore example uses the shared memory for data exchange. The shared memory region is defined and the size can be adjustable in the linker file. The shared memory region start address and the size have to be defined in linker file for each core equally. The shared memory start address is then exported from the linker to the application to allow placing FreeRTOS Message Buffers at a fixed location that is then known for both cores." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" path="boards/frdmk32l3a6/multicore_examples/freertos_message_buffers/cm0plus">
          <external path="boards/frdmk32l3a6/multicore_examples/freertos_message_buffers/cm0plus" type="xml">
            <files mask="freertos_message_buffers_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_mutex_cm0plus" name="freertos_mutex_cm0plus" brief="This document explains the freertos_mutex example. It shows how mutex manage access to commonresource (terminal output).The example application creates two identical instances of write_task. Each task will lock the mutexbefore printing and unlock it after printing to ensure that the outputs from tasks are not mixedtogether.The test_task accept output message during creation as function parameter. Output message have twoparts. If xMutex is unlocked, the write_task_1 acquire xMutex and print first part of message. Thenrescheduling is performed. In this moment scheduler check if some other task could run, but secondtask write_task+_2 is blocked because xMutex is already locked by first write task. The firstwrite_task_1 continue from last point by printing of second message part. Finaly the xMutex isunlocked and second instance of write_task_2 is executed." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/frdmk32l3a6/rtos_examples/freertos_mutex/cm0plus">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_mutex/cm0plus" type="xml">
            <files mask="freertos_mutex_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_queue_cm0plus" name="freertos_queue_cm0plus" brief="This document explains the freertos_queue example. This example introduce simple logging mechanismbased on message passing.Example could be devided in two parts. First part is logger. It contain three tasks:log_add().....Add new message into the log. Call xQueueSend function to pass new message into              message queue.log_init()....Initialize logger (create logging task and message queue log_queue).log_task()....Task responsible for printing of log output.Second part is application of this simple logging mechanism. Each of two tasks write_task_1 andwrite_task_2 print 5 messages into log." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/frdmk32l3a6/rtos_examples/freertos_queue/cm0plus">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_queue/cm0plus" type="xml">
            <files mask="freertos_queue_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_sem_cm0plus" name="freertos_sem_cm0plus" brief="This document explains the freertos_sem example, what to expect when running it and a briefintroduction to the API. The freertos_sem example code shows how semaphores works. Two differenttasks are synchronized in bilateral rendezvous model.The example uses four tasks. One producer_task and three consumer_tasks. The producer_task starts bycreating of two semaphores (xSemaphore_producer and xSemaphore_consumer). These semaphores controlaccess to virtual item. The synchronization is based on bilateral rendezvous pattern. Both ofconsumer and producer must be prepared to enable transaction." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/frdmk32l3a6/rtos_examples/freertos_sem/cm0plus">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_sem/cm0plus" type="xml">
            <files mask="freertos_sem_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_sem_static_cm0plus" name="freertos_sem_static_cm0plus" brief="This document explains the freertos_sem example, what to expect when running it and a briefintroduction to the API. The freertos_sem example code shows how semaphores works. Two differenttasks are synchronized in bilateral rendezvous model.The example uses four tasks. One producer_task and three consumer_tasks. The producer_task starts bycreating of two semaphores (xSemaphore_producer and xSemaphore_consumer). These semaphores controlaccess to virtual item. The synchronization is based on bilateral rendezvous pattern. Both ofconsumer and producer must be prepared to enable transaction." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/frdmk32l3a6/rtos_examples/freertos_sem_static/cm0plus">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_sem_static/cm0plus" type="xml">
            <files mask="freertos_sem_static_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_swtimer_cm0plus" name="freertos_swtimer_cm0plus" brief="This document explains the freertos_swtimer example. It shows usage of software timer and itscallback.The example application creates one software timer SwTimer. The timer's callback SwTimerCallback isperiodically executed and text &quot;Tick.&quot; is printed to terminal." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/frdmk32l3a6/rtos_examples/freertos_swtimer/cm0plus">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_swtimer/cm0plus" type="xml">
            <files mask="freertos_swtimer_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_tickless_cm0plus" name="freertos_tickless_cm0plus" brief="This document explains the freertos_tickless example. It shows the CPU enter at sleep mode and then it is waked up by expired time delay that using GPT module." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/frdmk32l3a6/rtos_examples/freertos_tickless/cm0plus">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_tickless/cm0plus" type="xml">
            <files mask="freertos_tickless_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_gpio_input_interrupt_cm0plus" name="gpio_input_interrupt_cm0plus" brief="The GPIO Example project is a demonstration program that uses the KSDK software to manipulate the general-purposeoutputs.The example is supported by the set, clear, and toggle write-only registers for each port output data register. The example uses the software button to control/toggle the LED." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/gpio" path="boards/frdmk32l3a6/driver_examples/gpio/input_interrupt/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/gpio/input_interrupt/cm0plus" type="xml">
            <files mask="gpio_input_interrupt_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_gpio_led_output_cm0plus" name="gpio_led_output_cm0plus" brief="The GPIO Example project is a demonstration program that uses the KSDK software to manipulate the general-purposeoutputs.The example is supported by the set, clear, and toggle write-only registers for each port output data register. The example take turns to shine the LED." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/gpio" path="boards/frdmk32l3a6/driver_examples/gpio/led_output/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/gpio/led_output/cm0plus" type="xml">
            <files mask="gpio_led_output_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_hello_world_demo_cm0plus" name="hello_world_demo_cm0plus" brief="The HelloWorld demo prints the &quot;Hello World&quot; string to the terminal using the SDK UART drivers and repeat what user input. The purpose of this demo is to show how to use the UART, and to provide a simple project for debugging and further development." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/frdmk32l3a6/demo_apps/hello_world/cm0plus">
          <external path="boards/frdmk32l3a6/demo_apps/hello_world/cm0plus" type="xml">
            <files mask="hello_world_demo_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_hello_world_cm0plus" name="hello_world_cm0plus" brief="The Multicore Hello World demo application demonstrates how to set up projects for individualcores on a multicore system. In this demo, the primary core prints the &quot;Hello World from the Primary Core!&quot;string to the terminal and then releases the secondary core from the reset. The secondarycore toggles an on-board LED indicating that the secondary core is running." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" path="boards/frdmk32l3a6/multicore_examples/hello_world/cm0plus">
          <external path="boards/frdmk32l3a6/multicore_examples/hello_world/cm0plus" type="xml">
            <files mask="hello_world_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_log_bm_cm0plus" name="log_bm_cm0plus" brief="The log demo is used to demonstrate how to use log component. The main function of the demo is to prompt the LOG level string according to the user input log level command." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="component_examples" path="boards/frdmk32l3a6/component_examples/log/bm/cm0plus">
          <external path="boards/frdmk32l3a6/component_examples/log/bm/cm0plus" type="xml">
            <files mask="log_bm_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_log_freertos_cm0plus" name="log_freertos_cm0plus" brief="The log demo is used to demonstrate how to use log component. The main function of the demo is to prompt the LOG level string according to the user input log level command." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="component_examples" path="boards/frdmk32l3a6/component_examples/log/freertos/cm0plus">
          <external path="boards/frdmk32l3a6/component_examples/log/freertos/cm0plus" type="xml">
            <files mask="log_freertos_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpadc_interrupt_cm0plus" name="lpadc_interrupt_cm0plus" brief="The lpadc_interrupt example shows how to use interrupt with LPADC driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the LPADC'ssample input. When running the project, typing any key into debug console would trigger the conversion. ADC watermark interrupt would be asserted once the number of datawords stored in the ADC Result FIFO is greater than watermark value.In ADC ISR, the watermark flag would be cleared by reading the conversion result value. Also, result information wouldbe printed when the execution return to the main function." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpadc" path="boards/frdmk32l3a6/driver_examples/lpadc/interrupt/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpadc/interrupt/cm0plus" type="xml">
            <files mask="lpadc_interrupt_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpadc_polling_cm0plus" name="lpadc_polling_cm0plus" brief="The lpadc_single_polling example shows the simplest way to use LPADC driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the LPADC'ssample input. When running the project, typing any key into debug console would trigger the conversion. The execution would check the FIFO valid flag in loop until the flag is asserted, which means the conversion is completed. Then read the conversion result value and print it to debug console.Note, the default setting of initialization for the ADC converter is just an available configuration. User can changethe configuration structure's setting in application to fit the special requirement." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpadc" path="boards/frdmk32l3a6/driver_examples/lpadc/polling/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpadc/polling/cm0plus" type="xml">
            <files mask="lpadc_polling_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpcmp_interrupt_cm0plus" name="lpcmp_interrupt_cm0plus" brief="The LPCMP interrupt Example shows how to use interrupt with LPCMP driver.In this example, user should indicate an input channel to capture a voltage signal (can be controlled by user) as the LPCMP's positive channel input. On the negative side, the internal 6-bit DAC is used to generate the fixed voltage abouthalf value of reference voltage.When running the project, change the input voltage of user-defined channel, then the comparator's output would changebetween logic one and zero when the user-defined channel's voltage crosses the internal DAC's value. The change ofcomparator's output would generate the falling and rising edge events with their interrupts enabled. When any LPCMP interrupt happens, the LPCMP's ISR would turn on the LED light if detecting the output's rising edge, or turn off it whendetecting the output's falling edge." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpcmp" path="boards/frdmk32l3a6/driver_examples/lpcmp/interrupt/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpcmp/interrupt/cm0plus" type="xml">
            <files mask="lpcmp_interrupt_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpcmp_polling_cm0plus" name="lpcmp_polling_cm0plus" brief="The LPCMP polling Example shows the simplest way to use LPCMP driver and help user with a quick start.In this example, user should indicate an input channel to capture a voltage signal (can be controlled by user) as the LPCMP's positive channel input. On the negative side, the internal 6-bit DAC is used to generate the fixed voltage abouthalf value of reference voltage.When running the project, change the input voltage of user-defined channel, then the comparator's output would changebetween logic one and zero when the user's voltage crosses the internal DAC's value. The endless loop in main() functionwould detect the logic value of comparator's output, and change the LED. The LED would be turned on when the compareoutput is logic one, or turned off when zero." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpcmp" path="boards/frdmk32l3a6/driver_examples/lpcmp/polling/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpcmp/polling/cm0plus" type="xml">
            <files mask="lpcmp_polling_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpi2c_edma_b2b_transfer_master_cm0plus" name="lpi2c_edma_b2b_transfer_master_cm0plus" brief="The lpi2c_edma_b2b_transfer_master example shows how to use lpi2c driver as master to do board to board transfer with EDMA:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/frdmk32l3a6/driver_examples/lpi2c/edma_b2b_transfer/master/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpi2c/edma_b2b_transfer/master/cm0plus" type="xml">
            <files mask="lpi2c_edma_b2b_transfer_master_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpi2c_edma_b2b_transfer_slave_cm0plus" name="lpi2c_edma_b2b_transfer_slave_cm0plus" brief="The lpi2c_edma_b2b_transfer_slave example shows how to use lpi2c driver as slave to do board to board transfer with a EDMA master:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/frdmk32l3a6/driver_examples/lpi2c/edma_b2b_transfer/slave/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpi2c/edma_b2b_transfer/slave/cm0plus" type="xml">
            <files mask="lpi2c_edma_b2b_transfer_slave_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpi2c_interrupt_cm0plus" name="lpi2c_interrupt_cm0plus" brief="The lpi2c_functional_interrupt example shows how to use lpi2c functional driver to build a interrupt based application:In this example , one lpi2c instance used as lpi2c master and another lpi2c instance used as lpi2c slave .1. lpi2c master send data using interrupt to lpi2c slave in interrupt .2. lpi2c master read data using interrupt from lpi2c slave in interrupt .3. The example assumes that the connection is OK between master and slave, so there's NO error handling code." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/frdmk32l3a6/driver_examples/lpi2c/interrupt/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpi2c/interrupt/cm0plus" type="xml">
            <files mask="lpi2c_interrupt_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpi2c_interrupt_b2b_transfer_master_cm0plus" name="lpi2c_interrupt_b2b_transfer_master_cm0plus" brief="The lpi2c_interrupt_b2b_transfer_master example shows how to use lpi2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/frdmk32l3a6/driver_examples/lpi2c/interrupt_b2b_transfer/master/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpi2c/interrupt_b2b_transfer/master/cm0plus" type="xml">
            <files mask="lpi2c_interrupt_b2b_transfer_master_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpi2c_interrupt_b2b_transfer_slave_cm0plus" name="lpi2c_interrupt_b2b_transfer_slave_cm0plus" brief="The lpi2c_interrupt_b2b_transfer_slave example shows how to use lpi2c driver as slave to do board to board transfer with interrupt:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/frdmk32l3a6/driver_examples/lpi2c/interrupt_b2b_transfer/slave/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpi2c/interrupt_b2b_transfer/slave/cm0plus" type="xml">
            <files mask="lpi2c_interrupt_b2b_transfer_slave_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpi2c_polling_b2b_master_cm0plus" name="lpi2c_polling_b2b_master_cm0plus" brief="The lpi2c_polling_b2b_master example shows how to use lpi2c driver as master to do board to board transfer using polling method:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/frdmk32l3a6/driver_examples/lpi2c/polling_b2b/master/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpi2c/polling_b2b/master/cm0plus" type="xml">
            <files mask="lpi2c_polling_b2b_master_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpi2c_polling_b2b_slave_cm0plus" name="lpi2c_polling_b2b_slave_cm0plus" brief="The lpi2c_polling_b2b_slave example shows how to use lpi2c driver as slave to do board to board transfer with a polling master:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/frdmk32l3a6/driver_examples/lpi2c/polling_b2b/slave/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpi2c/polling_b2b/slave/cm0plus" type="xml">
            <files mask="lpi2c_polling_b2b_slave_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpi2c_read_accel_value_transfer_cm0plus" name="lpi2c_read_accel_value_transfer_cm0plus" brief="The lpi2c_read_accel_value example shows how to use LPI2C driver to communicate with an lpi2c device: 1. How to use the lpi2c driver to read a lpi2c device who_am_I register. 2. How to use the lpi2c driver to write/read the device registers.In this example, the values of three-axis accelerometer print to the serial terminal on PC throughthe virtual serial port on board." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/frdmk32l3a6/driver_examples/lpi2c/read_accel_value_transfer/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpi2c/read_accel_value_transfer/cm0plus" type="xml">
            <files mask="lpi2c_read_accel_value_transfer_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpit_chained_channel_cm0plus" name="lpit_chained_channel_cm0plus" brief="The LPIT chained channel project is a simple example of the SDK LPIT driver. It sets up the LPIT hardware block to trigger a periodic interrupt after every 1 second in the channel No.0, the channel No.1 chained with channel No.0, if LPIT contain more than two channels, the channel No.2 chained with channel No.1....the channel No.N chained with Channel No.N-1. When the LPIT interrupt is triggered." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpit" path="boards/frdmk32l3a6/driver_examples/lpit/chained_channel/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpit/chained_channel/cm0plus" type="xml">
            <files mask="lpit_chained_channel_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpit_single_channel_cm0plus" name="lpit_single_channel_cm0plus" brief="The LPIT single channel project is a simple example of the SDK LPIT driver. It sets up the LPIThardware block to trigger a periodic interrupt after every 1 second. When the LPIT interrupt is triggereda message a printed on the serial terminal and an LED is toggled on the board." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpit" path="boards/frdmk32l3a6/driver_examples/lpit/single_channel/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpit/single_channel/cm0plus" type="xml">
            <files mask="lpit_single_channel_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpspi_edma_b2b_transfer_master_cm0plus" name="lpspi_edma_b2b_transfer_master_cm0plus" brief="The lpspi_edma_b2b_transfer example shows how to use LPSPI driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_edma_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in edma . (LPSPI Slave using edma to receive/send the data)" toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/frdmk32l3a6/driver_examples/lpspi/edma_b2b_transfer/master/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpspi/edma_b2b_transfer/master/cm0plus" type="xml">
            <files mask="lpspi_edma_b2b_transfer_master_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpspi_edma_b2b_transfer_slave_cm0plus" name="lpspi_edma_b2b_transfer_slave_cm0plus" brief="The lpspi_edma_b2b_transfer example shows how to use LPSPI driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_edma_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in edma . (LPSPI Slave using edma to receive/send the data)" toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/frdmk32l3a6/driver_examples/lpspi/edma_b2b_transfer/slave/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpspi/edma_b2b_transfer/slave/cm0plus" type="xml">
            <files mask="lpspi_edma_b2b_transfer_slave_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpspi_interrupt_cm0plus" name="lpspi_interrupt_cm0plus" brief="The lpspi_functional_interrupt example shows how to use LPSPI driver in interrupt way:In this example , one lpspi instance used as LPSPI master and another lpspi instance used as LPSPI slave .1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/frdmk32l3a6/driver_examples/lpspi/interrupt/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpspi/interrupt/cm0plus" type="xml">
            <files mask="lpspi_interrupt_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpspi_interrupt_b2b_master_cm0plus" name="lpspi_interrupt_b2b_master_cm0plus" brief="The lpspi_interrupt_b2b example shows how to use LPSPI driver in interrupt way:In this example , we need two boards , one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_interrupt_b2b_master.c' includes the LPSPI master code.This example does not use the transactional API in LPSPI driver. It's a demonstration that how to use the interrupt in KSDK driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/frdmk32l3a6/driver_examples/lpspi/interrupt_b2b/master/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpspi/interrupt_b2b/master/cm0plus" type="xml">
            <files mask="lpspi_interrupt_b2b_master_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpspi_interrupt_b2b_slave_cm0plus" name="lpspi_interrupt_b2b_slave_cm0plus" brief="The lpspi_interrupt_b2b example shows how to use LPSPI driver in interrupt way:In this example , we need two boards , one board used as LPSPI master and another board used as LPSPI slave.The file 'dspi_interrupt_b2b_slave.c' includes the LPSPI slave code.This example does not use the transactional API in LPSPI driver. It's a demonstration that how to use the interrupt in KSDK driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/frdmk32l3a6/driver_examples/lpspi/interrupt_b2b/slave/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpspi/interrupt_b2b/slave/cm0plus" type="xml">
            <files mask="lpspi_interrupt_b2b_slave_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpspi_interrupt_b2b_transfer_master_cm0plus" name="lpspi_interrupt_b2b_transfer_master_cm0plus" brief="The lpspi_interrupt_b2b_transfer example shows how to use LPSPI driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_interrupt_b2b_transfer_master.c' includes the LPSPI master code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/frdmk32l3a6/driver_examples/lpspi/interrupt_b2b_transfer/master/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpspi/interrupt_b2b_transfer/master/cm0plus" type="xml">
            <files mask="lpspi_interrupt_b2b_transfer_master_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpspi_interrupt_b2b_transfer_slave_cm0plus" name="lpspi_interrupt_b2b_transfer_slave_cm0plus" brief="The lpspi_interrupt_b2b_transfer example shows how to use LPSPI driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_interrupt_b2b_transfer_slave.c' includes the LPSPI slave code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/frdmk32l3a6/driver_examples/lpspi/interrupt_b2b_transfer/slave/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpspi/interrupt_b2b_transfer/slave/cm0plus" type="xml">
            <files mask="lpspi_interrupt_b2b_transfer_slave_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpspi_polling_b2b_transfer_master_cm0plus" name="lpspi_polling_b2b_transfer_master_cm0plus" brief="The lpspi_polling_b2b_transfer example shows how to use LPSPI driver in polling way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_polling_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in polling . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/frdmk32l3a6/driver_examples/lpspi/polling_b2b_transfer/master/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpspi/polling_b2b_transfer/master/cm0plus" type="xml">
            <files mask="lpspi_polling_b2b_transfer_master_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpspi_polling_b2b_transfer_slave_cm0plus" name="lpspi_polling_b2b_transfer_slave_cm0plus" brief="The lpspi_polling_b2b_transfer example shows how to use LPSPI driver in polling way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_polling_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in polling . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/frdmk32l3a6/driver_examples/lpspi/polling_b2b_transfer/slave/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpspi/polling_b2b_transfer/slave/cm0plus" type="xml">
            <files mask="lpspi_polling_b2b_transfer_slave_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lptmr_cm0plus" name="lptmr_cm0plus" brief="The LPTMR project is a simple demonstration program of the SDK LPTMR driver. It sets up the LPTMRhardware block to trigger a periodic interrupt after every 1 second. When the LPTMR interrupt is triggereda message a printed on the UART terminal and an LED is toggled on the board." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples" path="boards/frdmk32l3a6/driver_examples/lptmr/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lptmr/cm0plus" type="xml">
            <files mask="lptmr_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpuart_interrupt_cm0plus" name="lpuart_interrupt_cm0plus" brief="The lpuart_functioncal_interrupt example shows how to use lpuart driver functionalAPI to receive data with interrupt method:In this example, one lpuart instance connect to PC, the board willsend back all characters that PC send to the board." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/frdmk32l3a6/driver_examples/lpuart/interrupt/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpuart/interrupt/cm0plus" type="xml">
            <files mask="lpuart_interrupt_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpuart_interrupt_rb_transfer_cm0plus" name="lpuart_interrupt_rb_transfer_cm0plus" brief="The lpuart_interrupt_ring_buffer Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/frdmk32l3a6/driver_examples/lpuart/interrupt_rb_transfer/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpuart/interrupt_rb_transfer/cm0plus" type="xml">
            <files mask="lpuart_interrupt_rb_transfer_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpuart_interrupt_transfer_cm0plus" name="lpuart_interrupt_transfer_cm0plus" brief="The lpuart_interrupt Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/frdmk32l3a6/driver_examples/lpuart/interrupt_transfer/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpuart/interrupt_transfer/cm0plus" type="xml">
            <files mask="lpuart_interrupt_transfer_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpuart_interrupt_transfer_seven_bits_cm0plus" name="lpuart_interrupt_transfer_seven_bits_cm0plus" brief="The lpuart_interrupt_transfer_seven_bits Example project is to demonstrate usage of the KSDK lpuart driver with seven data bits feature enabled.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters.NOTE: Please set com port format to &quot;7 data bits without parity bit&quot; in PC's com port tool" toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/frdmk32l3a6/driver_examples/lpuart/interrupt_transfer_seven_bits/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpuart/interrupt_transfer_seven_bits/cm0plus" type="xml">
            <files mask="lpuart_interrupt_transfer_seven_bits_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpuart_polling_cm0plus" name="lpuart_polling_cm0plus" brief="The lpuart_polling Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console instantly." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/frdmk32l3a6/driver_examples/lpuart/polling/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpuart/polling/cm0plus" type="xml">
            <files mask="lpuart_polling_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpuart_polling_seven_bits_cm0plus" name="lpuart_polling_seven_bits_cm0plus" brief="The lpuart_polling_seven_bits Example project is to demonstrate usage of the KSDK lpuart driver with seven data bits feature enabled.In the example, you can send characters to the console back and they will be printed out onto console instantly.NOTE: Please set com port format to &quot;7 data bits without parity bit&quot; in PC's com port tool" toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/frdmk32l3a6/driver_examples/lpuart/polling_seven_bits/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/lpuart/polling_seven_bits/cm0plus" type="xml">
            <files mask="lpuart_polling_seven_bits_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_mbedtls_benchmark_cm0plus" name="mbedtls_benchmark_cm0plus" brief="The mbdedTLS Benchmark demo application performs cryptographic algorithm benchmarking and prints results to theterminal." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="mbedtls_examples" path="boards/frdmk32l3a6/mbedtls_examples/mbedtls_benchmark/cm0plus">
          <external path="boards/frdmk32l3a6/mbedtls_examples/mbedtls_benchmark/cm0plus" type="xml">
            <files mask="mbedtls_benchmark_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_mbedtls_selftest_cm0plus" name="mbedtls_selftest_cm0plus" brief="The mbdedTLS SelfTest program performs cryptographic algorithm testing and prints results to theterminal." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="mbedtls_examples" path="boards/frdmk32l3a6/mbedtls_examples/mbedtls_selftest/cm0plus">
          <external path="boards/frdmk32l3a6/mbedtls_examples/mbedtls_selftest/cm0plus" type="xml">
            <files mask="mbedtls_selftest_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_mmdvsq_cm0plus" name="mmdvsq_cm0plus" brief="The MMDVSQ Example project is a demonstration program that uses the KSDK software to Calculation square root and QuotientMMDVSQ Peripheral Driver ExampleStart MMDVSQ ExampleCalculation square root, please enter radicandSquare root of 9 is 3Calculation division to get remainder and quotientEnter dividend and divisorRemainder of 10 and 5 is 0Quotient of 10 and 5 is 2" toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples" path="boards/frdmk32l3a6/driver_examples/mmdvsq/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/mmdvsq/cm0plus" type="xml">
            <files mask="mmdvsq_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_mu_interrupt_core1" name="mu_interrupt_core1" brief="The mu_interrupt example shows how to use MU driver in interrupt way:In this example:1. Core 0 send message to Core 1 in interrupt mode via MU module.2. Core 1 send message back to Core 0 in interrupt mode.3. Core 0 receive message sent from Core 1 in interrupt mode." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/mu" path="boards/frdmk32l3a6/driver_examples/mu/interrupt/core1">
          <external path="boards/frdmk32l3a6/driver_examples/mu/interrupt/core1" type="xml">
            <files mask="mu_interrupt_core1_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_mu_polling_core1" name="mu_polling_core1" brief="The mu_polling example shows how to use MU driver in polling way:In this example:1. Core 0 send message to Core 1 in polling mode via MU module.2. Core 1 send message back to Core 0 in polling mode.3. Core 0 receive message sent from Core 1 in polling mode." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/mu" path="boards/frdmk32l3a6/driver_examples/mu/polling/core1">
          <external path="boards/frdmk32l3a6/driver_examples/mu/polling/core1" type="xml">
            <files mask="mu_polling_core1_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_multicore_manager_cm0plus" name="multicore_manager_cm0plus" brief="The Multicore Manager example application demonstrates advanced features of the MCMgr component.&#10;In this demo, the primary core prints the &quot;Hello World from the Primary Core!&quot; string to the terminal&#10;and then releases the secondary core from the reset. The secondary&#10;core toggles an on-board LED indicating that the secondary core is running. It is also possible to&#10;stop/start the secondary core during the runtime by pressing on-board buttons. The&#10;on-board LED then indicates the change, it stops/starts toggling accordingly.&#10;&#10;This application also shows how to use the Multicore Manager for&#10;remote core monitoring and handling of events such as application, CoreUp, CoreDown and exception events.&#10;Application-specific callback functions for events are registered by the MCMGR_RegisterEvent() API&#10;on the primary core. Triggering these events is done using the MCMGR_TriggerEvent() API on the&#10;secondary core. While CoreUp, CoreDown events are triggered from startup and MCMGR code, the&#10;application event is triggered from the application.&#10;The exception event is triggered in the secondary application after 100 LED toggles by trying&#10;to write to flash. This raises the exception on the secondary core and triggers the&#10;RemoteExceptionEvent on the primary core.&#10;" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" path="boards/frdmk32l3a6/multicore_examples/multicore_manager/cm0plus">
          <external path="boards/frdmk32l3a6/multicore_examples/multicore_manager/cm0plus" type="xml">
            <files mask="multicore_manager_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_pflash_cm0plus" name="pflash_cm0plus" brief="The pflash example shows how to use flash driver to operate program flash:" toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flash" path="boards/frdmk32l3a6/driver_examples/flash/pflash/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/flash/pflash/cm0plus" type="xml">
            <files mask="pflash_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_power_mode_switch_cm0plus" name="power_mode_switch_cm0plus" brief="The IEE IEER MMDC demo application demonstrates usage of the IEE and IEER driver. The Inline Encryption Engine (IEE) together with Inline Encryption Engine Router (IEER) provides a means to perform inline encryption and decryption of information transferred over external memory interfaces. In this demo application encrypted read and write is performed to external DDR Ram using MMDC. At first IEE is configured to perform AES XTS encryprion/decryption using KEY1 &amp; KEY2 for region 3 (highest priority region). Offset setting for region 3 is calculated using IEE_GetOffset() function. IEE uses offset to determine the physical address of the memory location that you are accessing. Offset is added to IEE address when performing read or write access to IEE. Then IEER is set to cover all its address space for region 3. Now all data written/read to/from IEE address will be encrypted/decrypted and written/read to/from physical DDR memory. Then test data are written over IEE to DDR. After the successful write, data are read directly from the DDR (without using IEE) to see that they are crypted. Then read using IEE is performed and the data are compared to written data in the begining of this demo." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/frdmk32l3a6/demo_apps/power_mode_switch/cm0plus">
          <external path="boards/frdmk32l3a6/demo_apps/power_mode_switch/cm0plus" type="xml">
            <files mask="power_mode_switch_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_rpmsg_lite_pingpong_cm0plus" name="rpmsg_lite_pingpong_cm0plus" brief="The Multicore RPMsg-Lite pingpong project is a simple demonstration program that uses theMCUXpresso SDK software and the RPMsg-Lite library and shows how to implement the inter-corecommunicaton between cores of the multicore system. The primary core releases the secondary corefrom the reset and then the inter-core communication is established. Once the RPMsg is initializedand endpoints are created the message exchange starts, incrementing a virtual counter that is partof the message payload. The message pingpong finishes when the counter reaches the value of 100.Then the RPMsg-Lite is deinitialized and the procedure of the data exchange is repeated again.Shared memory usageThis multicore example uses the shared memory for data exchange. The shared memory region isdefined and the size can be adjustable in the linker file. The shared memory region start addressand the size have to be defined in linker file for each core equally. The shared memory startaddress is then exported from the linker to the application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" path="boards/frdmk32l3a6/multicore_examples/rpmsg_lite_pingpong/cm0plus">
          <external path="boards/frdmk32l3a6/multicore_examples/rpmsg_lite_pingpong/cm0plus" type="xml">
            <files mask="rpmsg_lite_pingpong_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_rpmsg_lite_pingpong_rtos_cm0plus" name="rpmsg_lite_pingpong_rtos_cm0plus" brief="The Multicore RPMsg-Lite pingpong RTOS project is a simple demonstration program that uses theMCUXpresso SDK software and the RPMsg-Lite library and shows how to implement the inter-corecommunicaton between cores of the multicore system. The primary core releases the secondary corefrom the reset and then the inter-core communication is established. Once the RPMsg is initializedand endpoints are created the message exchange starts, incrementing a virtual counter that is partof the message payload. The message pingpong finishes when the counter reaches the value of 100.Then the RPMsg-Lite is deinitialized and the procedure of the data exchange is repeated again.Shared memory usageThis multicore example uses the shared memory for data exchange. The shared memory region isdefined and the size can be adjustable in the linker file. The shared memory region start addressand the size have to be defined in linker file for each core equally. The shared memory startaddress is then exported from the linker to the application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" path="boards/frdmk32l3a6/multicore_examples/rpmsg_lite_pingpong_rtos/cm0plus">
          <external path="boards/frdmk32l3a6/multicore_examples/rpmsg_lite_pingpong_rtos/cm0plus" type="xml">
            <files mask="rpmsg_lite_pingpong_rtos_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_rtc_cm0plus" name="rtc_cm0plus" brief="The RTC project is a simple demonstration program of the SDK RTC driver. It sets up the RTChardware block to trigger an alarm after a user specified time period. The test will set the currentdate and time to a predefined value. The alarm will be set with reference to this predefined dateand time." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples" path="boards/frdmk32l3a6/driver_examples/rtc/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/rtc/cm0plus" type="xml">
            <files mask="rtc_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_rtc_func_cm0plus" name="rtc_func_cm0plus" brief="The RTC demo application demonstrates the important features of the RTC Module by using the RTC Peripheral Driver.The RTC demo supports the following features:- Calendar  + Get the current date time with Year, Month, Day, Hour, Minute, and Second.  + Set the current date time with Year, Month, Day, Hour, Minute, and Second.- Alarm  + Set the alarm based on the current time.  + Application prints a notification when the alarm expires.- Seconds interrupt  + Use second interrupt function to display a digital time blink every second." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/frdmk32l3a6/demo_apps/rtc_func/cm0plus">
          <external path="boards/frdmk32l3a6/demo_apps/rtc_func/cm0plus" type="xml">
            <files mask="rtc_func_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_sdcard_fatfs_cm0plus" name="sdcard_fatfs_cm0plus" brief="The SDCARD FATFS project is a demonstration program that uses the SDK software. Tt mounts a file system based on a SD card then does &quot;creat directory/read directory/create file/write file/read file&quot;operation. The file sdhc_config.h has default SDHC configuration which can be adjusted to let carddriver has different performance. The purpose of this example is to show how to use SDCARD driver based FATFS disk in SDK software." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/sdcard_fatfs" path="boards/frdmk32l3a6/sdmmc_examples/sdcard_fatfs/cm0plus">
          <external path="boards/frdmk32l3a6/sdmmc_examples/sdcard_fatfs/cm0plus" type="xml">
            <files mask="sdcard_fatfs_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_sdcard_fatfs_freertos_cm0plus" name="sdcard_fatfs_freertos_cm0plus" brief="The SDCARD FATFS FREERTOS project is a demonstration program that uses the SDK software. The purpose of this example is to show how to use SDCARD with fatfs and freertos." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/sdcard_fatfs_freertos" path="boards/frdmk32l3a6/sdmmc_examples/sdcard_fatfs_freertos/cm0plus">
          <external path="boards/frdmk32l3a6/sdmmc_examples/sdcard_fatfs_freertos/cm0plus" type="xml">
            <files mask="sdcard_fatfs_freertos_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_sdcard_freertos_cm0plus" name="sdcard_freertos_cm0plus" brief="The SDCARD FreeRTOS project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver with FreeRTOS in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/sdcard_freertos" path="boards/frdmk32l3a6/sdmmc_examples/sdcard_freertos/cm0plus">
          <external path="boards/frdmk32l3a6/sdmmc_examples/sdcard_freertos/cm0plus" type="xml">
            <files mask="sdcard_freertos_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_sdcard_interrupt_cm0plus" name="sdcard_interrupt_cm0plus" brief="The SDCARD Interrupt project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver andshow how to use interrupt based transfer API in SDHC driver in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/sdcard_interrupt" path="boards/frdmk32l3a6/sdmmc_examples/sdcard_interrupt/cm0plus">
          <external path="boards/frdmk32l3a6/sdmmc_examples/sdcard_interrupt/cm0plus" type="xml">
            <files mask="sdcard_interrupt_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_sdcard_polling_cm0plus" name="sdcard_polling_cm0plus" brief="The SDCARD Polling project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver andshow how to use polling based transfer API in SDHC driver in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/sdcard_polling" path="boards/frdmk32l3a6/sdmmc_examples/sdcard_polling/cm0plus">
          <external path="boards/frdmk32l3a6/sdmmc_examples/sdcard_polling/cm0plus" type="xml">
            <files mask="sdcard_polling_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_sema42_dual_core_core1" name="sema42_dual_core_core1" brief="The sema42 example shows how to use SEMA42 driver to lock and unlock a sema gate:In this example:1. Firstly, Core 0 turn on LED  and lock a sema gate then boot up Core 1 wake up.2. Core 1 must be wait until Core 0 unlocks this sema gate to lock it.3. After user press any key in terminal window, the sema gate will be unlocked by core 0,then core 1 will lock it and turn off the LEDIf the board does not have LED to show the status, then core 1 will send a flagto core 0 when core 1 has locked the sema gate. Core 0 outputs the success logafter it received the flag." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sema42" path="boards/frdmk32l3a6/driver_examples/sema42/dual_core/core1">
          <external path="boards/frdmk32l3a6/driver_examples/sema42/dual_core/core1" type="xml">
            <files mask="sema42_dual_core_core1_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_shell_cm0plus" name="shell_cm0plus" brief="The Shell Demo application demonstrates to control Leds by commands." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/frdmk32l3a6/demo_apps/shell/cm0plus">
          <external path="boards/frdmk32l3a6/demo_apps/shell/cm0plus" type="xml">
            <files mask="shell_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_tpm_combine_pwm_cm0plus" name="tpm_combine_pwm_cm0plus" brief="The TPM project is a demonstration program of generating a combined PWM signal by the SDK TPM driver. It sets up the TPMhardware block to output PWM signals on two TPM channels. The example also show's the complementary mode of operationand deadtime insertion.On boards that have 2 LEDs connected to the TPM pins, the user will seea change in LED brightness if user enter different values.And if the board do not support LEDs to show, the outputs can be observed by oscilloscope." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/tpm" path="boards/frdmk32l3a6/driver_examples/tpm/combine_pwm/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/tpm/combine_pwm/cm0plus" type="xml">
            <files mask="tpm_combine_pwm_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_tpm_dual_edge_capture_cm0plus" name="tpm_dual_edge_capture_cm0plus" brief="The TPM project is a demonstration program of the SDK TPM driver's dual-edge capture feature.This feature is available only on certain SoC's.The example sets up a TPM channel-pair for dual-edge capture. Once the input signal is received,this example will print the capture values and period of the input signal on the terminal window." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/tpm" path="boards/frdmk32l3a6/driver_examples/tpm/dual_edge_capture/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/tpm/dual_edge_capture/cm0plus" type="xml">
            <files mask="tpm_dual_edge_capture_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_tpm_input_capture_cm0plus" name="tpm_input_capture_cm0plus" brief="The TPM project is a demonstration program of the SDK TPM driver's input capture feature.The example sets up a TPM channel for dual-edge capture. Once the input signal is received,this example will print the capture value." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/tpm" path="boards/frdmk32l3a6/driver_examples/tpm/input_capture/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/tpm/input_capture/cm0plus" type="xml">
            <files mask="tpm_input_capture_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_tpm_output_compare_cm0plus" name="tpm_output_compare_cm0plus" brief="The TPM project is a demonstration program of the SDK TPM driver's output compare feature.It sets up one TPM channel to toggle the output when a match occurs with the channel value. The usershould probe the TPM output with a oscilloscope to see the signal toggling." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/tpm" path="boards/frdmk32l3a6/driver_examples/tpm/output_compare/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/tpm/output_compare/cm0plus" type="xml">
            <files mask="tpm_output_compare_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_tpm_pwm_twochannel_cm0plus" name="tpm_pwm_twochannel_cm0plus" brief="The TPM project is a simple demonstration program of the SDK TPM driver. It sets up the TPMhardware block to output PWM signals on two TPM channels. The PWM dutycycle on both channelsis manually updated. On boards that have an LED connected to the TPM pins, the user will seea change in LED brightness if user enter different values." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/tpm" path="boards/frdmk32l3a6/driver_examples/tpm/pwm_twochannel/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/tpm/pwm_twochannel/cm0plus" type="xml">
            <files mask="tpm_pwm_twochannel_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_tpm_simple_pwm_cm0plus" name="tpm_simple_pwm_cm0plus" brief="The TPM project is a simple demonstration program of the SDK TPM driver. It sets up the TPMhardware block to output a center-aligned PWM signal. The PWM dutycycle is manually updated.On boards that have an LED connected to the TPM pins, the user will see a change in LEDbrightness if user enter different values." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/tpm" path="boards/frdmk32l3a6/driver_examples/tpm/simple_pwm/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/tpm/simple_pwm/cm0plus" type="xml">
            <files mask="tpm_simple_pwm_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_tpm_timer_cm0plus" name="tpm_timer_cm0plus" brief="The TPM project is a simple demonstration program of the SDK TPM driver to use TPM as a timer.It sets up the TPM hardware block to trigger an interrupt every 1 millisecond.When the TPM interrupt is triggered a message a printed on the UART terminal." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/tpm" path="boards/frdmk32l3a6/driver_examples/tpm/timer/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/tpm/timer/cm0plus" type="xml">
            <files mask="tpm_timer_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_trng_random_cm0plus" name="trng_random_cm0plus" brief="The True Random Number Generator (TRNG) is a hardware accelerator module that generates a 512-bitentropy as needed by an entropy consuming module or by other post processing functions. The TRNGExample project is a demonstration program that uses the KSDK software to generate random numbersand prints them to the terminal." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/trng" path="boards/frdmk32l3a6/driver_examples/trng/random/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/trng/random/cm0plus" type="xml">
            <files mask="trng_random_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_tstmr_cm0plus" name="tstmr_cm0plus" brief="The tstmr example shows the usage of TSTMR driver in application. The TSTMR module is a free running incrementing counter that starts running after system reset de-assertion and can be read at any time by the software for determining the software ticks.The TSTMR runs off the 1 MHz clock and resets on every system reset.In this example, it would output a time stamp information when the application is ready. And then, delay for 1 second with TSTMR_DelayUs() function. Before and after the delay, it would output the two time stamps information again." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples" path="boards/frdmk32l3a6/driver_examples/tstmr/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/tstmr/cm0plus" type="xml">
            <files mask="tstmr_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_xrdc_cm0plus" name="xrdc_cm0plus" brief="The xrdc example shows how to control the memory and peripheral accesspolicy using XRDC.In this example, one peripheral and a memory region are set to unaccessible, thenthe hardfault occurs." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples" path="boards/frdmk32l3a6/driver_examples/xrdc/cm0plus">
          <external path="boards/frdmk32l3a6/driver_examples/xrdc/cm0plus" type="xml">
            <files mask="xrdc_cm0plus_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_bubble_cm4" name="bubble_cm4" brief="The bubble level demo demonstrates basic usage of the on-board accelerometer to implement a bubble level. A bubble level utilizes two axes to visually show deviation from a level plane (0 degrees) on a given axis." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/frdmk32l3a6/demo_apps/bubble/cm4">
          <external path="boards/frdmk32l3a6/demo_apps/bubble/cm4" type="xml">
            <files mask="bubble_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_cau3_cm4" name="cau3_cm4" brief="The CAU3 Example project is a demonstration program that uses the KSDK software implementseveral cryptography algorithms using the CAU3 software driver." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples" path="boards/frdmk32l3a6/driver_examples/cau3/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/cau3/cm4" type="xml">
            <files mask="cau3_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_cmsis_lpi2c_edma_b2b_transfer_master_cm4" name="cmsis_lpi2c_edma_b2b_transfer_master_cm4" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_edma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with EDMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpi2c" path="boards/frdmk32l3a6/cmsis_driver_examples/lpi2c/edma_b2b_transfer/master/cm4">
          <external path="boards/frdmk32l3a6/cmsis_driver_examples/lpi2c/edma_b2b_transfer/master/cm4" type="xml">
            <files mask="cmsis_lpi2c_edma_b2b_transfer_master_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_cmsis_lpi2c_edma_b2b_transfer_slave_cm4" name="cmsis_lpi2c_edma_b2b_transfer_slave_cm4" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_edma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with EDMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpi2c" path="boards/frdmk32l3a6/cmsis_driver_examples/lpi2c/edma_b2b_transfer/slave/cm4">
          <external path="boards/frdmk32l3a6/cmsis_driver_examples/lpi2c/edma_b2b_transfer/slave/cm4" type="xml">
            <files mask="cmsis_lpi2c_edma_b2b_transfer_slave_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_cmsis_lpi2c_int_b2b_transfer_master_cm4" name="cmsis_lpi2c_int_b2b_transfer_master_cm4" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The lpi2c_int_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpi2c" path="boards/frdmk32l3a6/cmsis_driver_examples/lpi2c/int_b2b_transfer/master/cm4">
          <external path="boards/frdmk32l3a6/cmsis_driver_examples/lpi2c/int_b2b_transfer/master/cm4" type="xml">
            <files mask="cmsis_lpi2c_int_b2b_transfer_master_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_cmsis_lpi2c_int_b2b_transfer_slave_cm4" name="cmsis_lpi2c_int_b2b_transfer_slave_cm4" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The lpi2c_int_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpi2c" path="boards/frdmk32l3a6/cmsis_driver_examples/lpi2c/int_b2b_transfer/slave/cm4">
          <external path="boards/frdmk32l3a6/cmsis_driver_examples/lpi2c/int_b2b_transfer/slave/cm4" type="xml">
            <files mask="cmsis_lpi2c_int_b2b_transfer_slave_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_cmsis_lpspi_edma_b2b_transfer_master_cm4" name="cmsis_lpspi_edma_b2b_transfer_master_cm4" brief="The cmsis_lpspi_edma_b2b_transfer example shows how to use LPSPI CMSIS driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_edma_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in edma . " toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpspi" path="boards/frdmk32l3a6/cmsis_driver_examples/lpspi/edma_b2b_transfer/master/cm4">
          <external path="boards/frdmk32l3a6/cmsis_driver_examples/lpspi/edma_b2b_transfer/master/cm4" type="xml">
            <files mask="cmsis_lpspi_edma_b2b_transfer_master_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_cmsis_lpspi_edma_b2b_transfer_slave_cm4" name="cmsis_lpspi_edma_b2b_transfer_slave_cm4" brief="The cmsis_lpspi_edma_b2b_transfer example shows how to use LPSPI CMSIS driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_edma_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in edma . " toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpspi" path="boards/frdmk32l3a6/cmsis_driver_examples/lpspi/edma_b2b_transfer/slave/cm4">
          <external path="boards/frdmk32l3a6/cmsis_driver_examples/lpspi/edma_b2b_transfer/slave/cm4" type="xml">
            <files mask="cmsis_lpspi_edma_b2b_transfer_slave_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_cmsis_lpspi_int_b2b_transfer_master_cm4" name="cmsis_lpspi_int_b2b_transfer_master_cm4" brief="The cmsis_lpspi_int_b2b_transfer example shows how to use LPSPI CMSIS driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_int_b2b_transfer_master.c' includes the LPSPI master code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . " toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpspi" path="boards/frdmk32l3a6/cmsis_driver_examples/lpspi/int_b2b_transfer/master/cm4">
          <external path="boards/frdmk32l3a6/cmsis_driver_examples/lpspi/int_b2b_transfer/master/cm4" type="xml">
            <files mask="cmsis_lpspi_int_b2b_transfer_master_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_cmsis_lpspi_int_b2b_transfer_slave_cm4" name="cmsis_lpspi_int_b2b_transfer_slave_cm4" brief="The lpspi_int_b2b_transfer example shows how to use LPSPI CMSIS driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_int_b2b_transfer_slave.c' includes the LPSPI slave code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . " toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpspi" path="boards/frdmk32l3a6/cmsis_driver_examples/lpspi/int_b2b_transfer/slave/cm4">
          <external path="boards/frdmk32l3a6/cmsis_driver_examples/lpspi/int_b2b_transfer/slave/cm4" type="xml">
            <files mask="cmsis_lpspi_int_b2b_transfer_slave_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_cmsis_lpuart_edma_transfer_cm4" name="cmsis_lpuart_edma_transfer_cm4" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_edma_transfer example shows how to use uart cmsis  driver with EDMA:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpuart" path="boards/frdmk32l3a6/cmsis_driver_examples/lpuart/edma_transfer/cm4">
          <external path="boards/frdmk32l3a6/cmsis_driver_examples/lpuart/edma_transfer/cm4" type="xml">
            <files mask="cmsis_lpuart_edma_transfer_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_cmsis_lpuart_interrupt_transfer_cm4" name="cmsis_lpuart_interrupt_transfer_cm4" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_interrupt_transfer example shows how to use uart cmsis driver in interrupt way:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpuart" path="boards/frdmk32l3a6/cmsis_driver_examples/lpuart/interrupt_transfer/cm4">
          <external path="boards/frdmk32l3a6/cmsis_driver_examples/lpuart/interrupt_transfer/cm4" type="xml">
            <files mask="cmsis_lpuart_interrupt_transfer_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_crc_cm4" name="crc_cm4" brief="The CRC Example project is a demonstration program that uses the KSDK software to generate checksumsfor an ASCII string. Several CRC protocols are implemented using the CRC driver API." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples" path="boards/frdmk32l3a6/driver_examples/crc/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/crc/cm4" type="xml">
            <files mask="crc_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dac_1_basic_cm4" name="dac_1_basic_cm4" brief="The dac_basic example shows how to use DAC module simply as the general DAC converter.When the DAC's buffer feature is not enabled, the first item of the buffer is used as the DAC output data register.The converter would always output the value of the first item. In this example, it gets the value from terminal,outputs the DAC output voltage through DAC output pin." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/dac" path="boards/frdmk32l3a6/driver_examples/dac/dac_basic/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/dac/dac_basic/cm4" type="xml">
            <files mask="dac_1_basic_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dac_1_buffer_interrupt_cm4" name="dac_1_buffer_interrupt_cm4" brief="The dac_buffer_interrupt example shows how to use DAC FIFO interrupt.When the DAC FIFO empty interrupt is enabled firstly, the application would enter the DAC ISR immediately, since the FIFO is actually empty. Then the FIFO would be feed inside the ISR. Then the DAC interrupt could be restrained. Once the DAC FIFO is triggered in while loop, the data in FIFO is read out, then it becomes empty, so the FIFO would be feed again in DAC ISR. With this example, user can define the DAC output array to generate the different wave output. Also the software trigger can be called in some timer ISR so that the DAC would output the analog signal in indicated period. Or even use the hardware trigger to release the CPU." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/dac" path="boards/frdmk32l3a6/driver_examples/dac/dac_buffer_interrupt/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/dac/dac_buffer_interrupt/cm4" type="xml">
            <files mask="dac_1_buffer_interrupt_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dcdc_framework_cm4" name="dcdc_framework_cm4" brief="The SD JPEG Demo application reads the JPEG pictures from the SD card, decodesthem, and shows them in the LCD panel one by one." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/frdmk32l3a6/demo_apps/dcdc_framework/cm4">
          <external path="boards/frdmk32l3a6/demo_apps/dcdc_framework/cm4" type="xml">
            <files mask="dcdc_framework_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_audio_generator_bm" name="dev_audio_generator_bm" brief="The USB Audio Generator application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a recording device and users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_audio_generator/bm/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_audio_generator/bm/cm4" type="xml">
            <files mask="dev_audio_generator_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_audio_generator_freertos" name="dev_audio_generator_freertos" brief="The USB Audio Generator application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a recording device and users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_audio_generator/freertos/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_audio_generator/freertos/cm4" type="xml">
            <files mask="dev_audio_generator_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_audio_generator_lite_bm" name="dev_audio_generator_lite_bm" brief="The USB Audio Generator application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a recording device and users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_audio_generator_lite/bm/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_audio_generator_lite/bm/cm4" type="xml">
            <files mask="dev_audio_generator_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_cdc_vcom_bm" name="dev_cdc_vcom_bm" brief="The Virtual COM project is enumerated as a COM port, which the users can open using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_cdc_vcom/bm/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_cdc_vcom/bm/cm4" type="xml">
            <files mask="dev_cdc_vcom_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_cdc_vcom_freertos" name="dev_cdc_vcom_freertos" brief="The Virtual COM project is  enumerated as a COM port, which the users can open using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_cdc_vcom/freertos/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_cdc_vcom/freertos/cm4" type="xml">
            <files mask="dev_cdc_vcom_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_cdc_vcom_lite_bm" name="dev_cdc_vcom_lite_bm" brief="The Virtual COM project enumerated as a COM port, which the users can open using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_cdc_vcom_lite/bm/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_cdc_vcom_lite/bm/cm4" type="xml">
            <files mask="dev_cdc_vcom_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_composite_cdc_msc_bm" name="dev_composite_cdc_msc_bm" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted.." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_composite_cdc_msc/bm/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_composite_cdc_msc/bm/cm4" type="xml">
            <files mask="dev_composite_cdc_msc_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_composite_cdc_msc_freertos" name="dev_composite_cdc_msc_freertos" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_composite_cdc_msc/freertos/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_composite_cdc_msc/freertos/cm4" type="xml">
            <files mask="dev_composite_cdc_msc_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_composite_cdc_msc_lite_bm" name="dev_composite_cdc_msc_lite_bm" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_composite_cdc_msc_lite/bm/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_composite_cdc_msc_lite/bm/cm4" type="xml">
            <files mask="dev_composite_cdc_msc_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_composite_hid_audio_bm" name="dev_composite_hid_audio_bm" brief="The USB Composite device application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a recording device. Users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories with an HID mouse device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_composite_hid_audio/bm/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_composite_hid_audio/bm/cm4" type="xml">
            <files mask="dev_composite_hid_audio_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_composite_hid_audio_freertos" name="dev_composite_hid_audio_freertos" brief="The USB Composite device application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a recording device. Users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories with an HID mouse device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_composite_hid_audio/freertos/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_composite_hid_audio/freertos/cm4" type="xml">
            <files mask="dev_composite_hid_audio_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_composite_hid_audio_lite_bm" name="dev_composite_hid_audio_lite_bm" brief="The USB Composite device application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a recording device. Users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories with an HID mouse device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_composite_hid_audio_lite/bm/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_composite_hid_audio_lite/bm/cm4" type="xml">
            <files mask="dev_composite_hid_audio_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_composite_hid_mouse_hid_keyboard_bm" name="dev_composite_hid_mouse_hid_keyboard_bm" brief="The application is a simple demonstration program based on the MCUXpresso SDK. The application is enumerated as HID-compliant mouse and keyboard devices." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/bm/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/bm/cm4" type="xml">
            <files mask="dev_composite_hid_mouse_hid_keyboard_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_composite_hid_mouse_hid_keyboard_freertos" name="dev_composite_hid_mouse_hid_keyboard_freertos" brief="The application is a simple demonstration program based on the MCUXpresso SDK. The application is enumerated as HID-compliant mouse and keyboard devices." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/freertos/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/freertos/cm4" type="xml">
            <files mask="dev_composite_hid_mouse_hid_keyboard_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_composite_hid_mouse_hid_keyboard_lite_bm" name="dev_composite_hid_mouse_hid_keyboard_lite_bm" brief="The application is a simple demonstration program based on the MCUXpresso SDK. The application is enumerated as HID-compliant mouse and keyboard devices." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_composite_hid_mouse_hid_keyboard_lite/bm/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_composite_hid_mouse_hid_keyboard_lite/bm/cm4" type="xml">
            <files mask="dev_composite_hid_mouse_hid_keyboard_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_hid_generic_bm" name="dev_hid_generic_bm" brief="The USB HID generic application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a HID-compliant device. A PC application can be used to exchange data with the device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_hid_generic/bm/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_hid_generic/bm/cm4" type="xml">
            <files mask="dev_hid_generic_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_hid_generic_freertos" name="dev_hid_generic_freertos" brief="The USB HID generic application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a HID-compliant device. A PC application can be used to exchange data with the device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_hid_generic/freertos/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_hid_generic/freertos/cm4" type="xml">
            <files mask="dev_hid_generic_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_hid_generic_lite_bm" name="dev_hid_generic_lite_bm" brief="The USB HID generic application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a HID-compliant device. A PC application can be used to exchange data with the device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_hid_generic_lite/bm/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_hid_generic_lite/bm/cm4" type="xml">
            <files mask="dev_hid_generic_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_hid_mouse_bm" name="dev_hid_mouse_bm" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_hid_mouse/bm/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_hid_mouse/bm/cm4" type="xml">
            <files mask="dev_hid_mouse_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_hid_mouse_freertos" name="dev_hid_mouse_freertos" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_hid_mouse/freertos/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_hid_mouse/freertos/cm4" type="xml">
            <files mask="dev_hid_mouse_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_hid_mouse_freertos_static" name="dev_hid_mouse_freertos_static" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_hid_mouse/freertos_static/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_hid_mouse/freertos_static/cm4" type="xml">
            <files mask="dev_hid_mouse_freertos_static_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_hid_mouse_lite_bm" name="dev_hid_mouse_lite_bm" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_hid_mouse_lite/bm/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_hid_mouse_lite/bm/cm4" type="xml">
            <files mask="dev_hid_mouse_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_msc_ramdisk_bm" name="dev_msc_ramdisk_bm" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk and can be read and written to as a normal U-disk ." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_msc_ramdisk/bm/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_msc_ramdisk/bm/cm4" type="xml">
            <files mask="dev_msc_ramdisk_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_msc_ramdisk_freertos" name="dev_msc_ramdisk_freertos" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk and can be read and written to as a normal U-disk ." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_msc_ramdisk/freertos/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_msc_ramdisk/freertos/cm4" type="xml">
            <files mask="dev_msc_ramdisk_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_msc_ramdisk_lite_bm" name="dev_msc_ramdisk_lite_bm" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk and can be read and written to as a normal U-disk ." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_msc_ramdisk_lite/bm/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_msc_ramdisk_lite/bm/cm4" type="xml">
            <files mask="dev_msc_ramdisk_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_phdc_weighscale_bm" name="dev_phdc_weighscale_bm" brief="The USB PHDC WeighScale application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a weight scale device and the HealthLink software is used to interact with thisdevice to simulate the personal weight scale data, such as body mass and body mass index." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_phdc_weighscale/bm/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_phdc_weighscale/bm/cm4" type="xml">
            <files mask="dev_phdc_weighscale_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_phdc_weighscale_freertos" name="dev_phdc_weighscale_freertos" brief="The USB PHDC WeighScale application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a weight scale device and the HealthLink software is used to interact with thisdevice to simulate the personal weight scale data, such as body mass and body mass index." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_phdc_weighscale/freertos/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_phdc_weighscale/freertos/cm4" type="xml">
            <files mask="dev_phdc_weighscale_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_phdc_weighscale_lite_bm" name="dev_phdc_weighscale_lite_bm" brief="The USB PHDC WeighScale application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a weight scale device and the HealthLink software is used to interact with thisdevice to simulate the personal weight scale data, such as body mass and body mass index." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_phdc_weighscale_lite/bm/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_phdc_weighscale_lite/bm/cm4" type="xml">
            <files mask="dev_phdc_weighscale_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_printer_virtual_plain_text_bm" name="dev_printer_virtual_plain_text_bm" brief="The USB virtual printer application is a simple application to demonstrate a virtual printer functionality.Because there is no printer language parsing, the received raw data is output directly in the debug console.As a result, only plain text is suitable for testing. For other printer language support, such as postscript, implement the corresponding parser." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_printer_virtual_plain_text/bm/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_printer_virtual_plain_text/bm/cm4" type="xml">
            <files mask="dev_printer_virtual_plain_text_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_printer_virtual_plain_text_freertos" name="dev_printer_virtual_plain_text_freertos" brief="The USB virtual printer application is a simple application to demonstrate a virtual printer functionality.Because there is no printer language parsing, the received raw data is output directly in the debug console.As a result, only plain text is suitable for testing. For other printer language support, such as postscript, implement the corresponding parser." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_printer_virtual_plain_text/freertos/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_printer_virtual_plain_text/freertos/cm4" type="xml">
            <files mask="dev_printer_virtual_plain_text_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_printer_virtual_plain_text_lite_bm" name="dev_printer_virtual_plain_text_lite_bm" brief="The USB virtual printer application is a simple application to demonstrate a virtual printer functionality.Because there is no printer language parsing, the received raw data is output directly in the debug console.As a result, only plain text is suitable for testing. For other printer language support, such as postscript, implement the corresponding parser." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_printer_virtual_plain_text_lite/bm/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_printer_virtual_plain_text_lite/bm/cm4" type="xml">
            <files mask="dev_printer_virtual_plain_text_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_suspend_resume_hid_mouse_freertos" name="dev_suspend_resume_hid_mouse_freertos" brief="the application is enumerated as a mouse. When host releases the USB Bus, the device will enter into low power mode. The device can be waked up when resume signal is detected on the bus. Or the device can remote wake-up the host by delivering the resume signal when the remote wake-up is enabled by the host." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_suspend_resume_device_hid_mouse/freertos/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_suspend_resume_device_hid_mouse/freertos/cm4" type="xml">
            <files mask="dev_suspend_resume_hid_mouse_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_suspend_resume_hid_mouse_lite_bm" name="dev_suspend_resume_hid_mouse_lite_bm" brief="the application is enumerated as a mouse. When host releases the USB Bus, the device will enter into low power mode. The device can be waked up when resume signal is detected on the bus. Or the device can remote wake-up the host by delivering the resume signal when the remote wake-up is enabled by the host." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_suspend_resume_device_hid_mouse_lite/bm/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_suspend_resume_device_hid_mouse_lite/bm/cm4" type="xml">
            <files mask="dev_suspend_resume_hid_mouse_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_video_virtual_camera_bm" name="dev_video_virtual_camera_bm" brief="The USB video virtual camera application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a camera and users can see the video of the device by using a PC test tool." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_video_virtual_camera/bm/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_video_virtual_camera/bm/cm4" type="xml">
            <files mask="dev_video_virtual_camera_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_video_virtual_camera_freertos" name="dev_video_virtual_camera_freertos" brief="The USB video virtual camera application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a camera and users can see the video of the device by using a PC test tool." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_video_virtual_camera/freertos/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_video_virtual_camera/freertos/cm4" type="xml">
            <files mask="dev_video_virtual_camera_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_dev_video_virtual_camera_lite_bm" name="dev_video_virtual_camera_lite_bm" brief="The USB video virtual camera application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a camera and users can see the video of the device by using a PC test tool." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/frdmk32l3a6/usb_examples/usb_device_video_virtual_camera_lite/bm/cm4">
          <external path="boards/frdmk32l3a6/usb_examples/usb_device_video_virtual_camera_lite/bm/cm4" type="xml">
            <files mask="dev_video_virtual_camera_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_edma_channel_link_cm4" name="edma_channel_link_cm4" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/edma" path="boards/frdmk32l3a6/driver_examples/edma/channel_link/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/edma/channel_link/cm4" type="xml">
            <files mask="edma_channel_link_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_edma_interleave_transfer_cm4" name="edma_interleave_transfer_cm4" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/edma" path="boards/frdmk32l3a6/driver_examples/edma/interleave_transfer/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/edma/interleave_transfer/cm4" type="xml">
            <files mask="edma_interleave_transfer_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_edma_memory_to_memory_cm4" name="edma_memory_to_memory_cm4" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/edma" path="boards/frdmk32l3a6/driver_examples/edma/memory_to_memory/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/edma/memory_to_memory/cm4" type="xml">
            <files mask="edma_memory_to_memory_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_edma_ping_pong_transfer_cm4" name="edma_ping_pong_transfer_cm4" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/edma" path="boards/frdmk32l3a6/driver_examples/edma/ping_pong_transfer/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/edma/ping_pong_transfer/cm4" type="xml">
            <files mask="edma_ping_pong_transfer_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_edma_scatter_gather_cm4" name="edma_scatter_gather_cm4" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/edma" path="boards/frdmk32l3a6/driver_examples/edma/scatter_gather/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/edma/scatter_gather/cm4" type="xml">
            <files mask="edma_scatter_gather_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_edma_wrap_transfer_cm4" name="edma_wrap_transfer_cm4" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/edma" path="boards/frdmk32l3a6/driver_examples/edma/wrap_transfer/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/edma/wrap_transfer/cm4" type="xml">
            <files mask="edma_wrap_transfer_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_erpc_matrix_multiply_mu_cm4" name="erpc_matrix_multiply_mu_cm4" brief="The Multicore eRPC Matrix Multiply project is a simple demonstration program that uses theMCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Callbetween cores of the multicore system. The primary core (eRPC client) releases the secondary core(eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let thesecondary core to perform the multiplication of two randomly generated matrices. The originalmatrices and the result matrix is printed out to the serial console by the primary core. Thematrix multiplication can be issued repeatedly when pressing a SW board button. MU (Messaging Unit)erpc transport layer is used in this example application.eRPC documentation eRPC specific files are stored in: middleware/multicore/erpc eRPC documentation is stored in: middleware/multicore/erpc/doc eRPC is open-source project stored on github: https://github.com/EmbeddedRPC/erpc eRPC documentation can be also found in: http://embeddedrpc.github.io" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" linked_projects="frdmk32l3a6_erpc_matrix_multiply_mu_cm0plus" path="boards/frdmk32l3a6/multicore_examples/erpc_matrix_multiply_mu/cm4">
          <external path="boards/frdmk32l3a6/multicore_examples/erpc_matrix_multiply_mu/cm4" type="xml">
            <files mask="erpc_matrix_multiply_mu_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_erpc_matrix_multiply_mu_rtos_cm4" name="erpc_matrix_multiply_mu_rtos_cm4" brief="The Multicore eRPC Matrix Multiply RTOS project is a simple demonstration program that uses theMCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Callbetween cores of the multicore system. The primary core (eRPC client) releases the secondary core(eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let thesecondary core to perform the multiplication of two randomly generated matrices. The originalmatrices and the result matrix is printed out to the serial console by the primary core. Thematrix multiplication can be issued repeatedly when pressing a SW board button. MU (Messaging Unit)erpc transport layer is used in this example application.eRPC documentation eRPC specific files are stored in: middleware/multicore/erpc eRPC documentation is stored in: middleware/multicore/erpc/doc eRPC is open-source project stored on github: https://github.com/EmbeddedRPC/erpc eRPC documentation can be also found in: http://embeddedrpc.github.io" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" linked_projects="frdmk32l3a6_erpc_matrix_multiply_mu_rtos_cm0plus" path="boards/frdmk32l3a6/multicore_examples/erpc_matrix_multiply_mu_rtos/cm4">
          <external path="boards/frdmk32l3a6/multicore_examples/erpc_matrix_multiply_mu_rtos/cm4" type="xml">
            <files mask="erpc_matrix_multiply_mu_rtos_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_erpc_matrix_multiply_rpmsg_cm4" name="erpc_matrix_multiply_rpmsg_cm4" brief="The Multicore eRPC Matrix Multiply project is a simple demonstration program that uses theMCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Callbetween cores of the multicore system. The primary core (eRPC client) releases the secondary core(eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let thesecondary core to perform the multiplication of two randomly generated matrices. The originalmatrices and the result matrix is printed out to the serial console by the primary core. Thematrix multiplication can be issued repeatedly when pressing a SW board button. RPMsg-Lite erpctransport layer is used in this example application.Shared memory usageThis multicore example uses the shared memory for data exchange. The shared memory region isdefined and the size can be adjustable in the linker file. The shared memory region start addressand the size have to be defined in linker file for each core equally. The shared memory startaddress is then exported from the linker to the application.eRPC documentationeRPC specific files are stored in: middleware/multicore_&lt;version&gt;/erpceRPC documentation is stored in: middleware/multicore_&lt;version&gt;/erpc/doceRPC is open-source project stored on github: https://github.com/EmbeddedRPC/erpceRPC documentation can be also found in: http://embeddedrpc.github.io" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" linked_projects="frdmk32l3a6_erpc_matrix_multiply_rpmsg_cm0plus" path="boards/frdmk32l3a6/multicore_examples/erpc_matrix_multiply_rpmsg/cm4">
          <external path="boards/frdmk32l3a6/multicore_examples/erpc_matrix_multiply_rpmsg/cm4" type="xml">
            <files mask="erpc_matrix_multiply_rpmsg_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_erpc_matrix_multiply_rpmsg_rtos_cm4" name="erpc_matrix_multiply_rpmsg_rtos_cm4" brief="The Multicore eRPC Matrix Multiply RTOS project is a simple demonstration program that uses theMCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Callbetween cores of the multicore system. The primary core (eRPC client) releases the secondary core(eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let thesecondary core to perform the multiplication of two randomly generated matrices. The originalmatrices and the result matrix is printed out to the serial console by the primary core. Thematrix multiplication can be issued repeatedly when pressing a SW board button. RPMsg-Lite erpctransport layer is used in this example application.Shared memory usageThis multicore example uses the shared memory for data exchange. The shared memory region isdefined and the size can be adjustable in the linker file. The shared memory region start addressand the size have to be defined in linker file for each core equally. The shared memory startaddress is then exported from the linker to the application.eRPC documentationeRPC specific files are stored in: middleware/multicore_&lt;version&gt;/erpceRPC documentation is stored in: middleware/multicore_&lt;version&gt;/erpc/doceRPC is open-source project stored on github: https://github.com/EmbeddedRPC/erpceRPC documentation can be also found in: http://embeddedrpc.github.io" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" linked_projects="frdmk32l3a6_erpc_matrix_multiply_rpmsg_rtos_cm0plus" path="boards/frdmk32l3a6/multicore_examples/erpc_matrix_multiply_rpmsg_rtos/cm4">
          <external path="boards/frdmk32l3a6/multicore_examples/erpc_matrix_multiply_rpmsg_rtos/cm4" type="xml">
            <files mask="erpc_matrix_multiply_rpmsg_rtos_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_erpc_two_way_rpc_rpmsg_rtos_cm4" name="erpc_two_way_rpc_rpmsg_rtos_cm4" brief="The Multicore eRPC Two Way RPC RTOS project is a simple demonstration program that uses the MCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Call between cores of the multicore system. This multicore example shows how both the eRPC client and the eRPC server can be setup on one side/core (bidirectional communication) and how to handle callback functions in eRPC. The primary core (Core0) creates client and server tasks first. The client task releases the secondary core from the reset, initializes the RPMsg-Lite erpc transport and once the server task is running it configures the arbitrated client. Then the application logic is running. The secondary core (Core1) creates client and server tasks two. The client task initializes the RPMsg-Lite erpc transport and once the server task is running it configures the arbitrated client. Then the application logic is running. The client task logic of the Core1 is very simple, it repeatedly calls the increaseNumber() erpc function that is implemented on the Core0 and that increments the counter. The client task logic of the Core0 alternately issues either getNumberFromCore0() function implementation on the Core0 or getNumberFromCore1() function implementation on the Core1 (erpc call). Then, the nestedCallGetNumber() erpc function call is issued that alternately triggers either getNumberFromCore1() function implementation on the Core1 (normal erpc call) or it triggers the getNumberFromCore0() function implementation on the Core0 (nested erpc call, routed through the Core1 erpc server)." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" linked_projects="frdmk32l3a6_erpc_two_way_rpc_rpmsg_rtos_cm0plus" path="boards/frdmk32l3a6/multicore_examples/erpc_two_way_rpc_rpmsg_rtos/cm4">
          <external path="boards/frdmk32l3a6/multicore_examples/erpc_two_way_rpc_rpmsg_rtos/cm4" type="xml">
            <files mask="erpc_two_way_rpc_rpmsg_rtos_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_ewm_cm4" name="ewm_cm4" brief="The EWM Example project is to demonstrate usage of the KSDK EWM driver.In the example, EWM counter is continuously refreshed until button is pressed.Once the button is pressed, EWM counter will expire and interrupt will be generated.After the first pressing, another interrupt can be triggered by pressing button again." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples" path="boards/frdmk32l3a6/driver_examples/ewm/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/ewm/cm4" type="xml">
            <files mask="ewm_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_flexio_i2c_interrupt_lpi2c_transfer_cm4" name="flexio_i2c_interrupt_lpi2c_transfer_cm4" brief="The flexio_lpi2c_interrupt example shows how to use flexio i2c master  driver in interrupt way:In this example, a flexio simulated i2c master connect to a LPI2C slave" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/frdmk32l3a6/driver_examples/flexio/i2c/interrupt_lpi2c_transfer/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/flexio/i2c/interrupt_lpi2c_transfer/cm4" type="xml">
            <files mask="flexio_i2c_interrupt_lpi2c_transfer_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_flexio_i2c_read_accel_value_transfer_cm4" name="flexio_i2c_read_accel_value_transfer_cm4" brief="The flexio_i2c_read_accel_value example shows how to use FLEXIO I2C  Master driver to communicate with an i2c device: 1. How to use the flexio i2c master driver to read a i2c device who_am_I register. 2. How to use the flexio i2c master driver to write/read the device registers.In this example, the values of three-axis accelerometer print to the serial terminal on PC throughthe virtual serial port on board." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/frdmk32l3a6/driver_examples/flexio/i2c/read_accel_value_transfer/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/flexio/i2c/read_accel_value_transfer/cm4" type="xml">
            <files mask="flexio_i2c_read_accel_value_transfer_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_flexio_pwm_cm4" name="flexio_pwm_cm4" brief="This demo describes how to use SDK drivers to implement the PWM feature by FLEXIO IP module. It outputs the PWM singal with fixed frequency defined by &quot;DEMO_FLEXIO_FREQUENCY&quot; in source code and dynamic duty from 99 to 1 to one of the FLEXIO pin." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/frdmk32l3a6/driver_examples/flexio/pwm/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/flexio/pwm/cm4" type="xml">
            <files mask="flexio_pwm_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_flexio_spi_edma_lpspi_transfer_master_cm4" name="flexio_spi_edma_lpspi_transfer_master_cm4" brief="The flexio_spi_master_edma_lpspi_slave example shows how to use flexio spi master driver in edma way:In this example, a flexio simulated master connect to a lpspi slave ." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/frdmk32l3a6/driver_examples/flexio/spi/edma_lpspi_transfer/master/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/flexio/spi/edma_lpspi_transfer/master/cm4" type="xml">
            <files mask="flexio_spi_edma_lpspi_transfer_master_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_flexio_spi_edma_lpspi_transfer_slave_cm4" name="flexio_spi_edma_lpspi_transfer_slave_cm4" brief="The flexio_spi_slave_edma_lpspi_master example shows how to use flexio spi slave driver in edma way:In this example, a flexio simulated slave connect to a lpspi master." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/frdmk32l3a6/driver_examples/flexio/spi/edma_lpspi_transfer/slave/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/flexio/spi/edma_lpspi_transfer/slave/cm4" type="xml">
            <files mask="flexio_spi_edma_lpspi_transfer_slave_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_flexio_spi_int_lpspi_transfer_master_cm4" name="flexio_spi_int_lpspi_transfer_master_cm4" brief="The flexio_spi_master_interrupt_lpspi_slave example shows how to use flexio spi master driver in interrupt way. In this example, a flexio simulated master connect to a lpspi slave ." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/frdmk32l3a6/driver_examples/flexio/spi/int_lpspi_transfer/master/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/flexio/spi/int_lpspi_transfer/master/cm4" type="xml">
            <files mask="flexio_spi_int_lpspi_transfer_master_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_flexio_spi_int_lpspi_transfer_slave_cm4" name="flexio_spi_int_lpspi_transfer_slave_cm4" brief="The flexio_spi_slave_interrupt_lpspi_master example shows how to use flexio spi slave driver in interrupt way. In this example, a flexio simulated slave connect to a lpspi master." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/frdmk32l3a6/driver_examples/flexio/spi/int_lpspi_transfer/slave/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/flexio/spi/int_lpspi_transfer/slave/cm4" type="xml">
            <files mask="flexio_spi_int_lpspi_transfer_slave_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_flexio_uart_edma_transfer_cm4" name="flexio_uart_edma_transfer_cm4" brief="The flexio_uart_edma example shows how to use flexio uart driver in edma way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send back all charactersthat PC send to the board." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/frdmk32l3a6/driver_examples/flexio/uart/edma_transfer/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/flexio/uart/edma_transfer/cm4" type="xml">
            <files mask="flexio_uart_edma_transfer_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_flexio_uart_int_rb_transfer_cm4" name="flexio_uart_int_rb_transfer_cm4" brief="The flexio_uart_interrupt_ring_buffer example shows how to use flexio uart driver in interrupt way withRX ring buffer enabled:In this example, a flexio simulated uart connect to PC through USB-Serial, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/frdmk32l3a6/driver_examples/flexio/uart/int_rb_transfer/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/flexio/uart/int_rb_transfer/cm4" type="xml">
            <files mask="flexio_uart_int_rb_transfer_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_flexio_uart_interrupt_transfer_cm4" name="flexio_uart_interrupt_transfer_cm4" brief="The flexio_uart_interrupt example shows how to use flexio uart driver in interrupt way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send back all charactersthat PC send to the board. Note: two queued transfer in this example, so please input even number characters." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/frdmk32l3a6/driver_examples/flexio/uart/interrupt_transfer/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/flexio/uart/interrupt_transfer/cm4" type="xml">
            <files mask="flexio_uart_interrupt_transfer_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_flexio_uart_polling_transfer_cm4" name="flexio_uart_polling_transfer_cm4" brief="The flexio_uart_polling example shows how to use flexio uart driver in polling way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send backall characters that PC send to the board." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/frdmk32l3a6/driver_examples/flexio/uart/polling_transfer/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/flexio/uart/polling_transfer/cm4" type="xml">
            <files mask="flexio_uart_polling_transfer_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_fmstr_example_any_cm4" name="fmstr_example_any_cm4" brief="FreeMASTER example fully configured by MCUXpresso ConfigTools. Serial communication is used by default, but it can be changed easily to CAN or other in the MCUXpresso Peripheral Tool. Also FreeMASTER driver features are configured graphically in this tool. The Pins and Clock Tool are used to configure pin multiplexers and clocks. Just like other FreeMASTER examples, the application demonstrates use of FreeMASTER tool to visualize internal variables and to control the application flow by modifying variables. The application also shows use of advanced FreeMASTER features like TSA tables and Pipes." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="FreeMASTER_examples" path="boards/frdmk32l3a6/freemaster_examples/fmstr_any/cm4">
          <external path="boards/frdmk32l3a6/freemaster_examples/fmstr_any/cm4" type="xml">
            <files mask="fmstr_example_any_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_fmstr_example_pdbdm_cm4" name="fmstr_example_pdbdm_cm4" brief="FreeMASTER example using a special packet-driven protocol on top of JTAG or BDM direct memory access. This example application demonstrates use of FreeMASTER tool to visualize internal variables and to control the application flow by modifying variables. The application also shows use of advanced FreeMASTER features like TSA tables and Pipes." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="FreeMASTER_examples" path="boards/frdmk32l3a6/freemaster_examples/fmstr_pdbdm/cm4">
          <external path="boards/frdmk32l3a6/freemaster_examples/fmstr_pdbdm/cm4" type="xml">
            <files mask="fmstr_example_pdbdm_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_fmstr_example_uart_cm4" name="fmstr_example_uart_cm4" brief="FreeMASTER example using Serial-UART communication with the target microcontroller. This example application demonstrates use of FreeMASTER tool to visualize internal variables and to control the application flow by modifying variables. The application also shows use of advanced FreeMASTER features like TSA tables and Pipes." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="FreeMASTER_examples" path="boards/frdmk32l3a6/freemaster_examples/fmstr_uart/cm4">
          <external path="boards/frdmk32l3a6/freemaster_examples/fmstr_uart/cm4" type="xml">
            <files mask="fmstr_example_uart_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_fmstr_example_usb_cdc_cm4" name="fmstr_example_usb_cdc_cm4" brief="FreeMASTER example using virtual serial communication at USB port and CDC VCOM class. This example application demonstrates use of FreeMASTER tool to visualize internal variables and to control the application flow by modifying variables. The application also shows use of advanced FreeMASTER features like TSA tables and Pipes." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="FreeMASTER_examples" path="boards/frdmk32l3a6/freemaster_examples/fmstr_usb_cdc/cm4">
          <external path="boards/frdmk32l3a6/freemaster_examples/fmstr_usb_cdc/cm4" type="xml">
            <files mask="fmstr_example_usb_cdc_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_event_cm4" name="freertos_event_cm4" brief="This document explains the freertos_event example. It shows how task waits for an event (defined setof bits in event group). This event can be set by any other process or interrupt in the system.The example application creates three tasks. Two write tasks write_task_1 and write_task_2continuously setting event bit 0 and bit 1.Read_task is waiting for any event bit and printing actual state on console. Event bits areautomatically cleared after read task is entered.Three possible states can occurre:Both bits are set.zBit B0 is set.Bit B1 is set." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/frdmk32l3a6/rtos_examples/freertos_event/cm4">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_event/cm4" type="xml">
            <files mask="freertos_event_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_generic_cm4" name="freertos_generic_cm4" brief="This document explains the freertos_generic example. It is based on code FreeRTOS documentation fromhttp://www.freertos.org/Hardware-independent-RTOS-example.html. It shows combination of severaltasks with queue, software timer, tick hook and semaphore.The example application creates three tasks. The prvQueueSendTask periodically sending data toxQueue queue. The prvQueueReceiveTask is waiting for incoming message and counting number ofreceived messages. Task prvEventSemaphoreTask is waiting for xEventSemaphore semaphore given fromvApplicationTickHook. Tick hook give semaphore every 500 ms.Other hook types used for RTOS and resource statistics are also demonstrated in example:* vApplicationIdleHook* vApplicationStackOverflowHook* vApplicationMallocFailedHook" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/frdmk32l3a6/rtos_examples/freertos_generic/cm4">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_generic/cm4" type="xml">
            <files mask="freertos_generic_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_hello_cm4" name="freertos_hello_cm4" brief="The Hello World project is a simple demonstration program that uses the SDK UART drivere incombination with FreeRTOS. The purpose of this demo is to show how to use the debug console and toprovide a simple project for debugging and further development.The example application creates one task called hello_task. This task print &quot;Hello world.&quot; messagevia debug console utility and suspend itself." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/frdmk32l3a6/rtos_examples/freertos_hello/cm4">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_hello/cm4" type="xml">
            <files mask="freertos_hello_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_lpi2c_cm4" name="freertos_lpi2c_cm4" brief="The LPI2C Example project is a demonstration program that uses the KSDK software to manipulate the Low Power Inter-Integrated Circuit.The example uses two instances of LPI2C, one in configured as master and the other one as slave.The LPI2C master sends data to LPI2C slave. The slave will check the data it receives and shows the log." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/frdmk32l3a6/rtos_examples/freertos_lpi2c/cm4">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_lpi2c/cm4" type="xml">
            <files mask="freertos_lpi2c_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_lpspi_cm4" name="freertos_lpspi_cm4" brief="The lpspi_interrupt example shows how to use LPSPI driver in interrupt way:In this example , one lpspi instance used as LPSPI master and another lpspi instance used as LPSPI slave.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/frdmk32l3a6/rtos_examples/freertos_lpspi/cm4">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_lpspi/cm4" type="xml">
            <files mask="freertos_lpspi_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_lpspi_b2b_master_cm4" name="freertos_lpspi_b2b_master_cm4" brief="The freertos_lpspi_b2b_master example shows how to use LPSPI driver in FreeRTOS." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/frdmk32l3a6/rtos_examples/freertos_lpspi_b2b/master/cm4">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_lpspi_b2b/master/cm4" type="xml">
            <files mask="freertos_lpspi_b2b_master_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_lpspi_b2b_slave_cm4" name="freertos_lpspi_b2b_slave_cm4" brief="The freertos_lpspi_b2b_slave example shows how to use LPSPI driver in FreeRTOS." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/frdmk32l3a6/rtos_examples/freertos_lpspi_b2b/slave/cm4">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_lpspi_b2b/slave/cm4" type="xml">
            <files mask="freertos_lpspi_b2b_slave_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_lpuart_cm4" name="freertos_lpuart_cm4" brief="The LPUART example for FreeRTOS demonstrates the possibility to use the LPUART driver in the RTOS.The example uses single instance of LPUART IP and writes string into, then reads back chars.After every 4B received, these are sent back on LPUART." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/frdmk32l3a6/rtos_examples/freertos_lpuart/cm4">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_lpuart/cm4" type="xml">
            <files mask="freertos_lpuart_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_message_buffers_cm4" name="freertos_message_buffers_cm4" brief="The FreeRTOS Message Buffers multicore project is a simple demonstration program that uses the MCUXpresso SDK software and the Message Buffers component of FreeRTOS. It shows how to implement lightweight core to core communication using FreeRTOS Message Buffers, which are lockless circular buffers that can pass data packets of varying sizes from a single sender to a single receiver. The primary core releases the secondary core from the reset and then the inter-core communication is established then. Once the Message Buffers are initialized on both cores the message exchange starts, incrementing a virtual counter that is part of the message payload. The message pingpong finishes when the counter reaches the value of 100. The Message Buffer is deinitialized at the end. NXP Multicore Manager (MCMGR) component is used for several purposes in this example: - it releases the secondary core from the reset (starts the secondary code) - it registers and use the application event for init handshaking (the secondary core application signals to the primary core it is ready to communicate) - it registers and use the FreeRtosMessageBuffersEvent for inter-core interrupts triggering and interrupts handling. Shared memory usage: This multicore example uses the shared memory for data exchange. The shared memory region is defined and the size can be adjustable in the linker file. The shared memory region start address and the size have to be defined in linker file for each core equally. The shared memory start address is then exported from the linker to the application to allow placing FreeRTOS Message Buffers at a fixed location that is then known for both cores." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" linked_projects="frdmk32l3a6_freertos_message_buffers_cm0plus" path="boards/frdmk32l3a6/multicore_examples/freertos_message_buffers/cm4">
          <external path="boards/frdmk32l3a6/multicore_examples/freertos_message_buffers/cm4" type="xml">
            <files mask="freertos_message_buffers_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_mutex_cm4" name="freertos_mutex_cm4" brief="This document explains the freertos_mutex example. It shows how mutex manage access to commonresource (terminal output).The example application creates two identical instances of write_task. Each task will lock the mutexbefore printing and unlock it after printing to ensure that the outputs from tasks are not mixedtogether.The test_task accept output message during creation as function parameter. Output message have twoparts. If xMutex is unlocked, the write_task_1 acquire xMutex and print first part of message. Thenrescheduling is performed. In this moment scheduler check if some other task could run, but secondtask write_task+_2 is blocked because xMutex is already locked by first write task. The firstwrite_task_1 continue from last point by printing of second message part. Finaly the xMutex isunlocked and second instance of write_task_2 is executed." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/frdmk32l3a6/rtos_examples/freertos_mutex/cm4">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_mutex/cm4" type="xml">
            <files mask="freertos_mutex_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_queue_cm4" name="freertos_queue_cm4" brief="This document explains the freertos_queue example. This example introduce simple logging mechanismbased on message passing.Example could be devided in two parts. First part is logger. It contain three tasks:log_add().....Add new message into the log. Call xQueueSend function to pass new message into              message queue.log_init()....Initialize logger (create logging task and message queue log_queue).log_task()....Task responsible for printing of log output.Second part is application of this simple logging mechanism. Each of two tasks write_task_1 andwrite_task_2 print 5 messages into log." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/frdmk32l3a6/rtos_examples/freertos_queue/cm4">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_queue/cm4" type="xml">
            <files mask="freertos_queue_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_segger_sysview_cm4" name="freertos_segger_sysview_cm4" brief="Segger Sysview demo shows the basic capabilities of Segger System Viewer tool.Required software:    - J-Link Software and Documentation Pack    - SystemView - Real-time analysis and visualization    - J-Link OpenSDA - Board-Specific Firmwarescan be downloaded from https://www.segger.com/downloads/jlinkDemo requires JLink connected. The JLink can be external probe or on board SDA debugger.In case of SDA debugger you have to change firmware to J-Link OpenSDA by holding board RESET button while power up board. The board is then detected as USB mass storage device and it's required to copy the .bin firmware to the device. When it's done you have to reset the board once more." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples/visualization" path="boards/frdmk32l3a6/rtos_examples/visualization/freertos_segger_sysview/cm4">
          <external path="boards/frdmk32l3a6/rtos_examples/visualization/freertos_segger_sysview/cm4" type="xml">
            <files mask="freertos_segger_sysview_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_sem_cm4" name="freertos_sem_cm4" brief="This document explains the freertos_sem example, what to expect when running it and a briefintroduction to the API. The freertos_sem example code shows how semaphores works. Two differenttasks are synchronized in bilateral rendezvous model.The example uses four tasks. One producer_task and three consumer_tasks. The producer_task starts bycreating of two semaphores (xSemaphore_producer and xSemaphore_consumer). These semaphores controlaccess to virtual item. The synchronization is based on bilateral rendezvous pattern. Both ofconsumer and producer must be prepared to enable transaction." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/frdmk32l3a6/rtos_examples/freertos_sem/cm4">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_sem/cm4" type="xml">
            <files mask="freertos_sem_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_sem_static_cm4" name="freertos_sem_static_cm4" brief="This document explains the freertos_sem example, what to expect when running it and a briefintroduction to the API. The freertos_sem example code shows how semaphores works. Two differenttasks are synchronized in bilateral rendezvous model.The example uses four tasks. One producer_task and three consumer_tasks. The producer_task starts bycreating of two semaphores (xSemaphore_producer and xSemaphore_consumer). These semaphores controlaccess to virtual item. The synchronization is based on bilateral rendezvous pattern. Both ofconsumer and producer must be prepared to enable transaction." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/frdmk32l3a6/rtos_examples/freertos_sem_static/cm4">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_sem_static/cm4" type="xml">
            <files mask="freertos_sem_static_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_swtimer_cm4" name="freertos_swtimer_cm4" brief="This document explains the freertos_swtimer example. It shows usage of software timer and itscallback.The example application creates one software timer SwTimer. The timer's callback SwTimerCallback isperiodically executed and text &quot;Tick.&quot; is printed to terminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/frdmk32l3a6/rtos_examples/freertos_swtimer/cm4">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_swtimer/cm4" type="xml">
            <files mask="freertos_swtimer_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_freertos_tickless_cm4" name="freertos_tickless_cm4" brief="This document explains the freertos_tickless example. It shows the CPU enter at sleep mode and then it is waked up by expired time delay that using GPT module." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/frdmk32l3a6/rtos_examples/freertos_tickless/cm4">
          <external path="boards/frdmk32l3a6/rtos_examples/freertos_tickless/cm4" type="xml">
            <files mask="freertos_tickless_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_gpio_input_interrupt_cm4" name="gpio_input_interrupt_cm4" brief="The GPIO Example project is a demonstration program that uses the KSDK software to manipulate the general-purposeoutputs.The example is supported by the set, clear, and toggle write-only registers for each port output data register. The example uses the software button to control/toggle the LED." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/gpio" path="boards/frdmk32l3a6/driver_examples/gpio/input_interrupt/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/gpio/input_interrupt/cm4" type="xml">
            <files mask="gpio_input_interrupt_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_gpio_led_output_cm4" name="gpio_led_output_cm4" brief="The GPIO Example project is a demonstration program that uses the KSDK software to manipulate the general-purposeoutputs.The example is supported by the set, clear, and toggle write-only registers for each port output data register. The example take turns to shine the LED." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/gpio" path="boards/frdmk32l3a6/driver_examples/gpio/led_output/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/gpio/led_output/cm4" type="xml">
            <files mask="gpio_led_output_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_hello_world_demo_cm4" name="hello_world_demo_cm4" brief="The HelloWorld demo prints the &quot;Hello World&quot; string to the terminal using the SDK UART drivers and repeat what user input. The purpose of this demo is to show how to use the UART, and to provide a simple project for debugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/frdmk32l3a6/demo_apps/hello_world/cm4">
          <external path="boards/frdmk32l3a6/demo_apps/hello_world/cm4" type="xml">
            <files mask="hello_world_demo_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_hello_world_cm4" name="hello_world_cm4" brief="The Multicore Hello World demo application demonstrates how to set up projects for individualcores on a multicore system. In this demo, the primary core prints the &quot;Hello World from the Primary Core!&quot;string to the terminal and then releases the secondary core from the reset. The secondarycore toggles an on-board LED indicating that the secondary core is running." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" linked_projects="frdmk32l3a6_hello_world_cm0plus" path="boards/frdmk32l3a6/multicore_examples/hello_world/cm4">
          <external path="boards/frdmk32l3a6/multicore_examples/hello_world/cm4" type="xml">
            <files mask="hello_world_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_log_bm_cm4" name="log_bm_cm4" brief="The log demo is used to demonstrate how to use log component. The main function of the demo is to prompt the LOG level string according to the user input log level command." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="component_examples" path="boards/frdmk32l3a6/component_examples/log/bm/cm4">
          <external path="boards/frdmk32l3a6/component_examples/log/bm/cm4" type="xml">
            <files mask="log_bm_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_log_freertos_cm4" name="log_freertos_cm4" brief="The log demo is used to demonstrate how to use log component. The main function of the demo is to prompt the LOG level string according to the user input log level command." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="component_examples" path="boards/frdmk32l3a6/component_examples/log/freertos/cm4">
          <external path="boards/frdmk32l3a6/component_examples/log/freertos/cm4" type="xml">
            <files mask="log_freertos_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpadc_interrupt_cm4" name="lpadc_interrupt_cm4" brief="The lpadc_interrupt example shows how to use interrupt with LPADC driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the LPADC'ssample input. When running the project, typing any key into debug console would trigger the conversion. ADC watermark interrupt would be asserted once the number of datawords stored in the ADC Result FIFO is greater than watermark value.In ADC ISR, the watermark flag would be cleared by reading the conversion result value. Also, result information wouldbe printed when the execution return to the main function." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpadc" path="boards/frdmk32l3a6/driver_examples/lpadc/interrupt/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpadc/interrupt/cm4" type="xml">
            <files mask="lpadc_interrupt_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpadc_polling_cm4" name="lpadc_polling_cm4" brief="The lpadc_single_polling example shows the simplest way to use LPADC driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the LPADC'ssample input. When running the project, typing any key into debug console would trigger the conversion. The execution would check the FIFO valid flag in loop until the flag is asserted, which means the conversion is completed. Then read the conversion result value and print it to debug console.Note, the default setting of initialization for the ADC converter is just an available configuration. User can changethe configuration structure's setting in application to fit the special requirement." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpadc" path="boards/frdmk32l3a6/driver_examples/lpadc/polling/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpadc/polling/cm4" type="xml">
            <files mask="lpadc_polling_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpcmp_interrupt_cm4" name="lpcmp_interrupt_cm4" brief="The LPCMP interrupt Example shows how to use interrupt with LPCMP driver.In this example, user should indicate an input channel to capture a voltage signal (can be controlled by user) as the LPCMP's positive channel input. On the negative side, the internal 6-bit DAC is used to generate the fixed voltage abouthalf value of reference voltage.When running the project, change the input voltage of user-defined channel, then the comparator's output would changebetween logic one and zero when the user-defined channel's voltage crosses the internal DAC's value. The change ofcomparator's output would generate the falling and rising edge events with their interrupts enabled. When any LPCMP interrupt happens, the LPCMP's ISR would turn on the LED light if detecting the output's rising edge, or turn off it whendetecting the output's falling edge." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpcmp" path="boards/frdmk32l3a6/driver_examples/lpcmp/interrupt/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpcmp/interrupt/cm4" type="xml">
            <files mask="lpcmp_interrupt_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpcmp_polling_cm4" name="lpcmp_polling_cm4" brief="The LPCMP polling Example shows the simplest way to use LPCMP driver and help user with a quick start.In this example, user should indicate an input channel to capture a voltage signal (can be controlled by user) as the LPCMP's positive channel input. On the negative side, the internal 6-bit DAC is used to generate the fixed voltage abouthalf value of reference voltage.When running the project, change the input voltage of user-defined channel, then the comparator's output would changebetween logic one and zero when the user's voltage crosses the internal DAC's value. The endless loop in main() functionwould detect the logic value of comparator's output, and change the LED. The LED would be turned on when the compareoutput is logic one, or turned off when zero." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpcmp" path="boards/frdmk32l3a6/driver_examples/lpcmp/polling/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpcmp/polling/cm4" type="xml">
            <files mask="lpcmp_polling_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpi2c_edma_b2b_transfer_master_cm4" name="lpi2c_edma_b2b_transfer_master_cm4" brief="The lpi2c_edma_b2b_transfer_master example shows how to use lpi2c driver as master to do board to board transfer with EDMA:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/frdmk32l3a6/driver_examples/lpi2c/edma_b2b_transfer/master/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpi2c/edma_b2b_transfer/master/cm4" type="xml">
            <files mask="lpi2c_edma_b2b_transfer_master_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpi2c_edma_b2b_transfer_slave_cm4" name="lpi2c_edma_b2b_transfer_slave_cm4" brief="The lpi2c_edma_b2b_transfer_slave example shows how to use lpi2c driver as slave to do board to board transfer with a EDMA master:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/frdmk32l3a6/driver_examples/lpi2c/edma_b2b_transfer/slave/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpi2c/edma_b2b_transfer/slave/cm4" type="xml">
            <files mask="lpi2c_edma_b2b_transfer_slave_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpi2c_interrupt_cm4" name="lpi2c_interrupt_cm4" brief="The lpi2c_functional_interrupt example shows how to use lpi2c functional driver to build a interrupt based application:In this example , one lpi2c instance used as lpi2c master and another lpi2c instance used as lpi2c slave .1. lpi2c master send data using interrupt to lpi2c slave in interrupt .2. lpi2c master read data using interrupt from lpi2c slave in interrupt .3. The example assumes that the connection is OK between master and slave, so there's NO error handling code." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/frdmk32l3a6/driver_examples/lpi2c/interrupt/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpi2c/interrupt/cm4" type="xml">
            <files mask="lpi2c_interrupt_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpi2c_interrupt_b2b_transfer_master_cm4" name="lpi2c_interrupt_b2b_transfer_master_cm4" brief="The lpi2c_interrupt_b2b_transfer_master example shows how to use lpi2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/frdmk32l3a6/driver_examples/lpi2c/interrupt_b2b_transfer/master/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpi2c/interrupt_b2b_transfer/master/cm4" type="xml">
            <files mask="lpi2c_interrupt_b2b_transfer_master_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpi2c_interrupt_b2b_transfer_slave_cm4" name="lpi2c_interrupt_b2b_transfer_slave_cm4" brief="The lpi2c_interrupt_b2b_transfer_slave example shows how to use lpi2c driver as slave to do board to board transfer with interrupt:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/frdmk32l3a6/driver_examples/lpi2c/interrupt_b2b_transfer/slave/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpi2c/interrupt_b2b_transfer/slave/cm4" type="xml">
            <files mask="lpi2c_interrupt_b2b_transfer_slave_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpi2c_polling_b2b_master_cm4" name="lpi2c_polling_b2b_master_cm4" brief="The lpi2c_polling_b2b_master example shows how to use lpi2c driver as master to do board to board transfer using polling method:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/frdmk32l3a6/driver_examples/lpi2c/polling_b2b/master/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpi2c/polling_b2b/master/cm4" type="xml">
            <files mask="lpi2c_polling_b2b_master_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpi2c_polling_b2b_slave_cm4" name="lpi2c_polling_b2b_slave_cm4" brief="The lpi2c_polling_b2b_slave example shows how to use lpi2c driver as slave to do board to board transfer with a polling master:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/frdmk32l3a6/driver_examples/lpi2c/polling_b2b/slave/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpi2c/polling_b2b/slave/cm4" type="xml">
            <files mask="lpi2c_polling_b2b_slave_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpi2c_read_accel_value_transfer_cm4" name="lpi2c_read_accel_value_transfer_cm4" brief="The lpi2c_read_accel_value example shows how to use LPI2C driver to communicate with an lpi2c device: 1. How to use the lpi2c driver to read a lpi2c device who_am_I register. 2. How to use the lpi2c driver to write/read the device registers.In this example, the values of three-axis accelerometer print to the serial terminal on PC throughthe virtual serial port on board." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/frdmk32l3a6/driver_examples/lpi2c/read_accel_value_transfer/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpi2c/read_accel_value_transfer/cm4" type="xml">
            <files mask="lpi2c_read_accel_value_transfer_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpit_chained_channel_cm4" name="lpit_chained_channel_cm4" brief="The LPIT chained channel project is a simple example of the SDK LPIT driver. It sets up the LPIT hardware block to trigger a periodic interrupt after every 1 second in the channel No.0, the channel No.1 chained with channel No.0, if LPIT contain more than two channels, the channel No.2 chained with channel No.1....the channel No.N chained with Channel No.N-1. When the LPIT interrupt is triggered." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpit" path="boards/frdmk32l3a6/driver_examples/lpit/chained_channel/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpit/chained_channel/cm4" type="xml">
            <files mask="lpit_chained_channel_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpit_single_channel_cm4" name="lpit_single_channel_cm4" brief="The LPIT single channel project is a simple example of the SDK LPIT driver. It sets up the LPIThardware block to trigger a periodic interrupt after every 1 second. When the LPIT interrupt is triggereda message a printed on the serial terminal and an LED is toggled on the board." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpit" path="boards/frdmk32l3a6/driver_examples/lpit/single_channel/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpit/single_channel/cm4" type="xml">
            <files mask="lpit_single_channel_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpspi_edma_b2b_transfer_master_cm4" name="lpspi_edma_b2b_transfer_master_cm4" brief="The lpspi_edma_b2b_transfer example shows how to use LPSPI driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_edma_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in edma . (LPSPI Slave using edma to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/frdmk32l3a6/driver_examples/lpspi/edma_b2b_transfer/master/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpspi/edma_b2b_transfer/master/cm4" type="xml">
            <files mask="lpspi_edma_b2b_transfer_master_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpspi_edma_b2b_transfer_slave_cm4" name="lpspi_edma_b2b_transfer_slave_cm4" brief="The lpspi_edma_b2b_transfer example shows how to use LPSPI driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_edma_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in edma . (LPSPI Slave using edma to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/frdmk32l3a6/driver_examples/lpspi/edma_b2b_transfer/slave/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpspi/edma_b2b_transfer/slave/cm4" type="xml">
            <files mask="lpspi_edma_b2b_transfer_slave_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpspi_interrupt_cm4" name="lpspi_interrupt_cm4" brief="The lpspi_functional_interrupt example shows how to use LPSPI driver in interrupt way:In this example , one lpspi instance used as LPSPI master and another lpspi instance used as LPSPI slave .1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/frdmk32l3a6/driver_examples/lpspi/interrupt/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpspi/interrupt/cm4" type="xml">
            <files mask="lpspi_interrupt_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpspi_interrupt_b2b_master_cm4" name="lpspi_interrupt_b2b_master_cm4" brief="The lpspi_interrupt_b2b example shows how to use LPSPI driver in interrupt way:In this example , we need two boards , one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_interrupt_b2b_master.c' includes the LPSPI master code.This example does not use the transactional API in LPSPI driver. It's a demonstration that how to use the interrupt in KSDK driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/frdmk32l3a6/driver_examples/lpspi/interrupt_b2b/master/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpspi/interrupt_b2b/master/cm4" type="xml">
            <files mask="lpspi_interrupt_b2b_master_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpspi_interrupt_b2b_slave_cm4" name="lpspi_interrupt_b2b_slave_cm4" brief="The lpspi_interrupt_b2b example shows how to use LPSPI driver in interrupt way:In this example , we need two boards , one board used as LPSPI master and another board used as LPSPI slave.The file 'dspi_interrupt_b2b_slave.c' includes the LPSPI slave code.This example does not use the transactional API in LPSPI driver. It's a demonstration that how to use the interrupt in KSDK driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/frdmk32l3a6/driver_examples/lpspi/interrupt_b2b/slave/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpspi/interrupt_b2b/slave/cm4" type="xml">
            <files mask="lpspi_interrupt_b2b_slave_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpspi_interrupt_b2b_transfer_master_cm4" name="lpspi_interrupt_b2b_transfer_master_cm4" brief="The lpspi_interrupt_b2b_transfer example shows how to use LPSPI driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_interrupt_b2b_transfer_master.c' includes the LPSPI master code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/frdmk32l3a6/driver_examples/lpspi/interrupt_b2b_transfer/master/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpspi/interrupt_b2b_transfer/master/cm4" type="xml">
            <files mask="lpspi_interrupt_b2b_transfer_master_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpspi_interrupt_b2b_transfer_slave_cm4" name="lpspi_interrupt_b2b_transfer_slave_cm4" brief="The lpspi_interrupt_b2b_transfer example shows how to use LPSPI driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_interrupt_b2b_transfer_slave.c' includes the LPSPI slave code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/frdmk32l3a6/driver_examples/lpspi/interrupt_b2b_transfer/slave/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpspi/interrupt_b2b_transfer/slave/cm4" type="xml">
            <files mask="lpspi_interrupt_b2b_transfer_slave_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpspi_polling_b2b_transfer_master_cm4" name="lpspi_polling_b2b_transfer_master_cm4" brief="The lpspi_polling_b2b_transfer example shows how to use LPSPI driver in polling way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_polling_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in polling . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/frdmk32l3a6/driver_examples/lpspi/polling_b2b_transfer/master/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpspi/polling_b2b_transfer/master/cm4" type="xml">
            <files mask="lpspi_polling_b2b_transfer_master_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpspi_polling_b2b_transfer_slave_cm4" name="lpspi_polling_b2b_transfer_slave_cm4" brief="The lpspi_polling_b2b_transfer example shows how to use LPSPI driver in polling way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_polling_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in polling . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/frdmk32l3a6/driver_examples/lpspi/polling_b2b_transfer/slave/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpspi/polling_b2b_transfer/slave/cm4" type="xml">
            <files mask="lpspi_polling_b2b_transfer_slave_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lptmr_cm4" name="lptmr_cm4" brief="The LPTMR project is a simple demonstration program of the SDK LPTMR driver. It sets up the LPTMRhardware block to trigger a periodic interrupt after every 1 second. When the LPTMR interrupt is triggereda message a printed on the UART terminal and an LED is toggled on the board." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples" path="boards/frdmk32l3a6/driver_examples/lptmr/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lptmr/cm4" type="xml">
            <files mask="lptmr_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpuart_edma_transfer_cm4" name="lpuart_edma_transfer_cm4" brief="The lpuart_edma Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/frdmk32l3a6/driver_examples/lpuart/edma_transfer/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpuart/edma_transfer/cm4" type="xml">
            <files mask="lpuart_edma_transfer_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpuart_interrupt_cm4" name="lpuart_interrupt_cm4" brief="The lpuart_functioncal_interrupt example shows how to use lpuart driver functionalAPI to receive data with interrupt method:In this example, one lpuart instance connect to PC, the board willsend back all characters that PC send to the board." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/frdmk32l3a6/driver_examples/lpuart/interrupt/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpuart/interrupt/cm4" type="xml">
            <files mask="lpuart_interrupt_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpuart_interrupt_rb_transfer_cm4" name="lpuart_interrupt_rb_transfer_cm4" brief="The lpuart_interrupt_ring_buffer Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/frdmk32l3a6/driver_examples/lpuart/interrupt_rb_transfer/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpuart/interrupt_rb_transfer/cm4" type="xml">
            <files mask="lpuart_interrupt_rb_transfer_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpuart_interrupt_transfer_cm4" name="lpuart_interrupt_transfer_cm4" brief="The lpuart_interrupt Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/frdmk32l3a6/driver_examples/lpuart/interrupt_transfer/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpuart/interrupt_transfer/cm4" type="xml">
            <files mask="lpuart_interrupt_transfer_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpuart_interrupt_transfer_seven_bits_cm4" name="lpuart_interrupt_transfer_seven_bits_cm4" brief="The lpuart_interrupt_transfer_seven_bits Example project is to demonstrate usage of the KSDK lpuart driver with seven data bits feature enabled.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters.NOTE: Please set com port format to &quot;7 data bits without parity bit&quot; in PC's com port tool" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/frdmk32l3a6/driver_examples/lpuart/interrupt_transfer_seven_bits/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpuart/interrupt_transfer_seven_bits/cm4" type="xml">
            <files mask="lpuart_interrupt_transfer_seven_bits_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpuart_polling_cm4" name="lpuart_polling_cm4" brief="The lpuart_polling Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console instantly." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/frdmk32l3a6/driver_examples/lpuart/polling/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpuart/polling/cm4" type="xml">
            <files mask="lpuart_polling_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_lpuart_polling_seven_bits_cm4" name="lpuart_polling_seven_bits_cm4" brief="The lpuart_polling_seven_bits Example project is to demonstrate usage of the KSDK lpuart driver with seven data bits feature enabled.In the example, you can send characters to the console back and they will be printed out onto console instantly.NOTE: Please set com port format to &quot;7 data bits without parity bit&quot; in PC's com port tool" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/frdmk32l3a6/driver_examples/lpuart/polling_seven_bits/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/lpuart/polling_seven_bits/cm4" type="xml">
            <files mask="lpuart_polling_seven_bits_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_mbedtls_benchmark_cm4" name="mbedtls_benchmark_cm4" brief="The mbdedTLS Benchmark demo application performs cryptographic algorithm benchmarking and prints results to theterminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="mbedtls_examples" path="boards/frdmk32l3a6/mbedtls_examples/mbedtls_benchmark/cm4">
          <external path="boards/frdmk32l3a6/mbedtls_examples/mbedtls_benchmark/cm4" type="xml">
            <files mask="mbedtls_benchmark_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_mbedtls_selftest_cm4" name="mbedtls_selftest_cm4" brief="The mbdedTLS SelfTest program performs cryptographic algorithm testing and prints results to theterminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="mbedtls_examples" path="boards/frdmk32l3a6/mbedtls_examples/mbedtls_selftest/cm4">
          <external path="boards/frdmk32l3a6/mbedtls_examples/mbedtls_selftest/cm4" type="xml">
            <files mask="mbedtls_selftest_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_mu_interrupt_core0" name="mu_interrupt_core0" brief="The mu_interrupt example shows how to use MU driver in interrupt way:In this example:1. Core 0 send message to Core 1 in interrupt mode via MU module.2. Core 1 send message back to Core 0 in interrupt mode.3. Core 0 receive message sent from Core 1 in interrupt mode." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/mu" linked_projects="frdmk32l3a6_mu_interrupt_core1" path="boards/frdmk32l3a6/driver_examples/mu/interrupt/core0">
          <external path="boards/frdmk32l3a6/driver_examples/mu/interrupt/core0" type="xml">
            <files mask="mu_interrupt_core0_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_mu_polling_core0" name="mu_polling_core0" brief="The mu_polling example shows how to use MU driver in polling way:In this example:1. Core 0 send message to Core 1 in polling mode via MU module.2. Core 1 send message back to Core 0 in polling mode.3. Core 0 receive message sent from Core 1 in polling mode." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/mu" linked_projects="frdmk32l3a6_mu_polling_core1" path="boards/frdmk32l3a6/driver_examples/mu/polling/core0">
          <external path="boards/frdmk32l3a6/driver_examples/mu/polling/core0" type="xml">
            <files mask="mu_polling_core0_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_multicore_manager_cm4" name="multicore_manager_cm4" brief="The Multicore Manager example application demonstrates advanced features of the MCMgr component.&#10;In this demo, the primary core prints the &quot;Hello World from the Primary Core!&quot; string to the terminal&#10;and then releases the secondary core from the reset. The secondary&#10;core toggles an on-board LED indicating that the secondary core is running. It is also possible to&#10;stop/start the secondary core during the runtime by pressing on-board buttons. The&#10;on-board LED then indicates the change, it stops/starts toggling accordingly.&#10;&#10;This application also shows how to use the Multicore Manager for&#10;remote core monitoring and handling of events such as application, CoreUp, CoreDown and exception events.&#10;Application-specific callback functions for events are registered by the MCMGR_RegisterEvent() API&#10;on the primary core. Triggering these events is done using the MCMGR_TriggerEvent() API on the&#10;secondary core. While CoreUp, CoreDown events are triggered from startup and MCMGR code, the&#10;application event is triggered from the application.&#10;The exception event is triggered in the secondary application after 100 LED toggles by trying&#10;to write to flash. This raises the exception on the secondary core and triggers the&#10;RemoteExceptionEvent on the primary core.&#10;" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" linked_projects="frdmk32l3a6_multicore_manager_cm0plus" path="boards/frdmk32l3a6/multicore_examples/multicore_manager/cm4">
          <external path="boards/frdmk32l3a6/multicore_examples/multicore_manager/cm4" type="xml">
            <files mask="multicore_manager_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_pflash_cm4" name="pflash_cm4" brief="The pflash example shows how to use flash driver to operate program flash:" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flash" path="boards/frdmk32l3a6/driver_examples/flash/pflash/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/flash/pflash/cm4" type="xml">
            <files mask="pflash_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_power_mode_switch_cm4" name="power_mode_switch_cm4" brief="The IEE IEER MMDC demo application demonstrates usage of the IEE and IEER driver. The Inline Encryption Engine (IEE) together with Inline Encryption Engine Router (IEER) provides a means to perform inline encryption and decryption of information transferred over external memory interfaces. In this demo application encrypted read and write is performed to external DDR Ram using MMDC. At first IEE is configured to perform AES XTS encryprion/decryption using KEY1 &amp; KEY2 for region 3 (highest priority region). Offset setting for region 3 is calculated using IEE_GetOffset() function. IEE uses offset to determine the physical address of the memory location that you are accessing. Offset is added to IEE address when performing read or write access to IEE. Then IEER is set to cover all its address space for region 3. Now all data written/read to/from IEE address will be encrypted/decrypted and written/read to/from physical DDR memory. Then test data are written over IEE to DDR. After the successful write, data are read directly from the DDR (without using IEE) to see that they are crypted. Then read using IEE is performed and the data are compared to written data in the begining of this demo." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" linked_projects="frdmk32l3a6_power_mode_switch_cm0plus" path="boards/frdmk32l3a6/demo_apps/power_mode_switch/cm4">
          <external path="boards/frdmk32l3a6/demo_apps/power_mode_switch/cm4" type="xml">
            <files mask="power_mode_switch_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_rpmsg_lite_pingpong_cm4" name="rpmsg_lite_pingpong_cm4" brief="The Multicore RPMsg-Lite pingpong project is a simple demonstration program that uses theMCUXpresso SDK software and the RPMsg-Lite library and shows how to implement the inter-corecommunicaton between cores of the multicore system. The primary core releases the secondary corefrom the reset and then the inter-core communication is established. Once the RPMsg is initializedand endpoints are created the message exchange starts, incrementing a virtual counter that is partof the message payload. The message pingpong finishes when the counter reaches the value of 100.Then the RPMsg-Lite is deinitialized and the procedure of the data exchange is repeated again.Shared memory usageThis multicore example uses the shared memory for data exchange. The shared memory region isdefined and the size can be adjustable in the linker file. The shared memory region start addressand the size have to be defined in linker file for each core equally. The shared memory startaddress is then exported from the linker to the application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" linked_projects="frdmk32l3a6_rpmsg_lite_pingpong_cm0plus" path="boards/frdmk32l3a6/multicore_examples/rpmsg_lite_pingpong/cm4">
          <external path="boards/frdmk32l3a6/multicore_examples/rpmsg_lite_pingpong/cm4" type="xml">
            <files mask="rpmsg_lite_pingpong_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_rpmsg_lite_pingpong_rtos_cm4" name="rpmsg_lite_pingpong_rtos_cm4" brief="The Multicore RPMsg-Lite pingpong RTOS project is a simple demonstration program that uses theMCUXpresso SDK software and the RPMsg-Lite library and shows how to implement the inter-corecommunicaton between cores of the multicore system. The primary core releases the secondary corefrom the reset and then the inter-core communication is established. Once the RPMsg is initializedand endpoints are created the message exchange starts, incrementing a virtual counter that is partof the message payload. The message pingpong finishes when the counter reaches the value of 100.Then the RPMsg-Lite is deinitialized and the procedure of the data exchange is repeated again.Shared memory usageThis multicore example uses the shared memory for data exchange. The shared memory region isdefined and the size can be adjustable in the linker file. The shared memory region start addressand the size have to be defined in linker file for each core equally. The shared memory startaddress is then exported from the linker to the application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" linked_projects="frdmk32l3a6_rpmsg_lite_pingpong_rtos_cm0plus" path="boards/frdmk32l3a6/multicore_examples/rpmsg_lite_pingpong_rtos/cm4">
          <external path="boards/frdmk32l3a6/multicore_examples/rpmsg_lite_pingpong_rtos/cm4" type="xml">
            <files mask="rpmsg_lite_pingpong_rtos_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_rtc_cm4" name="rtc_cm4" brief="The RTC project is a simple demonstration program of the SDK RTC driver. It sets up the RTChardware block to trigger an alarm after a user specified time period. The test will set the currentdate and time to a predefined value. The alarm will be set with reference to this predefined dateand time." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples" path="boards/frdmk32l3a6/driver_examples/rtc/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/rtc/cm4" type="xml">
            <files mask="rtc_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_rtc_func_cm4" name="rtc_func_cm4" brief="The RTC demo application demonstrates the important features of the RTC Module by using the RTC Peripheral Driver.The RTC demo supports the following features:- Calendar  + Get the current date time with Year, Month, Day, Hour, Minute, and Second.  + Set the current date time with Year, Month, Day, Hour, Minute, and Second.- Alarm  + Set the alarm based on the current time.  + Application prints a notification when the alarm expires.- Seconds interrupt  + Use second interrupt function to display a digital time blink every second." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/frdmk32l3a6/demo_apps/rtc_func/cm4">
          <external path="boards/frdmk32l3a6/demo_apps/rtc_func/cm4" type="xml">
            <files mask="rtc_func_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_sdcard_fatfs_cm4" name="sdcard_fatfs_cm4" brief="The SDCARD FATFS project is a demonstration program that uses the SDK software. Tt mounts a file system based on a SD card then does &quot;creat directory/read directory/create file/write file/read file&quot;operation. The file sdhc_config.h has default SDHC configuration which can be adjusted to let carddriver has different performance. The purpose of this example is to show how to use SDCARD driver based FATFS disk in SDK software." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/sdcard_fatfs" path="boards/frdmk32l3a6/sdmmc_examples/sdcard_fatfs/cm4">
          <external path="boards/frdmk32l3a6/sdmmc_examples/sdcard_fatfs/cm4" type="xml">
            <files mask="sdcard_fatfs_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_sdcard_fatfs_freertos_cm4" name="sdcard_fatfs_freertos_cm4" brief="The SDCARD FATFS FREERTOS project is a demonstration program that uses the SDK software. The purpose of this example is to show how to use SDCARD with fatfs and freertos." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/sdcard_fatfs_freertos" path="boards/frdmk32l3a6/sdmmc_examples/sdcard_fatfs_freertos/cm4">
          <external path="boards/frdmk32l3a6/sdmmc_examples/sdcard_fatfs_freertos/cm4" type="xml">
            <files mask="sdcard_fatfs_freertos_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_sdcard_freertos_cm4" name="sdcard_freertos_cm4" brief="The SDCARD FreeRTOS project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver with FreeRTOS in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/sdcard_freertos" path="boards/frdmk32l3a6/sdmmc_examples/sdcard_freertos/cm4">
          <external path="boards/frdmk32l3a6/sdmmc_examples/sdcard_freertos/cm4" type="xml">
            <files mask="sdcard_freertos_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_sdcard_interrupt_cm4" name="sdcard_interrupt_cm4" brief="The SDCARD Interrupt project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver andshow how to use interrupt based transfer API in SDHC driver in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/sdcard_interrupt" path="boards/frdmk32l3a6/sdmmc_examples/sdcard_interrupt/cm4">
          <external path="boards/frdmk32l3a6/sdmmc_examples/sdcard_interrupt/cm4" type="xml">
            <files mask="sdcard_interrupt_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_sdcard_polling_cm4" name="sdcard_polling_cm4" brief="The SDCARD Polling project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver andshow how to use polling based transfer API in SDHC driver in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/sdcard_polling" path="boards/frdmk32l3a6/sdmmc_examples/sdcard_polling/cm4">
          <external path="boards/frdmk32l3a6/sdmmc_examples/sdcard_polling/cm4" type="xml">
            <files mask="sdcard_polling_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_sema42_dual_core_core0" name="sema42_dual_core_core0" brief="The sema42 example shows how to use SEMA42 driver to lock and unlock a sema gate:In this example:1. Firstly, Core 0 turn on LED  and lock a sema gate then boot up Core 1 wake up.2. Core 1 must be wait until Core 0 unlocks this sema gate to lock it.3. After user press any key in terminal window, the sema gate will be unlocked by core 0,then core 1 will lock it and turn off the LEDIf the board does not have LED to show the status, then core 1 will send a flagto core 0 when core 1 has locked the sema gate. Core 0 outputs the success logafter it received the flag." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sema42" linked_projects="frdmk32l3a6_sema42_dual_core_core1" path="boards/frdmk32l3a6/driver_examples/sema42/dual_core/core0">
          <external path="boards/frdmk32l3a6/driver_examples/sema42/dual_core/core0" type="xml">
            <files mask="sema42_dual_core_core0_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_shell_cm4" name="shell_cm4" brief="The Shell Demo application demonstrates to control Leds by commands." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/frdmk32l3a6/demo_apps/shell/cm4">
          <external path="boards/frdmk32l3a6/demo_apps/shell/cm4" type="xml">
            <files mask="shell_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_tpm_combine_pwm_cm4" name="tpm_combine_pwm_cm4" brief="The TPM project is a demonstration program of generating a combined PWM signal by the SDK TPM driver. It sets up the TPMhardware block to output PWM signals on two TPM channels. The example also show's the complementary mode of operationand deadtime insertion.On boards that have 2 LEDs connected to the TPM pins, the user will seea change in LED brightness if user enter different values.And if the board do not support LEDs to show, the outputs can be observed by oscilloscope." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/tpm" path="boards/frdmk32l3a6/driver_examples/tpm/combine_pwm/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/tpm/combine_pwm/cm4" type="xml">
            <files mask="tpm_combine_pwm_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_tpm_dual_edge_capture_cm4" name="tpm_dual_edge_capture_cm4" brief="The TPM project is a demonstration program of the SDK TPM driver's dual-edge capture feature.This feature is available only on certain SoC's.The example sets up a TPM channel-pair for dual-edge capture. Once the input signal is received,this example will print the capture values and period of the input signal on the terminal window." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/tpm" path="boards/frdmk32l3a6/driver_examples/tpm/dual_edge_capture/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/tpm/dual_edge_capture/cm4" type="xml">
            <files mask="tpm_dual_edge_capture_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_tpm_input_capture_cm4" name="tpm_input_capture_cm4" brief="The TPM project is a demonstration program of the SDK TPM driver's input capture feature.The example sets up a TPM channel for dual-edge capture. Once the input signal is received,this example will print the capture value." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/tpm" path="boards/frdmk32l3a6/driver_examples/tpm/input_capture/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/tpm/input_capture/cm4" type="xml">
            <files mask="tpm_input_capture_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_tpm_output_compare_cm4" name="tpm_output_compare_cm4" brief="The TPM project is a demonstration program of the SDK TPM driver's output compare feature.It sets up one TPM channel to toggle the output when a match occurs with the channel value. The usershould probe the TPM output with a oscilloscope to see the signal toggling." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/tpm" path="boards/frdmk32l3a6/driver_examples/tpm/output_compare/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/tpm/output_compare/cm4" type="xml">
            <files mask="tpm_output_compare_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_tpm_pwm_twochannel_cm4" name="tpm_pwm_twochannel_cm4" brief="The TPM project is a simple demonstration program of the SDK TPM driver. It sets up the TPMhardware block to output PWM signals on two TPM channels. The PWM dutycycle on both channelsis manually updated. On boards that have an LED connected to the TPM pins, the user will seea change in LED brightness if user enter different values." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/tpm" path="boards/frdmk32l3a6/driver_examples/tpm/pwm_twochannel/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/tpm/pwm_twochannel/cm4" type="xml">
            <files mask="tpm_pwm_twochannel_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_tpm_simple_pwm_cm4" name="tpm_simple_pwm_cm4" brief="The TPM project is a simple demonstration program of the SDK TPM driver. It sets up the TPMhardware block to output a center-aligned PWM signal. The PWM dutycycle is manually updated.On boards that have an LED connected to the TPM pins, the user will see a change in LEDbrightness if user enter different values." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/tpm" path="boards/frdmk32l3a6/driver_examples/tpm/simple_pwm/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/tpm/simple_pwm/cm4" type="xml">
            <files mask="tpm_simple_pwm_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_tpm_timer_cm4" name="tpm_timer_cm4" brief="The TPM project is a simple demonstration program of the SDK TPM driver to use TPM as a timer.It sets up the TPM hardware block to trigger an interrupt every 1 millisecond.When the TPM interrupt is triggered a message a printed on the UART terminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/tpm" path="boards/frdmk32l3a6/driver_examples/tpm/timer/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/tpm/timer/cm4" type="xml">
            <files mask="tpm_timer_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_trng_random_cm4" name="trng_random_cm4" brief="The True Random Number Generator (TRNG) is a hardware accelerator module that generates a 512-bitentropy as needed by an entropy consuming module or by other post processing functions. The TRNGExample project is a demonstration program that uses the KSDK software to generate random numbersand prints them to the terminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/trng" path="boards/frdmk32l3a6/driver_examples/trng/random/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/trng/random/cm4" type="xml">
            <files mask="trng_random_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_tstmr_cm4" name="tstmr_cm4" brief="The tstmr example shows the usage of TSTMR driver in application. The TSTMR module is a free running incrementing counter that starts running after system reset de-assertion and can be read at any time by the software for determining the software ticks.The TSTMR runs off the 1 MHz clock and resets on every system reset.In this example, it would output a time stamp information when the application is ready. And then, delay for 1 second with TSTMR_DelayUs() function. Before and after the delay, it would output the two time stamps information again." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples" path="boards/frdmk32l3a6/driver_examples/tstmr/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/tstmr/cm4" type="xml">
            <files mask="tstmr_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_wdog32_cm4" name="wdog32_cm4" brief="The WDOG32 Example project is to demonstrate usage of the KSDK wdog32 driver.In this example, fast testing is first implemented to test the wdog32.After this, refreshing the watchdog in None-window mode and window mode is executed.Note wdog32 is disabled in SystemInit function which means wdog32 is disabledafter chip emerges from reset." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples" path="boards/frdmk32l3a6/driver_examples/wdog32/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/wdog32/cm4" type="xml">
            <files mask="wdog32_cm4_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_xrdc_cm4" name="xrdc_cm4" brief="The xrdc example shows how to control the memory and peripheral accesspolicy using XRDC.In this example, one peripheral and a memory region are set to unaccessible, thenthe hardfault occurs." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples" path="boards/frdmk32l3a6/driver_examples/xrdc/cm4">
          <external path="boards/frdmk32l3a6/driver_examples/xrdc/cm4" type="xml">
            <files mask="xrdc_cm4_v3_8.xml"/>
          </external>
        </example>
      </examples>
    </board>
    <board id="frdmk32l3a6_agm01" name="FRDM-K32L3A6-AGM01" href="" version="1.0.0" package="K32L3A60VPJ1A" type="kit">
      <description>Freedom Development Platform for K32 L3 MCUs with 9-Axis sensor shield board FRDM-STBC-AGM01 having FXAS21002C Gyroscope &amp; FXOS8700CQ E-compass sensors.</description>
      <image path="boards/frdmk32l3a6_agm01" type="image">
        <files mask="frdmk32l3a6_agm01.png"/>
      </image>
      <examples>
        <example id="frdmk32l3a6_agm01_fxas21002_fifo" name="fxas21002_fifo" brief="The FXAS21002 FIFO example application demonstrates the use of the FXAS21002 sensor in Buffered (FIFO) Mode.The example demonstrates configuration of all registers reguired to put the sensor in FIFO Mode and read out samples.The sensor reads samples and are buffered upto the configured Water Mark Level and then a Flag is set.The application consistently checks the Flag and when set, reads out all(count=Water Mark Level) samples." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="issdk/sensors" path="boards/frdmk32l3a6_agm01/issdk_examples/sensors/fxas21002/fxas21002_fifo/cm4">
          <external path="boards/frdmk32l3a6_agm01/issdk_examples/sensors/fxas21002/fxas21002_fifo/cm4" type="xml">
            <files mask="fxas21002_fifo_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_agm01_fxas21002_poll" name="fxas21002_poll" brief="The FXAS21002 Poll example application demonstrates the use of the FXAS21002 sensor in the Poll (Non-Buffered) Mode. The example demonstrates configuration of all registers reguired to put the sensor into Poll Mode and read out a sample." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="issdk/sensors" path="boards/frdmk32l3a6_agm01/issdk_examples/sensors/fxas21002/fxas21002_poll/cm4">
          <external path="boards/frdmk32l3a6_agm01/issdk_examples/sensors/fxas21002/fxas21002_poll/cm4" type="xml">
            <files mask="fxas21002_poll_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_agm01_fxos8700_fifo" name="fxos8700_fifo" brief="The FXAS8700 FIFO example application demonstrates the use of the FXAS8700 sensor in Buffered (FIFO) Mode.The example demonstrates configuration of all registers reguired to put the sensor in FIFO Mode and read out samples.The sensor reads samples and are buffered upto the configured Water Mark Level and then a Flag is set.The application consistently checks the Flag and when set, reads out all(count=Water Mark Level) samples." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="issdk/sensors" path="boards/frdmk32l3a6_agm01/issdk_examples/sensors/fxos8700/fxos8700_fifo/cm4">
          <external path="boards/frdmk32l3a6_agm01/issdk_examples/sensors/fxos8700/fxos8700_fifo/cm4" type="xml">
            <files mask="fxos8700_fifo_v3_8.xml"/>
          </external>
        </example>
        <example id="frdmk32l3a6_agm01_fxos8700_poll" name="fxos8700_poll" brief="The FXOS8700 Poll example application demonstrates the use of the FXOS8700 sensor in the Poll (Non-Buffered) Mode. The example demonstrates configuration of all registers reguired to put the sensor into Poll Mode and read out a sample." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="issdk/sensors" path="boards/frdmk32l3a6_agm01/issdk_examples/sensors/fxos8700/fxos8700_poll/cm4">
          <external path="boards/frdmk32l3a6_agm01/issdk_examples/sensors/fxos8700/fxos8700_poll/cm4" type="xml">
            <files mask="fxos8700_poll_v3_8.xml"/>
          </external>
        </example>
      </examples>
    </board>
  </boards>
  <devices>
    <device id="K32L3A60xxx" name="K32L3A60" version="1.0.0" full_name="K32L3A60xxx" family="K32L3A60" platform="Kinetis">
      <description>NXP’s Energy Efficient Cortex-M4 MCU with Cortex-M0+ and Advanced Security</description>
      <metadataSet>
        <metadata key="USB_KHCI_COUNT" value="1"/>
        <metadata key="vendor" value="NXP"/>
      </metadataSet>
      <core id="cm0plus_K32L3A60xxx" name="cm0plus" fpu="false" type="cm0plus" slave_roles="M0SLAVE" boot_role="primary_secondary"/>
      <core id="cm4_K32L3A60xxx" name="cm4" fpu="true" type="cm4" boot_role="primary"/>
      <memory>
        <memoryBlock id="PROGRAM_FLASH_cm4_K32L3A60xxx" name="PROGRAM_FLASH_cm4" addr="00000000" size="00100000" type="Flash" access="RO"/>
        <memoryBlock id="PROGRAM_FLASH_cm0plus_K32L3A60xxx" name="PROGRAM_FLASH_cm0plus" addr="01000000" size="00040000" type="Flash" access="RO"/>
        <memoryBlock id="SRAM_DTC_cm4_K32L3A60xxx" name="SRAM_DTC_cm4" addr="20000000" size="00030000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM_TCM_cm0plus_K32L3A60xxx" name="SRAM_TCM_cm0plus" addr="09000000" size="00020000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM_ITC_cm4_K32L3A60xxx" name="SRAM_ITC_cm4" addr="08000000" size="00010000" type="RAM" access="RW"/>
        <memoryBlock id="FLEX_RAM_K32L3A60xxx" name="FLEX_RAM" addr="48000000" size="00001000" type="RAM" access="RW"/>
        <memoryBlock id="USB_RAM_K32L3A60xxx" name="USB_RAM" addr="48010000" size="00000800" type="RAM" access="RW"/>
      </memory>
      <total_memory flash_size_kb="1280" ram_size_kb="384"/>
      <package id="K32L3A60VPJ1A" name="K32L3A60VPJ1A"/>
      <evaluation_boards>
        <evaluation_board name="frdmk32l3a6"/>
      </evaluation_boards>
      <debug_configurations>
        <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
          <params>
            <params id="internal.attach.slave.release.K32L3A60xxx" name="internal.attach.slave" value="true"/>
            <params id="internal.multi.swd.release.K32L3A60xxx" name="internal.multi.swd" value="true"/>
            <params id="internal.wiretype.release.K32L3A60xxx" name="internal.wiretype" value="SWD*,JTAG"/>
            <params id="internal.has_swo.release.K32L3A60xxx" name="internal.has_swo" value="true"/>
            <params id="internal.connect.script.debug.mcuxpresso.K32L3A60xxx" name="internal.connect.script" value="K32L3Aconnect.scp"/>
          </params>
          <drivers>
            <driver id_refs="PROGRAM_FLASH_cm4_K32L3A60xxx">
              <driverBinary path="devices/K32L3A60/mcuxpresso" type="binary">
                <files mask="FTFE_4K_K32L3A_cm4.cfx"/>
              </driverBinary>
            </driver>
            <driver id_refs="PROGRAM_FLASH_cm0plus_K32L3A60xxx">
              <driverBinary path="devices/K32L3A60/mcuxpresso" type="binary">
                <files mask="FTFE_2K_K32L3A_cm0plus.cfx"/>
              </driverBinary>
            </driver>
          </drivers>
        </debug_configuration>
      </debug_configurations>
      <linkerSettings nature="c_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="8"/>
        <linker property="data_align" value="8"/>
        <linker property="bss_align" value="8"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
      <linkerSettings nature="cpp_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="8"/>
        <linker property="data_align" value="8"/>
        <linker property="bss_align" value="8"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
    </device>
  </devices>
  <components>
    <component id="project_template.frdmk32l3a6.K32L3A60" name="frdmk32l3a6" brief="Board_project_template frdmk32l3a6" version="1.0.0" full_name="Board_project_template frdmk32l3a6" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="Board Support/SDK Project Template" user_visible="true" type="project_template" package_base_path="boards/frdmk32l3a6/project_template" project_base_path="board">
      <dependencies>
        <all>
          <component_dependency value="platform.devices.K32L3A60_startup.K32L3A60"/>
          <component_dependency value="platform.drivers.common.K32L3A60"/>
          <component_dependency value="platform.drivers.gpio.K32L3A60"/>
          <component_dependency value="platform.drivers.port.K32L3A60"/>
          <component_dependency value="platform.drivers.lpuart.K32L3A60"/>
          <component_dependency value="component.lpuart_adapter.K32L3A60"/>
          <component_dependency value="platform.drivers.msmc.K32L3A60"/>
          <component_dependency value="platform.drivers.lpi2c.K32L3A60"/>
          <any_of>
            <all>
              <component_dependency value="platform.utilities.assert.K32L3A60"/>
              <component_dependency value="utility.debug_console.K32L3A60"/>
              <component_dependency value="component.serial_manager.K32L3A60"/>
            </all>
            <all>
              <component_dependency value="platform.utilities.assert_lite.K32L3A60"/>
              <component_dependency value="utility.debug_console_lite.K32L3A60"/>
            </all>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
      </source>
      <source relative_path="cm4" project_relative_path="./" type="c_include" device_cores="cm4_K32L3A60xxx">
        <files mask="pin_mux.h"/>
        <files mask="peripherals.h"/>
      </source>
      <source relative_path="cm4" project_relative_path="./" type="src" device_cores="cm4_K32L3A60xxx">
        <files mask="pin_mux.c"/>
        <files mask="peripherals.c"/>
      </source>
      <source relative_path="cm0plus" project_relative_path="./" type="c_include" device_cores="cm0plus_K32L3A60xxx">
        <files mask="pin_mux.h"/>
        <files mask="peripherals.h"/>
      </source>
      <source relative_path="cm0plus" project_relative_path="./" type="src" device_cores="cm0plus_K32L3A60xxx">
        <files mask="pin_mux.c"/>
        <files mask="peripherals.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="cm4" project_relative_path="./" type="c_include" device_cores="cm4_K32L3A60xxx"/>
        <include_path relative_path="cm0plus" project_relative_path="./" type="c_include" device_cores="cm0plus_K32L3A60xxx"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS.K32L3A60" name="CMSIS" brief="Cmsis" version="5.6.0" full_name="Cmsis" devices="K32L3A60xxx" user_visible="true" type="CMSIS" package_base_path="CMSIS" project_base_path="./">
      <dependencies>
        <all>
          <component_dependency value="platform.Include_common.K32L3A60"/>
          <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.K32L3A60"/>
          <component_dependency value="platform.CMSIS_Driver"/>
          <component_dependency value="platform.CMSIS_Driver_Include.CAN_CMSISInclude.K32L3A60"/>
          <component_dependency value="platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.K32L3A60"/>
          <component_dependency value="platform.CMSIS_Driver_Include.Ethernet_MAC_CMSISInclude.K32L3A60"/>
          <component_dependency value="platform.CMSIS_Driver_Include.Ethernet_PHY_CMSISInclude.K32L3A60"/>
          <component_dependency value="platform.CMSIS_Driver_Include.Flash_CMSISInclude.K32L3A60"/>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.K32L3A60"/>
          <component_dependency value="platform.CMSIS_Driver_Include.MCI_CMSISInclude.K32L3A60"/>
          <component_dependency value="platform.CMSIS_Driver_Include.NAND_CMSISInclude.K32L3A60"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SAI_CMSISInclude.K32L3A60"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.K32L3A60"/>
          <component_dependency value="platform.CMSIS_Driver_Include.USART_CMSISInclude.K32L3A60"/>
          <component_dependency value="platform.CMSIS_Driver_Include.USB_CMSISInclude.K32L3A60"/>
          <component_dependency value="platform.CMSIS_Driver_Include.USB_Device_CMSISInclude.K32L3A60"/>
          <component_dependency value="platform.CMSIS_Driver_Include.USB_Host_CMSISInclude.K32L3A60"/>
          <component_dependency value="platform.CMSIS_Driver_Include.WiFi_CMSISInclude.K32L3A60"/>
          <component_dependency value="platform.Include_dsp.K32L3A60"/>
          <component_dependency value="platform.CMSIS_Driver_Include.GPIO_CMSISInclude.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="./" project_relative_path="CMSIS" type="doc">
        <files mask="LICENSE.txt"/>
      </source>
      <source relative_path="Include" type="c_include">
        <files mask="core_cm23.h"/>
        <files mask="cmsis_armcc.h"/>
        <files mask="tz_context.h"/>
        <files mask="core_cm3.h"/>
        <files mask="mpu_armv8.h"/>
        <files mask="core_cm4.h"/>
        <files mask="core_cm0.h"/>
        <files mask="cmsis_armclang.h"/>
        <files mask="core_cm7.h"/>
        <files mask="arm_math.h"/>
        <files mask="cmsis_iccarm.h"/>
        <files mask="core_cm1.h"/>
        <files mask="core_dsp.h"/>
        <files mask="cmsis_compiler.h"/>
        <files mask="core_cm0plus.h"/>
        <files mask="core_sc000.h"/>
        <files mask="core_armv81mml.h"/>
        <files mask="core_cm35p.h"/>
        <files mask="cmsis_armclang_ltm.h"/>
        <files mask="cmsis_gcc.h"/>
        <files mask="mpu_armv7.h"/>
        <files mask="core_armv8mml.h"/>
        <files mask="core_cm33.h"/>
        <files mask="cmsis_version.h"/>
        <files mask="core_armv8mbl.h"/>
        <files mask="core_sc300.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_common_tables.h"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_DSP_Lib.K32L3A60" name="CMSIS_DSP_Lib" brief="Cmsis_dsp_lib" version="1.7.0" full_name="Cmsis_dsp_lib" devices="K32L3A60xxx" user_visible="false" type="CMSIS" package_base_path="CMSIS/DSP" project_base_path="DSP">
      <source relative_path="Examples/ARM/arm_class_marks_example" type="src">
        <files mask="arm_class_marks_example_f32.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_class_marks_example" type="configuration">
        <files mask="arm_class_marks_example.ini"/>
      </source>
      <source relative_path="Examples/ARM/arm_class_marks_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source relative_path="Examples/ARM/arm_class_marks_example" type="project">
        <files mask="arm_class_marks_example.uvoptx"/>
        <files mask="arm_class_marks_example.uvprojx"/>
      </source>
      <source relative_path="Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_convolution_example" type="src">
        <files mask="arm_convolution_example_f32.c"/>
        <files mask="math_helper.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_convolution_example" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source relative_path="Examples/ARM/arm_convolution_example" type="configuration">
        <files mask="arm_convolution_example.ini"/>
      </source>
      <source relative_path="Examples/ARM/arm_convolution_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source relative_path="Examples/ARM/arm_convolution_example" type="project">
        <files mask="arm_convolution_example.uvoptx"/>
        <files mask="arm_convolution_example.uvprojx"/>
      </source>
      <source relative_path="Examples/ARM/arm_convolution_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_convolution_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_convolution_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_convolution_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_convolution_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_convolution_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_convolution_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_convolution_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_dotproduct_example" type="src">
        <files mask="arm_dotproduct_example_f32.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_dotproduct_example" type="configuration">
        <files mask="arm_dotproduct_example.ini"/>
      </source>
      <source relative_path="Examples/ARM/arm_dotproduct_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source relative_path="Examples/ARM/arm_dotproduct_example" type="project">
        <files mask="arm_dotproduct_example.uvoptx"/>
        <files mask="arm_dotproduct_example.uvprojx"/>
      </source>
      <source relative_path="Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_fft_bin_example" type="src">
        <files mask="arm_fft_bin_data.c"/>
        <files mask="arm_fft_bin_example_f32.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_fft_bin_example" type="configuration">
        <files mask="arm_fft_bin_example.ini"/>
      </source>
      <source relative_path="Examples/ARM/arm_fft_bin_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source relative_path="Examples/ARM/arm_fft_bin_example" type="project">
        <files mask="arm_fft_bin_example.uvoptx"/>
        <files mask="arm_fft_bin_example.uvprojx"/>
      </source>
      <source relative_path="Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_fir_example" type="src">
        <files mask="arm_fir_data.c"/>
        <files mask="arm_fir_example_f32.c"/>
        <files mask="math_helper.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_fir_example" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source relative_path="Examples/ARM/arm_fir_example" type="configuration">
        <files mask="arm_fir_example.ini"/>
      </source>
      <source relative_path="Examples/ARM/arm_fir_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source relative_path="Examples/ARM/arm_fir_example" type="project">
        <files mask="arm_fir_example.uvoptx"/>
        <files mask="arm_fir_example.uvprojx"/>
      </source>
      <source relative_path="Examples/ARM/arm_fir_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_fir_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_fir_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_fir_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_fir_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_fir_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_fir_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_fir_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_graphic_equalizer_example" type="src">
        <files mask="arm_graphic_equalizer_example_q31.c"/>
        <files mask="arm_graphic_equalizer_data.c"/>
        <files mask="math_helper.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_graphic_equalizer_example" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source relative_path="Examples/ARM/arm_graphic_equalizer_example" type="configuration">
        <files mask="arm_graphic_equalizer_example.ini"/>
      </source>
      <source relative_path="Examples/ARM/arm_graphic_equalizer_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source relative_path="Examples/ARM/arm_graphic_equalizer_example" type="project">
        <files mask="arm_graphic_equalizer_example.uvoptx"/>
        <files mask="arm_graphic_equalizer_example.uvprojx"/>
      </source>
      <source relative_path="Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_linear_interp_example" type="src">
        <files mask="math_helper.c"/>
        <files mask="arm_linear_interp_example_f32.c"/>
        <files mask="arm_linear_interp_data.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_linear_interp_example" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source relative_path="Examples/ARM/arm_linear_interp_example" type="configuration">
        <files mask="arm_linear_interp_example.ini"/>
      </source>
      <source relative_path="Examples/ARM/arm_linear_interp_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source relative_path="Examples/ARM/arm_linear_interp_example" type="project">
        <files mask="arm_linear_interp_example.uvoptx"/>
        <files mask="arm_linear_interp_example.uvprojx"/>
      </source>
      <source relative_path="Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_matrix_example" type="src">
        <files mask="arm_matrix_example_f32.c"/>
        <files mask="math_helper.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_matrix_example" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source relative_path="Examples/ARM/arm_matrix_example" type="configuration">
        <files mask="arm_matrix_example.ini"/>
      </source>
      <source relative_path="Examples/ARM/arm_matrix_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source relative_path="Examples/ARM/arm_matrix_example" type="project">
        <files mask="arm_matrix_example.uvoptx"/>
        <files mask="arm_matrix_example.uvprojx"/>
      </source>
      <source relative_path="Examples/ARM/arm_matrix_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_matrix_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_matrix_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_matrix_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_matrix_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_matrix_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_matrix_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_matrix_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_signal_converge_example" type="src">
        <files mask="math_helper.c"/>
        <files mask="arm_signal_converge_example_f32.c"/>
        <files mask="arm_signal_converge_data.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_signal_converge_example" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source relative_path="Examples/ARM/arm_signal_converge_example" type="configuration">
        <files mask="arm_signal_converge_example.ini"/>
      </source>
      <source relative_path="Examples/ARM/arm_signal_converge_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source relative_path="Examples/ARM/arm_signal_converge_example" type="project">
        <files mask="arm_signal_converge_example.uvoptx"/>
        <files mask="arm_signal_converge_example.uvprojx"/>
      </source>
      <source relative_path="Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_sin_cos_example" type="src">
        <files mask="arm_sin_cos_example_f32.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_sin_cos_example" type="configuration">
        <files mask="arm_sin_cos_example.ini"/>
      </source>
      <source relative_path="Examples/ARM/arm_sin_cos_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source relative_path="Examples/ARM/arm_sin_cos_example" type="project">
        <files mask="arm_sin_cos_example.uvoptx"/>
        <files mask="arm_sin_cos_example.uvprojx"/>
      </source>
      <source relative_path="Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_variance_example" type="src">
        <files mask="arm_variance_example_f32.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_variance_example" type="configuration">
        <files mask="arm_variance_example.ini"/>
      </source>
      <source relative_path="Examples/ARM/arm_variance_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source relative_path="Examples/ARM/arm_variance_example" type="project">
        <files mask="arm_variance_example.uvoptx"/>
        <files mask="arm_variance_example.uvprojx"/>
      </source>
      <source relative_path="Examples/ARM/arm_variance_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_variance_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_variance_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_variance_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_variance_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_variance_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_variance_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_variance_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source relative_path="Projects/ARM" type="script">
        <files mask="arm_cortexM_math_Build.bat"/>
      </source>
      <source relative_path="Projects/ARM" type="project">
        <files mask="arm_cortexM_math.uvoptx"/>
        <files mask="arm_cortexM_math.uvprojx"/>
      </source>
      <source relative_path="Projects/GCC" type="script">
        <files mask="arm_cortexM_math_Build.bat"/>
      </source>
      <source relative_path="Projects/GCC" type="project">
        <files mask="arm_cortexM_math.uvoptx"/>
        <files mask="arm_cortexM_math.uvprojx"/>
      </source>
      <source relative_path="Projects/IAR" type="script">
        <files mask="arm_cortexM_math_Build.bat"/>
      </source>
      <source relative_path="Projects/IAR" type="other">
        <files mask="arm_cortexM_math.eww"/>
      </source>
      <source relative_path="Projects/IAR" type="project">
        <files mask="arm_cortexM_math.ewp"/>
      </source>
      <source relative_path="Source/BasicMathFunctions" type="src">
        <files mask="arm_dot_prod_f32.c"/>
        <files mask="BasicMathFunctions.c"/>
        <files mask="arm_add_q7.c"/>
        <files mask="arm_sub_f32.c"/>
        <files mask="arm_shift_q31.c"/>
        <files mask="arm_offset_q31.c"/>
        <files mask="arm_mult_q15.c"/>
        <files mask="arm_add_q31.c"/>
        <files mask="arm_mult_q7.c"/>
        <files mask="arm_dot_prod_q7.c"/>
        <files mask="arm_scale_q7.c"/>
        <files mask="arm_dot_prod_q31.c"/>
        <files mask="arm_negate_q7.c"/>
        <files mask="arm_scale_f32.c"/>
        <files mask="arm_mult_q31.c"/>
        <files mask="arm_abs_f32.c"/>
        <files mask="arm_offset_f32.c"/>
        <files mask="arm_negate_q31.c"/>
        <files mask="arm_negate_f32.c"/>
        <files mask="arm_abs_q31.c"/>
        <files mask="arm_dot_prod_q15.c"/>
        <files mask="arm_scale_q31.c"/>
        <files mask="arm_add_f32.c"/>
        <files mask="arm_abs_q15.c"/>
        <files mask="arm_offset_q7.c"/>
        <files mask="arm_abs_q7.c"/>
        <files mask="arm_sub_q7.c"/>
        <files mask="arm_offset_q15.c"/>
        <files mask="arm_add_q15.c"/>
        <files mask="arm_negate_q15.c"/>
        <files mask="arm_shift_q15.c"/>
        <files mask="arm_scale_q15.c"/>
        <files mask="arm_sub_q15.c"/>
        <files mask="arm_shift_q7.c"/>
        <files mask="arm_mult_f32.c"/>
        <files mask="arm_sub_q31.c"/>
      </source>
      <source relative_path="Source/CommonTables" type="src">
        <files mask="arm_const_structs.c"/>
        <files mask="arm_common_tables.c"/>
        <files mask="CommonTables.c"/>
      </source>
      <source relative_path="Source/ComplexMathFunctions" type="src">
        <files mask="arm_cmplx_dot_prod_f32.c"/>
        <files mask="arm_cmplx_mult_real_q31.c"/>
        <files mask="ComplexMathFunctions.c"/>
        <files mask="arm_cmplx_mult_cmplx_f32.c"/>
        <files mask="arm_cmplx_mult_real_f32.c"/>
        <files mask="arm_cmplx_mag_q31.c"/>
        <files mask="arm_cmplx_mag_squared_q15.c"/>
        <files mask="arm_cmplx_mag_q15.c"/>
        <files mask="arm_cmplx_dot_prod_q15.c"/>
        <files mask="arm_cmplx_mult_cmplx_q15.c"/>
        <files mask="arm_cmplx_mag_squared_f32.c"/>
        <files mask="arm_cmplx_conj_q15.c"/>
        <files mask="arm_cmplx_conj_q31.c"/>
        <files mask="arm_cmplx_mult_real_q15.c"/>
        <files mask="arm_cmplx_conj_f32.c"/>
        <files mask="arm_cmplx_mag_squared_q31.c"/>
        <files mask="arm_cmplx_mag_f32.c"/>
        <files mask="arm_cmplx_dot_prod_q31.c"/>
        <files mask="arm_cmplx_mult_cmplx_q31.c"/>
      </source>
      <source relative_path="Source/ControllerFunctions" type="src">
        <files mask="arm_pid_init_f32.c"/>
        <files mask="ControllerFunctions.c"/>
        <files mask="arm_pid_reset_q15.c"/>
        <files mask="arm_pid_reset_q31.c"/>
        <files mask="arm_sin_cos_f32.c"/>
        <files mask="arm_pid_init_q31.c"/>
        <files mask="arm_pid_init_q15.c"/>
        <files mask="arm_sin_cos_q31.c"/>
        <files mask="arm_pid_reset_f32.c"/>
      </source>
      <source relative_path="Source/FastMathFunctions" type="src">
        <files mask="arm_sin_f32.c"/>
        <files mask="arm_cos_q15.c"/>
        <files mask="FastMathFunctions.c"/>
        <files mask="arm_sqrt_q15.c"/>
        <files mask="arm_cos_q31.c"/>
        <files mask="arm_cos_f32.c"/>
        <files mask="arm_sin_q15.c"/>
        <files mask="arm_sqrt_q31.c"/>
        <files mask="arm_sin_q31.c"/>
      </source>
      <source relative_path="Source/FilteringFunctions" type="src">
        <files mask="arm_conv_fast_q15.c"/>
        <files mask="arm_correlate_fast_opt_q15.c"/>
        <files mask="arm_correlate_q7.c"/>
        <files mask="arm_conv_q15.c"/>
        <files mask="arm_fir_sparse_init_f32.c"/>
        <files mask="arm_fir_lattice_q15.c"/>
        <files mask="arm_fir_decimate_init_f32.c"/>
        <files mask="arm_iir_lattice_init_q31.c"/>
        <files mask="arm_fir_decimate_init_q15.c"/>
        <files mask="arm_fir_sparse_q7.c"/>
        <files mask="arm_biquad_cascade_df1_q15.c"/>
        <files mask="arm_fir_q15.c"/>
        <files mask="arm_lms_init_q15.c"/>
        <files mask="arm_biquad_cascade_df1_fast_q31.c"/>
        <files mask="arm_biquad_cascade_df1_32x64_q31.c"/>
        <files mask="arm_fir_fast_q15.c"/>
        <files mask="arm_biquad_cascade_df1_fast_q15.c"/>
        <files mask="arm_fir_q31.c"/>
        <files mask="arm_fir_interpolate_init_q31.c"/>
        <files mask="arm_conv_partial_q7.c"/>
        <files mask="arm_fir_interpolate_q15.c"/>
        <files mask="arm_conv_fast_opt_q15.c"/>
        <files mask="arm_lms_norm_q15.c"/>
        <files mask="arm_fir_lattice_init_q31.c"/>
        <files mask="arm_iir_lattice_q31.c"/>
        <files mask="arm_lms_norm_f32.c"/>
        <files mask="arm_fir_interpolate_init_q15.c"/>
        <files mask="arm_correlate_q31.c"/>
        <files mask="arm_conv_partial_q15.c"/>
        <files mask="arm_iir_lattice_init_f32.c"/>
        <files mask="arm_conv_partial_f32.c"/>
        <files mask="arm_fir_f32.c"/>
        <files mask="arm_fir_decimate_q15.c"/>
        <files mask="arm_correlate_fast_q31.c"/>
        <files mask="arm_correlate_opt_q15.c"/>
        <files mask="arm_conv_partial_fast_opt_q15.c"/>
        <files mask="arm_fir_sparse_f32.c"/>
        <files mask="arm_correlate_fast_q15.c"/>
        <files mask="arm_conv_opt_q15.c"/>
        <files mask="arm_correlate_opt_q7.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_f32.c"/>
        <files mask="arm_fir_decimate_f32.c"/>
        <files mask="arm_fir_sparse_init_q15.c"/>
        <files mask="arm_lms_q15.c"/>
        <files mask="arm_fir_interpolate_init_f32.c"/>
        <files mask="arm_fir_lattice_q31.c"/>
        <files mask="arm_correlate_q15.c"/>
        <files mask="arm_conv_opt_q7.c"/>
        <files mask="arm_iir_lattice_q15.c"/>
        <files mask="arm_conv_fast_q31.c"/>
        <files mask="arm_conv_partial_fast_q31.c"/>
        <files mask="arm_fir_lattice_init_f32.c"/>
        <files mask="arm_biquad_cascade_df1_f32.c"/>
        <files mask="arm_biquad_cascade_df2T_init_f32.c"/>
        <files mask="arm_conv_f32.c"/>
        <files mask="arm_biquad_cascade_df1_init_f32.c"/>
        <files mask="arm_fir_lattice_f32.c"/>
        <files mask="arm_fir_decimate_init_q31.c"/>
        <files mask="arm_fir_init_q7.c"/>
        <files mask="arm_correlate_f32.c"/>
        <files mask="arm_conv_partial_opt_q7.c"/>
        <files mask="arm_lms_norm_init_q31.c"/>
        <files mask="arm_conv_partial_q31.c"/>
        <files mask="arm_biquad_cascade_df1_init_q31.c"/>
        <files mask="arm_fir_sparse_q15.c"/>
        <files mask="arm_lms_init_q31.c"/>
        <files mask="arm_fir_init_q31.c"/>
        <files mask="arm_fir_sparse_init_q31.c"/>
        <files mask="arm_fir_sparse_q31.c"/>
        <files mask="arm_biquad_cascade_df2T_f32.c"/>
        <files mask="arm_iir_lattice_init_q15.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_init_f32.c"/>
        <files mask="arm_fir_decimate_q31.c"/>
        <files mask="arm_fir_fast_q31.c"/>
        <files mask="arm_fir_lattice_init_q15.c"/>
        <files mask="arm_conv_partial_opt_q15.c"/>
        <files mask="arm_conv_q7.c"/>
        <files mask="arm_conv_q31.c"/>
        <files mask="arm_fir_interpolate_f32.c"/>
        <files mask="arm_fir_sparse_init_q7.c"/>
        <files mask="FilteringFunctions.c"/>
        <files mask="arm_biquad_cascade_df2T_init_f64.c"/>
        <files mask="arm_fir_init_q15.c"/>
        <files mask="arm_lms_norm_q31.c"/>
        <files mask="arm_biquad_cascade_df2T_f64.c"/>
        <files mask="arm_conv_partial_fast_q15.c"/>
        <files mask="arm_fir_decimate_fast_q15.c"/>
        <files mask="arm_lms_q31.c"/>
        <files mask="arm_lms_init_f32.c"/>
        <files mask="arm_biquad_cascade_df1_32x64_init_q31.c"/>
        <files mask="arm_lms_norm_init_q15.c"/>
        <files mask="arm_fir_init_f32.c"/>
        <files mask="arm_iir_lattice_f32.c"/>
        <files mask="arm_biquad_cascade_df1_q31.c"/>
        <files mask="arm_lms_f32.c"/>
        <files mask="arm_lms_norm_init_f32.c"/>
        <files mask="arm_biquad_cascade_df1_init_q15.c"/>
        <files mask="arm_fir_decimate_fast_q31.c"/>
        <files mask="arm_fir_interpolate_q31.c"/>
        <files mask="arm_fir_q7.c"/>
      </source>
      <source relative_path="Source/MatrixFunctions" type="src">
        <files mask="arm_mat_sub_q15.c"/>
        <files mask="arm_mat_mult_fast_q31.c"/>
        <files mask="arm_mat_sub_q31.c"/>
        <files mask="arm_mat_add_f32.c"/>
        <files mask="arm_mat_inverse_f32.c"/>
        <files mask="arm_mat_mult_q15.c"/>
        <files mask="arm_mat_mult_q31.c"/>
        <files mask="MatrixFunctions.c"/>
        <files mask="arm_mat_cmplx_mult_q15.c"/>
        <files mask="arm_mat_mult_f32.c"/>
        <files mask="arm_mat_trans_f32.c"/>
        <files mask="arm_mat_trans_q31.c"/>
        <files mask="arm_mat_add_q15.c"/>
        <files mask="arm_mat_mult_fast_q15.c"/>
        <files mask="arm_mat_inverse_f64.c"/>
        <files mask="arm_mat_scale_q31.c"/>
        <files mask="arm_mat_trans_q15.c"/>
        <files mask="arm_mat_sub_f32.c"/>
        <files mask="arm_mat_init_q15.c"/>
        <files mask="arm_mat_cmplx_mult_q31.c"/>
        <files mask="arm_mat_scale_f32.c"/>
        <files mask="arm_mat_cmplx_mult_f32.c"/>
        <files mask="arm_mat_init_f32.c"/>
        <files mask="arm_mat_init_q31.c"/>
        <files mask="arm_mat_scale_q15.c"/>
        <files mask="arm_mat_add_q31.c"/>
      </source>
      <source relative_path="Source/StatisticsFunctions" type="src">
        <files mask="arm_power_q31.c"/>
        <files mask="arm_min_q7.c"/>
        <files mask="arm_var_q15.c"/>
        <files mask="arm_mean_q15.c"/>
        <files mask="arm_min_q15.c"/>
        <files mask="arm_rms_q15.c"/>
        <files mask="arm_min_f32.c"/>
        <files mask="arm_max_q7.c"/>
        <files mask="arm_max_q31.c"/>
        <files mask="arm_var_f32.c"/>
        <files mask="arm_std_q31.c"/>
        <files mask="arm_std_f32.c"/>
        <files mask="arm_mean_f32.c"/>
        <files mask="arm_power_f32.c"/>
        <files mask="arm_rms_f32.c"/>
        <files mask="arm_var_q31.c"/>
        <files mask="arm_power_q7.c"/>
        <files mask="arm_mean_q31.c"/>
        <files mask="arm_power_q15.c"/>
        <files mask="arm_max_f32.c"/>
        <files mask="arm_rms_q31.c"/>
        <files mask="arm_max_q15.c"/>
        <files mask="arm_min_q31.c"/>
        <files mask="StatisticsFunctions.c"/>
        <files mask="arm_std_q15.c"/>
        <files mask="arm_mean_q7.c"/>
      </source>
      <source relative_path="Source/SupportFunctions" type="src">
        <files mask="arm_copy_q15.c"/>
        <files mask="arm_q7_to_q31.c"/>
        <files mask="arm_fill_q31.c"/>
        <files mask="arm_fill_q15.c"/>
        <files mask="arm_q31_to_q7.c"/>
        <files mask="arm_float_to_q15.c"/>
        <files mask="arm_q31_to_float.c"/>
        <files mask="arm_fill_q7.c"/>
        <files mask="arm_q15_to_q31.c"/>
        <files mask="arm_copy_f32.c"/>
        <files mask="arm_q7_to_q15.c"/>
        <files mask="arm_copy_q7.c"/>
        <files mask="arm_q7_to_float.c"/>
        <files mask="arm_float_to_q7.c"/>
        <files mask="SupportFunctions.c"/>
        <files mask="arm_copy_q31.c"/>
        <files mask="arm_q31_to_q15.c"/>
        <files mask="arm_fill_f32.c"/>
        <files mask="arm_q15_to_float.c"/>
        <files mask="arm_q15_to_q7.c"/>
        <files mask="arm_float_to_q31.c"/>
      </source>
      <source relative_path="Source/TransformFunctions" type="src">
        <files mask="arm_cfft_radix2_f32.c"/>
        <files mask="arm_cfft_radix2_init_f32.c"/>
        <files mask="arm_cfft_radix4_q31.c"/>
        <files mask="arm_cfft_radix4_init_q15.c"/>
        <files mask="arm_rfft_init_q15.c"/>
        <files mask="arm_cfft_f32.c"/>
        <files mask="arm_cfft_q15.c"/>
        <files mask="arm_rfft_q31.c"/>
        <files mask="arm_dct4_init_q31.c"/>
        <files mask="arm_dct4_f32.c"/>
        <files mask="arm_cfft_radix4_q15.c"/>
        <files mask="arm_cfft_radix2_q31.c"/>
        <files mask="arm_cfft_radix4_f32.c"/>
        <files mask="arm_rfft_q15.c"/>
        <files mask="arm_bitreversal.c"/>
        <files mask="arm_rfft_fast_f32.c"/>
        <files mask="arm_dct4_init_q15.c"/>
        <files mask="arm_rfft_f32.c"/>
        <files mask="arm_dct4_q15.c"/>
        <files mask="arm_rfft_fast_init_f32.c"/>
        <files mask="arm_cfft_radix2_init_q31.c"/>
        <files mask="arm_cfft_radix4_init_f32.c"/>
        <files mask="arm_rfft_init_q31.c"/>
        <files mask="TransformFunctions.c"/>
        <files mask="arm_cfft_radix2_init_q15.c"/>
        <files mask="arm_dct4_q31.c"/>
        <files mask="arm_bitreversal2.c"/>
        <files mask="arm_cfft_radix8_f32.c"/>
        <files mask="arm_cfft_radix2_q15.c"/>
        <files mask="arm_cfft_radix4_init_q31.c"/>
        <files mask="arm_rfft_init_f32.c"/>
        <files mask="arm_dct4_init_f32.c"/>
        <files mask="arm_cfft_q31.c"/>
      </source>
      <source relative_path="Source/TransformFunctions" type="asm_include">
        <files mask="arm_bitreversal2.S"/>
      </source>
      <include_paths>
        <include_path relative_path="Examples/ARM/arm_class_marks_example/RTE" type="c_include"/>
        <include_path relative_path="Examples/ARM/arm_convolution_example" type="c_include"/>
        <include_path relative_path="Examples/ARM/arm_convolution_example/RTE" type="c_include"/>
        <include_path relative_path="Examples/ARM/arm_dotproduct_example/RTE" type="c_include"/>
        <include_path relative_path="Examples/ARM/arm_fft_bin_example/RTE" type="c_include"/>
        <include_path relative_path="Examples/ARM/arm_fir_example" type="c_include"/>
        <include_path relative_path="Examples/ARM/arm_fir_example/RTE" type="c_include"/>
        <include_path relative_path="Examples/ARM/arm_graphic_equalizer_example" type="c_include"/>
        <include_path relative_path="Examples/ARM/arm_graphic_equalizer_example/RTE" type="c_include"/>
        <include_path relative_path="Examples/ARM/arm_linear_interp_example" type="c_include"/>
        <include_path relative_path="Examples/ARM/arm_linear_interp_example/RTE" type="c_include"/>
        <include_path relative_path="Examples/ARM/arm_matrix_example" type="c_include"/>
        <include_path relative_path="Examples/ARM/arm_matrix_example/RTE" type="c_include"/>
        <include_path relative_path="Examples/ARM/arm_signal_converge_example" type="c_include"/>
        <include_path relative_path="Examples/ARM/arm_signal_converge_example/RTE" type="c_include"/>
        <include_path relative_path="Examples/ARM/arm_sin_cos_example/RTE" type="c_include"/>
        <include_path relative_path="Examples/ARM/arm_variance_example/RTE" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_DSP_Lib.arm_cortexM0b_math.K32L3A60" name="arm_cortexM0b_math" brief="Cmsis_dsp_lib arm_cortexm0b_math" version="1.7.0" full_name="Cmsis_dsp_lib arm_cortexm0b_math" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/DSP/Lib/ARM" project_base_path="libs">
      <source toolchain="mdk" relative_path="./" type="lib">
        <files mask="arm_cortexM0b_math.lib"/>
      </source>
    </component>
    <component id="platform.CMSIS_DSP_Lib.arm_cortexM0l_math.K32L3A60" name="arm_cortexM0l_math" brief="Cmsis_dsp_lib arm_cortexm0l_math" version="1.7.0" full_name="Cmsis_dsp_lib arm_cortexm0l_math" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/DSP/Lib" project_base_path="libs">
      <source toolchain="mdk" relative_path="ARM" project_relative_path="./" type="lib">
        <files mask="arm_cortexM0l_math.lib"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="GCC" project_relative_path="./" type="lib">
        <files mask="libarm_cortexM0l_math.a"/>
      </source>
    </component>
    <component id="platform.CMSIS_DSP_Lib.arm_cortexM4bf_math.K32L3A60" name="arm_cortexM4bf_math" brief="Cmsis_dsp_lib arm_cortexm4bf_math" version="1.7.0" full_name="Cmsis_dsp_lib arm_cortexm4bf_math" devices="K32L3A60xxx" device_cores="cm4_K32L3A60xxx" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/DSP/Lib/ARM" project_base_path="libs">
      <source toolchain="mdk" relative_path="./" type="lib">
        <files mask="arm_cortexM4bf_math.lib"/>
      </source>
    </component>
    <component id="platform.CMSIS_DSP_Lib.arm_cortexM4lf_math.K32L3A60" name="arm_cortexM4lf_math" brief="Cmsis_dsp_lib arm_cortexm4lf_math" version="1.7.0" full_name="Cmsis_dsp_lib arm_cortexm4lf_math" devices="K32L3A60xxx" device_cores="cm4_K32L3A60xxx" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/DSP/Lib" project_base_path="libs">
      <source toolchain="mdk" relative_path="ARM" project_relative_path="./" type="lib">
        <files mask="arm_cortexM4lf_math.lib"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="GCC" project_relative_path="./" type="lib">
        <files mask="libarm_cortexM4lf_math.a"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver" name="CMSIS_Driver" brief="Cmsis_driver" version="2.7.1" full_name="Cmsis_driver" user_visible="true" type="CMSIS" package_base_path="CMSIS/Driver/DriverTemplates" project_base_path="Driver/DriverTemplates">
      <source relative_path="./" type="src">
        <files mask="Driver_USBH.c"/>
        <files mask="Driver_Flash.c"/>
        <files mask="Driver_ETH_PHY.c"/>
        <files mask="Driver_MCI.c"/>
        <files mask="Driver_CAN.c"/>
        <files mask="Driver_USART.c"/>
        <files mask="Driver_I2C.c"/>
        <files mask="Driver_USBD.c"/>
        <files mask="Driver_SAI.c"/>
        <files mask="Driver_ETH_MAC.c"/>
        <files mask="Driver_SPI.c"/>
        <files mask="Driver_Storage.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.CAN_CMSISInclude.K32L3A60" name="CAN" brief="Cmsis_driver_include can" version="1.2.0" full_name="Cmsis_driver_include can" devices="K32L3A60xxx" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_CAN.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.Common_CMSISInclude.K32L3A60" name="Common" brief="Cmsis_driver_include common" version="2.7.1" full_name="Cmsis_driver_include common" devices="K32L3A60xxx" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <source relative_path="./" type="c_include">
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="CMSIS_Driver_Include_Common_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="CMSIS_Driver_Include_Common_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.K32L3A60" name="Ethernet" brief="Cmsis_driver_include ethernet" version="2.1.0" full_name="Cmsis_driver_include ethernet" devices="K32L3A60xxx" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_ETH.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.Ethernet_MAC_CMSISInclude.K32L3A60" name="Ethernet_MAC" brief="Cmsis_driver_include ethernet_mac" version="2.1.0" full_name="Cmsis_driver_include ethernet_mac" devices="K32L3A60xxx" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_ETH_MAC.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.Ethernet_PHY_CMSISInclude.K32L3A60" name="Ethernet_PHY" brief="Cmsis_driver_include ethernet_phy" version="2.1.0" full_name="Cmsis_driver_include ethernet_phy" devices="K32L3A60xxx" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_ETH_PHY.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.Flash_CMSISInclude.K32L3A60" name="Flash" brief="Cmsis_driver_include flash" version="2.2.0" full_name="Cmsis_driver_include flash" devices="K32L3A60xxx" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_Flash.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.GPIO_CMSISInclude.K32L3A60" name="GPIO" brief="Cmsis_driver_include gpio" version="2.0.0" full_name="Cmsis_driver_include gpio" devices="K32L3A60xxx" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_GPIO.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.I2C_CMSISInclude.K32L3A60" name="I2C" brief="Cmsis_driver_include i2c" version="2.3.0" full_name="Cmsis_driver_include i2c" devices="K32L3A60xxx" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_I2C.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="CMSIS_Driver_Include_I2C_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="CMSIS_Driver_Include_I2C_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.MCI_CMSISInclude.K32L3A60" name="MCI" brief="Cmsis_driver_include mci" version="2.3.0" full_name="Cmsis_driver_include mci" devices="K32L3A60xxx" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_MCI.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.NAND_CMSISInclude.K32L3A60" name="NAND" brief="Cmsis_driver_include nand" version="2.3.0" full_name="Cmsis_driver_include nand" devices="K32L3A60xxx" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_NAND.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.SAI_CMSISInclude.K32L3A60" name="SAI" brief="Cmsis_driver_include sai" version="1.1.0" full_name="Cmsis_driver_include sai" devices="K32L3A60xxx" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_SAI.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.SPI_CMSISInclude.K32L3A60" name="SPI" brief="Cmsis_driver_include spi" version="2.2.0" full_name="Cmsis_driver_include spi" devices="K32L3A60xxx" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_SPI.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="CMSIS_Driver_Include_SPI_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="CMSIS_Driver_Include_SPI_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.USART_CMSISInclude.K32L3A60" name="USART" brief="Cmsis_driver_include usart" version="2.3.0" full_name="Cmsis_driver_include usart" devices="K32L3A60xxx" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_USART.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="CMSIS_Driver_Include_USART_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="CMSIS_Driver_Include_USART_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.USB_CMSISInclude.K32L3A60" name="USB" brief="Cmsis_driver_include usb" version="2.2.0" full_name="Cmsis_driver_include usb" devices="K32L3A60xxx" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_USB.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.USB_Device_CMSISInclude.K32L3A60" name="USB_Device" brief="Cmsis_driver_include usb_device" version="2.2.0" full_name="Cmsis_driver_include usb_device" devices="K32L3A60xxx" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.USB_CMSISInclude.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_USBD.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.USB_Host_CMSISInclude.K32L3A60" name="USB_Host" brief="Cmsis_driver_include usb_host" version="2.2.0" full_name="Cmsis_driver_include usb_host" devices="K32L3A60xxx" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.USB_CMSISInclude.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_USBH.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.WiFi_CMSISInclude.K32L3A60" name="WiFi" brief="Cmsis_driver_include wifi" version="1.0.0" full_name="Cmsis_driver_include wifi" devices="K32L3A60xxx" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_WiFi.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.Include_common.K32L3A60" name="CMSIS_Include_common" brief="Cmsis_include_common" version="5.3.0" full_name="Cmsis_include_common" devices="K32L3A60xxx" user_visible="true" type="CMSIS_Include" package_base_path="CMSIS/Include" project_base_path="CMSIS">
      <source relative_path="./" type="c_include">
        <files mask="cmsis_armcc.h"/>
        <files mask="cmsis_armclang.h"/>
        <files mask="cmsis_armclang_ltm.h"/>
        <files mask="cmsis_gcc.h"/>
        <files mask="cmsis_compiler.h"/>
        <files mask="cmsis_version.h"/>
        <files mask="cmsis_iccarm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="CMSIS_Include_common_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="CMSIS_Include_common_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.Include_core_cm0plus.K32L3A60" name="CMSIS_Include_core_cm0plus" brief="Cmsis_include_core_cm0plus" version="5.3.0" full_name="Cmsis_include_core_cm0plus" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="CMSIS_Include" package_base_path="CMSIS/Include" project_base_path="CMSIS">
      <dependencies>
        <all>
          <component_dependency value="platform.Include_common.K32L3A60"/>
          <component_dependency value="platform.Include_dsp.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="core_cm0plus.h"/>
        <files mask="mpu_armv7.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="CMSIS_Include_core_cm0plus_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.Include_core_cm4.K32L3A60" name="CMSIS_Include_core_cm4" brief="Cmsis_include_core_cm4" version="5.3.0" full_name="Cmsis_include_core_cm4" devices="K32L3A60xxx" device_cores="cm4_K32L3A60xxx" user_visible="true" type="CMSIS_Include" package_base_path="CMSIS/Include" project_base_path="CMSIS">
      <dependencies>
        <all>
          <component_dependency value="platform.Include_common.K32L3A60"/>
          <component_dependency value="platform.Include_dsp.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="core_cm4.h"/>
        <files mask="mpu_armv7.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="CMSIS_Include_core_cm4_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.Include_dsp.K32L3A60" name="CMSIS_Include_dsp" brief="Cmsis_include_dsp" version="1.7.0" full_name="Cmsis_include_dsp" devices="K32L3A60xxx" user_visible="true" type="CMSIS_Include" package_base_path="CMSIS/Include" project_base_path="CMSIS">
      <source relative_path="./" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_math.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="CMSIS_Include_dsp_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="CMSIS_Include_dsp_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="COPY_BSD_License.K32L3A60" name="COPY_BSD_License" brief="COPY of BSD-3-Clause license" version="1.0.0" full_name="COPY of BSD-3-Clause license" devices="K32L3A60xxx" user_visible="true" type="other" package_base_path="./" project_base_path="src">
      <source relative_path="./" type="other">
        <files mask="COPYING-BSD-3"/>
      </source>
    </component>
    <component id="project_template.K32L3A60.K32L3A60" name="K32L3A60" brief="Devices_project_template K32L3A60" version="1.0.0" full_name="Devices_project_template K32L3A60" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="Board Support/SDK Project Template" user_visible="true" type="project_template" package_base_path="devices/K32L3A60/project_template" project_base_path="board">
      <dependencies>
        <all>
          <component_dependency value="platform.devices.K32L3A60_startup.K32L3A60"/>
          <component_dependency value="platform.drivers.common.K32L3A60"/>
          <component_dependency value="platform.drivers.clock.K32L3A60"/>
          <component_dependency value="platform.drivers.gpio.K32L3A60"/>
          <component_dependency value="platform.drivers.port.K32L3A60"/>
          <component_dependency value="platform.drivers.lpuart.K32L3A60"/>
          <component_dependency value="component.lpuart_adapter.K32L3A60"/>
          <component_dependency value="platform.drivers.msmc.K32L3A60"/>
          <component_dependency value="platform.drivers.lpi2c.K32L3A60"/>
          <any_of>
            <all>
              <component_dependency value="platform.utilities.assert.K32L3A60"/>
              <component_dependency value="utility.debug_console.K32L3A60"/>
              <component_dependency value="component.serial_manager.K32L3A60"/>
            </all>
            <all>
              <component_dependency value="platform.utilities.assert_lite.K32L3A60"/>
              <component_dependency value="utility.debug_console_lite.K32L3A60"/>
            </all>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="pin_mux.h"/>
        <files mask="peripherals.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="pin_mux.c"/>
        <files mask="peripherals.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="RTE_Device.K32L3A60" name="RTE_Device" brief="Rte_device" version="1.0.0" full_name="Rte_device" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="Device/SDK Project Template" user_visible="true" type="project_template" package_base_path="devices/K32L3A60/template" project_base_path="board">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma.K32L3A60"/>
          <component_dependency value="platform.drivers.dmamux.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="RTE_Device.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="tools.K32L3A60" name="cmake_toolchain" brief="Cmake_toolchain" version="1.0.0" full_name="Cmake_toolchain" devices="K32L3A60xxx" user_visible="true" type="other" package_base_path="tools/cmake_toolchain_files" project_base_path="cmake_toolchain_files">
      <source relative_path="./" type="script">
        <files mask="armgcc.cmake"/>
        <files mask="xcc.cmake"/>
        <files mask="armgcc_force_cpp.cmake"/>
      </source>
    </component>
    <component id="component.button.K32L3A60" name="button" brief="Component button" version="1.0.0" full_name="Component button" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="software_component" package_base_path="components/button" project_base_path="component/button">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.K32L3A60"/>
          <component_dependency value="component.timer_manager.K32L3A60"/>
          <component_dependency value="component.gpio_adapter.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_button.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_button.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.common_task.K32L3A60" name="common_task" brief="Component common_task" version="1.0.0" full_name="Component common_task" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="software_component" package_base_path="components/common_task" project_base_path="component/common_task">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.K32L3A60"/>
          <component_dependency value="component.osa.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_common_task.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_common_task.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.crc_adapter.K32L3A60" name="crc_adapter" brief="Component crc_adapter" version="1.0.0" full_name="Component crc_adapter" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="abstraction_layer" package_base_path="components/crc" project_base_path="component/crc">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.K32L3A60"/>
          <component_dependency value="platform.drivers.crc.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_crc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_crc.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.flash_adapter.K32L3A60" name="flash_adapter" brief="Component flash_adapter" version="1.0.0" full_name="Component flash_adapter" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="abstraction_layer" package_base_path="components/internal_flash" project_base_path="component/internal_flash">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.K32L3A60"/>
          <component_dependency value="platform.drivers.flash.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_flash.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_flash.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.gpio_adapter.K32L3A60" name="gpio_adapter" brief="Component gpio_adapter" version="1.0.0" full_name="Component gpio_adapter" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="abstraction_layer" package_base_path="components/gpio" project_base_path="component/gpio">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.gpio.K32L3A60"/>
          <component_dependency value="platform.drivers.port.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_gpio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_gpio.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.led.K32L3A60" name="led" brief="Component led" version="1.0.0" full_name="Component led" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="software_component" package_base_path="components/led" project_base_path="component/led">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.K32L3A60"/>
          <component_dependency value="component.timer_manager.K32L3A60"/>
          <component_dependency value="component.gpio_adapter.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_led.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_led.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.lists.K32L3A60" name="lists" brief="Component lists" version="1.0.0" full_name="Component lists" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="software_component" package_base_path="components/lists" project_base_path="component/lists">
      <dependencies>
        <component_dependency value="platform.drivers.common.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_generic_list.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_generic_list.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="component_lists_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="component_lists_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.log.K32L3A60" name="log" brief="Component log" version="1.0.0" full_name="Component log" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="software_component" package_base_path="components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.K32L3A60"/>
          <component_dependency value="utility.debug_console.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log.h"/>
        <files mask="fsl_component_log_config.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="component_log_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="component_log_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.log.backend.debugconsole.K32L3A60" name="log_backend_debug_console" brief="Component log backend debug console" version="1.0.0" full_name="Component log backend debug console" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="software_component" package_base_path="components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.K32L3A60"/>
          <component_dependency value="component.log.K32L3A60"/>
          <component_dependency value="utility.debug_console.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log_backend_debugconsole.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log_backend_debugconsole.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="component_log_backend_debugconsole_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="component_log_backend_debugconsole_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.log.backend.ringbuffer.K32L3A60" name="log_backend_ring_buffer" brief="Component log backend ring buffer" version="1.0.0" full_name="Component log backend ring buffer" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="software_component" package_base_path="components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.K32L3A60"/>
          <component_dependency value="component.log.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log_backend_ringbuffer.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log_backend_ringbuffer.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="component_log_backend_ringbuffer_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="component_log_backend_ringbuffer_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.lpit_adapter.K32L3A60" name="lpit_adapter" brief="Component lpit_adapter" version="1.0.0" full_name="Component lpit_adapter" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="abstraction_layer" package_base_path="components/timer" project_base_path="component/timer">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.K32L3A60"/>
          <component_dependency value="platform.drivers.lpit.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpit.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="component_lpit_adapter_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.lptmr_adapter.K32L3A60" name="lptmr_adapter" brief="Component lptmr_adapter" version="1.0.0" full_name="Component lptmr_adapter" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="abstraction_layer" package_base_path="components/timer" project_base_path="component/timer">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.K32L3A60"/>
          <component_dependency value="platform.drivers.lptmr.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lptmr.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.lpuart_adapter.K32L3A60" name="lpuart_adapter" brief="Component lpuart_adapter" version="1.0.0" full_name="lpuart_adapter" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="utilities" package_base_path="components/uart" project_base_path="component/uart">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.K32L3A60"/>
          <component_dependency value="platform.drivers.lpuart.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpuart.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="component_lpuart_adapter_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="component_lpuart_adapter_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.mem_manager.K32L3A60" name="mem_manager" brief="Component mem_manager" version="1.0.0" full_name="Component mem_manager" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="software_component" package_base_path="components/mem_manager" project_base_path="component/mem_manager">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.K32L3A60"/>
          <component_dependency value="component.lists.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_mem_manager.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_mem_manager.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.mem_manager_light.K32L3A60" name="mem_manager_light" brief="Component mem_manager_light" version="1.0.0" full_name="Component mem_manager_light" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="software_component" package_base_path="components/mem_manager" project_base_path="component/mem_manager">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.K32L3A60"/>
          <component_dependency value="component.lists.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_mem_manager.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_mem_manager_light.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.osa.K32L3A60" name="osa" brief="Component osa" version="1.0.0" full_name="Component osa" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.K32L3A60"/>
          <component_dependency value="component.lists.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction.h"/>
        <files mask="fsl_os_abstraction_config.h"/>
      </source>
      <source condition="middleware.baremetal.K32L3A60" relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction_bm.h"/>
      </source>
      <source condition="middleware.baremetal.K32L3A60" relative_path="./" type="src">
        <files mask="fsl_os_abstraction_bm.c"/>
      </source>
      <source condition="middleware.freertos-kernel.K32L3A60" relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction_free_rtos.h"/>
      </source>
      <source condition="middleware.freertos-kernel.K32L3A60" relative_path="./" type="src">
        <files mask="fsl_os_abstraction_free_rtos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="component_osa_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.osa_bm.K32L3A60" name="osa_bm" brief="Component osa_bm" version="1.0.0" full_name="Component osa_bm" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="false" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.K32L3A60"/>
          <component_dependency value="component.lists.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction.h"/>
        <files mask="fsl_os_abstraction_bm.h"/>
        <files mask="fsl_os_abstraction_config.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_os_abstraction_bm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="component_osa_bm_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="component_osa_bm_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.osa_free_rtos.K32L3A60" name="osa_free_rtos" brief="Component osa_free_rtos" version="1.0.0" full_name="Component osa_free_rtos" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="false" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.K32L3A60"/>
          <component_dependency value="platform.drivers.common.K32L3A60"/>
          <component_dependency value="component.lists.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction.h"/>
        <files mask="fsl_os_abstraction_free_rtos.h"/>
        <files mask="fsl_os_abstraction_config.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_os_abstraction_free_rtos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="component_osa_free_rtos_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="component_osa_free_rtos_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.panic.K32L3A60" name="panic" brief="Component panic" version="1.0.0" full_name="Component panic" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="software_component" package_base_path="components/panic" project_base_path="component/panic">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.K32L3A60"/>
          <component_dependency value="utility.debug_console.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_panic.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_panic.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="component_panic_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="component_panic_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.pwm_tpm_adapter.K32L3A60" name="pwm_tpm_adapter" brief="Component pwm_tpm_adapter" version="1.0.0" full_name="Component pwm_tpm_adapter" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="abstraction_layer" package_base_path="components/pwm" project_base_path="component/pwm">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.K32L3A60"/>
          <component_dependency value="platform.drivers.tpm.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_pwm.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_pwm_tpm.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.rpmsg_adapter.K32L3A60" name="rpmsg_adapter" brief="Component rpmsg_adapter" version="1.0.0" full_name="rpmsg_adapter" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="abstraction_layer" package_base_path="components/rpmsg" project_base_path="component/rpmsg">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.K32L3A60"/>
          <component_dependency value="middleware.baremetal.K32L3A60"/>
          <component_dependency value="middleware.multicore.rpmsg_lite.bm.config.k32l3a6.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_rpmsg.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_rpmsg.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager.K32L3A60" name="serial_manager" brief="Component serial_manager" version="1.0.0" full_name="Serial Manager" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.K32L3A60"/>
          <component_dependency value="component.lists.K32L3A60"/>
          <any_of>
            <component_dependency value="component.serial_manager_uart.K32L3A60"/>
            <component_dependency value="component.serial_manager_rpmsg.K32L3A60"/>
            <component_dependency value="component.serial_manager_swo.K32L3A60"/>
            <component_dependency value="component.serial_manager_virtual.K32L3A60"/>
            <component_dependency value="component.serial_manager_usb_cdc.K32L3A60"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_manager.h"/>
        <files mask="fsl_component_serial_port_internal.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_manager.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="component_serial_manager_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="component_serial_manager_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_rpmsg.K32L3A60" name="serial_manager_rpmsg" brief="Component serial_manager_rpmsg" version="1.0.0" full_name="Serial Manager Rpmsg" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_RPMSG" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.serial_manager.K32L3A60"/>
          <component_dependency value="platform.drivers.common.K32L3A60"/>
          <component_dependency value="component.rpmsg_adapter.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_rpmsg.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_rpmsg.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_swo.K32L3A60" name="serial_manager_swo" brief="Component serial_manager_swo" version="1.0.0" full_name="Serial Manager Swo" devices="K32L3A60xxx" device_cores="cm4_K32L3A60xxx" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_SWO" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.K32L3A60"/>
          <component_dependency value="component.serial_manager.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_swo.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_swo.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_uart.K32L3A60" name="serial_manager_uart" brief="Component serial_manager_uart" version="1.0.0" full_name="Serial Manager uart" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_UART" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.lpuart_adapter.K32L3A60"/>
          <component_dependency value="component.serial_manager.K32L3A60"/>
          <component_dependency value="platform.drivers.lpuart.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_uart.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="component_serial_manager_uart_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="component_serial_manager_uart_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_usb_cdc.K32L3A60" name="serial_manager_usb_cdc" brief="Component serial_manager_usb_cdc" version="1.0.0" full_name="Serial Manager USB CDC" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_USBCDC" value="1"/>
        <define name="DEBUG_CONSOLE_TRANSFER_NON_BLOCKING" value=""/>
        <define name="USB_DEVICE_CONFIG_CDC_ACM" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.serial_manager.K32L3A60"/>
          <component_dependency value="middleware.usb.device.cdc.external.K32L3A60"/>
          <component_dependency value="platform.drivers.common.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_usb.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_usb.c"/>
      </source>
      <source relative_path="usb_cdc_adapter" type="c_include">
        <files mask="usb_device_descriptor.h"/>
      </source>
      <source relative_path="usb_cdc_adapter" type="src">
        <files mask="usb_device_descriptor.c"/>
      </source>
      <source relative_path="usb_cdc_adapter/inf" type="configuration">
        <files mask="fsl_ucwxp.inf" hidden="true"/>
      </source>
      <source relative_path="usb_cdc_adapter/inf" type="other">
        <files mask="cdc.cat" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="usb_cdc_adapter" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_virtual.K32L3A60" name="serial_manager_virtual" brief="Component serial_manager_virtual" version="1.0.0" full_name="Serial Manager Virtual" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_VIRTUAL" value="1"/>
        <define name="DEBUG_CONSOLE_TRANSFER_NON_BLOCKING" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.serial_manager.K32L3A60"/>
          <component_dependency value="platform.drivers.common.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_virtual.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_virtual.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.software_crc_adapter.K32L3A60" name="software_crc_adapter" brief="Component software_crc_adapter" version="1.0.0" full_name="Component software_crc_adapter" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="abstraction_layer" package_base_path="components/crc" project_base_path="component/crc">
      <dependencies>
        <component_dependency value="platform.drivers.common.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_crc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_software_crc.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.software_rng_adapter.K32L3A60" name="software_rng_adapter" brief="Component software_rng_adapter" version="1.0.0" full_name="Component software_rng_adapter" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="abstraction_layer" package_base_path="components/rng" project_base_path="component/rng">
      <dependencies>
        <component_dependency value="platform.drivers.common.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_rng.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_software_rng.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.timer_manager.K32L3A60" name="timer_manager" brief="Component timer_manager" version="1.0.0" full_name="Component timer_manager" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="software_component" package_base_path="components/timer_manager" project_base_path="component/timer_manager">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.K32L3A60"/>
          <component_dependency value="component.lists.K32L3A60"/>
          <any_of>
            <component_dependency value="component.tpm_adapter.K32L3A60"/>
            <component_dependency value="component.lptmr_adapter.K32L3A60"/>
            <component_dependency value="component.lpit_adapter.K32L3A60"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_timer_manager.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_timer_manager.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.tpm_adapter.K32L3A60" name="tpm_adapter" brief="Component tpm_adapter" version="1.0.0" full_name="Component tpm_adapter" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="abstraction_layer" package_base_path="components/timer" project_base_path="component/timer">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.K32L3A60"/>
          <component_dependency value="platform.drivers.tpm.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_tpm.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.trng_adapter.K32L3A60" name="trng_adapter" brief="Component trng_adapter" version="1.0.0" full_name="Component trng_adapter" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="abstraction_layer" package_base_path="components/rng" project_base_path="component/rng">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.K32L3A60"/>
          <component_dependency value="platform.drivers.trng.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_rng.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_trng.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.devices.K32L3A60_CMSIS.K32L3A60" name="K32L3A60_CMSIS" brief="Device K32L3A60_cmsis" version="1.0.0" full_name="Device K32L3A60_cmsis" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="CMSIS_Include" package_base_path="devices/K32L3A60" project_base_path="device">
      <dependencies>
        <any_of>
          <component_dependency value="platform.Include_core_cm4.K32L3A60"/>
          <component_dependency value="platform.Include_core_cm0plus.K32L3A60"/>
        </any_of>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_device_registers.h"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm0plus_K32L3A60xxx">
        <files mask="K32L3A60_cm0plus.h"/>
        <files mask="K32L3A60_cm0plus_features.h"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm4_K32L3A60xxx">
        <files mask="K32L3A60_cm4.h"/>
        <files mask="K32L3A60_cm4_features.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="device_K32L3A60_CMSIS_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="device_K32L3A60_CMSIS_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="c_include" device_cores="cm0plus_K32L3A60xxx"/>
        <include_path relative_path="./" type="c_include" device_cores="cm4_K32L3A60xxx"/>
      </include_paths>
    </component>
    <component id="platform.devices.K32L3A60_debugger.K32L3A60" name="K32L3A60_debugger" brief="Device K32L3A60_debugger" version="1.0.0" full_name="Device K32L3A60_debugger" devices="K32L3A60xxx" user_visible="true" type="debugger" package_base_path="devices/K32L3A60" project_base_path="svd">
      <source relative_path="./" type="xml" device_cores="cm0plus_K32L3A60xxx">
        <files mask="K32L3A60_cm0plus.xml"/>
      </source>
      <source relative_path="./" type="xml" device_cores="cm4_K32L3A60xxx">
        <files mask="K32L3A60_cm4.xml"/>
      </source>
    </component>
    <component id="platform.devices.K32L3A60_linker.K32L3A60" name="K32L3A60_linker" brief="Device K32L3A60_linker" version="1.0.0" full_name="Device K32L3A60_linker" devices="K32L3A60xxx" user_visible="true" type="linker" package_base_path="devices/K32L3A60" project_base_path="K32L3A60">
      <source toolchain="mdk" relative_path="arm" type="linker" device_cores="cm0plus_K32L3A60xxx">
        <files mask="K32L3A60xxx_cm0plus_flash.scf"/>
        <files mask="K32L3A60xxx_cm0plus_ram.scf"/>
      </source>
      <source toolchain="armgcc" relative_path="gcc" type="linker" device_cores="cm0plus_K32L3A60xxx">
        <files mask="K32L3A60xxx_cm0plus_flash.ld"/>
        <files mask="K32L3A60xxx_cm0plus_ram.ld"/>
      </source>
      <source toolchain="iar" relative_path="iar" type="linker" device_cores="cm0plus_K32L3A60xxx">
        <files mask="K32L3A60xxx_cm0plus_flash.icf"/>
        <files mask="K32L3A60xxx_cm0plus_ram.icf"/>
      </source>
      <source toolchain="mdk" relative_path="arm" type="linker" device_cores="cm4_K32L3A60xxx">
        <files mask="K32L3A60xxx_cm4_flash.scf"/>
        <files mask="K32L3A60xxx_cm4_ram.scf"/>
      </source>
      <source toolchain="armgcc" relative_path="gcc" type="linker" device_cores="cm4_K32L3A60xxx">
        <files mask="K32L3A60xxx_cm4_flash.ld"/>
        <files mask="K32L3A60xxx_cm4_ram.ld"/>
      </source>
      <source toolchain="iar" relative_path="iar" type="linker" device_cores="cm4_K32L3A60xxx">
        <files mask="K32L3A60xxx_cm4_flash.icf"/>
        <files mask="K32L3A60xxx_cm4_ram.icf"/>
      </source>
    </component>
    <component id="platform.devices.K32L3A60_startup.K32L3A60" name="K32L3A60_startup" brief="Device K32L3A60_startup" version="1.1.0" full_name="Device K32L3A60_startup" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="Device/Startup" user_visible="true" type="startup" package_base_path="devices" project_base_path="startup">
      <dependencies>
        <component_dependency value="platform.devices.K32L3A60_system.K32L3A60"/>
      </dependencies>
      <source toolchain="mdk" relative_path="K32L3A60/arm" project_relative_path="./" type="asm_include" device_cores="cm0plus_K32L3A60xxx">
        <files mask="startup_K32L3A60_cm0plus.S"/>
      </source>
      <source toolchain="mdk" relative_path="K32L3A60/arm" project_relative_path="./" type="asm_include" device_cores="cm4_K32L3A60xxx">
        <files mask="startup_K32L3A60_cm4.S"/>
      </source>
      <source toolchain="armgcc" relative_path="K32L3A60/gcc" project_relative_path="./" type="asm_include" device_cores="cm0plus_K32L3A60xxx">
        <files mask="startup_K32L3A60_cm0plus.S"/>
      </source>
      <source toolchain="armgcc" relative_path="K32L3A60/gcc" project_relative_path="./" type="asm_include" device_cores="cm4_K32L3A60xxx">
        <files mask="startup_K32L3A60_cm4.S"/>
      </source>
      <source toolchain="iar" relative_path="K32L3A60/iar" project_relative_path="./" type="asm_include" device_cores="cm0plus_K32L3A60xxx">
        <files mask="startup_K32L3A60_cm0plus.s"/>
      </source>
      <source toolchain="iar" relative_path="K32L3A60/iar" project_relative_path="./" type="asm_include" device_cores="cm4_K32L3A60xxx">
        <files mask="startup_K32L3A60_cm4.s"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="K32L3A60/mcuxpresso" project_relative_path="./" type="src_c" device_cores="cm0plus_K32L3A60xxx">
        <files mask="startup_k32l3a60_cm0plus.c"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="K32L3A60/mcuxpresso" project_relative_path="./" type="src_cpp" device_cores="cm0plus_K32L3A60xxx">
        <files mask="startup_k32l3a60_cm0plus.cpp"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="K32L3A60/mcuxpresso" project_relative_path="./" type="src_c" device_cores="cm4_K32L3A60xxx">
        <files mask="startup_k32l3a60_cm4.c"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="K32L3A60/mcuxpresso" project_relative_path="./" type="src_cpp" device_cores="cm4_K32L3A60xxx">
        <files mask="startup_k32l3a60_cm4.cpp"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="K32L3A60/mcuxpresso" project_relative_path="./" type="src">
        <files mask="boot_multicore_slave.c"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="K32L3A60/mcuxpresso" project_relative_path="./" type="c_include">
        <files mask="boot_multicore_slave.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="device_K32L3A60_startup_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="device_K32L3A60_startup_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="K32L3A60/mcuxpresso" project_relative_path="./" toolchain="mcuxpresso" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.devices.K32L3A60_system.K32L3A60" name="K32L3A60_system" brief="Device K32L3A60_system" version="1.0.0" full_name="Device K32L3A60_system" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="CMSIS_Include" package_base_path="devices/K32L3A60" project_base_path="device">
      <dependencies>
        <component_dependency value="platform.devices.K32L3A60_CMSIS.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="src" device_cores="cm0plus_K32L3A60xxx">
        <files mask="system_K32L3A60_cm0plus.c"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm0plus_K32L3A60xxx">
        <files mask="system_K32L3A60_cm0plus.h"/>
      </source>
      <source relative_path="./" type="src" device_cores="cm4_K32L3A60xxx">
        <files mask="system_K32L3A60_cm4.c"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm4_K32L3A60xxx">
        <files mask="system_K32L3A60_cm4.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="device_K32L3A60_system_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="device_K32L3A60_system_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include" device_cores="cm0plus_K32L3A60xxx"/>
        <include_path relative_path="./" type="c_include" device_cores="cm4_K32L3A60xxx"/>
      </include_paths>
    </component>
    <component id="docs.K32L3A60.K32L3A60" name="K32L3A60" brief="Docs k32l3a60" version="1.0.0" full_name="Docs k32l3a60" devices="K32L3A60xxx" user_visible="true" type="documentation" package_base_path="docs" project_base_path="docs">
      <source relative_path="./" type="doc">
        <files mask="Getting Started with MCUXpresso SDK for FRDM-K32L3A6.pdf"/>
        <files mask="MCUXpresso SDK Release Notes for FRDM-K32L3A6.pdf"/>
      </source>
    </component>
    <component id="platform.drivers.cache_lpcac.K32L3A60" name="cache_lpcac" brief="CACHE Driver" version="2.1.1" full_name="CACHE Lpcac Driver" devices="K32L3A60xxx" device_cores="cm4_K32L3A60xxx" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers/cm4" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_cache.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cache.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="driver_cache_lpcac_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.cache_lplmem.K32L3A60" name="cache_lplmem" brief="CACHE Driver" version="2.1.1" full_name="CACHE Lplmem Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers/cm0plus" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_cache.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cache.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="driver_cache_lplmem_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.cau3.K32L3A60" name="cau3" brief="CAU3 Driver" version="2.0.4" full_name="CAU3 Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_cau3.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cau3.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="driver_cau3_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="driver_cau3_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.clock.K32L3A60" name="clock" brief="Clock Driver" version="2.2.1" full_name="Clock Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_clock.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_clock.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="driver_clock_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="driver_clock_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpi2c_cmsis.K32L3A60" name="lpi2c_cmsis" brief="LPI2C CMSIS Driver" version="2.1" full_name="LPI2C CMSIS Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="CMSIS_driver" package_base_path="devices/K32L3A60/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.K32L3A60"/>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.K32L3A60"/>
          <component_dependency value="RTE_Device.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpi2c_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpi2c_cmsis.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="driver_cmsis_lpi2c_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="driver_cmsis_lpi2c_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpspi_cmsis.K32L3A60" name="lpspi_cmsis" brief="LPSPI CMSIS Driver" version="2.3.0" full_name="LPSPI CMSIS Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="CMSIS_driver" package_base_path="devices/K32L3A60/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpspi.K32L3A60"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.K32L3A60"/>
          <component_dependency value="RTE_Device.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpspi_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpspi_cmsis.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="driver_cmsis_lpspi_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="driver_cmsis_lpspi_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpuart_cmsis.K32L3A60" name="lpuart_cmsis" brief="LPUART CMSIS Driver" version="2.1.0" full_name="LPUART CMSIS Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="CMSIS_driver" package_base_path="devices/K32L3A60/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpuart.K32L3A60"/>
          <component_dependency value="platform.CMSIS_Driver_Include.USART_CMSISInclude.K32L3A60"/>
          <component_dependency value="RTE_Device.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart_cmsis.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="driver_cmsis_lpuart_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="driver_cmsis_lpuart_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.common.K32L3A60" name="common" brief="COMMON Driver" version="2.2.9" full_name="COMMON Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.clock.K32L3A60"/>
          <component_dependency value="platform.devices.K32L3A60_CMSIS.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_common.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_common.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="driver_common_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="driver_common_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.crc.K32L3A60" name="crc" brief="CRC Driver" version="2.0.3" full_name="CRC Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_crc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_crc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="driver_crc_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="driver_crc_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dac_1.K32L3A60" name="dac" brief="DAC Driver" version="2.1.0" full_name="DAC Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_dac.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dac.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="driver_dac_1_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="driver_dac_1_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dmamux.K32L3A60" name="dmamux" brief="DMAMUX Driver" version="2.0.5" full_name="DMAMUX Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dmamux.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dmamux.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="driver_dmamux_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="driver_dmamux_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.edma.K32L3A60" name="edma" brief="EDMA Driver" version="2.4.1" full_name="EDMA Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.K32L3A60"/>
          <component_dependency value="platform.drivers.dmamux.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="driver_edma_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="driver_edma_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.ewm.K32L3A60" name="ewm" brief="EWM Driver" version="2.0.3" full_name="EWM Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_ewm.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ewm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="driver_ewm_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="driver_ewm_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flash.K32L3A60" name="flash" brief="Flash Driver" version="3.0.0" full_name="Flash Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ftfx_adapter.h"/>
        <files mask="fsl_ftfx_utilities.h"/>
        <files mask="fsl_ftfx_features.h"/>
        <files mask="fsl_ftfx_controller.h"/>
        <files mask="fsl_ftfx_flash.h"/>
        <files mask="fsl_ftfx_cache.h"/>
        <files mask="fsl_ftfx_flexnvm.h"/>
        <files mask="fsl_flash.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ftfx_controller.c"/>
        <files mask="fsl_ftfx_flash.c"/>
        <files mask="fsl_ftfx_cache.c"/>
        <files mask="fsl_ftfx_flexnvm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="driver_flash_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="driver_flash_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexbus.K32L3A60" name="flexbus" brief="FLEXBUS Driver" version="2.1.1" full_name="FLEXBUS Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexbus.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_flexbus.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio.K32L3A60" name="flexio" brief="FLEXIO Driver" version="2.0.4" full_name="FLEXIO Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="driver_flexio_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="driver_flexio_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_i2c_master.K32L3A60" name="flexio_i2c_master" brief="FLEXIO I2C Driver" version="2.4.0" full_name="FLEXIO I2C Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.flexio.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_i2c_master.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_i2c_master.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="driver_flexio_i2c_master_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="driver_flexio_i2c_master_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_spi.K32L3A60" name="flexio_spi" brief="FLEXIO SPI Driver" version="2.2.0" full_name="FLEXIO SPI Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.flexio.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_spi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_spi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="driver_flexio_spi_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="driver_flexio_spi_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_spi_edma.K32L3A60" name="flexio_spi_edma" brief="FLEXIO SPI EDMA Driver" version="2.2.0" full_name="FLEXIO SPI EDMA Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma.K32L3A60"/>
          <component_dependency value="platform.drivers.flexio_spi.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_spi_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_spi_edma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="driver_flexio_spi_edma_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="driver_flexio_spi_edma_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_uart.K32L3A60" name="flexio_uart" brief="FLEXIO UART Driver" version="2.3.0" full_name="FLEXIO UART Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.flexio.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_uart.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_uart.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="driver_flexio_uart_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="driver_flexio_uart_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_uart_edma.K32L3A60" name="flexio_uart_edma" brief="FLEXIO UART EDMA Driver" version="2.3.0" full_name="FLEXIO UART EDMA Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio_uart.K32L3A60"/>
          <component_dependency value="platform.drivers.edma.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_uart_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_uart_edma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="driver_flexio_uart_edma_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="driver_flexio_uart_edma_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.fxos8700cq.K32L3A60" name="fxos8700cq" brief="Driver fxos8700cq" version="1.0.0" full_name="Driver fxos8700cq" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="board_component" package_base_path="components/fxos8700cq" project_base_path="accel">
      <dependencies>
        <component_dependency value="platform.drivers.common.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_fxos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_fxos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="driver_fxos8700cq_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="driver_fxos8700cq_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.gpio.K32L3A60" name="gpio" brief="GPIO Driver" version="2.5.1" full_name="GPIO Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_gpio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_gpio.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="driver_gpio_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="driver_gpio_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.intmux.K32L3A60" name="intmux" brief="INTMUX Driver" version="2.0.4" full_name="INTMUX Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_intmux.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_intmux.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="driver_intmux_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.llwu.K32L3A60" name="llwu" brief="LLWU Driver" version="2.0.5" full_name="LLWU Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_llwu.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_llwu.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="driver_llwu_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpadc.K32L3A60" name="lpadc" brief="LPADC Driver" version="2.3.0" full_name="LPADC Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lpadc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpadc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="driver_lpadc_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="driver_lpadc_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpcmp.K32L3A60" name="lpcmp" brief="LPCMP Driver" version="2.0.3" full_name="LPCMP Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lpcmp.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpcmp.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="driver_lpcmp_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="driver_lpcmp_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpi2c.K32L3A60" name="i2c" brief="LPI2C Driver" version="2.2.0" full_name="LPI2C Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lpi2c.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpi2c.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="driver_lpi2c_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="driver_lpi2c_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpi2c_edma.K32L3A60" name="i2c_edma" brief="LPI2C Driver" version="2.2.0" full_name="LPI2C Edma Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma.K32L3A60"/>
          <component_dependency value="platform.drivers.lpi2c.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lpi2c_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpi2c_edma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="driver_lpi2c_edma_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="driver_lpi2c_edma_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpi2c_freertos.K32L3A60" name="i2c_freertos" brief="LPI2C Driver" version="2.2.0" full_name="LPI2C Freerto Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.K32L3A60"/>
          <component_dependency value="middleware.freertos-kernel.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpi2c_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpi2c_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="driver_lpi2c_freertos_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpit.K32L3A60" name="lpit" brief="LPIT Driver" version="2.0.2" full_name="LPIT Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lpit.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpit.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="driver_lpit_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="driver_lpit_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpspi.K32L3A60" name="lpspi" brief="LPSPI Driver" version="2.1.0" full_name="LPSPI Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lpspi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpspi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="driver_lpspi_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="driver_lpspi_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpspi_edma.K32L3A60" name="lpspi_edma" brief="LPSPI Driver" version="2.0.5" full_name="LPSPI Edma Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma.K32L3A60"/>
          <component_dependency value="platform.drivers.lpspi.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpspi_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpspi_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="driver_lpspi_edma_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="driver_lpspi_edma_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpspi_freertos.K32L3A60" name="lpspi_freertos" brief="LPSPI Driver" version="2.0.5" full_name="LPSPI Freertos Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpspi.K32L3A60"/>
          <component_dependency value="middleware.freertos-kernel.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpspi_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpspi_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="driver_lpspi_freertos_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="driver_lpspi_freertos_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lptmr.K32L3A60" name="lptmr" brief="LPTMR Driver" version="2.1.1" full_name="LPTMR Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lptmr.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lptmr.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="driver_lptmr_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="driver_lptmr_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpuart.K32L3A60" name="lpuart" brief="LPUART Driver" version="2.4.1" full_name="LPUART Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="driver_lpuart_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="driver_lpuart_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpuart_edma.K32L3A60" name="lpuart_edma" brief="LPUART Driver" version="2.4.0" full_name="LPUART Edma Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma.K32L3A60"/>
          <component_dependency value="platform.drivers.lpuart.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="driver_lpuart_edma_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="driver_lpuart_edma_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpuart_freertos.K32L3A60" name="lpuart_freertos" brief="LPUART Driver" version="2.4.0" full_name="LPUART Freertos Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpuart.K32L3A60"/>
          <component_dependency value="middleware.freertos-kernel.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="driver_lpuart_freertos_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="driver_lpuart_freertos_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.mmdvsq.K32L3A60" name="mmdvsq" brief="MMDVSQ Driver" version="2.0.3" full_name="MMDVSQ Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mmdvsq.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mmdvsq.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="driver_mmdvsq_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.msmc.K32L3A60" name="msmc" brief="MSMC Driver" version="2.1.2" full_name="MSMC Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_msmc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_msmc.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="driver_msmc_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="driver_msmc_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.mu.K32L3A60" name="mu" brief="MU Driver" version="2.0.6" full_name="MU Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mu.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mu.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="driver_mu_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="driver_mu_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.port.K32L3A60" name="port" brief="PORT Driver" version="2.1.1" full_name="PORT Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_port.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="driver_port_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="driver_port_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.rtc.K32L3A60" name="rtc" brief="RTC Driver" version="2.2.1" full_name="RTC Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_rtc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rtc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="driver_rtc_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="driver_rtc_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sai.K32L3A60" name="sai" brief="SAI Driver" version="2.3.2" full_name="SAI Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sai.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sai.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sema42.K32L3A60" name="sema42" brief="SEMA42 Driver" version="2.0.2" full_name="SEMA42 Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sema42.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sema42.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="driver_sema42_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="driver_sema42_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sim.K32L3A60" name="sim" brief="SIM Driver" version="2.1.2" full_name="SIM Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sim.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sim.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="driver_sim_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="driver_sim_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.smartcard_emvsim.K32L3A60" name="smartcard_emvsim" brief="SMARTCARD EMVSIM Driver" version="2.2.2" full_name="SMARTCARD EMVSIM Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_smartcard.h"/>
        <files mask="fsl_smartcard_emvsim.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_smartcard_emvsim.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.smartcard_phy_emvsim.K32L3A60" name="smartcard_phy_emvsim" brief="SMARTCARD PHY EMVSIM, use only one SMARTCARD PHY in the project" version="2.2.2" full_name="SMARTCARD PHY EMVSIM" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.smartcard_emvsim.K32L3A60"/>
          <component_dependency value="platform.drivers.common.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_smartcard_phy.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_smartcard_phy_emvsim.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.spm.K32L3A60" name="spm" brief="SPM Driver" version="2.3.0" full_name="SPM Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_spm.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_spm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="driver_spm_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.tpm.K32L3A60" name="tpm" brief="TPM Driver" version="2.0.7" full_name="TPM Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_tpm.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_tpm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="driver_tpm_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="driver_tpm_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.trgmux.K32L3A60" name="trgmux" brief="TRGMUX Driver" version="2.0.1" full_name="TRGMUX Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_trgmux.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_trgmux.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.trng.K32L3A60" name="trng" brief="TRNG Driver" version="2.0.12" full_name="TRNG Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_trng.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_trng.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="driver_trng_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="driver_trng_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.tstmr.K32L3A60" name="tstmr" brief="TSTMR Driver" version="2.0.0" full_name="TSTMR Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_tstmr.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="driver_tstmr_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="driver_tstmr_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.usdhc.K32L3A60" name="sdhc" brief="USDHC Driver" version="2.7.0" full_name="USDHC Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_usdhc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_usdhc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="driver_usdhc_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="driver_usdhc_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.vref.K32L3A60" name="vref" brief="VREF Driver" version="2.1.2" full_name="VREF Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_vref.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_vref.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.wdog32.K32L3A60" name="wdog" brief="WDOG32 Driver" version="2.0.4" full_name="WDOG32 Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wdog32.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wdog32.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="driver_wdog32_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.xrdc.K32L3A60" name="xrdc" brief="XRDC Driver" version="2.0.4" full_name="XRDC Driver" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="driver" package_base_path="devices/K32L3A60/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_xrdc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_xrdc.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="driver_xrdc_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="driver_xrdc_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.baremetal.K32L3A60" name="baremetal" brief="Middleware baremetal" version="1.0.0" full_name="Baremetal" devices="K32L3A60xxx" user_visible="true" type="OS" package_base_path="middleware" project_base_path="middleware">
      <defines>
        <define name="FSL_RTOS_BM" value=""/>
        <define name="SDK_OS_BAREMETAL" value=""/>
      </defines>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="middleware_baremetal_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="middleware_baremetal_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.fatfs.K32L3A60" name="fatfs" brief="FatFs" version="0.14" full_name="FAT File System stack" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.template.K32L3A60"/>
          <any_of>
            <component_dependency value="middleware.fatfs.ram.K32L3A60"/>
            <component_dependency value="middleware.fatfs.mmc.K32L3A60"/>
            <component_dependency value="middleware.fatfs.sd.K32L3A60"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="diskio.c"/>
        <files mask="ff.c"/>
        <files mask="ffsystem.c"/>
        <files mask="ffunicode.c"/>
      </source>
      <source relative_path="source" type="c_include">
        <files mask="diskio.h"/>
        <files mask="ff.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="middleware_fatfs_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="middleware_fatfs_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.mmc.K32L3A60" name="mmc" brief="FatFs_MMC" version="0.14" full_name="Fatfs MMC layer" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.K32L3A60"/>
          <component_dependency value="middleware.fatfs.template.K32L3A60"/>
          <component_dependency value="middleware.sdmmc.mmc.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_mmc_disk" type="c_include">
        <files mask="fsl_mmc_disk.h"/>
      </source>
      <source relative_path="source/fsl_mmc_disk" type="src">
        <files mask="fsl_mmc_disk.c"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_mmc_disk" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.ram.K32L3A60" name="ram" brief="FatFs_RAM" version="0.14" full_name="Fatfs RAM layer" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.K32L3A60"/>
          <component_dependency value="middleware.fatfs.template.K32L3A60"/>
          <component_dependency value="platform.drivers.common.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_ram_disk" type="c_include">
        <files mask="fsl_ram_disk.h"/>
      </source>
      <source relative_path="source/fsl_ram_disk" type="src">
        <files mask="fsl_ram_disk.c"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_ram_disk" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.sd.K32L3A60" name="sd" brief="FatFs_SD" version="0.14" full_name="Fatfs SD layer" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.K32L3A60"/>
          <component_dependency value="middleware.fatfs.template.K32L3A60"/>
          <component_dependency value="middleware.sdmmc.sd.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_sd_disk" type="c_include">
        <files mask="fsl_sd_disk.h"/>
      </source>
      <source relative_path="source/fsl_sd_disk" type="src">
        <files mask="fsl_sd_disk.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="middleware_fatfs_sd_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="middleware_fatfs_sd_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_sd_disk" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template.K32L3A60" name="fatfs" brief="FatFs template" version="0.14" full_name="FatFs template configuration" devices="K32L3A60xxx" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <source relative_path="template" project_relative_path="./" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <include_paths>
        <include_path relative_path="template" project_relative_path="./" type="c_include"/>
        <include_path relative_path="source" type="c_include"/>
        <include_path relative_path="source/option" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.unused_files.K32L3A60" name="unused_files" brief="fatfs files unused by projects" version="0.14" full_name="fatfs unused" devices="K32L3A60xxx" user_visible="false" type="other" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <source exclude="true" relative_path="source" type="c_include">
        <files mask="ffconf_template.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="source" type="doc">
        <files mask="00history.txt" hidden="true"/>
        <files mask="00readme.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="documents" type="doc">
        <files mask="00index_e.html" hidden="true"/>
        <files mask="updates.txt" hidden="true"/>
        <files mask="css_e.css" hidden="true"/>
      </source>
      <source exclude="true" relative_path="documents/doc" type="doc">
        <files mask="expand.html" hidden="true"/>
        <files mask="printf.html" hidden="true"/>
        <files mask="sfileinfo.html" hidden="true"/>
        <files mask="size.html" hidden="true"/>
        <files mask="putc.html" hidden="true"/>
        <files mask="dread.html" hidden="true"/>
        <files mask="stat.html" hidden="true"/>
        <files mask="sync.html" hidden="true"/>
        <files mask="close.html" hidden="true"/>
        <files mask="setcp.html" hidden="true"/>
        <files mask="dwrite.html" hidden="true"/>
        <files mask="sfile.html" hidden="true"/>
        <files mask="tell.html" hidden="true"/>
        <files mask="readdir.html" hidden="true"/>
        <files mask="gets.html" hidden="true"/>
        <files mask="mount.html" hidden="true"/>
        <files mask="filename.html" hidden="true"/>
        <files mask="sfatfs.html" hidden="true"/>
        <files mask="rc.html" hidden="true"/>
        <files mask="getlabel.html" hidden="true"/>
        <files mask="read.html" hidden="true"/>
        <files mask="open.html" hidden="true"/>
        <files mask="dstat.html" hidden="true"/>
        <files mask="config.html" hidden="true"/>
        <files mask="lseek.html" hidden="true"/>
        <files mask="puts.html" hidden="true"/>
        <files mask="mkfs.html" hidden="true"/>
        <files mask="chdrive.html" hidden="true"/>
        <files mask="appnote.html" hidden="true"/>
        <files mask="setlabel.html" hidden="true"/>
        <files mask="sdir.html" hidden="true"/>
        <files mask="dinit.html" hidden="true"/>
        <files mask="truncate.html" hidden="true"/>
        <files mask="opendir.html" hidden="true"/>
        <files mask="error.html" hidden="true"/>
        <files mask="unlink.html" hidden="true"/>
        <files mask="getcwd.html" hidden="true"/>
        <files mask="fdisk.html" hidden="true"/>
        <files mask="getfree.html" hidden="true"/>
        <files mask="dioctl.html" hidden="true"/>
        <files mask="rename.html" hidden="true"/>
        <files mask="closedir.html" hidden="true"/>
        <files mask="utime.html" hidden="true"/>
        <files mask="findfirst.html" hidden="true"/>
        <files mask="forward.html" hidden="true"/>
        <files mask="chmod.html" hidden="true"/>
        <files mask="fattime.html" hidden="true"/>
        <files mask="findnext.html" hidden="true"/>
        <files mask="mkdir.html" hidden="true"/>
        <files mask="write.html" hidden="true"/>
        <files mask="chdir.html" hidden="true"/>
        <files mask="eof.html" hidden="true"/>
      </source>
      <source exclude="true" relative_path="documents/res" type="image">
        <files mask="rwtest2.png" hidden="true"/>
        <files mask="f4.png" hidden="true"/>
        <files mask="rwtest1.png" hidden="true"/>
        <files mask="f1.png" hidden="true"/>
        <files mask="layers.png" hidden="true"/>
        <files mask="f2.png" hidden="true"/>
        <files mask="funcs.png" hidden="true"/>
        <files mask="f5.png" hidden="true"/>
        <files mask="rwtest3.png" hidden="true"/>
        <files mask="layers1.png" hidden="true"/>
        <files mask="f6.png" hidden="true"/>
        <files mask="f7.png" hidden="true"/>
        <files mask="layers3.png" hidden="true"/>
        <files mask="layers2.png" hidden="true"/>
        <files mask="modules.png" hidden="true"/>
        <files mask="f3.png" hidden="true"/>
      </source>
      <source exclude="true" relative_path="documents/res" type="src">
        <files mask="app4.c" hidden="true"/>
        <files mask="app5.c" hidden="true"/>
        <files mask="app3.c" hidden="true"/>
        <files mask="app6.c" hidden="true"/>
        <files mask="app2.c" hidden="true"/>
        <files mask="app1.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="documents/res" type="other">
        <files mask="mkfs.xlsx" hidden="true"/>
      </source>
      <source exclude="true" relative_path="documents/res" type="archive">
        <files mask="mkfatimg.zip" hidden="true"/>
      </source>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="LICENSE.txt" hidden="true"/>
        <files mask="ChangeLogKSDK.txt" hidden="true"/>
      </source>
    </component>
    <component id="middleware.fmstr.K32L3A60" name="FreeMASTER" brief="Driver code enabling communication between FreeMASTER or FreeMASTER Lite tools and MCU application. Supports Serial, CAN and BDM/JTAG physical interface." version="3.0.2" full_name="FreeMASTER communication driver" devices="K32L3A60xxx" user_visible="true" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <component_dependency value="middleware.fmstr.template_app.K32L3A60"/>
      </dependencies>
      <source relative_path="src/common" project_relative_path="./" type="c_include">
        <files mask="freemaster.h"/>
        <files mask="freemaster_defcfg.h"/>
        <files mask="freemaster_private.h"/>
        <files mask="freemaster_protocol.h"/>
        <files mask="freemaster_rec.h"/>
        <files mask="freemaster_tsa.h"/>
        <files mask="freemaster_ures.h"/>
        <files mask="freemaster_utils.h"/>
        <files mask="freemaster_can.h"/>
        <files mask="freemaster_serial.h"/>
      </source>
      <source relative_path="src/common" project_relative_path="./" type="src">
        <files mask="freemaster_appcmd.c"/>
        <files mask="freemaster_pipes.c"/>
        <files mask="freemaster_protocol.c"/>
        <files mask="freemaster_rec.c"/>
        <files mask="freemaster_scope.c"/>
        <files mask="freemaster_tsa.c"/>
        <files mask="freemaster_ures.c"/>
        <files mask="freemaster_utils.c"/>
        <files mask="freemaster_can.c"/>
        <files mask="freemaster_sha.c"/>
        <files mask="freemaster_pdbdm.c"/>
        <files mask="freemaster_serial.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="middleware_fmstr_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="middleware_fmstr_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/common" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.files.K32L3A60" name="FreeMASTER driver files" brief="FreeMASTER communication driver source code files" version="1.0.0" full_name="FreeMASTER driver files" devices="K32L3A60xxx" user_visible="false" type="other" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <source relative_path="src/common" type="c_include">
        <files mask="freemaster_serial.h"/>
        <files mask="freemaster_protocol.h"/>
        <files mask="freemaster_utils.h"/>
        <files mask="freemaster_can.h"/>
        <files mask="freemaster.h"/>
        <files mask="freemaster_defcfg.h"/>
        <files mask="freemaster_rec.h"/>
        <files mask="freemaster_ures.h"/>
        <files mask="freemaster_private.h"/>
        <files mask="freemaster_tsa.h"/>
      </source>
      <source relative_path="src/common" type="src">
        <files mask="freemaster_pdbdm.c"/>
        <files mask="freemaster_serial.c"/>
        <files mask="freemaster_pipes.c"/>
        <files mask="freemaster_sha.c"/>
        <files mask="freemaster_utils.c"/>
        <files mask="freemaster_can.c"/>
        <files mask="freemaster_scope.c"/>
        <files mask="freemaster_protocol.c"/>
        <files mask="freemaster_rec.c"/>
        <files mask="freemaster_ures.c"/>
        <files mask="freemaster_tsa.c"/>
        <files mask="freemaster_appcmd.c"/>
      </source>
      <source relative_path="src/common" type="other">
        <files mask="freemaster_cfg.h.example"/>
      </source>
      <source relative_path="src/platforms/56f800e" type="c_include">
        <files mask="freemaster_56f800e.h"/>
      </source>
      <source relative_path="src/platforms/gen32be" type="c_include">
        <files mask="freemaster_gen32be.h"/>
      </source>
      <source relative_path="src/platforms/gen32le" type="c_include">
        <files mask="freemaster_gen32le.h"/>
      </source>
      <source relative_path="src/platforms/s12z" type="c_include">
        <files mask="freemaster_s12z.h"/>
      </source>
      <source relative_path="src/drivers" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source relative_path="src/drivers/dreg/DSC" type="src">
        <files mask="freemaster_56f800e_eonce.c"/>
        <files mask="freemaster_56f800e_flexcan.c"/>
        <files mask="freemaster_56f800e_qsci.c"/>
      </source>
      <source relative_path="src/drivers/dreg/DSC" type="c_include">
        <files mask="freemaster_56f800e_eonce.h"/>
        <files mask="freemaster_56f800e_flexcan.h"/>
        <files mask="freemaster_56f800e_qsci.h"/>
      </source>
      <source relative_path="src/drivers/dreg/Kxx" type="src">
        <files mask="freemaster_kxx_uart.c"/>
      </source>
      <source relative_path="src/drivers/dreg/Kxx" type="c_include">
        <files mask="freemaster_kxx_uart.h"/>
      </source>
      <source relative_path="src/drivers/dreg/MPC" type="src">
        <files mask="freemaster_mpc574xp_linflex.c"/>
      </source>
      <source relative_path="src/drivers/dreg/MPC" type="c_include">
        <files mask="freemaster_mpc574xp_linflex.h"/>
      </source>
      <source relative_path="src/drivers/dreg/S12Z" type="src">
        <files mask="freemaster_s12z_sci.c"/>
        <files mask="freemaster_s12z_mscan.c"/>
      </source>
      <source relative_path="src/drivers/dreg/S12Z" type="c_include">
        <files mask="freemaster_s12z_sci.h"/>
        <files mask="freemaster_s12z_mscan.h"/>
      </source>
      <source relative_path="src/drivers/dreg/S32G" type="src">
        <files mask="freemaster_s32g274a_linflexd.c"/>
      </source>
      <source relative_path="src/drivers/dreg/S32G" type="c_include">
        <files mask="freemaster_s32g274a_linflexd.h"/>
      </source>
      <source relative_path="src/drivers/dreg/S32K" type="src">
        <files mask="freemaster_s32k344_lpuart.c"/>
        <files mask="freemaster_s32k144_lpuart.c"/>
      </source>
      <source relative_path="src/drivers/dreg/S32K" type="c_include">
        <files mask="freemaster_s32k144_lpuart.h"/>
        <files mask="freemaster_s32k344_lpuart.h"/>
      </source>
      <source relative_path="src/drivers/dreg/S32R" type="src">
        <files mask="freemaster_s32r45_linflexd.c"/>
      </source>
      <source relative_path="src/drivers/dreg/S32R" type="c_include">
        <files mask="freemaster_s32r45_linflexd.h"/>
      </source>
      <source relative_path="src/drivers/dreg/S32S" type="src">
        <files mask="freemaster_s32s247tv_linflexd.c"/>
      </source>
      <source relative_path="src/drivers/dreg/S32S" type="c_include">
        <files mask="freemaster_s32s247tv_linflexd.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/can" type="src">
        <files mask="freemaster_mscan.c"/>
        <files mask="freemaster_flexcan.c"/>
        <files mask="freemaster_flexcan_dsc.c"/>
        <files mask="freemaster_mcan.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/can" type="c_include">
        <files mask="freemaster_flexcan_dsc.h"/>
        <files mask="freemaster_mcan.h"/>
        <files mask="freemaster_mscan.h"/>
        <files mask="freemaster_flexcan.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/serial" type="src">
        <files mask="freemaster_56f800e_eonce.c"/>
        <files mask="freemaster_serial_lpsci.c"/>
        <files mask="freemaster_serial_usart.c"/>
        <files mask="freemaster_serial_qsci.c"/>
        <files mask="freemaster_serial_miniusart.c"/>
        <files mask="freemaster_serial_lpuart.c"/>
        <files mask="freemaster_serial_usb.c"/>
        <files mask="freemaster_serial_uart.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/serial" type="c_include">
        <files mask="freemaster_serial_usart.h"/>
        <files mask="freemaster_56f800e_eonce.h"/>
        <files mask="freemaster_serial_usb.h"/>
        <files mask="freemaster_serial_uart.h"/>
        <files mask="freemaster_serial_lpsci.h"/>
        <files mask="freemaster_serial_miniusart.h"/>
        <files mask="freemaster_serial_qsci.h"/>
        <files mask="freemaster_serial_lpuart.h"/>
      </source>
      <source relative_path="src/drivers/ampxsdk/uart/S32K1x" type="src">
        <files mask="freemaster_serial_lpuart.c"/>
      </source>
      <source relative_path="src/drivers/ampxsdk/uart/S32K1x" type="c_include">
        <files mask="freemaster_serial_lpuart.h"/>
      </source>
      <source relative_path="src/drivers/ampxsdk/can/S32K1x" type="src">
        <files mask="freemaster_flexcan.c"/>
      </source>
      <source relative_path="src/drivers/ampxsdk/can/S32K1x" type="c_include">
        <files mask="freemaster_flexcan.h"/>
      </source>
      <source relative_path="src/support/mcuxsdk_usb" type="src">
        <files mask="freemaster_usb.c"/>
        <files mask="freemaster_usb_device_descriptor.c"/>
      </source>
      <source relative_path="src/support/mcuxsdk_usb" type="c_include">
        <files mask="freemaster_usb_device_descriptor.h"/>
        <files mask="usb_device_config.h"/>
        <files mask="freemaster_usb.h"/>
      </source>
      <source relative_path="src/support/mcuxsdk_usb" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source relative_path="license" type="doc">
        <files mask="LA_OPT_NXP_Software_License.txt"/>
        <files mask="SW-Content-Register.txt"/>
      </source>
      <source relative_path="doc" type="doc">
        <files mask="release_notes.txt"/>
        <files mask="serial_protocol_readme.txt"/>
        <files mask="serial_protocol_v4.pdf"/>
        <files mask="user_guide.pdf"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
      </source>
      <include_paths>
        <include_path relative_path="src/common" type="c_include"/>
        <include_path relative_path="src/platforms/56f800e" type="c_include"/>
        <include_path relative_path="src/platforms/gen32be" type="c_include"/>
        <include_path relative_path="src/platforms/gen32le" type="c_include"/>
        <include_path relative_path="src/platforms/s12z" type="c_include"/>
        <include_path relative_path="src/drivers/dreg/DSC" type="c_include"/>
        <include_path relative_path="src/drivers/dreg/Kxx" type="c_include"/>
        <include_path relative_path="src/drivers/dreg/MPC" type="c_include"/>
        <include_path relative_path="src/drivers/dreg/S12Z" type="c_include"/>
        <include_path relative_path="src/drivers/dreg/S32G" type="c_include"/>
        <include_path relative_path="src/drivers/dreg/S32K" type="c_include"/>
        <include_path relative_path="src/drivers/dreg/S32R" type="c_include"/>
        <include_path relative_path="src/drivers/dreg/S32S" type="c_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/can" type="c_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/serial" type="c_include"/>
        <include_path relative_path="src/drivers/ampxsdk/uart/S32K1x" type="c_include"/>
        <include_path relative_path="src/drivers/ampxsdk/can/S32K1x" type="c_include"/>
        <include_path relative_path="src/support/mcuxsdk_usb" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.platform_56f800e.K32L3A60" name="FreeMASTER 56F800EX platform files" brief="FreeMASTER 56F800EX platform source code files" version="1.0.0" full_name="FreeMASTER 56F800EX platform files" devices="K32L3A60xxx" user_visible="false" type="other" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <component_dependency value="middleware.fmstr.K32L3A60"/>
      </dependencies>
      <source relative_path="src/platforms/56f800e" project_relative_path="platforms" type="c_include">
        <files mask="freemaster_56f800e.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/can" project_relative_path="drivers" type="src">
        <files mask="freemaster_flexcan_dsc.c"/>
        <files mask="freemaster_mscan.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/can" project_relative_path="drivers" type="c_include">
        <files mask="freemaster_flexcan_dsc.h"/>
        <files mask="freemaster_mscan.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/serial" project_relative_path="drivers" type="src">
        <files mask="freemaster_serial_qsci.c"/>
        <files mask="freemaster_56f800e_eonce.c"/>
        <files mask="freemaster_serial_usb.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/serial" project_relative_path="drivers" type="c_include">
        <files mask="freemaster_serial_qsci.h"/>
        <files mask="freemaster_56f800e_eonce.h"/>
        <files mask="freemaster_serial_usb.h"/>
      </source>
      <include_paths>
        <include_path relative_path="src/platforms/56f800e" project_relative_path="platforms" type="c_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/can" project_relative_path="drivers" type="c_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/serial" project_relative_path="drivers" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.platform_gen32le.K32L3A60" name="FreeMASTER gen32le platform files" brief="FreeMASTER gen32le platform source code files" version="1.0.0" full_name="FreeMASTER gen32le platform files" devices="K32L3A60xxx" user_visible="false" type="other" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <component_dependency value="middleware.fmstr.K32L3A60"/>
      </dependencies>
      <source relative_path="src/platforms/gen32le" project_relative_path="platforms" type="c_include">
        <files mask="freemaster_gen32le.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/can" project_relative_path="drivers" type="src">
        <files mask="freemaster_flexcan.c"/>
        <files mask="freemaster_mscan.c"/>
        <files mask="freemaster_mcan.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/can" project_relative_path="drivers" type="c_include">
        <files mask="freemaster_flexcan.h"/>
        <files mask="freemaster_mscan.h"/>
        <files mask="freemaster_mcan.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/serial" project_relative_path="drivers" type="src">
        <files mask="freemaster_serial_uart.c"/>
        <files mask="freemaster_serial_lpsci.c"/>
        <files mask="freemaster_serial_lpuart.c"/>
        <files mask="freemaster_serial_usart.c"/>
        <files mask="freemaster_serial_miniusart.c"/>
        <files mask="freemaster_serial_usb.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/serial" project_relative_path="drivers" type="c_include">
        <files mask="freemaster_serial_uart.h"/>
        <files mask="freemaster_serial_lpsci.h"/>
        <files mask="freemaster_serial_lpuart.h"/>
        <files mask="freemaster_serial_usart.h"/>
        <files mask="freemaster_serial_miniusart.h"/>
        <files mask="freemaster_serial_usb.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="middleware_fmstr_platform_gen32le_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="middleware_fmstr_platform_gen32le_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/platforms/gen32le" project_relative_path="platforms" type="c_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/can" project_relative_path="drivers" type="c_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/serial" project_relative_path="drivers" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.template_app.K32L3A60" name="freemaster_template_app" brief="FreeMASTER application configuration file template. Needs to be updated manually to match MCU and board settings." version="1.0.0" full_name="FreeMASTER application template" devices="K32L3A60xxx" user_visible="false" type="project_template" package_base_path="middleware/freemaster" project_base_path="source">
      <source relative_path="src/template" project_relative_path="./" type="c_include">
        <files mask="freemaster_cfg.h"/>
      </source>
      <include_paths>
        <include_path relative_path="src/template" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.K32L3A60" name="FreeRTOS kernel" brief="FreeRTOS kernel" version="202007.00.0" full_name="FreeRTOS kernel" devices="K32L3A60xxx" user_visible="true" type="OS" package_base_path="rtos/freertos" project_base_path="freertos">
      <defines>
        <define name="FSL_RTOS_FREE_RTOS" value=""/>
        <define name="SDK_OS_FREE_RTOS" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.extension.K32L3A60"/>
          <component_dependency value="middleware.freertos-kernel.template.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="freertos_kernel" type="src">
        <files mask="event_groups.c"/>
        <files mask="croutine.c"/>
        <files mask="list.c"/>
        <files mask="queue.c"/>
        <files mask="stream_buffer.c"/>
        <files mask="tasks.c"/>
        <files mask="timers.c"/>
      </source>
      <source relative_path="freertos_kernel/include" type="c_include">
        <files mask="croutine.h"/>
        <files mask="StackMacros.h"/>
        <files mask="atomic.h"/>
        <files mask="deprecated_definitions.h"/>
        <files mask="event_groups.h"/>
        <files mask="FreeRTOS.h"/>
        <files mask="list.h"/>
        <files mask="message_buffer.h"/>
        <files mask="mpu_prototypes.h"/>
        <files mask="mpu_wrappers.h"/>
        <files mask="portable.h"/>
        <files mask="projdefs.h"/>
        <files mask="queue.h"/>
        <files mask="semphr.h"/>
        <files mask="stack_macros.h"/>
        <files mask="stream_buffer.h"/>
        <files mask="task.h"/>
        <files mask="timers.h"/>
      </source>
      <source toolchain="armgcc mcuxpresso mdk" compiler="compiler_armclang compiler_gcc" relative_path="freertos_kernel/portable/GCC/ARM_CM0" type="src" device_cores="cm0plus_K32L3A60xxx">
        <files mask="port.c"/>
      </source>
      <source toolchain="armgcc mcuxpresso mdk" compiler="compiler_armclang compiler_gcc" relative_path="freertos_kernel/portable/GCC/ARM_CM0" type="c_include" device_cores="cm0plus_K32L3A60xxx">
        <files mask="portmacro.h"/>
      </source>
      <source toolchain="armgcc mcuxpresso mdk" compiler="compiler_armclang compiler_gcc" relative_path="freertos_kernel/portable/GCC/ARM_CM4F" type="src" device_cores="cm4_K32L3A60xxx">
        <files mask="port.c"/>
      </source>
      <source toolchain="armgcc mcuxpresso mdk" compiler="compiler_armclang compiler_gcc" relative_path="freertos_kernel/portable/GCC/ARM_CM4F" type="c_include" device_cores="cm4_K32L3A60xxx">
        <files mask="portmacro.h"/>
      </source>
      <source toolchain="iar" relative_path="freertos_kernel/portable/IAR/ARM_CM0" type="src" device_cores="cm0plus_K32L3A60xxx">
        <files mask="port.c"/>
      </source>
      <source toolchain="iar" relative_path="freertos_kernel/portable/IAR/ARM_CM0" type="asm_include" device_cores="cm0plus_K32L3A60xxx">
        <files mask="portasm.s"/>
      </source>
      <source toolchain="iar" relative_path="freertos_kernel/portable/IAR/ARM_CM0" type="c_include" device_cores="cm0plus_K32L3A60xxx">
        <files mask="portmacro.h"/>
      </source>
      <source toolchain="iar" relative_path="freertos_kernel/portable/IAR/ARM_CM4F" type="src" device_cores="cm4_K32L3A60xxx">
        <files mask="port.c"/>
      </source>
      <source toolchain="iar" relative_path="freertos_kernel/portable/IAR/ARM_CM4F" type="asm_include" device_cores="cm4_K32L3A60xxx">
        <files mask="portasm.s"/>
      </source>
      <source toolchain="iar" relative_path="freertos_kernel/portable/IAR/ARM_CM4F" type="c_include" device_cores="cm4_K32L3A60xxx">
        <files mask="portmacro.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/MemMang" type="other">
        <files mask="ReadMe.url"/>
      </source>
      <source relative_path="freertos_kernel/portable" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="middleware_freertos-kernel_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="middleware_freertos-kernel_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="freertos_kernel/include" type="c_include"/>
        <include_path relative_path="freertos_kernel/portable/GCC/ARM_CM0" toolchain="armgcc mcuxpresso mdk" type="c_include" device_cores="cm0plus_K32L3A60xxx"/>
        <include_path relative_path="freertos_kernel/portable/GCC/ARM_CM4F" toolchain="armgcc mcuxpresso mdk" type="c_include" device_cores="cm4_K32L3A60xxx"/>
        <include_path relative_path="freertos_kernel/portable/IAR/ARM_CM0" toolchain="iar" type="c_include" device_cores="cm0plus_K32L3A60xxx"/>
        <include_path relative_path="freertos_kernel/portable/IAR/ARM_CM4F" toolchain="iar" type="c_include" device_cores="cm4_K32L3A60xxx"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.armv8m.K32L3A60" name="FreeRTOS port ARMv8M" brief="FreeRTOS port ARMv8M" version="202007.00.0" full_name="FreeRTOS port ARMv8M" devices="K32L3A60xxx" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.K32L3A60"/>
      </dependencies>
      <source relative_path="freertos_kernel/portable/ARMv8M" type="script">
        <files mask="copy_files.py"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure" type="src">
        <files mask="port.c"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/GCC/ARM_CM33" type="src">
        <files mask="portasm.c"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/GCC/ARM_CM33" type="c_include">
        <files mask="portmacro.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/GCC/ARM_CM33_NTZ" type="src">
        <files mask="portasm.c"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/GCC/ARM_CM33_NTZ" type="c_include">
        <files mask="portmacro.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/IAR/ARM_CM33" type="asm_include">
        <files mask="portasm.s"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/IAR/ARM_CM33" type="c_include">
        <files mask="portmacro.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/IAR/ARM_CM33_NTZ" type="asm_include">
        <files mask="portasm.s"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/IAR/ARM_CM33_NTZ" type="c_include">
        <files mask="portmacro.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure" type="c_include">
        <files mask="portasm.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/context/portable/GCC/ARM_CM33" type="src">
        <files mask="secure_context_port.c"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/context/portable/IAR/ARM_CM33" type="src">
        <files mask="secure_context_port.c"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/context/portable/IAR/ARM_CM33" type="asm_include">
        <files mask="secure_context_port_asm.s"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/context" type="src">
        <files mask="secure_context.c"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/context" type="c_include">
        <files mask="secure_context.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/heap" type="src">
        <files mask="secure_heap.c"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/heap" type="c_include">
        <files mask="secure_heap.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/init" type="src">
        <files mask="secure_init.c"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/init" type="c_include">
        <files mask="secure_init.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/macros" type="c_include">
        <files mask="secure_port_macros.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <include_paths>
        <include_path relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/GCC/ARM_CM33" type="c_include"/>
        <include_path relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/GCC/ARM_CM33_NTZ" type="c_include"/>
        <include_path relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/IAR/ARM_CM33" type="c_include"/>
        <include_path relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/IAR/ARM_CM33_NTZ" type="c_include"/>
        <include_path relative_path="freertos_kernel/portable/ARMv8M/non_secure" type="c_include"/>
        <include_path relative_path="freertos_kernel/portable/ARMv8M/secure/context" type="c_include"/>
        <include_path relative_path="freertos_kernel/portable/ARMv8M/secure/heap" type="c_include"/>
        <include_path relative_path="freertos_kernel/portable/ARMv8M/secure/init" type="c_include"/>
        <include_path relative_path="freertos_kernel/portable/ARMv8M/secure/macros" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.doc.K32L3A60" name="FreeRTOS doc" brief="FreeRTOS doc" version="202007.00.0" full_name="FreeRTOS doc" devices="K32L3A60xxx" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="doc" type="doc">
        <files mask="AFQ Developer Guide - Board Qualification Errata.pdf"/>
        <files mask="Amazon FreeRTOS Qualification Developer Guide.pdf"/>
        <files mask="mainpage.txt"/>
      </source>
      <source relative_path="doc/config" type="other">
        <files mask="ble"/>
        <files mask="common"/>
        <files mask="https"/>
        <files mask="main"/>
        <files mask="ota"/>
        <files mask="platform"/>
        <files mask="posix"/>
        <files mask="pkcs11"/>
        <files mask="secure_sockets"/>
        <files mask="wifi"/>
      </source>
      <source relative_path="doc/config/html" type="doc">
        <files mask="footer.html"/>
        <files mask="header.html"/>
        <files mask="style.css"/>
      </source>
      <source relative_path="doc/config" type="xml">
        <files mask="layout_library.xml"/>
        <files mask="layout_main.xml"/>
      </source>
      <source relative_path="doc/freertos_port_qual" type="doc">
        <files mask="FreeRTOS_Porting_Guide.pdf"/>
        <files mask="FreeRTOS_Qualification_Guide.pdf"/>
      </source>
      <source relative_path="doc" type="other">
        <files mask="guidance.md"/>
        <files mask="README.md"/>
      </source>
      <source relative_path="doc/guide" type="doc">
        <files mask="building.txt"/>
        <files mask="developer.txt"/>
        <files mask="style.txt"/>
      </source>
      <source relative_path="doc/lib" type="doc">
        <files mask="ble.txt"/>
        <files mask="https.txt"/>
        <files mask="platform.txt"/>
        <files mask="pkcs11.txt"/>
        <files mask="secure_sockets.txt"/>
        <files mask="wifi.txt"/>
        <files mask="posix.txt"/>
      </source>
      <source relative_path="doc/plantuml/images" type="image">
        <files mask="BLE-architecture.png"/>
        <files mask="blediagram.png"/>
        <files mask="mqtt_demo.png"/>
        <files mask="mqtt_design_typicaloperation.png"/>
        <files mask="RecyclableJobStatus.png"/>
        <files mask="StaticJobStatus.png"/>
        <files mask="taskpool_design_typicaloperation.png"/>
        <files mask="https_client_async_callback_order.png"/>
        <files mask="https_client_async_workflow.png"/>
        <files mask="https_client_sync_workflow.png"/>
        <files mask="shadow_demo.png"/>
      </source>
      <source relative_path="doc/plantuml" type="other">
        <files mask="RecyclableJobStatus.pu"/>
        <files mask="StaticJobStatus.pu"/>
        <files mask="taskpool_design_typicaloperation.pu"/>
        <files mask="https_client_async_callback_order.pu"/>
      </source>
      <source relative_path="doc/plantuml" type="xml">
        <files mask="https_client_async_workflow.xml"/>
        <files mask="https_client_sync_workflow.xml"/>
      </source>
      <source relative_path="doc/user_guide" type="doc">
        <files mask="global_config.txt"/>
      </source>
      <source relative_path="doc/extra_files/https" type="doc">
        <files mask="gettysburg.txt"/>
      </source>
      <source relative_path="doc" type="script">
        <files mask="generate_doc.sh"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.extension.K32L3A60" name="FreeRTOS NXP extension" brief="FreeRTOS NXP extension" version="202007.00.0" full_name="FreeRTOS NXP extension" devices="K32L3A60xxx" category="Operating System/FreeRTOS kernel extensions" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="freertos_kernel/include" type="c_include">
        <files mask="freertos_tasks_c_additions.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="middleware_freertos-kernel_extension_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="middleware_freertos-kernel_extension_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="freertos_kernel/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.heap_1.K32L3A60" name="FreeRTOS heap 1" brief="FreeRTOS heap 1" version="202007.00.0" full_name="FreeRTOS heap 1" devices="K32L3A60xxx" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.K32L3A60"/>
      </dependencies>
      <source relative_path="freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_1.c"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_2.K32L3A60" name="FreeRTOS heap 2" brief="FreeRTOS heap 2" version="202007.00.0" full_name="FreeRTOS heap 2" devices="K32L3A60xxx" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.K32L3A60"/>
      </dependencies>
      <source relative_path="freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_2.c"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_3.K32L3A60" name="FreeRTOS heap 3" brief="FreeRTOS heap 3" version="202007.00.0" full_name="FreeRTOS heap_3" devices="K32L3A60xxx" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.K32L3A60"/>
      </dependencies>
      <source relative_path="freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_3.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="middleware_freertos-kernel_heap_3_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="middleware_freertos-kernel_heap_3_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_4.K32L3A60" name="FreeRTOS heap 4" brief="FreeRTOS heap 4" version="202007.00.0" full_name="FreeRTOS heap 4" devices="K32L3A60xxx" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.K32L3A60"/>
      </dependencies>
      <source relative_path="freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_4.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="middleware_freertos-kernel_heap_4_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="middleware_freertos-kernel_heap_4_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_5.K32L3A60" name="FreeRTOS heap 5" brief="FreeRTOS heap 5" version="202007.00.0" full_name="FreeRTOS heap 5" devices="K32L3A60xxx" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.K32L3A60"/>
      </dependencies>
      <source relative_path="freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_5.c"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_newlib.K32L3A60" name="FreeRTOS heap newlib" brief="FreeRTOS heap newlib" version="202007.00.0" full_name="FreeRTOS heap newlib" devices="K32L3A60xxx" category="Operating System/FreeRTOS kernel extensions" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.K32L3A60"/>
      </dependencies>
      <source relative_path="freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_useNewlib.c"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.mpu_wrappers.K32L3A60" name="FreeRTOS MPU wrappers" brief="FreeRTOS MPU wrappers" version="202007.00.0" full_name="FreeRTOS MPU wrappers" devices="K32L3A60xxx" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.K32L3A60"/>
      </dependencies>
      <source relative_path="freertos_kernel/portable/Common" type="src">
        <files mask="mpu_wrappers.c"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.root_doc.K32L3A60" name="Root FreeRTOS documents." brief="FreeRTOS root documents" version="202007.00.0" full_name="FreeRTOS root documents" devices="K32L3A60xxx" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="./" type="other">
        <files mask="CHANGELOG.md"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="directories.txt"/>
        <files mask="ChangeLogKSDK.txt"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.template.K32L3A60" name="FreeRTOS configuration template" brief="Template configuration file to be edited by user. Provides also memory allocator (heap_x), change variant if needed." version="202007.00.0" full_name="FreeRTOS configuration template" devices="K32L3A60xxx" category="Operating System/FreeRTOS kernel" user_visible="false" type="project_template" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="template/ARM_CM0" type="c_include" device_cores="cm0plus_K32L3A60xxx">
        <files mask="FreeRTOSConfig.h"/>
      </source>
      <source relative_path="template/ARM_CM4F" type="c_include" device_cores="cm4_K32L3A60xxx">
        <files mask="FreeRTOSConfig.h"/>
      </source>
      <source exclude="true" relative_path="freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_1.c"/>
        <files mask="heap_2.c"/>
        <files mask="heap_3.c"/>
        <files mask="heap_5.c"/>
        <files mask="heap_useNewlib.c"/>
      </source>
      <source relative_path="freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_4.c"/>
      </source>
      <include_paths>
        <include_path relative_path="template/ARM_CM0" type="c_include" device_cores="cm0plus_K32L3A60xxx"/>
        <include_path relative_path="template/ARM_CM4F" type="c_include" device_cores="cm4_K32L3A60xxx"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.unused.K32L3A60" name="FreeRTOS unused" brief="FreeRTOS unused" version="202007.00.0" full_name="FreeRTOS unused" devices="K32L3A60xxx" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="./" type="other">
        <files mask="LICENSE"/>
        <files mask="README.md"/>
      </source>
      <source relative_path="./" type="script">
        <files mask="PreLoad.cmake"/>
      </source>
      <source relative_path="freertos_kernel" type="doc">
        <files mask="History.txt"/>
        <files mask="readme.txt"/>
      </source>
      <source relative_path="freertos_kernel" type="other">
        <files mask="Quick_Start_Guide.url"/>
      </source>
      <source relative_path="freertos_kernel/include" type="doc">
        <files mask="stdint.readme"/>
      </source>
      <source relative_path="freertos_kernel/License" type="doc">
        <files mask="license.txt"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMClang" type="doc">
        <files mask="Use-the-GCC-ports.txt"/>
      </source>
    </component>
    <component id="middleware.mbedtls.K32L3A60" name="mbedtls" brief="mbedTLS library" version="2.16.6" full_name="MbedTLS open source SSL library" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="Security/mbedTLS library" user_visible="true" type="middleware" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <dependencies>
        <all>
          <component_dependency value="middleware.mbedtls.template.K32L3A60"/>
          <component_dependency value="utility.debug_console.K32L3A60"/>
          <any_of>
            <component_dependency value="middleware.mbedtls.port.ksdk.K32L3A60"/>
            <component_dependency value="middleware.mbedtls.port.sssapi.K32L3A60"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="include/mbedtls" type="c_include">
        <files mask="aes.h"/>
        <files mask="aesni.h"/>
        <files mask="arc4.h"/>
        <files mask="aria.h"/>
        <files mask="asn1.h"/>
        <files mask="asn1write.h"/>
        <files mask="base64.h"/>
        <files mask="bignum.h"/>
        <files mask="blowfish.h"/>
        <files mask="bn_mul.h"/>
        <files mask="camellia.h"/>
        <files mask="ccm.h"/>
        <files mask="certs.h"/>
        <files mask="chacha20.h"/>
        <files mask="chachapoly.h"/>
        <files mask="check_config.h"/>
        <files mask="cipher.h"/>
        <files mask="cipher_internal.h"/>
        <files mask="cmac.h"/>
        <files mask="compat-1.3.h"/>
        <files mask="config.h"/>
        <files mask="ctr_drbg.h"/>
        <files mask="debug.h"/>
        <files mask="des.h"/>
        <files mask="dhm.h"/>
        <files mask="ecdh.h"/>
        <files mask="ecdsa.h"/>
        <files mask="ecjpake.h"/>
        <files mask="ecp.h"/>
        <files mask="ecp_internal.h"/>
        <files mask="entropy.h"/>
        <files mask="entropy_poll.h"/>
        <files mask="error.h"/>
        <files mask="gcm.h"/>
        <files mask="havege.h"/>
        <files mask="hkdf.h"/>
        <files mask="hmac_drbg.h"/>
        <files mask="md.h"/>
        <files mask="md_internal.h"/>
        <files mask="md2.h"/>
        <files mask="md4.h"/>
        <files mask="md5.h"/>
        <files mask="memory_buffer_alloc.h"/>
        <files mask="net.h"/>
        <files mask="net_sockets.h"/>
        <files mask="nist_kw.h"/>
        <files mask="oid.h"/>
        <files mask="padlock.h"/>
        <files mask="pem.h"/>
        <files mask="pk.h"/>
        <files mask="pk_internal.h"/>
        <files mask="pkcs5.h"/>
        <files mask="pkcs11.h"/>
        <files mask="pkcs12.h"/>
        <files mask="platform.h"/>
        <files mask="platform_time.h"/>
        <files mask="platform_util.h"/>
        <files mask="poly1305.h"/>
        <files mask="ripemd160.h"/>
        <files mask="rsa.h"/>
        <files mask="rsa_internal.h"/>
        <files mask="sha1.h"/>
        <files mask="sha256.h"/>
        <files mask="sha512.h"/>
        <files mask="ssl.h"/>
        <files mask="ssl_cache.h"/>
        <files mask="ssl_ciphersuites.h"/>
        <files mask="ssl_cookie.h"/>
        <files mask="ssl_internal.h"/>
        <files mask="ssl_ticket.h"/>
        <files mask="threading.h"/>
        <files mask="timing.h"/>
        <files mask="version.h"/>
        <files mask="x509.h"/>
        <files mask="x509_crl.h"/>
        <files mask="x509_crt.h"/>
        <files mask="x509_csr.h"/>
        <files mask="xtea.h"/>
      </source>
      <source relative_path="library" type="src">
        <files mask="aes.c"/>
        <files mask="aesni.c"/>
        <files mask="arc4.c"/>
        <files mask="aria.c"/>
        <files mask="asn1parse.c"/>
        <files mask="asn1write.c"/>
        <files mask="base64.c"/>
        <files mask="bignum.c"/>
        <files mask="blowfish.c"/>
        <files mask="camellia.c"/>
        <files mask="ccm.c"/>
        <files mask="certs.c"/>
        <files mask="cipher.c"/>
        <files mask="cipher_wrap.c"/>
        <files mask="chacha20.c"/>
        <files mask="chachapoly.c"/>
        <files mask="cmac.c"/>
        <files mask="ctr_drbg.c"/>
        <files mask="debug.c"/>
        <files mask="des.c"/>
        <files mask="dhm.c"/>
        <files mask="ecdh.c"/>
        <files mask="ecdsa.c"/>
        <files mask="ecjpake.c"/>
        <files mask="ecp.c"/>
        <files mask="ecp_curves.c"/>
        <files mask="entropy.c"/>
        <files mask="entropy_poll.c"/>
        <files mask="error.c"/>
        <files mask="gcm.c"/>
        <files mask="havege.c"/>
        <files mask="hkdf.c"/>
        <files mask="hmac_drbg.c"/>
        <files mask="md.c"/>
        <files mask="md_wrap.c"/>
        <files mask="md2.c"/>
        <files mask="md4.c"/>
        <files mask="md5.c"/>
        <files mask="memory_buffer_alloc.c"/>
        <files mask="net_sockets.c"/>
        <files mask="nist_kw.c"/>
        <files mask="oid.c"/>
        <files mask="padlock.c"/>
        <files mask="pem.c"/>
        <files mask="pk.c"/>
        <files mask="pk_wrap.c"/>
        <files mask="pkcs5.c"/>
        <files mask="pkcs11.c"/>
        <files mask="pkcs12.c"/>
        <files mask="pkparse.c"/>
        <files mask="pkwrite.c"/>
        <files mask="platform.c"/>
        <files mask="platform_util.c"/>
        <files mask="poly1305.c"/>
        <files mask="ripemd160.c"/>
        <files mask="rsa.c"/>
        <files mask="rsa_internal.c"/>
        <files mask="sha1.c"/>
        <files mask="sha256.c"/>
        <files mask="sha512.c"/>
        <files mask="ssl_cache.c"/>
        <files mask="ssl_ciphersuites.c"/>
        <files mask="ssl_cli.c"/>
        <files mask="ssl_cookie.c"/>
        <files mask="ssl_srv.c"/>
        <files mask="ssl_ticket.c"/>
        <files mask="ssl_tls.c"/>
        <files mask="threading.c"/>
        <files mask="timing.c"/>
        <files mask="version.c"/>
        <files mask="version_features.c"/>
        <files mask="x509.c"/>
        <files mask="x509_create.c"/>
        <files mask="x509_crl.c"/>
        <files mask="x509_crt.c"/>
        <files mask="x509_csr.c"/>
        <files mask="x509write_crt.c"/>
        <files mask="x509write_csr.c"/>
        <files mask="xtea.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="middleware_mbedtls_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="middleware_mbedtls_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="library" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls.kinetis3.K32L3A60" name="mbedtls_kinetis" brief="On-chip Kinetis Crypto accelerator" version="2.16.6" full_name="MbedTLS Adaptation for On-chip Kinetis Crypto accelerator" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="Security/mbedTLS library" user_visible="true" type="middleware" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <dependencies>
        <all>
          <component_dependency value="middleware.mbedtls.K32L3A60"/>
          <component_dependency value="middleware.mbedtls.port.ksdk.K32L3A60"/>
          <component_dependency value="platform.drivers.cau3.K32L3A60"/>
          <component_dependency value="platform.drivers.trng.K32L3A60"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="middleware_mbedtls_kinetis3_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="middleware_mbedtls_kinetis3_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.mbedtls.port.ksdk.K32L3A60" name="mbedtls_ksdk" brief="mbedTLS port library for KPSDK" version="2.16.6" full_name="MbedTLS MCUX SDK port layer" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="Security/mbedTLS library" user_visible="true" type="middleware" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <dependencies>
        <component_dependency value="middleware.mbedtls.kinetis3.K32L3A60"/>
      </dependencies>
      <source relative_path="port/ksdk" type="src">
        <files mask="ksdk_mbedtls.c"/>
        <files mask="des_alt.c"/>
        <files mask="aes_alt.c"/>
        <files mask="ecp_alt.c"/>
        <files mask="ecp_curves_alt.c"/>
        <files mask="ecp_alt_ksdk.c"/>
      </source>
      <source relative_path="port/ksdk" type="c_include">
        <files mask="ksdk_mbedtls.h"/>
        <files mask="ksdk_mbedtls_config.h"/>
        <files mask="sha1_alt.h"/>
        <files mask="sha256_alt.h"/>
        <files mask="des_alt.h"/>
        <files mask="aes_alt.h"/>
        <files mask="ecp_alt.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="middleware_mbedtls_port_ksdk_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="middleware_mbedtls_port_ksdk_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/ksdk" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls.port.sssapi.K32L3A60" name="mbedtls_sssapi" brief="mbedTLS port library for SSSAPI" version="2.16.6" full_name="MbedTLS MCUX SDK port layer via SSSAPI" devices="K32L3A60xxx" category="Security/mbedTLS library" user_visible="true" type="middleware" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <source relative_path="port/sssapi" type="src">
        <files mask="sssapi_mbedtls.c"/>
        <files mask="ccm_alt.c"/>
        <files mask="cmac_alt.c"/>
        <files mask="sha256_alt.c"/>
        <files mask="sha512_alt.c"/>
        <files mask="ecdh_alt.c"/>
        <files mask="ecdsa_alt.c"/>
        <files mask="entropy_poll_alt.c"/>
      </source>
      <source relative_path="port/sssapi" type="c_include">
        <files mask="sssapi_mbedtls.h"/>
        <files mask="sssapi_mbedtls_config.h"/>
        <files mask="ccm_alt.h"/>
        <files mask="cmac_alt.h"/>
        <files mask="sha256_alt.h"/>
        <files mask="sha512_alt.h"/>
        <files mask="ecdh_alt.h"/>
        <files mask="ecdsa_alt.h"/>
      </source>
      <include_paths>
        <include_path relative_path="port/sssapi" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls.template.K32L3A60" name="mbedtls_template" brief="mbedTLS Template" version="2.16.6" full_name="mbedTLS Template" devices="K32L3A60xxx" user_visible="false" type="project_template" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <defines>
        <define name="MBEDTLS_CONFIG_FILE" value="'&quot;ksdk_mbedtls_config.h&quot;'"/>
      </defines>
      <source relative_path="port/ksdk" type="c_include">
        <files mask="ksdk_mbedtls_config.h"/>
      </source>
      <include_paths>
        <include_path relative_path="port/ksdk" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls.unused_files.K32L3A60" name="unused_files" brief="mbedTLS files unused by projects" version="2.16.6" full_name="MbedTLS unused files" devices="K32L3A60xxx" user_visible="false" type="other" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <source exclude="true" relative_path="configs" type="c_include">
        <files mask="config-mini-tls1_1.h" hidden="true"/>
        <files mask="config-ccm-psk-tls1_2.h" hidden="true"/>
        <files mask="config-no-entropy.h" hidden="true"/>
        <files mask="config-suite-b.h" hidden="true"/>
        <files mask="config-thread.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="configs" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="doxygen" type="other">
        <files mask="mbedtls.doxyfile" hidden="true"/>
      </source>
      <source exclude="true" relative_path="doxygen/input" type="c_include">
        <files mask="doc_rng.h" hidden="true"/>
        <files mask="doc_hashing.h" hidden="true"/>
        <files mask="doc_mainpage.h" hidden="true"/>
        <files mask="doc_x509.h" hidden="true"/>
        <files mask="doc_tcpip.h" hidden="true"/>
        <files mask="doc_ssltls.h" hidden="true"/>
        <files mask="doc_encdec.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="include" type="other">
        <files mask=".gitignore" hidden="true"/>
      </source>
      <source exclude="true" relative_path="include" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="library" type="other">
        <files mask=".gitignore" hidden="true"/>
        <files mask="Makefile" hidden="true"/>
      </source>
      <source exclude="true" relative_path="library" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs" type="other">
        <files mask="Makefile" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/aes" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/aes" type="src">
        <files mask="aescrypt2.c" hidden="true"/>
        <files mask="crypt_and_hash.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/hash" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/hash" type="src">
        <files mask="generic_sum.c" hidden="true"/>
        <files mask="hello.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/pkey" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
        <files mask="dh_prime.txt" hidden="true"/>
        <files mask="rsa_priv.txt" hidden="true"/>
        <files mask="rsa_pub.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/pkey" type="src">
        <files mask="pk_sign.c" hidden="true"/>
        <files mask="ecdh_curve25519.c" hidden="true"/>
        <files mask="rsa_genkey.c" hidden="true"/>
        <files mask="mpi_demo.c" hidden="true"/>
        <files mask="dh_server.c" hidden="true"/>
        <files mask="pk_decrypt.c" hidden="true"/>
        <files mask="rsa_verify.c" hidden="true"/>
        <files mask="gen_key.c" hidden="true"/>
        <files mask="rsa_verify_pss.c" hidden="true"/>
        <files mask="dh_client.c" hidden="true"/>
        <files mask="rsa_sign.c" hidden="true"/>
        <files mask="pk_encrypt.c" hidden="true"/>
        <files mask="rsa_decrypt.c" hidden="true"/>
        <files mask="ecdsa.c" hidden="true"/>
        <files mask="key_app.c" hidden="true"/>
        <files mask="pk_verify.c" hidden="true"/>
        <files mask="dh_genprime.c" hidden="true"/>
        <files mask="rsa_encrypt.c" hidden="true"/>
        <files mask="key_app_writer.c" hidden="true"/>
        <files mask="rsa_sign_pss.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/random" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/random" type="src">
        <files mask="gen_random_ctr_drbg.c" hidden="true"/>
        <files mask="gen_entropy.c" hidden="true"/>
        <files mask="gen_random_havege.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/ssl" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/ssl" type="src">
        <files mask="ssl_client1.c" hidden="true"/>
        <files mask="ssl_server.c" hidden="true"/>
        <files mask="ssl_pthread_server.c" hidden="true"/>
        <files mask="ssl_server2.c" hidden="true"/>
        <files mask="ssl_fork_server.c" hidden="true"/>
        <files mask="ssl_mail_client.c" hidden="true"/>
        <files mask="dtls_server.c" hidden="true"/>
        <files mask="query_config.c" hidden="true"/>
        <files mask="mini_client.c" hidden="true"/>
        <files mask="dtls_client.c" hidden="true"/>
        <files mask="ssl_client2.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/test" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/test" type="src">
        <files mask="selftest.c" hidden="true"/>
        <files mask="udp_proxy.c" hidden="true"/>
        <files mask="benchmark.c" hidden="true"/>
        <files mask="cpp_dummy_build.cpp" hidden="true"/>
        <files mask="query_compile_time_config.c" hidden="true"/>
        <files mask="zeroize.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/test" type="script">
        <files mask="udp_proxy_wrapper.sh" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/util" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/util" type="src">
        <files mask="strerror.c" hidden="true"/>
        <files mask="pem2der.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/x509" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/x509" type="src">
        <files mask="crl_app.c" hidden="true"/>
        <files mask="cert_req.c" hidden="true"/>
        <files mask="cert_app.c" hidden="true"/>
        <files mask="req_app.c" hidden="true"/>
        <files mask="cert_write.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="scripts" type="other">
        <files mask="generate_features.pl" hidden="true"/>
        <files mask="find-mem-leak.cocci" hidden="true"/>
        <files mask="rm-calloc-cast.cocci" hidden="true"/>
        <files mask="generate_query_config.pl" hidden="true"/>
        <files mask="generate_errors.pl" hidden="true"/>
        <files mask="generate_visualc_files.pl" hidden="true"/>
        <files mask="rename.pl" hidden="true"/>
        <files mask="config.pl" hidden="true"/>
        <files mask="massif_max.pl" hidden="true"/>
      </source>
      <source exclude="true" relative_path="scripts" type="script">
        <files mask="memory.sh" hidden="true"/>
        <files mask="apidoc_full.sh" hidden="true"/>
        <files mask="output_env.sh" hidden="true"/>
        <files mask="tmp_ignore_makefiles.sh" hidden="true"/>
        <files mask="abi_check.py" hidden="true"/>
        <files mask="footprint.sh" hidden="true"/>
        <files mask="bump_version.sh" hidden="true"/>
        <files mask="ecc-heap.sh" hidden="true"/>
      </source>
      <source exclude="true" relative_path="scripts/data_files" type="other">
        <files mask="vs2010-sln-template.sln" hidden="true"/>
        <files mask="version_features.fmt" hidden="true"/>
        <files mask="vs2010-main-template.vcxproj" hidden="true"/>
        <files mask="query_config.fmt" hidden="true"/>
        <files mask="vs2010-app-template.vcxproj" hidden="true"/>
        <files mask="error.fmt" hidden="true"/>
        <files mask="vs6-workspace-template.dsw" hidden="true"/>
        <files mask="vs6-app-template.dsp" hidden="true"/>
        <files mask="vs6-main-template.dsp" hidden="true"/>
      </source>
      <source exclude="true" relative_path="scripts/data_files" type="doc">
        <files mask="rename-1.3-2.0.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tests" type="other">
        <files mask="Makefile" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tests/data_files" type="other">
        <files mask="hash_file_2" hidden="true"/>
        <files mask="hash_file_5" hidden="true"/>
        <files mask="mpi_too_big" hidden="true"/>
        <files mask="hash_file_4" hidden="true"/>
        <files mask="hash_file_1" hidden="true"/>
        <files mask="hash_file_3" hidden="true"/>
        <files mask="mpi_10" hidden="true"/>
        <files mask="Makefile" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tests/data_files/dir3" type="other">
        <files mask="Readme" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tests/data_files/dir4" type="other">
        <files mask="Readme" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tests/scripts" type="other">
        <files mask="gen_gcm_encrypt.pl" hidden="true"/>
        <files mask="run-test-suites.pl" hidden="true"/>
        <files mask="curves.pl" hidden="true"/>
        <files mask="gen_pkcs1_v21_sign_verify.pl" hidden="true"/>
        <files mask="tcp_client.pl" hidden="true"/>
        <files mask="key-exchanges.pl" hidden="true"/>
        <files mask="test_zeroize.gdb" hidden="true"/>
        <files mask="recursion.pl" hidden="true"/>
        <files mask="depends-pkalgs.pl" hidden="true"/>
        <files mask="test-ref-configs.pl" hidden="true"/>
        <files mask="gen_gcm_decrypt.pl" hidden="true"/>
        <files mask="depends-hashes.pl" hidden="true"/>
        <files mask="gen_ctr_drbg.pl" hidden="true"/>
        <files mask="list-enum-consts.pl" hidden="true"/>
        <files mask="check-doxy-blocks.pl" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tests/scripts" type="script">
        <files mask="travis-log-failure.sh" hidden="true"/>
        <files mask="generate_test_code.py" hidden="true"/>
        <files mask="check-python-files.sh" hidden="true"/>
        <files mask="generate-afl-tests.sh" hidden="true"/>
        <files mask="test_generate_test_code.py" hidden="true"/>
        <files mask="list-macros.sh" hidden="true"/>
        <files mask="doxygen.sh" hidden="true"/>
        <files mask="all.sh" hidden="true"/>
        <files mask="list-symbols.sh" hidden="true"/>
        <files mask="list-identifiers.sh" hidden="true"/>
        <files mask="check-generated-files.sh" hidden="true"/>
        <files mask="check-names.sh" hidden="true"/>
        <files mask="check-files.py" hidden="true"/>
        <files mask="mbedtls_test.py" hidden="true"/>
        <files mask="basic-build-test.sh" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tests/suites" type="other">
        <files mask="test_suite_cipher.padding.data" hidden="true"/>
        <files mask="test_suite_aes.cbc.data" hidden="true"/>
        <files mask="test_suite_gcm.camellia.data" hidden="true"/>
        <files mask="test_suite_error.data" hidden="true"/>
        <files mask="test_suite_chachapoly.function" hidden="true"/>
        <files mask="test_suite_gcm.function" hidden="true"/>
        <files mask="test_suite_cipher.function" hidden="true"/>
        <files mask="test_suite_cipher.ccm.data" hidden="true"/>
        <files mask="test_suite_pkcs1_v15.function" hidden="true"/>
        <files mask="test_suite_des.data" hidden="true"/>
        <files mask="test_suite_ccm.function" hidden="true"/>
        <files mask="host_test.function" hidden="true"/>
        <files mask="test_suite_aes.function" hidden="true"/>
        <files mask="test_suite_dhm.function" hidden="true"/>
        <files mask="test_suite_pkcs5.function" hidden="true"/>
        <files mask="test_suite_md.data" hidden="true"/>
        <files mask="test_suite_mdx.data" hidden="true"/>
        <files mask="test_suite_timing.function" hidden="true"/>
        <files mask="test_suite_ccm.data" hidden="true"/>
        <files mask="test_suite_aria.data" hidden="true"/>
        <files mask="test_suite_cipher.gcm.data" hidden="true"/>
        <files mask="test_suite_asn1write.function" hidden="true"/>
        <files mask="test_suite_md.function" hidden="true"/>
        <files mask="test_suite_pk.function" hidden="true"/>
        <files mask="test_suite_ecp.data" hidden="true"/>
        <files mask="test_suite_mdx.function" hidden="true"/>
        <files mask="test_suite_all.function" hidden="true"/>
        <files mask="test_suite_hmac_drbg.no_reseed.data" hidden="true"/>
        <files mask="test_suite_debug.data" hidden="true"/>
        <files mask="test_suite_version.data" hidden="true"/>
        <files mask="test_suite_cipher.blowfish.data" hidden="true"/>
        <files mask="test_suite_hmac_drbg.function" hidden="true"/>
        <files mask="test_suite_cipher.arc4.data" hidden="true"/>
        <files mask="target_test.function" hidden="true"/>
        <files mask="test_suite_blowfish.data" hidden="true"/>
        <files mask="test_suite_x509parse.data" hidden="true"/>
        <files mask="test_suite_x509parse.function" hidden="true"/>
        <files mask="test_suite_aes.ofb.data" hidden="true"/>
        <files mask="test_suite_gcm.aes256_de.data" hidden="true"/>
        <files mask="test_suite_gcm.aes128_en.data" hidden="true"/>
        <files mask="test_suite_nist_kw.data" hidden="true"/>
        <files mask="test_suite_entropy.data" hidden="true"/>
        <files mask="test_suite_chacha20.data" hidden="true"/>
        <files mask="test_suite_ctr_drbg.function" hidden="true"/>
        <files mask="test_suite_base64.function" hidden="true"/>
        <files mask="test_suite_pkwrite.data" hidden="true"/>
        <files mask="test_suite_all.data" hidden="true"/>
        <files mask="test_suite_cipher.des.data" hidden="true"/>
        <files mask="test_suite_pk.data" hidden="true"/>
        <files mask="test_suite_camellia.data" hidden="true"/>
        <files mask="test_suite_shax.data" hidden="true"/>
        <files mask="test_suite_ecjpake.data" hidden="true"/>
        <files mask="test_suite_chacha20.function" hidden="true"/>
        <files mask="test_suite_hmac_drbg.misc.data" hidden="true"/>
        <files mask="test_suite_pkcs1_v21.function" hidden="true"/>
        <files mask="test_suite_rsa.data" hidden="true"/>
        <files mask="test_suite_pkwrite.function" hidden="true"/>
        <files mask="test_suite_ecdh.function" hidden="true"/>
        <files mask="test_suite_pkcs5.data" hidden="true"/>
        <files mask="test_suite_pem.function" hidden="true"/>
        <files mask="test_suite_gcm.aes192_en.data" hidden="true"/>
        <files mask="test_suite_base64.data" hidden="true"/>
        <files mask="test_suite_chachapoly.data" hidden="true"/>
        <files mask="test_suite_aria.function" hidden="true"/>
        <files mask="test_suite_x509write.data" hidden="true"/>
        <files mask="test_suite_shax.function" hidden="true"/>
        <files mask="test_suite_aes.cfb.data" hidden="true"/>
        <files mask="test_suite_nist_kw.function" hidden="true"/>
        <files mask="test_suite_cmac.function" hidden="true"/>
        <files mask="test_suite_ecp.function" hidden="true"/>
        <files mask="test_suite_gcm.aes192_de.data" hidden="true"/>
        <files mask="test_suite_arc4.function" hidden="true"/>
        <files mask="test_suite_mpi.function" hidden="true"/>
        <files mask="test_suite_gcm.aes256_en.data" hidden="true"/>
        <files mask="test_suite_entropy.function" hidden="true"/>
        <files mask="test_suite_ecdsa.function" hidden="true"/>
        <files mask="test_suite_aes.xts.data" hidden="true"/>
        <files mask="test_suite_aes.rest.data" hidden="true"/>
        <files mask="test_suite_gcm.aes128_de.data" hidden="true"/>
        <files mask="test_suite_gcm.misc.data" hidden="true"/>
        <files mask="test_suite_xtea.data" hidden="true"/>
        <files mask="test_suite_hkdf.data" hidden="true"/>
        <files mask="test_suite_pkparse.function" hidden="true"/>
        <files mask="test_suite_cipher.camellia.data" hidden="true"/>
        <files mask="test_suite_ctr_drbg.data" hidden="true"/>
        <files mask="test_suite_hkdf.function" hidden="true"/>
        <files mask="test_suite_timing.data" hidden="true"/>
        <files mask="test_suite_ecjpake.function" hidden="true"/>
        <files mask="test_suite_pkcs1_v15.data" hidden="true"/>
        <files mask="test_suite_pkcs1_v21.data" hidden="true"/>
        <files mask="test_suite_cipher.null.data" hidden="true"/>
        <files mask="main_test.function" hidden="true"/>
        <files mask="test_suite_des.function" hidden="true"/>
        <files mask="test_suite_cipher.chachapoly.data" hidden="true"/>
        <files mask="helpers.function" hidden="true"/>
        <files mask="test_suite_aes.ecb.data" hidden="true"/>
        <files mask="test_suite_poly1305.data" hidden="true"/>
        <files mask="test_suite_poly1305.function" hidden="true"/>
        <files mask="test_suite_cipher.aes.data" hidden="true"/>
        <files mask="test_suite_cmac.data" hidden="true"/>
        <files mask="test_suite_pem.data" hidden="true"/>
        <files mask="test_suite_ssl.data" hidden="true"/>
        <files mask="test_suite_xtea.function" hidden="true"/>
        <files mask="test_suite_mpi.data" hidden="true"/>
        <files mask="test_suite_blowfish.function" hidden="true"/>
        <files mask="test_suite_camellia.function" hidden="true"/>
        <files mask="test_suite_memory_buffer_alloc.function" hidden="true"/>
        <files mask="test_suite_hmac_drbg.nopr.data" hidden="true"/>
        <files mask="test_suite_hmac_drbg.pr.data" hidden="true"/>
        <files mask="test_suite_asn1write.data" hidden="true"/>
        <files mask="test_suite_arc4.data" hidden="true"/>
        <files mask="test_suite_error.function" hidden="true"/>
        <files mask="test_suite_dhm.data" hidden="true"/>
        <files mask="test_suite_version.function" hidden="true"/>
        <files mask="test_suite_pkparse.data" hidden="true"/>
        <files mask="test_suite_cipher.misc.data" hidden="true"/>
        <files mask="test_suite_debug.function" hidden="true"/>
        <files mask="test_suite_ssl.function" hidden="true"/>
        <files mask="test_suite_rsa.function" hidden="true"/>
        <files mask="test_suite_memory_buffer_alloc.data" hidden="true"/>
        <files mask="test_suite_ecdh.data" hidden="true"/>
        <files mask="test_suite_ecdsa.data" hidden="true"/>
        <files mask="test_suite_x509write.function" hidden="true"/>
        <files mask="test_suite_cipher.chacha20.data" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tests/git-scripts" type="other">
        <files mask="README.md" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tests/git-scripts" type="script">
        <files mask="pre-push.sh" hidden="true"/>
      </source>
      <source exclude="true" relative_path="visualc/VS2010" type="other">
        <files mask="gen_random_havege.vcxproj" hidden="true"/>
        <files mask="dh_genprime.vcxproj" hidden="true"/>
        <files mask="cert_app.vcxproj" hidden="true"/>
        <files mask="dh_server.vcxproj" hidden="true"/>
        <files mask="generic_sum.vcxproj" hidden="true"/>
        <files mask="ssl_mail_client.vcxproj" hidden="true"/>
        <files mask="pk_encrypt.vcxproj" hidden="true"/>
        <files mask="cert_write.vcxproj" hidden="true"/>
        <files mask="ecdh_curve25519.vcxproj" hidden="true"/>
        <files mask="cert_req.vcxproj" hidden="true"/>
        <files mask="gen_key.vcxproj" hidden="true"/>
        <files mask="rsa_encrypt.vcxproj" hidden="true"/>
        <files mask="key_app.vcxproj" hidden="true"/>
        <files mask="key_app_writer.vcxproj" hidden="true"/>
        <files mask="ssl_server2.vcxproj" hidden="true"/>
        <files mask="rsa_verify_pss.vcxproj" hidden="true"/>
        <files mask="udp_proxy.vcxproj" hidden="true"/>
        <files mask="rsa_sign.vcxproj" hidden="true"/>
        <files mask="strerror.vcxproj" hidden="true"/>
        <files mask="zeroize.vcxproj" hidden="true"/>
        <files mask="dh_client.vcxproj" hidden="true"/>
        <files mask="mbedTLS.sln" hidden="true"/>
        <files mask="ssl_client1.vcxproj" hidden="true"/>
        <files mask="pem2der.vcxproj" hidden="true"/>
        <files mask="selftest.vcxproj" hidden="true"/>
        <files mask="req_app.vcxproj" hidden="true"/>
        <files mask="query_compile_time_config.vcxproj" hidden="true"/>
        <files mask="ssl_client2.vcxproj" hidden="true"/>
        <files mask="rsa_genkey.vcxproj" hidden="true"/>
        <files mask="hello.vcxproj" hidden="true"/>
        <files mask="benchmark.vcxproj" hidden="true"/>
        <files mask="pk_verify.vcxproj" hidden="true"/>
        <files mask="mbedTLS.vcxproj" hidden="true"/>
        <files mask="rsa_verify.vcxproj" hidden="true"/>
        <files mask="rsa_decrypt.vcxproj" hidden="true"/>
        <files mask="mini_client.vcxproj" hidden="true"/>
        <files mask="ssl_server.vcxproj" hidden="true"/>
        <files mask="mpi_demo.vcxproj" hidden="true"/>
        <files mask="ecdsa.vcxproj" hidden="true"/>
        <files mask="dtls_client.vcxproj" hidden="true"/>
        <files mask="rsa_sign_pss.vcxproj" hidden="true"/>
        <files mask="ssl_fork_server.vcxproj" hidden="true"/>
        <files mask="aescrypt2.vcxproj" hidden="true"/>
        <files mask="gen_random_ctr_drbg.vcxproj" hidden="true"/>
        <files mask="gen_entropy.vcxproj" hidden="true"/>
        <files mask="dtls_server.vcxproj" hidden="true"/>
        <files mask="crypt_and_hash.vcxproj" hidden="true"/>
        <files mask="pk_decrypt.vcxproj" hidden="true"/>
        <files mask="pk_sign.vcxproj" hidden="true"/>
        <files mask="crl_app.vcxproj" hidden="true"/>
      </source>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
        <files mask="apache-2.0.txt" hidden="true"/>
        <files mask="mbeTLS_for_Kinetis_SDK_v2.0_readme.txt" hidden="true"/>
        <files mask="dco.txt" hidden="true"/>
        <files mask="ChangeLogKSDK.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="./" type="other">
        <files mask="CONTRIBUTING.md" hidden="true"/>
        <files mask="DartConfiguration.tcl" hidden="true"/>
        <files mask="README.md" hidden="true"/>
        <files mask=".globalrc" hidden="true"/>
        <files mask=".travis.yml" hidden="true"/>
        <files mask=".gitignore" hidden="true"/>
        <files mask=".pylintrc" hidden="true"/>
        <files mask="mbeTLS_for_Kinetis_SDK_v2.0_readme.meta" hidden="true"/>
        <files mask="LICENSE" hidden="true"/>
        <files mask="ChangeLog" hidden="true"/>
        <files mask="Makefile" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.K32L3A60" name="multicore middleware" brief="Multicore SDK" version="2.9.0" full_name="Multicore Software Development Kit" devices="K32L3A60xxx" user_visible="true" type="other" package_base_path="middleware/multicore" project_base_path="multicore">
      <source relative_path="./" type="doc">
        <files mask="readme.txt" hidden="true"/>
        <files mask="ChangeLogKSDK.txt" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.K32L3A60" name="eRPC" brief="eRPC" version="1.8.0" full_name="Embedded Remote Procedure Call" devices="K32L3A60xxx" category="Multicore/eRPC" user_visible="true" type="other" package_base_path="middleware/multicore" project_base_path="erpc">
      <source relative_path="erpc" project_relative_path="aux" type="project">
        <files mask=".cproject" hidden="true"/>
        <files mask=".project" hidden="true"/>
      </source>
      <source relative_path="erpc" project_relative_path="aux" type="other">
        <files mask="Makefile" hidden="true"/>
        <files mask="README.md" hidden="true"/>
        <files mask="LICENSE" hidden="true"/>
      </source>
      <source relative_path="erpc/docs/eRPC_infrastructure/eRPC" project_relative_path="doc" type="doc">
        <files mask="functions_u.html" hidden="true"/>
        <files mask="erpc__server_8h_source.html" hidden="true"/>
        <files mask="classerpc_1_1_spidev_master_transport.html" hidden="true"/>
        <files mask="classerpc_1_1_message_buffer_factory-members.html" hidden="true"/>
        <files mask="classerpc_1_1_transport.html" hidden="true"/>
        <files mask="classerpc_1_1_static_queue.html" hidden="true"/>
        <files mask="classerpc_1_1_thread-members.html" hidden="true"/>
        <files mask="classerpc_1_1_framed_transport.html" hidden="true"/>
        <files mask="erpc__transport_8h_source.html" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_t_t_y_r_t_o_s_transport.html" hidden="true"/>
        <files mask="dir_000002_000001.html" hidden="true"/>
        <files mask="classerpc_1_1_simple_server-members.html" hidden="true"/>
        <files mask="functions_k.html" hidden="true"/>
        <files mask="group__rpmsg__lite__transport.html" hidden="true"/>
        <files mask="functions_func_m.html" hidden="true"/>
        <files mask="classerpc_1_1_spi_slave_transport-members.html" hidden="true"/>
        <files mask="erpc__arbitrated__client__setup_8h_source.html" hidden="true"/>
        <files mask="classerpc_1_1_static_queue-members.html" hidden="true"/>
        <files mask="classerpc_1_1_pre_post_action.html" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_t_t_y_r_t_o_s_transport-members.html" hidden="true"/>
        <files mask="classerpc_1_1_request_context-members.html" hidden="true"/>
        <files mask="classerpc_1_1_semaphore.html" hidden="true"/>
        <files mask="classerpc_1_1_message_buffer_1_1_cursor.html" hidden="true"/>
        <files mask="functions_type.html" hidden="true"/>
        <files mask="functions_s.html" hidden="true"/>
        <files mask="functions_func_f.html" hidden="true"/>
        <files mask="classerpc_1_1_message_buffer-members.html" hidden="true"/>
        <files mask="globals.html" hidden="true"/>
        <files mask="classerpc_1_1_basic_codec.html" hidden="true"/>
        <files mask="group__infra__transport.html" hidden="true"/>
        <files mask="classerpc_1_1_spi_master_transport.html" hidden="true"/>
        <files mask="group__transports.html" hidden="true"/>
        <files mask="classerpc_1_1_m_u_transport-members.html" hidden="true"/>
        <files mask="classerpc_1_1_manually_constructed.html" hidden="true"/>
        <files mask="dir_4c1986dc9092ab2d1c997193a3634562.html" hidden="true"/>
        <files mask="erpc__tcp__transport_8h_source.html" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_transport.html" hidden="true"/>
        <files mask="classerpc_1_1_service-members.html" hidden="true"/>
        <files mask="functions_v.html" hidden="true"/>
        <files mask="functions_func_h.html" hidden="true"/>
        <files mask="classerpc_1_1_manually_constructed-members.html" hidden="true"/>
        <files mask="erpc__uart__cmsis__transport_8h_source.html" hidden="true"/>
        <files mask="classerpc_1_1_server-members.html" hidden="true"/>
        <files mask="functions_func_l.html" hidden="true"/>
        <files mask="classerpc_1_1_arbitrated_client_manager.html" hidden="true"/>
        <files mask="classerpc_1_1_message_buffer_factory.html" hidden="true"/>
        <files mask="functions_func_g.html" hidden="true"/>
        <files mask="group__rpmsg__lite__rtos__transport.html" hidden="true"/>
        <files mask="erpc__spi__slave__transport_8h.html" hidden="true"/>
        <files mask="group__serial__transport.html" hidden="true"/>
        <files mask="erpc__static__queue_8h.html" hidden="true"/>
        <files mask="classerpc_1_1_spi_slave_transport.html" hidden="true"/>
        <files mask="dir_52949f44d4caf8ec53681e2fdb42569d.html" hidden="true"/>
        <files mask="classerpc_1_1_message_buffer.html" hidden="true"/>
        <files mask="class_r_p_msg_t_t_y_message_buffer_factory.html" hidden="true"/>
        <files mask="group__spidev__master__transport.html" hidden="true"/>
        <files mask="erpc__rpmsg__tty__rtos__transport_8h_source.html" hidden="true"/>
        <files mask="classerpc_1_1_mutex.html" hidden="true"/>
        <files mask="group__config.html" hidden="true"/>
        <files mask="erpc__config_8h_source.html" hidden="true"/>
        <files mask="classerpc_1_1_inter_thread_buffer_transport-members.html" hidden="true"/>
        <files mask="classerpc_1_1_server.html" hidden="true"/>
        <files mask="group__port__mem.html" hidden="true"/>
        <files mask="erpc__server__setup_8h_source.html" hidden="true"/>
        <files mask="erpc__spi__master__transport_8h.html" hidden="true"/>
        <files mask="erpc__port_8h_source.html" hidden="true"/>
        <files mask="functions_func_t.html" hidden="true"/>
        <files mask="erpc__transport_8h.html" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_transport-members.html" hidden="true"/>
        <files mask="erpc__pre__post__action_8h.html" hidden="true"/>
        <files mask="group__port.html" hidden="true"/>
        <files mask="classerpc_1_1_usb_cdc_transport.html" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_linux_transport.html" hidden="true"/>
        <files mask="functions_t.html" hidden="true"/>
        <files mask="functions_func_u.html" hidden="true"/>
        <files mask="classerpc_1_1_mutex_1_1_guard-members.html" hidden="true"/>
        <files mask="group__rpmsg__tty__rtos__transport.html" hidden="true"/>
        <files mask="erpc__message__buffer_8h_source.html" hidden="true"/>
        <files mask="functions_func_0x7e.html" hidden="true"/>
        <files mask="erpc__transport__setup_8h_source.html" hidden="true"/>
        <files mask="erpc__framed__transport_8h.html" hidden="true"/>
        <files mask="functions_func_s.html" hidden="true"/>
        <files mask="dir_000002_000005.html" hidden="true"/>
        <files mask="classerpc_1_1_message_buffer_1_1_cursor-members.html" hidden="true"/>
        <files mask="functions_c.html" hidden="true"/>
        <files mask="classerpc_1_1_request_context.html" hidden="true"/>
        <files mask="functions_func_w.html" hidden="true"/>
        <files mask="erpc__rpmsg__lite__transport_8h_source.html" hidden="true"/>
        <files mask="classerpc_1_1_codec.html" hidden="true"/>
        <files mask="class_r_p_msg_message_buffer_factory-members.html" hidden="true"/>
        <files mask="classerpc_1_1_arbitrated_client_manager-members.html" hidden="true"/>
        <files mask="group__itbp__transport.html" hidden="true"/>
        <files mask="graph_legend.html" hidden="true"/>
        <files mask="erpc__threading_8h.html" hidden="true"/>
        <files mask="group__port__sysgpio.html" hidden="true"/>
        <files mask="classerpc_1_1_crc16-members.html" hidden="true"/>
        <files mask="modules.html" hidden="true"/>
        <files mask="erpc__mu__transport_8h.html" hidden="true"/>
        <files mask="erpc__manually__constructed_8h.html" hidden="true"/>
        <files mask="classerpc_1_1_transport_factory-members.html" hidden="true"/>
        <files mask="group__port__spidev.html" hidden="true"/>
        <files mask="classerpc_1_1_transport-members.html" hidden="true"/>
        <files mask="group__setup.html" hidden="true"/>
        <files mask="classerpc_1_1_pre_post_action-members.html" hidden="true"/>
        <files mask="classerpc_1_1_client_server_common.html" hidden="true"/>
        <files mask="classerpc_1_1_serial_transport-members.html" hidden="true"/>
        <files mask="erpc__static__queue_8h_source.html" hidden="true"/>
        <files mask="classerpc_1_1_m_u_transport.html" hidden="true"/>
        <files mask="erpc__basic__codec_8h_source.html" hidden="true"/>
        <files mask="group__port__serial.html" hidden="true"/>
        <files mask="classerpc_1_1_transport_arbitrator.html" hidden="true"/>
        <files mask="classerpc_1_1_t_c_p_transport-members.html" hidden="true"/>
        <files mask="globals_func.html" hidden="true"/>
        <files mask="structerpc_1_1_transport_arbitrator_1_1_pending_client_info-members.html" hidden="true"/>
        <files mask="inherits.html" hidden="true"/>
        <files mask="group__client__setup.html" hidden="true"/>
        <files mask="classerpc_1_1_dspi_master_transport-members.html" hidden="true"/>
        <files mask="classerpc_1_1_thread.html" hidden="true"/>
        <files mask="erpc__common_8h_source.html" hidden="true"/>
        <files mask="erpc__inter__thread__buffer__transport_8h_source.html" hidden="true"/>
        <files mask="classes.html" hidden="true"/>
        <files mask="dir_000005_000004.html" hidden="true"/>
        <files mask="classerpc_1_1_basic_codec_factory.html" hidden="true"/>
        <files mask="erpc__pre__post__action_8h_source.html" hidden="true"/>
        <files mask="classerpc_1_1_codec_factory.html" hidden="true"/>
        <files mask="erpc__simple__server_8h.html" hidden="true"/>
        <files mask="erpc__rpmsg__lite__rtos__transport_8h_source.html" hidden="true"/>
        <files mask="classerpc_1_1_message_loggers-members.html" hidden="true"/>
        <files mask="classerpc_1_1_basic_codec_factory-members.html" hidden="true"/>
        <files mask="annotated.html" hidden="true"/>
        <files mask="erpc__setup__extensions_8h.html" hidden="true"/>
        <files mask="dir_62e9b24ece508051f26d84717c79c815.html" hidden="true"/>
        <files mask="functions_g.html" hidden="true"/>
        <files mask="erpc__client__manager_8h_source.html" hidden="true"/>
        <files mask="erpc__config_8h.html" hidden="true"/>
        <files mask="classerpc_1_1_basic_codec-members.html" hidden="true"/>
        <files mask="erpc__setup__extensions_8h_source.html" hidden="true"/>
        <files mask="globals_defs.html" hidden="true"/>
        <files mask="functions_h.html" hidden="true"/>
        <files mask="navtree.css" hidden="true"/>
        <files mask="erpc__mbf__setup_8h.html" hidden="true"/>
        <files mask="erpc__rpmsg__linux__transport_8h_source.html" hidden="true"/>
        <files mask="class_r_p_msg_t_t_y_message_buffer_factory-members.html" hidden="true"/>
        <files mask="dir_318b660cd76dff0271d6acfa47597bac.html" hidden="true"/>
        <files mask="group__infra__utility.html" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_linux_transport-members.html" hidden="true"/>
        <files mask="functions_func_v.html" hidden="true"/>
        <files mask="erpc__serial__transport_8h.html" hidden="true"/>
        <files mask="classerpc_1_1_codec-members.html" hidden="true"/>
        <files mask="dir_ecce72d14eab190b8175cc3cd0696eeb.html" hidden="true"/>
        <files mask="functions_vars.html" hidden="true"/>
        <files mask="group__tcp__transport.html" hidden="true"/>
        <files mask="group__uart__transport.html" hidden="true"/>
        <files mask="erpc__message__loggers_8h_source.html" hidden="true"/>
        <files mask="erpc__crc16_8h.html" hidden="true"/>
        <files mask="erpc__codec_8h_source.html" hidden="true"/>
        <files mask="structerpc_1_1_transport_arbitrator_1_1_pending_client_info.html" hidden="true"/>
        <files mask="erpc__basic__codec_8h.html" hidden="true"/>
        <files mask="classerpc_1_1_spidev_master_transport-members.html" hidden="true"/>
        <files mask="functions_0x7e.html" hidden="true"/>
        <files mask="classerpc_1_1_client_manager.html" hidden="true"/>
        <files mask="erpc__spidev__master__transport_8h.html" hidden="true"/>
        <files mask="erpc__server__setup_8h.html" hidden="true"/>
        <files mask="erpc__arbitrated__client__manager_8h.html" hidden="true"/>
        <files mask="functions_i.html" hidden="true"/>
        <files mask="erpc__client__server__common_8h_source.html" hidden="true"/>
        <files mask="erpc__spidev_8h_source.html" hidden="true"/>
        <files mask="erpc__usb__cdc__transport_8h.html" hidden="true"/>
        <files mask="classerpc_1_1_framed_transport-members.html" hidden="true"/>
        <files mask="erpc__mbf__setup_8h_source.html" hidden="true"/>
        <files mask="classerpc_1_1_codec_factory-members.html" hidden="true"/>
        <files mask="erpc__spi__slave__transport_8h_source.html" hidden="true"/>
        <files mask="group__server__setup.html" hidden="true"/>
        <files mask="functions_func_c.html" hidden="true"/>
        <files mask="erpc__inter__thread__buffer__transport_8h.html" hidden="true"/>
        <files mask="files.html" hidden="true"/>
        <files mask="erpc__transport__arbitrator_8h_source.html" hidden="true"/>
        <files mask="group__port__threads.html" hidden="true"/>
        <files mask="classerpc_1_1_message_logger.html" hidden="true"/>
        <files mask="group__dspi__slave__transport.html" hidden="true"/>
        <files mask="functions_func_d.html" hidden="true"/>
        <files mask="group__spi__slave__transport.html" hidden="true"/>
        <files mask="functions_m.html" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_r_t_o_s_transport-members.html" hidden="true"/>
        <files mask="group__rpmsg__linux__transport.html" hidden="true"/>
        <files mask="erpc__usb__cdc__transport_8h_source.html" hidden="true"/>
        <files mask="erpc__spi__master__transport_8h_source.html" hidden="true"/>
        <files mask="functions_p.html" hidden="true"/>
        <files mask="erpc__client__setup_8h.html" hidden="true"/>
        <files mask="erpc__rpmsg__lite__transport_8h.html" hidden="true"/>
        <files mask="group__spi__master__transport.html" hidden="true"/>
        <files mask="functions_f.html" hidden="true"/>
        <files mask="erpc__rpmsg__lite__rtos__transport_8h.html" hidden="true"/>
        <files mask="classerpc_1_1_uart_transport.html" hidden="true"/>
        <files mask="group__message__buffer__factory__setup.html" hidden="true"/>
        <files mask="index.html" hidden="true"/>
        <files mask="erpc__dspi__slave__transport_8h.html" hidden="true"/>
        <files mask="class_dynamic_message_buffer_factory.html" hidden="true"/>
        <files mask="erpc__client__manager_8h.html" hidden="true"/>
        <files mask="classerpc_1_1_dspi_slave_transport-members.html" hidden="true"/>
        <files mask="group__infra__client.html" hidden="true"/>
        <files mask="erpc__server_8h.html" hidden="true"/>
        <files mask="classerpc_1_1_t_c_p_transport.html" hidden="true"/>
        <files mask="classerpc_1_1_message_logger-members.html" hidden="true"/>
        <files mask="group__infra__codec.html" hidden="true"/>
        <files mask="group__transport__setup.html" hidden="true"/>
        <files mask="functions_l.html" hidden="true"/>
        <files mask="erpc__mu__transport_8h_source.html" hidden="true"/>
        <files mask="class_r_p_msg_message_buffer_factory.html" hidden="true"/>
        <files mask="erpc__spidev__master__transport_8h_source.html" hidden="true"/>
        <files mask="dir_000005_000001.html" hidden="true"/>
        <files mask="tabs.css" hidden="true"/>
        <files mask="class_static_message_buffer_factory.html" hidden="true"/>
        <files mask="functions.html" hidden="true"/>
        <files mask="erpc__framed__transport_8h_source.html" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_base_transport-members.html" hidden="true"/>
        <files mask="erpc__port_8h.html" hidden="true"/>
        <files mask="classerpc_1_1_transport_factory.html" hidden="true"/>
        <files mask="doxygen.css" hidden="true"/>
        <files mask="erpc__tcp__transport_8h.html" hidden="true"/>
        <files mask="functions_o.html" hidden="true"/>
        <files mask="erpc__client__server__common_8h.html" hidden="true"/>
        <files mask="classerpc_1_1_serial_transport.html" hidden="true"/>
        <files mask="dir_65f3d2eaa0376abba9fa4e8a5e7d2f88.html" hidden="true"/>
        <files mask="erpc__simple__server_8h_source.html" hidden="true"/>
        <files mask="classerpc_1_1_mutex_1_1_guard.html" hidden="true"/>
        <files mask="classerpc_1_1_dspi_slave_transport.html" hidden="true"/>
        <files mask="erpc__serial_8h.html" hidden="true"/>
        <files mask="erpc__config__internal_8h_source.html" hidden="true"/>
        <files mask="functions_func_o.html" hidden="true"/>
        <files mask="erpc__message__buffer_8h.html" hidden="true"/>
        <files mask="erpc__rpmsg__tty__rtos__transport_8h.html" hidden="true"/>
        <files mask="classerpc_1_1_client_server_common-members.html" hidden="true"/>
        <files mask="erpc__version_8h_source.html" hidden="true"/>
        <files mask="functions_func_r.html" hidden="true"/>
        <files mask="class_dynamic_message_buffer_factory-members.html" hidden="true"/>
        <files mask="erpc__rpmsg__lite__base__transport_8h.html" hidden="true"/>
        <files mask="erpc__message__loggers_8h.html" hidden="true"/>
        <files mask="dir_000001_000004.html" hidden="true"/>
        <files mask="group__port__setup__extensions.html" hidden="true"/>
        <files mask="group__mu__transport.html" hidden="true"/>
        <files mask="classerpc_1_1_uart_transport-members.html" hidden="true"/>
        <files mask="classerpc_1_1_message_loggers.html" hidden="true"/>
        <files mask="erpc__arbitrated__client__setup_8h.html" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_r_t_o_s_transport.html" hidden="true"/>
        <files mask="functions_d.html" hidden="true"/>
        <files mask="classerpc_1_1_transport_arbitrator-members.html" hidden="true"/>
        <files mask="erpc__threading_8h_source.html" hidden="true"/>
        <files mask="class_static_message_buffer_factory-members.html" hidden="true"/>
        <files mask="hierarchy.html" hidden="true"/>
        <files mask="erpc__sysgpio_8h_source.html" hidden="true"/>
        <files mask="erpc__transport__setup_8h.html" hidden="true"/>
        <files mask="globals_type.html" hidden="true"/>
        <files mask="classerpc_1_1_usb_cdc_transport-members.html" hidden="true"/>
        <files mask="functions_r.html" hidden="true"/>
        <files mask="dir_000004_000003.html" hidden="true"/>
        <files mask="erpc__manually__constructed_8h_source.html" hidden="true"/>
        <files mask="functions_func_i.html" hidden="true"/>
        <files mask="group___u_s_b___c_d_c__transport.html" hidden="true"/>
        <files mask="classerpc_1_1_crc16.html" hidden="true"/>
        <files mask="group__dspi__master__transport.html" hidden="true"/>
        <files mask="erpc__crc16_8h_source.html" hidden="true"/>
        <files mask="classerpc_1_1_simple_server.html" hidden="true"/>
        <files mask="classerpc_1_1_mutex-members.html" hidden="true"/>
        <files mask="functions_func.html" hidden="true"/>
        <files mask="classerpc_1_1_dspi_master_transport.html" hidden="true"/>
        <files mask="erpc__dspi__slave__transport_8h_source.html" hidden="true"/>
        <files mask="classerpc_1_1_semaphore-members.html" hidden="true"/>
        <files mask="classerpc_1_1_inter_thread_buffer_transport.html" hidden="true"/>
        <files mask="erpc__arbitrated__client__manager_8h_source.html" hidden="true"/>
        <files mask="erpc__dspi__master__transport_8h.html" hidden="true"/>
        <files mask="erpc__serial__transport_8h_source.html" hidden="true"/>
        <files mask="erpc__transport__arbitrator_8h.html" hidden="true"/>
        <files mask="customdoxygen.css" hidden="true"/>
        <files mask="functions_w.html" hidden="true"/>
        <files mask="classerpc_1_1_service.html" hidden="true"/>
        <files mask="erpc__serial_8h_source.html" hidden="true"/>
        <files mask="classerpc_1_1_client_manager-members.html" hidden="true"/>
        <files mask="erpc__uart__cmsis__transport_8h.html" hidden="true"/>
        <files mask="erpc__client__setup_8h_source.html" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_base_transport.html" hidden="true"/>
        <files mask="erpc__dspi__master__transport_8h_source.html" hidden="true"/>
        <files mask="classerpc_1_1_spi_master_transport-members.html" hidden="true"/>
        <files mask="dir_000002_000004.html" hidden="true"/>
        <files mask="erpc__rpmsg__lite__base__transport_8h_source.html" hidden="true"/>
        <files mask="group__infra__server.html" hidden="true"/>
        <files mask="functions_func_p.html" hidden="true"/>
        <files mask="erpc__codec_8h.html" hidden="true"/>
        <files mask="group__infra.html" hidden="true"/>
      </source>
      <source relative_path="erpc/docs/eRPC_infrastructure/eRPC" project_relative_path="doc" type="other">
        <files mask="classerpc_1_1_basic_codec_factory__coll__graph.svg" hidden="true"/>
        <files mask="inherit_graph_18.svg" hidden="true"/>
        <files mask="inherit_graph_1.md5" hidden="true"/>
        <files mask="group__rpmsg__linux__transport.svg" hidden="true"/>
        <files mask="classerpc_1_1_usb_cdc_transport__inherit__graph.svg" hidden="true"/>
        <files mask="inherit_graph_18.md5" hidden="true"/>
        <files mask="inherit_graph_9.map" hidden="true"/>
        <files mask="erpc__threading_8h__dep__incl.map" hidden="true"/>
        <files mask="inherit_graph_11.svg" hidden="true"/>
        <files mask="group__transport__setup.md5" hidden="true"/>
        <files mask="inherit_graph_0.md5" hidden="true"/>
        <files mask="inherit_graph_15.map" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_t_t_y_r_t_o_s_transport__inherit__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_codec__coll__graph.md5" hidden="true"/>
        <files mask="erpc__client__manager_8h__dep__incl.map" hidden="true"/>
        <files mask="inherit_graph_13.md5" hidden="true"/>
        <files mask="classerpc_1_1_message_logger__coll__graph.map" hidden="true"/>
        <files mask="erpc__rpmsg__lite__base__transport_8h__dep__incl.map" hidden="true"/>
        <files mask="classerpc_1_1_codec_factory__inherit__graph.md5" hidden="true"/>
        <files mask="inherit_graph_19.svg" hidden="true"/>
        <files mask="classerpc_1_1_serial_transport__coll__graph.md5" hidden="true"/>
        <files mask="group__rpmsg__lite__rtos__transport.svg" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_linux_transport__coll__graph.map" hidden="true"/>
        <files mask="erpc__transport__arbitrator_8h__incl.md5" hidden="true"/>
        <files mask="group__infra__codec.svg" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_base_transport__inherit__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_codec__inherit__graph.map" hidden="true"/>
        <files mask="erpc__arbitrated__client__manager_8h__incl.md5" hidden="true"/>
        <files mask="group__infra__server.map" hidden="true"/>
        <files mask="group__setup.map" hidden="true"/>
        <files mask="classerpc_1_1_framed_transport__inherit__graph.map" hidden="true"/>
        <files mask="erpc__threading_8h__incl.md5" hidden="true"/>
        <files mask="erpc__threading_8h__dep__incl.svg" hidden="true"/>
        <files mask="classerpc_1_1_dspi_slave_transport__inherit__graph.svg" hidden="true"/>
        <files mask="erpc__dspi__slave__transport_8h__incl.md5" hidden="true"/>
        <files mask="dir_4c1986dc9092ab2d1c997193a3634562_dep.map" hidden="true"/>
        <files mask="erpc__mu__transport_8h__incl.map" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_base_transport__coll__graph.svg" hidden="true"/>
        <files mask="erpc__manually__constructed_8h__incl.md5" hidden="true"/>
        <files mask="classerpc_1_1_request_context__coll__graph.svg" hidden="true"/>
        <files mask="group__setup.md5" hidden="true"/>
        <files mask="inherit_graph_23.map" hidden="true"/>
        <files mask="classerpc_1_1_client_manager__inherit__graph.svg" hidden="true"/>
        <files mask="group__infra__utility.map" hidden="true"/>
        <files mask="erpc__message__buffer_8h__incl.svg" hidden="true"/>
        <files mask="group__infra.md5" hidden="true"/>
        <files mask="dir_4c1986dc9092ab2d1c997193a3634562_dep.md5" hidden="true"/>
        <files mask="classerpc_1_1_inter_thread_buffer_transport__inherit__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_uart_transport__coll__graph.svg" hidden="true"/>
        <files mask="inherit_graph_7.svg" hidden="true"/>
        <files mask="erpc__usb__cdc__transport_8h__incl.map" hidden="true"/>
        <files mask="erpc__framed__transport_8h__incl.md5" hidden="true"/>
        <files mask="classerpc_1_1_transport_arbitrator__inherit__graph.map" hidden="true"/>
        <files mask="erpc__tcp__transport_8h__incl.md5" hidden="true"/>
        <files mask="inherit_graph_20.map" hidden="true"/>
        <files mask="classerpc_1_1_simple_server__coll__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_t_t_y_r_t_o_s_transport__inherit__graph.md5" hidden="true"/>
        <files mask="group__infra__transport.svg" hidden="true"/>
        <files mask="inherit_graph_14.md5" hidden="true"/>
        <files mask="group__transports.md5" hidden="true"/>
        <files mask="class_r_p_msg_message_buffer_factory__inherit__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_codec_factory__inherit__graph.svg" hidden="true"/>
        <files mask="class_static_message_buffer_factory__inherit__graph.map" hidden="true"/>
        <files mask="group__dspi__slave__transport.svg" hidden="true"/>
        <files mask="classerpc_1_1_transport_arbitrator__inherit__graph.md5" hidden="true"/>
        <files mask="inherit_graph_15.svg" hidden="true"/>
        <files mask="erpc__config_8h__dep__incl.map" hidden="true"/>
        <files mask="erpc__spi__master__transport_8h__incl.md5" hidden="true"/>
        <files mask="classerpc_1_1_dspi_slave_transport__coll__graph.map" hidden="true"/>
        <files mask="erpc__arbitrated__client__setup_8h__incl.md5" hidden="true"/>
        <files mask="erpc__static__queue_8h__incl.svg" hidden="true"/>
        <files mask="erpc__setup__extensions_8h__incl.map" hidden="true"/>
        <files mask="inherit_graph_7.md5" hidden="true"/>
        <files mask="dir_ecce72d14eab190b8175cc3cd0696eeb_dep.md5" hidden="true"/>
        <files mask="erpc__pre__post__action_8h__incl.map" hidden="true"/>
        <files mask="erpc__arbitrated__client__setup_8h__incl.map" hidden="true"/>
        <files mask="inherit_graph_21.svg" hidden="true"/>
        <files mask="classerpc_1_1_spidev_master_transport__coll__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_spi_master_transport__coll__graph.svg" hidden="true"/>
        <files mask="structerpc_1_1_inter_thread_buffer_transport_1_1_shared_state__coll__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_m_u_transport__coll__graph.svg" hidden="true"/>
        <files mask="inherit_graph_20.svg" hidden="true"/>
        <files mask="classerpc_1_1_spi_slave_transport__coll__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_uart_transport__coll__graph.md5" hidden="true"/>
        <files mask="group__infra__utility.md5" hidden="true"/>
        <files mask="group__port.svg" hidden="true"/>
        <files mask="inherit_graph_21.map" hidden="true"/>
        <files mask="classerpc_1_1_codec__inherit__graph.svg" hidden="true"/>
        <files mask="erpc__spi__slave__transport_8h__incl.map" hidden="true"/>
        <files mask="classerpc_1_1_basic_codec_factory__coll__graph.md5" hidden="true"/>
        <files mask="dir_62e9b24ece508051f26d84717c79c815_dep.md5" hidden="true"/>
        <files mask="group__infra__codec.map" hidden="true"/>
        <files mask="inherit_graph_10.md5" hidden="true"/>
        <files mask="structerpc_1_1_inter_thread_buffer_transport_1_1_shared_state__coll__graph.map" hidden="true"/>
        <files mask="erpc__rpmsg__tty__rtos__transport_8h__incl.map" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_linux_transport__coll__graph.md5" hidden="true"/>
        <files mask="erpc__rpmsg__lite__base__transport_8h__incl.md5" hidden="true"/>
        <files mask="classerpc_1_1_arbitrated_client_manager__coll__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_uart_transport__inherit__graph.svg" hidden="true"/>
        <files mask="group__infra__server.md5" hidden="true"/>
        <files mask="group__server__setup.svg" hidden="true"/>
        <files mask="inherit_graph_6.map" hidden="true"/>
        <files mask="classerpc_1_1_spi_slave_transport__coll__graph.map" hidden="true"/>
        <files mask="inherit_graph_5.svg" hidden="true"/>
        <files mask="erpc__client__manager_8h__dep__incl.svg" hidden="true"/>
        <files mask="erpc__rpmsg__tty__rtos__transport_8h__incl.md5" hidden="true"/>
        <files mask="group__port__spidev.map" hidden="true"/>
        <files mask="inherit_graph_6.md5" hidden="true"/>
        <files mask="erpc__mbf__setup_8h__incl.map" hidden="true"/>
        <files mask="erpc__threading_8h__dep__incl.md5" hidden="true"/>
        <files mask="group__port__serial.svg" hidden="true"/>
        <files mask="erpc__serial_8h__incl.md5" hidden="true"/>
        <files mask="classerpc_1_1_dspi_master_transport__inherit__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_serial_transport__inherit__graph.svg" hidden="true"/>
        <files mask="inherit_graph_9.md5" hidden="true"/>
        <files mask="erpc__server_8h__dep__incl.md5" hidden="true"/>
        <files mask="erpc__codec_8h__dep__incl.svg" hidden="true"/>
        <files mask="classerpc_1_1_client_manager__coll__graph.svg" hidden="true"/>
        <files mask="group__rpmsg__linux__transport.map" hidden="true"/>
        <files mask="classerpc_1_1_simple_server__coll__graph.map" hidden="true"/>
        <files mask="group__port__threads.svg" hidden="true"/>
        <files mask="classerpc_1_1_arbitrated_client_manager__coll__graph.md5" hidden="true"/>
        <files mask="erpc__mbf__setup_8h__dep__incl.md5" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_base_transport__coll__graph.md5" hidden="true"/>
        <files mask="erpc__codec_8h__incl.svg" hidden="true"/>
        <files mask="erpc__arbitrated__client__setup_8h__incl.svg" hidden="true"/>
        <files mask="class_r_p_msg_message_buffer_factory__coll__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_dspi_slave_transport__coll__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_basic_codec_factory__coll__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_arbitrated_client_manager__inherit__graph.map" hidden="true"/>
        <files mask="inherit_graph_4.md5" hidden="true"/>
        <files mask="classerpc_1_1_request_context__coll__graph.md5" hidden="true"/>
        <files mask="erpc__framed__transport_8h__dep__incl.svg" hidden="true"/>
        <files mask="group__dspi__slave__transport.map" hidden="true"/>
        <files mask="classerpc_1_1_basic_codec__coll__graph.map" hidden="true"/>
        <files mask="class_dynamic_message_buffer_factory__coll__graph.md5" hidden="true"/>
        <files mask="erpc__setup__extensions_8h__incl.svg" hidden="true"/>
        <files mask="dir_65f3d2eaa0376abba9fa4e8a5e7d2f88_dep.svg" hidden="true"/>
        <files mask="classerpc_1_1_framed_transport__coll__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_message_buffer_factory__inherit__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_transport__inherit__graph.map" hidden="true"/>
        <files mask="group__infra__client.map" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_transport__coll__graph.md5" hidden="true"/>
        <files mask="erpc__manually__constructed_8h__incl.svg" hidden="true"/>
        <files mask="erpc__static__queue_8h__dep__incl.map" hidden="true"/>
        <files mask="erpc__basic__codec_8h__incl.md5" hidden="true"/>
        <files mask="erpc__rpmsg__lite__base__transport_8h__incl.svg" hidden="true"/>
        <files mask="classerpc_1_1_server__inherit__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_r_t_o_s_transport__coll__graph.map" hidden="true"/>
        <files mask="erpc__transport_8h__incl.map" hidden="true"/>
        <files mask="erpc__crc16_8h__incl.md5" hidden="true"/>
        <files mask="inherit_graph_14.map" hidden="true"/>
        <files mask="erpc__dspi__master__transport_8h__incl.svg" hidden="true"/>
        <files mask="group__client__setup.map" hidden="true"/>
        <files mask="group__client__setup.md5" hidden="true"/>
        <files mask="erpc__transport_8h__incl.md5" hidden="true"/>
        <files mask="erpc__mu__transport_8h__incl.md5" hidden="true"/>
        <files mask="group__transport__setup.map" hidden="true"/>
        <files mask="erpc__serial__transport_8h__incl.svg" hidden="true"/>
        <files mask="classerpc_1_1_server__coll__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_m_u_transport__coll__graph.md5" hidden="true"/>
        <files mask="erpc__framed__transport_8h__dep__incl.map" hidden="true"/>
        <files mask="group__dspi__master__transport.md5" hidden="true"/>
        <files mask="erpc__threading_8h__incl.svg" hidden="true"/>
        <files mask="erpc__spidev__master__transport_8h__incl.map" hidden="true"/>
        <files mask="erpc__client__setup_8h__incl.map" hidden="true"/>
        <files mask="erpc__transport_8h__incl.svg" hidden="true"/>
        <files mask="erpc__rpmsg__tty__rtos__transport_8h__incl.svg" hidden="true"/>
        <files mask="group__infra__transport.md5" hidden="true"/>
        <files mask="classerpc_1_1_transport_arbitrator__coll__graph.map" hidden="true"/>
        <files mask="dir_ecce72d14eab190b8175cc3cd0696eeb_dep.map" hidden="true"/>
        <files mask="class_r_p_msg_t_t_y_message_buffer_factory__coll__graph.md5" hidden="true"/>
        <files mask="erpc__uart__cmsis__transport_8h__incl.map" hidden="true"/>
        <files mask="erpc__dspi__slave__transport_8h__incl.map" hidden="true"/>
        <files mask="erpc__static__queue_8h__dep__incl.md5" hidden="true"/>
        <files mask="structerpc_1_1_transport_arbitrator_1_1_pending_client_info__coll__graph.map" hidden="true"/>
        <files mask="erpc__client__server__common_8h__incl.md5" hidden="true"/>
        <files mask="class_static_message_buffer_factory__coll__graph.map" hidden="true"/>
        <files mask="erpc__transport__setup_8h__incl.svg" hidden="true"/>
        <files mask="classerpc_1_1_m_u_transport__coll__graph.map" hidden="true"/>
        <files mask="inherit_graph_8.svg" hidden="true"/>
        <files mask="erpc__framed__transport_8h__incl.svg" hidden="true"/>
        <files mask="classerpc_1_1_serial_transport__inherit__graph.md5" hidden="true"/>
        <files mask="inherit_graph_19.map" hidden="true"/>
        <files mask="erpc__client__manager_8h__incl.map" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_linux_transport__inherit__graph.md5" hidden="true"/>
        <files mask="group__rpmsg__lite__transport.svg" hidden="true"/>
        <files mask="erpc__transport_8h__dep__incl.svg" hidden="true"/>
        <files mask="classerpc_1_1_simple_server__coll__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_t_c_p_transport__inherit__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_m_u_transport__inherit__graph.map" hidden="true"/>
        <files mask="erpc__crc16_8h__incl.svg" hidden="true"/>
        <files mask="erpc__client__server__common_8h__dep__incl.map" hidden="true"/>
        <files mask="classerpc_1_1_framed_transport__inherit__graph.md5" hidden="true"/>
        <files mask="inherit_graph_3.map" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_r_t_o_s_transport__inherit__graph.svg" hidden="true"/>
        <files mask="group__spidev__master__transport.md5" hidden="true"/>
        <files mask="classerpc_1_1_spi_slave_transport__inherit__graph.map" hidden="true"/>
        <files mask="class_r_p_msg_message_buffer_factory__coll__graph.md5" hidden="true"/>
        <files mask="group__itbp__transport.svg" hidden="true"/>
        <files mask="classerpc_1_1_message_loggers__coll__graph.md5" hidden="true"/>
        <files mask="erpc__inter__thread__buffer__transport_8h__incl.map" hidden="true"/>
        <files mask="group__uart__transport.md5" hidden="true"/>
        <files mask="erpc__transport__setup_8h__dep__incl.md5" hidden="true"/>
        <files mask="classerpc_1_1_serial_transport__inherit__graph.map" hidden="true"/>
        <files mask="group__port__sysgpio.md5" hidden="true"/>
        <files mask="erpc__message__buffer_8h__dep__incl.svg" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_transport__coll__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_service__coll__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_t_t_y_r_t_o_s_transport__inherit__graph.svg" hidden="true"/>
        <files mask="graph_legend.svg" hidden="true"/>
        <files mask="classerpc_1_1_basic_codec__coll__graph.svg" hidden="true"/>
        <files mask="group__uart__transport.map" hidden="true"/>
        <files mask="class_r_p_msg_t_t_y_message_buffer_factory__coll__graph.svg" hidden="true"/>
        <files mask="group__port__mem.md5" hidden="true"/>
        <files mask="inherit_graph_18.map" hidden="true"/>
        <files mask="group__infra__client.svg" hidden="true"/>
        <files mask="erpc__spidev__master__transport_8h__incl.md5" hidden="true"/>
        <files mask="classerpc_1_1_t_c_p_transport__coll__graph.md5" hidden="true"/>
        <files mask="group__itbp__transport.map" hidden="true"/>
        <files mask="inherit_graph_0.svg" hidden="true"/>
        <files mask="erpc__server__setup_8h__incl.map" hidden="true"/>
        <files mask="classerpc_1_1_service__coll__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_spi_master_transport__inherit__graph.md5" hidden="true"/>
        <files mask="erpc__port_8h__incl.svg" hidden="true"/>
        <files mask="classerpc_1_1_client_server_common__inherit__graph.svg" hidden="true"/>
        <files mask="erpc__inter__thread__buffer__transport_8h__incl.md5" hidden="true"/>
        <files mask="classerpc_1_1_arbitrated_client_manager__coll__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_usb_cdc_transport__coll__graph.md5" hidden="true"/>
        <files mask="dir_65f3d2eaa0376abba9fa4e8a5e7d2f88_dep.md5" hidden="true"/>
        <files mask="erpc__spidev__master__transport_8h__incl.svg" hidden="true"/>
        <files mask="classerpc_1_1_codec_factory__inherit__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_spidev_master_transport__inherit__graph.svg" hidden="true"/>
        <files mask="class_dynamic_message_buffer_factory__coll__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_dspi_master_transport__coll__graph.md5" hidden="true"/>
        <files mask="class_r_p_msg_t_t_y_message_buffer_factory__inherit__graph.map" hidden="true"/>
        <files mask="group__dspi__master__transport.map" hidden="true"/>
        <files mask="erpc__config_8h__dep__incl.svg" hidden="true"/>
        <files mask="classerpc_1_1_usb_cdc_transport__coll__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_inter_thread_buffer_transport__coll__graph.svg" hidden="true"/>
        <files mask="group__spi__master__transport.map" hidden="true"/>
        <files mask="erpc__codec_8h__incl.md5" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_base_transport__inherit__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_t_c_p_transport__coll__graph.map" hidden="true"/>
        <files mask="erpc__message__loggers_8h__incl.svg" hidden="true"/>
        <files mask="erpc__port_8h__incl.map" hidden="true"/>
        <files mask="group__port__threads.md5" hidden="true"/>
        <files mask="inherit_graph_22.md5" hidden="true"/>
        <files mask="erpc__transport__setup_8h__dep__incl.svg" hidden="true"/>
        <files mask="class_dynamic_message_buffer_factory__inherit__graph.md5" hidden="true"/>
        <files mask="structerpc_1_1_inter_thread_buffer_transport_1_1_shared_state__coll__graph.md5" hidden="true"/>
        <files mask="group__mu__transport.md5" hidden="true"/>
        <files mask="erpc__dspi__master__transport_8h__incl.map" hidden="true"/>
        <files mask="erpc__static__queue_8h__incl.map" hidden="true"/>
        <files mask="group__mu__transport.map" hidden="true"/>
        <files mask="classerpc_1_1_spi_master_transport__inherit__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_basic_codec__coll__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_basic_codec__inherit__graph.svg" hidden="true"/>
        <files mask="group__port__mem.svg" hidden="true"/>
        <files mask="inherit_graph_15.md5" hidden="true"/>
        <files mask="class_static_message_buffer_factory__inherit__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_basic_codec_factory__inherit__graph.md5" hidden="true"/>
        <files mask="group__spidev__master__transport.svg" hidden="true"/>
        <files mask="group__uart__transport.svg" hidden="true"/>
        <files mask="class_r_p_msg_t_t_y_message_buffer_factory__inherit__graph.md5" hidden="true"/>
        <files mask="erpc__spi__master__transport_8h__incl.map" hidden="true"/>
        <files mask="erpc__message__buffer_8h__dep__incl.md5" hidden="true"/>
        <files mask="erpc__message__buffer_8h__dep__incl.map" hidden="true"/>
        <files mask="inherit_graph_10.map" hidden="true"/>
        <files mask="erpc__framed__transport_8h__dep__incl.md5" hidden="true"/>
        <files mask="group__mu__transport.svg" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_r_t_o_s_transport__coll__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_transport__inherit__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_basic_codec_factory__inherit__graph.map" hidden="true"/>
        <files mask="inherit_graph_22.map" hidden="true"/>
        <files mask="group__tcp__transport.svg" hidden="true"/>
        <files mask="erpc__simple__server_8h__incl.svg" hidden="true"/>
        <files mask="inherit_graph_7.map" hidden="true"/>
        <files mask="inherit_graph_4.map" hidden="true"/>
        <files mask="erpc__usb__cdc__transport_8h__incl.svg" hidden="true"/>
        <files mask="classerpc_1_1_message_buffer_factory__inherit__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_basic_codec__inherit__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_m_u_transport__inherit__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_spi_master_transport__coll__graph.map" hidden="true"/>
        <files mask="erpc__serial__transport_8h__incl.md5" hidden="true"/>
        <files mask="erpc__client__server__common_8h__incl.svg" hidden="true"/>
        <files mask="group__infra__transport.map" hidden="true"/>
        <files mask="class_static_message_buffer_factory__coll__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_simple_server__inherit__graph.svg" hidden="true"/>
        <files mask="class_dynamic_message_buffer_factory__inherit__graph.map" hidden="true"/>
        <files mask="inherit_graph_3.md5" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_r_t_o_s_transport__inherit__graph.md5" hidden="true"/>
        <files mask="class_dynamic_message_buffer_factory__inherit__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_transport__coll__graph.svg" hidden="true"/>
        <files mask="group__transports.map" hidden="true"/>
        <files mask="classerpc_1_1_spi_slave_transport__inherit__graph.md5" hidden="true"/>
        <files mask="inherit_graph_22.svg" hidden="true"/>
        <files mask="classerpc_1_1_inter_thread_buffer_transport__coll__graph.map" hidden="true"/>
        <files mask="erpc__uart__cmsis__transport_8h__incl.svg" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_transport__inherit__graph.md5" hidden="true"/>
        <files mask="group__tcp__transport.map" hidden="true"/>
        <files mask="erpc__mbf__setup_8h__dep__incl.svg" hidden="true"/>
        <files mask="erpc__transport__arbitrator_8h__incl.map" hidden="true"/>
        <files mask="erpc__crc16_8h__dep__incl.map" hidden="true"/>
        <files mask="erpc__rpmsg__lite__base__transport_8h__incl.map" hidden="true"/>
        <files mask="inherit_graph_21.md5" hidden="true"/>
        <files mask="erpc__arbitrated__client__manager_8h__incl.svg" hidden="true"/>
        <files mask="erpc__client__manager_8h__dep__incl.md5" hidden="true"/>
        <files mask="group__message__buffer__factory__setup.svg" hidden="true"/>
        <files mask="class_r_p_msg_t_t_y_message_buffer_factory__inherit__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_codec__coll__graph.map" hidden="true"/>
        <files mask="inherit_graph_1.map" hidden="true"/>
        <files mask="group__rpmsg__lite__transport.md5" hidden="true"/>
        <files mask="classerpc_1_1_dspi_master_transport__coll__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_spidev_master_transport__coll__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_client_manager__coll__graph.md5" hidden="true"/>
        <files mask="inherit_graph_13.map" hidden="true"/>
        <files mask="inherit_graph_0.map" hidden="true"/>
        <files mask="inherit_graph_2.svg" hidden="true"/>
        <files mask="dir_62e9b24ece508051f26d84717c79c815_dep.svg" hidden="true"/>
        <files mask="classerpc_1_1_spi_slave_transport__inherit__graph.svg" hidden="true"/>
        <files mask="group__spidev__master__transport.map" hidden="true"/>
        <files mask="erpc__codec_8h__dep__incl.md5" hidden="true"/>
        <files mask="group___u_s_b___c_d_c__transport.map" hidden="true"/>
        <files mask="classerpc_1_1_client_manager__inherit__graph.md5" hidden="true"/>
        <files mask="erpc__server__setup_8h__incl.md5" hidden="true"/>
        <files mask="dir_318b660cd76dff0271d6acfa47597bac_dep.svg" hidden="true"/>
        <files mask="classerpc_1_1_server__coll__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_spidev_master_transport__inherit__graph.map" hidden="true"/>
        <files mask="erpc__codec_8h__dep__incl.map" hidden="true"/>
        <files mask="classerpc_1_1_transport__inherit__graph.md5" hidden="true"/>
        <files mask="inherit_graph_17.md5" hidden="true"/>
        <files mask="inherit_graph_23.md5" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_base_transport__inherit__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_t_t_y_r_t_o_s_transport__coll__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_serial_transport__coll__graph.map" hidden="true"/>
        <files mask="erpc__rpmsg__lite__rtos__transport_8h__incl.map" hidden="true"/>
        <files mask="classerpc_1_1_server__inherit__graph.md5" hidden="true"/>
        <files mask="group__infra__utility.svg" hidden="true"/>
        <files mask="group__port__serial.md5" hidden="true"/>
        <files mask="dir_4c1986dc9092ab2d1c997193a3634562_dep.svg" hidden="true"/>
        <files mask="classerpc_1_1_usb_cdc_transport__coll__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_client_manager__inherit__graph.map" hidden="true"/>
        <files mask="group__message__buffer__factory__setup.md5" hidden="true"/>
        <files mask="erpc__rpmsg__lite__rtos__transport_8h__incl.svg" hidden="true"/>
        <files mask="erpc__crc16_8h__dep__incl.md5" hidden="true"/>
        <files mask="erpc__server_8h__incl.svg" hidden="true"/>
        <files mask="group__rpmsg__lite__rtos__transport.md5" hidden="true"/>
        <files mask="erpc__mbf__setup_8h__incl.md5" hidden="true"/>
        <files mask="erpc__pre__post__action_8h__incl.md5" hidden="true"/>
        <files mask="erpc__rpmsg__lite__transport_8h__incl.md5" hidden="true"/>
        <files mask="group__serial__transport.md5" hidden="true"/>
        <files mask="group__spi__slave__transport.map" hidden="true"/>
        <files mask="inherit_graph_16.md5" hidden="true"/>
        <files mask="classerpc_1_1_m_u_transport__inherit__graph.svg" hidden="true"/>
        <files mask="erpc__crc16_8h__incl.map" hidden="true"/>
        <files mask="group__tcp__transport.md5" hidden="true"/>
        <files mask="group__setup.svg" hidden="true"/>
        <files mask="group__infra.svg" hidden="true"/>
        <files mask="inherit_graph_9.svg" hidden="true"/>
        <files mask="erpc__transport_8h__dep__incl.md5" hidden="true"/>
        <files mask="erpc__threading_8h__incl.map" hidden="true"/>
        <files mask="inherit_graph_6.svg" hidden="true"/>
        <files mask="erpc__basic__codec_8h__incl.svg" hidden="true"/>
        <files mask="classerpc_1_1_spi_master_transport__inherit__graph.map" hidden="true"/>
        <files mask="dir_318b660cd76dff0271d6acfa47597bac_dep.md5" hidden="true"/>
        <files mask="class_r_p_msg_message_buffer_factory__coll__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_t_c_p_transport__inherit__graph.map" hidden="true"/>
        <files mask="erpc__mbf__setup_8h__dep__incl.map" hidden="true"/>
        <files mask="erpc__spi__master__transport_8h__incl.svg" hidden="true"/>
        <files mask="class_r_p_msg_message_buffer_factory__inherit__graph.md5" hidden="true"/>
        <files mask="inherit_graph_5.md5" hidden="true"/>
        <files mask="group__serial__transport.svg" hidden="true"/>
        <files mask="erpc__rpmsg__lite__transport_8h__incl.map" hidden="true"/>
        <files mask="inherit_graph_20.md5" hidden="true"/>
        <files mask="group__server__setup.map" hidden="true"/>
        <files mask="dir_62e9b24ece508051f26d84717c79c815_dep.map" hidden="true"/>
        <files mask="erpc__setup__extensions_8h__incl.md5" hidden="true"/>
        <files mask="classerpc_1_1_spidev_master_transport__inherit__graph.md5" hidden="true"/>
        <files mask="inherit_graph_12.md5" hidden="true"/>
        <files mask="erpc__message__loggers_8h__incl.map" hidden="true"/>
        <files mask="group___u_s_b___c_d_c__transport.svg" hidden="true"/>
        <files mask="classerpc_1_1_transport_arbitrator__coll__graph.svg" hidden="true"/>
        <files mask="erpc__mu__transport_8h__incl.svg" hidden="true"/>
        <files mask="erpc__server_8h__dep__incl.svg" hidden="true"/>
        <files mask="group__spi__slave__transport.svg" hidden="true"/>
        <files mask="erpc__arbitrated__client__manager_8h__incl.map" hidden="true"/>
        <files mask="inherit_graph_11.map" hidden="true"/>
        <files mask="erpc__server_8h__dep__incl.map" hidden="true"/>
        <files mask="erpc__pre__post__action_8h__incl.svg" hidden="true"/>
        <files mask="inherit_graph_12.map" hidden="true"/>
        <files mask="erpc__basic__codec_8h__incl.map" hidden="true"/>
        <files mask="group__spi__master__transport.md5" hidden="true"/>
        <files mask="inherit_graph_3.svg" hidden="true"/>
        <files mask="erpc__client__server__common_8h__dep__incl.md5" hidden="true"/>
        <files mask="erpc__rpmsg__lite__transport_8h__incl.svg" hidden="true"/>
        <files mask="classerpc_1_1_spidev_master_transport__coll__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_request_context__coll__graph.map" hidden="true"/>
        <files mask="erpc__spi__slave__transport_8h__incl.md5" hidden="true"/>
        <files mask="group__port__setup__extensions.svg" hidden="true"/>
        <files mask="erpc__framed__transport_8h__incl.map" hidden="true"/>
        <files mask="classerpc_1_1_arbitrated_client_manager__inherit__graph.svg" hidden="true"/>
        <files mask="erpc__codec_8h__incl.map" hidden="true"/>
        <files mask="inherit_graph_12.svg" hidden="true"/>
        <files mask="erpc__tcp__transport_8h__incl.svg" hidden="true"/>
        <files mask="structerpc_1_1_transport_arbitrator_1_1_pending_client_info__coll__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_base_transport__coll__graph.map" hidden="true"/>
        <files mask="erpc__client__manager_8h__incl.md5" hidden="true"/>
        <files mask="group__infra__codec.md5" hidden="true"/>
        <files mask="erpc__client__server__common_8h__incl.map" hidden="true"/>
        <files mask="erpc__serial_8h__incl.svg" hidden="true"/>
        <files mask="group__port__mem.map" hidden="true"/>
        <files mask="group__port__threads.map" hidden="true"/>
        <files mask="erpc__transport__arbitrator_8h__incl.svg" hidden="true"/>
        <files mask="inherit_graph_8.map" hidden="true"/>
        <files mask="classerpc_1_1_dspi_slave_transport__inherit__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_dspi_slave_transport__inherit__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_linux_transport__inherit__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_message_loggers__coll__graph.map" hidden="true"/>
        <files mask="group__message__buffer__factory__setup.map" hidden="true"/>
        <files mask="classerpc_1_1_message_logger__coll__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_basic_codec__inherit__graph.md5" hidden="true"/>
        <files mask="group__client__setup.svg" hidden="true"/>
        <files mask="group__rpmsg__tty__rtos__transport.map" hidden="true"/>
        <files mask="inherit_graph_1.svg" hidden="true"/>
        <files mask="classerpc_1_1_framed_transport__coll__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_codec__inherit__graph.md5" hidden="true"/>
        <files mask="erpc__mbf__setup_8h__incl.svg" hidden="true"/>
        <files mask="classerpc_1_1_spi_master_transport__coll__graph.md5" hidden="true"/>
        <files mask="erpc__transport_8h__dep__incl.map" hidden="true"/>
        <files mask="classerpc_1_1_simple_server__inherit__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_transport__inherit__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_inter_thread_buffer_transport__coll__graph.md5" hidden="true"/>
        <files mask="group__infra__server.svg" hidden="true"/>
        <files mask="classerpc_1_1_server__inherit__graph.map" hidden="true"/>
        <files mask="erpc__inter__thread__buffer__transport_8h__incl.svg" hidden="true"/>
        <files mask="group__transports.svg" hidden="true"/>
        <files mask="group__rpmsg__lite__rtos__transport.map" hidden="true"/>
        <files mask="group__dspi__master__transport.svg" hidden="true"/>
        <files mask="group__transport__setup.svg" hidden="true"/>
        <files mask="classerpc_1_1_codec__coll__graph.svg" hidden="true"/>
        <files mask="class_static_message_buffer_factory__coll__graph.md5" hidden="true"/>
        <files mask="inherit_graph_17.map" hidden="true"/>
        <files mask="inherit_graph_16.map" hidden="true"/>
        <files mask="erpc__usb__cdc__transport_8h__incl.md5" hidden="true"/>
        <files mask="erpc__port_8h__incl.md5" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_r_t_o_s_transport__coll__graph.md5" hidden="true"/>
        <files mask="inherit_graph_10.svg" hidden="true"/>
        <files mask="erpc__server__setup_8h__incl.svg" hidden="true"/>
        <files mask="group__rpmsg__tty__rtos__transport.md5" hidden="true"/>
        <files mask="group__port__spidev.svg" hidden="true"/>
        <files mask="classerpc_1_1_framed_transport__coll__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_transport_arbitrator__coll__graph.md5" hidden="true"/>
        <files mask="inherit_graph_2.map" hidden="true"/>
        <files mask="classerpc_1_1_uart_transport__inherit__graph.map" hidden="true"/>
        <files mask="group__spi__slave__transport.md5" hidden="true"/>
        <files mask="erpc__serial__transport_8h__incl.map" hidden="true"/>
        <files mask="erpc__transport__setup_8h__incl.map" hidden="true"/>
        <files mask="group__port__sysgpio.map" hidden="true"/>
        <files mask="erpc__transport__setup_8h__dep__incl.map" hidden="true"/>
        <files mask="erpc__static__queue_8h__incl.md5" hidden="true"/>
        <files mask="erpc__client__setup_8h__incl.svg" hidden="true"/>
        <files mask="group__dspi__slave__transport.md5" hidden="true"/>
        <files mask="classerpc_1_1_inter_thread_buffer_transport__inherit__graph.svg" hidden="true"/>
        <files mask="group___u_s_b___c_d_c__transport.md5" hidden="true"/>
        <files mask="inherit_graph_16.svg" hidden="true"/>
        <files mask="classerpc_1_1_server__coll__graph.map" hidden="true"/>
        <files mask="erpc__client__server__common_8h__dep__incl.svg" hidden="true"/>
        <files mask="classerpc_1_1_serial_transport__coll__graph.svg" hidden="true"/>
        <files mask="group__infra.map" hidden="true"/>
        <files mask="erpc__dspi__slave__transport_8h__incl.svg" hidden="true"/>
        <files mask="erpc__message__loggers_8h__incl.md5" hidden="true"/>
        <files mask="group__port.map" hidden="true"/>
        <files mask="dir_65f3d2eaa0376abba9fa4e8a5e7d2f88_dep.map" hidden="true"/>
        <files mask="dir_318b660cd76dff0271d6acfa47597bac_dep.map" hidden="true"/>
        <files mask="classerpc_1_1_spi_slave_transport__coll__graph.md5" hidden="true"/>
        <files mask="erpc__dspi__master__transport_8h__incl.md5" hidden="true"/>
        <files mask="group__server__setup.md5" hidden="true"/>
        <files mask="erpc__message__buffer_8h__incl.md5" hidden="true"/>
        <files mask="inherit_graph_13.svg" hidden="true"/>
        <files mask="group__rpmsg__lite__transport.map" hidden="true"/>
        <files mask="inherit_graph_2.md5" hidden="true"/>
        <files mask="inherit_graph_4.svg" hidden="true"/>
        <files mask="group__rpmsg__tty__rtos__transport.svg" hidden="true"/>
        <files mask="classerpc_1_1_transport_arbitrator__inherit__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_t_t_y_r_t_o_s_transport__coll__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_inter_thread_buffer_transport__inherit__graph.md5" hidden="true"/>
        <files mask="group__port__serial.map" hidden="true"/>
        <files mask="class_r_p_msg_t_t_y_message_buffer_factory__coll__graph.map" hidden="true"/>
        <files mask="inherit_graph_23.svg" hidden="true"/>
        <files mask="group__port__spidev.md5" hidden="true"/>
        <files mask="group__port__setup__extensions.map" hidden="true"/>
        <files mask="erpc__tcp__transport_8h__incl.map" hidden="true"/>
        <files mask="erpc__rpmsg__lite__base__transport_8h__dep__incl.svg" hidden="true"/>
        <files mask="inherit_graph_5.map" hidden="true"/>
        <files mask="classerpc_1_1_usb_cdc_transport__inherit__graph.map" hidden="true"/>
        <files mask="class_r_p_msg_message_buffer_factory__inherit__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_message_buffer_factory__inherit__graph.svg" hidden="true"/>
        <files mask="dir_ecce72d14eab190b8175cc3cd0696eeb_dep.svg" hidden="true"/>
        <files mask="classerpc_1_1_t_c_p_transport__coll__graph.svg" hidden="true"/>
        <files mask="group__port__setup__extensions.md5" hidden="true"/>
        <files mask="classerpc_1_1_uart_transport__coll__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_dspi_master_transport__inherit__graph.map" hidden="true"/>
        <files mask="group__serial__transport.map" hidden="true"/>
        <files mask="classerpc_1_1_dspi_master_transport__coll__graph.svg" hidden="true"/>
        <files mask="erpc__client__setup_8h__incl.md5" hidden="true"/>
        <files mask="classerpc_1_1_client_manager__coll__graph.map" hidden="true"/>
        <files mask="group__itbp__transport.md5" hidden="true"/>
        <files mask="inherit_graph_14.svg" hidden="true"/>
        <files mask="erpc__uart__cmsis__transport_8h__incl.md5" hidden="true"/>
        <files mask="erpc__crc16_8h__dep__incl.svg" hidden="true"/>
        <files mask="classerpc_1_1_transport__inherit__graph.svg" hidden="true"/>
        <files mask="erpc__rpmsg__lite__base__transport_8h__dep__incl.md5" hidden="true"/>
        <files mask="erpc__rpmsg__lite__rtos__transport_8h__incl.md5" hidden="true"/>
        <files mask="classerpc_1_1_message_loggers__coll__graph.svg" hidden="true"/>
        <files mask="inherit_graph_17.svg" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_linux_transport__coll__graph.svg" hidden="true"/>
        <files mask="inherit_graph_19.md5" hidden="true"/>
        <files mask="erpc__spi__slave__transport_8h__incl.svg" hidden="true"/>
        <files mask="class_static_message_buffer_factory__inherit__graph.svg" hidden="true"/>
        <files mask="inherit_graph_8.md5" hidden="true"/>
        <files mask="erpc__serial_8h__incl.map" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_linux_transport__inherit__graph.map" hidden="true"/>
        <files mask="class_dynamic_message_buffer_factory__coll__graph.svg" hidden="true"/>
        <files mask="inherit_graph_11.md5" hidden="true"/>
        <files mask="erpc__simple__server_8h__incl.md5" hidden="true"/>
        <files mask="erpc__config_8h__dep__incl.md5" hidden="true"/>
        <files mask="group__infra__client.md5" hidden="true"/>
        <files mask="erpc__client__manager_8h__incl.svg" hidden="true"/>
        <files mask="erpc__transport__setup_8h__incl.md5" hidden="true"/>
        <files mask="group__spi__master__transport.svg" hidden="true"/>
        <files mask="erpc__simple__server_8h__incl.map" hidden="true"/>
        <files mask="graph_legend.md5" hidden="true"/>
        <files mask="erpc__manually__constructed_8h__incl.map" hidden="true"/>
        <files mask="erpc__server_8h__incl.md5" hidden="true"/>
        <files mask="classerpc_1_1_t_c_p_transport__inherit__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_usb_cdc_transport__inherit__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_basic_codec_factory__inherit__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_framed_transport__inherit__graph.svg" hidden="true"/>
        <files mask="group__port.md5" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_r_t_o_s_transport__inherit__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_t_t_y_r_t_o_s_transport__coll__graph.svg" hidden="true"/>
        <files mask="erpc__server_8h__incl.map" hidden="true"/>
        <files mask="classerpc_1_1_dspi_master_transport__inherit__graph.md5" hidden="true"/>
        <files mask="group__rpmsg__linux__transport.md5" hidden="true"/>
        <files mask="classerpc_1_1_arbitrated_client_manager__inherit__graph.md5" hidden="true"/>
        <files mask="erpc__message__buffer_8h__incl.map" hidden="true"/>
        <files mask="group__port__sysgpio.svg" hidden="true"/>
        <files mask="classerpc_1_1_dspi_slave_transport__coll__graph.md5" hidden="true"/>
        <files mask="erpc__static__queue_8h__dep__incl.svg" hidden="true"/>
        <files mask="classerpc_1_1_service__coll__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_client_server_common__inherit__graph.md5" hidden="true"/>
        <files mask="classerpc_1_1_uart_transport__inherit__graph.md5" hidden="true"/>
        <files mask="structerpc_1_1_transport_arbitrator_1_1_pending_client_info__coll__graph.svg" hidden="true"/>
        <files mask="classerpc_1_1_simple_server__inherit__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_client_server_common__inherit__graph.map" hidden="true"/>
        <files mask="classerpc_1_1_message_logger__coll__graph.md5" hidden="true"/>
      </source>
      <source relative_path="erpc/docs/eRPC_infrastructure/eRPC" project_relative_path="doc" type="script">
        <files mask="files.js" hidden="true"/>
        <files mask="group__spidev__master__transport.js" hidden="true"/>
        <files mask="hierarchy.js" hidden="true"/>
        <files mask="group__spi__master__transport.js" hidden="true"/>
        <files mask="erpc__server__setup_8h.js" hidden="true"/>
        <files mask="classerpc_1_1_spi_master_transport.js" hidden="true"/>
        <files mask="erpc__mu__transport_8h.js" hidden="true"/>
        <files mask="group__port__threads.js" hidden="true"/>
        <files mask="dynsections.js" hidden="true"/>
        <files mask="classerpc_1_1_request_context.js" hidden="true"/>
        <files mask="classerpc_1_1_client_server_common.js" hidden="true"/>
        <files mask="functions_func.js" hidden="true"/>
        <files mask="group__setup.js" hidden="true"/>
        <files mask="group__server__setup.js" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_transport.js" hidden="true"/>
        <files mask="group___u_s_b___c_d_c__transport.js" hidden="true"/>
        <files mask="class_static_message_buffer_factory.js" hidden="true"/>
        <files mask="classerpc_1_1_thread.js" hidden="true"/>
        <files mask="class_r_p_msg_t_t_y_message_buffer_factory.js" hidden="true"/>
        <files mask="group__port__mem.js" hidden="true"/>
        <files mask="classerpc_1_1_spi_slave_transport.js" hidden="true"/>
        <files mask="group__dspi__slave__transport.js" hidden="true"/>
        <files mask="group__port.js" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_r_t_o_s_transport.js" hidden="true"/>
        <files mask="group__port__serial.js" hidden="true"/>
        <files mask="erpc__arbitrated__client__setup_8h.js" hidden="true"/>
        <files mask="group__itbp__transport.js" hidden="true"/>
        <files mask="classerpc_1_1_arbitrated_client_manager.js" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_base_transport.js" hidden="true"/>
        <files mask="classerpc_1_1_server.js" hidden="true"/>
        <files mask="group__transport__setup.js" hidden="true"/>
        <files mask="classerpc_1_1_mutex_1_1_guard.js" hidden="true"/>
        <files mask="classerpc_1_1_message_buffer_1_1_cursor.js" hidden="true"/>
        <files mask="group__port__setup__extensions.js" hidden="true"/>
        <files mask="classerpc_1_1_serial_transport.js" hidden="true"/>
        <files mask="group__rpmsg__linux__transport.js" hidden="true"/>
        <files mask="erpc__basic__codec_8h.js" hidden="true"/>
        <files mask="erpc__config_8h.js" hidden="true"/>
        <files mask="erpc__setup__extensions_8h.js" hidden="true"/>
        <files mask="classerpc_1_1_codec.js" hidden="true"/>
        <files mask="classerpc_1_1_static_queue.js" hidden="true"/>
        <files mask="classerpc_1_1_t_c_p_transport.js" hidden="true"/>
        <files mask="classerpc_1_1_m_u_transport.js" hidden="true"/>
        <files mask="group__spi__slave__transport.js" hidden="true"/>
        <files mask="classerpc_1_1_uart_transport.js" hidden="true"/>
        <files mask="classerpc_1_1_basic_codec.js" hidden="true"/>
        <files mask="classerpc_1_1_spidev_master_transport.js" hidden="true"/>
        <files mask="group__transports.js" hidden="true"/>
        <files mask="erpc__transport__setup_8h.js" hidden="true"/>
        <files mask="jquery.js" hidden="true"/>
        <files mask="erpc__mbf__setup_8h.js" hidden="true"/>
        <files mask="group__infra.js" hidden="true"/>
        <files mask="group__serial__transport.js" hidden="true"/>
        <files mask="group__rpmsg__lite__transport.js" hidden="true"/>
        <files mask="navtree.js" hidden="true"/>
        <files mask="resize.js" hidden="true"/>
        <files mask="classerpc_1_1_crc16.js" hidden="true"/>
        <files mask="structerpc_1_1_transport_arbitrator_1_1_pending_client_info.js" hidden="true"/>
        <files mask="group__dspi__master__transport.js" hidden="true"/>
        <files mask="group__infra__utility.js" hidden="true"/>
        <files mask="classerpc_1_1_dspi_master_transport.js" hidden="true"/>
        <files mask="erpc__client__setup_8h.js" hidden="true"/>
        <files mask="group__infra__client.js" hidden="true"/>
        <files mask="group__config.js" hidden="true"/>
        <files mask="classerpc_1_1_service.js" hidden="true"/>
        <files mask="classerpc_1_1_semaphore.js" hidden="true"/>
        <files mask="group__message__buffer__factory__setup.js" hidden="true"/>
        <files mask="functions_dup.js" hidden="true"/>
        <files mask="classerpc_1_1_transport_arbitrator.js" hidden="true"/>
        <files mask="group__client__setup.js" hidden="true"/>
        <files mask="classerpc_1_1_basic_codec_factory.js" hidden="true"/>
        <files mask="classerpc_1_1_message_buffer_factory.js" hidden="true"/>
        <files mask="navtreeindex1.js" hidden="true"/>
        <files mask="classerpc_1_1_transport_factory.js" hidden="true"/>
        <files mask="navtreeindex2.js" hidden="true"/>
        <files mask="erpc__client__manager_8h.js" hidden="true"/>
        <files mask="classerpc_1_1_inter_thread_buffer_transport.js" hidden="true"/>
        <files mask="classerpc_1_1_transport.js" hidden="true"/>
        <files mask="classerpc_1_1_message_loggers.js" hidden="true"/>
        <files mask="erpc__serial_8h.js" hidden="true"/>
        <files mask="group__infra__transport.js" hidden="true"/>
        <files mask="classerpc_1_1_manually_constructed.js" hidden="true"/>
        <files mask="class_r_p_msg_message_buffer_factory.js" hidden="true"/>
        <files mask="group__rpmsg__lite__rtos__transport.js" hidden="true"/>
        <files mask="erpc__pre__post__action_8h.js" hidden="true"/>
        <files mask="classerpc_1_1_codec_factory.js" hidden="true"/>
        <files mask="group__mu__transport.js" hidden="true"/>
        <files mask="classerpc_1_1_client_manager.js" hidden="true"/>
        <files mask="group__rpmsg__tty__rtos__transport.js" hidden="true"/>
        <files mask="group__uart__transport.js" hidden="true"/>
        <files mask="class_dynamic_message_buffer_factory.js" hidden="true"/>
        <files mask="group__tcp__transport.js" hidden="true"/>
        <files mask="navtreeindex3.js" hidden="true"/>
        <files mask="group__infra__codec.js" hidden="true"/>
        <files mask="navtreeindex0.js" hidden="true"/>
        <files mask="annotated_dup.js" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_t_t_y_r_t_o_s_transport.js" hidden="true"/>
        <files mask="erpc__threading_8h.js" hidden="true"/>
        <files mask="classerpc_1_1_dspi_slave_transport.js" hidden="true"/>
        <files mask="classerpc_1_1_framed_transport.js" hidden="true"/>
        <files mask="classerpc_1_1_pre_post_action.js" hidden="true"/>
        <files mask="classerpc_1_1_simple_server.js" hidden="true"/>
        <files mask="erpc__codec_8h.js" hidden="true"/>
        <files mask="group__infra__server.js" hidden="true"/>
        <files mask="navtreedata.js" hidden="true"/>
        <files mask="erpc__port_8h.js" hidden="true"/>
        <files mask="classerpc_1_1_mutex.js" hidden="true"/>
        <files mask="classerpc_1_1_r_p_msg_linux_transport.js" hidden="true"/>
        <files mask="classerpc_1_1_usb_cdc_transport.js" hidden="true"/>
        <files mask="classerpc_1_1_message_buffer.js" hidden="true"/>
        <files mask="modules.js" hidden="true"/>
        <files mask="classerpc_1_1_message_logger.js" hidden="true"/>
      </source>
      <source relative_path="erpc/docs/eRPC_infrastructure/eRPC" project_relative_path="doc" type="image">
        <files mask="bc_s.png" hidden="true"/>
        <files mask="folderopen.png" hidden="true"/>
        <files mask="tab_a.png" hidden="true"/>
        <files mask="sync_off.png" hidden="true"/>
        <files mask="closed.png" hidden="true"/>
        <files mask="arrowright.png" hidden="true"/>
        <files mask="sync_on.png" hidden="true"/>
        <files mask="rpc_block_diagram.png" hidden="true"/>
        <files mask="splitbar.png" hidden="true"/>
        <files mask="doc.png" hidden="true"/>
        <files mask="tab_h.png" hidden="true"/>
        <files mask="bdwn.png" hidden="true"/>
        <files mask="tab_b.png" hidden="true"/>
        <files mask="nav_h.png" hidden="true"/>
        <files mask="folderclosed.png" hidden="true"/>
        <files mask="nxp_logo_small.png" hidden="true"/>
        <files mask="arrowdown.png" hidden="true"/>
        <files mask="nav_f.png" hidden="true"/>
        <files mask="nav_g.png" hidden="true"/>
        <files mask="doxygen.png" hidden="true"/>
        <files mask="tab_s.png" hidden="true"/>
        <files mask="open.png" hidden="true"/>
      </source>
      <source relative_path="erpc/docs/eRPC_infrastructure/eRPC/search" project_relative_path="doc" type="doc">
        <files mask="all_4.html" hidden="true"/>
        <files mask="classes_8.html" hidden="true"/>
        <files mask="classes_b.html" hidden="true"/>
        <files mask="groups_9.html" hidden="true"/>
        <files mask="nomatches.html" hidden="true"/>
        <files mask="all_15.html" hidden="true"/>
        <files mask="functions_b.html" hidden="true"/>
        <files mask="all_10.html" hidden="true"/>
        <files mask="groups_5.html" hidden="true"/>
        <files mask="groups_1.html" hidden="true"/>
        <files mask="all_7.html" hidden="true"/>
        <files mask="pages_0.html" hidden="true"/>
        <files mask="all_11.html" hidden="true"/>
        <files mask="all_e.html" hidden="true"/>
        <files mask="all_f.html" hidden="true"/>
        <files mask="groups_8.html" hidden="true"/>
        <files mask="functions_c.html" hidden="true"/>
        <files mask="groups_6.html" hidden="true"/>
        <files mask="groups_3.html" hidden="true"/>
        <files mask="functions_11.html" hidden="true"/>
        <files mask="functions_2.html" hidden="true"/>
        <files mask="typedefs_2.html" hidden="true"/>
        <files mask="enums_0.html" hidden="true"/>
        <files mask="all_a.html" hidden="true"/>
        <files mask="all_0.html" hidden="true"/>
        <files mask="all_c.html" hidden="true"/>
        <files mask="all_6.html" hidden="true"/>
        <files mask="functions_3.html" hidden="true"/>
        <files mask="groups_0.html" hidden="true"/>
        <files mask="variables_2.html" hidden="true"/>
        <files mask="variables_0.html" hidden="true"/>
        <files mask="classes_6.html" hidden="true"/>
        <files mask="all_8.html" hidden="true"/>
        <files mask="typedefs_3.html" hidden="true"/>
        <files mask="all_14.html" hidden="true"/>
        <files mask="classes_d.html" hidden="true"/>
        <files mask="functions_a.html" hidden="true"/>
        <files mask="variables_1.html" hidden="true"/>
        <files mask="functions_10.html" hidden="true"/>
        <files mask="functions_12.html" hidden="true"/>
        <files mask="classes_1.html" hidden="true"/>
        <files mask="all_d.html" hidden="true"/>
        <files mask="groups_4.html" hidden="true"/>
        <files mask="functions_f.html" hidden="true"/>
        <files mask="functions_0.html" hidden="true"/>
        <files mask="classes_c.html" hidden="true"/>
        <files mask="classes_9.html" hidden="true"/>
        <files mask="functions_7.html" hidden="true"/>
        <files mask="functions_e.html" hidden="true"/>
        <files mask="all_b.html" hidden="true"/>
        <files mask="classes_2.html" hidden="true"/>
        <files mask="functions_9.html" hidden="true"/>
        <files mask="all_1.html" hidden="true"/>
        <files mask="functions_6.html" hidden="true"/>
        <files mask="all_5.html" hidden="true"/>
        <files mask="classes_4.html" hidden="true"/>
        <files mask="enums_1.html" hidden="true"/>
        <files mask="all_3.html" hidden="true"/>
        <files mask="functions_4.html" hidden="true"/>
        <files mask="enumvalues_0.html" hidden="true"/>
        <files mask="all_12.html" hidden="true"/>
        <files mask="functions_d.html" hidden="true"/>
        <files mask="all_9.html" hidden="true"/>
        <files mask="functions_8.html" hidden="true"/>
        <files mask="classes_3.html" hidden="true"/>
        <files mask="functions_5.html" hidden="true"/>
        <files mask="typedefs_0.html" hidden="true"/>
        <files mask="all_13.html" hidden="true"/>
        <files mask="classes_7.html" hidden="true"/>
        <files mask="classes_0.html" hidden="true"/>
        <files mask="classes_5.html" hidden="true"/>
        <files mask="classes_a.html" hidden="true"/>
        <files mask="search.css" hidden="true"/>
        <files mask="typedefs_1.html" hidden="true"/>
        <files mask="all_2.html" hidden="true"/>
        <files mask="groups_2.html" hidden="true"/>
        <files mask="functions_1.html" hidden="true"/>
        <files mask="groups_7.html" hidden="true"/>
        <files mask="files_0.html" hidden="true"/>
      </source>
      <source relative_path="erpc/docs/eRPC_infrastructure/eRPC/search" project_relative_path="doc" type="script">
        <files mask="all_2.js" hidden="true"/>
        <files mask="functions_8.js" hidden="true"/>
        <files mask="all_9.js" hidden="true"/>
        <files mask="groups_1.js" hidden="true"/>
        <files mask="functions_b.js" hidden="true"/>
        <files mask="functions_12.js" hidden="true"/>
        <files mask="pages_0.js" hidden="true"/>
        <files mask="functions_3.js" hidden="true"/>
        <files mask="functions_d.js" hidden="true"/>
        <files mask="all_1.js" hidden="true"/>
        <files mask="all_13.js" hidden="true"/>
        <files mask="groups_6.js" hidden="true"/>
        <files mask="classes_6.js" hidden="true"/>
        <files mask="functions_5.js" hidden="true"/>
        <files mask="functions_7.js" hidden="true"/>
        <files mask="all_3.js" hidden="true"/>
        <files mask="all_0.js" hidden="true"/>
        <files mask="functions_2.js" hidden="true"/>
        <files mask="classes_9.js" hidden="true"/>
        <files mask="functions_6.js" hidden="true"/>
        <files mask="functions_0.js" hidden="true"/>
        <files mask="functions_11.js" hidden="true"/>
        <files mask="classes_4.js" hidden="true"/>
        <files mask="all_b.js" hidden="true"/>
        <files mask="classes_1.js" hidden="true"/>
        <files mask="typedefs_0.js" hidden="true"/>
        <files mask="groups_5.js" hidden="true"/>
        <files mask="all_d.js" hidden="true"/>
        <files mask="functions_f.js" hidden="true"/>
        <files mask="all_14.js" hidden="true"/>
        <files mask="classes_a.js" hidden="true"/>
        <files mask="groups_0.js" hidden="true"/>
        <files mask="classes_0.js" hidden="true"/>
        <files mask="enumvalues_0.js" hidden="true"/>
        <files mask="all_11.js" hidden="true"/>
        <files mask="files_0.js" hidden="true"/>
        <files mask="all_6.js" hidden="true"/>
        <files mask="groups_3.js" hidden="true"/>
        <files mask="variables_1.js" hidden="true"/>
        <files mask="all_15.js" hidden="true"/>
        <files mask="all_10.js" hidden="true"/>
        <files mask="enums_0.js" hidden="true"/>
        <files mask="functions_e.js" hidden="true"/>
        <files mask="all_4.js" hidden="true"/>
        <files mask="variables_0.js" hidden="true"/>
        <files mask="all_a.js" hidden="true"/>
        <files mask="classes_5.js" hidden="true"/>
        <files mask="classes_3.js" hidden="true"/>
        <files mask="groups_8.js" hidden="true"/>
        <files mask="all_c.js" hidden="true"/>
        <files mask="classes_8.js" hidden="true"/>
        <files mask="functions_4.js" hidden="true"/>
        <files mask="searchdata.js" hidden="true"/>
        <files mask="functions_9.js" hidden="true"/>
        <files mask="all_e.js" hidden="true"/>
        <files mask="variables_2.js" hidden="true"/>
        <files mask="functions_10.js" hidden="true"/>
        <files mask="groups_9.js" hidden="true"/>
        <files mask="all_8.js" hidden="true"/>
        <files mask="functions_c.js" hidden="true"/>
        <files mask="typedefs_2.js" hidden="true"/>
        <files mask="functions_1.js" hidden="true"/>
        <files mask="typedefs_3.js" hidden="true"/>
        <files mask="search.js" hidden="true"/>
        <files mask="classes_c.js" hidden="true"/>
        <files mask="typedefs_1.js" hidden="true"/>
        <files mask="all_5.js" hidden="true"/>
        <files mask="enums_1.js" hidden="true"/>
        <files mask="groups_7.js" hidden="true"/>
        <files mask="all_12.js" hidden="true"/>
        <files mask="classes_2.js" hidden="true"/>
        <files mask="all_f.js" hidden="true"/>
        <files mask="groups_2.js" hidden="true"/>
        <files mask="all_7.js" hidden="true"/>
        <files mask="classes_b.js" hidden="true"/>
        <files mask="functions_a.js" hidden="true"/>
        <files mask="classes_7.js" hidden="true"/>
        <files mask="groups_4.js" hidden="true"/>
        <files mask="classes_d.js" hidden="true"/>
      </source>
      <source relative_path="erpc/docs/eRPC_infrastructure/eRPC/search" project_relative_path="doc" type="image">
        <files mask="close.png" hidden="true"/>
        <files mask="search_l.png" hidden="true"/>
        <files mask="search_r.png" hidden="true"/>
        <files mask="mag_sel.png" hidden="true"/>
        <files mask="search_m.png" hidden="true"/>
      </source>
      <source relative_path="erpc/docs/eRPC_infrastructure/erpcgen" project_relative_path="doc" type="doc">
        <files mask="dir_5d74497626cd518006bfc4bb021f3cae.html" hidden="true"/>
        <files mask="functions_u.html" hidden="true"/>
        <files mask="classerpcgen_1_1_symbol_scope.html" hidden="true"/>
        <files mask="classerpcgen_1_1_union_type.html" hidden="true"/>
        <files mask="class_opt_argv_iter.html" hidden="true"/>
        <files mask="classerpcgen_1_1_python_generator-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_union_case.html" hidden="true"/>
        <files mask="classerpcgen_1_1_union_type-members.html" hidden="true"/>
        <files mask="_struct_type_8h_source.html" hidden="true"/>
        <files mask="classerpcgen_1_1_data_type-members.html" hidden="true"/>
        <files mask="functions_func_a.html" hidden="true"/>
        <files mask="functions_k.html" hidden="true"/>
        <files mask="classerpcgen_1_1_function_type.html" hidden="true"/>
        <files mask="classsmart__ptr-members.html" hidden="true"/>
        <files mask="options_8h_source.html" hidden="true"/>
        <files mask="functions_func_m.html" hidden="true"/>
        <files mask="class_log_1_1_set_output_level-members.html" hidden="true"/>
        <files mask="classcpptempl_1_1_data_value.html" hidden="true"/>
        <files mask="functions_func_j.html" hidden="true"/>
        <files mask="classerpcgen_1_1_builtin_type.html" hidden="true"/>
        <files mask="class_opt_iter-members.html" hidden="true"/>
        <files mask="class_opt_argv_iter-members.html" hidden="true"/>
        <files mask="functions_type.html" hidden="true"/>
        <files mask="classerpcgen_1_1syntax__error.html" hidden="true"/>
        <files mask="functions_s.html" hidden="true"/>
        <files mask="dir_b0461de83f30261a836ec46318e22617.html" hidden="true"/>
        <files mask="functions_func_f.html" hidden="true"/>
        <files mask="classerpcgen_1_1_list_type.html" hidden="true"/>
        <files mask="classerpcgen_1_1semantic__error-members.html" hidden="true"/>
        <files mask="structsmart__ptr__delete-members.html" hidden="true"/>
        <files mask="_enum_member_8h_source.html" hidden="true"/>
        <files mask="classerpcgen_1_1erpcgen_tool.html" hidden="true"/>
        <files mask="class_option_spec-members.html" hidden="true"/>
        <files mask="classcpptempl_1_1data__map_1_1key__error.html" hidden="true"/>
        <files mask="functions_v.html" hidden="true"/>
        <files mask="functions_func_h.html" hidden="true"/>
        <files mask="functions_func_e.html" hidden="true"/>
        <files mask="functions_b.html" hidden="true"/>
        <files mask="functions_func_l.html" hidden="true"/>
        <files mask="functions_func_g.html" hidden="true"/>
        <files mask="_unique_id_checker_8h_source.html" hidden="true"/>
        <files mask="structerpcgen_1_1token__loc__t.html" hidden="true"/>
        <files mask="_parse_errors_8h_source.html" hidden="true"/>
        <files mask="functions_y.html" hidden="true"/>
        <files mask="os__config_8h_source.html" hidden="true"/>
        <files mask="classerpcgen_1_1_interface.html" hidden="true"/>
        <files mask="functions_q.html" hidden="true"/>
        <files mask="class_stdout_logger.html" hidden="true"/>
        <files mask="functions_eval.html" hidden="true"/>
        <files mask="_symbol_scanner_8h_source.html" hidden="true"/>
        <files mask="_union_type_8h_source.html" hidden="true"/>
        <files mask="functions_func_t.html" hidden="true"/>
        <files mask="class_value.html" hidden="true"/>
        <files mask="_struct_member_8h_source.html" hidden="true"/>
        <files mask="classerpcgen_1_1lexical__error.html" hidden="true"/>
        <files mask="classerpcgen_1_1_interface-members.html" hidden="true"/>
        <files mask="class_options-members.html" hidden="true"/>
        <files mask="class_string_value.html" hidden="true"/>
        <files mask="classerpcgen_1_1_generator.html" hidden="true"/>
        <files mask="_const_type_8h_source.html" hidden="true"/>
        <files mask="classerpcgen_1_1erpcgen_tool-members.html" hidden="true"/>
        <files mask="functions_func_y.html" hidden="true"/>
        <files mask="functions_t.html" hidden="true"/>
        <files mask="functions_func_u.html" hidden="true"/>
        <files mask="functions_func_0x7e.html" hidden="true"/>
        <files mask="classerpcgen_1_1_python_generator.html" hidden="true"/>
        <files mask="functions_func_s.html" hidden="true"/>
        <files mask="structsmart__ptr__free-members.html" hidden="true"/>
        <files mask="functions_c.html" hidden="true"/>
        <files mask="functions_func_b.html" hidden="true"/>
        <files mask="functions_func_w.html" hidden="true"/>
        <files mask="classerpcgen_1_1_array_type-members.html" hidden="true"/>
        <files mask="class_integer_value.html" hidden="true"/>
        <files mask="class_opt_istream_iter-members.html" hidden="true"/>
        <files mask="annotations_8h_source.html" hidden="true"/>
        <files mask="dir_61c3f993326311b905af09f643fec799.html" hidden="true"/>
        <files mask="_alias_type_8h_source.html" hidden="true"/>
        <files mask="classerpcgen_1_1_symbol_scanner.html" hidden="true"/>
        <files mask="classcpptempl_1_1_data_template.html" hidden="true"/>
        <files mask="_enum_type_8h_source.html" hidden="true"/>
        <files mask="classerpcgen_1_1_struct_member.html" hidden="true"/>
        <files mask="_logging_8h_source.html" hidden="true"/>
        <files mask="classerpcgen_1_1syntax__error-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_const_type.html" hidden="true"/>
        <files mask="classerpcgen_1_1_const_type-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_void_type.html" hidden="true"/>
        <files mask="classerpcgen_1_1_function_base.html" hidden="true"/>
        <files mask="structsmart__ptr__free.html" hidden="true"/>
        <files mask="classerpcgen_1_1lexical__error-members.html" hidden="true"/>
        <files mask="classcpptempl_1_1data__map-members.html" hidden="true"/>
        <files mask="_array_type_8h_source.html" hidden="true"/>
        <files mask="classerpcgen_1_1_interface_definition-members.html" hidden="true"/>
        <files mask="classcpptempl_1_1_data_value-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_ast_node-members.html" hidden="true"/>
        <files mask="_token_8h_source.html" hidden="true"/>
        <files mask="class_logger-members.html" hidden="true"/>
        <files mask="class_opt_iter_rwd.html" hidden="true"/>
        <files mask="structsmart__ptr__delete.html" hidden="true"/>
        <files mask="classes.html" hidden="true"/>
        <files mask="classerpcgen_1_1_current_file_info-members.html" hidden="true"/>
        <files mask="_union_case_8h_source.html" hidden="true"/>
        <files mask="classerpcgen_1_1internal__error.html" hidden="true"/>
        <files mask="_ast_walker_8h_source.html" hidden="true"/>
        <files mask="classcpptempl_1_1_template_exception.html" hidden="true"/>
        <files mask="_data_type_8h_source.html" hidden="true"/>
        <files mask="class_logger.html" hidden="true"/>
        <files mask="classerpcgen_1_1_symbol_scope_1_1typed__iterator-members.html" hidden="true"/>
        <files mask="class_path_searcher.html" hidden="true"/>
        <files mask="classerpcgen_1_1_group-members.html" hidden="true"/>
        <files mask="classcpptempl_1_1_template_exception-members.html" hidden="true"/>
        <files mask="annotated.html" hidden="true"/>
        <files mask="_annotation_8h_source.html" hidden="true"/>
        <files mask="functions_g.html" hidden="true"/>
        <files mask="_ast_node_8h_source.html" hidden="true"/>
        <files mask="classcpptempl_1_1_data_bool.html" hidden="true"/>
        <files mask="classerpcgen_1_1_erpc_lexer-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_function-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_annotation-members.html" hidden="true"/>
        <files mask="functions_h.html" hidden="true"/>
        <files mask="classerpcgen_1_1_enum_type.html" hidden="true"/>
        <files mask="_symbol_8h_source.html" hidden="true"/>
        <files mask="smart__ptr_8h_source.html" hidden="true"/>
        <files mask="navtree.css" hidden="true"/>
        <files mask="classerpcgen_1_1syntax__error2.html" hidden="true"/>
        <files mask="classerpcgen_1_1_enum_member-members.html" hidden="true"/>
        <files mask="_interface_8h_source.html" hidden="true"/>
        <files mask="classerpcgen_1_1_ast_node.html" hidden="true"/>
        <files mask="_group_8h_source.html" hidden="true"/>
        <files mask="functions_n.html" hidden="true"/>
        <files mask="functions_func_v.html" hidden="true"/>
        <files mask="functions_vars.html" hidden="true"/>
        <files mask="_generator_8h_source.html" hidden="true"/>
        <files mask="classerpcgen_1_1_function.html" hidden="true"/>
        <files mask="dir_acfaa839b8ffb0f73c7c3063e82240f2.html" hidden="true"/>
        <files mask="classcpptempl_1_1_data_int.html" hidden="true"/>
        <files mask="class_options.html" hidden="true"/>
        <files mask="_hex_values_8h_source.html" hidden="true"/>
        <files mask="functions_0x7e.html" hidden="true"/>
        <files mask="classerpcgen_1_1_array_type.html" hidden="true"/>
        <files mask="classerpcgen_1_1_interface_definition.html" hidden="true"/>
        <files mask="classerpcgen_1_1_ast_walker-members.html" hidden="true"/>
        <files mask="functions_i.html" hidden="true"/>
        <files mask="functions_a.html" hidden="true"/>
        <files mask="class_log-members.html" hidden="true"/>
        <files mask="classcpptempl_1_1_data_map.html" hidden="true"/>
        <files mask="_symbol_scope_8h_source.html" hidden="true"/>
        <files mask="classerpcgen_1_1_struct_type.html" hidden="true"/>
        <files mask="_function_8h_source.html" hidden="true"/>
        <files mask="functions_func_c.html" hidden="true"/>
        <files mask="class_string_value-members.html" hidden="true"/>
        <files mask="files.html" hidden="true"/>
        <files mask="classcpptempl_1_1_data_int-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_erpc_lexer.html" hidden="true"/>
        <files mask="class_opt_iter_rwd-members.html" hidden="true"/>
        <files mask="_builtin_type_8h_source.html" hidden="true"/>
        <files mask="classerpcgen_1_1_group.html" hidden="true"/>
        <files mask="classcpptempl_1_1data__ptr.html" hidden="true"/>
        <files mask="functions_func_d.html" hidden="true"/>
        <files mask="functions_m.html" hidden="true"/>
        <files mask="class_log_1_1_set_output_level.html" hidden="true"/>
        <files mask="_function_type_8h_source.html" hidden="true"/>
        <files mask="functions_p.html" hidden="true"/>
        <files mask="classerpcgen_1_1erpc__error-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_ast_printer.html" hidden="true"/>
        <files mask="functions_f.html" hidden="true"/>
        <files mask="class_integer_value-members.html" hidden="true"/>
        <files mask="index.html" hidden="true"/>
        <files mask="_interface_definition_8h_source.html" hidden="true"/>
        <files mask="classerpcgen_1_1_unique_id_checker-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1syntax__error2-members.html" hidden="true"/>
        <files mask="classcpptempl_1_1data__map_1_1key__error-members.html" hidden="true"/>
        <files mask="_value_8h_source.html" hidden="true"/>
        <files mask="classerpcgen_1_1_enum_type-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_ast_printer-members.html" hidden="true"/>
        <files mask="functions_e.html" hidden="true"/>
        <files mask="functions_func_n.html" hidden="true"/>
        <files mask="class_float_value-members.html" hidden="true"/>
        <files mask="classcpptempl_1_1_data_list.html" hidden="true"/>
        <files mask="classcpptempl_1_1_data_template-members.html" hidden="true"/>
        <files mask="class_log.html" hidden="true"/>
        <files mask="classerpcgen_1_1_void_type-members.html" hidden="true"/>
        <files mask="_program_8h_source.html" hidden="true"/>
        <files mask="classcpptempl_1_1_data_map-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_builtin_type-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_symbol.html" hidden="true"/>
        <files mask="functions_l.html" hidden="true"/>
        <files mask="classcpptempl_1_1_data_list-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_list_type-members.html" hidden="true"/>
        <files mask="tabs.css" hidden="true"/>
        <files mask="classcpptempl_1_1data__map.html" hidden="true"/>
        <files mask="classerpcgen_1_1_token-members.html" hidden="true"/>
        <files mask="functions.html" hidden="true"/>
        <files mask="classerpcgen_1_1erpc__error.html" hidden="true"/>
        <files mask="classerpcgen_1_1_alias_type.html" hidden="true"/>
        <files mask="format__string_8h_source.html" hidden="true"/>
        <files mask="class_path_searcher-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_symbol_scanner-members.html" hidden="true"/>
        <files mask="class_opt_str_tok_iter-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_ast_walker.html" hidden="true"/>
        <files mask="doxygen.css" hidden="true"/>
        <files mask="class_stdout_logger-members.html" hidden="true"/>
        <files mask="_erpc_lexer_8h_source.html" hidden="true"/>
        <files mask="functions_o.html" hidden="true"/>
        <files mask="class_opt_str_tok_iter.html" hidden="true"/>
        <files mask="structerpcgen_1_1token__loc__t-members.html" hidden="true"/>
        <files mask="class_value-members.html" hidden="true"/>
        <files mask="functions_func_o.html" hidden="true"/>
        <files mask="classerpcgen_1_1_enum_member.html" hidden="true"/>
        <files mask="classerpcgen_1_1_token.html" hidden="true"/>
        <files mask="classerpcgen_1_1_c_generator-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_unique_id_checker.html" hidden="true"/>
        <files mask="classerpcgen_1_1_annotation.html" hidden="true"/>
        <files mask="classerpcgen_1_1_function_base-members.html" hidden="true"/>
        <files mask="functions_func_r.html" hidden="true"/>
        <files mask="classcpptempl_1_1_data-members.html" hidden="true"/>
        <files mask="_void_type_8h_source.html" hidden="true"/>
        <files mask="class_opt_iter.html" hidden="true"/>
        <files mask="classcpptempl_1_1_data_bool-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_program-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_generator-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_union_case-members.html" hidden="true"/>
        <files mask="functions_d.html" hidden="true"/>
        <files mask="classerpcgen_1_1_function_type-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1internal__error-members.html" hidden="true"/>
        <files mask="hierarchy.html" hidden="true"/>
        <files mask="functions_enum.html" hidden="true"/>
        <files mask="classerpcgen_1_1_symbol-members.html" hidden="true"/>
        <files mask="classcpptempl_1_1data__ptr-members.html" hidden="true"/>
        <files mask="functions_r.html" hidden="true"/>
        <files mask="class_option_spec.html" hidden="true"/>
        <files mask="functions_func_i.html" hidden="true"/>
        <files mask="classerpcgen_1_1_current_file_info.html" hidden="true"/>
        <files mask="_python_generator_8h_source.html" hidden="true"/>
        <files mask="classerpcgen_1_1_symbol_scope_1_1typed__iterator.html" hidden="true"/>
        <files mask="class_float_value.html" hidden="true"/>
        <files mask="classsmart__ptr.html" hidden="true"/>
        <files mask="structsmart__ptr__delete__array.html" hidden="true"/>
        <files mask="classerpcgen_1_1_alias_type-members.html" hidden="true"/>
        <files mask="_c_generator_8h_source.html" hidden="true"/>
        <files mask="classerpcgen_1_1_struct_member-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_struct_type-members.html" hidden="true"/>
        <files mask="classerpcgen_1_1_program.html" hidden="true"/>
        <files mask="classerpcgen_1_1_c_generator.html" hidden="true"/>
        <files mask="functions_func.html" hidden="true"/>
        <files mask="classerpcgen_1_1semantic__error.html" hidden="true"/>
        <files mask="classerpcgen_1_1_data_type.html" hidden="true"/>
        <files mask="functions_j.html" hidden="true"/>
        <files mask="classcpptempl_1_1_data.html" hidden="true"/>
        <files mask="customdoxygen.css" hidden="true"/>
        <files mask="functions_w.html" hidden="true"/>
        <files mask="structsmart__ptr__delete__array-members.html" hidden="true"/>
        <files mask="_search_path_8h_source.html" hidden="true"/>
        <files mask="classerpcgen_1_1_symbol_scope-members.html" hidden="true"/>
        <files mask="class_opt_istream_iter.html" hidden="true"/>
        <files mask="cpptempl_8h_source.html" hidden="true"/>
        <files mask="_list_type_8h_source.html" hidden="true"/>
        <files mask="functions_func_p.html" hidden="true"/>
      </source>
      <source relative_path="erpc/docs/eRPC_infrastructure/erpcgen" project_relative_path="doc" type="script">
        <files mask="classcpptempl_1_1_data_value.js" hidden="true"/>
        <files mask="classerpcgen_1_1erpc__error.js" hidden="true"/>
        <files mask="files.js" hidden="true"/>
        <files mask="classerpcgen_1_1_symbol_scope.js" hidden="true"/>
        <files mask="class_value.js" hidden="true"/>
        <files mask="hierarchy.js" hidden="true"/>
        <files mask="classerpcgen_1_1_struct_member.js" hidden="true"/>
        <files mask="classerpcgen_1_1_enum_member.js" hidden="true"/>
        <files mask="classsmart__ptr.js" hidden="true"/>
        <files mask="dynsections.js" hidden="true"/>
        <files mask="functions_func.js" hidden="true"/>
        <files mask="classerpcgen_1_1_function.js" hidden="true"/>
        <files mask="classcpptempl_1_1data__map_1_1key__error.js" hidden="true"/>
        <files mask="classerpcgen_1_1_python_generator.js" hidden="true"/>
        <files mask="classerpcgen_1_1_function_type.js" hidden="true"/>
        <files mask="classerpcgen_1_1lexical__error.js" hidden="true"/>
        <files mask="classerpcgen_1_1_union_case.js" hidden="true"/>
        <files mask="classerpcgen_1_1_union_type.js" hidden="true"/>
        <files mask="class_path_searcher.js" hidden="true"/>
        <files mask="class_string_value.js" hidden="true"/>
        <files mask="class_log_1_1_set_output_level.js" hidden="true"/>
        <files mask="classcpptempl_1_1_data.js" hidden="true"/>
        <files mask="class_opt_istream_iter.js" hidden="true"/>
        <files mask="classerpcgen_1_1_symbol_scope_1_1typed__iterator.js" hidden="true"/>
        <files mask="classerpcgen_1_1_alias_type.js" hidden="true"/>
        <files mask="class_integer_value.js" hidden="true"/>
        <files mask="classcpptempl_1_1data__ptr.js" hidden="true"/>
        <files mask="classerpcgen_1_1_c_generator.js" hidden="true"/>
        <files mask="navtreeindex4.js" hidden="true"/>
        <files mask="classerpcgen_1_1_erpc_lexer.js" hidden="true"/>
        <files mask="classerpcgen_1_1_struct_type.js" hidden="true"/>
        <files mask="class_opt_iter_rwd.js" hidden="true"/>
        <files mask="classerpcgen_1_1_data_type.js" hidden="true"/>
        <files mask="classerpcgen_1_1_enum_type.js" hidden="true"/>
        <files mask="classerpcgen_1_1_list_type.js" hidden="true"/>
        <files mask="classerpcgen_1_1_generator.js" hidden="true"/>
        <files mask="classerpcgen_1_1internal__error.js" hidden="true"/>
        <files mask="classerpcgen_1_1_current_file_info.js" hidden="true"/>
        <files mask="classerpcgen_1_1erpcgen_tool.js" hidden="true"/>
        <files mask="classcpptempl_1_1data__map.js" hidden="true"/>
        <files mask="classerpcgen_1_1_unique_id_checker.js" hidden="true"/>
        <files mask="jquery.js" hidden="true"/>
        <files mask="class_float_value.js" hidden="true"/>
        <files mask="class_log.js" hidden="true"/>
        <files mask="navtree.js" hidden="true"/>
        <files mask="resize.js" hidden="true"/>
        <files mask="classerpcgen_1_1_ast_printer.js" hidden="true"/>
        <files mask="classcpptempl_1_1_data_map.js" hidden="true"/>
        <files mask="classcpptempl_1_1_data_list.js" hidden="true"/>
        <files mask="class_opt_iter.js" hidden="true"/>
        <files mask="classerpcgen_1_1_void_type.js" hidden="true"/>
        <files mask="classerpcgen_1_1_symbol.js" hidden="true"/>
        <files mask="classerpcgen_1_1semantic__error.js" hidden="true"/>
        <files mask="structerpcgen_1_1token__loc__t.js" hidden="true"/>
        <files mask="classerpcgen_1_1syntax__error2.js" hidden="true"/>
        <files mask="class_options.js" hidden="true"/>
        <files mask="functions_dup.js" hidden="true"/>
        <files mask="navtreeindex1.js" hidden="true"/>
        <files mask="navtreeindex2.js" hidden="true"/>
        <files mask="classerpcgen_1_1syntax__error.js" hidden="true"/>
        <files mask="classerpcgen_1_1_builtin_type.js" hidden="true"/>
        <files mask="classerpcgen_1_1_interface_definition.js" hidden="true"/>
        <files mask="class_option_spec.js" hidden="true"/>
        <files mask="classerpcgen_1_1_array_type.js" hidden="true"/>
        <files mask="navtreeindex3.js" hidden="true"/>
        <files mask="classerpcgen_1_1_program.js" hidden="true"/>
        <files mask="classcpptempl_1_1_data_bool.js" hidden="true"/>
        <files mask="navtreeindex0.js" hidden="true"/>
        <files mask="classerpcgen_1_1_function_base.js" hidden="true"/>
        <files mask="classerpcgen_1_1_annotation.js" hidden="true"/>
        <files mask="annotated_dup.js" hidden="true"/>
        <files mask="classcpptempl_1_1_data_template.js" hidden="true"/>
        <files mask="classcpptempl_1_1_data_int.js" hidden="true"/>
        <files mask="class_opt_argv_iter.js" hidden="true"/>
        <files mask="classerpcgen_1_1_group.js" hidden="true"/>
        <files mask="class_stdout_logger.js" hidden="true"/>
        <files mask="classcpptempl_1_1_template_exception.js" hidden="true"/>
        <files mask="classerpcgen_1_1_ast_walker.js" hidden="true"/>
        <files mask="classerpcgen_1_1_ast_node.js" hidden="true"/>
        <files mask="navtreedata.js" hidden="true"/>
        <files mask="classerpcgen_1_1_token.js" hidden="true"/>
        <files mask="classerpcgen_1_1_const_type.js" hidden="true"/>
        <files mask="class_logger.js" hidden="true"/>
        <files mask="class_opt_str_tok_iter.js" hidden="true"/>
        <files mask="classerpcgen_1_1_interface.js" hidden="true"/>
        <files mask="classerpcgen_1_1_symbol_scanner.js" hidden="true"/>
      </source>
      <source relative_path="erpc/docs/eRPC_infrastructure/erpcgen" project_relative_path="doc" type="image">
        <files mask="classerpcgen_1_1_enum_member.png" hidden="true"/>
        <files mask="classerpcgen_1_1_struct_member.png" hidden="true"/>
        <files mask="class_opt_iter.png" hidden="true"/>
        <files mask="classerpcgen_1_1_function_base.png" hidden="true"/>
        <files mask="class_opt_argv_iter.png" hidden="true"/>
        <files mask="class_opt_iter_rwd.png" hidden="true"/>
        <files mask="classcpptempl_1_1_data.png" hidden="true"/>
        <files mask="bc_s.png" hidden="true"/>
        <files mask="classerpcgen_1_1_c_generator.png" hidden="true"/>
        <files mask="class_opt_str_tok_iter.png" hidden="true"/>
        <files mask="folderopen.png" hidden="true"/>
        <files mask="classerpcgen_1_1_builtin_type.png" hidden="true"/>
        <files mask="tab_a.png" hidden="true"/>
        <files mask="classerpcgen_1_1_interface.png" hidden="true"/>
        <files mask="class_logger.png" hidden="true"/>
        <files mask="class_stdout_logger.png" hidden="true"/>
        <files mask="sync_off.png" hidden="true"/>
        <files mask="classerpcgen_1_1erpc__error.png" hidden="true"/>
        <files mask="classerpcgen_1_1semantic__error.png" hidden="true"/>
        <files mask="classerpcgen_1_1_function_type.png" hidden="true"/>
        <files mask="classerpcgen_1_1_symbol.png" hidden="true"/>
        <files mask="classerpcgen_1_1_function.png" hidden="true"/>
        <files mask="classerpcgen_1_1_union_type.png" hidden="true"/>
        <files mask="classcpptempl_1_1_data_list.png" hidden="true"/>
        <files mask="classerpcgen_1_1_const_type.png" hidden="true"/>
        <files mask="classcpptempl_1_1_data_value.png" hidden="true"/>
        <files mask="classerpcgen_1_1_array_type.png" hidden="true"/>
        <files mask="closed.png" hidden="true"/>
        <files mask="classcpptempl_1_1_template_exception.png" hidden="true"/>
        <files mask="classcpptempl_1_1data__map_1_1key__error.png" hidden="true"/>
        <files mask="classerpcgen_1_1_enum_type.png" hidden="true"/>
        <files mask="classcpptempl_1_1_data_int.png" hidden="true"/>
        <files mask="arrowright.png" hidden="true"/>
        <files mask="classerpcgen_1_1_ast_walker.png" hidden="true"/>
        <files mask="sync_on.png" hidden="true"/>
        <files mask="classerpcgen_1_1_data_type.png" hidden="true"/>
        <files mask="classerpcgen_1_1lexical__error.png" hidden="true"/>
        <files mask="classerpcgen_1_1_void_type.png" hidden="true"/>
        <files mask="classerpcgen_1_1syntax__error.png" hidden="true"/>
        <files mask="classcpptempl_1_1_data_template.png" hidden="true"/>
        <files mask="class_integer_value.png" hidden="true"/>
        <files mask="classerpcgen_1_1_python_generator.png" hidden="true"/>
        <files mask="classerpcgen_1_1internal__error.png" hidden="true"/>
        <files mask="splitbar.png" hidden="true"/>
        <files mask="classerpcgen_1_1_alias_type.png" hidden="true"/>
        <files mask="doc.png" hidden="true"/>
        <files mask="tab_h.png" hidden="true"/>
        <files mask="classerpcgen_1_1syntax__error2.png" hidden="true"/>
        <files mask="classerpcgen_1_1_list_type.png" hidden="true"/>
        <files mask="bdwn.png" hidden="true"/>
        <files mask="tab_b.png" hidden="true"/>
        <files mask="class_string_value.png" hidden="true"/>
        <files mask="classerpcgen_1_1_struct_type.png" hidden="true"/>
        <files mask="nav_h.png" hidden="true"/>
        <files mask="folderclosed.png" hidden="true"/>
        <files mask="nxp_logo_small.png" hidden="true"/>
        <files mask="classerpcgen_1_1_union_case.png" hidden="true"/>
        <files mask="classcpptempl_1_1_data_map.png" hidden="true"/>
        <files mask="class_float_value.png" hidden="true"/>
        <files mask="classerpcgen_1_1_program.png" hidden="true"/>
        <files mask="arrowdown.png" hidden="true"/>
        <files mask="nav_f.png" hidden="true"/>
        <files mask="classerpcgen_1_1_symbol_scanner.png" hidden="true"/>
        <files mask="nav_g.png" hidden="true"/>
        <files mask="classerpcgen_1_1_generator.png" hidden="true"/>
        <files mask="classcpptempl_1_1_data_bool.png" hidden="true"/>
        <files mask="doxygen.png" hidden="true"/>
        <files mask="classerpcgen_1_1_erpc_lexer.png" hidden="true"/>
        <files mask="tab_s.png" hidden="true"/>
        <files mask="class_opt_istream_iter.png" hidden="true"/>
        <files mask="class_value.png" hidden="true"/>
        <files mask="open.png" hidden="true"/>
      </source>
      <source relative_path="erpc/docs/eRPC_infrastructure/erpcgen/search" project_relative_path="doc" type="script">
        <files mask="classes_f.js" hidden="true"/>
        <files mask="all_2.js" hidden="true"/>
        <files mask="functions_8.js" hidden="true"/>
        <files mask="all_9.js" hidden="true"/>
        <files mask="typedefs_4.js" hidden="true"/>
        <files mask="functions_b.js" hidden="true"/>
        <files mask="functions_12.js" hidden="true"/>
        <files mask="pages_0.js" hidden="true"/>
        <files mask="functions_3.js" hidden="true"/>
        <files mask="functions_d.js" hidden="true"/>
        <files mask="all_1.js" hidden="true"/>
        <files mask="all_13.js" hidden="true"/>
        <files mask="enumvalues_5.js" hidden="true"/>
        <files mask="classes_6.js" hidden="true"/>
        <files mask="functions_5.js" hidden="true"/>
        <files mask="functions_7.js" hidden="true"/>
        <files mask="all_3.js" hidden="true"/>
        <files mask="all_0.js" hidden="true"/>
        <files mask="functions_2.js" hidden="true"/>
        <files mask="classes_9.js" hidden="true"/>
        <files mask="functions_17.js" hidden="true"/>
        <files mask="functions_13.js" hidden="true"/>
        <files mask="functions_6.js" hidden="true"/>
        <files mask="functions_0.js" hidden="true"/>
        <files mask="all_17.js" hidden="true"/>
        <files mask="functions_11.js" hidden="true"/>
        <files mask="enums_2.js" hidden="true"/>
        <files mask="classes_4.js" hidden="true"/>
        <files mask="all_b.js" hidden="true"/>
        <files mask="classes_1.js" hidden="true"/>
        <files mask="typedefs_0.js" hidden="true"/>
        <files mask="enums_5.js" hidden="true"/>
        <files mask="all_d.js" hidden="true"/>
        <files mask="enumvalues_1.js" hidden="true"/>
        <files mask="functions_f.js" hidden="true"/>
        <files mask="enums_4.js" hidden="true"/>
        <files mask="all_14.js" hidden="true"/>
        <files mask="classes_a.js" hidden="true"/>
        <files mask="all_16.js" hidden="true"/>
        <files mask="classes_0.js" hidden="true"/>
        <files mask="enumvalues_0.js" hidden="true"/>
        <files mask="all_11.js" hidden="true"/>
        <files mask="variables_3.js" hidden="true"/>
        <files mask="all_6.js" hidden="true"/>
        <files mask="variables_1.js" hidden="true"/>
        <files mask="all_15.js" hidden="true"/>
        <files mask="all_10.js" hidden="true"/>
        <files mask="typedefs_5.js" hidden="true"/>
        <files mask="enumvalues_3.js" hidden="true"/>
        <files mask="enums_0.js" hidden="true"/>
        <files mask="functions_e.js" hidden="true"/>
        <files mask="all_4.js" hidden="true"/>
        <files mask="classes_e.js" hidden="true"/>
        <files mask="variables_0.js" hidden="true"/>
        <files mask="all_a.js" hidden="true"/>
        <files mask="classes_5.js" hidden="true"/>
        <files mask="classes_3.js" hidden="true"/>
        <files mask="enumvalues_4.js" hidden="true"/>
        <files mask="functions_16.js" hidden="true"/>
        <files mask="functions_15.js" hidden="true"/>
        <files mask="all_c.js" hidden="true"/>
        <files mask="classes_8.js" hidden="true"/>
        <files mask="functions_4.js" hidden="true"/>
        <files mask="searchdata.js" hidden="true"/>
        <files mask="all_18.js" hidden="true"/>
        <files mask="functions_9.js" hidden="true"/>
        <files mask="typedefs_6.js" hidden="true"/>
        <files mask="all_e.js" hidden="true"/>
        <files mask="functions_14.js" hidden="true"/>
        <files mask="variables_2.js" hidden="true"/>
        <files mask="enumvalues_7.js" hidden="true"/>
        <files mask="functions_10.js" hidden="true"/>
        <files mask="all_8.js" hidden="true"/>
        <files mask="functions_c.js" hidden="true"/>
        <files mask="typedefs_2.js" hidden="true"/>
        <files mask="enumvalues_2.js" hidden="true"/>
        <files mask="functions_1.js" hidden="true"/>
        <files mask="enumvalues_6.js" hidden="true"/>
        <files mask="typedefs_3.js" hidden="true"/>
        <files mask="all_19.js" hidden="true"/>
        <files mask="search.js" hidden="true"/>
        <files mask="classes_c.js" hidden="true"/>
        <files mask="typedefs_1.js" hidden="true"/>
        <files mask="all_5.js" hidden="true"/>
        <files mask="enums_1.js" hidden="true"/>
        <files mask="all_12.js" hidden="true"/>
        <files mask="classes_2.js" hidden="true"/>
        <files mask="all_f.js" hidden="true"/>
        <files mask="all_7.js" hidden="true"/>
        <files mask="classes_b.js" hidden="true"/>
        <files mask="functions_a.js" hidden="true"/>
        <files mask="classes_7.js" hidden="true"/>
        <files mask="enums_3.js" hidden="true"/>
        <files mask="classes_d.js" hidden="true"/>
      </source>
      <source relative_path="erpc/docs/eRPC_infrastructure/erpcgen/search" project_relative_path="doc" type="doc">
        <files mask="all_4.html" hidden="true"/>
        <files mask="functions_14.html" hidden="true"/>
        <files mask="classes_8.html" hidden="true"/>
        <files mask="typedefs_6.html" hidden="true"/>
        <files mask="classes_b.html" hidden="true"/>
        <files mask="enums_2.html" hidden="true"/>
        <files mask="functions_13.html" hidden="true"/>
        <files mask="enumvalues_2.html" hidden="true"/>
        <files mask="all_18.html" hidden="true"/>
        <files mask="functions_17.html" hidden="true"/>
        <files mask="nomatches.html" hidden="true"/>
        <files mask="enums_5.html" hidden="true"/>
        <files mask="classes_f.html" hidden="true"/>
        <files mask="all_15.html" hidden="true"/>
        <files mask="functions_b.html" hidden="true"/>
        <files mask="all_10.html" hidden="true"/>
        <files mask="enumvalues_7.html" hidden="true"/>
        <files mask="enumvalues_6.html" hidden="true"/>
        <files mask="all_7.html" hidden="true"/>
        <files mask="pages_0.html" hidden="true"/>
        <files mask="all_11.html" hidden="true"/>
        <files mask="enumvalues_4.html" hidden="true"/>
        <files mask="all_e.html" hidden="true"/>
        <files mask="all_f.html" hidden="true"/>
        <files mask="enumvalues_1.html" hidden="true"/>
        <files mask="functions_c.html" hidden="true"/>
        <files mask="functions_16.html" hidden="true"/>
        <files mask="functions_11.html" hidden="true"/>
        <files mask="typedefs_5.html" hidden="true"/>
        <files mask="all_19.html" hidden="true"/>
        <files mask="functions_2.html" hidden="true"/>
        <files mask="typedefs_2.html" hidden="true"/>
        <files mask="enums_0.html" hidden="true"/>
        <files mask="all_a.html" hidden="true"/>
        <files mask="enumvalues_3.html" hidden="true"/>
        <files mask="all_0.html" hidden="true"/>
        <files mask="all_c.html" hidden="true"/>
        <files mask="all_6.html" hidden="true"/>
        <files mask="functions_3.html" hidden="true"/>
        <files mask="enumvalues_5.html" hidden="true"/>
        <files mask="variables_2.html" hidden="true"/>
        <files mask="variables_0.html" hidden="true"/>
        <files mask="classes_6.html" hidden="true"/>
        <files mask="all_8.html" hidden="true"/>
        <files mask="typedefs_3.html" hidden="true"/>
        <files mask="all_14.html" hidden="true"/>
        <files mask="classes_d.html" hidden="true"/>
        <files mask="functions_a.html" hidden="true"/>
        <files mask="variables_1.html" hidden="true"/>
        <files mask="functions_10.html" hidden="true"/>
        <files mask="functions_12.html" hidden="true"/>
        <files mask="classes_1.html" hidden="true"/>
        <files mask="all_d.html" hidden="true"/>
        <files mask="functions_f.html" hidden="true"/>
        <files mask="functions_0.html" hidden="true"/>
        <files mask="classes_c.html" hidden="true"/>
        <files mask="classes_9.html" hidden="true"/>
        <files mask="functions_7.html" hidden="true"/>
        <files mask="functions_e.html" hidden="true"/>
        <files mask="all_b.html" hidden="true"/>
        <files mask="classes_2.html" hidden="true"/>
        <files mask="functions_9.html" hidden="true"/>
        <files mask="all_1.html" hidden="true"/>
        <files mask="functions_6.html" hidden="true"/>
        <files mask="all_5.html" hidden="true"/>
        <files mask="variables_3.html" hidden="true"/>
        <files mask="classes_4.html" hidden="true"/>
        <files mask="enums_1.html" hidden="true"/>
        <files mask="all_3.html" hidden="true"/>
        <files mask="functions_4.html" hidden="true"/>
        <files mask="enumvalues_0.html" hidden="true"/>
        <files mask="all_12.html" hidden="true"/>
        <files mask="classes_e.html" hidden="true"/>
        <files mask="all_17.html" hidden="true"/>
        <files mask="functions_d.html" hidden="true"/>
        <files mask="all_9.html" hidden="true"/>
        <files mask="functions_15.html" hidden="true"/>
        <files mask="all_16.html" hidden="true"/>
        <files mask="functions_8.html" hidden="true"/>
        <files mask="classes_3.html" hidden="true"/>
        <files mask="enums_3.html" hidden="true"/>
        <files mask="functions_5.html" hidden="true"/>
        <files mask="typedefs_0.html" hidden="true"/>
        <files mask="all_13.html" hidden="true"/>
        <files mask="classes_7.html" hidden="true"/>
        <files mask="classes_0.html" hidden="true"/>
        <files mask="classes_5.html" hidden="true"/>
        <files mask="classes_a.html" hidden="true"/>
        <files mask="search.css" hidden="true"/>
        <files mask="typedefs_1.html" hidden="true"/>
        <files mask="all_2.html" hidden="true"/>
        <files mask="typedefs_4.html" hidden="true"/>
        <files mask="enums_4.html" hidden="true"/>
        <files mask="functions_1.html" hidden="true"/>
      </source>
      <source relative_path="erpc/docs/eRPC_infrastructure/erpcgen/search" project_relative_path="doc" type="image">
        <files mask="close.png" hidden="true"/>
        <files mask="search_l.png" hidden="true"/>
        <files mask="search_r.png" hidden="true"/>
        <files mask="mag_sel.png" hidden="true"/>
        <files mask="search_m.png" hidden="true"/>
      </source>
      <source relative_path="erpc/docs/eRPC_infrastructure" project_relative_path="doc" type="doc">
        <files mask="index.html" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c" project_relative_path="aux" type="other">
        <files mask="Makefile" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c" project_relative_path="doc" type="doc">
        <files mask="readme.txt" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c/config" project_relative_path="aux" type="c_include">
        <files mask="erpc_config.h" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c/port" project_relative_path="aux" type="c_include">
        <files mask="erpc_threading.h" hidden="true"/>
        <files mask="erpc_serial.h" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c/port" project_relative_path="aux" type="src">
        <files mask="erpc_threading_pthreads.cpp" hidden="true"/>
        <files mask="erpc_serial.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="aux" type="src">
        <files mask="erpc_setup_mbf_static.cpp" hidden="true"/>
        <files mask="erpc_setup_serial.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="aux" type="src">
        <files mask="erpc_inter_thread_buffer_transport.cpp" hidden="true"/>
        <files mask="erpc_serial_transport.cpp" hidden="true"/>
        <files mask="erpc_tcp_transport.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="aux" type="c_include">
        <files mask="erpc_inter_thread_buffer_transport.h" hidden="true"/>
        <files mask="erpc_serial_transport.h" hidden="true"/>
        <files mask="erpc_tcp_transport.h" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_python" project_relative_path="aux" type="script">
        <files mask="setup.py" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_python" project_relative_path="aux" type="other">
        <files mask="readme.md" hidden="true"/>
        <files mask="README_Pypi.md" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_python/erpc" project_relative_path="aux" type="script">
        <files mask="arbitrator.py" hidden="true"/>
        <files mask="__init__.py" hidden="true"/>
        <files mask="simple_server.py" hidden="true"/>
        <files mask="transport.py" hidden="true"/>
        <files mask="codec.py" hidden="true"/>
        <files mask="erpc_version.py" hidden="true"/>
        <files mask="server.py" hidden="true"/>
        <files mask="basic_codec.py" hidden="true"/>
        <files mask="client.py" hidden="true"/>
        <files mask="crc16.py" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen" project_relative_path="aux" type="other">
        <files mask="Makefile" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen" project_relative_path="aux" type="doc">
        <files mask="readme.txt" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/bin" project_relative_path="aux" type="script">
        <files mask="txt_to_c.py" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/embedded-rpc.xcodeproj" project_relative_path="aux" type="other">
        <files mask="project.pbxproj" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/embedded-rpc.xcodeproj/project.xcworkspace" project_relative_path="aux" type="other">
        <files mask="contents.xcworkspacedata" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src" project_relative_path="aux" type="c_include">
        <files mask="Generator.h" hidden="true"/>
        <files mask="SymbolScanner.h" hidden="true"/>
        <files mask="format_string.h" hidden="true"/>
        <files mask="AstWalker.h" hidden="true"/>
        <files mask="CGenerator.h" hidden="true"/>
        <files mask="options.h" hidden="true"/>
        <files mask="InterfaceDefinition.h" hidden="true"/>
        <files mask="ParseErrors.h" hidden="true"/>
        <files mask="Value.h" hidden="true"/>
        <files mask="Logging.h" hidden="true"/>
        <files mask="annotations.h" hidden="true"/>
        <files mask="SearchPath.h" hidden="true"/>
        <files mask="UniqueIdChecker.h" hidden="true"/>
        <files mask="ErpcLexer.h" hidden="true"/>
        <files mask="os_config.h" hidden="true"/>
        <files mask="HexValues.h" hidden="true"/>
        <files mask="Token.h" hidden="true"/>
        <files mask="smart_ptr.h" hidden="true"/>
        <files mask="AstNode.h" hidden="true"/>
        <files mask="PythonGenerator.h" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src" project_relative_path="aux" type="src">
        <files mask="InterfaceDefinition.cpp" hidden="true"/>
        <files mask="Generator.cpp" hidden="true"/>
        <files mask="SearchPath.cpp" hidden="true"/>
        <files mask="PythonGenerator.cpp" hidden="true"/>
        <files mask="options.cpp" hidden="true"/>
        <files mask="ErpcLexer.cpp" hidden="true"/>
        <files mask="AstNode.cpp" hidden="true"/>
        <files mask="SymbolScanner.cpp" hidden="true"/>
        <files mask="HexValues.cpp" hidden="true"/>
        <files mask="UniqueIdChecker.cpp" hidden="true"/>
        <files mask="Token.cpp" hidden="true"/>
        <files mask="AstWalker.cpp" hidden="true"/>
        <files mask="format_string.cpp" hidden="true"/>
        <files mask="erpcgen.cpp" hidden="true"/>
        <files mask="Logging.cpp" hidden="true"/>
        <files mask="CGenerator.cpp" hidden="true"/>
        <files mask="ParseErrors.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src" project_relative_path="aux" type="other">
        <files mask="erpcgen_lexer.l" hidden="true"/>
        <files mask="erpcgen_parser.y" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src/cpptemplate" project_relative_path="aux" type="c_include">
        <files mask="cpptempl.h" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src/cpptemplate" project_relative_path="aux" type="src">
        <files mask="cpptempl.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src/cpptemplate" project_relative_path="aux" type="other">
        <files mask="README.rst" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src/cpptemplate" project_relative_path="aux" type="doc">
        <files mask="LICENSE.txt" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src/templates" project_relative_path="aux" type="other">
        <files mask="py_common.template" hidden="true"/>
        <files mask="py_server.template" hidden="true"/>
        <files mask="c_client_source.template" hidden="true"/>
        <files mask="py_global_init.template" hidden="true"/>
        <files mask="c_coders.template" hidden="true"/>
        <files mask="c_common_functions.template" hidden="true"/>
        <files mask="c_common_header.template" hidden="true"/>
        <files mask="py_interface.template" hidden="true"/>
        <files mask="c_crc.template" hidden="true"/>
        <files mask="py_init.template" hidden="true"/>
        <files mask="py_coders.template" hidden="true"/>
        <files mask="c_server_header.template" hidden="true"/>
        <files mask="py_client.template" hidden="true"/>
        <files mask="c_server_source.template" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src/types" project_relative_path="aux" type="c_include">
        <files mask="UnionCase.h" hidden="true"/>
        <files mask="StructMember.h" hidden="true"/>
        <files mask="Interface.h" hidden="true"/>
        <files mask="Program.h" hidden="true"/>
        <files mask="SymbolScope.h" hidden="true"/>
        <files mask="ConstType.h" hidden="true"/>
        <files mask="VoidType.h" hidden="true"/>
        <files mask="Group.h" hidden="true"/>
        <files mask="EnumMember.h" hidden="true"/>
        <files mask="StructType.h" hidden="true"/>
        <files mask="Function.h" hidden="true"/>
        <files mask="AliasType.h" hidden="true"/>
        <files mask="DataType.h" hidden="true"/>
        <files mask="Annotation.h" hidden="true"/>
        <files mask="EnumType.h" hidden="true"/>
        <files mask="ListType.h" hidden="true"/>
        <files mask="ArrayType.h" hidden="true"/>
        <files mask="BuiltinType.h" hidden="true"/>
        <files mask="UnionType.h" hidden="true"/>
        <files mask="Symbol.h" hidden="true"/>
        <files mask="FunctionType.h" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src/types" project_relative_path="aux" type="src">
        <files mask="Type.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/VisualStudio_v14" project_relative_path="aux" type="other">
        <files mask="erpcgen.sln" hidden="true"/>
        <files mask="erpcgen.vcxproj" hidden="true"/>
        <files mask="erpcgen.vcxproj.filters" hidden="true"/>
        <files mask="erpcgen.vcxproj.user" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/VisualStudio_v14" project_relative_path="aux" type="doc">
        <files mask="readme_erpcgen.txt" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/VisualStudio_v14" project_relative_path="aux" type="src">
        <files mask="stdafx.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/VisualStudio_v14" project_relative_path="aux" type="c_include">
        <files mask="stdafx.h" hidden="true"/>
        <files mask="stdbool.h" hidden="true"/>
        <files mask="targetver.h" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcsniffer" project_relative_path="aux" type="other">
        <files mask="Makefile" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcsniffer" project_relative_path="aux" type="doc">
        <files mask="readme.txt" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcsniffer/src" project_relative_path="aux" type="c_include">
        <files mask="erpc_config.h" hidden="true"/>
        <files mask="Sniffer.h" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcsniffer/src" project_relative_path="aux" type="src">
        <files mask="Sniffer.cpp" hidden="true"/>
        <files mask="erpcsniffer.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/mk" project_relative_path="aux" type="script">
        <files mask="targets.mk" hidden="true"/>
        <files mask="paths.mk" hidden="true"/>
        <files mask="erpc_common.mk" hidden="true"/>
        <files mask="common.mk" hidden="true"/>
        <files mask="flags.mk" hidden="true"/>
        <files mask="subdirs.mk" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities" project_relative_path="aux" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities/styles" project_relative_path="aux" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities/styles/NOTEPADpp" project_relative_path="aux" type="xml">
        <files mask="template_default.xml" hidden="true"/>
        <files mask="template_deep_black.xml" hidden="true"/>
        <files mask="IDl_deep_black.xml" hidden="true"/>
        <files mask="IDl_default.xml" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities/styles/VSC" project_relative_path="aux" type="other">
        <files mask="README.md" hidden="true"/>
        <files mask="language-configuration.json" hidden="true"/>
        <files mask="CHANGELOG.md" hidden="true"/>
        <files mask="package.json" hidden="true"/>
        <files mask=".vscodeignore" hidden="true"/>
        <files mask="vsc-extension-quickstart.md" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities/styles/VSC/.vscode" project_relative_path="aux" type="other">
        <files mask="launch.json" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities/styles/VSC/img" project_relative_path="aux" type="image">
        <files mask="templatePic.png" hidden="true"/>
        <files mask="erpcPic.png" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities/styles/VSC/syntaxes" project_relative_path="aux" type="other">
        <files mask="template.tmLanguage.json" hidden="true"/>
        <files mask="erpc.tmLanguage.json" hidden="true"/>
      </source>
      <source relative_path="tools/erpcgen/Linux_x64" project_relative_path="aux" type="other">
        <files mask="erpcgen" hidden="true"/>
      </source>
      <source relative_path="tools/erpcgen/Linux_x86" project_relative_path="aux" type="other">
        <files mask="erpcgen" hidden="true"/>
      </source>
      <source relative_path="tools/erpcgen/Mac" project_relative_path="aux" type="other">
        <files mask="erpcgen" hidden="true"/>
      </source>
      <source relative_path="tools/erpcgen/Windows" project_relative_path="aux" type="other">
        <files mask="erpcgen.exe" hidden="true"/>
      </source>
      <source relative_path="tools/erpcsniffer/Linux_x64" project_relative_path="aux" type="other">
        <files mask="erpcsniffer" hidden="true"/>
      </source>
      <source relative_path="tools/erpcsniffer/Linux_x86" project_relative_path="aux" type="other">
        <files mask="erpcsniffer" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.common.K32L3A60" name="eRPC_common" brief="eRPC" version="1.8.0" full_name="Embedded Remote Procedure Call" devices="K32L3A60xxx" category="Multicore/eRPC" user_visible="true" type="other" package_base_path="middleware/multicore" project_base_path="erpc">
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="c_include">
        <files mask="erpc_version.h"/>
        <files mask="erpc_codec.h"/>
        <files mask="erpc_basic_codec.h"/>
        <files mask="erpc_transport.h"/>
        <files mask="erpc_message_buffer.h"/>
        <files mask="erpc_message_loggers.h"/>
        <files mask="erpc_common.h"/>
        <files mask="erpc_manually_constructed.h"/>
        <files mask="erpc_crc16.h"/>
        <files mask="erpc_client_server_common.h"/>
        <files mask="erpc_pre_post_action.h"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="c_include">
        <files mask="erpc_transport_setup.h"/>
        <files mask="erpc_mbf_setup.h"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="src">
        <files mask="erpc_basic_codec.cpp"/>
        <files mask="erpc_message_buffer.cpp"/>
        <files mask="erpc_message_loggers.cpp"/>
        <files mask="erpc_crc16.cpp"/>
        <files mask="erpc_pre_post_action.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/port" project_relative_path="port" type="c_include">
        <files mask="erpc_setup_extensions.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="middleware_multicore_erpc_common_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="middleware_multicore_erpc_common_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/port" project_relative_path="port" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.doc.K32L3A60" name="eRPC_port_stdlib" brief="erpc_doc" version="1.8.0" full_name="eRPC doc" devices="K32L3A60xxx" category="Multicore/eRPC" user_visible="false" type="other" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <component_dependency value="middleware.multicore.erpc.common.K32L3A60"/>
      </dependencies>
      <source relative_path="erpc/docs" project_relative_path="doc" type="other">
        <files mask="erpcgen.md" hidden="true"/>
        <files mask="eRPC-infrastructure.md" hidden="true"/>
        <files mask="erpcsniffer.md" hidden="true"/>
        <files mask="eRPC-footprint.md" hidden="true"/>
        <files mask="Home.md" hidden="true"/>
        <files mask="IDL-Reference.md" hidden="true"/>
        <files mask="Porting-Guide.md" hidden="true"/>
        <files mask="Contributing.md" hidden="true"/>
        <files mask="Getting-Started.md" hidden="true"/>
        <files mask="_Sidebar.md" hidden="true"/>
      </source>
      <source relative_path="erpc/docs/images" project_relative_path="doc" type="image">
        <files mask="sendingReceivingParameterValue.png" hidden="true"/>
        <files mask="eRPCwith_erpc_server_run_function.png" hidden="true"/>
        <files mask="eRPCusing_erpc_server_poll_function.png" hidden="true"/>
        <files mask="eRPC_directory.png" hidden="true"/>
        <files mask="client_side_flowchart.png" hidden="true"/>
        <files mask="RPCblockDiagram.png" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="middleware_multicore_erpc_doc_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="middleware_multicore_erpc_doc_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_arbitrator.K32L3A60" name="eRPC_arbitrator" brief="eRPC_arbitrator" version="1.8.0" full_name="eRPC arbitrator" devices="K32L3A60xxx" category="Multicore/eRPC" user_visible="true" type="other" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <component_dependency value="middleware.multicore.erpc.common.K32L3A60"/>
      </dependencies>
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="c_include">
        <files mask="erpc_arbitrated_client_manager.h"/>
        <files mask="erpc_client_manager.h"/>
        <files mask="erpc_simple_server.h"/>
        <files mask="erpc_server.h"/>
        <files mask="erpc_transport_arbitrator.h"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="src">
        <files mask="erpc_arbitrated_client_manager.cpp"/>
        <files mask="erpc_client_manager.cpp"/>
        <files mask="erpc_simple_server.cpp"/>
        <files mask="erpc_server.cpp"/>
        <files mask="erpc_transport_arbitrator.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="c_include">
        <files mask="erpc_arbitrated_client_setup.h"/>
        <files mask="erpc_server_setup.h"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_arbitrated_client_setup.cpp"/>
        <files mask="erpc_server_setup.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/port" project_relative_path="port" type="c_include">
        <files mask="erpc_threading.h"/>
      </source>
      <source relative_path="erpc/erpc_c/port" project_relative_path="port" type="src">
        <files mask="erpc_threading_freertos.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="middleware_multicore_erpc_eRPC_arbitrator_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="middleware_multicore_erpc_eRPC_arbitrator_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/port" project_relative_path="port" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_client.K32L3A60" name="eRPC_client" brief="eRPC_client" version="1.8.0" full_name="eRPC client" devices="K32L3A60xxx" category="Multicore/eRPC" user_visible="true" type="other" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <component_dependency value="middleware.multicore.erpc.common.K32L3A60"/>
      </dependencies>
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="c_include">
        <files mask="erpc_client_manager.h"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="src">
        <files mask="erpc_client_manager.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="c_include">
        <files mask="erpc_client_setup.h"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_client_setup.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="middleware_multicore_erpc_eRPC_client_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_dspi_master_c_wrapper.K32L3A60" name="eRPC_dspi_master_c_wrapper" brief="eRPC_dspi_master_c_wrapper" version="1.8.0" full_name="eRPC DSPI master C Wrapper" devices="K32L3A60xxx" category="Multicore/eRPC" user_visible="true" type="other" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <component_dependency value="middleware.multicore.erpc.common.K32L3A60"/>
      </dependencies>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_setup_dspi_master.cpp"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_dspi_master_transport.K32L3A60" name="eRPC_dspi_master_transport" brief="eRPC_dspi_master_transport" version="1.8.0" full_name="eRPC DSPI master transport layer" devices="K32L3A60xxx" category="Multicore/eRPC" user_visible="true" type="other" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <component_dependency value="middleware.multicore.erpc.common.K32L3A60"/>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="c_include">
        <files mask="erpc_dspi_master_transport.h"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="src">
        <files mask="erpc_dspi_master_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="c_include">
        <files mask="erpc_framed_transport.h"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_dspi_slave_c_wrapper.K32L3A60" name="eRPC_dspi_slave_c_wrapper" brief="eRPC_dspi_slave_c_wrapper" version="1.8.0" full_name="eRPC DSPI slave C Wrapper" devices="K32L3A60xxx" category="Multicore/eRPC" user_visible="true" type="other" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <component_dependency value="middleware.multicore.erpc.common.K32L3A60"/>
      </dependencies>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_setup_dspi_slave.cpp"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_dspi_slave_transport.K32L3A60" name="eRPC_dspi_slave_transport" brief="eRPC_dspi_slave_transport" version="1.8.0" full_name="eRPC DSPI slave transport layer" devices="K32L3A60xxx" category="Multicore/eRPC" user_visible="true" type="other" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <component_dependency value="middleware.multicore.erpc.common.K32L3A60"/>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="c_include">
        <files mask="erpc_dspi_slave_transport.h"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="src">
        <files mask="erpc_dspi_slave_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="c_include">
        <files mask="erpc_framed_transport.h"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_mu_c_wrapper.K32L3A60" name="eRPC_mu_c_wrapper" brief="eRPC_mu_c_wrapper" version="1.8.0" full_name="eRPC Messaging Unit C Wrapper" devices="K32L3A60xxx" category="Multicore/eRPC" user_visible="true" type="other" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <component_dependency value="middleware.multicore.erpc.common.K32L3A60"/>
      </dependencies>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_setup_mu.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="middleware_multicore_erpc_eRPC_mu_c_wrapper_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="middleware_multicore_erpc_eRPC_mu_c_wrapper_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_mu_rtos_transport.K32L3A60" name="eRPC_mu_rtos_transport" brief="eRPC_mu_rtos_transport" version="1.8.0" full_name="eRPC MU RTOS transport layer" devices="K32L3A60xxx" category="Multicore/eRPC" user_visible="true" type="other" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <component_dependency value="middleware.multicore.erpc.common.K32L3A60"/>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="c_include">
        <files mask="erpc_mu_transport.h"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="src">
        <files mask="erpc_mu_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/port" project_relative_path="port" type="c_include">
        <files mask="erpc_threading.h"/>
      </source>
      <source relative_path="erpc/erpc_c/port" project_relative_path="port" type="src">
        <files mask="erpc_threading_freertos.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="middleware_multicore_erpc_eRPC_mu_rtos_transport_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="middleware_multicore_erpc_eRPC_mu_rtos_transport_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/port" project_relative_path="port" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_mu_transport.K32L3A60" name="eRPC_mu_transport" brief="eRPC_mu_transport" version="1.8.0" full_name="eRPC MU transport layer" devices="K32L3A60xxx" category="Multicore/eRPC" user_visible="true" type="other" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <component_dependency value="middleware.multicore.erpc.common.K32L3A60"/>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="c_include">
        <files mask="erpc_mu_transport.h"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="src">
        <files mask="erpc_mu_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="middleware_multicore_erpc_eRPC_mu_transport_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="middleware_multicore_erpc_eRPC_mu_transport_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_port_freertos.K32L3A60" name="eRPC_port_freertos" brief="eRPC_port_freertos" version="1.8.0" full_name="eRPC FreeRTOS port layer" devices="K32L3A60xxx" category="Multicore/eRPC" user_visible="true" type="other" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <component_dependency value="middleware.multicore.erpc.common.K32L3A60"/>
      </dependencies>
      <source relative_path="erpc/erpc_c/port" project_relative_path="port" type="c_include">
        <files mask="erpc_port.h"/>
        <files mask="erpc_config_internal.h"/>
        <files mask="erpc_threading.h"/>
        <files mask="erpc_setup_extensions.h"/>
      </source>
      <source relative_path="erpc/erpc_c/port" project_relative_path="port" type="src">
        <files mask="erpc_port_freertos.cpp"/>
        <files mask="erpc_threading_freertos.cpp"/>
        <files mask="erpc_setup_extensions_freertos.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="middleware_multicore_erpc_eRPC_port_freertos_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="middleware_multicore_erpc_eRPC_port_freertos_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/port" project_relative_path="port" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_port_stdlib.K32L3A60" name="eRPC_port_stdlib" brief="eRPC_port_stdlib" version="1.8.0" full_name="eRPC stdlib port layer" devices="K32L3A60xxx" category="Multicore/eRPC" user_visible="true" type="other" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <component_dependency value="middleware.multicore.erpc.common.K32L3A60"/>
      </dependencies>
      <source relative_path="erpc/erpc_c/port" project_relative_path="port" type="c_include">
        <files mask="erpc_port.h"/>
        <files mask="erpc_config_internal.h"/>
      </source>
      <source relative_path="erpc/erpc_c/port" project_relative_path="port" type="src">
        <files mask="erpc_port_stdlib.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="middleware_multicore_erpc_eRPC_port_stdlib_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="middleware_multicore_erpc_eRPC_port_stdlib_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/port" project_relative_path="port" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_lite_master_c_wrapper.K32L3A60" name="eRPC_rpmsg_lite_master_c_wrapper" brief="eRPC_rpmsg_lite_master_c_wrapper" version="1.8.0" full_name="eRPC RPMsg-Lite master C Wrapper" devices="K32L3A60xxx" category="Multicore/eRPC" user_visible="true" type="other" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <component_dependency value="middleware.multicore.erpc.common.K32L3A60"/>
      </dependencies>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_setup_rpmsg_lite_master.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="middleware_multicore_erpc_eRPC_rpmsg_lite_master_c_wrapper_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_lite_remote_c_wrapper.K32L3A60" name="eRPC_rpmsg_lite_remote_c_wrapper" brief="eRPC_rpmsg_lite_remote_c_wrapper" version="1.8.0" full_name="eRPC RPMsg-Lite remote C Wrapper" devices="K32L3A60xxx" category="Multicore/eRPC" user_visible="true" type="other" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <component_dependency value="middleware.multicore.erpc.common.K32L3A60"/>
      </dependencies>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_setup_rpmsg_lite_remote.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="middleware_multicore_erpc_eRPC_rpmsg_lite_remote_c_wrapper_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_lite_rtos_master_c_wrapper.K32L3A60" name="eRPC_rpmsg_lite_rtos_master_c_wrapper" brief="eRPC_rpmsg_lite_rtos_master_c_wrapper" version="1.8.0" full_name="eRPC RPMsg-Lite RTOS master C Wrapper" devices="K32L3A60xxx" category="Multicore/eRPC" user_visible="true" type="other" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <component_dependency value="middleware.multicore.erpc.common.K32L3A60"/>
      </dependencies>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_setup_rpmsg_lite_rtos_master.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="middleware_multicore_erpc_eRPC_rpmsg_lite_rtos_master_c_wrapper_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_lite_rtos_remote_c_wrapper.K32L3A60" name="eRPC_rpmsg_lite_rtos_remote_c_wrapper" brief="eRPC_rpmsg_lite_rtos_remote_c_wrapper" version="1.8.0" full_name="eRPC RPMsg-Lite RTOS remote C Wrapper" devices="K32L3A60xxx" category="Multicore/eRPC" user_visible="true" type="other" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <component_dependency value="middleware.multicore.erpc.common.K32L3A60"/>
      </dependencies>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_setup_rpmsg_lite_rtos_remote.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="middleware_multicore_erpc_eRPC_rpmsg_lite_rtos_remote_c_wrapper_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_lite_rtos_transport.K32L3A60" name="eRPC_rpmsg_lite_rtos_transport" brief="eRPC_rpmsg_lite_rtos_transport" version="1.8.0" full_name="eRPC RPMsg-Lite RTOS transport layer" devices="K32L3A60xxx" category="Multicore/eRPC" user_visible="true" type="other" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <component_dependency value="middleware.multicore.erpc.common.K32L3A60"/>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="c_include">
        <files mask="erpc_rpmsg_lite_base_transport.h"/>
        <files mask="erpc_rpmsg_lite_rtos_transport.h"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="src">
        <files mask="erpc_rpmsg_lite_rtos_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_setup_mbf_rpmsg.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="middleware_multicore_erpc_eRPC_rpmsg_lite_rtos_transport_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="middleware_multicore_erpc_eRPC_rpmsg_lite_rtos_transport_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_lite_transport.K32L3A60" name="eRPC_rpmsg_lite_transport" brief="eRPC_rpmsg_lite_transport" version="1.8.0" full_name="eRPC RPMsg-Lite transport layer" devices="K32L3A60xxx" category="Multicore/eRPC" user_visible="true" type="other" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <component_dependency value="middleware.multicore.erpc.common.K32L3A60"/>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="c_include">
        <files mask="erpc_rpmsg_lite_base_transport.h"/>
        <files mask="erpc_rpmsg_lite_transport.h"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="src">
        <files mask="erpc_rpmsg_lite_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="c_include">
        <files mask="erpc_static_queue.h"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_setup_mbf_rpmsg.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="middleware_multicore_erpc_eRPC_rpmsg_lite_transport_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="middleware_multicore_erpc_eRPC_rpmsg_lite_transport_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_tty_rtos_remote_c_wrapper.K32L3A60" name="eRPC_rpmsg_tty_rtos_remote_c_wrapper" brief="eRPC_rpmsg_tty_rtos_remote_c_wrapper" version="1.8.0" full_name="eRPC RPMsg-Lite remote TTY RTOS C Wrapper" devices="K32L3A60xxx" category="Multicore/eRPC" user_visible="true" type="other" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <component_dependency value="middleware.multicore.erpc.common.K32L3A60"/>
      </dependencies>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_setup_rpmsg_tty_rtos_remote.cpp"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_tty_rtos_transport.K32L3A60" name="eRPC_rpmsg_tty_rtos_transport" brief="eRPC_rpmsg_tty_rtos_transport" version="1.8.0" full_name="eRPC RPMsg-Lite TTY RTOS transport layer" devices="K32L3A60xxx" category="Multicore/eRPC" user_visible="true" type="other" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <component_dependency value="middleware.multicore.erpc.common.K32L3A60"/>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="c_include">
        <files mask="erpc_rpmsg_lite_base_transport.h"/>
        <files mask="erpc_rpmsg_tty_rtos_transport.h"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="src">
        <files mask="erpc_rpmsg_tty_rtos_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_setup_mbf_rpmsg_tty.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/port" project_relative_path="port" type="c_include">
        <files mask="erpc_threading.h"/>
      </source>
      <source relative_path="erpc/erpc_c/port" project_relative_path="port" type="src">
        <files mask="erpc_threading_freertos.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="c_include">
        <files mask="erpc_framed_transport.h"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/port" project_relative_path="port" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_server.K32L3A60" name="eRPC_server" brief="eRPC_server" version="1.8.0" full_name="eRPC server" devices="K32L3A60xxx" category="Multicore/eRPC" user_visible="true" type="other" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <component_dependency value="middleware.multicore.erpc.common.K32L3A60"/>
      </dependencies>
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="c_include">
        <files mask="erpc_simple_server.h"/>
        <files mask="erpc_server.h"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="src">
        <files mask="erpc_simple_server.cpp"/>
        <files mask="erpc_server.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="c_include">
        <files mask="erpc_server_setup.h"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_server_setup.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="middleware_multicore_erpc_eRPC_server_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_spi_master_c_wrapper.K32L3A60" name="eRPC_spi_master_c_wrapper" brief="eRPC_spi_master_c_wrapper" version="1.8.0" full_name="eRPC SPI master C Wrapper" devices="K32L3A60xxx" category="Multicore/eRPC" user_visible="true" type="other" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <component_dependency value="middleware.multicore.erpc.common.K32L3A60"/>
      </dependencies>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_setup_spi_master.cpp"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_spi_master_transport.K32L3A60" name="eRPC_spi_master_transport" brief="eRPC_spi_master_transport" version="1.8.0" full_name="eRPC SPI master transport layer" devices="K32L3A60xxx" category="Multicore/eRPC" user_visible="true" type="other" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <component_dependency value="middleware.multicore.erpc.common.K32L3A60"/>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="c_include">
        <files mask="erpc_spi_master_transport.h"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="src">
        <files mask="erpc_spi_master_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="c_include">
        <files mask="erpc_framed_transport.h"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_spi_slave_c_wrapper.K32L3A60" name="eRPC_spi_slave_c_wrapper" brief="eRPC_spi_slave_c_wrapper" version="1.8.0" full_name="eRPC SPI slave C Wrapper" devices="K32L3A60xxx" category="Multicore/eRPC" user_visible="true" type="other" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <component_dependency value="middleware.multicore.erpc.common.K32L3A60"/>
      </dependencies>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_setup_spi_slave.cpp"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.eRPC_spi_slave_transport.K32L3A60" name="eRPC_spi_slave_transport" brief="eRPC_spi_slave_transport" version="1.8.0" full_name="eRPC SPI slave transport layer" devices="K32L3A60xxx" category="Multicore/eRPC" user_visible="true" type="other" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <component_dependency value="middleware.multicore.erpc.common.K32L3A60"/>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="c_include">
        <files mask="erpc_spi_slave_transport.h"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="src">
        <files mask="erpc_spi_slave_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="c_include">
        <files mask="erpc_framed_transport.h"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_uart_cmsis_transport.K32L3A60" name="eRPC_uart_cmsis_transport" brief="eRPC_uart_cmsis_transport" version="1.8.0" full_name="eRPC UART CMSIS transport layer" devices="K32L3A60xxx" category="Multicore/eRPC" user_visible="true" type="other" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <component_dependency value="middleware.multicore.erpc.common.K32L3A60"/>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="c_include">
        <files mask="erpc_uart_cmsis_transport.h"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="src">
        <files mask="erpc_uart_cmsis_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="c_include">
        <files mask="erpc_framed_transport.h"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="setup" type="src">
        <files mask="erpc_setup_uart_cmsis.cpp"/>
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" project_relative_path="transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" project_relative_path="infra" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.mcmgr.K32L3A60" name="mcmgr" brief="MCMgr" version="4.1.1" full_name="Multicore Manager" devices="K32L3A60xxx" category="Multicore/Multicore Manager" user_visible="true" type="other" package_base_path="middleware/multicore" project_base_path="mcmgr">
      <source relative_path="mcmgr/src" project_relative_path="./" type="c_include">
        <files mask="mcmgr.h"/>
        <files mask="mcmgr_internal_core_api.h"/>
      </source>
      <source relative_path="mcmgr/src" project_relative_path="./" type="src">
        <files mask="mcmgr.c"/>
      </source>
      <source relative_path="mcmgr" project_relative_path="./" type="doc">
        <files mask="readme.txt" hidden="true"/>
      </source>
      <source relative_path="mcmgr/doc" project_relative_path="doc" type="image">
        <files mask="bc_s.png" hidden="true"/>
        <files mask="folderopen.png" hidden="true"/>
        <files mask="tab_a.png" hidden="true"/>
        <files mask="sync_off.png" hidden="true"/>
        <files mask="closed.png" hidden="true"/>
        <files mask="arrowright.png" hidden="true"/>
        <files mask="sync_on.png" hidden="true"/>
        <files mask="MCMgrDataExchangeDiagram.png" hidden="true"/>
        <files mask="splitbar.png" hidden="true"/>
        <files mask="doc.png" hidden="true"/>
        <files mask="tab_h.png" hidden="true"/>
        <files mask="bdwn.png" hidden="true"/>
        <files mask="tab_b.png" hidden="true"/>
        <files mask="nav_h.png" hidden="true"/>
        <files mask="folderclosed.png" hidden="true"/>
        <files mask="nxp_logo_small.png" hidden="true"/>
        <files mask="arrowdown.png" hidden="true"/>
        <files mask="nav_f.png" hidden="true"/>
        <files mask="nav_g.png" hidden="true"/>
        <files mask="doxygen.png" hidden="true"/>
        <files mask="mcsdk.png" hidden="true"/>
        <files mask="tab_s.png" hidden="true"/>
        <files mask="open.png" hidden="true"/>
      </source>
      <source relative_path="mcmgr/doc" project_relative_path="doc" type="script">
        <files mask="dynsections.js" hidden="true"/>
        <files mask="group__mcmgr.js" hidden="true"/>
        <files mask="jquery.js" hidden="true"/>
        <files mask="navtree.js" hidden="true"/>
        <files mask="resize.js" hidden="true"/>
        <files mask="navtreeindex0.js" hidden="true"/>
        <files mask="navtreedata.js" hidden="true"/>
        <files mask="modules.js" hidden="true"/>
      </source>
      <source relative_path="mcmgr/doc" project_relative_path="doc" type="doc">
        <files mask="group__mcmgr.html" hidden="true"/>
        <files mask="modules.html" hidden="true"/>
        <files mask="navtree.css" hidden="true"/>
        <files mask="index.html" hidden="true"/>
        <files mask="tabs.css" hidden="true"/>
        <files mask="dir_68267d1309a1af8e8297ef4c3efbcdba.html" hidden="true"/>
        <files mask="doxygen.css" hidden="true"/>
        <files mask="customdoxygen.css" hidden="true"/>
        <files mask="mcmgr_8h_source.html" hidden="true"/>
      </source>
      <source relative_path="mcmgr/doc/search" project_relative_path="doc" type="script">
        <files mask="all_2.js" hidden="true"/>
        <files mask="pages_0.js" hidden="true"/>
        <files mask="all_1.js" hidden="true"/>
        <files mask="all_0.js" hidden="true"/>
        <files mask="functions_0.js" hidden="true"/>
        <files mask="typedefs_0.js" hidden="true"/>
        <files mask="groups_0.js" hidden="true"/>
        <files mask="enumvalues_0.js" hidden="true"/>
        <files mask="enums_0.js" hidden="true"/>
        <files mask="searchdata.js" hidden="true"/>
        <files mask="search.js" hidden="true"/>
        <files mask="enums_1.js" hidden="true"/>
      </source>
      <source relative_path="mcmgr/doc/search" project_relative_path="doc" type="doc">
        <files mask="nomatches.html" hidden="true"/>
        <files mask="pages_0.html" hidden="true"/>
        <files mask="enums_0.html" hidden="true"/>
        <files mask="all_0.html" hidden="true"/>
        <files mask="groups_0.html" hidden="true"/>
        <files mask="functions_0.html" hidden="true"/>
        <files mask="all_1.html" hidden="true"/>
        <files mask="enums_1.html" hidden="true"/>
        <files mask="enumvalues_0.html" hidden="true"/>
        <files mask="typedefs_0.html" hidden="true"/>
        <files mask="search.css" hidden="true"/>
        <files mask="all_2.html" hidden="true"/>
      </source>
      <source relative_path="mcmgr/doc/search" project_relative_path="doc" type="image">
        <files mask="close.png" hidden="true"/>
        <files mask="search_l.png" hidden="true"/>
        <files mask="search_r.png" hidden="true"/>
        <files mask="mag_sel.png" hidden="true"/>
        <files mask="search_m.png" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="middleware_multicore_mcmgr_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="middleware_multicore_mcmgr_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="mcmgr/src" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.mcmgr.k32l3a6.K32L3A60" name="mcmgr_k32l3a6" brief="Multicore Manager for frdmk32l3a6 board" version="4.1.1" full_name="Multicore Manager for frdmk32l3a6 board" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="Multicore/Multicore Manager" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="mcmgr">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.mcmgr.K32L3A60"/>
          <component_dependency value="platform.drivers.mu.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="mcmgr/src" project_relative_path="./" type="src">
        <files mask="mcmgr_internal_core_api_k32l3a6.c"/>
        <files mask="mcmgr_mu_internal.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="middleware_multicore_mcmgr_k32l3a6_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="middleware_multicore_mcmgr_k32l3a6_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.rpmsg_lite.K32L3A60" name="rpmsg_lite" brief="RPMsg-Lite" version="3.1.1" full_name="Remote Procedure Messaging Lite library" devices="K32L3A60xxx" category="Multicore/RPMsg-Lite" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg_lite">
      <source relative_path="rpmsg_lite/lib/include" project_relative_path="./" type="c_include">
        <files mask="rpmsg_lite.h"/>
        <files mask="rpmsg_ns.h"/>
        <files mask="llist.h"/>
        <files mask="rpmsg_default_config.h"/>
        <files mask="virtio_ring.h"/>
        <files mask="virtqueue.h"/>
        <files mask="rpmsg_compiler.h"/>
        <files mask="rpmsg_env.h"/>
      </source>
      <source relative_path="rpmsg_lite/lib/common" project_relative_path="./" type="src">
        <files mask="llist.c"/>
      </source>
      <source relative_path="rpmsg_lite/lib/rpmsg_lite" project_relative_path="./" type="src">
        <files mask="rpmsg_lite.c"/>
        <files mask="rpmsg_ns.c"/>
      </source>
      <source relative_path="rpmsg_lite/lib/virtio" project_relative_path="./" type="src">
        <files mask="virtqueue.c"/>
      </source>
      <source relative_path="rpmsg_lite" project_relative_path="./" type="doc">
        <files mask="readme.txt" hidden="true"/>
      </source>
      <source relative_path="rpmsg_lite/doc" project_relative_path="doc" type="script">
        <files mask="group__rpmsg__lite.js" hidden="true"/>
        <files mask="dynsections.js" hidden="true"/>
        <files mask="jquery.js" hidden="true"/>
        <files mask="navtree.js" hidden="true"/>
        <files mask="resize.js" hidden="true"/>
        <files mask="group__config.js" hidden="true"/>
        <files mask="group__rpmsg__ns.js" hidden="true"/>
        <files mask="group__rpmsg__queue.js" hidden="true"/>
        <files mask="navtreeindex0.js" hidden="true"/>
        <files mask="navtreedata.js" hidden="true"/>
        <files mask="modules.js" hidden="true"/>
      </source>
      <source relative_path="rpmsg_lite/doc" project_relative_path="doc" type="image">
        <files mask="bc_s.png" hidden="true"/>
        <files mask="folderopen.png" hidden="true"/>
        <files mask="tab_a.png" hidden="true"/>
        <files mask="sync_off.png" hidden="true"/>
        <files mask="rpmsg_lite_send_receive.png" hidden="true"/>
        <files mask="closed.png" hidden="true"/>
        <files mask="arrowright.png" hidden="true"/>
        <files mask="sync_on.png" hidden="true"/>
        <files mask="rpmsg_isoosi.png" hidden="true"/>
        <files mask="splitbar.png" hidden="true"/>
        <files mask="doc.png" hidden="true"/>
        <files mask="tab_h.png" hidden="true"/>
        <files mask="bdwn.png" hidden="true"/>
        <files mask="tab_b.png" hidden="true"/>
        <files mask="rpmsg_lite_arch.png" hidden="true"/>
        <files mask="nav_h.png" hidden="true"/>
        <files mask="folderclosed.png" hidden="true"/>
        <files mask="nxp_logo_small.png" hidden="true"/>
        <files mask="arrowdown.png" hidden="true"/>
        <files mask="nav_f.png" hidden="true"/>
        <files mask="nav_g.png" hidden="true"/>
        <files mask="doxygen.png" hidden="true"/>
        <files mask="tab_s.png" hidden="true"/>
        <files mask="open.png" hidden="true"/>
      </source>
      <source relative_path="rpmsg_lite/doc" project_relative_path="doc" type="doc">
        <files mask="group__config.html" hidden="true"/>
        <files mask="rpmsg__lite_8h_source.html" hidden="true"/>
        <files mask="rpmsg__ns_8h_source.html" hidden="true"/>
        <files mask="modules.html" hidden="true"/>
        <files mask="dir_97aefd0d527b934f1d99a682da8fe6a9.html" hidden="true"/>
        <files mask="group__rpmsg__ns.html" hidden="true"/>
        <files mask="navtree.css" hidden="true"/>
        <files mask="rpmsg__default__config_8h.html" hidden="true"/>
        <files mask="dir_5a30104352ef4255dc24354b02eb2d20.html" hidden="true"/>
        <files mask="group__rpmsg__lite.html" hidden="true"/>
        <files mask="index.html" hidden="true"/>
        <files mask="tabs.css" hidden="true"/>
        <files mask="doxygen.css" hidden="true"/>
        <files mask="rpmsg__queue_8h_source.html" hidden="true"/>
        <files mask="group__rpmsg__queue.html" hidden="true"/>
        <files mask="rpmsg__default__config_8h_source.html" hidden="true"/>
        <files mask="customdoxygen.css" hidden="true"/>
      </source>
      <source relative_path="rpmsg_lite/doc/search" project_relative_path="doc" type="doc">
        <files mask="all_4.html" hidden="true"/>
        <files mask="variables_4.html" hidden="true"/>
        <files mask="nomatches.html" hidden="true"/>
        <files mask="all_7.html" hidden="true"/>
        <files mask="pages_0.html" hidden="true"/>
        <files mask="all_0.html" hidden="true"/>
        <files mask="all_6.html" hidden="true"/>
        <files mask="groups_0.html" hidden="true"/>
        <files mask="variables_2.html" hidden="true"/>
        <files mask="variables_0.html" hidden="true"/>
        <files mask="variables_1.html" hidden="true"/>
        <files mask="variables_7.html" hidden="true"/>
        <files mask="functions_0.html" hidden="true"/>
        <files mask="variables_5.html" hidden="true"/>
        <files mask="all_1.html" hidden="true"/>
        <files mask="all_5.html" hidden="true"/>
        <files mask="variables_3.html" hidden="true"/>
        <files mask="all_3.html" hidden="true"/>
        <files mask="typedefs_0.html" hidden="true"/>
        <files mask="classes_0.html" hidden="true"/>
        <files mask="search.css" hidden="true"/>
        <files mask="variables_6.html" hidden="true"/>
        <files mask="all_2.html" hidden="true"/>
        <files mask="files_0.html" hidden="true"/>
      </source>
      <source relative_path="rpmsg_lite/doc/search" project_relative_path="doc" type="script">
        <files mask="all_2.js" hidden="true"/>
        <files mask="variables_4.js" hidden="true"/>
        <files mask="pages_0.js" hidden="true"/>
        <files mask="all_1.js" hidden="true"/>
        <files mask="variables_7.js" hidden="true"/>
        <files mask="variables_6.js" hidden="true"/>
        <files mask="all_3.js" hidden="true"/>
        <files mask="all_0.js" hidden="true"/>
        <files mask="functions_0.js" hidden="true"/>
        <files mask="typedefs_0.js" hidden="true"/>
        <files mask="groups_0.js" hidden="true"/>
        <files mask="classes_0.js" hidden="true"/>
        <files mask="variables_3.js" hidden="true"/>
        <files mask="files_0.js" hidden="true"/>
        <files mask="all_6.js" hidden="true"/>
        <files mask="variables_1.js" hidden="true"/>
        <files mask="all_4.js" hidden="true"/>
        <files mask="variables_0.js" hidden="true"/>
        <files mask="searchdata.js" hidden="true"/>
        <files mask="variables_2.js" hidden="true"/>
        <files mask="variables_5.js" hidden="true"/>
        <files mask="search.js" hidden="true"/>
        <files mask="all_5.js" hidden="true"/>
        <files mask="all_7.js" hidden="true"/>
      </source>
      <source relative_path="rpmsg_lite/doc/search" project_relative_path="doc" type="image">
        <files mask="close.png" hidden="true"/>
        <files mask="search_l.png" hidden="true"/>
        <files mask="search_r.png" hidden="true"/>
        <files mask="mag_sel.png" hidden="true"/>
        <files mask="search_m.png" hidden="true"/>
      </source>
      <source condition="middleware.baremetal.K32L3A60" relative_path="rpmsg_lite/lib/rpmsg_lite/porting/environment" project_relative_path="env/bm" type="src">
        <files mask="rpmsg_env_bm.c"/>
      </source>
      <source condition="middleware.freertos-kernel.K32L3A60" relative_path="rpmsg_lite/lib/rpmsg_lite/porting/environment" project_relative_path="env/freertos" type="src">
        <files mask="rpmsg_env_freertos.c"/>
      </source>
      <source condition="middleware.freertos-kernel.K32L3A60" relative_path="rpmsg_lite/lib/include" project_relative_path="./" type="c_include">
        <files mask="rpmsg_queue.h"/>
      </source>
      <source condition="middleware.freertos-kernel.K32L3A60" relative_path="rpmsg_lite/lib/rpmsg_lite" project_relative_path="env/freertos" type="src">
        <files mask="rpmsg_queue.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="middleware_multicore_rpmsg_lite_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="middleware_multicore_rpmsg_lite_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg_lite/lib/include" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg_lite.bm.config.k32l3a6.K32L3A60" name="rpmsg_lite_bm_config" brief="RPMsg-Lite baremetal application configuration" version="3.1.1" full_name="Remote Procedure Messaging Lite BM configuration" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="Multicore/RPMsg-Lite BM" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="source">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg_lite.K32L3A60"/>
          <component_dependency value="middleware.multicore.mcmgr.k32l3a6.K32L3A60"/>
          <component_dependency value="middleware.multicore.rpmsg_lite.k32l3a6_bm.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg_lite/template_application" project_relative_path="./" type="c_include">
        <files mask="rpmsg_config.h"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg_lite/template_application" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg_lite.freertos.config.k32l3a6.K32L3A60" name="rpmsg_lite_freertos_config" brief="RPMsg-Lite FreeRTOS application configuration" version="3.1.1" full_name="Remote Procedure Messaging Lite FreeRTOS configuration" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="Multicore/RPMsg-Lite FreeRTOS" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="source">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg_lite.K32L3A60"/>
          <component_dependency value="middleware.multicore.mcmgr.k32l3a6.K32L3A60"/>
          <component_dependency value="middleware.multicore.rpmsg_lite.k32l3a6_freertos.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg_lite/template_application" project_relative_path="./" type="c_include">
        <files mask="rpmsg_config.h"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg_lite/template_application" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg_lite.k32l3a6_bm.K32L3A60" name="rpmsg_lite_k32l3a6_bm" brief="RPMsg-Lite for frdmk32l3a6 baremetal application" version="3.1.1" full_name="Remote Procedure Messaging Lite porting layer for frdmk32l3a6 board" devices="K32L3A60xxx" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg_lite">
      <dependencies>
        <component_dependency value="middleware.multicore.rpmsg_lite.K32L3A60"/>
      </dependencies>
      <source relative_path="rpmsg_lite/lib/include/platform/k32l3a6" project_relative_path="porting" type="c_include">
        <files mask="rpmsg_platform.h"/>
      </source>
      <source relative_path="rpmsg_lite/lib/rpmsg_lite/porting/platform/k32l3a6" project_relative_path="porting" type="src">
        <files mask="rpmsg_platform.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="middleware_multicore_rpmsg_lite_k32l3a6_bm_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="middleware_multicore_rpmsg_lite_k32l3a6_bm_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg_lite/lib/include/platform/k32l3a6" project_relative_path="porting" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg_lite.k32l3a6_freertos.K32L3A60" name="rpmsg_lite_k32l3a6_freertos" brief="RPMsg-Lite for frdmk32l3a6 FreeRTOS application" version="3.1.1" full_name="Remote Procedure Messaging Lite porting layer for frdmk32l3a6 board" devices="K32L3A60xxx" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg_lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg_lite.K32L3A60"/>
          <component_dependency value="middleware.freertos-kernel.K32L3A60"/>
          <component_dependency value="middleware.freertos-kernel.heap_3.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg_lite/lib/include/platform/k32l3a6" project_relative_path="porting" type="c_include">
        <files mask="rpmsg_platform.h"/>
      </source>
      <source relative_path="rpmsg_lite/lib/rpmsg_lite/porting/platform/k32l3a6" project_relative_path="porting" type="src">
        <files mask="rpmsg_platform.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="middleware_multicore_rpmsg_lite_k32l3a6_freertos_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="middleware_multicore_rpmsg_lite_k32l3a6_freertos_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg_lite/lib/include/platform/k32l3a6" project_relative_path="porting" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.common.K32L3A60" name="sdmmc_common" brief="Middleware sdmmc common" version="2.3.0" full_name="SDMMC common stack" devices="K32L3A60xxx" category="Memories/SDMMC Stack" user_visible="false" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <source relative_path="common" project_relative_path="inc" type="c_include">
        <files mask="fsl_sdmmc_spec.h"/>
        <files mask="fsl_sdmmc_common.h"/>
      </source>
      <source relative_path="common" project_relative_path="src" type="src">
        <files mask="fsl_sdmmc_common.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="middleware_sdmmc_common_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="middleware_sdmmc_common_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="common" project_relative_path="inc" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.host.usdhc.K32L3A60" name="sdmmc_host_usdhc" brief="Middleware sdmmc host usdhc" version="2.5.0" full_name="Middleware sdmmc host usdhc" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <any_of>
          <component_dependency value="middleware.sdmmc.host.usdhc.interrupt.K32L3A60"/>
          <component_dependency value="middleware.sdmmc.host.usdhc.polling.K32L3A60"/>
          <component_dependency value="middleware.sdmmc.host.usdhc.freertos.K32L3A60"/>
        </any_of>
      </dependencies>
      <source relative_path="host/usdhc" project_relative_path="host" type="c_include">
        <files mask="fsl_sdmmc_host.h"/>
      </source>
      <source relative_path="host/usdhc" project_relative_path="host" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="middleware_sdmmc_host_usdhc_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="middleware_sdmmc_host_usdhc_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/usdhc" project_relative_path="host" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.host.usdhc.freertos.K32L3A60" name="sdmmc_host_usdhc_freertos" brief="Middleware sdmmc host usdhc freertos" version="2.5.0" full_name="Middleware sdmmc host usdhc freertos" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.common.K32L3A60"/>
          <component_dependency value="middleware.sdmmc.osa.freertos.K32L3A60"/>
          <component_dependency value="platform.drivers.usdhc.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="host/usdhc/non_blocking" project_relative_path="host" type="src">
        <files mask="fsl_sdmmc_host.c"/>
      </source>
      <source relative_path="host/usdhc" project_relative_path="host" type="c_include">
        <files mask="fsl_sdmmc_host.h"/>
      </source>
      <source relative_path="host/usdhc" project_relative_path="host" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="middleware_sdmmc_host_usdhc_freertos_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="middleware_sdmmc_host_usdhc_freertos_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/usdhc" project_relative_path="host" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.host.usdhc.interrupt.K32L3A60" name="sdmmc_host_usdhc_interrupt" brief="Middleware sdmmc host usdhc interrupt" version="2.5.0" full_name="Middleware sdmmc host usdhc interrupt" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.common.K32L3A60"/>
          <component_dependency value="middleware.sdmmc.osa.bm.K32L3A60"/>
          <component_dependency value="platform.drivers.usdhc.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="host/usdhc/non_blocking" project_relative_path="host" type="src">
        <files mask="fsl_sdmmc_host.c"/>
      </source>
      <source relative_path="host/usdhc" project_relative_path="host" type="c_include">
        <files mask="fsl_sdmmc_host.h"/>
      </source>
      <source relative_path="host/usdhc" project_relative_path="host" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="middleware_sdmmc_host_usdhc_interrupt_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="middleware_sdmmc_host_usdhc_interrupt_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/usdhc" project_relative_path="host" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.host.usdhc.polling.K32L3A60" name="sdmmc_host_usdhc_polling" brief="Middleware sdmmc host usdhc polling" version="2.5.0" full_name="Middleware sdmmc host usdhc polling" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.common.K32L3A60"/>
          <component_dependency value="middleware.sdmmc.osa.bm.K32L3A60"/>
          <component_dependency value="platform.drivers.usdhc.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="host/usdhc/blocking" project_relative_path="host" type="src">
        <files mask="fsl_sdmmc_host.c"/>
      </source>
      <source relative_path="host/usdhc" project_relative_path="host" type="c_include">
        <files mask="fsl_sdmmc_host.h"/>
      </source>
      <source relative_path="host/usdhc" project_relative_path="host" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="middleware_sdmmc_host_usdhc_polling_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="middleware_sdmmc_host_usdhc_polling_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/usdhc" project_relative_path="host" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.mmc.K32L3A60" name="mmc" brief="Middleware sdmmc mmc" version="2.4.1" full_name="SDMMC mmc stack" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.common.K32L3A60"/>
          <component_dependency value="middleware.sdmmc.host.usdhc.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="mmc" project_relative_path="src" type="src">
        <files mask="fsl_mmc.c"/>
      </source>
      <source relative_path="mmc" project_relative_path="inc" type="c_include">
        <files mask="fsl_mmc.h"/>
      </source>
      <source relative_path="mmc" project_relative_path="./mmc" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
      </source>
      <include_paths>
        <include_path relative_path="mmc" project_relative_path="inc" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.osa.bm.K32L3A60" name="sdmmc_osa_bm" brief="Middleware sdmmc osa_bm" version="2.3.0" full_name="SDMMC common stack" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <component_dependency value="component.osa_bm.K32L3A60"/>
      </dependencies>
      <source relative_path="osa" type="c_include">
        <files mask="fsl_sdmmc_osa.h"/>
      </source>
      <source relative_path="osa" type="src">
        <files mask="fsl_sdmmc_osa.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="middleware_sdmmc_osa_bm_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="middleware_sdmmc_osa_bm_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="osa" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.osa.freertos.K32L3A60" name="sdmmc_osa_freertos" brief="Middleware sdmmc osa_freertos" version="2.3.0" full_name="SDMMC common stack" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <component_dependency value="component.osa_free_rtos.K32L3A60"/>
      </dependencies>
      <source relative_path="osa" type="c_include">
        <files mask="fsl_sdmmc_osa.h"/>
      </source>
      <source relative_path="osa" type="src">
        <files mask="fsl_sdmmc_osa.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="middleware_sdmmc_osa_freertos_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="middleware_sdmmc_osa_freertos_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="osa" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.sd.K32L3A60" name="sd" brief="Middleware sdmmc sd" version="2.3.3" full_name="SDMMC sd stack" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.common.K32L3A60"/>
          <component_dependency value="middleware.sdmmc.host.usdhc.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="sd" project_relative_path="src" type="src">
        <files mask="fsl_sd.c"/>
      </source>
      <source relative_path="sd" project_relative_path="inc" type="c_include">
        <files mask="fsl_sd.h"/>
      </source>
      <source relative_path="sd" project_relative_path="./sd" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="middleware_sdmmc_sd_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="middleware_sdmmc_sd_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="sd" project_relative_path="inc" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.sdio.K32L3A60" name="sdio" brief="Middleware sdmmc sdio" version="2.3.2" full_name="SDMMC sdio stack" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.common.K32L3A60"/>
          <component_dependency value="middleware.sdmmc.host.usdhc.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="sdio" project_relative_path="src" type="src">
        <files mask="fsl_sdio.c"/>
      </source>
      <source relative_path="sdio" project_relative_path="inc" type="c_include">
        <files mask="fsl_sdio.h"/>
      </source>
      <source relative_path="sdio" project_relative_path="./sdio" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
      </source>
      <include_paths>
        <include_path relative_path="sdio" project_relative_path="inc" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.common_header.K32L3A60" name="USB Common Header" brief="Middleware usb common_header" version="2.7.0" full_name="USB Common Header" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="USB/USB Common Header" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <component_dependency value="component.osa.K32L3A60"/>
      </dependencies>
      <source relative_path="include" type="c_include">
        <files mask="usb.h"/>
        <files mask="usb_misc.h"/>
        <files mask="usb_spec.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="middleware_usb_common_header_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.audio.external.K32L3A60" name="USB Device Audio" brief="Middleware usb device audio external" version="2.7.0" full_name="USB Device Audio" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <component_dependency value="middleware.usb.device.stack.external.K32L3A60"/>
      </dependencies>
      <source relative_path="output/source/device/class" project_relative_path="device/class/audio" type="src">
        <files mask="usb_device_audio.c"/>
      </source>
      <source relative_path="output/source/device/class" project_relative_path="device/class/audio" type="c_include">
        <files mask="usb_device_audio.h"/>
      </source>
      <include_paths>
        <include_path relative_path="output/source/device/class" project_relative_path="device/class/audio" type="c_include"/>
        <include_path relative_path="output/source/device/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.ccid.external.K32L3A60" name="USB Device CCID" brief="Middleware usb device ccid external" version="2.7.0" full_name="USB Device CCID" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <component_dependency value="middleware.usb.device.stack.external.K32L3A60"/>
      </dependencies>
      <source relative_path="output/source/device/class" project_relative_path="device/class/ccid" type="src">
        <files mask="usb_device_ccid.c"/>
      </source>
      <source relative_path="output/source/device/class" project_relative_path="device/class/ccid" type="c_include">
        <files mask="usb_device_ccid.h"/>
      </source>
      <include_paths>
        <include_path relative_path="output/source/device/class" project_relative_path="device/class/ccid" type="c_include"/>
        <include_path relative_path="output/source/device/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.cdc.external.K32L3A60" name="USB Device CDC" brief="Middleware usb device cdc external" version="2.7.0" full_name="USB Device CDC" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <component_dependency value="middleware.usb.device.stack.external.K32L3A60"/>
      </dependencies>
      <source relative_path="output/source/device/class" project_relative_path="device/class/cdc" type="src">
        <files mask="usb_device_cdc_acm.c"/>
      </source>
      <source relative_path="output/source/device/class" project_relative_path="device/class/cdc" type="c_include">
        <files mask="usb_device_cdc_acm.h"/>
      </source>
      <include_paths>
        <include_path relative_path="output/source/device/class" project_relative_path="device/class/cdc" type="c_include"/>
        <include_path relative_path="output/source/device/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.cdc.rndis.external.K32L3A60" name="USB Device CDC RNDIS" brief="Middleware usb device cdc rndis external" version="2.7.0" full_name="USB Device CDC RNDIS" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.device.stack.external.K32L3A60"/>
          <component_dependency value="middleware.usb.device.cdc.external.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="output/source/device/class" project_relative_path="device/class/cdc_rndis" type="src">
        <files mask="usb_device_cdc_rndis.c"/>
      </source>
      <source relative_path="output/source/device/class" project_relative_path="device/class/cdc_rndis" type="c_include">
        <files mask="usb_device_cdc_rndis.h"/>
      </source>
      <include_paths>
        <include_path relative_path="output/source/device/class" project_relative_path="device/class/cdc_rndis" type="c_include"/>
        <include_path relative_path="output/source/device/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.common_header.K32L3A60" name="USB Device Common Header" brief="Middleware usb device common_header" version="2.7.0" full_name="USB Device Common Header" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="component.osa.K32L3A60"/>
          <component_dependency value="middleware.usb.common_header.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="device" project_relative_path="device/include" type="c_include">
        <files mask="usb_device.h"/>
      </source>
      <source relative_path="device" project_relative_path="device/source" type="c_include">
        <files mask="usb_device_dci.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="middleware_usb_device_common_header_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device" project_relative_path="device/include" type="c_include"/>
        <include_path relative_path="device" project_relative_path="device/source" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.controller.driver.K32L3A60" name="USB Device Common Controller" brief="Middleware usb device controller driver" version="2.7.0" full_name="USB Device Common Controller" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="component.osa.K32L3A60"/>
          <component_dependency value="middleware.usb.device_controller_khci.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="device" project_relative_path="device/include" type="c_include">
        <files mask="usb_device.h"/>
      </source>
      <source relative_path="device" project_relative_path="device/source" type="src">
        <files mask="usb_device_dci.c"/>
      </source>
      <source relative_path="device" project_relative_path="device/source" type="c_include">
        <files mask="usb_device_dci.h"/>
      </source>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="ChangeLogKSDK.txt" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="middleware_usb_device_controller_driver_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device" project_relative_path="device/include" type="c_include"/>
        <include_path relative_path="device" project_relative_path="device/source" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.dfu.external.K32L3A60" name="USB Device DFU" brief="Middleware usb device dfu external" version="2.7.0" full_name="USB Device DFU" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <component_dependency value="middleware.usb.device.stack.external.K32L3A60"/>
      </dependencies>
      <source relative_path="output/source/device/class" project_relative_path="device/class/dfu" type="src">
        <files mask="usb_device_dfu.c"/>
      </source>
      <source relative_path="output/source/device/class" project_relative_path="device/class/dfu" type="c_include">
        <files mask="usb_device_dfu.h"/>
      </source>
      <include_paths>
        <include_path relative_path="output/source/device/class" project_relative_path="device/class/dfu" type="c_include"/>
        <include_path relative_path="output/source/device/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.hid.external.K32L3A60" name="USB Device HID" brief="Middleware usb device hid external" version="2.7.0" full_name="USB Device HID" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <component_dependency value="middleware.usb.device.stack.external.K32L3A60"/>
      </dependencies>
      <source relative_path="output/source/device/class" project_relative_path="device/class/hid" type="src">
        <files mask="usb_device_hid.c"/>
      </source>
      <source relative_path="output/source/device/class" project_relative_path="device/class/hid" type="c_include">
        <files mask="usb_device_hid.h"/>
      </source>
      <include_paths>
        <include_path relative_path="output/source/device/class" project_relative_path="device/class/hid" type="c_include"/>
        <include_path relative_path="output/source/device/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device_controller_khci.K32L3A60" name="USB Device KHCI Controller Driver(FS)" brief="Middleware usb device khci" version="2.7.0" full_name="USB Device KHCI Controller Driver(FS)" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.device.khci_config_header.K32L3A60"/>
          <component_dependency value="middleware.usb.device.common_header.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="device" project_relative_path="device/source/khci" type="src">
        <files mask="usb_device_khci.c"/>
      </source>
      <source relative_path="device" project_relative_path="device/source/khci" type="c_include">
        <files mask="usb_device_khci.h"/>
      </source>
      <source relative_path="include" type="c_include">
        <files mask="usb.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="middleware_usb_device_khci_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device" project_relative_path="device/source/khci" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.khci_config_header.K32L3A60" name="USB device khci config header" brief="USB device khci config header" version="2.7.0" full_name="USB device khci config header" devices="K32L3A60xxx" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <source relative_path="output/npw/device_config/khci" project_relative_path="generated" type="c_include">
        <files mask="usb_device_config.h"/>
      </source>
      <include_paths>
        <include_path relative_path="output/npw/device_config/khci" project_relative_path="generated" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.msd.external.K32L3A60" name="USB Device MSD" brief="Middleware usb device msd external" version="2.7.0" full_name="USB Device MSD" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <component_dependency value="middleware.usb.device.stack.external.K32L3A60"/>
      </dependencies>
      <source relative_path="output/source/device/class" project_relative_path="device/class/msc" type="src">
        <files mask="usb_device_msc.c"/>
        <files mask="usb_device_msc_ufi.c"/>
      </source>
      <source relative_path="output/source/device/class" project_relative_path="device/class/msc" type="c_include">
        <files mask="usb_device_msc.h"/>
        <files mask="usb_device_msc_ufi.h"/>
      </source>
      <include_paths>
        <include_path relative_path="output/source/device/class" project_relative_path="device/class/msc" type="c_include"/>
        <include_path relative_path="output/source/device/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.phdc.external.K32L3A60" name="USB Device PHDC" brief="Middleware usb device phdc external" version="2.7.0" full_name="USB Device PHDC" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <component_dependency value="middleware.usb.device.stack.external.K32L3A60"/>
      </dependencies>
      <source relative_path="output/source/device/class" project_relative_path="device/class/phdc" type="src">
        <files mask="usb_device_phdc.c"/>
      </source>
      <source relative_path="output/source/device/class" project_relative_path="device/class/phdc" type="c_include">
        <files mask="usb_device_phdc.h"/>
      </source>
      <include_paths>
        <include_path relative_path="output/source/device/class" project_relative_path="device/class/phdc" type="c_include"/>
        <include_path relative_path="output/source/device/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.printer.external.K32L3A60" name="USB Device Printer" brief="Middleware usb device printer external" version="2.7.0" full_name="USB Device Printer" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <component_dependency value="middleware.usb.device.stack.external.K32L3A60"/>
      </dependencies>
      <source relative_path="output/source/device/class" project_relative_path="device/class/printer" type="src">
        <files mask="usb_device_printer.c"/>
      </source>
      <source relative_path="output/source/device/class" project_relative_path="device/class/printer" type="c_include">
        <files mask="usb_device_printer.h"/>
      </source>
      <include_paths>
        <include_path relative_path="output/source/device/class" project_relative_path="device/class/printer" type="c_include"/>
        <include_path relative_path="output/source/device/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.stack.external.K32L3A60" name="USB Device Stack" brief="Middleware usb device stack external" version="2.7.0" full_name="USB Device Stack" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="component.osa.K32L3A60"/>
          <component_dependency value="middleware.usb.device.controller.driver.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="output/source/device/class" project_relative_path="device/class" type="src">
        <files mask="usb_device_class.c"/>
      </source>
      <source relative_path="output/source/device/class" project_relative_path="device/class" type="c_include">
        <files mask="usb_device_class.h"/>
      </source>
      <source relative_path="output/source/device" project_relative_path="device/source" type="src">
        <files mask="usb_device_ch9.c"/>
      </source>
      <source relative_path="output/source/device" project_relative_path="device/source" type="c_include">
        <files mask="usb_device_ch9.h"/>
      </source>
      <include_paths>
        <include_path relative_path="output/source/device/class" project_relative_path="device/class" type="c_include"/>
        <include_path relative_path="output/source/device" project_relative_path="device/source" type="c_include"/>
        <include_path relative_path="output/source/device/class" type="c_include"/>
        <include_path relative_path="output/source/device" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.video.external.K32L3A60" name="USB Device Video" brief="Middleware usb device video external" version="2.7.0" full_name="USB Device Video" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <component_dependency value="middleware.usb.device.stack.external.K32L3A60"/>
      </dependencies>
      <source relative_path="output/source/device/class" project_relative_path="device/class/video" type="src">
        <files mask="usb_device_video.c"/>
      </source>
      <source relative_path="output/source/device/class" project_relative_path="device/class/video" type="c_include">
        <files mask="usb_device_video.h"/>
      </source>
      <include_paths>
        <include_path relative_path="output/source/device/class" project_relative_path="device/class/video" type="c_include"/>
        <include_path relative_path="output/source/device/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.utilities.misc_utilities.K32L3A60" name="misc_utilities" brief="Utilities which is needed for particular toolchain like the SBRK function required to address limitation between HEAP and STACK in GCC toolchain library." version="1.0.0" full_name="Utilities miscellaneous" devices="K32L3A60xxx" user_visible="true" type="utilities" package_base_path="devices/K32L3A60/utilities" project_base_path="utilities">
      <source toolchain="armgcc" relative_path="./" type="src">
        <files mask="fsl_sbrk.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="utilities_misc_utilities_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="utilities_misc_utilities_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
    </component>
    <component id="platform.utilities.assert.K32L3A60" name="assert" brief="Utility assert" version="1.0.0" full_name="Utility assert" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="utilities" package_base_path="devices/K32L3A60/utilities" project_base_path="utilities">
      <dependencies>
        <component_dependency value="utility.debug_console.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_assert.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="utility_assert_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="utility_assert_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
    </component>
    <component id="platform.utilities.assert_lite.K32L3A60" name="assert_lite" brief="Utility assert_lite" version="1.0.0" full_name="Utility assert_lite" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="utilities" package_base_path="devices/K32L3A60/utilities/debug_console_lite" project_base_path="utilities">
      <dependencies>
        <component_dependency value="utility.debug_console_lite.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_assert.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="utility_assert_lite_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="utility_assert_lite_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
    </component>
    <component id="utility.debug_console.K32L3A60" name="debug_console" brief="Utility debug_console" version="1.0.0" full_name="Utility debug_console" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="utilities" package_base_path="devices/K32L3A60/utilities" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="component.serial_manager.K32L3A60"/>
          <component_dependency value="platform.drivers.common.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="str" project_relative_path="./" type="src">
        <files mask="fsl_str.c"/>
      </source>
      <source relative_path="str" project_relative_path="./" type="c_include">
        <files mask="fsl_str.h"/>
      </source>
      <source relative_path="debug_console" project_relative_path="./" type="src">
        <files mask="fsl_debug_console.c"/>
      </source>
      <source relative_path="debug_console" project_relative_path="./" type="c_include">
        <files mask="fsl_debug_console.h"/>
        <files mask="fsl_debug_console_conf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="utility_debug_console_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="utility_debug_console_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="str" project_relative_path="./" type="c_include"/>
        <include_path relative_path="debug_console" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="utility.debug_console_lite.K32L3A60" name="debug_console_lite" brief="Utility debug_console_lite" version="1.0.0" full_name="Utility debug_console_lite" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="utilities" package_base_path="devices/K32L3A60/utilities/debug_console_lite" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="component.lpuart_adapter.K32L3A60"/>
          <component_dependency value="platform.drivers.common.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_debug_console.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_debug_console.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="utility_debug_console_lite_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="utility_debug_console_lite_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="utility.incbin.K32L3A60" name="incbin" brief="Used to include slave core binary into master core binary." version="1.0.0" full_name="utility incbin" devices="K32L3A60xxx" user_visible="true" type="utilities" package_base_path="devices/K32L3A60/utilities/incbin" project_base_path="utilities">
      <source toolchain="armgcc mdk" relative_path="./" type="asm_include">
        <files mask="fsl_incbin.S"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="utility_incbin_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
    </component>
    <component id="platform.utilities.notifier.K32L3A60" name="notifier" brief="Utility notifier" version="1.0.0" full_name="Utility notifier" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="utilities" package_base_path="devices/K32L3A60/utilities" project_base_path="utilities/utilities">
      <dependencies>
        <component_dependency value="platform.drivers.common.K32L3A60"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_notifier.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_notifier.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="utility.shell.K32L3A60" name="shell" brief="Utility shell" version="1.0.0" full_name="Utility shell" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" user_visible="true" type="utilities" package_base_path="devices/K32L3A60/utilities" project_base_path="utilities">
      <defines>
        <define name="DEBUG_CONSOLE_RX_ENABLE" value="0"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="utility.debug_console.K32L3A60"/>
          <component_dependency value="component.lists.K32L3A60"/>
          <component_dependency value="platform.drivers.common.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_shell.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_shell.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm0plus_K32L3A60xxx">
        <files mask="utility_shell_K32L3A60_cm0plus.cmake" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="utility_shell_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="project_template.frdmk32l3a6_agm01.K32L3A60" name="frdmk32l3a6_agm01" brief="Board_project_template frdmk32l3a6_agm01" version="1.0.0" full_name="Board_project_template frdmk32l3a6_agm01" devices="K32L3A60xxx" device_cores="cm0plus_K32L3A60xxx cm4_K32L3A60xxx" slave_roles="M0SLAVE" category="Board Support/SDK Project Template" user_visible="true" type="project_template" package_base_path="boards/frdmk32l3a6_agm01/project_template" project_base_path="frdmk32l3a6_agm01/project_template">
      <dependencies>
        <all>
          <component_dependency value="platform.utilities.assert.K32L3A60"/>
          <component_dependency value="utility.debug_console.K32L3A60"/>
          <component_dependency value="component.serial_manager.K32L3A60"/>
          <component_dependency value="platform.devices.K32L3A60_startup.K32L3A60"/>
          <component_dependency value="platform.drivers.common.K32L3A60"/>
          <component_dependency value="platform.drivers.gpio.K32L3A60"/>
          <component_dependency value="platform.drivers.port.K32L3A60"/>
          <component_dependency value="platform.drivers.lpuart.K32L3A60"/>
          <component_dependency value="component.lpuart_adapter.K32L3A60"/>
          <component_dependency value="platform.drivers.msmc.K32L3A60"/>
          <component_dependency value="platform.drivers.lpi2c.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="pin_mux.c"/>
        <files mask="peripherals.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="pin_mux.h"/>
        <files mask="peripherals.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="cmsis.drivers.include.K32L3A60" name="issdk_cmsis_drivers" brief="CMSIS Core header files" version="1.7.0" full_name="Middleware issdk drivers cmsis_drivers" devices="K32L3A60xxx" user_visible="true" type="middleware" package_base_path="CMSIS/Driver/Include" project_base_path="cmsis_driver">
      <source relative_path="./" type="c_include">
        <files mask="Driver_SPI.h"/>
        <files mask="Driver_I2C.h"/>
        <files mask="Driver_Common.h"/>
        <files mask="Driver_USART.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.drivers.gpio_kinetis.K32L3A60" name="gpio_kinetis" brief="ISSDK GPIO Driver for Kinetis" version="1.7.0" full_name="Middleware issdk drivers gpio_kinetis" devices="K32L3A60xxx" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="gpio_driver">
      <source relative_path="drivers/gpio/kinetis" project_relative_path="./" type="src">
        <files mask="gpio_driver_irq.c"/>
        <files mask="gpio_driver.c"/>
      </source>
      <source relative_path="drivers/gpio/kinetis" project_relative_path="./" type="c_include">
        <files mask="gpio_driver.h"/>
      </source>
      <source relative_path="drivers/gpio" project_relative_path="./" type="c_include">
        <files mask="Driver_GPIO.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="middleware_issdk_drivers_gpio_kinetis_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="drivers/gpio/kinetis" project_relative_path="./" type="c_include"/>
        <include_path relative_path="drivers/gpio" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.drivers.systick_utils.K32L3A60" name="systick_utils" brief="ISSDK Utils" version="1.7.0" full_name="Middleware issdk drivers systick_utils" devices="K32L3A60xxx" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="utilities">
      <source relative_path="drivers/systick" project_relative_path="./" type="src">
        <files mask="systick_utils.c"/>
      </source>
      <source relative_path="drivers/systick" project_relative_path="./" type="c_include">
        <files mask="systick_utils.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="middleware_issdk_drivers_systick_utils_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="drivers/systick" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.allregdefs.K32L3A60" name="issdk_allregdefs" brief="ISSDK Sensors RegDefs" version="1.7.0" full_name="Middleware issdk sensor allregdefs" devices="K32L3A60xxx" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="sensors">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.K32L3A60"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="fxas21002.h"/>
        <files mask="fxos8700.h"/>
        <files mask="mpl3115.h"/>
        <files mask="fxlc95000.h"/>
        <files mask="fxls8471q.h"/>
        <files mask="fxls8962.h"/>
        <files mask="fxpq3115.h"/>
        <files mask="mag3110.h"/>
        <files mask="mma845x.h"/>
        <files mask="mma865x.h"/>
        <files mask="mma8491q.h"/>
        <files mask="mma9553.h"/>
        <files mask="diff_p.h"/>
        <files mask="dbap.h"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.boardkit.K32L3A60" name="issdk_boardkit" brief="ISSDK Board-Kit files" version="1.7.0" full_name="Middleware issdk sensor boardkit" devices="K32L3A60xxx" user_visible="false" type="other" package_base_path="middleware/issdk" project_base_path="issdk_boardkit">
      <source relative_path="boardkit/frdm-k22f" project_relative_path="./" type="c_include">
        <files mask="pin_mux.h"/>
        <files mask="clock_config.h"/>
        <files mask="board.h"/>
        <files mask="frdm_k22f.h"/>
        <files mask="RTE_Device.h"/>
      </source>
      <source relative_path="boardkit/frdm-k22f" project_relative_path="./" type="src">
        <files mask="frdm_k22f.c"/>
        <files mask="pin_mux.c"/>
        <files mask="clock_config.c"/>
        <files mask="board.c"/>
      </source>
      <source relative_path="boardkit/frdm-k22f/frdm-stbc-agm01" project_relative_path="./" type="c_include">
        <files mask="frdm_stbc_agm01_shield.h"/>
        <files mask="issdk_hal.h"/>
      </source>
      <source relative_path="boardkit/frdm-k22f/frdm-stbc-agmp03" project_relative_path="./" type="c_include">
        <files mask="frdm_stbc_agmp03_shield.h"/>
        <files mask="issdk_hal.h"/>
      </source>
      <source relative_path="boardkit/frdm-k22f/frdm-stbc-sa9500" project_relative_path="./" type="c_include">
        <files mask="frdm_stbc_sa9500_shield.h"/>
        <files mask="issdk_hal.h"/>
      </source>
      <source relative_path="boardkit/frdm-k64f" project_relative_path="./" type="c_include">
        <files mask="pin_mux.h"/>
        <files mask="clock_config.h"/>
        <files mask="board.h"/>
        <files mask="RTE_Device.h"/>
        <files mask="frdm_k64f.h"/>
      </source>
      <source relative_path="boardkit/frdm-k64f" project_relative_path="./" type="src">
        <files mask="pin_mux.c"/>
        <files mask="clock_config.c"/>
        <files mask="board.c"/>
        <files mask="frdm_k64f.c"/>
      </source>
      <source relative_path="boardkit/frdm-k64f/frdm-fxs-mult2-b" project_relative_path="./" type="c_include">
        <files mask="issdk_hal.h"/>
        <files mask="frdm_fxs_mult2b_shield.h"/>
      </source>
      <source relative_path="boardkit/frdm-k64f/frdm-stbc-agm01" project_relative_path="./" type="c_include">
        <files mask="frdm_stbc_agm01_shield.h"/>
        <files mask="issdk_hal.h"/>
      </source>
      <source relative_path="boardkit/frdm-k64f/frdm-stbc-agm04" project_relative_path="./" type="c_include">
        <files mask="frdm_stbc_agm04_shield.h"/>
        <files mask="issdk_hal.h"/>
      </source>
      <source relative_path="boardkit/frdm-kl25z" project_relative_path="./" type="c_include">
        <files mask="frdm_kl25z.h"/>
        <files mask="pin_mux.h"/>
        <files mask="clock_config.h"/>
        <files mask="board.h"/>
        <files mask="RTE_Device.h"/>
      </source>
      <source relative_path="boardkit/frdm-kl25z" project_relative_path="./" type="src">
        <files mask="frdm_kl25z.c"/>
        <files mask="pin_mux.c"/>
        <files mask="clock_config.c"/>
        <files mask="board.c"/>
      </source>
      <source relative_path="boardkit/frdm-kl25z/frdm-stbc-a8471" project_relative_path="./" type="c_include">
        <files mask="issdk_hal.h"/>
        <files mask="frdm_stbc_a8471_shield.h"/>
      </source>
      <source relative_path="boardkit/frdm-kl25z/frdm-stbc-a8491" project_relative_path="./" type="c_include">
        <files mask="frdm_stbc_a8491_shield.h"/>
        <files mask="issdk_hal.h"/>
      </source>
      <source relative_path="boardkit/frdm-kl25z/frdm-stbc-p3115" project_relative_path="./" type="c_include">
        <files mask="frdm_stbc_p3115_shield.h"/>
        <files mask="issdk_hal.h"/>
      </source>
      <source relative_path="boardkit/frdm-kl25z/frdm" project_relative_path="./" type="c_include">
        <files mask="issdk_hal.h"/>
      </source>
      <source relative_path="boardkit/frdm-kl25z/rd-kl25z" project_relative_path="./" type="c_include">
        <files mask="issdk_hal.h"/>
        <files mask="rd_kl25z_gdl.h"/>
      </source>
      <source relative_path="boardkit/frdm-kl25z/virtual_shield" project_relative_path="./" type="c_include">
        <files mask="virtual_shield.h"/>
        <files mask="issdk_hal.h"/>
      </source>
      <source relative_path="boardkit/frdm-kl27z" project_relative_path="./" type="c_include">
        <files mask="pin_mux.h"/>
        <files mask="clock_config.h"/>
        <files mask="board.h"/>
        <files mask="RTE_Device.h"/>
        <files mask="frdm_kl27z.h"/>
      </source>
      <source relative_path="boardkit/frdm-kl27z" project_relative_path="./" type="src">
        <files mask="frdm_kl27z.c"/>
        <files mask="pin_mux.c"/>
        <files mask="clock_config.c"/>
        <files mask="board.c"/>
      </source>
      <source relative_path="boardkit/frdm-kl27z/frdm-stbc-b3115" project_relative_path="./" type="c_include">
        <files mask="issdk_hal.h"/>
        <files mask="frdm_stbc_b3115_shield.h"/>
      </source>
      <source relative_path="boardkit/frdm-kl27z/frdm-stbc-agmp03" project_relative_path="./" type="c_include">
        <files mask="frdm_stbc_agmp03_shield.h"/>
        <files mask="issdk_hal.h"/>
      </source>
      <source relative_path="boardkit/frdm-kl27z/frdm-stbc-a8471" project_relative_path="./" type="c_include">
        <files mask="issdk_hal.h"/>
        <files mask="frdm_stbc_a8471_shield.h"/>
      </source>
      <source relative_path="boardkit/frdm-kl27z/frdm-stbc-a8491" project_relative_path="./" type="c_include">
        <files mask="frdm_stbc_a8491_shield.h"/>
        <files mask="issdk_hal.h"/>
      </source>
      <source relative_path="boardkit/frdm-kl27z/frdm-stbc-p3115" project_relative_path="./" type="c_include">
        <files mask="frdm_stbc_p3115_shield.h"/>
        <files mask="issdk_hal.h"/>
      </source>
      <source relative_path="boardkit/frdm-kl27z/frdm" project_relative_path="./" type="c_include">
        <files mask="issdk_hal.h"/>
      </source>
      <source relative_path="boardkit/lpcxpresso54114" project_relative_path="./" type="c_include">
        <files mask="pin_mux.h"/>
        <files mask="lpc54114.h"/>
        <files mask="clock_config.h"/>
        <files mask="board.h"/>
        <files mask="RTE_Device.h"/>
      </source>
      <source relative_path="boardkit/lpcxpresso54114" project_relative_path="./" type="src">
        <files mask="lpc54114.c"/>
        <files mask="pin_mux.c"/>
        <files mask="clock_config.c"/>
        <files mask="board.c"/>
      </source>
      <source relative_path="boardkit/lpcxpresso54114/frdm-stbc-agm01" project_relative_path="./" type="c_include">
        <files mask="frdm_stbc_agm01_shield.h"/>
        <files mask="issdk_hal.h"/>
      </source>
      <source relative_path="boardkit/lpcxpresso54114/frdm-stbc-agmp03" project_relative_path="./" type="c_include">
        <files mask="frdm_stbc_agmp03_shield.h"/>
        <files mask="issdk_hal.h"/>
      </source>
      <source relative_path="boardkit/lpcxpresso55s69" project_relative_path="./" type="c_include">
        <files mask="pin_mux.h"/>
        <files mask="clock_config.h"/>
        <files mask="board.h"/>
        <files mask="lpc55s69.h"/>
        <files mask="RTE_Device.h"/>
      </source>
      <source relative_path="boardkit/lpcxpresso55s69" project_relative_path="./" type="src">
        <files mask="pin_mux.c"/>
        <files mask="clock_config.c"/>
        <files mask="lpc55s69.c"/>
        <files mask="board.c"/>
      </source>
      <source relative_path="boardkit/lpcxpresso55s69/frdm-stbc-agm01" project_relative_path="./" type="c_include">
        <files mask="frdm_stbc_agm01_shield.h"/>
        <files mask="issdk_hal.h"/>
      </source>
      <source relative_path="boardkit/lpcxpresso55s16" project_relative_path="./" type="c_include">
        <files mask="pin_mux.h"/>
        <files mask="lpc55s16.h"/>
        <files mask="RTE_Device.h"/>
      </source>
      <source relative_path="boardkit/lpcxpresso55s16" project_relative_path="./" type="src">
        <files mask="pin_mux.c"/>
        <files mask="lpc55s16.c"/>
      </source>
      <source relative_path="boardkit/lpcxpresso55s16/frdm-stbc-agm01" project_relative_path="./" type="c_include">
        <files mask="frdm_stbc_agm01_shield.h"/>
        <files mask="issdk_hal.h"/>
      </source>
      <source relative_path="boardkit/frdm-ke15z" project_relative_path="./" type="src">
        <files mask="frdm_ke15z.c"/>
        <files mask="pin_mux.c"/>
        <files mask="clock_config.c"/>
        <files mask="board.c"/>
      </source>
      <source relative_path="boardkit/frdm-ke15z" project_relative_path="./" type="c_include">
        <files mask="pin_mux.h"/>
        <files mask="clock_config.h"/>
        <files mask="frdm_ke15z.h"/>
        <files mask="board.h"/>
        <files mask="RTE_Device.h"/>
      </source>
      <source relative_path="boardkit/frdm-ke15z/frdm-stbc-dp5004" project_relative_path="./" type="c_include">
        <files mask="frdm-stbc-dp5004_shield.h"/>
        <files mask="issdk_hal.h"/>
      </source>
      <source relative_path="boardkit/frdm-ke15z/frdm-stba-pa7250" project_relative_path="./" type="c_include">
        <files mask="issdk_hal.h"/>
        <files mask="frdm-stba-pa7250_shield.h"/>
      </source>
      <source relative_path="boardkit/frdm-ke15z/frdm-stbi-dp300x" project_relative_path="./" type="c_include">
        <files mask="issdk_hal.h"/>
        <files mask="frdm-stbi-dp300x_shield.h"/>
      </source>
      <source relative_path="boardkit/frdm-ke15z/frdm-stba-pd7250" project_relative_path="./" type="c_include">
        <files mask="frdm-stba-pd7250_shield.h"/>
        <files mask="issdk_hal.h"/>
      </source>
      <source relative_path="boardkit/frdm-k32w042" project_relative_path="./" type="c_include">
        <files mask="pin_mux.h"/>
        <files mask="clock_config.h"/>
        <files mask="board.h"/>
        <files mask="frdm_k32w042.h"/>
        <files mask="RTE_Device.h"/>
      </source>
      <source relative_path="boardkit/frdm-k32w042" project_relative_path="./" type="src">
        <files mask="frdm_k32w042.c"/>
        <files mask="pin_mux.c"/>
        <files mask="clock_config.c"/>
        <files mask="board.c"/>
      </source>
      <source relative_path="boardkit/frdm-k32w042/frdm-stbc-agm01" project_relative_path="./" type="c_include">
        <files mask="frdm_stbc_agm01_shield.h"/>
        <files mask="issdk_hal.h"/>
      </source>
      <source relative_path="boardkit/evk-mimxrt1050" project_relative_path="./" type="c_include">
        <files mask="evkmimxrt1050.h"/>
        <files mask="pin_mux.h"/>
        <files mask="clock_config.h"/>
        <files mask="board.h"/>
        <files mask="RTE_Device.h"/>
      </source>
      <source relative_path="boardkit/evk-mimxrt1050" project_relative_path="./" type="src">
        <files mask="evkmimxrt1050.c"/>
        <files mask="pin_mux.c"/>
        <files mask="clock_config.c"/>
        <files mask="board.c"/>
      </source>
      <source relative_path="boardkit/evk-mimxrt1050/frdm-stbc-agm01" project_relative_path="./" type="c_include">
        <files mask="frdm_stbc_agm01_shield.h"/>
        <files mask="issdk_hal.h"/>
      </source>
      <source relative_path="boardkit/evkb-imxrt1050" project_relative_path="./" type="c_include">
        <files mask="pin_mux.h"/>
        <files mask="clock_config.h"/>
        <files mask="evkbimxrt1050.h"/>
        <files mask="board.h"/>
        <files mask="RTE_Device.h"/>
      </source>
      <source relative_path="boardkit/evkb-imxrt1050" project_relative_path="./" type="src">
        <files mask="pin_mux.c"/>
        <files mask="clock_config.c"/>
        <files mask="board.c"/>
        <files mask="evkbimxrt1050.c"/>
      </source>
      <source relative_path="boardkit/evkb-imxrt1050/frdm-stbc-agm01" project_relative_path="./" type="c_include">
        <files mask="frdm_stbc_agm01_shield.h"/>
        <files mask="issdk_hal.h"/>
      </source>
    </component>
    <component id="middleware.issdk.sensor.driverexamples.K32L3A60" name="issdk_driverexamples" brief="ISSDK Sensor Driver Examples files" version="1.7.0" full_name="Middleware issdk sensor driverexamples" devices="K32L3A60xxx" user_visible="false" type="other" package_base_path="middleware/issdk" project_base_path="issdk_driverexamples">
      <source relative_path="driverexamples/fxas21002" project_relative_path="./" type="src">
        <files mask="fxas21002_poll_spi.c"/>
        <files mask="fxas21002_poll.c"/>
        <files mask="fxas21002_fifo.c"/>
        <files mask="fxas21002_interrupt.c"/>
      </source>
      <source relative_path="driverexamples/fxls8471q" project_relative_path="./" type="src">
        <files mask="fxls8471q_spi_poll.c"/>
        <files mask="fxls8471q_spi_fifo.c"/>
        <files mask="fxls8471q_spi_interrupt.c"/>
      </source>
      <source relative_path="driverexamples/fxls8962" project_relative_path="./" type="src">
        <files mask="fxls8962_fifo_spi.c"/>
        <files mask="fxls8962_normal_spi.c"/>
        <files mask="fxls8962_motion_detection.c"/>
        <files mask="fxls8962_normal.c"/>
        <files mask="fxls8962_orientation_detection.c"/>
        <files mask="fxls8962_interrupt.c"/>
        <files mask="fxls8962_freefall.c"/>
      </source>
      <source relative_path="driverexamples/fxos8700" project_relative_path="./" type="src">
        <files mask="fxos8700_interrupt.c"/>
        <files mask="fxos8700_poll.c"/>
        <files mask="fxos8700_fifo.c"/>
        <files mask="fxos8700_poll_spi.c"/>
      </source>
      <source relative_path="driverexamples/mag3110" project_relative_path="./" type="src">
        <files mask="mag3110_normal_interrupt.c"/>
        <files mask="mag3110_oneshot.c"/>
        <files mask="mag3110_normal.c"/>
      </source>
      <source relative_path="driverexamples/mma845x" project_relative_path="./" type="src">
        <files mask="mma845x_interrupt.c"/>
        <files mask="mma845x_fifo.c"/>
        <files mask="mma845x_poll.c"/>
      </source>
      <source relative_path="driverexamples/mma8491q" project_relative_path="./" type="src">
        <files mask="mma8491q_example.c"/>
      </source>
      <source relative_path="driverexamples/mma865x" project_relative_path="./" type="src">
        <files mask="mma865x_poll.c"/>
        <files mask="mma865x_doubletap-detection.c"/>
        <files mask="mma865x_freefall-detection.c"/>
        <files mask="mma865x_auto-wake-sleep.c"/>
        <files mask="mma865x_interrupt.c"/>
        <files mask="mma865x_fifo.c"/>
        <files mask="mma865x_freefall.c"/>
      </source>
      <source relative_path="driverexamples/mpl3115" project_relative_path="./" type="src">
        <files mask="mpl3115_normal.c"/>
        <files mask="mpl3115_fifo.c"/>
        <files mask="mpl3115_oneshot.c"/>
        <files mask="mpl3115_altitude.c"/>
        <files mask="mpl3115_fifo_interrupt.c"/>
        <files mask="mpl3115_normal_interrupt.c"/>
      </source>
      <source relative_path="driverexamples/fxlc95000" project_relative_path="./" type="src">
        <files mask="fxlc95000_accel_i2c.c"/>
        <files mask="fxlc95000_accel_spi.c"/>
      </source>
      <source relative_path="driverexamples/mma9553" project_relative_path="./" type="src">
        <files mask="mma9553_pedometer_spi.c"/>
        <files mask="mma9553_pedometer_i2c.c"/>
        <files mask="mma9553_pedometer_interrupt.c"/>
      </source>
      <source relative_path="driverexamples/fxpq3115" project_relative_path="./" type="src">
        <files mask="fxpq3115_normal_interrupt.c"/>
        <files mask="fxpq3115_fifo_interrupt.c"/>
        <files mask="fxpq3115_fifo.c"/>
        <files mask="fxpq3115_normal.c"/>
        <files mask="fxpq3115_oneshot.c"/>
        <files mask="fxpq3115_altitude.c"/>
      </source>
      <source relative_path="driverexamples/dp5004" project_relative_path="./" type="src">
        <files mask="dp5004_interrupt.c"/>
      </source>
      <source relative_path="driverexamples/demos" project_relative_path="./" type="src">
        <files mask="mma8491q_demo.c"/>
        <files mask="fxlc95000_flash_demo.c"/>
        <files mask="fxos8700_demo.c"/>
        <files mask="orientaion_application_baremetal_agmp03.c"/>
        <files mask="mma845x_demo.c"/>
        <files mask="mpl3115_demo.c"/>
        <files mask="fxls8471_demo.c"/>
        <files mask="mpl3115_oneShot_demo.c"/>
        <files mask="fxls8962_demo.c"/>
        <files mask="fxos8700_poll_demo.c"/>
        <files mask="mpl3115_poll_demo.c"/>
        <files mask="orientaion_application_baremetal_agm04.c"/>
        <files mask="dp5004_demo.c"/>
        <files mask="demo_11_axis_mult2b.c"/>
        <files mask="fxas21002_demo.c"/>
        <files mask="fxpq3115_demo.c"/>
        <files mask="mag3110_poll_demo.c"/>
        <files mask="mma865x_demo.c"/>
        <files mask="orientaion_application_baremetal_agm01.c"/>
        <files mask="host_demo.c"/>
        <files mask="diff_p_demo.c"/>
        <files mask="mag3110_demo.c"/>
        <files mask="fxas21002_poll_demo.c"/>
        <files mask="mma9553_demo.c"/>
        <files mask="fxls8471_demo_kl25z.c"/>
        <files mask="data_logger_demo.c"/>
      </source>
    </component>
    <component id="middleware.issdk.sensor.fxas21002.K32L3A60" name="issdk_fxas21002" brief="ISSDK FXAS21002 Sensor Driver Files" version="1.7.0" full_name="Middleware issdk sensor fxas21002" devices="K32L3A60xxx" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="sensors">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.K32L3A60"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="fxas21002.h"/>
        <files mask="fxas21002_drv.h"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="fxas21002_drv.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="middleware_issdk_sensor_fxas21002_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.fxlc95000.K32L3A60" name="issdk_fxlc95000" brief="ISSDK FXLC95000 Sensor Driver Files" version="1.7.0" full_name="Middleware issdk sensor fxlc95000" devices="K32L3A60xxx" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="sensors">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.K32L3A60"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="fxlc95000.h"/>
        <files mask="fxlc95000_drv.h"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="fxlc95000_drv.c"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.fxls8471q.K32L3A60" name="issdk_fxls8471q" brief="ISSDK FXLS8471 Sensor Driver Files" version="1.7.0" full_name="Middleware issdk sensor fxls8471q" devices="K32L3A60xxx" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="sensors">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.K32L3A60"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="fxls8471q.h"/>
        <files mask="fxls8471q_drv.h"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="fxls8471q_drv.c"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.fxls8962.K32L3A60" name="issdk_fxls8962" brief="ISSDK FXLS8962 Sensor Driver Files" version="1.7.0" full_name="Middleware issdk sensor fxls8962" devices="K32L3A60xxx" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="sensors">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.K32L3A60"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="fxls8962.h"/>
        <files mask="fxls8962_drv.h"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="fxls8962_drv.c"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.fxos8700.K32L3A60" name="issdk_fxos8700" brief="ISSDK FXOS8700 Sensor Driver Files" version="1.7.0" full_name="Middleware issdk sensor fxos8700" devices="K32L3A60xxx" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="sensors">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.K32L3A60"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="fxos8700.h"/>
        <files mask="fxos8700_drv.h"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="fxos8700_drv.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="middleware_issdk_sensor_fxos8700_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.fxpq3115.K32L3A60" name="issdk_fxpq3115" brief="ISSDK FXPQ3115 Sensor Driver Files" version="1.7.0" full_name="Middleware issdk sensor fxpq3115" devices="K32L3A60xxx" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="sensors">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.K32L3A60"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="fxpq3115.h"/>
        <files mask="fxpq3115_drv.h"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="fxpq3115_drv.c"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.fxps7250d4.K32L3A60" name="issdk_fxps7250d4" brief="ISSDK fxps7250d4 Sensor Driver Files" version="1.7.0" full_name="Middleware issdk sensor fxps7250d4" devices="K32L3A60xxx" user_visible="false" type="middleware" package_base_path="middleware/issdk" project_base_path="sensors">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.K32L3A60"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="dbap.h"/>
        <files mask="dbap_drv.h"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="dbap_drv.c"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.interface.common.K32L3A60" name="issdk_interfaces" brief="ISSDK Sensor Interface Common" version="1.7.0" full_name="Middleware issdk sensor interface common" devices="K32L3A60xxx" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="interfaces">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.K32L3A60"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="register_io_i2c.c"/>
        <files mask="register_io_spi.c"/>
        <files mask="sensor_io_spi.c"/>
        <files mask="sensor_io_i2c.c"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="register_io_i2c.h"/>
        <files mask="register_io_spi.h"/>
        <files mask="sensor_io_spi.h"/>
        <files mask="sensor_io_i2c.h"/>
        <files mask="sensor_drv.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace" device_cores="cm4_K32L3A60xxx">
        <files mask="middleware_issdk_sensor_interface_common_K32L3A60_cm4.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.isl29023.K32L3A60" name="issdk_isl29023" brief="ISSDK ISL29023 Sensor Driver Files" version="1.7.0" full_name="Middleware issdk sensor isl29023" devices="K32L3A60xxx" user_visible="false" type="middleware" package_base_path="middleware/issdk" project_base_path="sensors">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.K32L3A60"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="isl29023.h"/>
        <files mask="isl29023_drv.h"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="isl29023_drv.c"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.mag3110.K32L3A60" name="issdk_mag3110" brief="ISSDK MAG3110 Sensor Driver Files" version="1.7.0" full_name="Middleware issdk sensor mag3110" devices="K32L3A60xxx" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="sensors">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.K32L3A60"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="mag3110.h"/>
        <files mask="mag3110_drv.h"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="mag3110_drv.c"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.mma845x.K32L3A60" name="issdk_mma845x" brief="ISSDK MMA845x Sensor Driver Files" version="1.7.0" full_name="Middleware issdk sensor mma845x" devices="K32L3A60xxx" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="sensors">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.K32L3A60"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="mma845x.h"/>
        <files mask="mma845x_drv.h"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="mma845x_drv.c"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.mma8491q.K32L3A60" name="issdk_mma8491q" brief="ISSDK MMA8491 Sensor Driver Files" version="1.7.0" full_name="Middleware issdk sensor mma8491q" devices="K32L3A60xxx" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="sensors">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.K32L3A60"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="mma8491q.h"/>
        <files mask="mma8491q_drv.h"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="mma8491q_drv.c"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.mma865x.K32L3A60" name="issdk_mma865x" brief="ISSDK MMA865x Sensor Driver Files" version="1.7.0" full_name="Middleware issdk sensor mma865x" devices="K32L3A60xxx" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="sensors">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.K32L3A60"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="mma865x.h"/>
        <files mask="mma865x_drv.h"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="mma865x_drv.c"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.mma9553.K32L3A60" name="issdk_mma9553" brief="ISSDK MMA9553 Sensor Driver Files" version="1.7.0" full_name="Middleware issdk sensor mma9553" devices="K32L3A60xxx" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="sensors">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.K32L3A60"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="mma9553.h"/>
        <files mask="mma9553_drv.h"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="mma9553_drv.c"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.mpl3115.K32L3A60" name="issdk_mpl3115" brief="ISSDK MPL3115 Sensor Driver Files" version="1.7.0" full_name="Middleware issdk sensor mpl3115" devices="K32L3A60xxx" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="sensors">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.K32L3A60"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="mpl3115.h"/>
        <files mask="mpl3115_drv.h"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="mpl3115_drv.c"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.nps300x.K32L3A60" name="issdk_nps300x" brief="ISSDK nps300x Sensor Driver Files" version="1.7.0" full_name="Middleware issdk sensor nps300x" devices="K32L3A60xxx" user_visible="false" type="middleware" package_base_path="middleware/issdk" project_base_path="sensors">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.K32L3A60"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.K32L3A60"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="diff_p.h"/>
        <files mask="diff_p_drv.h"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="diff_p_drv.c"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.tools.K32L3A60" name="issdk_tools" brief="ISSDK Serial to MQTT bridge application" version="1.7.0" full_name="Middleware issdk sensor tools" devices="K32L3A60xxx" user_visible="false" type="other" package_base_path="middleware/issdk" project_base_path="issdk_senor">
      <source relative_path="tools/Serial_To_MQTT" project_relative_path="./" type="script">
        <files mask="CloudBridgeNXPDemo.py"/>
      </source>
    </component>
  </components>
</ksdk:manifest>
