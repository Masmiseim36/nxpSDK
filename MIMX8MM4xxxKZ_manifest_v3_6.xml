<?xml version="1.0" encoding="UTF-8"?>
<ksdk:manifest xmlns:ksdk="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="SDK_2.x_MIMX8MM4xxxKZ" name="MIMX8MM4xxxKZ" brief="This is SDK version 2.7.0 manifest file. It describes the content of the MIMX8MM4xxxKZ and additional settings for tools that support SDK version 2.7.0" format_version="3.6" api_version="2.0.0" configuration="d0e24602c4a388885f60703c2f27c6ab" xsi:schemaLocation="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd http://nxp.com/mcuxpresso/sdk/sdk_manifest_v3.6.xsd">
  <!--Timestamp (UTC): 2020-04-14 13:39:28.090840-->
  <defines>
    <define name="CPU_$|package|" value=""/>
    <define name="CPU_$|package|_$|core|" value=""/>
  </defines>
  <externalDefinitions>
    <definition extID="com.crt.advproject.config.exe.debug"/>
    <definition extID="com.crt.advproject.config.exe.release"/>
    <definition extID="QSPI_FLASH_MIMX8MM6xxxLZ"/>
    <definition extID="QSPI_FLASH_MIMX8MM4xxxKZ"/>
  </externalDefinitions>
  <ksdk id="MCUXpresso270" name="MCUXpresso270" version="2.7.0" revision="303 2019-12-19"/>
  <compilers>
    <compiler id="compiler_gcc" name="gcc" type="gcc"/>
    <compiler id="compiler_iar" name="iar" type="iar"/>
  </compilers>
  <toolchainSettings/>
  <toolchains>
    <toolchain id="armgcc" name="GCC_ARM_Embedded" version="8.3.1" full_name="GCC ARM Embedded" compiler="compiler_gcc" type="armgcc" vendor="GCC ARM Embedded" vendor_url="http://launchpad.net/gcc-arm-embedded"/>
    <toolchain id="iar" name="IAR_Embedded_Workbench_for_ARM" version="8.40.2" full_name="IAR Embedded Workbench for ARM" compiler="compiler_iar" type="iar" vendor="IAR Systems" vendor_url="http://www.iar.com"/>
  </toolchains>
  <boards>
    <board id="evkmimx8mm" name="EVK-MIMX8MM" href="http://www.nxp.com/iMX8M" version="1.0.0" package="MIMX8MM6DVTLZ">
      <description>The evkmimx8mm is an development platform for MIMX8MM3, MIMX8MM4, MIMX8MM5, MIMX8MM6 MCUs</description>
      <image path="docs/images" type="image">
        <files mask="EVK-MIMX8MM.gif"/>
      </image>
      <metadataSet>
        <metadata key="vendor" value="NXP"/>
        <metadata key="html">
          <specific>
            <content>The i.MX 8M Mini family of boards provides a powerful and flexible development system for NXPÂ®'s Cortex-M4 MCUs.</content>
          </specific>
        </metadata>
      </metadataSet>
      <examples>
        <example id="evkmimx8mm_cmsis_ecspi_int_loopback_transfer" name="cmsis_ecspi_int_loopback_transfer" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_ecspi_int_loopback_transfer example shows how to use CMSIS ECSPI driver in interrupt way: In this example , ECSPI will do a loopback transfer in interrupt way, so, there is no need to set up any pins.And we should set the ECSPIx-&gt;TESTREG[LBC] bit, this bit is used in Master mode only. When this bit is set, the ECSPI connects the transmitter and receiver sections internally, and the data shifted out from the most-significant bit of the shift register is looped back into the least-significant bit of the Shift register.In this way, a self-test of the complete transmit/receive path can be made. The output pins are not affected, and the input pins are ignored." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="cmsis_driver_examples/ecspi" path="boards/evkmimx8mm/cmsis_driver_examples/ecspi/int_loopback_transfer">
          <external path="boards/evkmimx8mm/cmsis_driver_examples/ecspi/int_loopback_transfer" type="xml">
            <files mask="cmsis_ecspi_int_loopback_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_cmsis_ecspi_sdma_loopback_transfer" name="cmsis_ecspi_sdma_loopback_transfer" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_ecspi_sdma_loopback_transfer example shows how to use CMSIS ECSPI driver in SDMA way: In this example , ECSPI will do a loopback transfer in SDMA way, so, there is no need to set up any pins.And we should set the ECSPIx-&gt;TESTREG[LBC] bit, this bit is used in Master mode only. When this bit is set, the ECSPI connects the transmitter and receiver sections internally, and the data shifted out from the most-significant bit of the shift register is looped back into the least-significant bit of the Shift register.In this way, a self-test of the complete transmit/receive path can be made. The output pins are not affected, and the input pins are ignored." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="cmsis_driver_examples/ecspi" path="boards/evkmimx8mm/cmsis_driver_examples/ecspi/sdma_loopback_transfer">
          <external path="boards/evkmimx8mm/cmsis_driver_examples/ecspi/sdma_loopback_transfer" type="xml">
            <files mask="cmsis_ecspi_sdma_loopback_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_cmsis_ii2c_int_b2b_transfer_master" name="cmsis_ii2c_int_b2b_transfer_master" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The i2c_interrupt_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="cmsis_driver_examples/i2c" path="boards/evkmimx8mm/cmsis_driver_examples/i2c/int_b2b_transfer/master">
          <external path="boards/evkmimx8mm/cmsis_driver_examples/i2c/int_b2b_transfer/master" type="xml">
            <files mask="cmsis_ii2c_int_b2b_transfer_master.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_cmsis_ii2c_int_b2b_transfer_slave" name="cmsis_ii2c_int_b2b_transfer_slave" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The i2c_interrupt_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="cmsis_driver_examples/i2c" path="boards/evkmimx8mm/cmsis_driver_examples/i2c/int_b2b_transfer/slave">
          <external path="boards/evkmimx8mm/cmsis_driver_examples/i2c/int_b2b_transfer/slave" type="xml">
            <files mask="cmsis_ii2c_int_b2b_transfer_slave.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_cmsis_iuart_interrupt_transfer" name="cmsis_iuart_interrupt_transfer" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_interrupt_transfer example shows how to use uart cmsis driver in interrupt way:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="cmsis_driver_examples/uart" path="boards/evkmimx8mm/cmsis_driver_examples/uart/interrupt_transfer">
          <external path="boards/evkmimx8mm/cmsis_driver_examples/uart/interrupt_transfer" type="xml">
            <files mask="cmsis_iuart_interrupt_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_cmsis_iuart_sdma_transfer" name="cmsis_iuart_sdma_transfer" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_sdma_transfer example shows how to use uart cmsis driver with SDMA:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="cmsis_driver_examples/uart" path="boards/evkmimx8mm/cmsis_driver_examples/uart/sdma_transfer">
          <external path="boards/evkmimx8mm/cmsis_driver_examples/uart/sdma_transfer" type="xml">
            <files mask="cmsis_iuart_sdma_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_ecspi_interrupt_b2b_transfer_master" name="ecspi_interrupt_b2b_transfer_master" brief="The ecspi_interrupt_b2b_transfer example shows how to use ECSPI driver in interrupt way:In this example , we need two boards, one board used as ECSPI master and another board used as ECSPI slave.The file 'ecspi_interrupt_b2b_transfer_master.c' includes the ECSPI master code.This example uses the transactional API in ECSPI driver.1. ECSPI master send/received data to/from ECSPI slave in interrupt . (ECSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/ecspi" path="boards/evkmimx8mm/driver_examples/ecspi/interrupt_b2b_transfer/master">
          <external path="boards/evkmimx8mm/driver_examples/ecspi/interrupt_b2b_transfer/master" type="xml">
            <files mask="ecspi_interrupt_b2b_transfer_master.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_ecspi_interrupt_b2b_transfer_slave" name="ecspi_interrupt_b2b_transfer_slave" brief="The ecspi_interrupt_b2b_transfer example shows how to use ECSPI driver in interrupt way:In this example , we need two boards, one board used as ECSPI master and another board used as ECSPI slave.The file 'ecspi_interrupt_b2b_transfer_slave.c' includes the ECSPI slave code.This example uses the transactional API in ECSPI driver.1. ECSPI master send/received data to/from ECSPI slave in interrupt . (ECSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/ecspi" path="boards/evkmimx8mm/driver_examples/ecspi/interrupt_b2b_transfer/slave">
          <external path="boards/evkmimx8mm/driver_examples/ecspi/interrupt_b2b_transfer/slave" type="xml">
            <files mask="ecspi_interrupt_b2b_transfer_slave.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_ecspi_loopback" name="ecspi_loopback" brief="The ecspi_loopback demo shows how the ecspi do a loopback transfer internally.The ECSPI connects the transmitter and receiver sections internally, and the data shifted out from the most-significant bit of the shift register is looped back into the least-significant bit of the Shift register. In this way, a self-test of the complete transmit/receive path can be made. The output pins are not affected, and the input pins are ignored." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/ecspi" path="boards/evkmimx8mm/driver_examples/ecspi/ecspi_loopback">
          <external path="boards/evkmimx8mm/driver_examples/ecspi/ecspi_loopback" type="xml">
            <files mask="ecspi_loopback.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_ecspi_polling_b2b_transfer_master" name="ecspi_polling_b2b_transfer_master" brief="The ecspi_polling_b2b_transfer example shows how to use ECSPI driver in polling way:In this example , we need two boards, one board used as ECSPI master and another board used as ECSPI slave.The file 'ecspi_polling_b2b_transfer_master.c' includes the ECSPI master code.1. ECSPI master send/received data to/from ECSPI slave in polling . (ECSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/ecspi" path="boards/evkmimx8mm/driver_examples/ecspi/polling_b2b_transfer/master">
          <external path="boards/evkmimx8mm/driver_examples/ecspi/polling_b2b_transfer/master" type="xml">
            <files mask="ecspi_polling_b2b_transfer_master.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_ecspi_polling_b2b_transfer_slave" name="ecspi_polling_b2b_transfer_slave" brief="The ecspi_polling_b2b_transfer example shows how to use ECSPI driver in polling way:In this example , we need two boards, one board used as ECSPI master and another board used as ECSPI slave.The file 'ecspi_polling_b2b_transfer_slave.c' includes the ECSPI slave code.1. ECSPI master send/received data to/from ECSPI slave in polling . (ECSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/ecspi" path="boards/evkmimx8mm/driver_examples/ecspi/polling_b2b_transfer/slave">
          <external path="boards/evkmimx8mm/driver_examples/ecspi/polling_b2b_transfer/slave" type="xml">
            <files mask="ecspi_polling_b2b_transfer_slave.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_freertos_ecspi_loopback" name="freertos_ecspi_loopback" brief="The freertos_ecspi_loopback demo shows how the ecspi do a loopback transfer internally in FreeRTOS.The ECSPI connects the transmitter and receiver sections internally, and the data shifted out from the most-significant bit of the shift register is looped back into the least-significant bit of the Shift register. In this way, a self-test of the complete transmit/receive path can be made. The output pins are not affected, and the input pins are ignored." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="rtos_examples/freertos_ecspi/ecspi_loopback" path="boards/evkmimx8mm/rtos_examples/freertos_ecspi/ecspi_loopback">
          <external path="boards/evkmimx8mm/rtos_examples/freertos_ecspi/ecspi_loopback" type="xml">
            <files mask="freertos_ecspi_loopback.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_freertos_event" name="freertos_event" brief="This document explains the freertos_event example. It shows how task waits for an event (defined setof bits in event group). This event can be set by any other process or interrupt in the system.The example application creates three tasks. Two write tasks write_task_1 and write_task_2continuously setting event bit 0 and bit 1.Read_task is waiting for any event bit and printing actual state on console. Event bits areautomatically cleared after read task is entered.Three possible states can occurre:Both bits are set.zBit B0 is set.Bit B1 is set." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="rtos_examples" path="boards/evkmimx8mm/rtos_examples/freertos_event">
          <external path="boards/evkmimx8mm/rtos_examples/freertos_event" type="xml">
            <files mask="freertos_event.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_freertos_generic" name="freertos_generic" brief="This document explains the freertos_generic example. It is based on code FreeRTOS documentation fromhttp://www.freertos.org/Hardware-independent-RTOS-example.html. It shows combination of severaltasks with queue, software timer, tick hook and semaphore.The example application creates three tasks. The prvQueueSendTask periodically sending data toxQueue queue. The prvQueueReceiveTask is waiting for incoming message and counting number ofreceived messages. Task prvEventSemaphoreTask is waiting for xEventSemaphore semaphore given fromvApplicationTickHook. Tick hook give semaphore every 500 ms.Other hook types used for RTOS and resource statistics are also demonstrated in example:* vApplicationIdleHook* vApplicationStackOverflowHook* vApplicationMallocFailedHook" toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="rtos_examples" path="boards/evkmimx8mm/rtos_examples/freertos_generic">
          <external path="boards/evkmimx8mm/rtos_examples/freertos_generic" type="xml">
            <files mask="freertos_generic.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_freertos_hello" name="freertos_hello" brief="The Hello World project is a simple demonstration program that uses the SDK UART drivere incombination with FreeRTOS. The purpose of this demo is to show how to use the debug console and toprovide a simple project for debugging and further development.The example application creates one task called hello_task. This task print &quot;Hello world.&quot; messagevia debug console utility and suspend itself." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="rtos_examples" path="boards/evkmimx8mm/rtos_examples/freertos_hello">
          <external path="boards/evkmimx8mm/rtos_examples/freertos_hello" type="xml">
            <files mask="freertos_hello.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_freertos_i2c" name="freertos_i2c" brief="The freertos_i2c example shows an application using RTOS tasks with I2C driver:The example supports 2 different connections:On board connection and board to board connection.With one board connection, 2 I2C instances of the same board are used. One i2c instance used as I2C master and another I2C instance used as I2C slave .    Default settings in freertos_i2c.c (in folder boards/&lt;board&gt;/rtos_examples/freertos_i2c) is applied.    Two tasks are created. One task is associated with an I2C master operation and another task deals with I2C slave operation.    1. I2C master task sends data to I2C slave task.    2. I2C master task reads data sent back from I2C slave task.    The transmit data and the receive data of both I2C master task and I2C slave task are printed out on terminal.With board to board connection, one I2C instance on one board is used as I2C master and the I2C instance on other board is used as I2C slave. Tasks are created to run on each board to handle I2C communication.    File freertos_i2c.c should have following definitions:    #define EXAMPLE_CONNECT_I2C BOARD_TO_BOARD    For board used as I2C master:        #define I2C_MASTER_SLAVE isMASTER    For board used as I2C slave:        #define I2C_MASTER_SLAVE isSLAVE" toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="rtos_examples" path="boards/evkmimx8mm/rtos_examples/freertos_i2c">
          <external path="boards/evkmimx8mm/rtos_examples/freertos_i2c" type="xml">
            <files mask="freertos_i2c.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_freertos_mutex" name="freertos_mutex" brief="This document explains the freertos_mutex example. It shows how mutex manage access to commonresource (terminal output).The example application creates two identical instances of write_task. Each task will lock the mutexbefore printing and unlock it after printing to ensure that the outputs from tasks are not mixedtogether.The test_task accept output message during creation as function parameter. Output message have twoparts. If xMutex is unlocked, the write_task_1 acquire xMutex and print first part of message. Thenrescheduling is performed. In this moment scheduler check if some other task could run, but secondtask write_task+_2 is blocked because xMutex is already locked by first write task. The firstwrite_task_1 continue from last point by printing of second message part. Finaly the xMutex isunlocked and second instance of write_task_2 is executed." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="rtos_examples" path="boards/evkmimx8mm/rtos_examples/freertos_mutex">
          <external path="boards/evkmimx8mm/rtos_examples/freertos_mutex" type="xml">
            <files mask="freertos_mutex.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_freertos_queue" name="freertos_queue" brief="This document explains the freertos_queue example. This example introduce simple logging mechanismbased on message passing.Example could be devided in two parts. First part is logger. It contain three tasks:log_add().....Add new message into the log. Call xQueueSend function to pass new message into              message queue.log_init()....Initialize logger (create logging task and message queue log_queue).log_task()....Task responsible for printing of log output.Second part is application of this simple logging mechanism. Each of two tasks write_task_1 andwrite_task_2 print 5 messages into log." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="rtos_examples" path="boards/evkmimx8mm/rtos_examples/freertos_queue">
          <external path="boards/evkmimx8mm/rtos_examples/freertos_queue" type="xml">
            <files mask="freertos_queue.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_freertos_sem" name="freertos_sem" brief="This document explains the freertos_sem example, what to expect when running it and a briefintroduction to the API. The freertos_sem example code shows how semaphores works. Two differenttasks are synchronized in bilateral rendezvous model.The example uses four tasks. One producer_task and three consumer_tasks. The producer_task starts bycreating of two semaphores (xSemaphore_producer and xSemaphore_consumer). These semaphores controlaccess to virtual item. The synchronization is based on bilateral rendezvous pattern. Both ofconsumer and producer must be prepared to enable transaction." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="rtos_examples" path="boards/evkmimx8mm/rtos_examples/freertos_sem">
          <external path="boards/evkmimx8mm/rtos_examples/freertos_sem" type="xml">
            <files mask="freertos_sem.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_freertos_swtimer" name="freertos_swtimer" brief="This document explains the freertos_swtimer example. It shows usage of software timer and itscallback.The example application creates one software timer SwTimer. The timer's callback SwTimerCallback isperiodically executed and text &quot;Tick.&quot; is printed to terminal." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="rtos_examples" path="boards/evkmimx8mm/rtos_examples/freertos_swtimer">
          <external path="boards/evkmimx8mm/rtos_examples/freertos_swtimer" type="xml">
            <files mask="freertos_swtimer.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_freertos_tickless" name="freertos_tickless" brief="This document explains the freertos_tickless example. It shows the CPU enter at sleep mode and then it is waked up by expired time delay that using GPT module." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="rtos_examples" path="boards/evkmimx8mm/rtos_examples/freertos_tickless">
          <external path="boards/evkmimx8mm/rtos_examples/freertos_tickless" type="xml">
            <files mask="freertos_tickless.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_freertos_uart" name="freertos_uart" brief="The UART example for FreeRTOS demonstrates the possibility to use the UART driver in the RTOS.The example uses single instance of UART IP and writes string into, then reads back chars.After every 4B received, these are sent back on UART." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="rtos_examples" path="boards/evkmimx8mm/rtos_examples/freertos_uart">
          <external path="boards/evkmimx8mm/rtos_examples/freertos_uart" type="xml">
            <files mask="freertos_uart.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_gpt_capture" name="gpt_capture" brief="The gpt_capture project is a simple demonstration program of the SDK GPT driver's input capture feature.The example sets up a GPT channel for rise-edge capture. Once the input signal is received,this example will print the capture value." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/gpt" path="boards/evkmimx8mm/driver_examples/gpt/capture">
          <external path="boards/evkmimx8mm/driver_examples/gpt/capture" type="xml">
            <files mask="gpt_capture.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_gpt_timer" name="gpt_timer" brief="The gpt_timer project is a simple demonstration program of the SDK GPT driver. It sets up the GPThardware block to trigger a periodic interrupt after every 1 second. When the GPT interrupt is triggereda message a printed on the UART terminal." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/gpt" path="boards/evkmimx8mm/driver_examples/gpt/timer">
          <external path="boards/evkmimx8mm/driver_examples/gpt/timer" type="xml">
            <files mask="gpt_timer.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_hello_world" name="hello_world" brief="The Hello World demo application provides a sanity check for the new SDK build environments and board bring up. The HelloWorld demo prints the &quot;Hello World&quot; string to the terminal using the SDK UART drivers. The purpose of this demo is toshow how to use the UART, and to provide a simple project for debugging and further development." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="demo_apps" path="boards/evkmimx8mm/demo_apps/hello_world">
          <external path="boards/evkmimx8mm/demo_apps/hello_world" type="xml">
            <files mask="hello_world.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_igpio_led_output" name="igpio_led_output" brief="The GPIO Example project is a demonstration program that uses the KSDK software to manipulate the general-purposeoutputs.The example is supported by the set, clear, and toggle write-only registers for each port output data register. The example take turns to shine the LED." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/gpio" path="boards/evkmimx8mm/driver_examples/gpio/led_output">
          <external path="boards/evkmimx8mm/driver_examples/gpio/led_output" type="xml">
            <files mask="igpio_led_output.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_ii2c_interrupt_b2b_transfer_master" name="ii2c_interrupt_b2b_transfer_master" brief="The i2c_interrupt_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with interrupt:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/i2c" path="boards/evkmimx8mm/driver_examples/i2c/interrupt_b2b_transfer/master">
          <external path="boards/evkmimx8mm/driver_examples/i2c/interrupt_b2b_transfer/master" type="xml">
            <files mask="ii2c_interrupt_b2b_transfer_master.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_ii2c_interrupt_b2b_transfer_slave" name="ii2c_interrupt_b2b_transfer_slave" brief="The i2c_interrupt_b2b_transfer_slave example shows how to use i2c driver as slave to do board to board transfer with interrupt:In this example, one i2c instance as slave and another i2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/i2c" path="boards/evkmimx8mm/driver_examples/i2c/interrupt_b2b_transfer/slave">
          <external path="boards/evkmimx8mm/driver_examples/i2c/interrupt_b2b_transfer/slave" type="xml">
            <files mask="ii2c_interrupt_b2b_transfer_slave.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_ii2c_polling_b2b_transfer_master" name="ii2c_polling_b2b_transfer_master" brief="The i2c_polling_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer using polling method:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/i2c" path="boards/evkmimx8mm/driver_examples/i2c/polling_b2b_transfer/master">
          <external path="boards/evkmimx8mm/driver_examples/i2c/polling_b2b_transfer/master" type="xml">
            <files mask="ii2c_polling_b2b_transfer_master.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_ii2c_polling_b2b_transfer_slave" name="ii2c_polling_b2b_transfer_slave" brief="The i2c_polling_b2b_transfer_slave example shows how to use i2c driver as slave to do board to board transfer with a polling master:In this example, one i2c instance as slave and another i2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/i2c" path="boards/evkmimx8mm/driver_examples/i2c/polling_b2b_transfer/slave">
          <external path="boards/evkmimx8mm/driver_examples/i2c/polling_b2b_transfer/slave" type="xml">
            <files mask="ii2c_polling_b2b_transfer_slave.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_ipwm" name="ipwm" brief="The PWM project is a simple demonstration program of the SDK PWM driver. It sets up the PWM hardwareblock to output PWM signals on one PWM channel. The example also shows PWM duty cycle is increase or decrease.The FIFO empty interrupt is provided. A new value will be loaded into FIFO when FIFO empty status bit is set. The PWM will run at the last set duty-cycle setting if all the values of the FIFO has been utilized, until the FIFO is reloaded or the PWM is disabled. When a new value is written, the duty cycle changes after the current period is over.The outputs can be observed by oscilloscope." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/pwm" path="boards/evkmimx8mm/driver_examples/pwm">
          <external path="boards/evkmimx8mm/driver_examples/pwm" type="xml">
            <files mask="ipwm.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_iuart_auto_baudrate_detect" name="iuart_auto_baudrate_detect" brief="The uart_auto_baudrate_detect example shows how to use uart auto baud rate detect feature:In this example, one uart instance connect to PC through uart. First, we should send characters a or A to board. The boars will set baud rate automatic. After baud rate has set, the board will send back all characters that PCsend to the board." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/uart" path="boards/evkmimx8mm/driver_examples/uart/auto_baudrate_detect">
          <external path="boards/evkmimx8mm/driver_examples/uart/auto_baudrate_detect" type="xml">
            <files mask="iuart_auto_baudrate_detect.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_iuart_idle_detect_sdma_transfer" name="iuart_idle_detect_sdma_transfer" brief="The uart_idle_detect_sdma example shows how to use uart driver in sdma way:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Uart will receive 8 characters every time, but if the character is less then 8, the idleline interrupt will generate, and abort the SDMA receive operation, and send out the receivedcharacters." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/uart" path="boards/evkmimx8mm/driver_examples/uart/idle_detect_sdma_transfer">
          <external path="boards/evkmimx8mm/driver_examples/uart/idle_detect_sdma_transfer" type="xml">
            <files mask="iuart_idle_detect_sdma_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_iuart_interrupt" name="iuart_interrupt" brief="The uart_functioncal_interrupt example shows how to use uart driver functionalAPI to receive data with interrupt method:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/uart" path="boards/evkmimx8mm/driver_examples/uart/interrupt">
          <external path="boards/evkmimx8mm/driver_examples/uart/interrupt" type="xml">
            <files mask="iuart_interrupt.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_iuart_interrupt_rb_transfer" name="iuart_interrupt_rb_transfer" brief="The uart_interrupt_ring_buffer example shows how to use uart driver in interrupt way withRX ring buffer enabled:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/uart" path="boards/evkmimx8mm/driver_examples/uart/interrupt_rb_transfer">
          <external path="boards/evkmimx8mm/driver_examples/uart/interrupt_rb_transfer" type="xml">
            <files mask="iuart_interrupt_rb_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_iuart_interrupt_transfer" name="iuart_interrupt_transfer" brief="The uart_interrupt example shows how to use uart driver in interrupt way:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/uart" path="boards/evkmimx8mm/driver_examples/uart/interrupt_transfer">
          <external path="boards/evkmimx8mm/driver_examples/uart/interrupt_transfer" type="xml">
            <files mask="iuart_interrupt_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_iuart_polling" name="iuart_polling" brief="The uart_polling example shows how to use uart driver in polling way:In this example, one uart instance connect to PC through uart, the board will send back all characters that PCsend to the board." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/uart" path="boards/evkmimx8mm/driver_examples/uart/polling">
          <external path="boards/evkmimx8mm/driver_examples/uart/polling" type="xml">
            <files mask="iuart_polling.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_iuart_sdma_transfer" name="iuart_sdma_transfer" brief="The uart_sdma example shows how to use uart driver in sdma way:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/uart" path="boards/evkmimx8mm/driver_examples/uart/sdma_transfer">
          <external path="boards/evkmimx8mm/driver_examples/uart/sdma_transfer" type="xml">
            <files mask="iuart_sdma_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_pdm_hwvad" name="pdm_hwvad" brief="The pdm_hwvad example shows how to use pdm driver with interrupt:In this example, one pdm instance playbacks the audio data stored in flash using interrupt." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/pdm" path="boards/evkmimx8mm/driver_examples/pdm/pdm_hwvad">
          <external path="boards/evkmimx8mm/driver_examples/pdm/pdm_hwvad" type="xml">
            <files mask="pdm_hwvad.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_pdm_interrupt" name="pdm_interrupt" brief="The pdm_interrupt example shows how to use pdm driver with interrupt:In this example, one pdm instance playbacks the audio data stored in flash using interrupt." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/pdm" path="boards/evkmimx8mm/driver_examples/pdm/pdm_interrupt">
          <external path="boards/evkmimx8mm/driver_examples/pdm/pdm_interrupt" type="xml">
            <files mask="pdm_interrupt.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_pdm_sai_interrupt" name="pdm_sai_interrupt" brief="The pdm_sdma_transfer example shows how to use pdm driver with interrupt:In this example, one sai instance loopback the audio data that recieve from PDM." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/pdm" path="boards/evkmimx8mm/driver_examples/pdm/pdm_sai_interrupt">
          <external path="boards/evkmimx8mm/driver_examples/pdm/pdm_sai_interrupt" type="xml">
            <files mask="pdm_sai_interrupt.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_pdm_sai_interrupt_transfer" name="pdm_sai_interrupt_transfer" brief="The pdm_sdma_transfer example shows how to use pdm driver with interrupt transaction api:In this example, one sai instance loopback the audio data that recieve from PDM." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/pdm" path="boards/evkmimx8mm/driver_examples/pdm/pdm_sai_interrupt_transfer">
          <external path="boards/evkmimx8mm/driver_examples/pdm/pdm_sai_interrupt_transfer" type="xml">
            <files mask="pdm_sai_interrupt_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_pdm_sai_sdma" name="pdm_sai_sdma" brief="The pdm_sai_sdma example shows how to use pdm sdma driver together with sai sdma driver" toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/pdm" path="boards/evkmimx8mm/driver_examples/pdm/pdm_sai_sdma">
          <external path="boards/evkmimx8mm/driver_examples/pdm/pdm_sai_sdma" type="xml">
            <files mask="pdm_sai_sdma.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_pdm_sdma_transfer" name="pdm_sdma_transfer" brief="The pdm_sdma_transfer example shows how to use pdm driver with SDMA" toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/pdm" path="boards/evkmimx8mm/driver_examples/pdm/pdm_sdma_transfer">
          <external path="boards/evkmimx8mm/driver_examples/pdm/pdm_sdma_transfer" type="xml">
            <files mask="pdm_sdma_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_rdc" name="rdc" brief="The RDC example shows how to control the peripheral and memory regionasscess policy using RDC and RDC_SEMA42" toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples" path="boards/evkmimx8mm/driver_examples/rdc">
          <external path="boards/evkmimx8mm/driver_examples/rdc" type="xml">
            <files mask="rdc.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_rpmsg_lite_pingpong_rtos_linux_remote" name="rpmsg_lite_pingpong_rtos_linux_remote" brief="The Multicore RPMsg-Lite pingpong RTOS project is a simple demonstration program that uses theMCUXpresso SDK software and the RPMsg-Lite library and shows how to implement the inter-corecommunicaton between cores of the multicore system. The primary core releases the secondary corefrom the reset and then the inter-core communication is established. Once the RPMsg is initializedand endpoints are created the message exchange starts, incrementing a virtual counter that is partof the message payload. The message pingpong finishes when the counter reaches the value of 100.Then the RPMsg-Lite is deinitialized and the procedure of the data exchange is repeated again.Shared memory usageThis multicore example uses the shared memory for data exchange. The shared memory region isdefined and the size can be adjustable in the linker file. The shared memory region start addressand the size have to be defined in linker file for each core equally. The shared memory startaddress is then exported from the linker to the application." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="multicore_examples" path="boards/evkmimx8mm/multicore_examples/rpmsg_lite_pingpong_rtos/linux_remote">
          <external path="boards/evkmimx8mm/multicore_examples/rpmsg_lite_pingpong_rtos/linux_remote" type="xml">
            <files mask="rpmsg_lite_pingpong_rtos_linux_remote.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_rpmsg_lite_str_echo_rtos_imxcm4" name="rpmsg_lite_str_echo_rtos_imxcm4" brief="The Multicore RPMsg-Lite string echo project is a simple demonstration program that uses theMCUXpresso SDK software and the RPMsg-Lite library and shows how to implement the inter-corecommunicaton between cores of the multicore system.It works with Linux RPMsg master peer to transfer string content back and forth. The name servicehandshake is performed first to create the communication channels. Next, Linux OS waits for userinput to the RPMsg virtual tty. Anything which is received is sent to M4. M4 displays what isreceived, and echoes back the same message as an acknowledgement. The tty reader on the Linux sidecan get the message, and start another transaction. The demo demonstrates RPMsgâs ability to sendarbitrary content back and forth. Note: The maximum message length supported by RPMsg is now 496bytes. String longer than 496 will be divided by virtual tty into several messages.Shared memory usageThis multicore example uses the shared memory for data exchange. The shared memory region isdefined and the size can be adjustable in the linker file. The shared memory region start addressand the size have to be defined in linker file for each core equally. The shared memory startaddress is then exported from the linker to the application." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="multicore_examples" path="boards/evkmimx8mm/multicore_examples/rpmsg_lite_str_echo_rtos">
          <external path="boards/evkmimx8mm/multicore_examples/rpmsg_lite_str_echo_rtos" type="xml">
            <files mask="rpmsg_lite_str_echo_rtos_imxcm4.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_sai_interrupt_transfer" name="sai_interrupt_transfer" brief="The sai_interrupt_transfer example shows how to use sai driver with interrupt:In this example, one sai instance playbacks the audio data stored in flash/SRAM using interrupt." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/sai" path="boards/evkmimx8mm/driver_examples/sai/interrupt_transfer">
          <external path="boards/evkmimx8mm/driver_examples/sai/interrupt_transfer" type="xml">
            <files mask="sai_interrupt_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_sai_low_power_audio" name="sai_low_power_audio" brief="In this demo, A core decoded music data and put it to DDR buffer and informs M core with the related information. Then M core will take the ownership of consuming the buffer, it will copy buffer from DDR to TCM, manipulating SDMA to transfer the data to SAI and codec for playback. It gives DDR and A core opportunity to do power saving for rather long time frame. M core core will also take ownership of codec initialization. SRTM(Simplified Real Time Messaging) protocol is used to communicate between A core an M4 core. " toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="demo_apps" path="boards/evkmimx8mm/demo_apps/sai_low_power_audio">
          <external path="boards/evkmimx8mm/demo_apps/sai_low_power_audio" type="xml">
            <files mask="sai_low_power_audio.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_sai_sdma_transfer" name="sai_sdma_transfer" brief="The sai_sdma_transfer example shows how to use sai driver with SDMA:In this example, one sai instance playbacks the audio data stored in flash/SRAM/DDR using SDMA channel." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/sai" path="boards/evkmimx8mm/driver_examples/sai/sdma_transfer">
          <external path="boards/evkmimx8mm/driver_examples/sai/sdma_transfer" type="xml">
            <files mask="sai_sdma_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_sdma_memory_to_memory" name="sdma_memory_to_memory" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/sdma" path="boards/evkmimx8mm/driver_examples/sdma/memory_to_memory">
          <external path="boards/evkmimx8mm/driver_examples/sdma/memory_to_memory" type="xml">
            <files mask="sdma_memory_to_memory.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_sdma_scatter_gather" name="sdma_scatter_gather" brief="The SDMA scatter gather example is a simple demonstration program that uses the SDK software.It excuates several shots transfer from source buffer to destination buffer using the SDK SDMA drivers.The purpose of this example is to show how to use the SDMA and to provide a scatter gather example fordebugging and further development." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/sdma/scatter_gather" path="boards/evkmimx8mm/driver_examples/sdma/scatter_gather">
          <external path="boards/evkmimx8mm/driver_examples/sdma/scatter_gather" type="xml">
            <files mask="sdma_scatter_gather.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_sema4_uboot" name="sema4_uboot" brief="The sema4 uboot example shows how to use SEMA4 driver to lock and unlock a sema gate,the notification IRQ is also demonstrated in this example.This example should work together with uboot. This example runs on Cortex-M core,the uboot runs on the Cortex-A core." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/sema4" path="boards/evkmimx8mm/driver_examples/sema4/uboot">
          <external path="boards/evkmimx8mm/driver_examples/sema4/uboot" type="xml">
            <files mask="sema4_uboot.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_tmu_1_monitor_threshold" name="tmu_1_monitor_threshold" brief="The TMU example shows how to configure TMU register to monitor and report the temperature from temperature measurement site located on the chip. It monitors the site and signals an alarm if a programmed threshold is ever exceeded." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/tmu_1" path="boards/evkmimx8mm/driver_examples/tmu_1/monitor_threshold">
          <external path="boards/evkmimx8mm/driver_examples/tmu_1/monitor_threshold" type="xml">
            <files mask="tmu_1_monitor_threshold.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_tmu_1_temperature_polling" name="tmu_1_temperature_polling" brief="The TMU example shows how to configure TMU register to monitor and report the temperature from temperature measurement site located on the chip. It monitors the site and outputs the immediate/average temperature." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/tmu_1" path="boards/evkmimx8mm/driver_examples/tmu_1/temperature_polling">
          <external path="boards/evkmimx8mm/driver_examples/tmu_1/temperature_polling" type="xml">
            <files mask="tmu_1_temperature_polling.xml"/>
          </external>
        </example>
        <example id="evkmimx8mm_wdog01" name="wdog01" brief="The WDOG Example project is to demonstrate usage of the KSDK wdog driver.In this example,implemented to test the wdog.And then after 10 times of refreshing the watchdog, a timeout reset is generated.We also try to refresh out of window to trigger reset after 10 times of refreshing.Please notice that because WDOG control registers are write-once only, so the WDOG_Init function and the WDOG_Disable function can be called only once after reset." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="driver_examples/wdog" path="boards/evkmimx8mm/driver_examples/wdog">
          <external path="boards/evkmimx8mm/driver_examples/wdog" type="xml">
            <files mask="wdog01.xml"/>
          </external>
        </example>
      </examples>
    </board>
  </boards>
  <devices>
    <device id="MIMX8MM6xxxLZ" name="MIMX8MM6" version="1.0.0" full_name="MIMX8MM6xxxLZ" family="MIMX8MMx" platform="i.MX">
      <description>The MIMX8MM6 are ARM Cortex-M4 and Cortex-A53 based microcontrollers for embedded applications.</description>
      <image path="docs/images" type="image">
        <files mask="device.jpg"/>
      </image>
      <metadataSet>
        <metadata key="vendor" value="NXP"/>
        <metadata key="html">
          <specific>
            <content>The MIMX8MM6 are ARM Cortex-M4 and Cortex-A53 based microcontrollers for embedded applications.</content>
          </specific>
        </metadata>
      </metadataSet>
      <core id="cm4_MIMX8MM6xxxLZ" name="cm4" fpu="true" type="cm4"/>
      <memory>
        <memoryBlock id="SRAM_UPPER_MIMX8MM6xxxLZ" name="SRAM_UPPER" addr="20000000" size="00020000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM_LOWER_MIMX8MM6xxxLZ" name="SRAM_LOWER" addr="1ffe0000" size="00020000" type="RAM" access="RW"/>
      </memory>
      <total_memory flash_size_kb="0" ram_size_kb="256"/>
      <package id="MIMX8MM6DVTLZ" name="MIMX8MM6DVTLZ"/>
      <evaluation_boards>
        <evaluation_board name="evkmimx8mm"/>
      </evaluation_boards>
      <debug_configurations>
        <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
          <params>
            <params id="internal.attach.slave.release.MIMX8MM6xxxLZ" name="internal.attach.slave" value="true"/>
            <params id="internal.multi.swd.release.MIMX8MM6xxxLZ" name="internal.multi.swd" value="true"/>
            <params id="internal.wiretype.release.MIMX8MM6xxxLZ" name="internal.wiretype" value="SWD"/>
            <params id="internal.has_swo.release.MIMX8MM6xxxLZ" name="internal.has_swo" value="false"/>
          </params>
          <drivers>
            <driver id_refs="QSPI_FLASH_MIMX8MM6xxxLZ">
              <driverBinary type="binary">
                <files mask="flash_driver_placeholder.cfx"/>
              </driverBinary>
            </driver>
          </drivers>
        </debug_configuration>
      </debug_configurations>
      <linkerSettings nature="c_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
      <linkerSettings nature="cpp_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
    </device>
    <device id="MIMX8MM4xxxKZ" name="MIMX8MM4" version="1.0.0" full_name="MIMX8MM4xxxKZ" family="MIMX8MMx" platform="i.MX">
      <description>The MIMX8MM4 are ARM Cortex-M4 and Cortex-A53 based microcontrollers for embedded applications.</description>
      <image path="docs/images" type="image">
        <files mask="device.jpg"/>
      </image>
      <metadataSet>
        <metadata key="vendor" value="NXP"/>
        <metadata key="html">
          <specific>
            <content>The MIMX8MM4 are ARM Cortex-M4 and Cortex-A53 based microcontrollers for embedded applications.</content>
          </specific>
        </metadata>
      </metadataSet>
      <core id="cm4_MIMX8MM4xxxKZ" name="cm4" fpu="true" type="cm4"/>
      <memory>
        <memoryBlock id="SRAM_UPPER_MIMX8MM4xxxKZ" name="SRAM_UPPER" addr="20000000" size="00020000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM_LOWER_MIMX8MM4xxxKZ" name="SRAM_LOWER" addr="1ffe0000" size="00020000" type="RAM" access="RW"/>
      </memory>
      <total_memory flash_size_kb="0" ram_size_kb="256"/>
      <package id="MIMX8MM4CVTKZ" name="MIMX8MM4CVTKZ"/>
      <evaluation_boards>
        <evaluation_board name="evkmimx8mm"/>
      </evaluation_boards>
      <debug_configurations>
        <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
          <params>
            <params id="internal.attach.slave.release.MIMX8MM4xxxKZ" name="internal.attach.slave" value="true"/>
            <params id="internal.multi.swd.release.MIMX8MM4xxxKZ" name="internal.multi.swd" value="true"/>
            <params id="internal.wiretype.release.MIMX8MM4xxxKZ" name="internal.wiretype" value="SWD"/>
            <params id="internal.has_swo.release.MIMX8MM4xxxKZ" name="internal.has_swo" value="false"/>
          </params>
          <drivers>
            <driver id_refs="QSPI_FLASH_MIMX8MM4xxxKZ">
              <driverBinary type="binary">
                <files mask="flash_driver_placeholder.cfx"/>
              </driverBinary>
            </driver>
          </drivers>
        </debug_configuration>
      </debug_configurations>
      <linkerSettings nature="c_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
      <linkerSettings nature="cpp_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
    </device>
  </devices>
  <components>
    <component id="project_template.evkmimx8mm.MIMX8MM6" name="evkmimx8mm" version="1.0.0" devices="MIMX8MM6xxxLZ" category="Board Support/SDK Project Template" user_visible="true" type="project_template">
      <source path="boards/evkmimx8mm/project_template" target_path="board" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="peripherals.c"/>
        <files mask="pin_mux.c"/>
      </source>
      <source path="boards/evkmimx8mm/project_template" target_path="board" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="peripherals.h"/>
        <files mask="pin_mux.h"/>
      </source>
    </component>
    <component id="platform.CMSIS.MIMX8MM6" name="CMSIS" version="5.5.1" devices="MIMX8MM6xxxLZ" user_visible="true" type="CMSIS">
      <dependencies>
        <all>
          <component_dependency value="platform.Include_common.MIMX8MM6"/>
          <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MM6"/>
          <component_dependency value="platform.CMSIS_Driver"/>
          <component_dependency value="platform.CMSIS_Driver_Include.CAN_CMSISInclude.MIMX8MM6"/>
          <component_dependency value="platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.MIMX8MM6"/>
          <component_dependency value="platform.CMSIS_Driver_Include.Ethernet_MAC_CMSISInclude.MIMX8MM6"/>
          <component_dependency value="platform.CMSIS_Driver_Include.Ethernet_PHY_CMSISInclude.MIMX8MM6"/>
          <component_dependency value="platform.CMSIS_Driver_Include.Flash_CMSISInclude.MIMX8MM6"/>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMX8MM6"/>
          <component_dependency value="platform.CMSIS_Driver_Include.MCI_CMSISInclude.MIMX8MM6"/>
          <component_dependency value="platform.CMSIS_Driver_Include.NAND_CMSISInclude.MIMX8MM6"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SAI_CMSISInclude.MIMX8MM6"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMX8MM6"/>
          <component_dependency value="platform.CMSIS_Driver_Include.USART_CMSISInclude.MIMX8MM6"/>
          <component_dependency value="platform.CMSIS_Driver_Include.USB_CMSISInclude.MIMX8MM6"/>
          <component_dependency value="platform.CMSIS_Driver_Include.USB_Device_CMSISInclude.MIMX8MM6"/>
          <component_dependency value="platform.CMSIS_Driver_Include.USB_Host_CMSISInclude.MIMX8MM6"/>
          <component_dependency value="platform.CMSIS_Driver_Include.WiFi_CMSISInclude.MIMX8MM6"/>
          <component_dependency value="platform.Include_dsp.MIMX8MM6"/>
        </all>
      </dependencies>
      <source path="CMSIS/Include" target_path="Include" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_math.h"/>
        <files mask="cmsis_armcc.h"/>
        <files mask="cmsis_armclang.h"/>
        <files mask="cmsis_armclang_ltm.h"/>
        <files mask="cmsis_compiler.h"/>
        <files mask="cmsis_gcc.h"/>
        <files mask="cmsis_iccarm.h"/>
        <files mask="cmsis_version.h"/>
        <files mask="core_armv81mml.h"/>
        <files mask="core_armv8mbl.h"/>
        <files mask="core_armv8mml.h"/>
        <files mask="core_cm0.h"/>
        <files mask="core_cm0plus.h"/>
        <files mask="core_cm1.h"/>
        <files mask="core_cm23.h"/>
        <files mask="core_cm3.h"/>
        <files mask="core_cm33.h"/>
        <files mask="core_cm35p.h"/>
        <files mask="core_cm4.h"/>
        <files mask="core_cm7.h"/>
        <files mask="core_dsp.h"/>
        <files mask="core_sc000.h"/>
        <files mask="core_sc300.h"/>
        <files mask="mpu_armv7.h"/>
        <files mask="mpu_armv8.h"/>
        <files mask="tz_context.h"/>
      </source>
      <source path="CMSIS" target_path="CMSIS" type="doc">
        <files mask="LICENSE.txt"/>
      </source>
    </component>
    <component id="platform.CMSIS_DSP_Lib.MIMX8MM6" name="CMSIS_DSP_Lib" version="1.6.0" devices="MIMX8MM6xxxLZ" user_visible="false" type="CMSIS">
      <source path="CMSIS/DSP/Examples/ARM/arm_class_marks_example" target_path="DSP/Examples/ARM/arm_class_marks_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM0" target_path="DSP/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM0" target_path="DSP/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM3" target_path="DSP/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM3" target_path="DSP/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM4_FP" target_path="DSP/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM4_FP" target_path="DSP/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM7_SP" target_path="DSP/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM7_SP" target_path="DSP/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_class_marks_example" target_path="DSP/Examples/ARM/arm_class_marks_example" type="configuration">
        <files mask="arm_class_marks_example.ini"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_class_marks_example" target_path="DSP/Examples/ARM/arm_class_marks_example" type="project">
        <files mask="arm_class_marks_example.uvoptx"/>
        <files mask="arm_class_marks_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_class_marks_example" target_path="DSP/Examples/ARM/arm_class_marks_example" type="src">
        <files mask="arm_class_marks_example_f32.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_convolution_example" target_path="DSP/Examples/ARM/arm_convolution_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM0" target_path="DSP/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM0" target_path="DSP/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM3" target_path="DSP/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM3" target_path="DSP/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM4_FP" target_path="DSP/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM4_FP" target_path="DSP/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM7_SP" target_path="DSP/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM7_SP" target_path="DSP/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_convolution_example" target_path="DSP/Examples/ARM/arm_convolution_example" type="configuration">
        <files mask="arm_convolution_example.ini"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_convolution_example" target_path="DSP/Examples/ARM/arm_convolution_example" type="project">
        <files mask="arm_convolution_example.uvoptx"/>
        <files mask="arm_convolution_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_convolution_example" target_path="DSP/Examples/ARM/arm_convolution_example" type="src">
        <files mask="arm_convolution_example_f32.c"/>
        <files mask="math_helper.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_convolution_example" target_path="DSP/Examples/ARM/arm_convolution_example" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_dotproduct_example" target_path="DSP/Examples/ARM/arm_dotproduct_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM0" target_path="DSP/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM0" target_path="DSP/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM3" target_path="DSP/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM3" target_path="DSP/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM4_FP" target_path="DSP/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM4_FP" target_path="DSP/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM7_SP" target_path="DSP/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM7_SP" target_path="DSP/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_dotproduct_example" target_path="DSP/Examples/ARM/arm_dotproduct_example" type="configuration">
        <files mask="arm_dotproduct_example.ini"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_dotproduct_example" target_path="DSP/Examples/ARM/arm_dotproduct_example" type="project">
        <files mask="arm_dotproduct_example.uvoptx"/>
        <files mask="arm_dotproduct_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_dotproduct_example" target_path="DSP/Examples/ARM/arm_dotproduct_example" type="src">
        <files mask="arm_dotproduct_example_f32.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fft_bin_example" target_path="DSP/Examples/ARM/arm_fft_bin_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM0" target_path="DSP/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM0" target_path="DSP/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM3" target_path="DSP/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM3" target_path="DSP/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM4_FP" target_path="DSP/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM4_FP" target_path="DSP/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM7_SP" target_path="DSP/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM7_SP" target_path="DSP/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fft_bin_example" target_path="DSP/Examples/ARM/arm_fft_bin_example" type="src">
        <files mask="arm_fft_bin_data.c"/>
        <files mask="arm_fft_bin_example_f32.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fft_bin_example" target_path="DSP/Examples/ARM/arm_fft_bin_example" type="configuration">
        <files mask="arm_fft_bin_example.ini"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fft_bin_example" target_path="DSP/Examples/ARM/arm_fft_bin_example" type="project">
        <files mask="arm_fft_bin_example.uvoptx"/>
        <files mask="arm_fft_bin_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fir_example" target_path="DSP/Examples/ARM/arm_fir_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fir_example/RTE/Device/ARMCM0" target_path="DSP/Examples/ARM/arm_fir_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fir_example/RTE/Device/ARMCM0" target_path="DSP/Examples/ARM/arm_fir_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fir_example/RTE/Device/ARMCM3" target_path="DSP/Examples/ARM/arm_fir_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fir_example/RTE/Device/ARMCM3" target_path="DSP/Examples/ARM/arm_fir_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fir_example/RTE/Device/ARMCM4_FP" target_path="DSP/Examples/ARM/arm_fir_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fir_example/RTE/Device/ARMCM4_FP" target_path="DSP/Examples/ARM/arm_fir_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fir_example/RTE/Device/ARMCM7_SP" target_path="DSP/Examples/ARM/arm_fir_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fir_example/RTE/Device/ARMCM7_SP" target_path="DSP/Examples/ARM/arm_fir_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fir_example" target_path="DSP/Examples/ARM/arm_fir_example" type="src">
        <files mask="arm_fir_data.c"/>
        <files mask="arm_fir_example_f32.c"/>
        <files mask="math_helper.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fir_example" target_path="DSP/Examples/ARM/arm_fir_example" type="configuration">
        <files mask="arm_fir_example.ini"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fir_example" target_path="DSP/Examples/ARM/arm_fir_example" type="project">
        <files mask="arm_fir_example.uvoptx"/>
        <files mask="arm_fir_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fir_example" target_path="DSP/Examples/ARM/arm_fir_example" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_graphic_equalizer_example" target_path="DSP/Examples/ARM/arm_graphic_equalizer_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM0" target_path="DSP/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM0" target_path="DSP/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM3" target_path="DSP/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM3" target_path="DSP/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM4_FP" target_path="DSP/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM4_FP" target_path="DSP/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM7_SP" target_path="DSP/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM7_SP" target_path="DSP/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_graphic_equalizer_example" target_path="DSP/Examples/ARM/arm_graphic_equalizer_example" type="src">
        <files mask="arm_graphic_equalizer_data.c"/>
        <files mask="arm_graphic_equalizer_example_q31.c"/>
        <files mask="math_helper.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_graphic_equalizer_example" target_path="DSP/Examples/ARM/arm_graphic_equalizer_example" type="configuration">
        <files mask="arm_graphic_equalizer_example.ini"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_graphic_equalizer_example" target_path="DSP/Examples/ARM/arm_graphic_equalizer_example" type="project">
        <files mask="arm_graphic_equalizer_example.uvoptx"/>
        <files mask="arm_graphic_equalizer_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_graphic_equalizer_example" target_path="DSP/Examples/ARM/arm_graphic_equalizer_example" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_linear_interp_example" target_path="DSP/Examples/ARM/arm_linear_interp_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM0" target_path="DSP/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM0" target_path="DSP/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM3" target_path="DSP/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM3" target_path="DSP/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM4_FP" target_path="DSP/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM4_FP" target_path="DSP/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM7_SP" target_path="DSP/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM7_SP" target_path="DSP/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_linear_interp_example" target_path="DSP/Examples/ARM/arm_linear_interp_example" type="src">
        <files mask="arm_linear_interp_data.c"/>
        <files mask="arm_linear_interp_example_f32.c"/>
        <files mask="math_helper.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_linear_interp_example" target_path="DSP/Examples/ARM/arm_linear_interp_example" type="configuration">
        <files mask="arm_linear_interp_example.ini"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_linear_interp_example" target_path="DSP/Examples/ARM/arm_linear_interp_example" type="project">
        <files mask="arm_linear_interp_example.uvoptx"/>
        <files mask="arm_linear_interp_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_linear_interp_example" target_path="DSP/Examples/ARM/arm_linear_interp_example" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_matrix_example" target_path="DSP/Examples/ARM/arm_matrix_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM0" target_path="DSP/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM0" target_path="DSP/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM3" target_path="DSP/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM3" target_path="DSP/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM4_FP" target_path="DSP/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM4_FP" target_path="DSP/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM7_SP" target_path="DSP/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM7_SP" target_path="DSP/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_matrix_example" target_path="DSP/Examples/ARM/arm_matrix_example" type="configuration">
        <files mask="arm_matrix_example.ini"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_matrix_example" target_path="DSP/Examples/ARM/arm_matrix_example" type="project">
        <files mask="arm_matrix_example.uvoptx"/>
        <files mask="arm_matrix_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_matrix_example" target_path="DSP/Examples/ARM/arm_matrix_example" type="src">
        <files mask="arm_matrix_example_f32.c"/>
        <files mask="math_helper.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_matrix_example" target_path="DSP/Examples/ARM/arm_matrix_example" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_signal_converge_example" target_path="DSP/Examples/ARM/arm_signal_converge_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM0" target_path="DSP/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM0" target_path="DSP/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM3" target_path="DSP/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM3" target_path="DSP/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM4_FP" target_path="DSP/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM4_FP" target_path="DSP/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM7_SP" target_path="DSP/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM7_SP" target_path="DSP/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_signal_converge_example" target_path="DSP/Examples/ARM/arm_signal_converge_example" type="src">
        <files mask="arm_signal_converge_data.c"/>
        <files mask="arm_signal_converge_example_f32.c"/>
        <files mask="math_helper.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_signal_converge_example" target_path="DSP/Examples/ARM/arm_signal_converge_example" type="configuration">
        <files mask="arm_signal_converge_example.ini"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_signal_converge_example" target_path="DSP/Examples/ARM/arm_signal_converge_example" type="project">
        <files mask="arm_signal_converge_example.uvoptx"/>
        <files mask="arm_signal_converge_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_signal_converge_example" target_path="DSP/Examples/ARM/arm_signal_converge_example" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_sin_cos_example" target_path="DSP/Examples/ARM/arm_sin_cos_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM0" target_path="DSP/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM0" target_path="DSP/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM3" target_path="DSP/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM3" target_path="DSP/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM4_FP" target_path="DSP/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM4_FP" target_path="DSP/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM7_SP" target_path="DSP/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM7_SP" target_path="DSP/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_sin_cos_example" target_path="DSP/Examples/ARM/arm_sin_cos_example" type="configuration">
        <files mask="arm_sin_cos_example.ini"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_sin_cos_example" target_path="DSP/Examples/ARM/arm_sin_cos_example" type="project">
        <files mask="arm_sin_cos_example.uvoptx"/>
        <files mask="arm_sin_cos_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_sin_cos_example" target_path="DSP/Examples/ARM/arm_sin_cos_example" type="src">
        <files mask="arm_sin_cos_example_f32.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_variance_example" target_path="DSP/Examples/ARM/arm_variance_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_variance_example/RTE/Device/ARMCM0" target_path="DSP/Examples/ARM/arm_variance_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_variance_example/RTE/Device/ARMCM0" target_path="DSP/Examples/ARM/arm_variance_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_variance_example/RTE/Device/ARMCM3" target_path="DSP/Examples/ARM/arm_variance_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_variance_example/RTE/Device/ARMCM3" target_path="DSP/Examples/ARM/arm_variance_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_variance_example/RTE/Device/ARMCM4_FP" target_path="DSP/Examples/ARM/arm_variance_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_variance_example/RTE/Device/ARMCM4_FP" target_path="DSP/Examples/ARM/arm_variance_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_variance_example/RTE/Device/ARMCM7_SP" target_path="DSP/Examples/ARM/arm_variance_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_variance_example/RTE/Device/ARMCM7_SP" target_path="DSP/Examples/ARM/arm_variance_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_variance_example" target_path="DSP/Examples/ARM/arm_variance_example" type="configuration">
        <files mask="arm_variance_example.ini"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_variance_example" target_path="DSP/Examples/ARM/arm_variance_example" type="project">
        <files mask="arm_variance_example.uvoptx"/>
        <files mask="arm_variance_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_variance_example" target_path="DSP/Examples/ARM/arm_variance_example" type="src">
        <files mask="arm_variance_example_f32.c"/>
      </source>
      <source path="CMSIS/DSP/Projects/ARM" target_path="DSP/Projects/ARM" type="project">
        <files mask="arm_cortexM_math.uvoptx"/>
        <files mask="arm_cortexM_math.uvprojx"/>
      </source>
      <source path="CMSIS/DSP/Projects/ARM" target_path="DSP/Projects/ARM" type="script">
        <files mask="arm_cortexM_math_Build.bat"/>
      </source>
      <source path="CMSIS/DSP/Projects/ARMCLANG" target_path="DSP/Projects/ARMCLANG" type="project">
        <files mask="arm_cortexM_math.uvoptx"/>
        <files mask="arm_cortexM_math.uvprojx"/>
      </source>
      <source path="CMSIS/DSP/Projects/ARMCLANG" target_path="DSP/Projects/ARMCLANG" type="script">
        <files mask="arm_cortexM_math_Build.bat"/>
      </source>
      <source path="CMSIS/DSP/Projects/GCC" target_path="DSP/Projects/GCC" type="project">
        <files mask="arm_cortexM_math.uvoptx"/>
        <files mask="arm_cortexM_math.uvprojx"/>
      </source>
      <source path="CMSIS/DSP/Projects/GCC" target_path="DSP/Projects/GCC" type="script">
        <files mask="arm_cortexM_math_Build.bat"/>
      </source>
      <source path="CMSIS/DSP/Projects/IAR" target_path="DSP/Projects/IAR" type="project">
        <files mask="arm_cortexM_math.ewp"/>
      </source>
      <source path="CMSIS/DSP/Projects/IAR" target_path="DSP/Projects/IAR" type="other">
        <files mask="arm_cortexM_math.eww"/>
      </source>
      <source path="CMSIS/DSP/Projects/IAR" target_path="DSP/Projects/IAR" type="script">
        <files mask="arm_cortexM_math_Build.bat"/>
      </source>
      <source path="CMSIS/DSP/Source/BasicMathFunctions" target_path="DSP/Source/BasicMathFunctions" type="src">
        <files mask="BasicMathFunctions.c"/>
        <files mask="arm_abs_f32.c"/>
        <files mask="arm_abs_q15.c"/>
        <files mask="arm_abs_q31.c"/>
        <files mask="arm_abs_q7.c"/>
        <files mask="arm_add_f32.c"/>
        <files mask="arm_add_q15.c"/>
        <files mask="arm_add_q31.c"/>
        <files mask="arm_add_q7.c"/>
        <files mask="arm_dot_prod_f32.c"/>
        <files mask="arm_dot_prod_q15.c"/>
        <files mask="arm_dot_prod_q31.c"/>
        <files mask="arm_dot_prod_q7.c"/>
        <files mask="arm_mult_f32.c"/>
        <files mask="arm_mult_q15.c"/>
        <files mask="arm_mult_q31.c"/>
        <files mask="arm_mult_q7.c"/>
        <files mask="arm_negate_f32.c"/>
        <files mask="arm_negate_q15.c"/>
        <files mask="arm_negate_q31.c"/>
        <files mask="arm_negate_q7.c"/>
        <files mask="arm_offset_f32.c"/>
        <files mask="arm_offset_q15.c"/>
        <files mask="arm_offset_q31.c"/>
        <files mask="arm_offset_q7.c"/>
        <files mask="arm_scale_f32.c"/>
        <files mask="arm_scale_q15.c"/>
        <files mask="arm_scale_q31.c"/>
        <files mask="arm_scale_q7.c"/>
        <files mask="arm_shift_q15.c"/>
        <files mask="arm_shift_q31.c"/>
        <files mask="arm_shift_q7.c"/>
        <files mask="arm_sub_f32.c"/>
        <files mask="arm_sub_q15.c"/>
        <files mask="arm_sub_q31.c"/>
        <files mask="arm_sub_q7.c"/>
      </source>
      <source path="CMSIS/DSP/Source/CommonTables" target_path="DSP/Source/CommonTables" type="src">
        <files mask="CommonTables.c"/>
        <files mask="arm_common_tables.c"/>
        <files mask="arm_const_structs.c"/>
      </source>
      <source path="CMSIS/DSP/Source/ComplexMathFunctions" target_path="DSP/Source/ComplexMathFunctions" type="src">
        <files mask="ComplexMathFunctions.c"/>
        <files mask="arm_cmplx_conj_f32.c"/>
        <files mask="arm_cmplx_conj_q15.c"/>
        <files mask="arm_cmplx_conj_q31.c"/>
        <files mask="arm_cmplx_dot_prod_f32.c"/>
        <files mask="arm_cmplx_dot_prod_q15.c"/>
        <files mask="arm_cmplx_dot_prod_q31.c"/>
        <files mask="arm_cmplx_mag_f32.c"/>
        <files mask="arm_cmplx_mag_q15.c"/>
        <files mask="arm_cmplx_mag_q31.c"/>
        <files mask="arm_cmplx_mag_squared_f32.c"/>
        <files mask="arm_cmplx_mag_squared_q15.c"/>
        <files mask="arm_cmplx_mag_squared_q31.c"/>
        <files mask="arm_cmplx_mult_cmplx_f32.c"/>
        <files mask="arm_cmplx_mult_cmplx_q15.c"/>
        <files mask="arm_cmplx_mult_cmplx_q31.c"/>
        <files mask="arm_cmplx_mult_real_f32.c"/>
        <files mask="arm_cmplx_mult_real_q15.c"/>
        <files mask="arm_cmplx_mult_real_q31.c"/>
      </source>
      <source path="CMSIS/DSP/Source/ControllerFunctions" target_path="DSP/Source/ControllerFunctions" type="src">
        <files mask="ControllerFunctions.c"/>
        <files mask="arm_pid_init_f32.c"/>
        <files mask="arm_pid_init_q15.c"/>
        <files mask="arm_pid_init_q31.c"/>
        <files mask="arm_pid_reset_f32.c"/>
        <files mask="arm_pid_reset_q15.c"/>
        <files mask="arm_pid_reset_q31.c"/>
        <files mask="arm_sin_cos_f32.c"/>
        <files mask="arm_sin_cos_q31.c"/>
      </source>
      <source path="CMSIS/DSP/Source/FastMathFunctions" target_path="DSP/Source/FastMathFunctions" type="src">
        <files mask="FastMathFunctions.c"/>
        <files mask="arm_cos_f32.c"/>
        <files mask="arm_cos_q15.c"/>
        <files mask="arm_cos_q31.c"/>
        <files mask="arm_sin_f32.c"/>
        <files mask="arm_sin_q15.c"/>
        <files mask="arm_sin_q31.c"/>
        <files mask="arm_sqrt_q15.c"/>
        <files mask="arm_sqrt_q31.c"/>
      </source>
      <source path="CMSIS/DSP/Source/FilteringFunctions" target_path="DSP/Source/FilteringFunctions" type="src">
        <files mask="FilteringFunctions.c"/>
        <files mask="arm_biquad_cascade_df1_32x64_init_q31.c"/>
        <files mask="arm_biquad_cascade_df1_32x64_q31.c"/>
        <files mask="arm_biquad_cascade_df1_f32.c"/>
        <files mask="arm_biquad_cascade_df1_fast_q15.c"/>
        <files mask="arm_biquad_cascade_df1_fast_q31.c"/>
        <files mask="arm_biquad_cascade_df1_init_f32.c"/>
        <files mask="arm_biquad_cascade_df1_init_q15.c"/>
        <files mask="arm_biquad_cascade_df1_init_q31.c"/>
        <files mask="arm_biquad_cascade_df1_q15.c"/>
        <files mask="arm_biquad_cascade_df1_q31.c"/>
        <files mask="arm_biquad_cascade_df2T_f32.c"/>
        <files mask="arm_biquad_cascade_df2T_f64.c"/>
        <files mask="arm_biquad_cascade_df2T_init_f32.c"/>
        <files mask="arm_biquad_cascade_df2T_init_f64.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_f32.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_init_f32.c"/>
        <files mask="arm_conv_f32.c"/>
        <files mask="arm_conv_fast_opt_q15.c"/>
        <files mask="arm_conv_fast_q15.c"/>
        <files mask="arm_conv_fast_q31.c"/>
        <files mask="arm_conv_opt_q15.c"/>
        <files mask="arm_conv_opt_q7.c"/>
        <files mask="arm_conv_partial_f32.c"/>
        <files mask="arm_conv_partial_fast_opt_q15.c"/>
        <files mask="arm_conv_partial_fast_q15.c"/>
        <files mask="arm_conv_partial_fast_q31.c"/>
        <files mask="arm_conv_partial_opt_q15.c"/>
        <files mask="arm_conv_partial_opt_q7.c"/>
        <files mask="arm_conv_partial_q15.c"/>
        <files mask="arm_conv_partial_q31.c"/>
        <files mask="arm_conv_partial_q7.c"/>
        <files mask="arm_conv_q15.c"/>
        <files mask="arm_conv_q31.c"/>
        <files mask="arm_conv_q7.c"/>
        <files mask="arm_correlate_f32.c"/>
        <files mask="arm_correlate_fast_opt_q15.c"/>
        <files mask="arm_correlate_fast_q15.c"/>
        <files mask="arm_correlate_fast_q31.c"/>
        <files mask="arm_correlate_opt_q15.c"/>
        <files mask="arm_correlate_opt_q7.c"/>
        <files mask="arm_correlate_q15.c"/>
        <files mask="arm_correlate_q31.c"/>
        <files mask="arm_correlate_q7.c"/>
        <files mask="arm_fir_decimate_f32.c"/>
        <files mask="arm_fir_decimate_fast_q15.c"/>
        <files mask="arm_fir_decimate_fast_q31.c"/>
        <files mask="arm_fir_decimate_init_f32.c"/>
        <files mask="arm_fir_decimate_init_q15.c"/>
        <files mask="arm_fir_decimate_init_q31.c"/>
        <files mask="arm_fir_decimate_q15.c"/>
        <files mask="arm_fir_decimate_q31.c"/>
        <files mask="arm_fir_f32.c"/>
        <files mask="arm_fir_fast_q15.c"/>
        <files mask="arm_fir_fast_q31.c"/>
        <files mask="arm_fir_init_f32.c"/>
        <files mask="arm_fir_init_q15.c"/>
        <files mask="arm_fir_init_q31.c"/>
        <files mask="arm_fir_init_q7.c"/>
        <files mask="arm_fir_interpolate_f32.c"/>
        <files mask="arm_fir_interpolate_init_f32.c"/>
        <files mask="arm_fir_interpolate_init_q15.c"/>
        <files mask="arm_fir_interpolate_init_q31.c"/>
        <files mask="arm_fir_interpolate_q15.c"/>
        <files mask="arm_fir_interpolate_q31.c"/>
        <files mask="arm_fir_lattice_f32.c"/>
        <files mask="arm_fir_lattice_init_f32.c"/>
        <files mask="arm_fir_lattice_init_q15.c"/>
        <files mask="arm_fir_lattice_init_q31.c"/>
        <files mask="arm_fir_lattice_q15.c"/>
        <files mask="arm_fir_lattice_q31.c"/>
        <files mask="arm_fir_q15.c"/>
        <files mask="arm_fir_q31.c"/>
        <files mask="arm_fir_q7.c"/>
        <files mask="arm_fir_sparse_f32.c"/>
        <files mask="arm_fir_sparse_init_f32.c"/>
        <files mask="arm_fir_sparse_init_q15.c"/>
        <files mask="arm_fir_sparse_init_q31.c"/>
        <files mask="arm_fir_sparse_init_q7.c"/>
        <files mask="arm_fir_sparse_q15.c"/>
        <files mask="arm_fir_sparse_q31.c"/>
        <files mask="arm_fir_sparse_q7.c"/>
        <files mask="arm_iir_lattice_f32.c"/>
        <files mask="arm_iir_lattice_init_f32.c"/>
        <files mask="arm_iir_lattice_init_q15.c"/>
        <files mask="arm_iir_lattice_init_q31.c"/>
        <files mask="arm_iir_lattice_q15.c"/>
        <files mask="arm_iir_lattice_q31.c"/>
        <files mask="arm_lms_f32.c"/>
        <files mask="arm_lms_init_f32.c"/>
        <files mask="arm_lms_init_q15.c"/>
        <files mask="arm_lms_init_q31.c"/>
        <files mask="arm_lms_norm_f32.c"/>
        <files mask="arm_lms_norm_init_f32.c"/>
        <files mask="arm_lms_norm_init_q15.c"/>
        <files mask="arm_lms_norm_init_q31.c"/>
        <files mask="arm_lms_norm_q15.c"/>
        <files mask="arm_lms_norm_q31.c"/>
        <files mask="arm_lms_q15.c"/>
        <files mask="arm_lms_q31.c"/>
      </source>
      <source path="CMSIS/DSP/Source/MatrixFunctions" target_path="DSP/Source/MatrixFunctions" type="src">
        <files mask="MatrixFunctions.c"/>
        <files mask="arm_mat_add_f32.c"/>
        <files mask="arm_mat_add_q15.c"/>
        <files mask="arm_mat_add_q31.c"/>
        <files mask="arm_mat_cmplx_mult_f32.c"/>
        <files mask="arm_mat_cmplx_mult_q15.c"/>
        <files mask="arm_mat_cmplx_mult_q31.c"/>
        <files mask="arm_mat_init_f32.c"/>
        <files mask="arm_mat_init_q15.c"/>
        <files mask="arm_mat_init_q31.c"/>
        <files mask="arm_mat_inverse_f32.c"/>
        <files mask="arm_mat_inverse_f64.c"/>
        <files mask="arm_mat_mult_f32.c"/>
        <files mask="arm_mat_mult_fast_q15.c"/>
        <files mask="arm_mat_mult_fast_q31.c"/>
        <files mask="arm_mat_mult_q15.c"/>
        <files mask="arm_mat_mult_q31.c"/>
        <files mask="arm_mat_scale_f32.c"/>
        <files mask="arm_mat_scale_q15.c"/>
        <files mask="arm_mat_scale_q31.c"/>
        <files mask="arm_mat_sub_f32.c"/>
        <files mask="arm_mat_sub_q15.c"/>
        <files mask="arm_mat_sub_q31.c"/>
        <files mask="arm_mat_trans_f32.c"/>
        <files mask="arm_mat_trans_q15.c"/>
        <files mask="arm_mat_trans_q31.c"/>
      </source>
      <source path="CMSIS/DSP/Source/StatisticsFunctions" target_path="DSP/Source/StatisticsFunctions" type="src">
        <files mask="StatisticsFunctions.c"/>
        <files mask="arm_max_f32.c"/>
        <files mask="arm_max_q15.c"/>
        <files mask="arm_max_q31.c"/>
        <files mask="arm_max_q7.c"/>
        <files mask="arm_mean_f32.c"/>
        <files mask="arm_mean_q15.c"/>
        <files mask="arm_mean_q31.c"/>
        <files mask="arm_mean_q7.c"/>
        <files mask="arm_min_f32.c"/>
        <files mask="arm_min_q15.c"/>
        <files mask="arm_min_q31.c"/>
        <files mask="arm_min_q7.c"/>
        <files mask="arm_power_f32.c"/>
        <files mask="arm_power_q15.c"/>
        <files mask="arm_power_q31.c"/>
        <files mask="arm_power_q7.c"/>
        <files mask="arm_rms_f32.c"/>
        <files mask="arm_rms_q15.c"/>
        <files mask="arm_rms_q31.c"/>
        <files mask="arm_std_f32.c"/>
        <files mask="arm_std_q15.c"/>
        <files mask="arm_std_q31.c"/>
        <files mask="arm_var_f32.c"/>
        <files mask="arm_var_q15.c"/>
        <files mask="arm_var_q31.c"/>
      </source>
      <source path="CMSIS/DSP/Source/SupportFunctions" target_path="DSP/Source/SupportFunctions" type="src">
        <files mask="SupportFunctions.c"/>
        <files mask="arm_copy_f32.c"/>
        <files mask="arm_copy_q15.c"/>
        <files mask="arm_copy_q31.c"/>
        <files mask="arm_copy_q7.c"/>
        <files mask="arm_fill_f32.c"/>
        <files mask="arm_fill_q15.c"/>
        <files mask="arm_fill_q31.c"/>
        <files mask="arm_fill_q7.c"/>
        <files mask="arm_float_to_q15.c"/>
        <files mask="arm_float_to_q31.c"/>
        <files mask="arm_float_to_q7.c"/>
        <files mask="arm_q15_to_float.c"/>
        <files mask="arm_q15_to_q31.c"/>
        <files mask="arm_q15_to_q7.c"/>
        <files mask="arm_q31_to_float.c"/>
        <files mask="arm_q31_to_q15.c"/>
        <files mask="arm_q31_to_q7.c"/>
        <files mask="arm_q7_to_float.c"/>
        <files mask="arm_q7_to_q15.c"/>
        <files mask="arm_q7_to_q31.c"/>
      </source>
      <source path="CMSIS/DSP/Source/TransformFunctions" target_path="DSP/Source/TransformFunctions" type="src">
        <files mask="TransformFunctions.c"/>
        <files mask="arm_bitreversal.c"/>
        <files mask="arm_bitreversal2.c"/>
        <files mask="arm_cfft_f32.c"/>
        <files mask="arm_cfft_q15.c"/>
        <files mask="arm_cfft_q31.c"/>
        <files mask="arm_cfft_radix2_f32.c"/>
        <files mask="arm_cfft_radix2_init_f32.c"/>
        <files mask="arm_cfft_radix2_init_q15.c"/>
        <files mask="arm_cfft_radix2_init_q31.c"/>
        <files mask="arm_cfft_radix2_q15.c"/>
        <files mask="arm_cfft_radix2_q31.c"/>
        <files mask="arm_cfft_radix4_f32.c"/>
        <files mask="arm_cfft_radix4_init_f32.c"/>
        <files mask="arm_cfft_radix4_init_q15.c"/>
        <files mask="arm_cfft_radix4_init_q31.c"/>
        <files mask="arm_cfft_radix4_q15.c"/>
        <files mask="arm_cfft_radix4_q31.c"/>
        <files mask="arm_cfft_radix8_f32.c"/>
        <files mask="arm_dct4_f32.c"/>
        <files mask="arm_dct4_init_f32.c"/>
        <files mask="arm_dct4_init_q15.c"/>
        <files mask="arm_dct4_init_q31.c"/>
        <files mask="arm_dct4_q15.c"/>
        <files mask="arm_dct4_q31.c"/>
        <files mask="arm_rfft_f32.c"/>
        <files mask="arm_rfft_fast_f32.c"/>
        <files mask="arm_rfft_fast_init_f32.c"/>
        <files mask="arm_rfft_init_f32.c"/>
        <files mask="arm_rfft_init_q15.c"/>
        <files mask="arm_rfft_init_q31.c"/>
        <files mask="arm_rfft_q15.c"/>
        <files mask="arm_rfft_q31.c"/>
      </source>
      <source path="CMSIS/DSP/Source/TransformFunctions" target_path="DSP/Source/TransformFunctions" type="asm_include">
        <files mask="arm_bitreversal2.S"/>
      </source>
    </component>
    <component id="platform.CMSIS_DSP_Lib.arm_cortexM4bf_math.MIMX8MM6" name="arm_cortexM4bf_math" version="1.6.0" devices="MIMX8MM6xxxLZ" device_cores="cm4_MIMX8MM6xxxLZ" user_visible="true" type="CMSIS_driver">
      <source toolchain="armgcc" path="CMSIS/DSP/Lib/GCC" target_path="libs" type="lib">
        <files mask="libarm_cortexM7l_math.a"/>
      </source>
    </component>
    <component id="platform.CMSIS_DSP_Lib.arm_cortexM4lf_math.MIMX8MM6" name="arm_cortexM4lf_math" version="1.6.0" devices="MIMX8MM6xxxLZ" device_cores="cm4_MIMX8MM6xxxLZ" user_visible="true" type="CMSIS_driver">
      <source toolchain="armgcc" path="CMSIS/DSP/Lib/GCC" target_path="libs" type="lib">
        <files mask="libarm_cortexM4lf_math.a"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver" name="CMSIS_Driver" version="2.7.0" user_visible="true" type="CMSIS">
      <source path="CMSIS/Driver/DriverTemplates" target_path="Driver/DriverTemplates" type="src">
        <files mask="Driver_CAN.c"/>
        <files mask="Driver_ETH_MAC.c"/>
        <files mask="Driver_ETH_PHY.c"/>
        <files mask="Driver_Flash.c"/>
        <files mask="Driver_I2C.c"/>
        <files mask="Driver_MCI.c"/>
        <files mask="Driver_SAI.c"/>
        <files mask="Driver_SPI.c"/>
        <files mask="Driver_Storage.c"/>
        <files mask="Driver_USART.c"/>
        <files mask="Driver_USBD.c"/>
        <files mask="Driver_USBH.c"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.CAN_CMSISInclude.MIMX8MM6" name="CAN" version="1.2.0" devices="MIMX8MM6xxxLZ" user_visible="false" type="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MM6"/>
      </dependencies>
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_CAN.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MM6" name="Common" version="2.7.0" devices="MIMX8MM6xxxLZ" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_Common.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.MIMX8MM6" name="Ethernet" version="2.1.0" devices="MIMX8MM6xxxLZ" user_visible="false" type="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MM6"/>
      </dependencies>
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_ETH.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.Ethernet_MAC_CMSISInclude.MIMX8MM6" name="Ethernet_MAC" version="2.1.0" devices="MIMX8MM6xxxLZ" user_visible="false" type="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.MIMX8MM6"/>
      </dependencies>
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_ETH_MAC.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.Ethernet_PHY_CMSISInclude.MIMX8MM6" name="Ethernet_PHY" version="2.1.0" devices="MIMX8MM6xxxLZ" user_visible="false" type="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.MIMX8MM6"/>
      </dependencies>
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_ETH_PHY.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.Flash_CMSISInclude.MIMX8MM6" name="Flash" version="2.2.0" devices="MIMX8MM6xxxLZ" user_visible="false" type="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MM6"/>
      </dependencies>
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_Flash.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMX8MM6" name="I2C" version="2.3.0" devices="MIMX8MM6xxxLZ" user_visible="false" type="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MM6"/>
      </dependencies>
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_I2C.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.MCI_CMSISInclude.MIMX8MM6" name="MCI" version="2.3.0" devices="MIMX8MM6xxxLZ" user_visible="false" type="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MM6"/>
      </dependencies>
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_MCI.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.NAND_CMSISInclude.MIMX8MM6" name="NAND" version="2.3.0" devices="MIMX8MM6xxxLZ" user_visible="false" type="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MM6"/>
      </dependencies>
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_NAND.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.SAI_CMSISInclude.MIMX8MM6" name="SAI" version="1.1.0" devices="MIMX8MM6xxxLZ" user_visible="false" type="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MM6"/>
      </dependencies>
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_SAI.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMX8MM6" name="SPI" version="2.2.0" devices="MIMX8MM6xxxLZ" user_visible="false" type="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MM6"/>
      </dependencies>
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_SPI.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.USART_CMSISInclude.MIMX8MM6" name="USART" version="2.3.0" devices="MIMX8MM6xxxLZ" user_visible="false" type="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MM6"/>
      </dependencies>
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_USART.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.USB_CMSISInclude.MIMX8MM6" name="USB" version="2.2.0" devices="MIMX8MM6xxxLZ" user_visible="false" type="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MM6"/>
      </dependencies>
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_USB.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.USB_Device_CMSISInclude.MIMX8MM6" name="USB_Device" version="2.2.0" devices="MIMX8MM6xxxLZ" user_visible="false" type="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.USB_CMSISInclude.MIMX8MM6"/>
      </dependencies>
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_USBD.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.USB_Host_CMSISInclude.MIMX8MM6" name="USB_Host" version="2.2.0" devices="MIMX8MM6xxxLZ" user_visible="false" type="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.USB_CMSISInclude.MIMX8MM6"/>
      </dependencies>
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_USBH.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.WiFi_CMSISInclude.MIMX8MM6" name="WiFi" version="1.0.0" devices="MIMX8MM6xxxLZ" user_visible="false" type="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MM6"/>
      </dependencies>
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_WiFi.h"/>
      </source>
    </component>
    <component id="platform.Include_common.MIMX8MM6" name="CMSIS_Include_common" version="5.2.1" devices="MIMX8MM6xxxLZ" user_visible="true" type="CMSIS_Include">
      <source path="CMSIS/Include" target_path="CMSIS" type="c_include">
        <files mask="cmsis_armcc.h"/>
        <files mask="cmsis_armclang.h"/>
        <files mask="cmsis_armclang_ltm.h"/>
        <files mask="cmsis_compiler.h"/>
        <files mask="cmsis_gcc.h"/>
        <files mask="cmsis_iccarm.h"/>
        <files mask="cmsis_version.h"/>
        <files mask="core_armv81mml.h"/>
        <files mask="core_armv8mbl.h"/>
        <files mask="core_armv8mml.h"/>
        <files mask="mpu_armv7.h"/>
        <files mask="mpu_armv8.h"/>
      </source>
    </component>
    <component id="platform.Include_core_cm4.MIMX8MM6" name="CMSIS_Include_core_cm4" version="5.2.1" devices="MIMX8MM6xxxLZ" device_cores="cm4_MIMX8MM6xxxLZ" user_visible="true" type="CMSIS_Include">
      <dependencies>
        <all>
          <component_dependency value="platform.Include_common.MIMX8MM6"/>
          <component_dependency value="platform.Include_dsp.MIMX8MM6"/>
        </all>
      </dependencies>
      <source path="CMSIS/Include" target_path="CMSIS" type="c_include">
        <files mask="core_cm4.h"/>
      </source>
    </component>
    <component id="platform.Include_dsp.MIMX8MM6" name="CMSIS_Include_dsp" version="1.6.0" devices="MIMX8MM6xxxLZ" user_visible="true" type="CMSIS_Include">
      <source path="CMSIS/Include" target_path="CMSIS" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_math.h"/>
      </source>
    </component>
    <component id="project_template.MIMX8MM6.MIMX8MM6" name="MIMX8MM6" version="1.0.0" devices="MIMX8MM6xxxLZ" device_cores="cm4_MIMX8MM6xxxLZ" category="Board Support/SDK Project Template" user_visible="true" type="project_template">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.clock.MIMX8MM6"/>
          <component_dependency value="platform.drivers.common.MIMX8MM6"/>
          <component_dependency value="device.MIMX8MM6_CMSIS.MIMX8MM6"/>
          <component_dependency value="device.MIMX8MM6_startup.MIMX8MM6"/>
          <component_dependency value="platform.drivers.iuart.MIMX8MM6"/>
          <component_dependency value="platform.drivers.rdc.MIMX8MM6"/>
          <component_dependency value="platform.utilities.assert.MIMX8MM6"/>
          <component_dependency value="utility.debug_console.MIMX8MM6"/>
        </all>
      </dependencies>
      <source path="devices/MIMX8MM6/project_template" target_path="board" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="peripherals.c"/>
        <files mask="pin_mux.c"/>
      </source>
      <source path="devices/MIMX8MM6/project_template" target_path="board" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="peripherals.h"/>
        <files mask="pin_mux.h"/>
      </source>
    </component>
    <component id="RTE_Device.MIMX8MM6" name="RTE_Device" version="1.0.0" devices="MIMX8MM6xxxLZ" category="Device/SDK Project Template" user_visible="true" type="project_template">
      <source path="devices/MIMX8MM6/template" target_path="board" type="c_include">
        <files mask="RTE_Device.h"/>
      </source>
    </component>
    <component id="tools.MIMX8MM6" name="cmake_toolchain" version="1.0.0" devices="MIMX8MM6xxxLZ" user_visible="true" type="other">
      <source path="tools/cmake_toolchain_files" target_path="cmake_toolchain_files" type="script">
        <files mask="armgcc.cmake"/>
        <files mask="armgcc_force_cpp.cmake"/>
        <files mask="xcc.cmake"/>
      </source>
    </component>
    <component id="component.codec_ak4497_adapter.MIMX8MM6" name="codec_ak4497_adapter" version="2.1.0" devices="MIMX8MM6xxxLZ" device_cores="cm4_MIMX8MM6xxxLZ" user_visible="true" type="abstraction_layer">
      <dependencies>
        <all>
          <component_dependency value="driver.ak4497.MIMX8MM6"/>
          <component_dependency value="driver.codec.MIMX8MM6"/>
        </all>
      </dependencies>
      <source path="components/codec/port/ak4497" target_path="codec" type="src">
        <files mask="fsl_ak4497_adapter.c"/>
      </source>
      <source path="components/codec/port/ak4497" target_path="codec" type="c_include">
        <files mask="fsl_ak4497_adapter.h"/>
      </source>
      <source path="components/codec/port" target_path="codec" type="src">
        <files mask="fsl_codec_adapter.c"/>
      </source>
    </component>
    <component id="component.codec_i2c.MIMX8MM6" name="codec_i2c" version="2.1.0" devices="MIMX8MM6xxxLZ" device_cores="cm4_MIMX8MM6xxxLZ" user_visible="true" type="software_component">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MM6"/>
      </dependencies>
      <source path="components/codec/i2c" target_path="codec" type="src">
        <files mask="fsl_codec_i2c.c"/>
      </source>
      <source path="components/codec/i2c" target_path="codec" type="c_include">
        <files mask="fsl_codec_i2c.h"/>
      </source>
    </component>
    <component id="component.codec_wm8524_adapter.MIMX8MM6" name="codec_wm8524_adapter" version="2.1.0" devices="MIMX8MM6xxxLZ" device_cores="cm4_MIMX8MM6xxxLZ" user_visible="true" type="abstraction_layer">
      <dependencies>
        <all>
          <component_dependency value="driver.wm8524.MIMX8MM6"/>
          <component_dependency value="driver.codec.MIMX8MM6"/>
        </all>
      </dependencies>
      <source path="components/codec/port" target_path="codec" type="src">
        <files mask="fsl_codec_adapter.c"/>
      </source>
      <source path="components/codec/port/wm8524" target_path="codec" type="src">
        <files mask="fsl_wm8524_adapter.c"/>
      </source>
      <source path="components/codec/port/wm8524" target_path="codec" type="c_include">
        <files mask="fsl_wm8524_adapter.h"/>
      </source>
    </component>
    <component id="component.ii2c_adapter.MIMX8MM6" name="ii2c_adapter" version="1.0.0" devices="MIMX8MM6xxxLZ" device_cores="cm4_MIMX8MM6xxxLZ" user_visible="true" type="abstraction_layer">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8MM6"/>
          <component_dependency value="platform.drivers.ii2c.MIMX8MM6"/>
        </all>
      </dependencies>
      <source path="components/i2c" target_path="component/i2c" type="c_include">
        <files mask="i2c.h"/>
      </source>
      <source path="components/i2c" target_path="component/i2c" type="src">
        <files mask="ii2c_adapter.c"/>
      </source>
    </component>
    <component id="component.iuart_adapter.MIMX8MM6" name="iuart_adapter" version="1.0.0" full_name="iuart_adapter" devices="MIMX8MM6xxxLZ" device_cores="cm4_MIMX8MM6xxxLZ" user_visible="true" type="utilities">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8MM6"/>
          <component_dependency value="platform.drivers.iuart.MIMX8MM6"/>
        </all>
      </dependencies>
      <source path="components/uart" target_path="component/uart" type="src">
        <files mask="iuart_adapter.c"/>
      </source>
      <source path="components/uart" target_path="component/uart" type="c_include">
        <files mask="uart.h"/>
      </source>
    </component>
    <component id="component.lists.MIMX8MM6" name="lists" version="1.0.0" devices="MIMX8MM6xxxLZ" device_cores="cm4_MIMX8MM6xxxLZ" user_visible="true" type="software_component">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MM6"/>
      </dependencies>
      <source path="components/lists" target_path="component/lists" type="src">
        <files mask="generic_list.c"/>
      </source>
      <source path="components/lists" target_path="component/lists" type="c_include">
        <files mask="generic_list.h"/>
      </source>
    </component>
    <component id="component.serial_manager.MIMX8MM6" name="serial_manager" version="1.0.0" full_name="Serial Manager" devices="MIMX8MM6xxxLZ" device_cores="cm4_MIMX8MM6xxxLZ" user_visible="true" type="utilities">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8MM6"/>
          <component_dependency value="component.lists.MIMX8MM6"/>
          <any_of>
            <component_dependency value="component.serial_manager_uart.MIMX8MM6"/>
            <component_dependency value="component.serial_manager_swo.MIMX8MM6"/>
            <component_dependency value="component.serial_manager_usb_cdc_virtual.MIMX8MM6"/>
          </any_of>
        </all>
      </dependencies>
      <source path="components/serial_manager" target_path="component/serial_manager" type="src">
        <files mask="serial_manager.c"/>
      </source>
      <source path="components/serial_manager" target_path="component/serial_manager" type="c_include">
        <files mask="serial_manager.h"/>
        <files mask="serial_port_internal.h"/>
      </source>
    </component>
    <component id="component.serial_manager_swo.MIMX8MM6" name="serial_manager_swo" version="1.0.0" full_name="Serial Manager Swo" devices="MIMX8MM6xxxLZ" device_cores="cm4_MIMX8MM6xxxLZ" user_visible="true" type="utilities">
      <defines>
        <define name="SERIAL_PORT_TYPE_SWO" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8MM6"/>
          <component_dependency value="component.serial_manager.MIMX8MM6"/>
        </all>
      </dependencies>
      <source path="components/serial_manager" target_path="component/serial_manager" type="src">
        <files mask="serial_port_swo.c"/>
      </source>
      <source path="components/serial_manager" target_path="component/serial_manager" type="c_include">
        <files mask="serial_port_swo.h"/>
      </source>
    </component>
    <component id="component.serial_manager_uart.MIMX8MM6" name="serial_manager_uart" version="1.0.0" full_name="Serial Manager uart" devices="MIMX8MM6xxxLZ" user_visible="true" type="utilities">
      <defines>
        <define name="SERIAL_PORT_TYPE_UART" value="1"/>
      </defines>
      <dependencies>
        <component_dependency value="platform.drivers.iuart.MIMX8MM6"/>
      </dependencies>
      <source path="components/serial_manager" target_path="component/serial_manager" type="src">
        <files mask="serial_port_uart.c"/>
      </source>
      <source path="components/serial_manager" target_path="component/serial_manager" type="c_include">
        <files mask="serial_port_uart.h"/>
      </source>
    </component>
    <component id="component.serial_manager_usb_cdc_device_config.evkmimx8mm.MIMX8MM6" name="evkmimx8mm" version="1.0.0" devices="MIMX8MM6xxxLZ" user_visible="true" type="abstraction_layer">
      <source path="boards/evkmimx8mm/component_examples/config" target_path="component/serial_manager/usb_cdc_adapter" type="c_include">
        <files mask="usb_device_config.h"/>
      </source>
    </component>
    <component id="component.serial_manager_usb_cdc_virtual.MIMX8MM6" name="serial_manager_usb_cdc_virtual" version="1.0.0" full_name="Serial Manager USB CDC Virtual" devices="MIMX8MM6xxxLZ" device_cores="cm4_MIMX8MM6xxxLZ" user_visible="false" type="utilities">
      <defines>
        <define name="SERIAL_PORT_TYPE_USBCDC_VIRTUAL" value="1"/>
        <define name="DEBUG_CONSOLE_TRANSFER_NON_BLOCKING" value=""/>
      </defines>
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MM6"/>
      </dependencies>
      <source path="components/serial_manager" target_path="component/serial_manager" type="src">
        <files mask="serial_port_usb_virtual.c"/>
      </source>
      <source path="components/serial_manager" target_path="component/serial_manager" type="c_include">
        <files mask="serial_port_usb_virtual.h"/>
      </source>
    </component>
    <component id="component.wm8524_adapter.MIMX8MM6" name="wm8524_adapter" version="2.1.0" devices="MIMX8MM6xxxLZ" device_cores="cm4_MIMX8MM6xxxLZ" user_visible="true" type="abstraction_layer">
      <dependencies>
        <all>
          <component_dependency value="driver.wm8524.MIMX8MM6"/>
          <component_dependency value="driver.codec.MIMX8MM6"/>
        </all>
      </dependencies>
      <source path="components/codec/port/wm8524" target_path="codec" type="src">
        <files mask="fsl_codec_adapter.c"/>
      </source>
    </component>
    <component id="device.MIMX8MM6_CMSIS.MIMX8MM6" name="MIMX8MM6_CMSIS" version="1.0.0" devices="MIMX8MM6xxxLZ" device_cores="cm4_MIMX8MM6xxxLZ" user_visible="true" type="CMSIS_Include">
      <dependencies>
        <component_dependency value="platform.Include_core_cm4.MIMX8MM6"/>
      </dependencies>
      <source path="devices/MIMX8MM6" target_path="device" type="c_include">
        <files mask="MIMX8MM6_cm4.h"/>
        <files mask="MIMX8MM6_cm4_features.h"/>
        <files mask="fsl_device_registers.h"/>
      </source>
    </component>
    <component id="device.MIMX8MM6_debugger.MIMX8MM6" name="MIMX8MM6_debugger" version="1.0.0" devices="MIMX8MM6xxxLZ" user_visible="true" type="debugger">
      <source path="devices/MIMX8MM6" target_path="MIMX8MM6" type="xml">
        <files mask="MIMX8MM6_cm4.xml"/>
      </source>
    </component>
    <component id="platform.devices.MIMX8MM6_linker.MIMX8MM6" name="MIMX8MM6_linker" version="1.0.0" devices="MIMX8MM6xxxLZ" user_visible="true" type="linker">
      <source toolchain="armgcc" path="devices/MIMX8MM6/gcc" target_path="MIMX8MM6/gcc" type="linker">
        <files mask="MIMX8MM6xxxxx_cm4_ddr_ram.ld"/>
        <files mask="MIMX8MM6xxxxx_cm4_flash.ld"/>
        <files mask="MIMX8MM6xxxxx_cm4_ram.ld"/>
      </source>
      <source toolchain="iar" path="devices/MIMX8MM6/iar" target_path="MIMX8MM6/iar" type="linker">
        <files mask="MIMX8MM6xxxxx_cm4_ddr_ram.icf"/>
        <files mask="MIMX8MM6xxxxx_cm4_flash.icf"/>
        <files mask="MIMX8MM6xxxxx_cm4_ram.icf"/>
      </source>
    </component>
    <component id="device.MIMX8MM6_startup.MIMX8MM6" name="MIMX8MM6_startup" version="1.0.0" devices="MIMX8MM6xxxLZ" category="Device/Startup" user_visible="true" type="startup">
      <source toolchain="armgcc" path="devices/MIMX8MM6/gcc" target_path="startup" type="asm_include">
        <files mask="startup_MIMX8MM6_cm4.S"/>
      </source>
      <source toolchain="iar" path="devices/MIMX8MM6/iar" target_path="startup" type="asm_include">
        <files mask="startup_MIMX8MM6_cm4.s"/>
      </source>
      <source path="devices/MIMX8MM6" target_path="device" type="src">
        <files mask="system_MIMX8MM6_cm4.c"/>
      </source>
      <source path="devices/MIMX8MM6" target_path="device" type="c_include">
        <files mask="system_MIMX8MM6_cm4.h"/>
      </source>
    </component>
    <component id="docs.MIMX8MM6.MIMX8MM6" name="MIMX8MM6" version="1.0.0" devices="MIMX8MM6xxxLZ" user_visible="true" type="documentation">
      <source path="docs" target_path="docs" type="doc">
        <files mask="Getting Started with MCUXpresso SDK for EVK-MIMX8MM.pdf"/>
        <files mask="MCUXpresso SDK Release Notes for EVK-MIMX8MM.pdf"/>
      </source>
    </component>
    <component id="docs.images.MIMX8MM6" name="images" version="1.0.0" devices="MIMX8MM6xxxLZ" user_visible="true" type="documentation">
      <source path="docs/images" target_path="images" type="image">
        <files mask="EVK-MIMX8MM.gif"/>
        <files mask="device.jpg"/>
      </source>
    </component>
    <component id="driver.ak4497.MIMX8MM6" name="ak4497" version="2.1.0" devices="MIMX8MM6xxxLZ" device_cores="cm4_MIMX8MM6xxxLZ" user_visible="true" type="software_component">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8MM6"/>
          <component_dependency value="component.codec_i2c.MIMX8MM6"/>
        </all>
      </dependencies>
      <source path="components/codec/ak4497" target_path="codec" type="src">
        <files mask="fsl_ak4497.c"/>
      </source>
      <source path="components/codec/ak4497" target_path="codec" type="c_include">
        <files mask="fsl_ak4497.h"/>
      </source>
    </component>
    <component id="platform.drivers.clock.MIMX8MM6" name="clock" brief="Clock Driver" version="2.2.1" full_name="Clock Driver" devices="MIMX8MM6xxxLZ" device_cores="cm4_MIMX8MM6xxxLZ" user_visible="true" type="driver">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MM6"/>
      </dependencies>
      <source path="devices/MIMX8MM6/drivers" target_path="drivers" type="src">
        <files mask="fsl_clock.c"/>
      </source>
      <source path="devices/MIMX8MM6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_clock.h"/>
      </source>
    </component>
    <component id="platform.drivers.ecspi_sdma_cmsis.MIMX8MM6" name="ecspi_sdma_cmsis" brief="ECSPI CMSIS SDMA Driver" version="2.0.0" full_name="ECSPI CMSIS SDMA Driver" devices="MIMX8MM6xxxLZ" device_cores="cm4_MIMX8MM6xxxLZ" user_visible="true" type="CMSIS_driver">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.ecspi_sdma.MIMX8MM6"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMX8MM6"/>
          <component_dependency value="RTE_Device.MIMX8MM6"/>
        </all>
      </dependencies>
      <source path="devices/MIMX8MM6/cmsis_drivers" target_path="drivers" type="src">
        <files mask="fsl_ecspi_cmsis.c"/>
      </source>
      <source path="devices/MIMX8MM6/cmsis_drivers" target_path="drivers" type="c_include">
        <files mask="fsl_ecspi_cmsis.h"/>
      </source>
    </component>
    <component id="platform.drivers.ii2c_cmsis.MIMX8MM6" name="i2c_cmsis" brief="I2C CMSIS Driver" version="2.0.0" full_name="II2C CMSIS Driver" devices="MIMX8MM6xxxLZ" user_visible="true" type="CMSIS_driver">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.ii2c.MIMX8MM6"/>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMX8MM6"/>
          <component_dependency value="RTE_Device.MIMX8MM6"/>
        </all>
      </dependencies>
      <source path="devices/MIMX8MM6/cmsis_drivers" target_path="drivers" type="src">
        <files mask="fsl_i2c_cmsis.c"/>
      </source>
      <source path="devices/MIMX8MM6/cmsis_drivers" target_path="drivers" type="c_include">
        <files mask="fsl_i2c_cmsis.h"/>
      </source>
    </component>
    <component id="platform.drivers.iuart_sdma_cmsis.MIMX8MM6" name="uart_sdma_cmsis" brief="UART CMSIS SDMA Driver" version="2.0.0" full_name="IUART CMSIS SDMA Driver" devices="MIMX8MM6xxxLZ" device_cores="cm4_MIMX8MM6xxxLZ" user_visible="true" type="CMSIS_driver">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.iuart_sdma.MIMX8MM6"/>
          <component_dependency value="platform.CMSIS_Driver_Include.USART_CMSISInclude.MIMX8MM6"/>
          <component_dependency value="RTE_Device.MIMX8MM6"/>
        </all>
      </dependencies>
      <source path="devices/MIMX8MM6/cmsis_drivers" target_path="drivers" type="src">
        <files mask="fsl_uart_cmsis.c"/>
      </source>
      <source path="devices/MIMX8MM6/cmsis_drivers" target_path="drivers" type="c_include">
        <files mask="fsl_uart_cmsis.h"/>
      </source>
    </component>
    <component id="driver.codec.MIMX8MM6" name="codec" version="2.1.0" devices="MIMX8MM6xxxLZ" device_cores="cm4_MIMX8MM6xxxLZ" user_visible="true" type="abstraction_layer">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MM6"/>
      </dependencies>
      <source path="components/codec" target_path="codec" type="src">
        <files mask="fsl_codec_common.c"/>
      </source>
      <source path="components/codec" target_path="codec" type="c_include">
        <files mask="fsl_codec_common.h"/>
      </source>
      <source path="components/codec/port" target_path="codec" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
    </component>
    <component id="platform.drivers.common.MIMX8MM6" name="common" brief="COMMON Driver" version="2.2.2" full_name="COMMON Driver" devices="MIMX8MM6xxxLZ" device_cores="cm4_MIMX8MM6xxxLZ" user_visible="true" type="driver">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.clock.MIMX8MM6"/>
          <component_dependency value="device.MIMX8MM6_CMSIS.MIMX8MM6"/>
        </all>
      </dependencies>
      <source path="devices/MIMX8MM6/drivers" target_path="drivers" type="src">
        <files mask="fsl_common.c"/>
      </source>
      <source path="devices/MIMX8MM6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_common.h"/>
      </source>
    </component>
    <component id="platform.drivers.ecspi.MIMX8MM6" name="ecspi" brief="ECSPI Driver" version="2.0.2" full_name="ECSPI Driver" devices="MIMX8MM6xxxLZ" device_cores="cm4_MIMX8MM6xxxLZ" user_visible="true" type="driver">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MM6"/>
      </dependencies>
      <source path="devices/MIMX8MM6/drivers" target_path="drivers" type="src">
        <files mask="fsl_ecspi.c"/>
      </source>
      <source path="devices/MIMX8MM6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_ecspi.h"/>
      </source>
    </component>
    <component id="platform.drivers.ecspi_freertos.MIMX8MM6" name="ecspi_freertos" brief="ECSPI Freertos Driver" version="2.0.2" full_name="ECSPI Freertos Driver" devices="MIMX8MM6xxxLZ" device_cores="cm4_MIMX8MM6xxxLZ" user_visible="true" type="driver">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.ecspi.MIMX8MM6"/>
          <component_dependency value="middleware.amazon_freertos-kernel.MIMX8MM6"/>
        </all>
      </dependencies>
      <source path="devices/MIMX8MM6/drivers" target_path="drivers/freertos" type="src">
        <files mask="fsl_ecspi_freertos.c"/>
      </source>
      <source path="devices/MIMX8MM6/drivers" target_path="drivers/freertos" type="c_include">
        <files mask="fsl_ecspi_freertos.h"/>
      </source>
    </component>
    <component id="platform.drivers.ecspi_sdma.MIMX8MM6" name="ecspi_sdma" brief="ECSPI SDMA Driver" version="2.0.2" full_name="ECSPI SDMA Driver" devices="MIMX8MM6xxxLZ" device_cores="cm4_MIMX8MM6xxxLZ" user_visible="true" type="driver">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.ecspi.MIMX8MM6"/>
          <component_dependency value="platform.drivers.sdma.MIMX8MM6"/>
        </all>
      </dependencies>
      <source path="devices/MIMX8MM6/drivers" target_path="drivers" type="src">
        <files mask="fsl_ecspi_sdma.c"/>
      </source>
      <source path="devices/MIMX8MM6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_ecspi_sdma.h"/>
      </source>
    </component>
    <component id="platform.drivers.gpc_2.MIMX8MM6" name="gpc" brief="GPC Driver" version="2.1.0" full_name="GPC Driver" devices="MIMX8MM6xxxLZ" device_cores="cm4_MIMX8MM6xxxLZ" user_visible="true" type="driver">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MM6"/>
      </dependencies>
      <source path="devices/MIMX8MM6/drivers" target_path="drivers" type="src">
        <files mask="fsl_gpc.c"/>
      </source>
      <source path="devices/MIMX8MM6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_gpc.h"/>
      </source>
    </component>
    <component id="platform.drivers.gpt.MIMX8MM6" name="gpt" brief="GPT Driver" version="2.0.1" full_name="GPT Driver" devices="MIMX8MM6xxxLZ" device_cores="cm4_MIMX8MM6xxxLZ" user_visible="true" type="driver">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MM6"/>
      </dependencies>
      <source path="devices/MIMX8MM6/drivers" target_path="drivers" type="src">
        <files mask="fsl_gpt.c"/>
      </source>
      <source path="devices/MIMX8MM6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_gpt.h"/>
      </source>
    </component>
    <component id="platform.drivers.igpio.MIMX8MM6" name="gpio" brief="GPIO Driver" version="2.0.3" full_name="igpio" devices="MIMX8MM6xxxLZ" device_cores="cm4_MIMX8MM6xxxLZ" user_visible="true" type="driver">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MM6"/>
      </dependencies>
      <source path="devices/MIMX8MM6/drivers" target_path="drivers" type="src">
        <files mask="fsl_gpio.c"/>
      </source>
      <source path="devices/MIMX8MM6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_gpio.h"/>
      </source>
    </component>
    <component id="platform.drivers.ii2c.MIMX8MM6" name="i2c" brief="I2C Driver" version="2.0.5" full_name="I2C Driver" devices="MIMX8MM6xxxLZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MM6/drivers" target_path="drivers" type="src">
        <files mask="fsl_i2c.c"/>
      </source>
      <source path="devices/MIMX8MM6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_i2c.h"/>
      </source>
    </component>
    <component id="platform.drivers.ii2c_freertos.MIMX8MM6" name="i2c_freertos" brief="I2C Freertos Driver" version="2.0.5" full_name="I2C Freertos Driver" devices="MIMX8MM6xxxLZ" user_visible="true" type="driver">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.ii2c.MIMX8MM6"/>
          <component_dependency value="middleware.amazon_freertos-kernel.MIMX8MM6"/>
        </all>
      </dependencies>
      <source path="devices/MIMX8MM6/drivers" target_path="drivers/freertos" type="src">
        <files mask="fsl_i2c_freertos.c"/>
      </source>
      <source path="devices/MIMX8MM6/drivers" target_path="drivers/freertos" type="c_include">
        <files mask="fsl_i2c_freertos.h"/>
      </source>
    </component>
    <component id="platform.drivers.iomuxc.MIMX8MM6" name="iomuxc" brief="IOMUXC Driver" version="2.0.0" full_name="IOMUXC Driver" devices="MIMX8MM6xxxLZ" device_cores="cm4_MIMX8MM6xxxLZ" user_visible="true" type="driver">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MM6"/>
      </dependencies>
      <source path="devices/MIMX8MM6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_iomuxc.h"/>
      </source>
    </component>
    <component id="platform.drivers.ipwm.MIMX8MM6" name="ipwm" brief="PWM Driver" version="2.0.1" full_name="PWM Driver" devices="MIMX8MM6xxxLZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MM6/drivers" target_path="drivers" type="src">
        <files mask="fsl_pwm.c"/>
      </source>
      <source path="devices/MIMX8MM6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_pwm.h"/>
      </source>
    </component>
    <component id="platform.drivers.iuart.MIMX8MM6" name="iuart" brief="IUART Driver" version="2.0.2" full_name="IUART Driver" devices="MIMX8MM6xxxLZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MM6/drivers" target_path="drivers" type="src">
        <files mask="fsl_uart.c"/>
      </source>
      <source path="devices/MIMX8MM6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_uart.h"/>
      </source>
    </component>
    <component id="platform.drivers.iuart_freertos.MIMX8MM6" name="iuart_freertos" brief="IUART Freertos Driver" version="2.0.2" full_name="IUART Freertos Driver" devices="MIMX8MM6xxxLZ" user_visible="true" type="driver">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.iuart.MIMX8MM6"/>
          <component_dependency value="middleware.amazon_freertos-kernel.MIMX8MM6"/>
        </all>
      </dependencies>
      <source path="devices/MIMX8MM6/drivers" target_path="drivers/freertos" type="src">
        <files mask="fsl_uart_freertos.c"/>
      </source>
      <source path="devices/MIMX8MM6/drivers" target_path="drivers/freertos" type="c_include">
        <files mask="fsl_uart_freertos.h"/>
      </source>
    </component>
    <component id="platform.drivers.iuart_sdma.MIMX8MM6" name="iuart_sdma" brief="IUART SDMA Driver" version="2.0.2" full_name="IUART SDMA Driver" devices="MIMX8MM6xxxLZ" device_cores="cm4_MIMX8MM6xxxLZ" user_visible="true" type="driver">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.iuart.MIMX8MM6"/>
          <component_dependency value="platform.drivers.sdma.MIMX8MM6"/>
        </all>
      </dependencies>
      <source path="devices/MIMX8MM6/drivers" target_path="drivers" type="src">
        <files mask="fsl_uart_sdma.c"/>
      </source>
      <source path="devices/MIMX8MM6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_uart_sdma.h"/>
      </source>
    </component>
    <component id="platform.drivers.memory.MIMX8MM6" name="memory" brief="MEMORY Driver" version="2.0.0" full_name="Memory Driver" devices="MIMX8MM6xxxLZ" device_cores="cm4_MIMX8MM6xxxLZ" user_visible="true" type="driver">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MM6"/>
      </dependencies>
      <source path="devices/MIMX8MM6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_memory.h"/>
      </source>
    </component>
    <component id="platform.drivers.mu.MIMX8MM6" name="mu" brief="MU Driver" version="2.0.5" full_name="MU Driver" devices="MIMX8MM6xxxLZ" device_cores="cm4_MIMX8MM6xxxLZ" user_visible="true" type="driver">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MM6"/>
      </dependencies>
      <source path="devices/MIMX8MM6/drivers" target_path="drivers" type="src">
        <files mask="fsl_mu.c"/>
      </source>
      <source path="devices/MIMX8MM6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_mu.h"/>
      </source>
    </component>
    <component id="platform.drivers.pdm.MIMX8MM6" name="pdm" brief="PDM Driver" version="2.2.1" full_name="PDM Driver" devices="MIMX8MM6xxxLZ" device_cores="cm4_MIMX8MM6xxxLZ" user_visible="true" type="driver">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MM6"/>
      </dependencies>
      <source path="devices/MIMX8MM6/drivers" target_path="drivers" type="src">
        <files mask="fsl_pdm.c"/>
      </source>
      <source path="devices/MIMX8MM6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_pdm.h"/>
      </source>
    </component>
    <component id="platform.drivers.pdm_sdma.MIMX8MM6" name="pdm_sdma" brief="PDM SDMA Driver" version="2.1.2" full_name="PDM SDMA Driver" devices="MIMX8MM6xxxLZ" device_cores="cm4_MIMX8MM6xxxLZ" user_visible="true" type="driver">
      <dependencies>
        <component_dependency value="platform.drivers.pdm.MIMX8MM6"/>
      </dependencies>
      <source path="devices/MIMX8MM6/drivers" target_path="drivers" type="src">
        <files mask="fsl_pdm_sdma.c"/>
      </source>
      <source path="devices/MIMX8MM6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_pdm_sdma.h"/>
      </source>
    </component>
    <component id="platform.drivers.rdc.MIMX8MM6" name="rdc" brief="RDC Driver" version="2.0.2" full_name="RDC Driver" devices="MIMX8MM6xxxLZ" device_cores="cm4_MIMX8MM6xxxLZ" user_visible="true" type="driver">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MM6"/>
      </dependencies>
      <source path="devices/MIMX8MM6/drivers" target_path="drivers" type="src">
        <files mask="fsl_rdc.c"/>
      </source>
      <source path="devices/MIMX8MM6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_rdc.h"/>
      </source>
    </component>
    <component id="platform.drivers.rdc_sema42.MIMX8MM6" name="rdc_sema42" brief="RDC SEMA42 Driver" version="2.0.2" full_name="RDC SEMA42 Driver" devices="MIMX8MM6xxxLZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MM6/drivers" target_path="drivers" type="src">
        <files mask="fsl_rdc_sema42.c"/>
      </source>
      <source path="devices/MIMX8MM6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_rdc_sema42.h"/>
      </source>
    </component>
    <component id="platform.drivers.sai.MIMX8MM6" name="sai" brief="SAI Driver" version="2.2.2" full_name="SAI Driver" devices="MIMX8MM6xxxLZ" device_cores="cm4_MIMX8MM6xxxLZ" user_visible="true" type="driver">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MM6"/>
      </dependencies>
      <source path="devices/MIMX8MM6/drivers" target_path="drivers" type="src">
        <files mask="fsl_sai.c"/>
      </source>
      <source path="devices/MIMX8MM6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_sai.h"/>
      </source>
    </component>
    <component id="platform.drivers.sai_sdma.MIMX8MM6" name="sai_sdma" brief="SAI SDMA Driver" version="2.2.0" full_name="SAI SDMA Driver" devices="MIMX8MM6xxxLZ" device_cores="cm4_MIMX8MM6xxxLZ" user_visible="true" type="driver">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.sai.MIMX8MM6"/>
          <component_dependency value="platform.drivers.sdma.MIMX8MM6"/>
        </all>
      </dependencies>
      <source path="devices/MIMX8MM6/drivers" target_path="drivers" type="src">
        <files mask="fsl_sai_sdma.c"/>
      </source>
      <source path="devices/MIMX8MM6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_sai_sdma.h"/>
      </source>
    </component>
    <component id="platform.drivers.sdma.MIMX8MM6" name="sdma" brief="SDMA Driver" version="2.3.0" full_name="SDMA Driver" devices="MIMX8MM6xxxLZ" device_cores="cm4_MIMX8MM6xxxLZ" user_visible="true" type="driver">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.memory.MIMX8MM6"/>
          <component_dependency value="platform.drivers.common.MIMX8MM6"/>
        </all>
      </dependencies>
      <source path="devices/MIMX8MM6/drivers" target_path="drivers" type="src">
        <files mask="fsl_sdma.c"/>
      </source>
      <source path="devices/MIMX8MM6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_sdma.h"/>
        <files mask="fsl_sdma_script.h"/>
      </source>
    </component>
    <component id="platform.drivers.sema4.MIMX8MM6" name="sema4" brief="SEMA4 Driver" version="2.0.1" full_name="SEMA4 Driver" devices="MIMX8MM6xxxLZ" device_cores="cm4_MIMX8MM6xxxLZ" user_visible="true" type="driver">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MM6"/>
      </dependencies>
      <source path="devices/MIMX8MM6/drivers" target_path="drivers" type="src">
        <files mask="fsl_sema4.c"/>
      </source>
      <source path="devices/MIMX8MM6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_sema4.h"/>
      </source>
    </component>
    <component id="driver.srtm.MIMX8MM6" name="srtm" version="1.0.0" devices="MIMX8MM6xxxLZ" user_visible="true" type="software_component">
      <source path="components/srtm/include" target_path="srtm/include" type="c_include">
        <files mask="srtm_channel.h"/>
        <files mask="srtm_defs.h"/>
        <files mask="srtm_dispatcher.h"/>
        <files mask="srtm_message.h"/>
        <files mask="srtm_peercore.h"/>
        <files mask="srtm_service.h"/>
      </source>
      <source path="components/srtm/port" target_path="srtm/port" type="src">
        <files mask="srtm_message_pool.c"/>
      </source>
      <source path="components/srtm/srtm" target_path="srtm/srtm" type="src">
        <files mask="srtm_channel.c"/>
        <files mask="srtm_dispatcher.c"/>
        <files mask="srtm_message.c"/>
        <files mask="srtm_peercore.c"/>
        <files mask="srtm_service.c"/>
      </source>
      <source path="components/srtm/srtm" target_path="srtm/srtm" type="c_include">
        <files mask="srtm_channel_struct.h"/>
        <files mask="srtm_dispatcher_struct.h"/>
        <files mask="srtm_heap.h"/>
        <files mask="srtm_list.h"/>
        <files mask="srtm_message_pool.h"/>
        <files mask="srtm_message_struct.h"/>
        <files mask="srtm_mutex.h"/>
        <files mask="srtm_peercore_struct.h"/>
        <files mask="srtm_sem.h"/>
        <files mask="srtm_service_struct.h"/>
      </source>
    </component>
    <component id="driver.srtm.freertos.MIMX8MM6" name="freertos" version="1.0.0" devices="MIMX8MM6xxxLZ" user_visible="true" type="software_component">
      <dependencies>
        <component_dependency value="driver.srtm.MIMX8MM6"/>
      </dependencies>
      <source path="components/srtm/port" target_path="srtm/port" type="src">
        <files mask="srtm_heap_freertos.c"/>
        <files mask="srtm_mutex_freertos.c"/>
        <files mask="srtm_sem_freertos.c"/>
      </source>
    </component>
    <component id="platform.drivers.tmu_1.MIMX8MM6" name="tmu" brief="TMU Driver" version="2.0.1" full_name="TMU Driver" devices="MIMX8MM6xxxLZ" device_cores="cm4_MIMX8MM6xxxLZ" user_visible="true" type="driver">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MM6"/>
      </dependencies>
      <source path="devices/MIMX8MM6/drivers" target_path="drivers" type="src">
        <files mask="fsl_tmu.c"/>
      </source>
      <source path="devices/MIMX8MM6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_tmu.h"/>
      </source>
    </component>
    <component id="platform.drivers.wdog01.MIMX8MM6" name="wdog" brief="wdog01 Driver" version="2.1.1" full_name="wdog01 Driver" devices="MIMX8MM6xxxLZ" device_cores="cm4_MIMX8MM6xxxLZ" user_visible="true" type="driver">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MM6"/>
      </dependencies>
      <source path="devices/MIMX8MM6/drivers" target_path="drivers" type="src">
        <files mask="fsl_wdog.c"/>
      </source>
      <source path="devices/MIMX8MM6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_wdog.h"/>
      </source>
    </component>
    <component id="driver.wm8524.MIMX8MM6" name="wm8524" version="2.1.0" devices="MIMX8MM6xxxLZ" device_cores="cm4_MIMX8MM6xxxLZ" user_visible="true" type="software_component">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MM6"/>
      </dependencies>
      <source path="components/codec/wm8524" target_path="codec" type="src">
        <files mask="fsl_wm8524.c"/>
      </source>
      <source path="components/codec/wm8524" target_path="codec" type="c_include">
        <files mask="fsl_wm8524.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos-kernel.MIMX8MM6" name="Amazon FreeRTOS kernel" brief="Amazon FreeRTOS kernel" version="201908.00.0" full_name="Amazon FreeRTOS kernel" devices="MIMX8MM6xxxLZ" user_visible="true" type="OS">
      <defines>
        <define name="FSL_RTOS_FREE_RTOS" value=""/>
        <define name="SDK_OS_FREE_RTOS" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.amazon_freertos-kernel.extension.MIMX8MM6"/>
          <component_dependency value="middleware.amazon_freertos-kernel.template.MIMX8MM6"/>
        </all>
      </dependencies>
      <source path="rtos/amazon-freertos/freertos_kernel" target_path="amazon-freertos/freertos_kernel" type="src">
        <files mask="event_groups.c"/>
        <files mask="list.c"/>
        <files mask="queue.c"/>
        <files mask="stream_buffer.c"/>
        <files mask="tasks.c"/>
        <files mask="timers.c"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/include" target_path="amazon-freertos/freertos_kernel/include" type="c_include">
        <files mask="FreeRTOS.h"/>
        <files mask="atomic.h"/>
        <files mask="deprecated_definitions.h"/>
        <files mask="event_groups.h"/>
        <files mask="list.h"/>
        <files mask="message_buffer.h"/>
        <files mask="mpu_prototypes.h"/>
        <files mask="mpu_wrappers.h"/>
        <files mask="portable.h"/>
        <files mask="projdefs.h"/>
        <files mask="queue.h"/>
        <files mask="semphr.h"/>
        <files mask="stack_macros.h"/>
        <files mask="stream_buffer.h"/>
        <files mask="task.h"/>
        <files mask="timers.h"/>
      </source>
      <source toolchain="armgcc" compiler="compiler_gcc" path="rtos/amazon-freertos/freertos_kernel/portable/GCC/ARM_CM4F" target_path="amazon-freertos/freertos_kernel/portable/GCC/ARM_CM4F" type="src" device_cores="cm4_MIMX8MM6xxxLZ">
        <files mask="port.c"/>
      </source>
      <source toolchain="armgcc" compiler="compiler_gcc" path="rtos/amazon-freertos/freertos_kernel/portable/GCC/ARM_CM4F" target_path="amazon-freertos/freertos_kernel/portable/GCC/ARM_CM4F" type="c_include" device_cores="cm4_MIMX8MM6xxxLZ">
        <files mask="portmacro.h"/>
      </source>
      <source toolchain="iar" path="rtos/amazon-freertos/freertos_kernel/portable/IAR/ARM_CM4F" target_path="amazon-freertos/freertos_kernel/portable/IAR/ARM_CM4F" type="src" device_cores="cm4_MIMX8MM6xxxLZ">
        <files mask="port.c"/>
      </source>
      <source toolchain="iar" path="rtos/amazon-freertos/freertos_kernel/portable/IAR/ARM_CM4F" target_path="amazon-freertos/freertos_kernel/portable/IAR/ARM_CM4F" type="asm_include" device_cores="cm4_MIMX8MM6xxxLZ">
        <files mask="portasm.s"/>
      </source>
      <source toolchain="iar" path="rtos/amazon-freertos/freertos_kernel/portable/IAR/ARM_CM4F" target_path="amazon-freertos/freertos_kernel/portable/IAR/ARM_CM4F" type="c_include" device_cores="cm4_MIMX8MM6xxxLZ">
        <files mask="portmacro.h"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/MemMang" target_path="amazon-freertos/freertos_kernel/portable/MemMang" type="other">
        <files mask="ReadMe.url"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable" target_path="amazon-freertos/freertos_kernel/portable" type="doc">
        <files mask="readme.txt"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos-kernel.armv8m.MIMX8MM6" name="Amazon FreeRTOS port ARMv8M" brief="Amazon FreeRTOS port ARMv8M" version="201908.00.0" full_name="Amazon FreeRTOS port ARMv8M" devices="MIMX8MM6xxxLZ" category="Operating System/Amazon FreeRTOS kernel" user_visible="false" type="other">
      <dependencies>
        <component_dependency value="middleware.amazon_freertos-kernel.MIMX8MM6"/>
      </dependencies>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/ARMv8M" target_path="amazon-freertos/freertos_kernel/portable/ARMv8M" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/ARMv8M" target_path="amazon-freertos/freertos_kernel/portable/ARMv8M" type="script">
        <files mask="copy_files.py"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/ARMv8M/non_secure" target_path="amazon-freertos/freertos_kernel/portable/ARMv8M/non_secure" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/ARMv8M/non_secure" target_path="amazon-freertos/freertos_kernel/portable/ARMv8M/non_secure" type="src">
        <files mask="port.c"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/ARMv8M/non_secure/portable/GCC/ARM_CM33" target_path="amazon-freertos/freertos_kernel/portable/ARMv8M/non_secure/portable/GCC/ARM_CM33" type="src">
        <files mask="portasm.c"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/ARMv8M/non_secure/portable/GCC/ARM_CM33" target_path="amazon-freertos/freertos_kernel/portable/ARMv8M/non_secure/portable/GCC/ARM_CM33" type="c_include">
        <files mask="portmacro.h"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/ARMv8M/non_secure/portable/GCC/ARM_CM33_NTZ" target_path="amazon-freertos/freertos_kernel/portable/ARMv8M/non_secure/portable/GCC/ARM_CM33_NTZ" type="src">
        <files mask="portasm.c"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/ARMv8M/non_secure/portable/GCC/ARM_CM33_NTZ" target_path="amazon-freertos/freertos_kernel/portable/ARMv8M/non_secure/portable/GCC/ARM_CM33_NTZ" type="c_include">
        <files mask="portmacro.h"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/ARMv8M/non_secure/portable/IAR/ARM_CM33" target_path="amazon-freertos/freertos_kernel/portable/ARMv8M/non_secure/portable/IAR/ARM_CM33" type="asm_include">
        <files mask="portasm.s"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/ARMv8M/non_secure/portable/IAR/ARM_CM33" target_path="amazon-freertos/freertos_kernel/portable/ARMv8M/non_secure/portable/IAR/ARM_CM33" type="c_include">
        <files mask="portmacro.h"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/ARMv8M/non_secure/portable/IAR/ARM_CM33_NTZ" target_path="amazon-freertos/freertos_kernel/portable/ARMv8M/non_secure/portable/IAR/ARM_CM33_NTZ" type="asm_include">
        <files mask="portasm.s"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/ARMv8M/non_secure/portable/IAR/ARM_CM33_NTZ" target_path="amazon-freertos/freertos_kernel/portable/ARMv8M/non_secure/portable/IAR/ARM_CM33_NTZ" type="c_include">
        <files mask="portmacro.h"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/ARMv8M/non_secure" target_path="amazon-freertos/freertos_kernel/portable/ARMv8M/non_secure" type="c_include">
        <files mask="portasm.h"/>
        <files mask="portmacro.h"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/ARMv8M/secure" target_path="amazon-freertos/freertos_kernel/portable/ARMv8M/secure" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/ARMv8M/secure/context/portable/GCC/ARM_CM33" target_path="amazon-freertos/freertos_kernel/portable/ARMv8M/secure/context/portable/GCC/ARM_CM33" type="src">
        <files mask="secure_context_port.c"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/ARMv8M/secure/context/portable/IAR/ARM_CM33" target_path="amazon-freertos/freertos_kernel/portable/ARMv8M/secure/context/portable/IAR/ARM_CM33" type="src">
        <files mask="secure_context_port.c"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/ARMv8M/secure/context/portable/IAR/ARM_CM33" target_path="amazon-freertos/freertos_kernel/portable/ARMv8M/secure/context/portable/IAR/ARM_CM33" type="asm_include">
        <files mask="secure_context_port_asm.s"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/ARMv8M/secure/context" target_path="amazon-freertos/freertos_kernel/portable/ARMv8M/secure/context" type="src">
        <files mask="secure_context.c"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/ARMv8M/secure/context" target_path="amazon-freertos/freertos_kernel/portable/ARMv8M/secure/context" type="c_include">
        <files mask="secure_context.h"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/ARMv8M/secure/heap" target_path="amazon-freertos/freertos_kernel/portable/ARMv8M/secure/heap" type="src">
        <files mask="secure_heap.c"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/ARMv8M/secure/heap" target_path="amazon-freertos/freertos_kernel/portable/ARMv8M/secure/heap" type="c_include">
        <files mask="secure_heap.h"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/ARMv8M/secure/init" target_path="amazon-freertos/freertos_kernel/portable/ARMv8M/secure/init" type="src">
        <files mask="secure_init.c"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/ARMv8M/secure/init" target_path="amazon-freertos/freertos_kernel/portable/ARMv8M/secure/init" type="c_include">
        <files mask="secure_init.h"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/ARMv8M/secure/macros" target_path="amazon-freertos/freertos_kernel/portable/ARMv8M/secure/macros" type="c_include">
        <files mask="secure_port_macros.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos-kernel.cm33_nonsecure_port_no_trustzone.MIMX8MM6" name="cm33_nonsecure_port_no_trustzone" brief="Amazon FreeRTOS cm33 nonsecure port" version="201908.00.0" full_name="Amazon FreeRTOS cm33 nonsecure port" devices="MIMX8MM6xxxLZ" category="Operating System/Amazon FreeRTOS kernel" user_visible="true" type="middleware">
      <dependencies>
        <component_dependency value="middleware.amazon_freertos-kernel.MIMX8MM6"/>
      </dependencies>
    </component>
    <component id="middleware.amazon_freertos-kernel.doc.MIMX8MM6" name="Amazon FreeRTOS doc" brief="Amazon FreeRTOS doc" version="201908.00.0" full_name="Amazon FreeRTOS doc" devices="MIMX8MM6xxxLZ" category="Operating System/Amazon FreeRTOS kernel" user_visible="false" type="other">
      <dependencies>
        <component_dependency value="middleware.amazon_freertos-kernel.MIMX8MM6"/>
      </dependencies>
      <source path="rtos/amazon-freertos/doc" target_path="amazon-freertos/doc" type="doc">
        <files mask="AFQ Developer Guide - Board Qualification Errata.pdf"/>
        <files mask="Amazon FreeRTOS Qualification Developer Guide.pdf"/>
      </source>
      <source path="rtos/amazon-freertos/doc" target_path="amazon-freertos/doc" type="other">
        <files mask="README.md"/>
        <files mask="guidance.md"/>
      </source>
      <source path="rtos/amazon-freertos/doc/config" target_path="amazon-freertos/doc/config" type="other">
        <files mask="atomic"/>
        <files mask="ble"/>
        <files mask="common"/>
        <files mask="defender"/>
        <files mask="https"/>
        <files mask="linear_containers"/>
        <files mask="logging"/>
        <files mask="main"/>
        <files mask="mqtt"/>
        <files mask="platform"/>
        <files mask="secure_sockets"/>
        <files mask="shadow"/>
        <files mask="static_memory"/>
        <files mask="taskpool"/>
        <files mask="wifi"/>
      </source>
      <source path="rtos/amazon-freertos/doc/config/html" target_path="amazon-freertos/doc/config/html" type="doc">
        <files mask="footer.html"/>
        <files mask="header.html"/>
        <files mask="style.css"/>
      </source>
      <source path="rtos/amazon-freertos/doc/config" target_path="amazon-freertos/doc/config" type="xml">
        <files mask="layout_library.xml"/>
        <files mask="layout_main.xml"/>
      </source>
      <source path="rtos/amazon-freertos/doc/extra_files/https" target_path="amazon-freertos/doc/extra_files/https" type="doc">
        <files mask="gettysburg.txt"/>
      </source>
      <source path="rtos/amazon-freertos/doc/freertos_port_qual" target_path="amazon-freertos/doc/freertos_port_qual" type="doc">
        <files mask="aFreeRTOS_Porting_Guide.pdf"/>
        <files mask="aFreeRTOS_Qualification_Guide.pdf"/>
      </source>
      <source path="rtos/amazon-freertos/doc/guide" target_path="amazon-freertos/doc/guide" type="doc">
        <files mask="building.txt"/>
        <files mask="developer.txt"/>
        <files mask="style.txt"/>
      </source>
      <source path="rtos/amazon-freertos/doc/lib" target_path="amazon-freertos/doc/lib" type="doc">
        <files mask="atomic.txt"/>
        <files mask="ble.txt"/>
        <files mask="https.txt"/>
        <files mask="linear_containers.txt"/>
        <files mask="logging.txt"/>
        <files mask="mqtt.txt"/>
        <files mask="platform.txt"/>
        <files mask="secure_sockets.txt"/>
        <files mask="shadow.txt"/>
        <files mask="static_memory.txt"/>
        <files mask="taskpool.txt"/>
        <files mask="wifi.txt"/>
      </source>
      <source path="rtos/amazon-freertos/doc/plantuml" target_path="amazon-freertos/doc/plantuml" type="other">
        <files mask="RecyclableJobStatus.pu"/>
        <files mask="StaticJobStatus.pu"/>
        <files mask="https_client_async_callback_order.pu"/>
        <files mask="mqtt_demo.pu"/>
        <files mask="mqtt_design_typicaloperation.pu"/>
        <files mask="taskpool_design_typicaloperation.pu"/>
      </source>
      <source path="rtos/amazon-freertos/doc/plantuml" target_path="amazon-freertos/doc/plantuml" type="xml">
        <files mask="https_client_async_workflow.xml"/>
        <files mask="https_client_sync_workflow.xml"/>
      </source>
      <source path="rtos/amazon-freertos/doc/plantuml/images" target_path="amazon-freertos/doc/plantuml/images" type="image">
        <files mask="BLE-architecture.png"/>
        <files mask="RecyclableJobStatus.png"/>
        <files mask="StaticJobStatus.png"/>
        <files mask="blediagram.png"/>
        <files mask="https_client_async_callback_order.png"/>
        <files mask="https_client_async_workflow.png"/>
        <files mask="https_client_sync_workflow.png"/>
        <files mask="mqtt_demo.png"/>
        <files mask="mqtt_design_typicaloperation.png"/>
        <files mask="taskpool_design_typicaloperation.png"/>
      </source>
      <source path="rtos/amazon-freertos/doc/tag" target_path="amazon-freertos/doc/tag" type="other">
        <files mask="README.md"/>
      </source>
      <source path="rtos/amazon-freertos/doc/user_guide" target_path="amazon-freertos/doc/user_guide" type="doc">
        <files mask="global_config.txt"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos-kernel.extension.MIMX8MM6" name="Amazon FreeRTOS NXP extension" brief="Amazon FreeRTOS NXP extension" version="201908.00.0" full_name="Amazon FreeRTOS NXP extension" devices="MIMX8MM6xxxLZ" category="Operating System/Amazon FreeRTOS kernel extensions" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/freertos_kernel/include" target_path="amazon-freertos/freertos_kernel/include" type="c_include">
        <files mask="freertos_tasks_c_additions.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos-kernel.heap_1.MIMX8MM6" name="Amazon FreeRTOS heap 1" brief="Amazon FreeRTOS heap 1" version="201908.00.0" full_name="Amazon FreeRTOS heap 1" devices="MIMX8MM6xxxLZ" category="Operating System/Amazon FreeRTOS kernel" user_visible="false" type="other">
      <dependencies>
        <component_dependency value="middleware.amazon_freertos-kernel.MIMX8MM6"/>
      </dependencies>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/MemMang" target_path="amazon-freertos/freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_1.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos-kernel.heap_2.MIMX8MM6" name="Amazon FreeRTOS heap 2" brief="Amazon FreeRTOS heap 2" version="201908.00.0" full_name="Amazon FreeRTOS heap 2" devices="MIMX8MM6xxxLZ" category="Operating System/Amazon FreeRTOS kernel" user_visible="false" type="other">
      <dependencies>
        <component_dependency value="middleware.amazon_freertos-kernel.MIMX8MM6"/>
      </dependencies>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/MemMang" target_path="amazon-freertos/freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_2.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos-kernel.heap_3.MIMX8MM6" name="Amazon FreeRTOS heap 3" brief="Amazon FreeRTOS heap 3" version="201908.00.0" full_name="Amazon FreeRTOS heap_3" devices="MIMX8MM6xxxLZ" category="Operating System/Amazon FreeRTOS kernel" user_visible="false" type="other">
      <dependencies>
        <component_dependency value="middleware.amazon_freertos-kernel.MIMX8MM6"/>
      </dependencies>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/MemMang" target_path="amazon-freertos/freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_3.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos-kernel.heap_4.MIMX8MM6" name="Amazon FreeRTOS heap 4" brief="Amazon FreeRTOS heap 4" version="201908.00.0" full_name="Amazon FreeRTOS heap 4" devices="MIMX8MM6xxxLZ" category="Operating System/Amazon FreeRTOS kernel" user_visible="false" type="other">
      <dependencies>
        <component_dependency value="middleware.amazon_freertos-kernel.MIMX8MM6"/>
      </dependencies>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/MemMang" target_path="amazon-freertos/freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_4.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos-kernel.heap_5.MIMX8MM6" name="Amazon FreeRTOS heap 5" brief="Amazon FreeRTOS heap 5" version="201908.00.0" full_name="Amazon FreeRTOS heap 5" devices="MIMX8MM6xxxLZ" category="Operating System/Amazon FreeRTOS kernel" user_visible="false" type="other">
      <dependencies>
        <component_dependency value="middleware.amazon_freertos-kernel.MIMX8MM6"/>
      </dependencies>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/MemMang" target_path="amazon-freertos/freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_5.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos-kernel.heap_newlib.MIMX8MM6" name="FreeRTOS heap newlib" brief="Amazon FreeRTOS heap newlib" version="201908.00.0" full_name="Amazon FreeRTOS heap newlib" devices="MIMX8MM6xxxLZ" category="Operating System/Amazon FreeRTOS kernel extensions" user_visible="false" type="other">
      <dependencies>
        <component_dependency value="middleware.amazon_freertos-kernel.MIMX8MM6"/>
      </dependencies>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/MemMang" target_path="amazon-freertos/freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_useNewlib.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos-kernel.mpu_wrappers.MIMX8MM6" name="Amazon FreeRTOS MPU wrappers" brief="Amazon FreeRTOS MPU wrappers" version="201908.00.0" full_name="Amazon FreeRTOS MPU wrappers" devices="MIMX8MM6xxxLZ" category="Operating System/Amazon FreeRTOS kernel" user_visible="false" type="other">
      <dependencies>
        <component_dependency value="middleware.amazon_freertos-kernel.MIMX8MM6"/>
      </dependencies>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/Common" target_path="amazon-freertos/freertos_kernel/portable/Common" type="src">
        <files mask="mpu_wrappers.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos-kernel.root_doc.MIMX8MM6" name="Root Amazon FreeRTOS documents." brief="Amazon FreeRTOS root documents" version="201908.00.0" full_name="Amazon FreeRTOS root documents" devices="MIMX8MM6xxxLZ" category="Operating System/Amazon FreeRTOS kernel" user_visible="false" type="other">
      <dependencies>
        <component_dependency value="middleware.amazon_freertos-kernel.MIMX8MM6"/>
      </dependencies>
      <source path="rtos/amazon-freertos" target_path="amazon-freertos" type="other">
        <files mask="CHANGELOG.md"/>
        <files mask="CODE_OF_CONDUCT.md"/>
        <files mask="CONTRIBUTING.md"/>
        <files mask="checksums.json"/>
      </source>
      <source path="rtos/amazon-freertos" target_path="amazon-freertos" type="doc">
        <files mask="CMakeLists.txt"/>
        <files mask="ChangeLogKSDK.txt"/>
        <files mask="directories.txt"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos-kernel.template.MIMX8MM6" name="Amazon FreeRTOS configuration template" brief="Template configuration file to be edited by user. Provides also memory allocator (heap_x), change variant if needed." version="201908.00.0" full_name="Amazon FreeRTOS configuration template" devices="MIMX8MM6xxxLZ" category="Operating System/Amazon FreeRTOS kernel" user_visible="false" type="project_template">
      <source exclude="true" path="rtos/amazon-freertos/freertos_kernel/portable/MemMang" target_path="amazon-freertos/freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_1.c"/>
        <files mask="heap_2.c"/>
        <files mask="heap_3.c"/>
        <files mask="heap_5.c"/>
        <files mask="heap_useNewlib.c"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/MemMang" target_path="amazon-freertos/freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_4.c"/>
      </source>
      <source path="rtos/amazon-freertos/template/ARM_CM4F" target_path="source" type="c_include" device_cores="cm4_MIMX8MM6xxxLZ">
        <files mask="FreeRTOSConfig.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos-kernel.unused.MIMX8MM6" name="Amazon FreeRTOS unused" brief="Amazon FreeRTOS unused" version="201908.00.0" full_name="Amazon FreeRTOS unused" devices="MIMX8MM6xxxLZ" category="Operating System/Amazon FreeRTOS kernel" user_visible="false" type="other">
      <source path="rtos/amazon-freertos" target_path="amazon-freertos" type="other">
        <files mask="LICENSE"/>
        <files mask="README.md"/>
      </source>
      <source path="rtos/amazon-freertos" target_path="amazon-freertos" type="script">
        <files mask="PreLoad.cmake"/>
      </source>
    </component>
    <component id="middleware.baremetal.MIMX8MM6" name="baremetal" version="1.0.0" full_name="Baremetal" devices="MIMX8MM6xxxLZ" user_visible="true" type="OS">
      <defines>
        <define name="FSL_RTOS_BM" value=""/>
        <define name="SDK_OS_BAREMETAL" value=""/>
      </defines>
    </component>
    <component id="middleware.multicore.MIMX8MM6" name="multicore" brief="Multicore SDK" version="2.7.0" full_name="Multicore Software Development Kit" devices="MIMX8MM6xxxLZ" user_visible="true" type="other">
      <source path="middleware/multicore" target_path="multicore" type="doc">
        <files mask="ChangeLogKSDK.txt" hidden="true"/>
        <files mask="readme.txt" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.rpmsg_lite.MIMX8MM6" name="rpmsg_lite" brief="RPMsg-Lite" version="3.0.0" full_name="Remote Procedure Messaging Lite library" devices="MIMX8MM6xxxLZ" category="Multicore/RPMsg-Lite" user_visible="false" type="middleware">
      <source path="middleware/multicore/rpmsg_lite/doc" target_path="rpmsg_lite/doc" type="image">
        <files mask="arrowdown.png" hidden="true"/>
        <files mask="arrowright.png" hidden="true"/>
        <files mask="bc_s.png" hidden="true"/>
        <files mask="bdwn.png" hidden="true"/>
        <files mask="closed.png" hidden="true"/>
        <files mask="doc.png" hidden="true"/>
        <files mask="doxygen.png" hidden="true"/>
        <files mask="folderclosed.png" hidden="true"/>
        <files mask="folderopen.png" hidden="true"/>
        <files mask="nav_f.png" hidden="true"/>
        <files mask="nav_g.png" hidden="true"/>
        <files mask="nav_h.png" hidden="true"/>
        <files mask="nxp_logo_small.png" hidden="true"/>
        <files mask="open.png" hidden="true"/>
        <files mask="rpmsg_isoosi.png" hidden="true"/>
        <files mask="rpmsg_lite_arch.png" hidden="true"/>
        <files mask="rpmsg_lite_send_receive.png" hidden="true"/>
        <files mask="splitbar.png" hidden="true"/>
        <files mask="sync_off.png" hidden="true"/>
        <files mask="sync_on.png" hidden="true"/>
        <files mask="tab_a.png" hidden="true"/>
        <files mask="tab_b.png" hidden="true"/>
        <files mask="tab_h.png" hidden="true"/>
        <files mask="tab_s.png" hidden="true"/>
      </source>
      <source path="middleware/multicore/rpmsg_lite/doc" target_path="rpmsg_lite/doc" type="doc">
        <files mask="customdoxygen.css" hidden="true"/>
        <files mask="dir_5a30104352ef4255dc24354b02eb2d20.html" hidden="true"/>
        <files mask="dir_97aefd0d527b934f1d99a682da8fe6a9.html" hidden="true"/>
        <files mask="doxygen.css" hidden="true"/>
        <files mask="group__config.html" hidden="true"/>
        <files mask="group__rpmsg__lite.html" hidden="true"/>
        <files mask="group__rpmsg__ns.html" hidden="true"/>
        <files mask="group__rpmsg__queue.html" hidden="true"/>
        <files mask="index.html" hidden="true"/>
        <files mask="modules.html" hidden="true"/>
        <files mask="navtree.css" hidden="true"/>
        <files mask="rpmsg__default__config_8h.html" hidden="true"/>
        <files mask="rpmsg__default__config_8h_source.html" hidden="true"/>
        <files mask="rpmsg__lite_8h_source.html" hidden="true"/>
        <files mask="rpmsg__ns_8h_source.html" hidden="true"/>
        <files mask="rpmsg__queue_8h_source.html" hidden="true"/>
        <files mask="tabs.css" hidden="true"/>
      </source>
      <source path="middleware/multicore/rpmsg_lite/doc" target_path="rpmsg_lite/doc" type="script">
        <files mask="dynsections.js" hidden="true"/>
        <files mask="group__config.js" hidden="true"/>
        <files mask="group__rpmsg__lite.js" hidden="true"/>
        <files mask="group__rpmsg__ns.js" hidden="true"/>
        <files mask="group__rpmsg__queue.js" hidden="true"/>
        <files mask="jquery.js" hidden="true"/>
        <files mask="modules.js" hidden="true"/>
        <files mask="navtree.js" hidden="true"/>
        <files mask="navtreedata.js" hidden="true"/>
        <files mask="navtreeindex0.js" hidden="true"/>
        <files mask="resize.js" hidden="true"/>
      </source>
      <source path="middleware/multicore/rpmsg_lite/doc/search" target_path="rpmsg_lite/doc" type="doc">
        <files mask="all_0.html" hidden="true"/>
        <files mask="all_1.html" hidden="true"/>
        <files mask="all_2.html" hidden="true"/>
        <files mask="all_3.html" hidden="true"/>
        <files mask="all_4.html" hidden="true"/>
        <files mask="all_5.html" hidden="true"/>
        <files mask="all_6.html" hidden="true"/>
        <files mask="all_7.html" hidden="true"/>
        <files mask="classes_0.html" hidden="true"/>
        <files mask="files_0.html" hidden="true"/>
        <files mask="functions_0.html" hidden="true"/>
        <files mask="groups_0.html" hidden="true"/>
        <files mask="nomatches.html" hidden="true"/>
        <files mask="pages_0.html" hidden="true"/>
        <files mask="search.css" hidden="true"/>
        <files mask="typedefs_0.html" hidden="true"/>
        <files mask="variables_0.html" hidden="true"/>
        <files mask="variables_1.html" hidden="true"/>
        <files mask="variables_2.html" hidden="true"/>
        <files mask="variables_3.html" hidden="true"/>
        <files mask="variables_4.html" hidden="true"/>
        <files mask="variables_5.html" hidden="true"/>
        <files mask="variables_6.html" hidden="true"/>
        <files mask="variables_7.html" hidden="true"/>
      </source>
      <source path="middleware/multicore/rpmsg_lite/doc/search" target_path="rpmsg_lite/doc" type="script">
        <files mask="all_0.js" hidden="true"/>
        <files mask="all_1.js" hidden="true"/>
        <files mask="all_2.js" hidden="true"/>
        <files mask="all_3.js" hidden="true"/>
        <files mask="all_4.js" hidden="true"/>
        <files mask="all_5.js" hidden="true"/>
        <files mask="all_6.js" hidden="true"/>
        <files mask="all_7.js" hidden="true"/>
        <files mask="classes_0.js" hidden="true"/>
        <files mask="files_0.js" hidden="true"/>
        <files mask="functions_0.js" hidden="true"/>
        <files mask="groups_0.js" hidden="true"/>
        <files mask="pages_0.js" hidden="true"/>
        <files mask="search.js" hidden="true"/>
        <files mask="searchdata.js" hidden="true"/>
        <files mask="typedefs_0.js" hidden="true"/>
        <files mask="variables_0.js" hidden="true"/>
        <files mask="variables_1.js" hidden="true"/>
        <files mask="variables_2.js" hidden="true"/>
        <files mask="variables_3.js" hidden="true"/>
        <files mask="variables_4.js" hidden="true"/>
        <files mask="variables_5.js" hidden="true"/>
        <files mask="variables_6.js" hidden="true"/>
        <files mask="variables_7.js" hidden="true"/>
      </source>
      <source path="middleware/multicore/rpmsg_lite/doc/search" target_path="rpmsg_lite/doc" type="image">
        <files mask="close.png" hidden="true"/>
        <files mask="mag_sel.png" hidden="true"/>
        <files mask="search_l.png" hidden="true"/>
        <files mask="search_m.png" hidden="true"/>
        <files mask="search_r.png" hidden="true"/>
      </source>
      <source path="middleware/multicore/rpmsg_lite/lib/common" target_path="rpmsg_lite" type="src">
        <files mask="llist.c"/>
      </source>
      <source path="middleware/multicore/rpmsg_lite/lib/include" target_path="rpmsg_lite" type="c_include">
        <files mask="llist.h"/>
        <files mask="rpmsg_compiler.h"/>
        <files mask="rpmsg_default_config.h"/>
        <files mask="rpmsg_lite.h"/>
        <files mask="rpmsg_ns.h"/>
        <files mask="virtio_ring.h"/>
        <files mask="virtqueue.h"/>
      </source>
      <source path="middleware/multicore/rpmsg_lite/lib/rpmsg_lite" target_path="rpmsg_lite" type="src">
        <files mask="rpmsg_lite.c"/>
        <files mask="rpmsg_ns.c"/>
      </source>
      <source path="middleware/multicore/rpmsg_lite/lib/virtio" target_path="rpmsg_lite" type="src">
        <files mask="virtqueue.c"/>
      </source>
      <source path="middleware/multicore/rpmsg_lite" target_path="rpmsg_lite" type="doc">
        <files mask="readme.txt" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.rpmsg_lite.bm.MIMX8MM6" name="rpmsg_lite_bm_env" brief="RPMsg-Lite_baremetal_env" version="3.0.0" full_name="RPMsg-Lite baremetal environment layer" devices="MIMX8MM6xxxLZ" category="Multicore/RPMsg-Lite BM" user_visible="false" type="middleware">
      <dependencies>
        <component_dependency value="middleware.multicore.rpmsg_lite.MIMX8MM6"/>
      </dependencies>
      <source path="middleware/multicore/rpmsg_lite/lib/include" target_path="rpmsg_lite/env/bm" type="c_include">
        <files mask="rpmsg_env.h"/>
      </source>
      <source path="middleware/multicore/rpmsg_lite/lib/rpmsg_lite/porting/environment" target_path="rpmsg_lite/env/bm" type="src">
        <files mask="rpmsg_env_bm.c"/>
      </source>
    </component>
    <component id="middleware.multicore.rpmsg_lite.bm.config.MIMX8MM6" name="rpmsg_lite_bm_config" brief="RPMsg-Lite_bm_config" version="3.0.0" full_name="RPMsg-Lite BM configuration" devices="MIMX8MM6xxxLZ" category="Multicore/RPMsg-Lite BM" user_visible="true" type="middleware">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg_lite.MIMX8MM6"/>
          <component_dependency value="middleware.multicore.rpmsg_lite.bm.MIMX8MM6"/>
        </all>
      </dependencies>
      <source path="middleware/multicore/rpmsg_lite/template_application" target_path="source" type="c_include">
        <files mask="rpmsg_config.h"/>
      </source>
    </component>
    <component id="middleware.multicore.rpmsg_lite.freertos.MIMX8MM6" name="rpmsg_lite_freertos_env" brief="RPMsg-Lite_freertos_env" version="3.0.0" full_name="RPMsg-Lite FreeRTOS environment layer" devices="MIMX8MM6xxxLZ" category="Multicore/RPMsg-Lite FreeRTOS" user_visible="false" type="middleware">
      <dependencies>
        <component_dependency value="middleware.multicore.rpmsg_lite.MIMX8MM6"/>
      </dependencies>
      <source path="middleware/multicore/rpmsg_lite/lib/include" target_path="rpmsg_lite/env/freertos" type="c_include">
        <files mask="rpmsg_env.h"/>
        <files mask="rpmsg_queue.h"/>
      </source>
      <source path="middleware/multicore/rpmsg_lite/lib/rpmsg_lite/porting/environment" target_path="rpmsg_lite/env/freertos" type="src">
        <files mask="rpmsg_env_freertos.c"/>
      </source>
      <source path="middleware/multicore/rpmsg_lite/lib/rpmsg_lite" target_path="rpmsg_lite/env/freertos" type="src">
        <files mask="rpmsg_queue.c"/>
      </source>
    </component>
    <component id="middleware.multicore.rpmsg_lite.freertos.config.MIMX8MM6" name="rpmsg_lite_freertos_config" brief="RPMsg-Lite_freertos_config" version="3.0.0" full_name="RPMsg-Lite FreeRTOS configuration" devices="MIMX8MM6xxxLZ" category="Multicore/RPMsg-Lite FreeRTOS" user_visible="true" type="middleware">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg_lite.MIMX8MM6"/>
          <component_dependency value="middleware.multicore.rpmsg_lite.freertos.MIMX8MM6"/>
        </all>
      </dependencies>
      <source path="middleware/multicore/rpmsg_lite/template_application" target_path="source" type="c_include">
        <files mask="rpmsg_config.h"/>
      </source>
    </component>
    <component id="middleware.multicore.rpmsg_lite.imx8mm_m4_bm.MIMX8MM6" name="rpmsg_lite_imx8mm_m4_bm" brief="RPMsg-Lite_evkmimx8mm_porting_layer" version="3.0.0" full_name="Remote Procedure Messaging Lite porting layer for evkmimx8mm board" devices="MIMX8MM6xxxLZ" category="Multicore/RPMsg-Lite BM" user_visible="true" type="middleware">
      <dependencies>
        <component_dependency value="middleware.multicore.rpmsg_lite.bm.MIMX8MM6"/>
      </dependencies>
      <source path="middleware/multicore/rpmsg_lite/lib/include/platform/imx8mm_m4" target_path="rpmsg_lite/porting" type="c_include">
        <files mask="rpmsg_platform.h"/>
      </source>
      <source path="middleware/multicore/rpmsg_lite/lib/rpmsg_lite/porting/platform/imx8mm_m4" target_path="rpmsg_lite/porting" type="src">
        <files mask="rpmsg_platform.c"/>
      </source>
    </component>
    <component id="middleware.multicore.rpmsg_lite.imx8mm_m4_freertos.MIMX8MM6" name="rpmsg_lite_imx8mm_m4_freertos" brief="RPMsg-Lite_evkmcimx8mm_m4_porting_layer" version="3.0.0" full_name="Remote Procedure Messaging Lite porting layer for evkmimx8mm board" devices="MIMX8MM6xxxLZ" category="Multicore/RPMsg-Lite FreeRTOS" user_visible="true" type="middleware">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg_lite.freertos.MIMX8MM6"/>
          <component_dependency value="middleware.amazon_freertos-kernel.MIMX8MM6"/>
          <component_dependency value="middleware.amazon_freertos-kernel.heap_4.MIMX8MM6"/>
        </all>
      </dependencies>
      <source path="middleware/multicore/rpmsg_lite/lib/include/platform/imx8mm_m4" target_path="rpmsg_lite/porting" type="c_include">
        <files mask="rpmsg_platform.h"/>
      </source>
      <source path="middleware/multicore/rpmsg_lite/lib/rpmsg_lite/porting/platform/imx8mm_m4" target_path="rpmsg_lite/porting" type="src">
        <files mask="rpmsg_platform.c"/>
      </source>
    </component>
    <component id="middleware.usb.device_config_template.MIMX8MM6" name="USB device config template" brief="USB device config template" version="2.5.0" full_name="USB device config template" devices="MIMX8MM6xxxLZ" category="Board Support/SDK Project Template" user_visible="false" type="project_template">
      <source path="middleware/usb/templates/config" target_path="source/generated" type="c_include">
        <files mask="usb_device_config.h"/>
      </source>
    </component>
    <component id="platform.utilities.misc_utilities.MIMX8MM6" name="misc_utilities" brief="Utilities which is needed for particular toolchain like the SBRK function required to address limitation between HEAP and STACK in GCC toolchain library." version="1.0.0" devices="MIMX8MM6xxxLZ" user_visible="true" type="utilities">
      <source toolchain="armgcc" path="devices/MIMX8MM6/utilities" target_path="utilities" type="src">
        <files mask="fsl_sbrk.c"/>
      </source>
    </component>
    <component id="platform.utilities.assert.MIMX8MM6" name="assert" version="1.0.0" devices="MIMX8MM6xxxLZ" device_cores="cm4_MIMX8MM6xxxLZ" user_visible="true" type="utilities">
      <dependencies>
        <component_dependency value="utility.debug_console.MIMX8MM6"/>
      </dependencies>
      <source path="devices/MIMX8MM6/utilities" target_path="utilities" type="src">
        <files mask="fsl_assert.c"/>
      </source>
    </component>
    <component id="utility.debug_console.MIMX8MM6" name="debug_console" version="1.0.0" devices="MIMX8MM6xxxLZ" device_cores="cm4_MIMX8MM6xxxLZ" user_visible="true" type="utilities">
      <dependencies>
        <all>
          <component_dependency value="component.serial_manager.MIMX8MM6"/>
          <component_dependency value="platform.drivers.common.MIMX8MM6"/>
        </all>
      </dependencies>
      <source path="devices/MIMX8MM6/utilities/debug_console" target_path="utilities" type="src">
        <files mask="fsl_debug_console.c"/>
      </source>
      <source path="devices/MIMX8MM6/utilities/debug_console" target_path="utilities" type="c_include">
        <files mask="fsl_debug_console.h"/>
        <files mask="fsl_debug_console_conf.h"/>
      </source>
      <source path="devices/MIMX8MM6/utilities/str" target_path="utilities" type="src">
        <files mask="fsl_str.c"/>
      </source>
      <source path="devices/MIMX8MM6/utilities/str" target_path="utilities" type="c_include">
        <files mask="fsl_str.h"/>
      </source>
    </component>
    <component id="platform.CMSIS.MIMX8MM4" name="CMSIS" version="5.5.1" devices="MIMX8MM4xxxKZ" user_visible="true" type="CMSIS">
      <dependencies>
        <all>
          <component_dependency value="platform.Include_common.MIMX8MM4"/>
          <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MM4"/>
          <component_dependency value="platform.CMSIS_Driver"/>
          <component_dependency value="platform.CMSIS_Driver_Include.CAN_CMSISInclude.MIMX8MM4"/>
          <component_dependency value="platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.MIMX8MM4"/>
          <component_dependency value="platform.CMSIS_Driver_Include.Ethernet_MAC_CMSISInclude.MIMX8MM4"/>
          <component_dependency value="platform.CMSIS_Driver_Include.Ethernet_PHY_CMSISInclude.MIMX8MM4"/>
          <component_dependency value="platform.CMSIS_Driver_Include.Flash_CMSISInclude.MIMX8MM4"/>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMX8MM4"/>
          <component_dependency value="platform.CMSIS_Driver_Include.MCI_CMSISInclude.MIMX8MM4"/>
          <component_dependency value="platform.CMSIS_Driver_Include.NAND_CMSISInclude.MIMX8MM4"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SAI_CMSISInclude.MIMX8MM4"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMX8MM4"/>
          <component_dependency value="platform.CMSIS_Driver_Include.USART_CMSISInclude.MIMX8MM4"/>
          <component_dependency value="platform.CMSIS_Driver_Include.USB_CMSISInclude.MIMX8MM4"/>
          <component_dependency value="platform.CMSIS_Driver_Include.USB_Device_CMSISInclude.MIMX8MM4"/>
          <component_dependency value="platform.CMSIS_Driver_Include.USB_Host_CMSISInclude.MIMX8MM4"/>
          <component_dependency value="platform.CMSIS_Driver_Include.WiFi_CMSISInclude.MIMX8MM4"/>
          <component_dependency value="platform.Include_dsp.MIMX8MM4"/>
        </all>
      </dependencies>
      <source path="CMSIS/Include" target_path="Include" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_math.h"/>
        <files mask="cmsis_armcc.h"/>
        <files mask="cmsis_armclang.h"/>
        <files mask="cmsis_armclang_ltm.h"/>
        <files mask="cmsis_compiler.h"/>
        <files mask="cmsis_gcc.h"/>
        <files mask="cmsis_iccarm.h"/>
        <files mask="cmsis_version.h"/>
        <files mask="core_armv81mml.h"/>
        <files mask="core_armv8mbl.h"/>
        <files mask="core_armv8mml.h"/>
        <files mask="core_cm0.h"/>
        <files mask="core_cm0plus.h"/>
        <files mask="core_cm1.h"/>
        <files mask="core_cm23.h"/>
        <files mask="core_cm3.h"/>
        <files mask="core_cm33.h"/>
        <files mask="core_cm35p.h"/>
        <files mask="core_cm4.h"/>
        <files mask="core_cm7.h"/>
        <files mask="core_dsp.h"/>
        <files mask="core_sc000.h"/>
        <files mask="core_sc300.h"/>
        <files mask="mpu_armv7.h"/>
        <files mask="mpu_armv8.h"/>
        <files mask="tz_context.h"/>
      </source>
      <source path="CMSIS" target_path="CMSIS" type="doc">
        <files mask="LICENSE.txt"/>
      </source>
    </component>
    <component id="platform.CMSIS_DSP_Lib.MIMX8MM4" name="CMSIS_DSP_Lib" version="1.6.0" devices="MIMX8MM4xxxKZ" user_visible="false" type="CMSIS">
      <source path="CMSIS/DSP/Examples/ARM/arm_class_marks_example" target_path="DSP/Examples/ARM/arm_class_marks_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM0" target_path="DSP/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM0" target_path="DSP/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM3" target_path="DSP/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM3" target_path="DSP/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM4_FP" target_path="DSP/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM4_FP" target_path="DSP/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM7_SP" target_path="DSP/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM7_SP" target_path="DSP/Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_class_marks_example" target_path="DSP/Examples/ARM/arm_class_marks_example" type="configuration">
        <files mask="arm_class_marks_example.ini"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_class_marks_example" target_path="DSP/Examples/ARM/arm_class_marks_example" type="project">
        <files mask="arm_class_marks_example.uvoptx"/>
        <files mask="arm_class_marks_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_class_marks_example" target_path="DSP/Examples/ARM/arm_class_marks_example" type="src">
        <files mask="arm_class_marks_example_f32.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_convolution_example" target_path="DSP/Examples/ARM/arm_convolution_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM0" target_path="DSP/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM0" target_path="DSP/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM3" target_path="DSP/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM3" target_path="DSP/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM4_FP" target_path="DSP/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM4_FP" target_path="DSP/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM7_SP" target_path="DSP/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM7_SP" target_path="DSP/Examples/ARM/arm_convolution_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_convolution_example" target_path="DSP/Examples/ARM/arm_convolution_example" type="configuration">
        <files mask="arm_convolution_example.ini"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_convolution_example" target_path="DSP/Examples/ARM/arm_convolution_example" type="project">
        <files mask="arm_convolution_example.uvoptx"/>
        <files mask="arm_convolution_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_convolution_example" target_path="DSP/Examples/ARM/arm_convolution_example" type="src">
        <files mask="arm_convolution_example_f32.c"/>
        <files mask="math_helper.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_convolution_example" target_path="DSP/Examples/ARM/arm_convolution_example" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_dotproduct_example" target_path="DSP/Examples/ARM/arm_dotproduct_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM0" target_path="DSP/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM0" target_path="DSP/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM3" target_path="DSP/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM3" target_path="DSP/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM4_FP" target_path="DSP/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM4_FP" target_path="DSP/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM7_SP" target_path="DSP/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM7_SP" target_path="DSP/Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_dotproduct_example" target_path="DSP/Examples/ARM/arm_dotproduct_example" type="configuration">
        <files mask="arm_dotproduct_example.ini"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_dotproduct_example" target_path="DSP/Examples/ARM/arm_dotproduct_example" type="project">
        <files mask="arm_dotproduct_example.uvoptx"/>
        <files mask="arm_dotproduct_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_dotproduct_example" target_path="DSP/Examples/ARM/arm_dotproduct_example" type="src">
        <files mask="arm_dotproduct_example_f32.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fft_bin_example" target_path="DSP/Examples/ARM/arm_fft_bin_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM0" target_path="DSP/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM0" target_path="DSP/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM3" target_path="DSP/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM3" target_path="DSP/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM4_FP" target_path="DSP/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM4_FP" target_path="DSP/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM7_SP" target_path="DSP/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM7_SP" target_path="DSP/Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fft_bin_example" target_path="DSP/Examples/ARM/arm_fft_bin_example" type="src">
        <files mask="arm_fft_bin_data.c"/>
        <files mask="arm_fft_bin_example_f32.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fft_bin_example" target_path="DSP/Examples/ARM/arm_fft_bin_example" type="configuration">
        <files mask="arm_fft_bin_example.ini"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fft_bin_example" target_path="DSP/Examples/ARM/arm_fft_bin_example" type="project">
        <files mask="arm_fft_bin_example.uvoptx"/>
        <files mask="arm_fft_bin_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fir_example" target_path="DSP/Examples/ARM/arm_fir_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fir_example/RTE/Device/ARMCM0" target_path="DSP/Examples/ARM/arm_fir_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fir_example/RTE/Device/ARMCM0" target_path="DSP/Examples/ARM/arm_fir_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fir_example/RTE/Device/ARMCM3" target_path="DSP/Examples/ARM/arm_fir_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fir_example/RTE/Device/ARMCM3" target_path="DSP/Examples/ARM/arm_fir_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fir_example/RTE/Device/ARMCM4_FP" target_path="DSP/Examples/ARM/arm_fir_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fir_example/RTE/Device/ARMCM4_FP" target_path="DSP/Examples/ARM/arm_fir_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fir_example/RTE/Device/ARMCM7_SP" target_path="DSP/Examples/ARM/arm_fir_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fir_example/RTE/Device/ARMCM7_SP" target_path="DSP/Examples/ARM/arm_fir_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fir_example" target_path="DSP/Examples/ARM/arm_fir_example" type="src">
        <files mask="arm_fir_data.c"/>
        <files mask="arm_fir_example_f32.c"/>
        <files mask="math_helper.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fir_example" target_path="DSP/Examples/ARM/arm_fir_example" type="configuration">
        <files mask="arm_fir_example.ini"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fir_example" target_path="DSP/Examples/ARM/arm_fir_example" type="project">
        <files mask="arm_fir_example.uvoptx"/>
        <files mask="arm_fir_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_fir_example" target_path="DSP/Examples/ARM/arm_fir_example" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_graphic_equalizer_example" target_path="DSP/Examples/ARM/arm_graphic_equalizer_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM0" target_path="DSP/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM0" target_path="DSP/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM3" target_path="DSP/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM3" target_path="DSP/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM4_FP" target_path="DSP/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM4_FP" target_path="DSP/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM7_SP" target_path="DSP/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM7_SP" target_path="DSP/Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_graphic_equalizer_example" target_path="DSP/Examples/ARM/arm_graphic_equalizer_example" type="src">
        <files mask="arm_graphic_equalizer_data.c"/>
        <files mask="arm_graphic_equalizer_example_q31.c"/>
        <files mask="math_helper.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_graphic_equalizer_example" target_path="DSP/Examples/ARM/arm_graphic_equalizer_example" type="configuration">
        <files mask="arm_graphic_equalizer_example.ini"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_graphic_equalizer_example" target_path="DSP/Examples/ARM/arm_graphic_equalizer_example" type="project">
        <files mask="arm_graphic_equalizer_example.uvoptx"/>
        <files mask="arm_graphic_equalizer_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_graphic_equalizer_example" target_path="DSP/Examples/ARM/arm_graphic_equalizer_example" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_linear_interp_example" target_path="DSP/Examples/ARM/arm_linear_interp_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM0" target_path="DSP/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM0" target_path="DSP/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM3" target_path="DSP/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM3" target_path="DSP/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM4_FP" target_path="DSP/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM4_FP" target_path="DSP/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM7_SP" target_path="DSP/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM7_SP" target_path="DSP/Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_linear_interp_example" target_path="DSP/Examples/ARM/arm_linear_interp_example" type="src">
        <files mask="arm_linear_interp_data.c"/>
        <files mask="arm_linear_interp_example_f32.c"/>
        <files mask="math_helper.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_linear_interp_example" target_path="DSP/Examples/ARM/arm_linear_interp_example" type="configuration">
        <files mask="arm_linear_interp_example.ini"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_linear_interp_example" target_path="DSP/Examples/ARM/arm_linear_interp_example" type="project">
        <files mask="arm_linear_interp_example.uvoptx"/>
        <files mask="arm_linear_interp_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_linear_interp_example" target_path="DSP/Examples/ARM/arm_linear_interp_example" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_matrix_example" target_path="DSP/Examples/ARM/arm_matrix_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM0" target_path="DSP/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM0" target_path="DSP/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM3" target_path="DSP/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM3" target_path="DSP/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM4_FP" target_path="DSP/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM4_FP" target_path="DSP/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM7_SP" target_path="DSP/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM7_SP" target_path="DSP/Examples/ARM/arm_matrix_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_matrix_example" target_path="DSP/Examples/ARM/arm_matrix_example" type="configuration">
        <files mask="arm_matrix_example.ini"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_matrix_example" target_path="DSP/Examples/ARM/arm_matrix_example" type="project">
        <files mask="arm_matrix_example.uvoptx"/>
        <files mask="arm_matrix_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_matrix_example" target_path="DSP/Examples/ARM/arm_matrix_example" type="src">
        <files mask="arm_matrix_example_f32.c"/>
        <files mask="math_helper.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_matrix_example" target_path="DSP/Examples/ARM/arm_matrix_example" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_signal_converge_example" target_path="DSP/Examples/ARM/arm_signal_converge_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM0" target_path="DSP/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM0" target_path="DSP/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM3" target_path="DSP/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM3" target_path="DSP/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM4_FP" target_path="DSP/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM4_FP" target_path="DSP/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM7_SP" target_path="DSP/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM7_SP" target_path="DSP/Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_signal_converge_example" target_path="DSP/Examples/ARM/arm_signal_converge_example" type="src">
        <files mask="arm_signal_converge_data.c"/>
        <files mask="arm_signal_converge_example_f32.c"/>
        <files mask="math_helper.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_signal_converge_example" target_path="DSP/Examples/ARM/arm_signal_converge_example" type="configuration">
        <files mask="arm_signal_converge_example.ini"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_signal_converge_example" target_path="DSP/Examples/ARM/arm_signal_converge_example" type="project">
        <files mask="arm_signal_converge_example.uvoptx"/>
        <files mask="arm_signal_converge_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_signal_converge_example" target_path="DSP/Examples/ARM/arm_signal_converge_example" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_sin_cos_example" target_path="DSP/Examples/ARM/arm_sin_cos_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM0" target_path="DSP/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM0" target_path="DSP/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM3" target_path="DSP/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM3" target_path="DSP/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM4_FP" target_path="DSP/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM4_FP" target_path="DSP/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM7_SP" target_path="DSP/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM7_SP" target_path="DSP/Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_sin_cos_example" target_path="DSP/Examples/ARM/arm_sin_cos_example" type="configuration">
        <files mask="arm_sin_cos_example.ini"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_sin_cos_example" target_path="DSP/Examples/ARM/arm_sin_cos_example" type="project">
        <files mask="arm_sin_cos_example.uvoptx"/>
        <files mask="arm_sin_cos_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_sin_cos_example" target_path="DSP/Examples/ARM/arm_sin_cos_example" type="src">
        <files mask="arm_sin_cos_example_f32.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_variance_example" target_path="DSP/Examples/ARM/arm_variance_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_variance_example/RTE/Device/ARMCM0" target_path="DSP/Examples/ARM/arm_variance_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_variance_example/RTE/Device/ARMCM0" target_path="DSP/Examples/ARM/arm_variance_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_variance_example/RTE/Device/ARMCM3" target_path="DSP/Examples/ARM/arm_variance_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_variance_example/RTE/Device/ARMCM3" target_path="DSP/Examples/ARM/arm_variance_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_variance_example/RTE/Device/ARMCM4_FP" target_path="DSP/Examples/ARM/arm_variance_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_variance_example/RTE/Device/ARMCM4_FP" target_path="DSP/Examples/ARM/arm_variance_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_variance_example/RTE/Device/ARMCM7_SP" target_path="DSP/Examples/ARM/arm_variance_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_variance_example/RTE/Device/ARMCM7_SP" target_path="DSP/Examples/ARM/arm_variance_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_variance_example" target_path="DSP/Examples/ARM/arm_variance_example" type="configuration">
        <files mask="arm_variance_example.ini"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_variance_example" target_path="DSP/Examples/ARM/arm_variance_example" type="project">
        <files mask="arm_variance_example.uvoptx"/>
        <files mask="arm_variance_example.uvprojx"/>
      </source>
      <source path="CMSIS/DSP/Examples/ARM/arm_variance_example" target_path="DSP/Examples/ARM/arm_variance_example" type="src">
        <files mask="arm_variance_example_f32.c"/>
      </source>
      <source path="CMSIS/DSP/Projects/ARM" target_path="DSP/Projects/ARM" type="project">
        <files mask="arm_cortexM_math.uvoptx"/>
        <files mask="arm_cortexM_math.uvprojx"/>
      </source>
      <source path="CMSIS/DSP/Projects/ARM" target_path="DSP/Projects/ARM" type="script">
        <files mask="arm_cortexM_math_Build.bat"/>
      </source>
      <source path="CMSIS/DSP/Projects/ARMCLANG" target_path="DSP/Projects/ARMCLANG" type="project">
        <files mask="arm_cortexM_math.uvoptx"/>
        <files mask="arm_cortexM_math.uvprojx"/>
      </source>
      <source path="CMSIS/DSP/Projects/ARMCLANG" target_path="DSP/Projects/ARMCLANG" type="script">
        <files mask="arm_cortexM_math_Build.bat"/>
      </source>
      <source path="CMSIS/DSP/Projects/GCC" target_path="DSP/Projects/GCC" type="project">
        <files mask="arm_cortexM_math.uvoptx"/>
        <files mask="arm_cortexM_math.uvprojx"/>
      </source>
      <source path="CMSIS/DSP/Projects/GCC" target_path="DSP/Projects/GCC" type="script">
        <files mask="arm_cortexM_math_Build.bat"/>
      </source>
      <source path="CMSIS/DSP/Projects/IAR" target_path="DSP/Projects/IAR" type="project">
        <files mask="arm_cortexM_math.ewp"/>
      </source>
      <source path="CMSIS/DSP/Projects/IAR" target_path="DSP/Projects/IAR" type="other">
        <files mask="arm_cortexM_math.eww"/>
      </source>
      <source path="CMSIS/DSP/Projects/IAR" target_path="DSP/Projects/IAR" type="script">
        <files mask="arm_cortexM_math_Build.bat"/>
      </source>
      <source path="CMSIS/DSP/Source/BasicMathFunctions" target_path="DSP/Source/BasicMathFunctions" type="src">
        <files mask="BasicMathFunctions.c"/>
        <files mask="arm_abs_f32.c"/>
        <files mask="arm_abs_q15.c"/>
        <files mask="arm_abs_q31.c"/>
        <files mask="arm_abs_q7.c"/>
        <files mask="arm_add_f32.c"/>
        <files mask="arm_add_q15.c"/>
        <files mask="arm_add_q31.c"/>
        <files mask="arm_add_q7.c"/>
        <files mask="arm_dot_prod_f32.c"/>
        <files mask="arm_dot_prod_q15.c"/>
        <files mask="arm_dot_prod_q31.c"/>
        <files mask="arm_dot_prod_q7.c"/>
        <files mask="arm_mult_f32.c"/>
        <files mask="arm_mult_q15.c"/>
        <files mask="arm_mult_q31.c"/>
        <files mask="arm_mult_q7.c"/>
        <files mask="arm_negate_f32.c"/>
        <files mask="arm_negate_q15.c"/>
        <files mask="arm_negate_q31.c"/>
        <files mask="arm_negate_q7.c"/>
        <files mask="arm_offset_f32.c"/>
        <files mask="arm_offset_q15.c"/>
        <files mask="arm_offset_q31.c"/>
        <files mask="arm_offset_q7.c"/>
        <files mask="arm_scale_f32.c"/>
        <files mask="arm_scale_q15.c"/>
        <files mask="arm_scale_q31.c"/>
        <files mask="arm_scale_q7.c"/>
        <files mask="arm_shift_q15.c"/>
        <files mask="arm_shift_q31.c"/>
        <files mask="arm_shift_q7.c"/>
        <files mask="arm_sub_f32.c"/>
        <files mask="arm_sub_q15.c"/>
        <files mask="arm_sub_q31.c"/>
        <files mask="arm_sub_q7.c"/>
      </source>
      <source path="CMSIS/DSP/Source/CommonTables" target_path="DSP/Source/CommonTables" type="src">
        <files mask="CommonTables.c"/>
        <files mask="arm_common_tables.c"/>
        <files mask="arm_const_structs.c"/>
      </source>
      <source path="CMSIS/DSP/Source/ComplexMathFunctions" target_path="DSP/Source/ComplexMathFunctions" type="src">
        <files mask="ComplexMathFunctions.c"/>
        <files mask="arm_cmplx_conj_f32.c"/>
        <files mask="arm_cmplx_conj_q15.c"/>
        <files mask="arm_cmplx_conj_q31.c"/>
        <files mask="arm_cmplx_dot_prod_f32.c"/>
        <files mask="arm_cmplx_dot_prod_q15.c"/>
        <files mask="arm_cmplx_dot_prod_q31.c"/>
        <files mask="arm_cmplx_mag_f32.c"/>
        <files mask="arm_cmplx_mag_q15.c"/>
        <files mask="arm_cmplx_mag_q31.c"/>
        <files mask="arm_cmplx_mag_squared_f32.c"/>
        <files mask="arm_cmplx_mag_squared_q15.c"/>
        <files mask="arm_cmplx_mag_squared_q31.c"/>
        <files mask="arm_cmplx_mult_cmplx_f32.c"/>
        <files mask="arm_cmplx_mult_cmplx_q15.c"/>
        <files mask="arm_cmplx_mult_cmplx_q31.c"/>
        <files mask="arm_cmplx_mult_real_f32.c"/>
        <files mask="arm_cmplx_mult_real_q15.c"/>
        <files mask="arm_cmplx_mult_real_q31.c"/>
      </source>
      <source path="CMSIS/DSP/Source/ControllerFunctions" target_path="DSP/Source/ControllerFunctions" type="src">
        <files mask="ControllerFunctions.c"/>
        <files mask="arm_pid_init_f32.c"/>
        <files mask="arm_pid_init_q15.c"/>
        <files mask="arm_pid_init_q31.c"/>
        <files mask="arm_pid_reset_f32.c"/>
        <files mask="arm_pid_reset_q15.c"/>
        <files mask="arm_pid_reset_q31.c"/>
        <files mask="arm_sin_cos_f32.c"/>
        <files mask="arm_sin_cos_q31.c"/>
      </source>
      <source path="CMSIS/DSP/Source/FastMathFunctions" target_path="DSP/Source/FastMathFunctions" type="src">
        <files mask="FastMathFunctions.c"/>
        <files mask="arm_cos_f32.c"/>
        <files mask="arm_cos_q15.c"/>
        <files mask="arm_cos_q31.c"/>
        <files mask="arm_sin_f32.c"/>
        <files mask="arm_sin_q15.c"/>
        <files mask="arm_sin_q31.c"/>
        <files mask="arm_sqrt_q15.c"/>
        <files mask="arm_sqrt_q31.c"/>
      </source>
      <source path="CMSIS/DSP/Source/FilteringFunctions" target_path="DSP/Source/FilteringFunctions" type="src">
        <files mask="FilteringFunctions.c"/>
        <files mask="arm_biquad_cascade_df1_32x64_init_q31.c"/>
        <files mask="arm_biquad_cascade_df1_32x64_q31.c"/>
        <files mask="arm_biquad_cascade_df1_f32.c"/>
        <files mask="arm_biquad_cascade_df1_fast_q15.c"/>
        <files mask="arm_biquad_cascade_df1_fast_q31.c"/>
        <files mask="arm_biquad_cascade_df1_init_f32.c"/>
        <files mask="arm_biquad_cascade_df1_init_q15.c"/>
        <files mask="arm_biquad_cascade_df1_init_q31.c"/>
        <files mask="arm_biquad_cascade_df1_q15.c"/>
        <files mask="arm_biquad_cascade_df1_q31.c"/>
        <files mask="arm_biquad_cascade_df2T_f32.c"/>
        <files mask="arm_biquad_cascade_df2T_f64.c"/>
        <files mask="arm_biquad_cascade_df2T_init_f32.c"/>
        <files mask="arm_biquad_cascade_df2T_init_f64.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_f32.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_init_f32.c"/>
        <files mask="arm_conv_f32.c"/>
        <files mask="arm_conv_fast_opt_q15.c"/>
        <files mask="arm_conv_fast_q15.c"/>
        <files mask="arm_conv_fast_q31.c"/>
        <files mask="arm_conv_opt_q15.c"/>
        <files mask="arm_conv_opt_q7.c"/>
        <files mask="arm_conv_partial_f32.c"/>
        <files mask="arm_conv_partial_fast_opt_q15.c"/>
        <files mask="arm_conv_partial_fast_q15.c"/>
        <files mask="arm_conv_partial_fast_q31.c"/>
        <files mask="arm_conv_partial_opt_q15.c"/>
        <files mask="arm_conv_partial_opt_q7.c"/>
        <files mask="arm_conv_partial_q15.c"/>
        <files mask="arm_conv_partial_q31.c"/>
        <files mask="arm_conv_partial_q7.c"/>
        <files mask="arm_conv_q15.c"/>
        <files mask="arm_conv_q31.c"/>
        <files mask="arm_conv_q7.c"/>
        <files mask="arm_correlate_f32.c"/>
        <files mask="arm_correlate_fast_opt_q15.c"/>
        <files mask="arm_correlate_fast_q15.c"/>
        <files mask="arm_correlate_fast_q31.c"/>
        <files mask="arm_correlate_opt_q15.c"/>
        <files mask="arm_correlate_opt_q7.c"/>
        <files mask="arm_correlate_q15.c"/>
        <files mask="arm_correlate_q31.c"/>
        <files mask="arm_correlate_q7.c"/>
        <files mask="arm_fir_decimate_f32.c"/>
        <files mask="arm_fir_decimate_fast_q15.c"/>
        <files mask="arm_fir_decimate_fast_q31.c"/>
        <files mask="arm_fir_decimate_init_f32.c"/>
        <files mask="arm_fir_decimate_init_q15.c"/>
        <files mask="arm_fir_decimate_init_q31.c"/>
        <files mask="arm_fir_decimate_q15.c"/>
        <files mask="arm_fir_decimate_q31.c"/>
        <files mask="arm_fir_f32.c"/>
        <files mask="arm_fir_fast_q15.c"/>
        <files mask="arm_fir_fast_q31.c"/>
        <files mask="arm_fir_init_f32.c"/>
        <files mask="arm_fir_init_q15.c"/>
        <files mask="arm_fir_init_q31.c"/>
        <files mask="arm_fir_init_q7.c"/>
        <files mask="arm_fir_interpolate_f32.c"/>
        <files mask="arm_fir_interpolate_init_f32.c"/>
        <files mask="arm_fir_interpolate_init_q15.c"/>
        <files mask="arm_fir_interpolate_init_q31.c"/>
        <files mask="arm_fir_interpolate_q15.c"/>
        <files mask="arm_fir_interpolate_q31.c"/>
        <files mask="arm_fir_lattice_f32.c"/>
        <files mask="arm_fir_lattice_init_f32.c"/>
        <files mask="arm_fir_lattice_init_q15.c"/>
        <files mask="arm_fir_lattice_init_q31.c"/>
        <files mask="arm_fir_lattice_q15.c"/>
        <files mask="arm_fir_lattice_q31.c"/>
        <files mask="arm_fir_q15.c"/>
        <files mask="arm_fir_q31.c"/>
        <files mask="arm_fir_q7.c"/>
        <files mask="arm_fir_sparse_f32.c"/>
        <files mask="arm_fir_sparse_init_f32.c"/>
        <files mask="arm_fir_sparse_init_q15.c"/>
        <files mask="arm_fir_sparse_init_q31.c"/>
        <files mask="arm_fir_sparse_init_q7.c"/>
        <files mask="arm_fir_sparse_q15.c"/>
        <files mask="arm_fir_sparse_q31.c"/>
        <files mask="arm_fir_sparse_q7.c"/>
        <files mask="arm_iir_lattice_f32.c"/>
        <files mask="arm_iir_lattice_init_f32.c"/>
        <files mask="arm_iir_lattice_init_q15.c"/>
        <files mask="arm_iir_lattice_init_q31.c"/>
        <files mask="arm_iir_lattice_q15.c"/>
        <files mask="arm_iir_lattice_q31.c"/>
        <files mask="arm_lms_f32.c"/>
        <files mask="arm_lms_init_f32.c"/>
        <files mask="arm_lms_init_q15.c"/>
        <files mask="arm_lms_init_q31.c"/>
        <files mask="arm_lms_norm_f32.c"/>
        <files mask="arm_lms_norm_init_f32.c"/>
        <files mask="arm_lms_norm_init_q15.c"/>
        <files mask="arm_lms_norm_init_q31.c"/>
        <files mask="arm_lms_norm_q15.c"/>
        <files mask="arm_lms_norm_q31.c"/>
        <files mask="arm_lms_q15.c"/>
        <files mask="arm_lms_q31.c"/>
      </source>
      <source path="CMSIS/DSP/Source/MatrixFunctions" target_path="DSP/Source/MatrixFunctions" type="src">
        <files mask="MatrixFunctions.c"/>
        <files mask="arm_mat_add_f32.c"/>
        <files mask="arm_mat_add_q15.c"/>
        <files mask="arm_mat_add_q31.c"/>
        <files mask="arm_mat_cmplx_mult_f32.c"/>
        <files mask="arm_mat_cmplx_mult_q15.c"/>
        <files mask="arm_mat_cmplx_mult_q31.c"/>
        <files mask="arm_mat_init_f32.c"/>
        <files mask="arm_mat_init_q15.c"/>
        <files mask="arm_mat_init_q31.c"/>
        <files mask="arm_mat_inverse_f32.c"/>
        <files mask="arm_mat_inverse_f64.c"/>
        <files mask="arm_mat_mult_f32.c"/>
        <files mask="arm_mat_mult_fast_q15.c"/>
        <files mask="arm_mat_mult_fast_q31.c"/>
        <files mask="arm_mat_mult_q15.c"/>
        <files mask="arm_mat_mult_q31.c"/>
        <files mask="arm_mat_scale_f32.c"/>
        <files mask="arm_mat_scale_q15.c"/>
        <files mask="arm_mat_scale_q31.c"/>
        <files mask="arm_mat_sub_f32.c"/>
        <files mask="arm_mat_sub_q15.c"/>
        <files mask="arm_mat_sub_q31.c"/>
        <files mask="arm_mat_trans_f32.c"/>
        <files mask="arm_mat_trans_q15.c"/>
        <files mask="arm_mat_trans_q31.c"/>
      </source>
      <source path="CMSIS/DSP/Source/StatisticsFunctions" target_path="DSP/Source/StatisticsFunctions" type="src">
        <files mask="StatisticsFunctions.c"/>
        <files mask="arm_max_f32.c"/>
        <files mask="arm_max_q15.c"/>
        <files mask="arm_max_q31.c"/>
        <files mask="arm_max_q7.c"/>
        <files mask="arm_mean_f32.c"/>
        <files mask="arm_mean_q15.c"/>
        <files mask="arm_mean_q31.c"/>
        <files mask="arm_mean_q7.c"/>
        <files mask="arm_min_f32.c"/>
        <files mask="arm_min_q15.c"/>
        <files mask="arm_min_q31.c"/>
        <files mask="arm_min_q7.c"/>
        <files mask="arm_power_f32.c"/>
        <files mask="arm_power_q15.c"/>
        <files mask="arm_power_q31.c"/>
        <files mask="arm_power_q7.c"/>
        <files mask="arm_rms_f32.c"/>
        <files mask="arm_rms_q15.c"/>
        <files mask="arm_rms_q31.c"/>
        <files mask="arm_std_f32.c"/>
        <files mask="arm_std_q15.c"/>
        <files mask="arm_std_q31.c"/>
        <files mask="arm_var_f32.c"/>
        <files mask="arm_var_q15.c"/>
        <files mask="arm_var_q31.c"/>
      </source>
      <source path="CMSIS/DSP/Source/SupportFunctions" target_path="DSP/Source/SupportFunctions" type="src">
        <files mask="SupportFunctions.c"/>
        <files mask="arm_copy_f32.c"/>
        <files mask="arm_copy_q15.c"/>
        <files mask="arm_copy_q31.c"/>
        <files mask="arm_copy_q7.c"/>
        <files mask="arm_fill_f32.c"/>
        <files mask="arm_fill_q15.c"/>
        <files mask="arm_fill_q31.c"/>
        <files mask="arm_fill_q7.c"/>
        <files mask="arm_float_to_q15.c"/>
        <files mask="arm_float_to_q31.c"/>
        <files mask="arm_float_to_q7.c"/>
        <files mask="arm_q15_to_float.c"/>
        <files mask="arm_q15_to_q31.c"/>
        <files mask="arm_q15_to_q7.c"/>
        <files mask="arm_q31_to_float.c"/>
        <files mask="arm_q31_to_q15.c"/>
        <files mask="arm_q31_to_q7.c"/>
        <files mask="arm_q7_to_float.c"/>
        <files mask="arm_q7_to_q15.c"/>
        <files mask="arm_q7_to_q31.c"/>
      </source>
      <source path="CMSIS/DSP/Source/TransformFunctions" target_path="DSP/Source/TransformFunctions" type="src">
        <files mask="TransformFunctions.c"/>
        <files mask="arm_bitreversal.c"/>
        <files mask="arm_bitreversal2.c"/>
        <files mask="arm_cfft_f32.c"/>
        <files mask="arm_cfft_q15.c"/>
        <files mask="arm_cfft_q31.c"/>
        <files mask="arm_cfft_radix2_f32.c"/>
        <files mask="arm_cfft_radix2_init_f32.c"/>
        <files mask="arm_cfft_radix2_init_q15.c"/>
        <files mask="arm_cfft_radix2_init_q31.c"/>
        <files mask="arm_cfft_radix2_q15.c"/>
        <files mask="arm_cfft_radix2_q31.c"/>
        <files mask="arm_cfft_radix4_f32.c"/>
        <files mask="arm_cfft_radix4_init_f32.c"/>
        <files mask="arm_cfft_radix4_init_q15.c"/>
        <files mask="arm_cfft_radix4_init_q31.c"/>
        <files mask="arm_cfft_radix4_q15.c"/>
        <files mask="arm_cfft_radix4_q31.c"/>
        <files mask="arm_cfft_radix8_f32.c"/>
        <files mask="arm_dct4_f32.c"/>
        <files mask="arm_dct4_init_f32.c"/>
        <files mask="arm_dct4_init_q15.c"/>
        <files mask="arm_dct4_init_q31.c"/>
        <files mask="arm_dct4_q15.c"/>
        <files mask="arm_dct4_q31.c"/>
        <files mask="arm_rfft_f32.c"/>
        <files mask="arm_rfft_fast_f32.c"/>
        <files mask="arm_rfft_fast_init_f32.c"/>
        <files mask="arm_rfft_init_f32.c"/>
        <files mask="arm_rfft_init_q15.c"/>
        <files mask="arm_rfft_init_q31.c"/>
        <files mask="arm_rfft_q15.c"/>
        <files mask="arm_rfft_q31.c"/>
      </source>
      <source path="CMSIS/DSP/Source/TransformFunctions" target_path="DSP/Source/TransformFunctions" type="asm_include">
        <files mask="arm_bitreversal2.S"/>
      </source>
    </component>
    <component id="platform.CMSIS_DSP_Lib.arm_cortexM4bf_math.MIMX8MM4" name="arm_cortexM4bf_math" version="1.6.0" devices="MIMX8MM4xxxKZ" device_cores="cm4_MIMX8MM4xxxKZ" user_visible="true" type="CMSIS_driver">
      <source toolchain="armgcc" path="CMSIS/DSP/Lib/GCC" target_path="libs" type="lib">
        <files mask="libarm_cortexM7l_math.a"/>
      </source>
    </component>
    <component id="platform.CMSIS_DSP_Lib.arm_cortexM4lf_math.MIMX8MM4" name="arm_cortexM4lf_math" version="1.6.0" devices="MIMX8MM4xxxKZ" device_cores="cm4_MIMX8MM4xxxKZ" user_visible="true" type="CMSIS_driver">
      <source toolchain="armgcc" path="CMSIS/DSP/Lib/GCC" target_path="libs" type="lib">
        <files mask="libarm_cortexM4lf_math.a"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.CAN_CMSISInclude.MIMX8MM4" name="CAN" version="1.2.0" devices="MIMX8MM4xxxKZ" user_visible="false" type="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MM4"/>
      </dependencies>
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_CAN.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MM4" name="Common" version="2.7.0" devices="MIMX8MM4xxxKZ" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_Common.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.MIMX8MM4" name="Ethernet" version="2.1.0" devices="MIMX8MM4xxxKZ" user_visible="false" type="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MM4"/>
      </dependencies>
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_ETH.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.Ethernet_MAC_CMSISInclude.MIMX8MM4" name="Ethernet_MAC" version="2.1.0" devices="MIMX8MM4xxxKZ" user_visible="false" type="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.MIMX8MM4"/>
      </dependencies>
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_ETH_MAC.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.Ethernet_PHY_CMSISInclude.MIMX8MM4" name="Ethernet_PHY" version="2.1.0" devices="MIMX8MM4xxxKZ" user_visible="false" type="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.MIMX8MM4"/>
      </dependencies>
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_ETH_PHY.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.Flash_CMSISInclude.MIMX8MM4" name="Flash" version="2.2.0" devices="MIMX8MM4xxxKZ" user_visible="false" type="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MM4"/>
      </dependencies>
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_Flash.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMX8MM4" name="I2C" version="2.3.0" devices="MIMX8MM4xxxKZ" user_visible="false" type="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MM4"/>
      </dependencies>
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_I2C.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.MCI_CMSISInclude.MIMX8MM4" name="MCI" version="2.3.0" devices="MIMX8MM4xxxKZ" user_visible="false" type="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MM4"/>
      </dependencies>
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_MCI.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.NAND_CMSISInclude.MIMX8MM4" name="NAND" version="2.3.0" devices="MIMX8MM4xxxKZ" user_visible="false" type="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MM4"/>
      </dependencies>
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_NAND.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.SAI_CMSISInclude.MIMX8MM4" name="SAI" version="1.1.0" devices="MIMX8MM4xxxKZ" user_visible="false" type="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MM4"/>
      </dependencies>
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_SAI.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMX8MM4" name="SPI" version="2.2.0" devices="MIMX8MM4xxxKZ" user_visible="false" type="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MM4"/>
      </dependencies>
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_SPI.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.USART_CMSISInclude.MIMX8MM4" name="USART" version="2.3.0" devices="MIMX8MM4xxxKZ" user_visible="false" type="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MM4"/>
      </dependencies>
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_USART.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.USB_CMSISInclude.MIMX8MM4" name="USB" version="2.2.0" devices="MIMX8MM4xxxKZ" user_visible="false" type="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MM4"/>
      </dependencies>
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_USB.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.USB_Device_CMSISInclude.MIMX8MM4" name="USB_Device" version="2.2.0" devices="MIMX8MM4xxxKZ" user_visible="false" type="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.USB_CMSISInclude.MIMX8MM4"/>
      </dependencies>
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_USBD.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.USB_Host_CMSISInclude.MIMX8MM4" name="USB_Host" version="2.2.0" devices="MIMX8MM4xxxKZ" user_visible="false" type="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.USB_CMSISInclude.MIMX8MM4"/>
      </dependencies>
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_USBH.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.WiFi_CMSISInclude.MIMX8MM4" name="WiFi" version="1.0.0" devices="MIMX8MM4xxxKZ" user_visible="false" type="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MM4"/>
      </dependencies>
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_WiFi.h"/>
      </source>
    </component>
    <component id="platform.Include_common.MIMX8MM4" name="CMSIS_Include_common" version="5.2.1" devices="MIMX8MM4xxxKZ" user_visible="true" type="CMSIS_Include">
      <source path="CMSIS/Include" target_path="CMSIS" type="c_include">
        <files mask="cmsis_armcc.h"/>
        <files mask="cmsis_armclang.h"/>
        <files mask="cmsis_armclang_ltm.h"/>
        <files mask="cmsis_compiler.h"/>
        <files mask="cmsis_gcc.h"/>
        <files mask="cmsis_iccarm.h"/>
        <files mask="cmsis_version.h"/>
        <files mask="core_armv81mml.h"/>
        <files mask="core_armv8mbl.h"/>
        <files mask="core_armv8mml.h"/>
        <files mask="mpu_armv7.h"/>
        <files mask="mpu_armv8.h"/>
      </source>
    </component>
    <component id="platform.Include_core_cm4.MIMX8MM4" name="CMSIS_Include_core_cm4" version="5.2.1" devices="MIMX8MM4xxxKZ" device_cores="cm4_MIMX8MM4xxxKZ" user_visible="true" type="CMSIS_Include">
      <dependencies>
        <all>
          <component_dependency value="platform.Include_common.MIMX8MM4"/>
          <component_dependency value="platform.Include_dsp.MIMX8MM4"/>
        </all>
      </dependencies>
      <source path="CMSIS/Include" target_path="CMSIS" type="c_include">
        <files mask="core_cm4.h"/>
      </source>
    </component>
    <component id="platform.Include_dsp.MIMX8MM4" name="CMSIS_Include_dsp" version="1.6.0" devices="MIMX8MM4xxxKZ" user_visible="true" type="CMSIS_Include">
      <source path="CMSIS/Include" target_path="CMSIS" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_math.h"/>
      </source>
    </component>
    <component id="project_template.MIMX8MM4.MIMX8MM4" name="MIMX8MM4" version="1.0.0" devices="MIMX8MM4xxxKZ" device_cores="cm4_MIMX8MM4xxxKZ" category="Board Support/SDK Project Template" user_visible="true" type="project_template">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.clock.MIMX8MM4"/>
          <component_dependency value="platform.drivers.common.MIMX8MM4"/>
          <component_dependency value="device.MIMX8MM4_CMSIS.MIMX8MM4"/>
          <component_dependency value="device.MIMX8MM4_startup.MIMX8MM4"/>
          <component_dependency value="platform.drivers.iuart.MIMX8MM4"/>
          <component_dependency value="platform.drivers.rdc.MIMX8MM4"/>
          <component_dependency value="platform.utilities.assert.MIMX8MM4"/>
          <component_dependency value="utility.debug_console.MIMX8MM4"/>
        </all>
      </dependencies>
      <source path="devices/MIMX8MM4/project_template" target_path="board" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="peripherals.c"/>
        <files mask="pin_mux.c"/>
      </source>
      <source path="devices/MIMX8MM4/project_template" target_path="board" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="peripherals.h"/>
        <files mask="pin_mux.h"/>
      </source>
    </component>
    <component id="RTE_Device.MIMX8MM4" name="RTE_Device" version="1.0.0" devices="MIMX8MM4xxxKZ" category="Device/SDK Project Template" user_visible="true" type="project_template">
      <source path="devices/MIMX8MM4/template" target_path="board" type="c_include">
        <files mask="RTE_Device.h"/>
      </source>
    </component>
    <component id="tools.MIMX8MM4" name="cmake_toolchain" version="1.0.0" devices="MIMX8MM4xxxKZ" user_visible="true" type="other">
      <source path="tools/cmake_toolchain_files" target_path="cmake_toolchain_files" type="script">
        <files mask="armgcc.cmake"/>
        <files mask="armgcc_force_cpp.cmake"/>
        <files mask="xcc.cmake"/>
      </source>
    </component>
    <component id="component.iuart_adapter.MIMX8MM4" name="iuart_adapter" version="1.0.0" full_name="iuart_adapter" devices="MIMX8MM4xxxKZ" device_cores="cm4_MIMX8MM4xxxKZ" user_visible="true" type="utilities">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8MM4"/>
          <component_dependency value="platform.drivers.iuart.MIMX8MM4"/>
        </all>
      </dependencies>
      <source path="components/uart" target_path="component/uart" type="src">
        <files mask="iuart_adapter.c"/>
      </source>
      <source path="components/uart" target_path="component/uart" type="c_include">
        <files mask="uart.h"/>
      </source>
    </component>
    <component id="component.lists.MIMX8MM4" name="lists" version="1.0.0" devices="MIMX8MM4xxxKZ" device_cores="cm4_MIMX8MM4xxxKZ" user_visible="true" type="software_component">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MM4"/>
      </dependencies>
      <source path="components/lists" target_path="component/lists" type="src">
        <files mask="generic_list.c"/>
      </source>
      <source path="components/lists" target_path="component/lists" type="c_include">
        <files mask="generic_list.h"/>
      </source>
    </component>
    <component id="component.serial_manager.MIMX8MM4" name="serial_manager" version="1.0.0" full_name="Serial Manager" devices="MIMX8MM4xxxKZ" device_cores="cm4_MIMX8MM4xxxKZ" user_visible="true" type="utilities">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8MM4"/>
          <component_dependency value="component.lists.MIMX8MM4"/>
          <any_of>
            <component_dependency value="component.serial_manager_uart.MIMX8MM4"/>
            <component_dependency value="component.serial_manager_swo.MIMX8MM4"/>
            <component_dependency value="component.serial_manager_usb_cdc_virtual.MIMX8MM4"/>
          </any_of>
        </all>
      </dependencies>
      <source path="components/serial_manager" target_path="component/serial_manager" type="src">
        <files mask="serial_manager.c"/>
      </source>
      <source path="components/serial_manager" target_path="component/serial_manager" type="c_include">
        <files mask="serial_manager.h"/>
        <files mask="serial_port_internal.h"/>
      </source>
    </component>
    <component id="component.serial_manager_swo.MIMX8MM4" name="serial_manager_swo" version="1.0.0" full_name="Serial Manager Swo" devices="MIMX8MM4xxxKZ" device_cores="cm4_MIMX8MM4xxxKZ" user_visible="true" type="utilities">
      <defines>
        <define name="SERIAL_PORT_TYPE_SWO" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMX8MM4"/>
          <component_dependency value="component.serial_manager.MIMX8MM4"/>
        </all>
      </dependencies>
      <source path="components/serial_manager" target_path="component/serial_manager" type="src">
        <files mask="serial_port_swo.c"/>
      </source>
      <source path="components/serial_manager" target_path="component/serial_manager" type="c_include">
        <files mask="serial_port_swo.h"/>
      </source>
    </component>
    <component id="component.serial_manager_uart.MIMX8MM4" name="serial_manager_uart" version="1.0.0" full_name="Serial Manager uart" devices="MIMX8MM4xxxKZ" user_visible="true" type="utilities">
      <defines>
        <define name="SERIAL_PORT_TYPE_UART" value="1"/>
      </defines>
      <dependencies>
        <component_dependency value="platform.drivers.iuart.MIMX8MM4"/>
      </dependencies>
      <source path="components/serial_manager" target_path="component/serial_manager" type="src">
        <files mask="serial_port_uart.c"/>
      </source>
      <source path="components/serial_manager" target_path="component/serial_manager" type="c_include">
        <files mask="serial_port_uart.h"/>
      </source>
    </component>
    <component id="component.serial_manager_usb_cdc_virtual.MIMX8MM4" name="serial_manager_usb_cdc_virtual" version="1.0.0" full_name="Serial Manager USB CDC Virtual" devices="MIMX8MM4xxxKZ" device_cores="cm4_MIMX8MM4xxxKZ" user_visible="false" type="utilities">
      <defines>
        <define name="SERIAL_PORT_TYPE_USBCDC_VIRTUAL" value="1"/>
        <define name="DEBUG_CONSOLE_TRANSFER_NON_BLOCKING" value=""/>
      </defines>
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MM4"/>
      </dependencies>
      <source path="components/serial_manager" target_path="component/serial_manager" type="src">
        <files mask="serial_port_usb_virtual.c"/>
      </source>
      <source path="components/serial_manager" target_path="component/serial_manager" type="c_include">
        <files mask="serial_port_usb_virtual.h"/>
      </source>
    </component>
    <component id="device.MIMX8MM4_CMSIS.MIMX8MM4" name="MIMX8MM4_CMSIS" version="1.0.0" devices="MIMX8MM4xxxKZ" device_cores="cm4_MIMX8MM4xxxKZ" user_visible="true" type="CMSIS_Include">
      <dependencies>
        <component_dependency value="platform.Include_core_cm4.MIMX8MM4"/>
      </dependencies>
      <source path="devices/MIMX8MM4" target_path="device" type="c_include">
        <files mask="MIMX8MM4_cm4.h"/>
        <files mask="MIMX8MM4_cm4_features.h"/>
        <files mask="fsl_device_registers.h"/>
      </source>
    </component>
    <component id="device.MIMX8MM4_debugger.MIMX8MM4" name="MIMX8MM4_debugger" version="1.0.0" devices="MIMX8MM4xxxKZ" user_visible="true" type="debugger">
      <source path="devices/MIMX8MM4" target_path="MIMX8MM4" type="xml">
        <files mask="MIMX8MM4_cm4.xml"/>
      </source>
    </component>
    <component id="platform.devices.MIMX8MM4_linker.MIMX8MM4" name="MIMX8MM4_linker" version="1.0.0" devices="MIMX8MM4xxxKZ" user_visible="true" type="linker">
      <source toolchain="armgcc" path="devices/MIMX8MM4/gcc" target_path="MIMX8MM4/gcc" type="linker">
        <files mask="MIMX8MM4xxxxx_cm4_ddr_ram.ld"/>
        <files mask="MIMX8MM4xxxxx_cm4_flash.ld"/>
        <files mask="MIMX8MM4xxxxx_cm4_ram.ld"/>
      </source>
      <source toolchain="iar" path="devices/MIMX8MM4/iar" target_path="MIMX8MM4/iar" type="linker">
        <files mask="MIMX8MM4xxxxx_cm4_ddr_ram.icf"/>
        <files mask="MIMX8MM4xxxxx_cm4_flash.icf"/>
        <files mask="MIMX8MM4xxxxx_cm4_ram.icf"/>
      </source>
    </component>
    <component id="device.MIMX8MM4_startup.MIMX8MM4" name="MIMX8MM4_startup" version="1.0.0" devices="MIMX8MM4xxxKZ" category="Device/Startup" user_visible="true" type="startup">
      <source toolchain="armgcc" path="devices/MIMX8MM4/gcc" target_path="startup" type="asm_include">
        <files mask="startup_MIMX8MM4_cm4.S"/>
      </source>
      <source toolchain="iar" path="devices/MIMX8MM4/iar" target_path="startup" type="asm_include">
        <files mask="startup_MIMX8MM4_cm4.s"/>
      </source>
      <source path="devices/MIMX8MM4" target_path="device" type="src">
        <files mask="system_MIMX8MM4_cm4.c"/>
      </source>
      <source path="devices/MIMX8MM4" target_path="device" type="c_include">
        <files mask="system_MIMX8MM4_cm4.h"/>
      </source>
    </component>
    <component id="docs.images.MIMX8MM4" name="images" version="1.0.0" devices="MIMX8MM4xxxKZ" user_visible="true" type="documentation">
      <source path="docs/images" target_path="images" type="image">
        <files mask="device.jpg"/>
      </source>
    </component>
    <component id="platform.drivers.clock.MIMX8MM4" name="clock" brief="Clock Driver" version="2.2.1" full_name="Clock Driver" devices="MIMX8MM4xxxKZ" device_cores="cm4_MIMX8MM4xxxKZ" user_visible="true" type="driver">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MM4"/>
      </dependencies>
      <source path="devices/MIMX8MM4/drivers" target_path="drivers" type="src">
        <files mask="fsl_clock.c"/>
      </source>
      <source path="devices/MIMX8MM4/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_clock.h"/>
      </source>
    </component>
    <component id="platform.drivers.ecspi_sdma_cmsis.MIMX8MM4" name="ecspi_sdma_cmsis" brief="ECSPI CMSIS SDMA Driver" version="2.0.0" full_name="ECSPI CMSIS SDMA Driver" devices="MIMX8MM4xxxKZ" device_cores="cm4_MIMX8MM4xxxKZ" user_visible="true" type="CMSIS_driver">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.ecspi_sdma.MIMX8MM4"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMX8MM4"/>
          <component_dependency value="RTE_Device.MIMX8MM4"/>
        </all>
      </dependencies>
      <source path="devices/MIMX8MM4/cmsis_drivers" target_path="drivers" type="src">
        <files mask="fsl_ecspi_cmsis.c"/>
      </source>
      <source path="devices/MIMX8MM4/cmsis_drivers" target_path="drivers" type="c_include">
        <files mask="fsl_ecspi_cmsis.h"/>
      </source>
    </component>
    <component id="platform.drivers.ii2c_cmsis.MIMX8MM4" name="i2c_cmsis" brief="I2C CMSIS Driver" version="2.0.0" full_name="II2C CMSIS Driver" devices="MIMX8MM4xxxKZ" user_visible="true" type="CMSIS_driver">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.ii2c.MIMX8MM4"/>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMX8MM4"/>
          <component_dependency value="RTE_Device.MIMX8MM4"/>
        </all>
      </dependencies>
      <source path="devices/MIMX8MM4/cmsis_drivers" target_path="drivers" type="src">
        <files mask="fsl_i2c_cmsis.c"/>
      </source>
      <source path="devices/MIMX8MM4/cmsis_drivers" target_path="drivers" type="c_include">
        <files mask="fsl_i2c_cmsis.h"/>
      </source>
    </component>
    <component id="platform.drivers.iuart_sdma_cmsis.MIMX8MM4" name="uart_sdma_cmsis" brief="UART CMSIS SDMA Driver" version="2.0.0" full_name="IUART CMSIS SDMA Driver" devices="MIMX8MM4xxxKZ" device_cores="cm4_MIMX8MM4xxxKZ" user_visible="true" type="CMSIS_driver">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.iuart_sdma.MIMX8MM4"/>
          <component_dependency value="platform.CMSIS_Driver_Include.USART_CMSISInclude.MIMX8MM4"/>
          <component_dependency value="RTE_Device.MIMX8MM4"/>
        </all>
      </dependencies>
      <source path="devices/MIMX8MM4/cmsis_drivers" target_path="drivers" type="src">
        <files mask="fsl_uart_cmsis.c"/>
      </source>
      <source path="devices/MIMX8MM4/cmsis_drivers" target_path="drivers" type="c_include">
        <files mask="fsl_uart_cmsis.h"/>
      </source>
    </component>
    <component id="platform.drivers.common.MIMX8MM4" name="common" brief="COMMON Driver" version="2.2.2" full_name="COMMON Driver" devices="MIMX8MM4xxxKZ" device_cores="cm4_MIMX8MM4xxxKZ" user_visible="true" type="driver">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.clock.MIMX8MM4"/>
          <component_dependency value="device.MIMX8MM4_CMSIS.MIMX8MM4"/>
        </all>
      </dependencies>
      <source path="devices/MIMX8MM4/drivers" target_path="drivers" type="src">
        <files mask="fsl_common.c"/>
      </source>
      <source path="devices/MIMX8MM4/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_common.h"/>
      </source>
    </component>
    <component id="platform.drivers.ecspi.MIMX8MM4" name="ecspi" brief="ECSPI Driver" version="2.0.2" full_name="ECSPI Driver" devices="MIMX8MM4xxxKZ" device_cores="cm4_MIMX8MM4xxxKZ" user_visible="true" type="driver">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MM4"/>
      </dependencies>
      <source path="devices/MIMX8MM4/drivers" target_path="drivers" type="src">
        <files mask="fsl_ecspi.c"/>
      </source>
      <source path="devices/MIMX8MM4/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_ecspi.h"/>
      </source>
    </component>
    <component id="platform.drivers.ecspi_freertos.MIMX8MM4" name="ecspi_freertos" brief="ECSPI Freertos Driver" version="2.0.2" full_name="ECSPI Freertos Driver" devices="MIMX8MM4xxxKZ" device_cores="cm4_MIMX8MM4xxxKZ" user_visible="true" type="driver">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.ecspi.MIMX8MM4"/>
          <component_dependency value="middleware.amazon_freertos-kernel.MIMX8MM4"/>
        </all>
      </dependencies>
      <source path="devices/MIMX8MM4/drivers" target_path="drivers/freertos" type="src">
        <files mask="fsl_ecspi_freertos.c"/>
      </source>
      <source path="devices/MIMX8MM4/drivers" target_path="drivers/freertos" type="c_include">
        <files mask="fsl_ecspi_freertos.h"/>
      </source>
    </component>
    <component id="platform.drivers.ecspi_sdma.MIMX8MM4" name="ecspi_sdma" brief="ECSPI SDMA Driver" version="2.0.2" full_name="ECSPI SDMA Driver" devices="MIMX8MM4xxxKZ" device_cores="cm4_MIMX8MM4xxxKZ" user_visible="true" type="driver">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.ecspi.MIMX8MM4"/>
          <component_dependency value="platform.drivers.sdma.MIMX8MM4"/>
        </all>
      </dependencies>
      <source path="devices/MIMX8MM4/drivers" target_path="drivers" type="src">
        <files mask="fsl_ecspi_sdma.c"/>
      </source>
      <source path="devices/MIMX8MM4/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_ecspi_sdma.h"/>
      </source>
    </component>
    <component id="platform.drivers.gpc_2.MIMX8MM4" name="gpc" brief="GPC Driver" version="2.1.0" full_name="GPC Driver" devices="MIMX8MM4xxxKZ" device_cores="cm4_MIMX8MM4xxxKZ" user_visible="true" type="driver">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MM4"/>
      </dependencies>
      <source path="devices/MIMX8MM4/drivers" target_path="drivers" type="src">
        <files mask="fsl_gpc.c"/>
      </source>
      <source path="devices/MIMX8MM4/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_gpc.h"/>
      </source>
    </component>
    <component id="platform.drivers.gpt.MIMX8MM4" name="gpt" brief="GPT Driver" version="2.0.1" full_name="GPT Driver" devices="MIMX8MM4xxxKZ" device_cores="cm4_MIMX8MM4xxxKZ" user_visible="true" type="driver">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MM4"/>
      </dependencies>
      <source path="devices/MIMX8MM4/drivers" target_path="drivers" type="src">
        <files mask="fsl_gpt.c"/>
      </source>
      <source path="devices/MIMX8MM4/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_gpt.h"/>
      </source>
    </component>
    <component id="platform.drivers.igpio.MIMX8MM4" name="gpio" brief="GPIO Driver" version="2.0.3" full_name="igpio" devices="MIMX8MM4xxxKZ" device_cores="cm4_MIMX8MM4xxxKZ" user_visible="true" type="driver">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MM4"/>
      </dependencies>
      <source path="devices/MIMX8MM4/drivers" target_path="drivers" type="src">
        <files mask="fsl_gpio.c"/>
      </source>
      <source path="devices/MIMX8MM4/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_gpio.h"/>
      </source>
    </component>
    <component id="platform.drivers.ii2c.MIMX8MM4" name="i2c" brief="I2C Driver" version="2.0.5" full_name="I2C Driver" devices="MIMX8MM4xxxKZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MM4/drivers" target_path="drivers" type="src">
        <files mask="fsl_i2c.c"/>
      </source>
      <source path="devices/MIMX8MM4/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_i2c.h"/>
      </source>
    </component>
    <component id="platform.drivers.ii2c_freertos.MIMX8MM4" name="i2c_freertos" brief="I2C Freertos Driver" version="2.0.5" full_name="I2C Freertos Driver" devices="MIMX8MM4xxxKZ" user_visible="true" type="driver">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.ii2c.MIMX8MM4"/>
          <component_dependency value="middleware.amazon_freertos-kernel.MIMX8MM4"/>
        </all>
      </dependencies>
      <source path="devices/MIMX8MM4/drivers" target_path="drivers/freertos" type="src">
        <files mask="fsl_i2c_freertos.c"/>
      </source>
      <source path="devices/MIMX8MM4/drivers" target_path="drivers/freertos" type="c_include">
        <files mask="fsl_i2c_freertos.h"/>
      </source>
    </component>
    <component id="platform.drivers.iomuxc.MIMX8MM4" name="iomuxc" brief="IOMUXC Driver" version="2.0.0" full_name="IOMUXC Driver" devices="MIMX8MM4xxxKZ" device_cores="cm4_MIMX8MM4xxxKZ" user_visible="true" type="driver">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MM4"/>
      </dependencies>
      <source path="devices/MIMX8MM4/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_iomuxc.h"/>
      </source>
    </component>
    <component id="platform.drivers.ipwm.MIMX8MM4" name="ipwm" brief="PWM Driver" version="2.0.1" full_name="PWM Driver" devices="MIMX8MM4xxxKZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MM4/drivers" target_path="drivers" type="src">
        <files mask="fsl_pwm.c"/>
      </source>
      <source path="devices/MIMX8MM4/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_pwm.h"/>
      </source>
    </component>
    <component id="platform.drivers.iuart.MIMX8MM4" name="iuart" brief="IUART Driver" version="2.0.2" full_name="IUART Driver" devices="MIMX8MM4xxxKZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MM4/drivers" target_path="drivers" type="src">
        <files mask="fsl_uart.c"/>
      </source>
      <source path="devices/MIMX8MM4/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_uart.h"/>
      </source>
    </component>
    <component id="platform.drivers.iuart_freertos.MIMX8MM4" name="iuart_freertos" brief="IUART Freertos Driver" version="2.0.2" full_name="IUART Freertos Driver" devices="MIMX8MM4xxxKZ" user_visible="true" type="driver">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.iuart.MIMX8MM4"/>
          <component_dependency value="middleware.amazon_freertos-kernel.MIMX8MM4"/>
        </all>
      </dependencies>
      <source path="devices/MIMX8MM4/drivers" target_path="drivers/freertos" type="src">
        <files mask="fsl_uart_freertos.c"/>
      </source>
      <source path="devices/MIMX8MM4/drivers" target_path="drivers/freertos" type="c_include">
        <files mask="fsl_uart_freertos.h"/>
      </source>
    </component>
    <component id="platform.drivers.iuart_sdma.MIMX8MM4" name="iuart_sdma" brief="IUART SDMA Driver" version="2.0.2" full_name="IUART SDMA Driver" devices="MIMX8MM4xxxKZ" device_cores="cm4_MIMX8MM4xxxKZ" user_visible="true" type="driver">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.iuart.MIMX8MM4"/>
          <component_dependency value="platform.drivers.sdma.MIMX8MM4"/>
        </all>
      </dependencies>
      <source path="devices/MIMX8MM4/drivers" target_path="drivers" type="src">
        <files mask="fsl_uart_sdma.c"/>
      </source>
      <source path="devices/MIMX8MM4/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_uart_sdma.h"/>
      </source>
    </component>
    <component id="platform.drivers.memory.MIMX8MM4" name="memory" brief="MEMORY Driver" version="2.0.0" full_name="Memory Driver" devices="MIMX8MM4xxxKZ" device_cores="cm4_MIMX8MM4xxxKZ" user_visible="true" type="driver">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MM4"/>
      </dependencies>
      <source path="devices/MIMX8MM4/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_memory.h"/>
      </source>
    </component>
    <component id="platform.drivers.mu.MIMX8MM4" name="mu" brief="MU Driver" version="2.0.5" full_name="MU Driver" devices="MIMX8MM4xxxKZ" device_cores="cm4_MIMX8MM4xxxKZ" user_visible="true" type="driver">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MM4"/>
      </dependencies>
      <source path="devices/MIMX8MM4/drivers" target_path="drivers" type="src">
        <files mask="fsl_mu.c"/>
      </source>
      <source path="devices/MIMX8MM4/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_mu.h"/>
      </source>
    </component>
    <component id="platform.drivers.pdm.MIMX8MM4" name="pdm" brief="PDM Driver" version="2.2.1" full_name="PDM Driver" devices="MIMX8MM4xxxKZ" device_cores="cm4_MIMX8MM4xxxKZ" user_visible="true" type="driver">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MM4"/>
      </dependencies>
      <source path="devices/MIMX8MM4/drivers" target_path="drivers" type="src">
        <files mask="fsl_pdm.c"/>
      </source>
      <source path="devices/MIMX8MM4/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_pdm.h"/>
      </source>
    </component>
    <component id="platform.drivers.pdm_sdma.MIMX8MM4" name="pdm_sdma" brief="PDM SDMA Driver" version="2.1.2" full_name="PDM SDMA Driver" devices="MIMX8MM4xxxKZ" device_cores="cm4_MIMX8MM4xxxKZ" user_visible="true" type="driver">
      <dependencies>
        <component_dependency value="platform.drivers.pdm.MIMX8MM4"/>
      </dependencies>
      <source path="devices/MIMX8MM4/drivers" target_path="drivers" type="src">
        <files mask="fsl_pdm_sdma.c"/>
      </source>
      <source path="devices/MIMX8MM4/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_pdm_sdma.h"/>
      </source>
    </component>
    <component id="platform.drivers.rdc.MIMX8MM4" name="rdc" brief="RDC Driver" version="2.0.2" full_name="RDC Driver" devices="MIMX8MM4xxxKZ" device_cores="cm4_MIMX8MM4xxxKZ" user_visible="true" type="driver">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MM4"/>
      </dependencies>
      <source path="devices/MIMX8MM4/drivers" target_path="drivers" type="src">
        <files mask="fsl_rdc.c"/>
      </source>
      <source path="devices/MIMX8MM4/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_rdc.h"/>
      </source>
    </component>
    <component id="platform.drivers.rdc_sema42.MIMX8MM4" name="rdc_sema42" brief="RDC SEMA42 Driver" version="2.0.2" full_name="RDC SEMA42 Driver" devices="MIMX8MM4xxxKZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MM4/drivers" target_path="drivers" type="src">
        <files mask="fsl_rdc_sema42.c"/>
      </source>
      <source path="devices/MIMX8MM4/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_rdc_sema42.h"/>
      </source>
    </component>
    <component id="platform.drivers.sai.MIMX8MM4" name="sai" brief="SAI Driver" version="2.2.2" full_name="SAI Driver" devices="MIMX8MM4xxxKZ" device_cores="cm4_MIMX8MM4xxxKZ" user_visible="true" type="driver">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MM4"/>
      </dependencies>
      <source path="devices/MIMX8MM4/drivers" target_path="drivers" type="src">
        <files mask="fsl_sai.c"/>
      </source>
      <source path="devices/MIMX8MM4/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_sai.h"/>
      </source>
    </component>
    <component id="platform.drivers.sai_sdma.MIMX8MM4" name="sai_sdma" brief="SAI SDMA Driver" version="2.2.0" full_name="SAI SDMA Driver" devices="MIMX8MM4xxxKZ" device_cores="cm4_MIMX8MM4xxxKZ" user_visible="true" type="driver">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.sai.MIMX8MM4"/>
          <component_dependency value="platform.drivers.sdma.MIMX8MM4"/>
        </all>
      </dependencies>
      <source path="devices/MIMX8MM4/drivers" target_path="drivers" type="src">
        <files mask="fsl_sai_sdma.c"/>
      </source>
      <source path="devices/MIMX8MM4/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_sai_sdma.h"/>
      </source>
    </component>
    <component id="platform.drivers.sdma.MIMX8MM4" name="sdma" brief="SDMA Driver" version="2.3.0" full_name="SDMA Driver" devices="MIMX8MM4xxxKZ" device_cores="cm4_MIMX8MM4xxxKZ" user_visible="true" type="driver">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MM4"/>
      </dependencies>
      <source path="devices/MIMX8MM4/drivers" target_path="drivers" type="src">
        <files mask="fsl_sdma.c"/>
      </source>
      <source path="devices/MIMX8MM4/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_sdma.h"/>
        <files mask="fsl_sdma_script.h"/>
      </source>
    </component>
    <component id="platform.drivers.sema4.MIMX8MM4" name="sema4" brief="SEMA4 Driver" version="2.0.1" full_name="SEMA4 Driver" devices="MIMX8MM4xxxKZ" device_cores="cm4_MIMX8MM4xxxKZ" user_visible="true" type="driver">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MM4"/>
      </dependencies>
      <source path="devices/MIMX8MM4/drivers" target_path="drivers" type="src">
        <files mask="fsl_sema4.c"/>
      </source>
      <source path="devices/MIMX8MM4/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_sema4.h"/>
      </source>
    </component>
    <component id="platform.drivers.tmu_1.MIMX8MM4" name="tmu" brief="TMU Driver" version="2.0.1" full_name="TMU Driver" devices="MIMX8MM4xxxKZ" device_cores="cm4_MIMX8MM4xxxKZ" user_visible="true" type="driver">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MM4"/>
      </dependencies>
      <source path="devices/MIMX8MM4/drivers" target_path="drivers" type="src">
        <files mask="fsl_tmu.c"/>
      </source>
      <source path="devices/MIMX8MM4/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_tmu.h"/>
      </source>
    </component>
    <component id="platform.drivers.wdog01.MIMX8MM4" name="wdog" brief="wdog01 Driver" version="2.1.1" full_name="wdog01 Driver" devices="MIMX8MM4xxxKZ" device_cores="cm4_MIMX8MM4xxxKZ" user_visible="true" type="driver">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMX8MM4"/>
      </dependencies>
      <source path="devices/MIMX8MM4/drivers" target_path="drivers" type="src">
        <files mask="fsl_wdog.c"/>
      </source>
      <source path="devices/MIMX8MM4/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_wdog.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos-kernel.MIMX8MM4" name="Amazon FreeRTOS kernel" brief="Amazon FreeRTOS kernel" version="201908.00.0" full_name="Amazon FreeRTOS kernel" devices="MIMX8MM4xxxKZ" user_visible="true" type="OS">
      <defines>
        <define name="FSL_RTOS_FREE_RTOS" value=""/>
        <define name="SDK_OS_FREE_RTOS" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.amazon_freertos-kernel.extension.MIMX8MM4"/>
          <component_dependency value="middleware.amazon_freertos-kernel.template.MIMX8MM4"/>
        </all>
      </dependencies>
      <source path="rtos/amazon-freertos/freertos_kernel" target_path="amazon-freertos/freertos_kernel" type="src">
        <files mask="event_groups.c"/>
        <files mask="list.c"/>
        <files mask="queue.c"/>
        <files mask="stream_buffer.c"/>
        <files mask="tasks.c"/>
        <files mask="timers.c"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/include" target_path="amazon-freertos/freertos_kernel/include" type="c_include">
        <files mask="FreeRTOS.h"/>
        <files mask="atomic.h"/>
        <files mask="deprecated_definitions.h"/>
        <files mask="event_groups.h"/>
        <files mask="list.h"/>
        <files mask="message_buffer.h"/>
        <files mask="mpu_prototypes.h"/>
        <files mask="mpu_wrappers.h"/>
        <files mask="portable.h"/>
        <files mask="projdefs.h"/>
        <files mask="queue.h"/>
        <files mask="semphr.h"/>
        <files mask="stack_macros.h"/>
        <files mask="stream_buffer.h"/>
        <files mask="task.h"/>
        <files mask="timers.h"/>
      </source>
      <source toolchain="armgcc" compiler="compiler_gcc" path="rtos/amazon-freertos/freertos_kernel/portable/GCC/ARM_CM4F" target_path="amazon-freertos/freertos_kernel/portable/GCC/ARM_CM4F" type="src" device_cores="cm4_MIMX8MM4xxxKZ">
        <files mask="port.c"/>
      </source>
      <source toolchain="armgcc" compiler="compiler_gcc" path="rtos/amazon-freertos/freertos_kernel/portable/GCC/ARM_CM4F" target_path="amazon-freertos/freertos_kernel/portable/GCC/ARM_CM4F" type="c_include" device_cores="cm4_MIMX8MM4xxxKZ">
        <files mask="portmacro.h"/>
      </source>
      <source toolchain="iar" path="rtos/amazon-freertos/freertos_kernel/portable/IAR/ARM_CM4F" target_path="amazon-freertos/freertos_kernel/portable/IAR/ARM_CM4F" type="src" device_cores="cm4_MIMX8MM4xxxKZ">
        <files mask="port.c"/>
      </source>
      <source toolchain="iar" path="rtos/amazon-freertos/freertos_kernel/portable/IAR/ARM_CM4F" target_path="amazon-freertos/freertos_kernel/portable/IAR/ARM_CM4F" type="asm_include" device_cores="cm4_MIMX8MM4xxxKZ">
        <files mask="portasm.s"/>
      </source>
      <source toolchain="iar" path="rtos/amazon-freertos/freertos_kernel/portable/IAR/ARM_CM4F" target_path="amazon-freertos/freertos_kernel/portable/IAR/ARM_CM4F" type="c_include" device_cores="cm4_MIMX8MM4xxxKZ">
        <files mask="portmacro.h"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/MemMang" target_path="amazon-freertos/freertos_kernel/portable/MemMang" type="other">
        <files mask="ReadMe.url"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable" target_path="amazon-freertos/freertos_kernel/portable" type="doc">
        <files mask="readme.txt"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos-kernel.armv8m.MIMX8MM4" name="Amazon FreeRTOS port ARMv8M" brief="Amazon FreeRTOS port ARMv8M" version="201908.00.0" full_name="Amazon FreeRTOS port ARMv8M" devices="MIMX8MM4xxxKZ" category="Operating System/Amazon FreeRTOS kernel" user_visible="false" type="other">
      <dependencies>
        <component_dependency value="middleware.amazon_freertos-kernel.MIMX8MM4"/>
      </dependencies>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/ARMv8M" target_path="amazon-freertos/freertos_kernel/portable/ARMv8M" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/ARMv8M" target_path="amazon-freertos/freertos_kernel/portable/ARMv8M" type="script">
        <files mask="copy_files.py"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/ARMv8M/non_secure" target_path="amazon-freertos/freertos_kernel/portable/ARMv8M/non_secure" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/ARMv8M/non_secure" target_path="amazon-freertos/freertos_kernel/portable/ARMv8M/non_secure" type="src">
        <files mask="port.c"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/ARMv8M/non_secure/portable/GCC/ARM_CM33" target_path="amazon-freertos/freertos_kernel/portable/ARMv8M/non_secure/portable/GCC/ARM_CM33" type="src">
        <files mask="portasm.c"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/ARMv8M/non_secure/portable/GCC/ARM_CM33" target_path="amazon-freertos/freertos_kernel/portable/ARMv8M/non_secure/portable/GCC/ARM_CM33" type="c_include">
        <files mask="portmacro.h"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/ARMv8M/non_secure/portable/GCC/ARM_CM33_NTZ" target_path="amazon-freertos/freertos_kernel/portable/ARMv8M/non_secure/portable/GCC/ARM_CM33_NTZ" type="src">
        <files mask="portasm.c"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/ARMv8M/non_secure/portable/GCC/ARM_CM33_NTZ" target_path="amazon-freertos/freertos_kernel/portable/ARMv8M/non_secure/portable/GCC/ARM_CM33_NTZ" type="c_include">
        <files mask="portmacro.h"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/ARMv8M/non_secure/portable/IAR/ARM_CM33" target_path="amazon-freertos/freertos_kernel/portable/ARMv8M/non_secure/portable/IAR/ARM_CM33" type="asm_include">
        <files mask="portasm.s"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/ARMv8M/non_secure/portable/IAR/ARM_CM33" target_path="amazon-freertos/freertos_kernel/portable/ARMv8M/non_secure/portable/IAR/ARM_CM33" type="c_include">
        <files mask="portmacro.h"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/ARMv8M/non_secure/portable/IAR/ARM_CM33_NTZ" target_path="amazon-freertos/freertos_kernel/portable/ARMv8M/non_secure/portable/IAR/ARM_CM33_NTZ" type="asm_include">
        <files mask="portasm.s"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/ARMv8M/non_secure/portable/IAR/ARM_CM33_NTZ" target_path="amazon-freertos/freertos_kernel/portable/ARMv8M/non_secure/portable/IAR/ARM_CM33_NTZ" type="c_include">
        <files mask="portmacro.h"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/ARMv8M/non_secure" target_path="amazon-freertos/freertos_kernel/portable/ARMv8M/non_secure" type="c_include">
        <files mask="portasm.h"/>
        <files mask="portmacro.h"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/ARMv8M/secure" target_path="amazon-freertos/freertos_kernel/portable/ARMv8M/secure" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/ARMv8M/secure/context/portable/GCC/ARM_CM33" target_path="amazon-freertos/freertos_kernel/portable/ARMv8M/secure/context/portable/GCC/ARM_CM33" type="src">
        <files mask="secure_context_port.c"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/ARMv8M/secure/context/portable/IAR/ARM_CM33" target_path="amazon-freertos/freertos_kernel/portable/ARMv8M/secure/context/portable/IAR/ARM_CM33" type="src">
        <files mask="secure_context_port.c"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/ARMv8M/secure/context/portable/IAR/ARM_CM33" target_path="amazon-freertos/freertos_kernel/portable/ARMv8M/secure/context/portable/IAR/ARM_CM33" type="asm_include">
        <files mask="secure_context_port_asm.s"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/ARMv8M/secure/context" target_path="amazon-freertos/freertos_kernel/portable/ARMv8M/secure/context" type="src">
        <files mask="secure_context.c"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/ARMv8M/secure/context" target_path="amazon-freertos/freertos_kernel/portable/ARMv8M/secure/context" type="c_include">
        <files mask="secure_context.h"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/ARMv8M/secure/heap" target_path="amazon-freertos/freertos_kernel/portable/ARMv8M/secure/heap" type="src">
        <files mask="secure_heap.c"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/ARMv8M/secure/heap" target_path="amazon-freertos/freertos_kernel/portable/ARMv8M/secure/heap" type="c_include">
        <files mask="secure_heap.h"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/ARMv8M/secure/init" target_path="amazon-freertos/freertos_kernel/portable/ARMv8M/secure/init" type="src">
        <files mask="secure_init.c"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/ARMv8M/secure/init" target_path="amazon-freertos/freertos_kernel/portable/ARMv8M/secure/init" type="c_include">
        <files mask="secure_init.h"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/ARMv8M/secure/macros" target_path="amazon-freertos/freertos_kernel/portable/ARMv8M/secure/macros" type="c_include">
        <files mask="secure_port_macros.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos-kernel.cm33_nonsecure_port_no_trustzone.MIMX8MM4" name="cm33_nonsecure_port_no_trustzone" brief="Amazon FreeRTOS cm33 nonsecure port" version="201908.00.0" full_name="Amazon FreeRTOS cm33 nonsecure port" devices="MIMX8MM4xxxKZ" category="Operating System/Amazon FreeRTOS kernel" user_visible="true" type="middleware">
      <dependencies>
        <component_dependency value="middleware.amazon_freertos-kernel.MIMX8MM4"/>
      </dependencies>
    </component>
    <component id="middleware.amazon_freertos-kernel.doc.MIMX8MM4" name="Amazon FreeRTOS doc" brief="Amazon FreeRTOS doc" version="201908.00.0" full_name="Amazon FreeRTOS doc" devices="MIMX8MM4xxxKZ" category="Operating System/Amazon FreeRTOS kernel" user_visible="false" type="other">
      <dependencies>
        <component_dependency value="middleware.amazon_freertos-kernel.MIMX8MM4"/>
      </dependencies>
      <source path="rtos/amazon-freertos/doc" target_path="amazon-freertos/doc" type="doc">
        <files mask="AFQ Developer Guide - Board Qualification Errata.pdf"/>
        <files mask="Amazon FreeRTOS Qualification Developer Guide.pdf"/>
      </source>
      <source path="rtos/amazon-freertos/doc" target_path="amazon-freertos/doc" type="other">
        <files mask="README.md"/>
        <files mask="guidance.md"/>
      </source>
      <source path="rtos/amazon-freertos/doc/config" target_path="amazon-freertos/doc/config" type="other">
        <files mask="atomic"/>
        <files mask="ble"/>
        <files mask="common"/>
        <files mask="defender"/>
        <files mask="https"/>
        <files mask="linear_containers"/>
        <files mask="logging"/>
        <files mask="main"/>
        <files mask="mqtt"/>
        <files mask="platform"/>
        <files mask="secure_sockets"/>
        <files mask="shadow"/>
        <files mask="static_memory"/>
        <files mask="taskpool"/>
        <files mask="wifi"/>
      </source>
      <source path="rtos/amazon-freertos/doc/config/html" target_path="amazon-freertos/doc/config/html" type="doc">
        <files mask="footer.html"/>
        <files mask="header.html"/>
        <files mask="style.css"/>
      </source>
      <source path="rtos/amazon-freertos/doc/config" target_path="amazon-freertos/doc/config" type="xml">
        <files mask="layout_library.xml"/>
        <files mask="layout_main.xml"/>
      </source>
      <source path="rtos/amazon-freertos/doc/extra_files/https" target_path="amazon-freertos/doc/extra_files/https" type="doc">
        <files mask="gettysburg.txt"/>
      </source>
      <source path="rtos/amazon-freertos/doc/freertos_port_qual" target_path="amazon-freertos/doc/freertos_port_qual" type="doc">
        <files mask="aFreeRTOS_Porting_Guide.pdf"/>
        <files mask="aFreeRTOS_Qualification_Guide.pdf"/>
      </source>
      <source path="rtos/amazon-freertos/doc/guide" target_path="amazon-freertos/doc/guide" type="doc">
        <files mask="building.txt"/>
        <files mask="developer.txt"/>
        <files mask="style.txt"/>
      </source>
      <source path="rtos/amazon-freertos/doc/lib" target_path="amazon-freertos/doc/lib" type="doc">
        <files mask="atomic.txt"/>
        <files mask="ble.txt"/>
        <files mask="https.txt"/>
        <files mask="linear_containers.txt"/>
        <files mask="logging.txt"/>
        <files mask="mqtt.txt"/>
        <files mask="platform.txt"/>
        <files mask="secure_sockets.txt"/>
        <files mask="shadow.txt"/>
        <files mask="static_memory.txt"/>
        <files mask="taskpool.txt"/>
        <files mask="wifi.txt"/>
      </source>
      <source path="rtos/amazon-freertos/doc/plantuml" target_path="amazon-freertos/doc/plantuml" type="other">
        <files mask="RecyclableJobStatus.pu"/>
        <files mask="StaticJobStatus.pu"/>
        <files mask="https_client_async_callback_order.pu"/>
        <files mask="mqtt_demo.pu"/>
        <files mask="mqtt_design_typicaloperation.pu"/>
        <files mask="taskpool_design_typicaloperation.pu"/>
      </source>
      <source path="rtos/amazon-freertos/doc/plantuml" target_path="amazon-freertos/doc/plantuml" type="xml">
        <files mask="https_client_async_workflow.xml"/>
        <files mask="https_client_sync_workflow.xml"/>
      </source>
      <source path="rtos/amazon-freertos/doc/plantuml/images" target_path="amazon-freertos/doc/plantuml/images" type="image">
        <files mask="BLE-architecture.png"/>
        <files mask="RecyclableJobStatus.png"/>
        <files mask="StaticJobStatus.png"/>
        <files mask="blediagram.png"/>
        <files mask="https_client_async_callback_order.png"/>
        <files mask="https_client_async_workflow.png"/>
        <files mask="https_client_sync_workflow.png"/>
        <files mask="mqtt_demo.png"/>
        <files mask="mqtt_design_typicaloperation.png"/>
        <files mask="taskpool_design_typicaloperation.png"/>
      </source>
      <source path="rtos/amazon-freertos/doc/tag" target_path="amazon-freertos/doc/tag" type="other">
        <files mask="README.md"/>
      </source>
      <source path="rtos/amazon-freertos/doc/user_guide" target_path="amazon-freertos/doc/user_guide" type="doc">
        <files mask="global_config.txt"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos-kernel.extension.MIMX8MM4" name="Amazon FreeRTOS NXP extension" brief="Amazon FreeRTOS NXP extension" version="201908.00.0" full_name="Amazon FreeRTOS NXP extension" devices="MIMX8MM4xxxKZ" category="Operating System/Amazon FreeRTOS kernel extensions" user_visible="false" type="other">
      <source path="rtos/amazon-freertos/freertos_kernel/include" target_path="amazon-freertos/freertos_kernel/include" type="c_include">
        <files mask="freertos_tasks_c_additions.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos-kernel.heap_1.MIMX8MM4" name="Amazon FreeRTOS heap 1" brief="Amazon FreeRTOS heap 1" version="201908.00.0" full_name="Amazon FreeRTOS heap 1" devices="MIMX8MM4xxxKZ" category="Operating System/Amazon FreeRTOS kernel" user_visible="false" type="other">
      <dependencies>
        <component_dependency value="middleware.amazon_freertos-kernel.MIMX8MM4"/>
      </dependencies>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/MemMang" target_path="amazon-freertos/freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_1.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos-kernel.heap_2.MIMX8MM4" name="Amazon FreeRTOS heap 2" brief="Amazon FreeRTOS heap 2" version="201908.00.0" full_name="Amazon FreeRTOS heap 2" devices="MIMX8MM4xxxKZ" category="Operating System/Amazon FreeRTOS kernel" user_visible="false" type="other">
      <dependencies>
        <component_dependency value="middleware.amazon_freertos-kernel.MIMX8MM4"/>
      </dependencies>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/MemMang" target_path="amazon-freertos/freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_2.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos-kernel.heap_3.MIMX8MM4" name="Amazon FreeRTOS heap 3" brief="Amazon FreeRTOS heap 3" version="201908.00.0" full_name="Amazon FreeRTOS heap_3" devices="MIMX8MM4xxxKZ" category="Operating System/Amazon FreeRTOS kernel" user_visible="false" type="other">
      <dependencies>
        <component_dependency value="middleware.amazon_freertos-kernel.MIMX8MM4"/>
      </dependencies>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/MemMang" target_path="amazon-freertos/freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_3.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos-kernel.heap_4.MIMX8MM4" name="Amazon FreeRTOS heap 4" brief="Amazon FreeRTOS heap 4" version="201908.00.0" full_name="Amazon FreeRTOS heap 4" devices="MIMX8MM4xxxKZ" category="Operating System/Amazon FreeRTOS kernel" user_visible="false" type="other">
      <dependencies>
        <component_dependency value="middleware.amazon_freertos-kernel.MIMX8MM4"/>
      </dependencies>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/MemMang" target_path="amazon-freertos/freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_4.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos-kernel.heap_5.MIMX8MM4" name="Amazon FreeRTOS heap 5" brief="Amazon FreeRTOS heap 5" version="201908.00.0" full_name="Amazon FreeRTOS heap 5" devices="MIMX8MM4xxxKZ" category="Operating System/Amazon FreeRTOS kernel" user_visible="false" type="other">
      <dependencies>
        <component_dependency value="middleware.amazon_freertos-kernel.MIMX8MM4"/>
      </dependencies>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/MemMang" target_path="amazon-freertos/freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_5.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos-kernel.heap_newlib.MIMX8MM4" name="FreeRTOS heap newlib" brief="Amazon FreeRTOS heap newlib" version="201908.00.0" full_name="Amazon FreeRTOS heap newlib" devices="MIMX8MM4xxxKZ" category="Operating System/Amazon FreeRTOS kernel extensions" user_visible="false" type="other">
      <dependencies>
        <component_dependency value="middleware.amazon_freertos-kernel.MIMX8MM4"/>
      </dependencies>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/MemMang" target_path="amazon-freertos/freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_useNewlib.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos-kernel.mpu_wrappers.MIMX8MM4" name="Amazon FreeRTOS MPU wrappers" brief="Amazon FreeRTOS MPU wrappers" version="201908.00.0" full_name="Amazon FreeRTOS MPU wrappers" devices="MIMX8MM4xxxKZ" category="Operating System/Amazon FreeRTOS kernel" user_visible="false" type="other">
      <dependencies>
        <component_dependency value="middleware.amazon_freertos-kernel.MIMX8MM4"/>
      </dependencies>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/Common" target_path="amazon-freertos/freertos_kernel/portable/Common" type="src">
        <files mask="mpu_wrappers.c"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos-kernel.root_doc.MIMX8MM4" name="Root Amazon FreeRTOS documents." brief="Amazon FreeRTOS root documents" version="201908.00.0" full_name="Amazon FreeRTOS root documents" devices="MIMX8MM4xxxKZ" category="Operating System/Amazon FreeRTOS kernel" user_visible="false" type="other">
      <dependencies>
        <component_dependency value="middleware.amazon_freertos-kernel.MIMX8MM4"/>
      </dependencies>
      <source path="rtos/amazon-freertos" target_path="amazon-freertos" type="other">
        <files mask="CHANGELOG.md"/>
        <files mask="CODE_OF_CONDUCT.md"/>
        <files mask="CONTRIBUTING.md"/>
        <files mask="checksums.json"/>
      </source>
      <source path="rtos/amazon-freertos" target_path="amazon-freertos" type="doc">
        <files mask="CMakeLists.txt"/>
        <files mask="ChangeLogKSDK.txt"/>
        <files mask="directories.txt"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos-kernel.template.MIMX8MM4" name="Amazon FreeRTOS configuration template" brief="Template configuration file to be edited by user. Provides also memory allocator (heap_x), change variant if needed." version="201908.00.0" full_name="Amazon FreeRTOS configuration template" devices="MIMX8MM4xxxKZ" category="Operating System/Amazon FreeRTOS kernel" user_visible="false" type="project_template">
      <source exclude="true" path="rtos/amazon-freertos/freertos_kernel/portable/MemMang" target_path="amazon-freertos/freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_1.c"/>
        <files mask="heap_2.c"/>
        <files mask="heap_3.c"/>
        <files mask="heap_5.c"/>
        <files mask="heap_useNewlib.c"/>
      </source>
      <source path="rtos/amazon-freertos/freertos_kernel/portable/MemMang" target_path="amazon-freertos/freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_4.c"/>
      </source>
      <source path="rtos/amazon-freertos/template/ARM_CM4F" target_path="source" type="c_include" device_cores="cm4_MIMX8MM4xxxKZ">
        <files mask="FreeRTOSConfig.h"/>
      </source>
    </component>
    <component id="middleware.amazon_freertos-kernel.unused.MIMX8MM4" name="Amazon FreeRTOS unused" brief="Amazon FreeRTOS unused" version="201908.00.0" full_name="Amazon FreeRTOS unused" devices="MIMX8MM4xxxKZ" category="Operating System/Amazon FreeRTOS kernel" user_visible="false" type="other">
      <source path="rtos/amazon-freertos" target_path="amazon-freertos" type="other">
        <files mask="LICENSE"/>
        <files mask="README.md"/>
      </source>
      <source path="rtos/amazon-freertos" target_path="amazon-freertos" type="script">
        <files mask="PreLoad.cmake"/>
      </source>
    </component>
    <component id="middleware.baremetal.MIMX8MM4" name="baremetal" version="1.0.0" full_name="Baremetal" devices="MIMX8MM4xxxKZ" user_visible="true" type="OS">
      <defines>
        <define name="FSL_RTOS_BM" value=""/>
        <define name="SDK_OS_BAREMETAL" value=""/>
      </defines>
    </component>
    <component id="middleware.usb.device_config_template.MIMX8MM4" name="USB device config template" brief="USB device config template" version="2.5.0" full_name="USB device config template" devices="MIMX8MM4xxxKZ" category="Board Support/SDK Project Template" user_visible="false" type="project_template">
      <source path="middleware/usb/templates/config" target_path="source/generated" type="c_include">
        <files mask="usb_device_config.h"/>
      </source>
    </component>
    <component id="platform.utilities.misc_utilities.MIMX8MM4" name="misc_utilities" brief="Utilities which is needed for particular toolchain like the SBRK function required to address limitation between HEAP and STACK in GCC toolchain library." version="1.0.0" devices="MIMX8MM4xxxKZ" user_visible="true" type="utilities">
      <source toolchain="armgcc" path="devices/MIMX8MM4/utilities" target_path="utilities" type="src">
        <files mask="fsl_sbrk.c"/>
      </source>
    </component>
    <component id="platform.utilities.assert.MIMX8MM4" name="assert" version="1.0.0" devices="MIMX8MM4xxxKZ" device_cores="cm4_MIMX8MM4xxxKZ" user_visible="true" type="utilities">
      <dependencies>
        <component_dependency value="utility.debug_console.MIMX8MM4"/>
      </dependencies>
      <source path="devices/MIMX8MM4/utilities" target_path="utilities" type="src">
        <files mask="fsl_assert.c"/>
      </source>
    </component>
    <component id="utility.debug_console.MIMX8MM4" name="debug_console" version="1.0.0" devices="MIMX8MM4xxxKZ" device_cores="cm4_MIMX8MM4xxxKZ" user_visible="true" type="utilities">
      <dependencies>
        <all>
          <component_dependency value="component.serial_manager.MIMX8MM4"/>
          <component_dependency value="platform.drivers.common.MIMX8MM4"/>
        </all>
      </dependencies>
      <source path="devices/MIMX8MM4/utilities/debug_console" target_path="utilities" type="src">
        <files mask="fsl_debug_console.c"/>
      </source>
      <source path="devices/MIMX8MM4/utilities/debug_console" target_path="utilities" type="c_include">
        <files mask="fsl_debug_console.h"/>
        <files mask="fsl_debug_console_conf.h"/>
      </source>
      <source path="devices/MIMX8MM4/utilities/str" target_path="utilities" type="src">
        <files mask="fsl_str.c"/>
      </source>
      <source path="devices/MIMX8MM4/utilities/str" target_path="utilities" type="c_include">
        <files mask="fsl_str.h"/>
      </source>
    </component>
  </components>
</ksdk:manifest>
