<?xml version="1.0" encoding="UTF-8"?>
<ksdk:manifest xmlns:ksdk="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="SDK_2.x_MIMX8MN5xxxJZ" name="MIMX8MN5xxxJZ" brief="This is SDK version 2.6.1 manifest file. It describes the content of the MIMX8MN5xxxJZ and additional settings for tools that support SDK version 2.6.1" format_version="3.4" api_version="2.0.0" configuration="01cab7a3f0ef884b07fc3aeff6f9975b" xsi:schemaLocation="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd http://nxp.com/mcuxpresso/sdk/sdk_manifest_v3.4.xsd">
  <!--Timestamp (UTC): 2019-12-03 11:10:54.231701-->
  <defines>
    <define name="CPU_$|package|" value=""/>
    <define name="CPU_$|package|_$|core|" value=""/>
  </defines>
  <externalDefinitions>
    <definition extID="com.crt.advproject.config.exe.debug"/>
    <definition extID="com.crt.advproject.config.exe.release"/>
    <definition extID="QSPI_FLASH_MIMX8MN6xxxJZ"/>
    <definition extID="QSPI_FLASH_MIMX8MN5xxxJZ"/>
  </externalDefinitions>
  <ksdk id="MCUXpresso261" name="MCUXpresso261" version="2.6.1" revision="279 2019-10-31"/>
  <compilers>
    <compiler id="compiler_gcc" name="gcc" type="gcc"/>
    <compiler id="compiler_iar" name="iar" type="iar"/>
  </compilers>
  <toolchainSettings/>
  <toolchains>
    <toolchain id="armgcc" name="GCC_ARM_Embedded" version="8.2.1" full_name="GCC ARM Embedded" compiler="compiler_gcc" type="armgcc" vendor="GCC ARM Embedded" vendor_url="http://launchpad.net/gcc-arm-embedded"/>
    <toolchain id="iar" name="IAR_Embedded_Workbench_for_ARM" version="8.32.3" full_name="IAR Embedded Workbench for ARM" compiler="compiler_iar" type="iar" vendor="IAR Systems" vendor_url="http://www.iar.com"/>
  </toolchains>
  <boards>
    <board id="evkmimx8mn" name="EVK-MIMX8MN" href="http://www.nxp.com/iMX8M" version="1.0.0" package="MIMX8MN6DVTJZ">
      <description>The evkmimx8mn is an development platform for MIMX8MN1, MIMX8MN2, MIMX8MN3, MIMX8MN4, MIMX8MN5, MIMX8MN6 MCUs</description>
      <image path="docs/images" type="image">
        <files mask="EVK-MIMX8MN.gif"/>
      </image>
      <metadataSet>
        <metadata key="vendor" value="NXP"/>
        <metadata key="html">
          <specific>
            <content>The i.MX 8M Nano family of boards provides a powerful and flexible development system for NXPÂ®'s Cortex-M7 MCUs.</content>
          </specific>
        </metadata>
      </metadataSet>
      <examples>
        <example id="evkmimx8mn_cmsis_ecspi_int_loopback_transfer" name="cmsis_ecspi_int_loopback_transfer" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_ecspi_int_loopback_transfer example shows how to use CMSIS ECSPI driver in interrupt way: In this example , ECSPI will do a loopback transfer in interrupt way, so, there is no need to set up any pins.And we should set the ECSPIx-&gt;TESTREG[LBC] bit, this bit is used in Master mode only. When this bit is set, the ECSPI connects the transmitter and receiver sections internally, and the data shifted out from the most-significant bit of the shift register is looped back into the least-significant bit of the Shift register.In this way, a self-test of the complete transmit/receive path can be made. The output pins are not affected, and the input pins are ignored." toolchain="armgcc iar" category="cmsis_driver_examples/ecspi" path="boards/evkmimx8mn/cmsis_driver_examples/ecspi/int_loopback_transfer">
          <external path="boards/evkmimx8mn/cmsis_driver_examples/ecspi/int_loopback_transfer" type="xml">
            <files mask="cmsis_ecspi_int_loopback_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimx8mn_cmsis_ecspi_sdma_loopback_transfer" name="cmsis_ecspi_sdma_loopback_transfer" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_ecspi_sdma_loopback_transfer example shows how to use CMSIS ECSPI driver in SDMA way: In this example , ECSPI will do a loopback transfer in SDMA way, so, there is no need to set up any pins.And we should set the ECSPIx-&gt;TESTREG[LBC] bit, this bit is used in Master mode only. When this bit is set, the ECSPI connects the transmitter and receiver sections internally, and the data shifted out from the most-significant bit of the shift register is looped back into the least-significant bit of the Shift register.In this way, a self-test of the complete transmit/receive path can be made. The output pins are not affected, and the input pins are ignored." toolchain="armgcc iar" category="cmsis_driver_examples/ecspi" path="boards/evkmimx8mn/cmsis_driver_examples/ecspi/sdma_loopback_transfer">
          <external path="boards/evkmimx8mn/cmsis_driver_examples/ecspi/sdma_loopback_transfer" type="xml">
            <files mask="cmsis_ecspi_sdma_loopback_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimx8mn_cmsis_ii2c_int_b2b_transfer_master" name="cmsis_ii2c_int_b2b_transfer_master" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The i2c_interrupt_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar" category="cmsis_driver_examples/i2c" path="boards/evkmimx8mn/cmsis_driver_examples/i2c/int_b2b_transfer/master">
          <external path="boards/evkmimx8mn/cmsis_driver_examples/i2c/int_b2b_transfer/master" type="xml">
            <files mask="cmsis_ii2c_int_b2b_transfer_master.xml"/>
          </external>
        </example>
        <example id="evkmimx8mn_cmsis_ii2c_int_b2b_transfer_slave" name="cmsis_ii2c_int_b2b_transfer_slave" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The i2c_interrupt_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar" category="cmsis_driver_examples/i2c" path="boards/evkmimx8mn/cmsis_driver_examples/i2c/int_b2b_transfer/slave">
          <external path="boards/evkmimx8mn/cmsis_driver_examples/i2c/int_b2b_transfer/slave" type="xml">
            <files mask="cmsis_ii2c_int_b2b_transfer_slave.xml"/>
          </external>
        </example>
        <example id="evkmimx8mn_cmsis_iuart_interrupt_transfer" name="cmsis_iuart_interrupt_transfer" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_interrupt_transfer example shows how to use uart cmsis driver in interrupt way:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar" category="cmsis_driver_examples/uart" path="boards/evkmimx8mn/cmsis_driver_examples/uart/interrupt_transfer">
          <external path="boards/evkmimx8mn/cmsis_driver_examples/uart/interrupt_transfer" type="xml">
            <files mask="cmsis_iuart_interrupt_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimx8mn_cmsis_iuart_sdma_transfer" name="cmsis_iuart_sdma_transfer" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_sdma_transfer example shows how to use uart cmsis driver with SDMA:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar" category="cmsis_driver_examples/uart" path="boards/evkmimx8mn/cmsis_driver_examples/uart/sdma_transfer">
          <external path="boards/evkmimx8mn/cmsis_driver_examples/uart/sdma_transfer" type="xml">
            <files mask="cmsis_iuart_sdma_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimx8mn_asrc_m2m_polling" name="asrc_m2m_polling" brief="The asrc_m2m_polling example shows how to use ASRC driver with polling:In this example, one ASRC instance convert audio data and store it in ram using polling." toolchain="armgcc iar" category="driver_examples/asrc" path="boards/evkmimx8mn/driver_examples/asrc/asrc_m2m_polling">
          <external path="boards/evkmimx8mn/driver_examples/asrc/asrc_m2m_polling" type="xml">
            <files mask="asrc_m2m_polling.xml"/>
          </external>
        </example>
        <example id="evkmimx8mn_asrc_m2m_sdma" name="asrc_m2m_sdma" brief="The asrc_m2m_sdma example shows how to use asrc driver with SDMA:In this example, one asrc instance convert the audio data stored in ram using SDMA channel." toolchain="armgcc iar" category="driver_examples/asrc" path="boards/evkmimx8mn/driver_examples/asrc/asrc_m2m_sdma">
          <external path="boards/evkmimx8mn/driver_examples/asrc/asrc_m2m_sdma" type="xml">
            <files mask="asrc_m2m_sdma.xml"/>
          </external>
        </example>
        <example id="evkmimx8mn_asrc_p2p_out_sdma" name="asrc_p2p_out_sdma" brief="The asrc_p2p_out_sdma example shows how to use asrc driver with SDMA :In this example, one asrc instance convert audio data and push to sai directly." toolchain="armgcc iar" category="driver_examples/asrc" path="boards/evkmimx8mn/driver_examples/asrc/asrc_p2p_out_sdma">
          <external path="boards/evkmimx8mn/driver_examples/asrc/asrc_p2p_out_sdma" type="xml">
            <files mask="asrc_p2p_out_sdma.xml"/>
          </external>
        </example>
        <example id="evkmimx8mn_ecspi_interrupt_b2b_transfer_master" name="ecspi_interrupt_b2b_transfer_master" brief="The ecspi_interrupt_b2b_transfer example shows how to use ECSPI driver in interrupt way:In this example , we need two boards, one board used as ECSPI master and another board used as ECSPI slave.The file 'ecspi_interrupt_b2b_transfer_master.c' includes the ECSPI master code.This example uses the transactional API in ECSPI driver.1. ECSPI master send/received data to/from ECSPI slave in interrupt . (ECSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar" category="driver_examples/ecspi" path="boards/evkmimx8mn/driver_examples/ecspi/interrupt_b2b_transfer/master">
          <external path="boards/evkmimx8mn/driver_examples/ecspi/interrupt_b2b_transfer/master" type="xml">
            <files mask="ecspi_interrupt_b2b_transfer_master.xml"/>
          </external>
        </example>
        <example id="evkmimx8mn_ecspi_interrupt_b2b_transfer_slave" name="ecspi_interrupt_b2b_transfer_slave" brief="The ecspi_interrupt_b2b_transfer example shows how to use ECSPI driver in interrupt way:In this example , we need two boards, one board used as ECSPI master and another board used as ECSPI slave.The file 'ecspi_interrupt_b2b_transfer_slave.c' includes the ECSPI slave code.This example uses the transactional API in ECSPI driver.1. ECSPI master send/received data to/from ECSPI slave in interrupt . (ECSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar" category="driver_examples/ecspi" path="boards/evkmimx8mn/driver_examples/ecspi/interrupt_b2b_transfer/slave">
          <external path="boards/evkmimx8mn/driver_examples/ecspi/interrupt_b2b_transfer/slave" type="xml">
            <files mask="ecspi_interrupt_b2b_transfer_slave.xml"/>
          </external>
        </example>
        <example id="evkmimx8mn_ecspi_loopback" name="ecspi_loopback" brief="The ecspi_loopback demo shows how the ecspi do a loopback transfer internally.The ECSPI connects the transmitter and receiver sections internally, and the data shifted out from the most-significant bit of the shift register is looped back into the least-significant bit of the Shift register. In this way, a self-test of the complete transmit/receive path can be made. The output pins are not affected, and the input pins are ignored." toolchain="armgcc iar" category="driver_examples/ecspi" path="boards/evkmimx8mn/driver_examples/ecspi/ecspi_loopback">
          <external path="boards/evkmimx8mn/driver_examples/ecspi/ecspi_loopback" type="xml">
            <files mask="ecspi_loopback.xml"/>
          </external>
        </example>
        <example id="evkmimx8mn_ecspi_polling_b2b_transfer_master" name="ecspi_polling_b2b_transfer_master" brief="The ecspi_polling_b2b_transfer example shows how to use ECSPI driver in polling way:In this example , we need two boards, one board used as ECSPI master and another board used as ECSPI slave.The file 'ecspi_polling_b2b_transfer_master.c' includes the ECSPI master code.1. ECSPI master send/received data to/from ECSPI slave in polling . (ECSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar" category="driver_examples/ecspi" path="boards/evkmimx8mn/driver_examples/ecspi/polling_b2b_transfer/master">
          <external path="boards/evkmimx8mn/driver_examples/ecspi/polling_b2b_transfer/master" type="xml">
            <files mask="ecspi_polling_b2b_transfer_master.xml"/>
          </external>
        </example>
        <example id="evkmimx8mn_ecspi_polling_b2b_transfer_slave" name="ecspi_polling_b2b_transfer_slave" brief="The ecspi_polling_b2b_transfer example shows how to use ECSPI driver in polling way:In this example , we need two boards, one board used as ECSPI master and another board used as ECSPI slave.The file 'ecspi_polling_b2b_transfer_slave.c' includes the ECSPI slave code.1. ECSPI master send/received data to/from ECSPI slave in polling . (ECSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar" category="driver_examples/ecspi" path="boards/evkmimx8mn/driver_examples/ecspi/polling_b2b_transfer/slave">
          <external path="boards/evkmimx8mn/driver_examples/ecspi/polling_b2b_transfer/slave" type="xml">
            <files mask="ecspi_polling_b2b_transfer_slave.xml"/>
          </external>
        </example>
        <example id="evkmimx8mn_gpt_capture" name="gpt_capture" brief="The gpt_capture project is a simple demonstration program of the SDK GPT driver's input capture feature.The example sets up a GPT channel for rise-edge capture. Once the input signal is received,this example will print the capture value." toolchain="armgcc iar" category="driver_examples/gpt" path="boards/evkmimx8mn/driver_examples/gpt/capture">
          <external path="boards/evkmimx8mn/driver_examples/gpt/capture" type="xml">
            <files mask="gpt_capture.xml"/>
          </external>
        </example>
        <example id="evkmimx8mn_gpt_timer" name="gpt_timer" brief="The gpt_timer project is a simple demonstration program of the SDK GPT driver. It sets up the GPThardware block to trigger a periodic interrupt after every 1 second. When the GPT interrupt is triggereda message a printed on the UART terminal." toolchain="armgcc iar" category="driver_examples/gpt" path="boards/evkmimx8mn/driver_examples/gpt/timer">
          <external path="boards/evkmimx8mn/driver_examples/gpt/timer" type="xml">
            <files mask="gpt_timer.xml"/>
          </external>
        </example>
        <example id="evkmimx8mn_hello_world" name="hello_world" brief="The Hello World demo application provides a sanity check for the new SDK build environments and board bring up. The HelloWorld demo prints the &quot;Hello World&quot; string to the terminal using the SDK UART drivers. The purpose of this demo is toshow how to use the UART, and to provide a simple project for debugging and further development." toolchain="armgcc iar" category="demo_apps" path="boards/evkmimx8mn/demo_apps/hello_world">
          <external path="boards/evkmimx8mn/demo_apps/hello_world" type="xml">
            <files mask="hello_world.xml"/>
          </external>
        </example>
        <example id="evkmimx8mn_igpio_led_output" name="igpio_led_output" brief="The GPIO Example project is a demonstration program that uses the KSDK software to manipulate the general-purposeoutputs.The example is supported by the set, clear, and toggle write-only registers for each port output data register. The example take turns to shine the LED." toolchain="armgcc iar" category="driver_examples/gpio" path="boards/evkmimx8mn/driver_examples/gpio/led_output">
          <external path="boards/evkmimx8mn/driver_examples/gpio/led_output" type="xml">
            <files mask="igpio_led_output.xml"/>
          </external>
        </example>
        <example id="evkmimx8mn_ii2c_interrupt_b2b_transfer_master" name="ii2c_interrupt_b2b_transfer_master" brief="The i2c_interrupt_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with interrupt:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar" category="driver_examples/i2c" path="boards/evkmimx8mn/driver_examples/i2c/interrupt_b2b_transfer/master">
          <external path="boards/evkmimx8mn/driver_examples/i2c/interrupt_b2b_transfer/master" type="xml">
            <files mask="ii2c_interrupt_b2b_transfer_master.xml"/>
          </external>
        </example>
        <example id="evkmimx8mn_ii2c_interrupt_b2b_transfer_slave" name="ii2c_interrupt_b2b_transfer_slave" brief="The i2c_interrupt_b2b_transfer_slave example shows how to use i2c driver as slave to do board to board transfer with interrupt:In this example, one i2c instance as slave and another i2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar" category="driver_examples/i2c" path="boards/evkmimx8mn/driver_examples/i2c/interrupt_b2b_transfer/slave">
          <external path="boards/evkmimx8mn/driver_examples/i2c/interrupt_b2b_transfer/slave" type="xml">
            <files mask="ii2c_interrupt_b2b_transfer_slave.xml"/>
          </external>
        </example>
        <example id="evkmimx8mn_ii2c_polling_b2b_transfer_master" name="ii2c_polling_b2b_transfer_master" brief="The i2c_polling_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer using polling method:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar" category="driver_examples/i2c" path="boards/evkmimx8mn/driver_examples/i2c/polling_b2b_transfer/master">
          <external path="boards/evkmimx8mn/driver_examples/i2c/polling_b2b_transfer/master" type="xml">
            <files mask="ii2c_polling_b2b_transfer_master.xml"/>
          </external>
        </example>
        <example id="evkmimx8mn_ii2c_polling_b2b_transfer_slave" name="ii2c_polling_b2b_transfer_slave" brief="The i2c_polling_b2b_transfer_slave example shows how to use i2c driver as slave to do board to board transfer with a polling master:In this example, one i2c instance as slave and another i2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar" category="driver_examples/i2c" path="boards/evkmimx8mn/driver_examples/i2c/polling_b2b_transfer/slave">
          <external path="boards/evkmimx8mn/driver_examples/i2c/polling_b2b_transfer/slave" type="xml">
            <files mask="ii2c_polling_b2b_transfer_slave.xml"/>
          </external>
        </example>
        <example id="evkmimx8mn_ipwm" name="ipwm" brief="The PWM project is a simple demonstration program of the SDK PWM driver. It sets up the PWM hardwareblock to output PWM signals on one PWM channel. The example also shows PWM duty cycle is increase or decrease.The FIFO empty interrupt is provided. A new value will be loaded into FIFO when FIFO empty status bit is set. The PWM will run at the last set duty-cycle setting if all the values of the FIFO has been utilized, until the FIFO is reloaded or the PWM is disabled. When a new value is written, the duty cycle changes after the current period is over.The outputs can be observed by oscilloscope." toolchain="armgcc iar" category="driver_examples/pwm" path="boards/evkmimx8mn/driver_examples/pwm">
          <external path="boards/evkmimx8mn/driver_examples/pwm" type="xml">
            <files mask="ipwm.xml"/>
          </external>
        </example>
        <example id="evkmimx8mn_iuart_auto_baudrate_detect" name="iuart_auto_baudrate_detect" brief="The uart_auto_baudrate_detect example shows how to use uart auto baud rate detect feature:In this example, one uart instance connect to PC through uart. First, we should send characters a or A to board. The boars will set baud rate automatic. After baud rate has set, the board will send back all characters that PCsend to the board." toolchain="armgcc iar" category="driver_examples/uart" path="boards/evkmimx8mn/driver_examples/uart/auto_baudrate_detect">
          <external path="boards/evkmimx8mn/driver_examples/uart/auto_baudrate_detect" type="xml">
            <files mask="iuart_auto_baudrate_detect.xml"/>
          </external>
        </example>
        <example id="evkmimx8mn_iuart_idle_detect_sdma_transfer" name="iuart_idle_detect_sdma_transfer" brief="The uart_idle_detect_sdma example shows how to use uart driver in sdma way:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Uart will receive 8 characters every time, but if the character is less then 8, the idleline interrupt will generate, and abort the SDMA receive operation, and send out the receivedcharacters." toolchain="armgcc iar" category="driver_examples/uart" path="boards/evkmimx8mn/driver_examples/uart/idle_detect_sdma_transfer">
          <external path="boards/evkmimx8mn/driver_examples/uart/idle_detect_sdma_transfer" type="xml">
            <files mask="iuart_idle_detect_sdma_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimx8mn_iuart_interrupt" name="iuart_interrupt" brief="The uart_functioncal_interrupt example shows how to use uart driver functionalAPI to receive data with interrupt method:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board." toolchain="armgcc iar" category="driver_examples/uart" path="boards/evkmimx8mn/driver_examples/uart/interrupt">
          <external path="boards/evkmimx8mn/driver_examples/uart/interrupt" type="xml">
            <files mask="iuart_interrupt.xml"/>
          </external>
        </example>
        <example id="evkmimx8mn_iuart_interrupt_rb_transfer" name="iuart_interrupt_rb_transfer" brief="The uart_interrupt_ring_buffer example shows how to use uart driver in interrupt way withRX ring buffer enabled:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar" category="driver_examples/uart" path="boards/evkmimx8mn/driver_examples/uart/interrupt_rb_transfer">
          <external path="boards/evkmimx8mn/driver_examples/uart/interrupt_rb_transfer" type="xml">
            <files mask="iuart_interrupt_rb_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimx8mn_iuart_interrupt_transfer" name="iuart_interrupt_transfer" brief="The uart_interrupt example shows how to use uart driver in interrupt way:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar" category="driver_examples/uart" path="boards/evkmimx8mn/driver_examples/uart/interrupt_transfer">
          <external path="boards/evkmimx8mn/driver_examples/uart/interrupt_transfer" type="xml">
            <files mask="iuart_interrupt_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimx8mn_iuart_polling" name="iuart_polling" brief="The uart_polling example shows how to use uart driver in polling way:In this example, one uart instance connect to PC through uart, the board will send back all characters that PCsend to the board." toolchain="armgcc iar" category="driver_examples/uart" path="boards/evkmimx8mn/driver_examples/uart/polling">
          <external path="boards/evkmimx8mn/driver_examples/uart/polling" type="xml">
            <files mask="iuart_polling.xml"/>
          </external>
        </example>
        <example id="evkmimx8mn_iuart_sdma_transfer" name="iuart_sdma_transfer" brief="The uart_sdma example shows how to use uart driver in sdma way:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar" category="driver_examples/uart" path="boards/evkmimx8mn/driver_examples/uart/sdma_transfer">
          <external path="boards/evkmimx8mn/driver_examples/uart/sdma_transfer" type="xml">
            <files mask="iuart_sdma_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimx8mn_pdm_hwvad" name="pdm_hwvad" brief="The pdm_hwvad example shows how to use pdm driver with interrupt:In this example, one pdm instance playbacks the audio data stored in flash using interrupt." toolchain="armgcc iar" category="driver_examples/pdm" path="boards/evkmimx8mn/driver_examples/pdm/pdm_hwvad">
          <external path="boards/evkmimx8mn/driver_examples/pdm/pdm_hwvad" type="xml">
            <files mask="pdm_hwvad.xml"/>
          </external>
        </example>
        <example id="evkmimx8mn_pdm_interrupt" name="pdm_interrupt" brief="The pdm_interrupt example shows how to use pdm driver with interrupt:In this example, one pdm instance playbacks the audio data stored in flash using interrupt." toolchain="armgcc iar" category="driver_examples/pdm" path="boards/evkmimx8mn/driver_examples/pdm/pdm_interrupt">
          <external path="boards/evkmimx8mn/driver_examples/pdm/pdm_interrupt" type="xml">
            <files mask="pdm_interrupt.xml"/>
          </external>
        </example>
        <example id="evkmimx8mn_pdm_sai_interrupt" name="pdm_sai_interrupt" brief="The pdm_sdma_transfer example shows how to use pdm driver with interrupt:In this example, one sai instance loopback the audio data that recieve from PDM." toolchain="armgcc iar" category="driver_examples/pdm" path="boards/evkmimx8mn/driver_examples/pdm/pdm_sai_interrupt">
          <external path="boards/evkmimx8mn/driver_examples/pdm/pdm_sai_interrupt" type="xml">
            <files mask="pdm_sai_interrupt.xml"/>
          </external>
        </example>
        <example id="evkmimx8mn_pdm_sai_interrupt_transfer" name="pdm_sai_interrupt_transfer" brief="The pdm_sdma_transfer example shows how to use pdm driver with interrupt transaction api:In this example, one sai instance loopback the audio data that recieve from PDM." toolchain="armgcc iar" category="driver_examples/pdm" path="boards/evkmimx8mn/driver_examples/pdm/pdm_sai_interrupt_transfer">
          <external path="boards/evkmimx8mn/driver_examples/pdm/pdm_sai_interrupt_transfer" type="xml">
            <files mask="pdm_sai_interrupt_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimx8mn_pdm_sai_sdma" name="pdm_sai_sdma" brief="The pdm_sai_sdma example shows how to use pdm sdma driver together with sai sdma driver" toolchain="armgcc iar" category="driver_examples/pdm" path="boards/evkmimx8mn/driver_examples/pdm/pdm_sai_sdma">
          <external path="boards/evkmimx8mn/driver_examples/pdm/pdm_sai_sdma" type="xml">
            <files mask="pdm_sai_sdma.xml"/>
          </external>
        </example>
        <example id="evkmimx8mn_pdm_sdma_transfer" name="pdm_sdma_transfer" brief="The pdm_sdma_transfer example shows how to use pdm driver with SDMA" toolchain="armgcc iar" category="driver_examples/pdm" path="boards/evkmimx8mn/driver_examples/pdm/pdm_sdma_transfer">
          <external path="boards/evkmimx8mn/driver_examples/pdm/pdm_sdma_transfer" type="xml">
            <files mask="pdm_sdma_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimx8mn_rdc" name="rdc" brief="The RDC example shows how to control the peripheral and memory regionasscess policy using RDC and RDC_SEMA42" toolchain="armgcc iar" category="driver_examples" path="boards/evkmimx8mn/driver_examples/rdc">
          <external path="boards/evkmimx8mn/driver_examples/rdc" type="xml">
            <files mask="rdc.xml"/>
          </external>
        </example>
        <example id="evkmimx8mn_sai_interrupt_transfer" name="sai_interrupt_transfer" brief="The sai_interrupt_transfer example shows how to use sai driver with interrupt:In this example, one sai instance playbacks the audio data stored in flash/SRAM using interrupt." toolchain="armgcc iar" category="driver_examples/sai" path="boards/evkmimx8mn/driver_examples/sai/interrupt_transfer">
          <external path="boards/evkmimx8mn/driver_examples/sai/interrupt_transfer" type="xml">
            <files mask="sai_interrupt_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimx8mn_sai_sdma_transfer" name="sai_sdma_transfer" brief="The sai_sdma_transfer example shows how to use sai driver with SDMA:In this example, one sai instance playbacks the audio data stored in flash/SRAM/DDR using SDMA channel." toolchain="armgcc iar" category="driver_examples/sai" path="boards/evkmimx8mn/driver_examples/sai/sdma_transfer">
          <external path="boards/evkmimx8mn/driver_examples/sai/sdma_transfer" type="xml">
            <files mask="sai_sdma_transfer.xml"/>
          </external>
        </example>
        <example id="evkmimx8mn_sdma_memory_to_memory" name="sdma_memory_to_memory" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc iar" category="driver_examples/sdma" path="boards/evkmimx8mn/driver_examples/sdma/memory_to_memory">
          <external path="boards/evkmimx8mn/driver_examples/sdma/memory_to_memory" type="xml">
            <files mask="sdma_memory_to_memory.xml"/>
          </external>
        </example>
        <example id="evkmimx8mn_sdma_scatter_gather" name="sdma_scatter_gather" brief="The SDMA scatter gather example is a simple demonstration program that uses the SDK software.It excuates several shots transfer from source buffer to destination buffer using the SDK SDMA drivers.The purpose of this example is to show how to use the SDMA and to provide a scatter gather example fordebugging and further development." toolchain="armgcc iar" category="driver_examples/sdma/scatter_gather" path="boards/evkmimx8mn/driver_examples/sdma/scatter_gather">
          <external path="boards/evkmimx8mn/driver_examples/sdma/scatter_gather" type="xml">
            <files mask="sdma_scatter_gather.xml"/>
          </external>
        </example>
        <example id="evkmimx8mn_sema4_uboot" name="sema4_uboot" brief="The sema4 uboot example shows how to use SEMA4 driver to lock and unlock a sema gate,the notification IRQ is also demonstrated in this example.This example should work together with uboot. This example runs on Cortex-M core,the uboot runs on the Cortex-A core." toolchain="armgcc iar" category="driver_examples/sema4" path="boards/evkmimx8mn/driver_examples/sema4/uboot">
          <external path="boards/evkmimx8mn/driver_examples/sema4/uboot" type="xml">
            <files mask="sema4_uboot.xml"/>
          </external>
        </example>
        <example id="evkmimx8mn_tmu_1_monitor_threshold" name="tmu_1_monitor_threshold" brief="The TMU example shows how to configure TMU register to monitor and report the temperature from temperature measurement site located on the chip. It monitors the site and signals an alarm if a programmed threshold is ever exceeded." toolchain="armgcc iar" category="driver_examples/tmu_1" path="boards/evkmimx8mn/driver_examples/tmu_1/monitor_threshold">
          <external path="boards/evkmimx8mn/driver_examples/tmu_1/monitor_threshold" type="xml">
            <files mask="tmu_1_monitor_threshold.xml"/>
          </external>
        </example>
        <example id="evkmimx8mn_tmu_1_temperature_polling" name="tmu_1_temperature_polling" brief="The TMU example shows how to configure TMU register to monitor and report the temperature from temperature measurement site located on the chip. It monitors the site and outputs the immediate/average temperature." toolchain="armgcc iar" category="driver_examples/tmu_1" path="boards/evkmimx8mn/driver_examples/tmu_1/temperature_polling">
          <external path="boards/evkmimx8mn/driver_examples/tmu_1/temperature_polling" type="xml">
            <files mask="tmu_1_temperature_polling.xml"/>
          </external>
        </example>
        <example id="evkmimx8mn_wdog01" name="wdog01" brief="The WDOG Example project is to demonstrate usage of the KSDK wdog driver.In this example,implemented to test the wdog.And then after 10 times of refreshing the watchdog, a timeout reset is generated.We also try to refresh out of window to trigger reset after 10 times of refreshing.Please notice that because WDOG control registers are write-once only, so the WDOG_Init function and the WDOG_Disable function can be called only once after reset." toolchain="armgcc iar" category="driver_examples/wdog" path="boards/evkmimx8mn/driver_examples/wdog">
          <external path="boards/evkmimx8mn/driver_examples/wdog" type="xml">
            <files mask="wdog01.xml"/>
          </external>
        </example>
      </examples>
    </board>
  </boards>
  <devices>
    <device id="MIMX8MN6xxxJZ" name="MIMX8MN6" version="1.0.0" full_name="MIMX8MN6xxxJZ">
      <description>The MIMX8MN6 are ARM Cortex-M7 and Cortex-A53 based microcontrollers for embedded applications.</description>
      <image path="docs/images" type="image">
        <files mask="device.jpg"/>
      </image>
      <metadataSet>
        <metadata key="vendor" value="NXP"/>
        <metadata key="vendor.device.type" value="i.MX"/>
        <metadata key="html">
          <specific>
            <content>The MIMX8MN6 are ARM Cortex-M7 and Cortex-A53 based microcontrollers for embedded applications.</content>
          </specific>
        </metadata>
        <metadata key="vendor.device.family" value="MIMX8MNx"/>
      </metadataSet>
      <core id="cm7_MIMX8MN6xxxJZ" name="cm7" fpu="true" type="cm7"/>
      <memory>
        <memoryBlock id="SRAM_UPPER_MIMX8MN6xxxJZ" name="SRAM_UPPER" addr="20000000" size="00020000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM_LOWER_MIMX8MN6xxxJZ" name="SRAM_LOWER" addr="00000000" size="00020000" type="RAM" access="RW"/>
      </memory>
      <total_memory flash_size_kb="0" ram_size_kb="256"/>
      <package id="MIMX8MN6DVTJZ" name="MIMX8MN6DVTJZ"/>
      <evaluation_boards>
        <evaluation_board name="evkmimx8mn"/>
      </evaluation_boards>
      <debug_configurations>
        <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
          <params>
            <params id="internal.attach.slave.release.MIMX8MN6xxxJZ" name="internal.attach.slave" value="true"/>
            <params id="internal.multi.swd.release.MIMX8MN6xxxJZ" name="internal.multi.swd" value="true"/>
            <params id="internal.wiretype.release.MIMX8MN6xxxJZ" name="internal.wiretype" value="SWD"/>
            <params id="internal.has_swo.release.MIMX8MN6xxxJZ" name="internal.has_swo" value="false"/>
          </params>
          <drivers>
            <driver id_refs="QSPI_FLASH_MIMX8MN6xxxJZ">
              <driverBinary path="devices/MIMX8MN6/mcuxpresso" type="binary">
                <files mask="flash_driver_placeholder.cfx"/>
              </driverBinary>
            </driver>
          </drivers>
        </debug_configuration>
      </debug_configurations>
      <linkerSettings nature="c_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
      <linkerSettings nature="cpp_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
    </device>
    <device id="MIMX8MN5xxxJZ" name="MIMX8MN5" version="1.0.0" full_name="MIMX8MN5xxxJZ">
      <description>The MIMX8MN5 are ARM Cortex-M7 and Cortex-A53 based microcontrollers for embedded applications.</description>
      <image path="docs/images" type="image">
        <files mask="device.jpg"/>
      </image>
      <metadataSet>
        <metadata key="vendor" value="NXP"/>
        <metadata key="vendor.device.type" value="i.MX"/>
        <metadata key="html">
          <specific>
            <content>The MIMX8MN5 are ARM Cortex-M7 and Cortex-A53 based microcontrollers for embedded applications.</content>
          </specific>
        </metadata>
        <metadata key="vendor.device.family" value="MIMX8MNx"/>
      </metadataSet>
      <core id="cm7_MIMX8MN5xxxJZ" name="cm7" fpu="true" type="cm7"/>
      <memory>
        <memoryBlock id="SRAM_UPPER_MIMX8MN5xxxJZ" name="SRAM_UPPER" addr="20000000" size="00020000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM_LOWER_MIMX8MN5xxxJZ" name="SRAM_LOWER" addr="00000000" size="00020000" type="RAM" access="RW"/>
      </memory>
      <total_memory flash_size_kb="0" ram_size_kb="256"/>
      <package id="MIMX8MN5DVTJZ" name="MIMX8MN5DVTJZ"/>
      <evaluation_boards>
        <evaluation_board name="evkmimx8mn"/>
      </evaluation_boards>
      <debug_configurations>
        <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
          <params>
            <params id="internal.attach.slave.release.MIMX8MN5xxxJZ" name="internal.attach.slave" value="true"/>
            <params id="internal.multi.swd.release.MIMX8MN5xxxJZ" name="internal.multi.swd" value="true"/>
            <params id="internal.wiretype.release.MIMX8MN5xxxJZ" name="internal.wiretype" value="SWD"/>
            <params id="internal.has_swo.release.MIMX8MN5xxxJZ" name="internal.has_swo" value="false"/>
          </params>
          <drivers>
            <driver id_refs="QSPI_FLASH_MIMX8MN5xxxJZ">
              <driverBinary path="devices/MIMX8MN5/mcuxpresso" type="binary">
                <files mask="flash_driver_placeholder.cfx"/>
              </driverBinary>
            </driver>
          </drivers>
        </debug_configuration>
      </debug_configurations>
      <linkerSettings nature="c_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
      <linkerSettings nature="cpp_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
    </device>
  </devices>
  <components>
    <component id="project_template.evkmimx8mn.MIMX8MN6" name="evkmimx8mn" version="1.0.0" devices="MIMX8MN6xxxJZ" category="Board Support/SDK Project Template" user_visible="true" type="project_template">
      <source path="boards/evkmimx8mn/project_template" target_path="board" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="peripherals.c"/>
        <files mask="pin_mux.c"/>
      </source>
      <source path="boards/evkmimx8mn/project_template" target_path="board" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="peripherals.h"/>
        <files mask="pin_mux.h"/>
      </source>
    </component>
    <component id="platform.CMSIS.MIMX8MN6" name="CMSIS" version="5.5.1" devices="MIMX8MN6xxxJZ" dependency="platform.CMSIS_Driver platform.CMSIS_Driver_Include.CAN_CMSISInclude.MIMX8MN6 platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MN6 platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.MIMX8MN6 platform.CMSIS_Driver_Include.Ethernet_MAC_CMSISInclude.MIMX8MN6 platform.CMSIS_Driver_Include.Ethernet_PHY_CMSISInclude.MIMX8MN6 platform.CMSIS_Driver_Include.Flash_CMSISInclude.MIMX8MN6 platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMX8MN6 platform.CMSIS_Driver_Include.MCI_CMSISInclude.MIMX8MN6 platform.CMSIS_Driver_Include.NAND_CMSISInclude.MIMX8MN6 platform.CMSIS_Driver_Include.SAI_CMSISInclude.MIMX8MN6 platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMX8MN6 platform.CMSIS_Driver_Include.USART_CMSISInclude.MIMX8MN6 platform.CMSIS_Driver_Include.USB_CMSISInclude.MIMX8MN6 platform.CMSIS_Driver_Include.USB_Device_CMSISInclude.MIMX8MN6 platform.CMSIS_Driver_Include.USB_Host_CMSISInclude.MIMX8MN6 platform.CMSIS_Driver_Include.WiFi_CMSISInclude.MIMX8MN6 platform.Include_common.MIMX8MN6 platform.Include_dsp.MIMX8MN6" user_visible="true" type="CMSIS">
      <source path="CMSIS/Include" target_path="src" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_math.h"/>
        <files mask="cmsis_armcc.h"/>
        <files mask="cmsis_armclang.h"/>
        <files mask="cmsis_armclang_ltm.h"/>
        <files mask="cmsis_compiler.h"/>
        <files mask="cmsis_gcc.h"/>
        <files mask="cmsis_iccarm.h"/>
        <files mask="cmsis_version.h"/>
        <files mask="core_armv81mml.h"/>
        <files mask="core_armv8mbl.h"/>
        <files mask="core_armv8mml.h"/>
        <files mask="core_cm0.h"/>
        <files mask="core_cm0plus.h"/>
        <files mask="core_cm1.h"/>
        <files mask="core_cm23.h"/>
        <files mask="core_cm3.h"/>
        <files mask="core_cm33.h"/>
        <files mask="core_cm35p.h"/>
        <files mask="core_cm4.h"/>
        <files mask="core_cm7.h"/>
        <files mask="core_dsp.h"/>
        <files mask="core_sc000.h"/>
        <files mask="core_sc300.h"/>
        <files mask="mpu_armv7.h"/>
        <files mask="mpu_armv8.h"/>
        <files mask="tz_context.h"/>
      </source>
      <source path="CMSIS" target_path="src" type="doc">
        <files mask="LICENSE.txt"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver" name="CMSIS_Driver" version="2.7.0" user_visible="true" type="CMSIS">
      <source path="CMSIS/Driver/DriverTemplates" target_path="src" type="src">
        <files mask="Driver_CAN.c"/>
        <files mask="Driver_ETH_MAC.c"/>
        <files mask="Driver_ETH_PHY.c"/>
        <files mask="Driver_Flash.c"/>
        <files mask="Driver_I2C.c"/>
        <files mask="Driver_MCI.c"/>
        <files mask="Driver_SAI.c"/>
        <files mask="Driver_SPI.c"/>
        <files mask="Driver_Storage.c"/>
        <files mask="Driver_USART.c"/>
        <files mask="Driver_USBD.c"/>
        <files mask="Driver_USBH.c"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.CAN_CMSISInclude.MIMX8MN6" name="CAN" version="1.2.0" devices="MIMX8MN6xxxJZ" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MN6" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_CAN.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MN6" name="Common" version="2.7.0" devices="MIMX8MN6xxxJZ" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_Common.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.MIMX8MN6" name="Ethernet" version="2.1.0" devices="MIMX8MN6xxxJZ" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MN6" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_ETH.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.Ethernet_MAC_CMSISInclude.MIMX8MN6" name="Ethernet_MAC" version="2.1.0" devices="MIMX8MN6xxxJZ" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MN6 platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.MIMX8MN6" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_ETH_MAC.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.Ethernet_PHY_CMSISInclude.MIMX8MN6" name="Ethernet_PHY" version="2.1.0" devices="MIMX8MN6xxxJZ" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MN6 platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.MIMX8MN6" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_ETH_PHY.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.Flash_CMSISInclude.MIMX8MN6" name="Flash" version="2.2.0" devices="MIMX8MN6xxxJZ" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MN6" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_Flash.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMX8MN6" name="I2C" version="2.3.0" devices="MIMX8MN6xxxJZ" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MN6" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_I2C.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.MCI_CMSISInclude.MIMX8MN6" name="MCI" version="2.3.0" devices="MIMX8MN6xxxJZ" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MN6" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_MCI.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.NAND_CMSISInclude.MIMX8MN6" name="NAND" version="2.3.0" devices="MIMX8MN6xxxJZ" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MN6" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_NAND.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.SAI_CMSISInclude.MIMX8MN6" name="SAI" version="1.1.0" devices="MIMX8MN6xxxJZ" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MN6" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_SAI.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMX8MN6" name="SPI" version="2.2.0" devices="MIMX8MN6xxxJZ" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MN6" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_SPI.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.USART_CMSISInclude.MIMX8MN6" name="USART" version="2.3.0" devices="MIMX8MN6xxxJZ" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MN6" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_USART.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.USB_CMSISInclude.MIMX8MN6" name="USB" version="2.2.0" devices="MIMX8MN6xxxJZ" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MN6" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_USB.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.USB_Device_CMSISInclude.MIMX8MN6" name="USB_Device" version="2.2.0" devices="MIMX8MN6xxxJZ" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MN6 platform.CMSIS_Driver_Include.USB_CMSISInclude.MIMX8MN6" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_USBD.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.USB_Host_CMSISInclude.MIMX8MN6" name="USB_Host" version="2.2.0" devices="MIMX8MN6xxxJZ" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MN6 platform.CMSIS_Driver_Include.USB_CMSISInclude.MIMX8MN6" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_USBH.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.WiFi_CMSISInclude.MIMX8MN6" name="WiFi" version="1.0.0" devices="MIMX8MN6xxxJZ" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MN6" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_WiFi.h"/>
      </source>
    </component>
    <component id="platform.Include_common.MIMX8MN6" name="CMSIS_Include_common" version="5.2.1" devices="MIMX8MN6xxxJZ" user_visible="true" type="CMSIS_Include">
      <source path="CMSIS/Include" target_path="CMSIS" type="c_include">
        <files mask="cmsis_armcc.h"/>
        <files mask="cmsis_armclang.h"/>
        <files mask="cmsis_armclang_ltm.h"/>
        <files mask="cmsis_compiler.h"/>
        <files mask="cmsis_gcc.h"/>
        <files mask="cmsis_iccarm.h"/>
        <files mask="cmsis_version.h"/>
        <files mask="core_armv81mml.h"/>
        <files mask="core_armv8mbl.h"/>
        <files mask="core_armv8mml.h"/>
        <files mask="mpu_armv7.h"/>
        <files mask="mpu_armv8.h"/>
      </source>
    </component>
    <component id="platform.Include_core_cm7.MIMX8MN6" name="CMSIS_Include_core_cm7" version="5.2.1" devices="MIMX8MN6xxxJZ" dependency="platform.Include_common.MIMX8MN6 platform.Include_dsp.MIMX8MN6" device_cores="cm7_MIMX8MN6xxxJZ" user_visible="true" type="CMSIS_Include">
      <source path="CMSIS/Include" target_path="CMSIS" type="c_include">
        <files mask="core_cm7.h"/>
      </source>
    </component>
    <component id="platform.Include_dsp.MIMX8MN6" name="CMSIS_Include_dsp" version="1.6.0" devices="MIMX8MN6xxxJZ" user_visible="true" type="CMSIS_Include">
      <source path="CMSIS/Include" target_path="CMSIS" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_math.h"/>
      </source>
    </component>
    <component id="project_template.MIMX8MN6.MIMX8MN6" name="MIMX8MN6" version="1.0.0" devices="MIMX8MN6xxxJZ" dependency="component.lists.MIMX8MN6 component.serial_manager.MIMX8MN6 device.MIMX8MN6_CMSIS.MIMX8MN6 device.MIMX8MN6_startup.MIMX8MN6 platform.Include_common.MIMX8MN6 platform.Include_core_cm7.MIMX8MN6 platform.Include_dsp.MIMX8MN6 platform.drivers.clock.MIMX8MN6 platform.drivers.common.MIMX8MN6 platform.drivers.iuart.MIMX8MN6 platform.drivers.rdc.MIMX8MN6 platform.utilities.assert.MIMX8MN6 utility.debug_console.MIMX8MN6" device_cores="cm7_MIMX8MN6xxxJZ" category="Board Support/SDK Project Template" user_visible="true" type="project_template">
      <source path="devices/MIMX8MN6/project_template" target_path="board" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="peripherals.c"/>
        <files mask="pin_mux.c"/>
      </source>
      <source path="devices/MIMX8MN6/project_template" target_path="board" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="peripherals.h"/>
        <files mask="pin_mux.h"/>
      </source>
    </component>
    <component id="RTE_Device.MIMX8MN6" name="RTE_Device" version="1.0.0" devices="MIMX8MN6xxxJZ" category="Device/SDK Project Template" user_visible="true" type="project_template">
      <source path="devices/MIMX8MN6/template" target_path="board" type="c_include">
        <files mask="RTE_Device.h"/>
      </source>
    </component>
    <component id="tools.MIMX8MN6" name="cmake_toolchain" version="1.0.0" devices="MIMX8MN6xxxJZ" user_visible="true" type="other">
      <source path="tools/cmake_toolchain_files" target_path="src" type="script">
        <files mask="armgcc.cmake"/>
        <files mask="armgcc_force_cpp.cmake"/>
        <files mask="xcc.cmake"/>
      </source>
    </component>
    <component id="component.codec_wm8524_adapter.MIMX8MN6" name="codec_wm8524_adapter" version="2.1.0" devices="MIMX8MN6xxxJZ" dependency="device.MIMX8MN6_CMSIS.MIMX8MN6 driver.codec.MIMX8MN6 driver.wm8524.MIMX8MN6 platform.Include_common.MIMX8MN6 platform.Include_core_cm7.MIMX8MN6 platform.Include_dsp.MIMX8MN6 platform.drivers.clock.MIMX8MN6 platform.drivers.common.MIMX8MN6" device_cores="cm7_MIMX8MN6xxxJZ" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/codec/port" target_path="codec" type="src">
        <files mask="fsl_codec_adapter.c"/>
      </source>
      <source path="components/codec/port/wm8524" target_path="codec" type="src">
        <files mask="fsl_wm8524_adapter.c"/>
      </source>
      <source path="components/codec/port/wm8524" target_path="codec" type="c_include">
        <files mask="fsl_wm8524_adapter.h"/>
      </source>
    </component>
    <component id="component.iuart_adapter.MIMX8MN6" name="iuart_adapter" version="1.0.0" full_name="iuart_adapter" devices="MIMX8MN6xxxJZ" dependency="device.MIMX8MN6_CMSIS.MIMX8MN6 platform.Include_common.MIMX8MN6 platform.Include_core_cm7.MIMX8MN6 platform.Include_dsp.MIMX8MN6 platform.drivers.clock.MIMX8MN6 platform.drivers.common.MIMX8MN6 platform.drivers.iuart.MIMX8MN6" device_cores="cm7_MIMX8MN6xxxJZ" user_visible="true" type="utilities">
      <source path="components/uart" target_path="component/uart" type="src">
        <files mask="iuart_adapter.c"/>
      </source>
      <source path="components/uart" target_path="component/uart" type="c_include">
        <files mask="uart.h"/>
      </source>
    </component>
    <component id="component.lists.MIMX8MN6" name="lists" version="1.0.0" devices="MIMX8MN6xxxJZ" dependency="device.MIMX8MN6_CMSIS.MIMX8MN6 platform.Include_common.MIMX8MN6 platform.Include_core_cm7.MIMX8MN6 platform.Include_dsp.MIMX8MN6 platform.drivers.clock.MIMX8MN6 platform.drivers.common.MIMX8MN6" device_cores="cm7_MIMX8MN6xxxJZ" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/lists" target_path="component/lists" type="src">
        <files mask="generic_list.c"/>
      </source>
      <source path="components/lists" target_path="component/lists" type="c_include">
        <files mask="generic_list.h"/>
      </source>
    </component>
    <component id="component.serial_manager.MIMX8MN6" name="serial_manager" version="1.0.0" full_name="Serial Manager" devices="MIMX8MN6xxxJZ" dependency="component.lists.MIMX8MN6 device.MIMX8MN6_CMSIS.MIMX8MN6 platform.Include_common.MIMX8MN6 platform.Include_core_cm7.MIMX8MN6 platform.Include_dsp.MIMX8MN6 platform.drivers.clock.MIMX8MN6 platform.drivers.common.MIMX8MN6" device_cores="cm7_MIMX8MN6xxxJZ" user_visible="true" type="utilities">
      <source path="components/serial_manager" target_path="component/serial_manager" type="src">
        <files mask="serial_manager.c"/>
      </source>
      <source path="components/serial_manager" target_path="component/serial_manager" type="c_include">
        <files mask="serial_manager.h"/>
        <files mask="serial_port_internal.h"/>
      </source>
    </component>
    <component id="component.serial_manager_uart.MIMX8MN6" name="serial_manager_uart" version="1.0.0" full_name="Serial Manager uart" devices="MIMX8MN6xxxJZ" dependency="platform.drivers.iuart.MIMX8MN6" user_visible="true" type="utilities">
      <source path="components/serial_manager" target_path="component/serial_manager" type="src">
        <files mask="serial_port_uart.c"/>
      </source>
      <source path="components/serial_manager" target_path="component/serial_manager" type="c_include">
        <files mask="serial_port_uart.h"/>
      </source>
    </component>
    <component id="component.wm8524_adapter.MIMX8MN6" name="wm8524_adapter" version="2.1.0" devices="MIMX8MN6xxxJZ" dependency="device.MIMX8MN6_CMSIS.MIMX8MN6 driver.codec.MIMX8MN6 driver.wm8524.MIMX8MN6 platform.Include_common.MIMX8MN6 platform.Include_core_cm7.MIMX8MN6 platform.Include_dsp.MIMX8MN6 platform.drivers.clock.MIMX8MN6 platform.drivers.common.MIMX8MN6" device_cores="cm7_MIMX8MN6xxxJZ" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/codec/port/wm8524" target_path="codec" type="src">
        <files mask="fsl_codec_adapter.c"/>
      </source>
    </component>
    <component id="device.MIMX8MN6_CMSIS.MIMX8MN6" name="MIMX8MN6_CMSIS" version="1.0.0" devices="MIMX8MN6xxxJZ" dependency="platform.Include_common.MIMX8MN6 platform.Include_core_cm7.MIMX8MN6 platform.Include_dsp.MIMX8MN6" device_cores="cm7_MIMX8MN6xxxJZ" user_visible="true" type="CMSIS_Include">
      <source path="devices/MIMX8MN6" target_path="device" type="c_include">
        <files mask="MIMX8MN6_cm7.h"/>
        <files mask="MIMX8MN6_cm7_features.h"/>
        <files mask="fsl_device_registers.h"/>
        <files mask="system_MIMX8MN6_cm7.h"/>
      </source>
      <source path="devices/MIMX8MN6" target_path="device" type="src">
        <files mask="system_MIMX8MN6_cm7.c"/>
      </source>
    </component>
    <component id="device.MIMX8MN6_debugger.MIMX8MN6" name="MIMX8MN6_debugger" version="1.0.0" devices="MIMX8MN6xxxJZ" user_visible="true" type="debugger">
      <source path="devices/MIMX8MN6" target_path="src" type="xml">
        <files mask="MIMX8MN6_cm7.xml"/>
      </source>
    </component>
    <component id="platform.devices.MIMX8MN6_linker.MIMX8MN6" name="MIMX8MN6_linker" version="1.0.0" devices="MIMX8MN6xxxJZ" user_visible="true" type="linker">
      <source toolchain="armgcc" path="devices/MIMX8MN6/gcc" target_path="src" type="linker">
        <files mask="MIMX8MN6xxxxx_cm7_ddr_ram.ld"/>
        <files mask="MIMX8MN6xxxxx_cm7_flash.ld"/>
        <files mask="MIMX8MN6xxxxx_cm7_ram.ld"/>
      </source>
      <source toolchain="iar" path="devices/MIMX8MN6/iar" target_path="src" type="linker">
        <files mask="MIMX8MN6xxxxx_cm7_ddr_ram.icf"/>
        <files mask="MIMX8MN6xxxxx_cm7_flash.icf"/>
        <files mask="MIMX8MN6xxxxx_cm7_ram.icf"/>
      </source>
    </component>
    <component id="device.MIMX8MN6_startup.MIMX8MN6" name="MIMX8MN6_startup" version="1.0.0" devices="MIMX8MN6xxxJZ" category="Device/Startup" user_visible="true" type="startup">
      <source toolchain="armgcc" path="devices/MIMX8MN6/gcc" target_path="startup" type="asm_include">
        <files mask="startup_MIMX8MN6_cm7.S"/>
      </source>
      <source toolchain="iar" path="devices/MIMX8MN6/iar" target_path="startup" type="asm_include">
        <files mask="startup_MIMX8MN6_cm7.s"/>
      </source>
    </component>
    <component id="docs.MIMX8MN6.MIMX8MN6" name="MIMX8MN6" version="1.0.0" devices="MIMX8MN6xxxJZ" user_visible="true" type="documentation">
      <source path="docs" target_path="src" type="doc">
        <files mask="Getting Started with MCUXpresso SDK for i.MX 8M Nano.pdf"/>
        <files mask="MCUXpresso SDK Release Notes for i.MX 8M Nano.pdf"/>
      </source>
    </component>
    <component id="docs.images.MIMX8MN6" name="images" version="1.0.0" devices="MIMX8MN6xxxJZ" user_visible="true" type="documentation">
      <source path="docs/images" target_path="src" type="image">
        <files mask="EVK-MIMX8MN.gif"/>
        <files mask="device.jpg"/>
      </source>
    </component>
    <component id="platform.drivers.clock.MIMX8MN6" name="clock" brief="Clock Driver" version="2.1.0" full_name="Clock Driver" devices="MIMX8MN6xxxJZ" dependency="device.MIMX8MN6_CMSIS.MIMX8MN6 platform.Include_common.MIMX8MN6 platform.Include_core_cm7.MIMX8MN6 platform.Include_dsp.MIMX8MN6 platform.drivers.common.MIMX8MN6" device_cores="cm7_MIMX8MN6xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="src">
        <files mask="fsl_clock.c"/>
      </source>
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_clock.h"/>
      </source>
    </component>
    <component id="platform.drivers.ecspi_cmsis.MIMX8MN6" name="ecspi_cmsis" brief="ECSPI CMSIS Driver" version="2.0.0" full_name="ECSPI CMSIS Driver" devices="MIMX8MN6xxxJZ" dependency="RTE_Device.MIMX8MN6 device.MIMX8MN6_CMSIS.MIMX8MN6 platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MN6 platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMX8MN6 platform.Include_common.MIMX8MN6 platform.Include_core_cm7.MIMX8MN6 platform.Include_dsp.MIMX8MN6 platform.drivers.clock.MIMX8MN6 platform.drivers.common.MIMX8MN6 platform.drivers.ecspi.MIMX8MN6" device_cores="cm7_MIMX8MN6xxxJZ" user_visible="true" type="CMSIS_driver">
      <source path="devices/MIMX8MN6/cmsis_drivers" target_path="drivers" type="src">
        <files mask="fsl_ecspi_cmsis.c"/>
      </source>
      <source path="devices/MIMX8MN6/cmsis_drivers" target_path="drivers" type="c_include">
        <files mask="fsl_ecspi_cmsis.h"/>
      </source>
    </component>
    <component id="platform.drivers.ii2c_cmsis.MIMX8MN6" name="i2c_cmsis" brief="I2C CMSIS Driver" version="2.0.0" full_name="II2C CMSIS Driver" devices="MIMX8MN6xxxJZ" dependency="RTE_Device.MIMX8MN6 platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MN6 platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMX8MN6 platform.drivers.ii2c.MIMX8MN6" user_visible="true" type="CMSIS_driver">
      <source path="devices/MIMX8MN6/cmsis_drivers" target_path="drivers" type="src">
        <files mask="fsl_i2c_cmsis.c"/>
      </source>
      <source path="devices/MIMX8MN6/cmsis_drivers" target_path="drivers" type="c_include">
        <files mask="fsl_i2c_cmsis.h"/>
      </source>
    </component>
    <component id="platform.drivers.iuart_cmsis.MIMX8MN6" name="uart_cmsis" brief="UART CMSIS Driver" version="2.0.0" full_name="IUART CMSIS Driver" devices="MIMX8MN6xxxJZ" dependency="RTE_Device.MIMX8MN6 platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MN6 platform.CMSIS_Driver_Include.USART_CMSISInclude.MIMX8MN6 platform.drivers.iuart.MIMX8MN6" user_visible="true" type="CMSIS_driver">
      <source path="devices/MIMX8MN6/cmsis_drivers" target_path="drivers" type="src">
        <files mask="fsl_uart_cmsis.c"/>
      </source>
      <source path="devices/MIMX8MN6/cmsis_drivers" target_path="drivers" type="c_include">
        <files mask="fsl_uart_cmsis.h"/>
      </source>
    </component>
    <component id="driver.codec.MIMX8MN6" name="codec" version="2.1.0" devices="MIMX8MN6xxxJZ" dependency="device.MIMX8MN6_CMSIS.MIMX8MN6 platform.Include_common.MIMX8MN6 platform.Include_core_cm7.MIMX8MN6 platform.Include_dsp.MIMX8MN6 platform.drivers.clock.MIMX8MN6 platform.drivers.common.MIMX8MN6" device_cores="cm7_MIMX8MN6xxxJZ" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/codec" target_path="codec" type="src">
        <files mask="fsl_codec_common.c"/>
      </source>
      <source path="components/codec" target_path="codec" type="c_include">
        <files mask="fsl_codec_common.h"/>
      </source>
      <source path="components/codec/port" target_path="codec" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
    </component>
    <component id="platform.drivers.common.MIMX8MN6" name="common" brief="COMMON Driver" version="2.1.3" full_name="COMMON Driver" devices="MIMX8MN6xxxJZ" dependency="device.MIMX8MN6_CMSIS.MIMX8MN6 platform.Include_common.MIMX8MN6 platform.Include_core_cm7.MIMX8MN6 platform.Include_dsp.MIMX8MN6 platform.drivers.clock.MIMX8MN6" device_cores="cm7_MIMX8MN6xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="src">
        <files mask="fsl_common.c"/>
      </source>
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_common.h"/>
      </source>
    </component>
    <component id="platform.drivers.easrc.MIMX8MN6" name="asrc" brief="asrc Driver" version="2.0.1" full_name="asrc Driver" devices="MIMX8MN6xxxJZ" dependency="device.MIMX8MN6_CMSIS.MIMX8MN6 platform.Include_common.MIMX8MN6 platform.Include_core_cm7.MIMX8MN6 platform.Include_dsp.MIMX8MN6 platform.drivers.clock.MIMX8MN6 platform.drivers.common.MIMX8MN6" device_cores="cm7_MIMX8MN6xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="src">
        <files mask="fsl_asrc.c"/>
      </source>
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_asrc.h"/>
        <files mask="fsl_asrc_firmware.h"/>
      </source>
    </component>
    <component id="platform.drivers.easrc_sdma.MIMX8MN6" name="asrc_sdma" brief="asrc_sdma Driver" version="2.0.1" full_name="asrc_m2m_sdma Driver" devices="MIMX8MN6xxxJZ" dependency="device.MIMX8MN6_CMSIS.MIMX8MN6 platform.Include_common.MIMX8MN6 platform.Include_core_cm7.MIMX8MN6 platform.Include_dsp.MIMX8MN6 platform.drivers.clock.MIMX8MN6 platform.drivers.common.MIMX8MN6 platform.drivers.easrc.MIMX8MN6" device_cores="cm7_MIMX8MN6xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="src">
        <files mask="fsl_asrc_sdma.c"/>
      </source>
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_asrc_sdma.h"/>
      </source>
    </component>
    <component id="platform.drivers.ecspi.MIMX8MN6" name="ecspi" brief="ECSPI Driver" version="2.0.0" full_name="ECSPI Driver" devices="MIMX8MN6xxxJZ" dependency="device.MIMX8MN6_CMSIS.MIMX8MN6 platform.Include_common.MIMX8MN6 platform.Include_core_cm7.MIMX8MN6 platform.Include_dsp.MIMX8MN6 platform.drivers.clock.MIMX8MN6 platform.drivers.common.MIMX8MN6" device_cores="cm7_MIMX8MN6xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="src">
        <files mask="fsl_ecspi.c"/>
      </source>
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_ecspi.h"/>
      </source>
    </component>
    <component id="platform.drivers.ecspi_sdma.MIMX8MN6" name="ecspi_sdma" brief="ECSPI SDMA Driver" version="2.0.0" full_name="ECSPI SDMA Driver" devices="MIMX8MN6xxxJZ" dependency="device.MIMX8MN6_CMSIS.MIMX8MN6 platform.Include_common.MIMX8MN6 platform.Include_core_cm7.MIMX8MN6 platform.Include_dsp.MIMX8MN6 platform.drivers.clock.MIMX8MN6 platform.drivers.common.MIMX8MN6 platform.drivers.ecspi.MIMX8MN6 platform.drivers.sdma.MIMX8MN6" device_cores="cm7_MIMX8MN6xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="src">
        <files mask="fsl_ecspi_sdma.c"/>
      </source>
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_ecspi_sdma.h"/>
      </source>
    </component>
    <component id="platform.drivers.gpc_2.MIMX8MN6" name="gpc" brief="GPC Driver" version="2.1.0" full_name="GPC Driver" devices="MIMX8MN6xxxJZ" dependency="device.MIMX8MN6_CMSIS.MIMX8MN6 platform.Include_common.MIMX8MN6 platform.Include_core_cm7.MIMX8MN6 platform.Include_dsp.MIMX8MN6 platform.drivers.clock.MIMX8MN6 platform.drivers.common.MIMX8MN6" device_cores="cm7_MIMX8MN6xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="src">
        <files mask="fsl_gpc.c"/>
      </source>
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_gpc.h"/>
      </source>
    </component>
    <component id="platform.drivers.gpt.MIMX8MN6" name="gpt" brief="GPT Driver" version="2.0.0" full_name="GPT Driver" devices="MIMX8MN6xxxJZ" dependency="device.MIMX8MN6_CMSIS.MIMX8MN6 platform.Include_common.MIMX8MN6 platform.Include_core_cm7.MIMX8MN6 platform.Include_dsp.MIMX8MN6 platform.drivers.clock.MIMX8MN6 platform.drivers.common.MIMX8MN6" device_cores="cm7_MIMX8MN6xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="src">
        <files mask="fsl_gpt.c"/>
      </source>
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_gpt.h"/>
      </source>
    </component>
    <component id="platform.drivers.igpio.MIMX8MN6" name="gpio" brief="GPIO Driver" version="2.0.3" full_name="igpio" devices="MIMX8MN6xxxJZ" dependency="device.MIMX8MN6_CMSIS.MIMX8MN6 platform.Include_common.MIMX8MN6 platform.Include_core_cm7.MIMX8MN6 platform.Include_dsp.MIMX8MN6 platform.drivers.clock.MIMX8MN6 platform.drivers.common.MIMX8MN6" device_cores="cm7_MIMX8MN6xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="src">
        <files mask="fsl_gpio.c"/>
      </source>
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_gpio.h"/>
      </source>
    </component>
    <component id="platform.drivers.ii2c.MIMX8MN6" name="i2c" brief="I2C Driver" version="2.0.4" full_name="I2C Driver" devices="MIMX8MN6xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="src">
        <files mask="fsl_i2c.c"/>
      </source>
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_i2c.h"/>
      </source>
    </component>
    <component id="platform.drivers.iomuxc.MIMX8MN6" name="iomuxc" brief="IOMUXC Driver" version="2.0.0" full_name="IOMUXC Driver" devices="MIMX8MN6xxxJZ" dependency="device.MIMX8MN6_CMSIS.MIMX8MN6 platform.Include_common.MIMX8MN6 platform.Include_core_cm7.MIMX8MN6 platform.Include_dsp.MIMX8MN6 platform.drivers.clock.MIMX8MN6 platform.drivers.common.MIMX8MN6" device_cores="cm7_MIMX8MN6xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_iomuxc.h"/>
      </source>
    </component>
    <component id="platform.drivers.ipwm.MIMX8MN6" name="ipwm" brief="PWM Driver" version="2.0.0" full_name="PWM Driver" devices="MIMX8MN6xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="src">
        <files mask="fsl_pwm.c"/>
      </source>
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_pwm.h"/>
      </source>
    </component>
    <component id="platform.drivers.iuart.MIMX8MN6" name="iuart" brief="IUART Driver" version="2.0.0" full_name="IUART Driver" devices="MIMX8MN6xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="src">
        <files mask="fsl_uart.c"/>
      </source>
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_uart.h"/>
      </source>
    </component>
    <component id="platform.drivers.iuart_sdma.MIMX8MN6" name="iuart_sdma" brief="IUART SDMA Driver" version="2.0.0" full_name="IUART SDMA Driver" devices="MIMX8MN6xxxJZ" dependency="device.MIMX8MN6_CMSIS.MIMX8MN6 platform.Include_common.MIMX8MN6 platform.Include_core_cm7.MIMX8MN6 platform.Include_dsp.MIMX8MN6 platform.drivers.clock.MIMX8MN6 platform.drivers.common.MIMX8MN6 platform.drivers.iuart.MIMX8MN6 platform.drivers.sdma.MIMX8MN6" device_cores="cm7_MIMX8MN6xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="src">
        <files mask="fsl_uart_sdma.c"/>
      </source>
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_uart_sdma.h"/>
      </source>
    </component>
    <component id="platform.drivers.memory.MIMX8MN6" name="memory" brief="MEMORY Driver" version="2.0.0" full_name="Memory Driver" devices="MIMX8MN6xxxJZ" dependency="device.MIMX8MN6_CMSIS.MIMX8MN6 platform.Include_common.MIMX8MN6 platform.Include_core_cm7.MIMX8MN6 platform.Include_dsp.MIMX8MN6 platform.drivers.clock.MIMX8MN6 platform.drivers.common.MIMX8MN6" device_cores="cm7_MIMX8MN6xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_memory.h"/>
      </source>
    </component>
    <component id="platform.drivers.mu.MIMX8MN6" name="mu" brief="MU Driver" version="2.0.4" full_name="MU Driver" devices="MIMX8MN6xxxJZ" dependency="device.MIMX8MN6_CMSIS.MIMX8MN6 platform.Include_common.MIMX8MN6 platform.Include_core_cm7.MIMX8MN6 platform.Include_dsp.MIMX8MN6 platform.drivers.clock.MIMX8MN6 platform.drivers.common.MIMX8MN6" device_cores="cm7_MIMX8MN6xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="src">
        <files mask="fsl_mu.c"/>
      </source>
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_mu.h"/>
      </source>
    </component>
    <component id="platform.drivers.pdm.MIMX8MN6" name="pdm" brief="PDM Driver" version="2.1.1" full_name="PDM Driver" devices="MIMX8MN6xxxJZ" dependency="device.MIMX8MN6_CMSIS.MIMX8MN6 platform.Include_common.MIMX8MN6 platform.Include_core_cm7.MIMX8MN6 platform.Include_dsp.MIMX8MN6 platform.drivers.clock.MIMX8MN6 platform.drivers.common.MIMX8MN6" device_cores="cm7_MIMX8MN6xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="src">
        <files mask="fsl_pdm.c"/>
      </source>
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_pdm.h"/>
      </source>
    </component>
    <component id="platform.drivers.pdm_sdma.MIMX8MN6" name="pdm_sdma" brief="PDM SDMA Driver" version="2.1.1" full_name="PDM SDMA Driver" devices="MIMX8MN6xxxJZ" dependency="device.MIMX8MN6_CMSIS.MIMX8MN6 platform.Include_common.MIMX8MN6 platform.Include_core_cm7.MIMX8MN6 platform.Include_dsp.MIMX8MN6 platform.drivers.clock.MIMX8MN6 platform.drivers.common.MIMX8MN6 platform.drivers.pdm.MIMX8MN6" device_cores="cm7_MIMX8MN6xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="src">
        <files mask="fsl_pdm_sdma.c"/>
      </source>
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_pdm_sdma.h"/>
      </source>
    </component>
    <component id="platform.drivers.rdc.MIMX8MN6" name="rdc" brief="RDC Driver" version="2.0.1" full_name="RDC Driver" devices="MIMX8MN6xxxJZ" dependency="device.MIMX8MN6_CMSIS.MIMX8MN6 platform.Include_common.MIMX8MN6 platform.Include_core_cm7.MIMX8MN6 platform.Include_dsp.MIMX8MN6 platform.drivers.clock.MIMX8MN6 platform.drivers.common.MIMX8MN6" device_cores="cm7_MIMX8MN6xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="src">
        <files mask="fsl_rdc.c"/>
      </source>
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_rdc.h"/>
      </source>
    </component>
    <component id="platform.drivers.rdc_sema42.MIMX8MN6" name="rdc_sema42" brief="RDC SEMA42 Driver" version="2.0.1" full_name="RDC SEMA42 Driver" devices="MIMX8MN6xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="src">
        <files mask="fsl_rdc_sema42.c"/>
      </source>
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_rdc_sema42.h"/>
      </source>
    </component>
    <component id="platform.drivers.sai.MIMX8MN6" name="sai" brief="SAI Driver" version="2.2.2" full_name="SAI Driver" devices="MIMX8MN6xxxJZ" dependency="device.MIMX8MN6_CMSIS.MIMX8MN6 platform.Include_common.MIMX8MN6 platform.Include_core_cm7.MIMX8MN6 platform.Include_dsp.MIMX8MN6 platform.drivers.clock.MIMX8MN6 platform.drivers.common.MIMX8MN6" device_cores="cm7_MIMX8MN6xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="src">
        <files mask="fsl_sai.c"/>
      </source>
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_sai.h"/>
      </source>
    </component>
    <component id="platform.drivers.sai_sdma.MIMX8MN6" name="sai_sdma" brief="SAI SDMA Driver" version="2.2.0" full_name="SAI SDMA Driver" devices="MIMX8MN6xxxJZ" dependency="device.MIMX8MN6_CMSIS.MIMX8MN6 platform.Include_common.MIMX8MN6 platform.Include_core_cm7.MIMX8MN6 platform.Include_dsp.MIMX8MN6 platform.drivers.clock.MIMX8MN6 platform.drivers.common.MIMX8MN6 platform.drivers.sai.MIMX8MN6 platform.drivers.sdma.MIMX8MN6" device_cores="cm7_MIMX8MN6xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="src">
        <files mask="fsl_sai_sdma.c"/>
      </source>
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_sai_sdma.h"/>
      </source>
    </component>
    <component id="platform.drivers.sdma.MIMX8MN6" name="sdma" brief="SDMA Driver" version="2.3.0" full_name="SDMA Driver" devices="MIMX8MN6xxxJZ" dependency="device.MIMX8MN6_CMSIS.MIMX8MN6 platform.Include_common.MIMX8MN6 platform.Include_core_cm7.MIMX8MN6 platform.Include_dsp.MIMX8MN6 platform.drivers.clock.MIMX8MN6 platform.drivers.common.MIMX8MN6" device_cores="cm7_MIMX8MN6xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="src">
        <files mask="fsl_sdma.c"/>
      </source>
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_sdma.h"/>
        <files mask="fsl_sdma_script.h"/>
      </source>
    </component>
    <component id="platform.drivers.sema4.MIMX8MN6" name="sema4" brief="SEMA4 Driver" version="2.0.0" full_name="SEMA4 Driver" devices="MIMX8MN6xxxJZ" dependency="device.MIMX8MN6_CMSIS.MIMX8MN6 platform.Include_common.MIMX8MN6 platform.Include_core_cm7.MIMX8MN6 platform.Include_dsp.MIMX8MN6 platform.drivers.clock.MIMX8MN6 platform.drivers.common.MIMX8MN6" device_cores="cm7_MIMX8MN6xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="src">
        <files mask="fsl_sema4.c"/>
      </source>
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_sema4.h"/>
      </source>
    </component>
    <component id="driver.srtm.MIMX8MN6" name="srtm" version="1.0.0" devices="MIMX8MN6xxxJZ" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/srtm/include" target_path="srtm/include" type="c_include">
        <files mask="srtm_channel.h"/>
        <files mask="srtm_defs.h"/>
        <files mask="srtm_dispatcher.h"/>
        <files mask="srtm_message.h"/>
        <files mask="srtm_peercore.h"/>
        <files mask="srtm_service.h"/>
      </source>
      <source path="components/srtm/port" target_path="srtm/port" type="src">
        <files mask="srtm_message_pool.c"/>
      </source>
      <source path="components/srtm/srtm" target_path="srtm/srtm" type="src">
        <files mask="srtm_channel.c"/>
        <files mask="srtm_dispatcher.c"/>
        <files mask="srtm_message.c"/>
        <files mask="srtm_peercore.c"/>
        <files mask="srtm_service.c"/>
      </source>
      <source path="components/srtm/srtm" target_path="srtm/srtm" type="c_include">
        <files mask="srtm_channel_struct.h"/>
        <files mask="srtm_dispatcher_struct.h"/>
        <files mask="srtm_heap.h"/>
        <files mask="srtm_list.h"/>
        <files mask="srtm_message_pool.h"/>
        <files mask="srtm_message_struct.h"/>
        <files mask="srtm_mutex.h"/>
        <files mask="srtm_peercore_struct.h"/>
        <files mask="srtm_sem.h"/>
        <files mask="srtm_service_struct.h"/>
      </source>
    </component>
    <component id="driver.srtm.freertos.MIMX8MN6" name="freertos" version="1.0.0" devices="MIMX8MN6xxxJZ" dependency="driver.srtm.MIMX8MN6" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/srtm/port" target_path="srtm/port" type="src">
        <files mask="srtm_heap_freertos.c"/>
        <files mask="srtm_mutex_freertos.c"/>
        <files mask="srtm_sem_freertos.c"/>
      </source>
    </component>
    <component id="platform.drivers.tmu_1.MIMX8MN6" name="tmu" brief="TMU Driver" version="2.0.1" full_name="TMU Driver" devices="MIMX8MN6xxxJZ" dependency="device.MIMX8MN6_CMSIS.MIMX8MN6 platform.Include_common.MIMX8MN6 platform.Include_core_cm7.MIMX8MN6 platform.Include_dsp.MIMX8MN6 platform.drivers.clock.MIMX8MN6 platform.drivers.common.MIMX8MN6" device_cores="cm7_MIMX8MN6xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="src">
        <files mask="fsl_tmu.c"/>
      </source>
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_tmu.h"/>
      </source>
    </component>
    <component id="platform.drivers.wdog01.MIMX8MN6" name="wdog" brief="wdog01 Driver" version="2.1.0" full_name="wdog01 Driver" devices="MIMX8MN6xxxJZ" dependency="device.MIMX8MN6_CMSIS.MIMX8MN6 platform.Include_common.MIMX8MN6 platform.Include_core_cm7.MIMX8MN6 platform.Include_dsp.MIMX8MN6 platform.drivers.clock.MIMX8MN6 platform.drivers.common.MIMX8MN6" device_cores="cm7_MIMX8MN6xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="src">
        <files mask="fsl_wdog.c"/>
      </source>
      <source path="devices/MIMX8MN6/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_wdog.h"/>
      </source>
    </component>
    <component id="driver.wm8524.MIMX8MN6" name="wm8524" version="2.1.0" devices="MIMX8MN6xxxJZ" dependency="device.MIMX8MN6_CMSIS.MIMX8MN6 platform.Include_common.MIMX8MN6 platform.Include_core_cm7.MIMX8MN6 platform.Include_dsp.MIMX8MN6 platform.drivers.clock.MIMX8MN6 platform.drivers.common.MIMX8MN6" device_cores="cm7_MIMX8MN6xxxJZ" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/codec/wm8524" target_path="codec" type="src">
        <files mask="fsl_wm8524.c"/>
      </source>
      <source path="components/codec/wm8524" target_path="codec" type="c_include">
        <files mask="fsl_wm8524.h"/>
      </source>
    </component>
    <component id="middleware.baremetal.MIMX8MN6" name="baremetal" version="1.0.0" full_name="Baremetal" devices="MIMX8MN6xxxJZ" user_visible="true" type="OS">
      <defines>
        <define name="FSL_RTOS_BM" value=""/>
        <define name="SDK_OS_BAREMETAL" value=""/>
      </defines>
    </component>
    <component id="platform.utilities.misc_utilities.MIMX8MN6" name="misc_utilities" brief="Utilities which is needed for particular toolchain like the SBRK function required to address limitation between HEAP and STACK in GCC toolchain library." version="1.0.0" devices="MIMX8MN6xxxJZ" user_visible="true" type="utilities">
      <source toolchain="armgcc" path="devices/MIMX8MN6/utilities" target_path="utilities" type="src">
        <files mask="fsl_sbrk.c"/>
      </source>
    </component>
    <component id="platform.utilities.assert.MIMX8MN6" name="assert" version="1.0.0" devices="MIMX8MN6xxxJZ" dependency="component.lists.MIMX8MN6 component.serial_manager.MIMX8MN6 device.MIMX8MN6_CMSIS.MIMX8MN6 platform.Include_common.MIMX8MN6 platform.Include_core_cm7.MIMX8MN6 platform.Include_dsp.MIMX8MN6 platform.drivers.clock.MIMX8MN6 platform.drivers.common.MIMX8MN6 utility.debug_console.MIMX8MN6" device_cores="cm7_MIMX8MN6xxxJZ" user_visible="true" type="utilities">
      <source path="devices/MIMX8MN6/utilities" target_path="utilities" type="src">
        <files mask="fsl_assert.c"/>
      </source>
    </component>
    <component id="utility.debug_console.MIMX8MN6" name="debug_console" version="1.0.0" devices="MIMX8MN6xxxJZ" dependency="component.lists.MIMX8MN6 component.serial_manager.MIMX8MN6 device.MIMX8MN6_CMSIS.MIMX8MN6 platform.Include_common.MIMX8MN6 platform.Include_core_cm7.MIMX8MN6 platform.Include_dsp.MIMX8MN6 platform.drivers.clock.MIMX8MN6 platform.drivers.common.MIMX8MN6" device_cores="cm7_MIMX8MN6xxxJZ" user_visible="true" type="utilities">
      <source path="devices/MIMX8MN6/utilities/debug_console" target_path="utilities" type="src">
        <files mask="fsl_debug_console.c"/>
      </source>
      <source path="devices/MIMX8MN6/utilities/debug_console" target_path="utilities" type="c_include">
        <files mask="fsl_debug_console.h"/>
        <files mask="fsl_debug_console_conf.h"/>
      </source>
      <source path="devices/MIMX8MN6/utilities/str" target_path="utilities" type="src">
        <files mask="fsl_str.c"/>
      </source>
      <source path="devices/MIMX8MN6/utilities/str" target_path="utilities" type="c_include">
        <files mask="fsl_str.h"/>
      </source>
    </component>
    <component id="platform.CMSIS.MIMX8MN5" name="CMSIS" version="5.5.1" devices="MIMX8MN5xxxJZ" dependency="platform.CMSIS_Driver platform.CMSIS_Driver_Include.CAN_CMSISInclude.MIMX8MN5 platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MN5 platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.MIMX8MN5 platform.CMSIS_Driver_Include.Ethernet_MAC_CMSISInclude.MIMX8MN5 platform.CMSIS_Driver_Include.Ethernet_PHY_CMSISInclude.MIMX8MN5 platform.CMSIS_Driver_Include.Flash_CMSISInclude.MIMX8MN5 platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMX8MN5 platform.CMSIS_Driver_Include.MCI_CMSISInclude.MIMX8MN5 platform.CMSIS_Driver_Include.NAND_CMSISInclude.MIMX8MN5 platform.CMSIS_Driver_Include.SAI_CMSISInclude.MIMX8MN5 platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMX8MN5 platform.CMSIS_Driver_Include.USART_CMSISInclude.MIMX8MN5 platform.CMSIS_Driver_Include.USB_CMSISInclude.MIMX8MN5 platform.CMSIS_Driver_Include.USB_Device_CMSISInclude.MIMX8MN5 platform.CMSIS_Driver_Include.USB_Host_CMSISInclude.MIMX8MN5 platform.CMSIS_Driver_Include.WiFi_CMSISInclude.MIMX8MN5 platform.Include_common.MIMX8MN5 platform.Include_dsp.MIMX8MN5" user_visible="true" type="CMSIS">
      <source path="CMSIS/Include" target_path="src" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_math.h"/>
        <files mask="cmsis_armcc.h"/>
        <files mask="cmsis_armclang.h"/>
        <files mask="cmsis_armclang_ltm.h"/>
        <files mask="cmsis_compiler.h"/>
        <files mask="cmsis_gcc.h"/>
        <files mask="cmsis_iccarm.h"/>
        <files mask="cmsis_version.h"/>
        <files mask="core_armv81mml.h"/>
        <files mask="core_armv8mbl.h"/>
        <files mask="core_armv8mml.h"/>
        <files mask="core_cm0.h"/>
        <files mask="core_cm0plus.h"/>
        <files mask="core_cm1.h"/>
        <files mask="core_cm23.h"/>
        <files mask="core_cm3.h"/>
        <files mask="core_cm33.h"/>
        <files mask="core_cm35p.h"/>
        <files mask="core_cm4.h"/>
        <files mask="core_cm7.h"/>
        <files mask="core_dsp.h"/>
        <files mask="core_sc000.h"/>
        <files mask="core_sc300.h"/>
        <files mask="mpu_armv7.h"/>
        <files mask="mpu_armv8.h"/>
        <files mask="tz_context.h"/>
      </source>
      <source path="CMSIS" target_path="src" type="doc">
        <files mask="LICENSE.txt"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.CAN_CMSISInclude.MIMX8MN5" name="CAN" version="1.2.0" devices="MIMX8MN5xxxJZ" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MN5" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_CAN.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MN5" name="Common" version="2.7.0" devices="MIMX8MN5xxxJZ" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_Common.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.MIMX8MN5" name="Ethernet" version="2.1.0" devices="MIMX8MN5xxxJZ" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MN5" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_ETH.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.Ethernet_MAC_CMSISInclude.MIMX8MN5" name="Ethernet_MAC" version="2.1.0" devices="MIMX8MN5xxxJZ" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MN5 platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.MIMX8MN5" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_ETH_MAC.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.Ethernet_PHY_CMSISInclude.MIMX8MN5" name="Ethernet_PHY" version="2.1.0" devices="MIMX8MN5xxxJZ" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MN5 platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.MIMX8MN5" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_ETH_PHY.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.Flash_CMSISInclude.MIMX8MN5" name="Flash" version="2.2.0" devices="MIMX8MN5xxxJZ" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MN5" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_Flash.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMX8MN5" name="I2C" version="2.3.0" devices="MIMX8MN5xxxJZ" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MN5" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_I2C.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.MCI_CMSISInclude.MIMX8MN5" name="MCI" version="2.3.0" devices="MIMX8MN5xxxJZ" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MN5" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_MCI.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.NAND_CMSISInclude.MIMX8MN5" name="NAND" version="2.3.0" devices="MIMX8MN5xxxJZ" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MN5" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_NAND.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.SAI_CMSISInclude.MIMX8MN5" name="SAI" version="1.1.0" devices="MIMX8MN5xxxJZ" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MN5" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_SAI.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMX8MN5" name="SPI" version="2.2.0" devices="MIMX8MN5xxxJZ" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MN5" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_SPI.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.USART_CMSISInclude.MIMX8MN5" name="USART" version="2.3.0" devices="MIMX8MN5xxxJZ" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MN5" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_USART.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.USB_CMSISInclude.MIMX8MN5" name="USB" version="2.2.0" devices="MIMX8MN5xxxJZ" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MN5" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_USB.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.USB_Device_CMSISInclude.MIMX8MN5" name="USB_Device" version="2.2.0" devices="MIMX8MN5xxxJZ" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MN5 platform.CMSIS_Driver_Include.USB_CMSISInclude.MIMX8MN5" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_USBD.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.USB_Host_CMSISInclude.MIMX8MN5" name="USB_Host" version="2.2.0" devices="MIMX8MN5xxxJZ" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MN5 platform.CMSIS_Driver_Include.USB_CMSISInclude.MIMX8MN5" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_USBH.h"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver_Include.WiFi_CMSISInclude.MIMX8MN5" name="WiFi" version="1.0.0" devices="MIMX8MN5xxxJZ" dependency="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MN5" user_visible="false" type="CMSIS_driver">
      <source path="CMSIS/Driver/Include" target_path="CMSIS_driver" type="c_include">
        <files mask="Driver_WiFi.h"/>
      </source>
    </component>
    <component id="platform.Include_common.MIMX8MN5" name="CMSIS_Include_common" version="5.2.1" devices="MIMX8MN5xxxJZ" user_visible="true" type="CMSIS_Include">
      <source path="CMSIS/Include" target_path="CMSIS" type="c_include">
        <files mask="cmsis_armcc.h"/>
        <files mask="cmsis_armclang.h"/>
        <files mask="cmsis_armclang_ltm.h"/>
        <files mask="cmsis_compiler.h"/>
        <files mask="cmsis_gcc.h"/>
        <files mask="cmsis_iccarm.h"/>
        <files mask="cmsis_version.h"/>
        <files mask="core_armv81mml.h"/>
        <files mask="core_armv8mbl.h"/>
        <files mask="core_armv8mml.h"/>
        <files mask="mpu_armv7.h"/>
        <files mask="mpu_armv8.h"/>
      </source>
    </component>
    <component id="platform.Include_core_cm7.MIMX8MN5" name="CMSIS_Include_core_cm7" version="5.2.1" devices="MIMX8MN5xxxJZ" dependency="platform.Include_common.MIMX8MN5 platform.Include_dsp.MIMX8MN5" device_cores="cm7_MIMX8MN5xxxJZ" user_visible="true" type="CMSIS_Include">
      <source path="CMSIS/Include" target_path="CMSIS" type="c_include">
        <files mask="core_cm7.h"/>
      </source>
    </component>
    <component id="platform.Include_dsp.MIMX8MN5" name="CMSIS_Include_dsp" version="1.6.0" devices="MIMX8MN5xxxJZ" user_visible="true" type="CMSIS_Include">
      <source path="CMSIS/Include" target_path="CMSIS" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_math.h"/>
      </source>
    </component>
    <component id="project_template.MIMX8MN5.MIMX8MN5" name="MIMX8MN5" version="1.0.0" devices="MIMX8MN5xxxJZ" dependency="component.lists.MIMX8MN5 component.serial_manager.MIMX8MN5 device.MIMX8MN5_CMSIS.MIMX8MN5 device.MIMX8MN5_startup.MIMX8MN5 platform.Include_common.MIMX8MN5 platform.Include_core_cm7.MIMX8MN5 platform.Include_dsp.MIMX8MN5 platform.drivers.clock.MIMX8MN5 platform.drivers.common.MIMX8MN5 platform.drivers.iuart.MIMX8MN5 platform.drivers.rdc.MIMX8MN5 platform.utilities.assert.MIMX8MN5 utility.debug_console.MIMX8MN5" device_cores="cm7_MIMX8MN5xxxJZ" category="Board Support/SDK Project Template" user_visible="true" type="project_template">
      <source path="devices/MIMX8MN5/project_template" target_path="board" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="peripherals.c"/>
        <files mask="pin_mux.c"/>
      </source>
      <source path="devices/MIMX8MN5/project_template" target_path="board" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="peripherals.h"/>
        <files mask="pin_mux.h"/>
      </source>
    </component>
    <component id="RTE_Device.MIMX8MN5" name="RTE_Device" version="1.0.0" devices="MIMX8MN5xxxJZ" category="Device/SDK Project Template" user_visible="true" type="project_template">
      <source path="devices/MIMX8MN5/template" target_path="board" type="c_include">
        <files mask="RTE_Device.h"/>
      </source>
    </component>
    <component id="tools.MIMX8MN5" name="cmake_toolchain" version="1.0.0" devices="MIMX8MN5xxxJZ" user_visible="true" type="other">
      <source path="tools/cmake_toolchain_files" target_path="src" type="script">
        <files mask="armgcc.cmake"/>
        <files mask="armgcc_force_cpp.cmake"/>
        <files mask="xcc.cmake"/>
      </source>
    </component>
    <component id="component.lists.MIMX8MN5" name="lists" version="1.0.0" devices="MIMX8MN5xxxJZ" dependency="device.MIMX8MN5_CMSIS.MIMX8MN5 platform.Include_common.MIMX8MN5 platform.Include_core_cm7.MIMX8MN5 platform.Include_dsp.MIMX8MN5 platform.drivers.clock.MIMX8MN5 platform.drivers.common.MIMX8MN5" device_cores="cm7_MIMX8MN5xxxJZ" category="Device/SDK Drivers" user_visible="true" type="other">
      <source path="components/lists" target_path="component/lists" type="src">
        <files mask="generic_list.c"/>
      </source>
      <source path="components/lists" target_path="component/lists" type="c_include">
        <files mask="generic_list.h"/>
      </source>
    </component>
    <component id="component.serial_manager.MIMX8MN5" name="serial_manager" version="1.0.0" full_name="Serial Manager" devices="MIMX8MN5xxxJZ" dependency="component.lists.MIMX8MN5 device.MIMX8MN5_CMSIS.MIMX8MN5 platform.Include_common.MIMX8MN5 platform.Include_core_cm7.MIMX8MN5 platform.Include_dsp.MIMX8MN5 platform.drivers.clock.MIMX8MN5 platform.drivers.common.MIMX8MN5" device_cores="cm7_MIMX8MN5xxxJZ" user_visible="true" type="utilities">
      <source path="components/serial_manager" target_path="component/serial_manager" type="src">
        <files mask="serial_manager.c"/>
      </source>
      <source path="components/serial_manager" target_path="component/serial_manager" type="c_include">
        <files mask="serial_manager.h"/>
        <files mask="serial_port_internal.h"/>
      </source>
    </component>
    <component id="device.MIMX8MN5_CMSIS.MIMX8MN5" name="MIMX8MN5_CMSIS" version="1.0.0" devices="MIMX8MN5xxxJZ" dependency="platform.Include_common.MIMX8MN5 platform.Include_core_cm7.MIMX8MN5 platform.Include_dsp.MIMX8MN5" device_cores="cm7_MIMX8MN5xxxJZ" user_visible="true" type="CMSIS_Include">
      <source path="devices/MIMX8MN5" target_path="device" type="c_include">
        <files mask="MIMX8MN5_cm7.h"/>
        <files mask="MIMX8MN5_cm7_features.h"/>
        <files mask="fsl_device_registers.h"/>
        <files mask="system_MIMX8MN5_cm7.h"/>
      </source>
      <source path="devices/MIMX8MN5" target_path="device" type="src">
        <files mask="system_MIMX8MN5_cm7.c"/>
      </source>
    </component>
    <component id="device.MIMX8MN5_debugger.MIMX8MN5" name="MIMX8MN5_debugger" version="1.0.0" devices="MIMX8MN5xxxJZ" user_visible="true" type="debugger">
      <source path="devices/MIMX8MN5" target_path="src" type="xml">
        <files mask="MIMX8MN5_cm7.xml"/>
      </source>
    </component>
    <component id="platform.devices.MIMX8MN5_linker.MIMX8MN5" name="MIMX8MN5_linker" version="1.0.0" devices="MIMX8MN5xxxJZ" user_visible="true" type="linker">
      <source toolchain="armgcc" path="devices/MIMX8MN5/gcc" target_path="src" type="linker">
        <files mask="MIMX8MN5xxxxx_cm7_ddr_ram.ld"/>
        <files mask="MIMX8MN5xxxxx_cm7_flash.ld"/>
        <files mask="MIMX8MN5xxxxx_cm7_ram.ld"/>
      </source>
      <source toolchain="iar" path="devices/MIMX8MN5/iar" target_path="src" type="linker">
        <files mask="MIMX8MN5xxxxx_cm7_ddr_ram.icf"/>
        <files mask="MIMX8MN5xxxxx_cm7_flash.icf"/>
        <files mask="MIMX8MN5xxxxx_cm7_ram.icf"/>
      </source>
    </component>
    <component id="device.MIMX8MN5_startup.MIMX8MN5" name="MIMX8MN5_startup" version="1.0.0" devices="MIMX8MN5xxxJZ" category="Device/Startup" user_visible="true" type="startup">
      <source toolchain="armgcc" path="devices/MIMX8MN5/gcc" target_path="startup" type="asm_include">
        <files mask="startup_MIMX8MN5_cm7.S"/>
      </source>
      <source toolchain="iar" path="devices/MIMX8MN5/iar" target_path="startup" type="asm_include">
        <files mask="startup_MIMX8MN5_cm7.s"/>
      </source>
    </component>
    <component id="docs.images.MIMX8MN5" name="images" version="1.0.0" devices="MIMX8MN5xxxJZ" user_visible="true" type="documentation">
      <source path="docs/images" target_path="src" type="image">
        <files mask="device.jpg"/>
      </source>
    </component>
    <component id="platform.drivers.clock.MIMX8MN5" name="clock" brief="Clock Driver" version="2.1.0" full_name="Clock Driver" devices="MIMX8MN5xxxJZ" dependency="device.MIMX8MN5_CMSIS.MIMX8MN5 platform.Include_common.MIMX8MN5 platform.Include_core_cm7.MIMX8MN5 platform.Include_dsp.MIMX8MN5 platform.drivers.common.MIMX8MN5" device_cores="cm7_MIMX8MN5xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="src">
        <files mask="fsl_clock.c"/>
      </source>
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_clock.h"/>
      </source>
    </component>
    <component id="platform.drivers.ecspi_cmsis.MIMX8MN5" name="ecspi_cmsis" brief="ECSPI CMSIS Driver" version="2.0.0" full_name="ECSPI CMSIS Driver" devices="MIMX8MN5xxxJZ" dependency="RTE_Device.MIMX8MN5 device.MIMX8MN5_CMSIS.MIMX8MN5 platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MN5 platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMX8MN5 platform.Include_common.MIMX8MN5 platform.Include_core_cm7.MIMX8MN5 platform.Include_dsp.MIMX8MN5 platform.drivers.clock.MIMX8MN5 platform.drivers.common.MIMX8MN5 platform.drivers.ecspi.MIMX8MN5" device_cores="cm7_MIMX8MN5xxxJZ" user_visible="true" type="CMSIS_driver">
      <source path="devices/MIMX8MN5/cmsis_drivers" target_path="drivers" type="src">
        <files mask="fsl_ecspi_cmsis.c"/>
      </source>
      <source path="devices/MIMX8MN5/cmsis_drivers" target_path="drivers" type="c_include">
        <files mask="fsl_ecspi_cmsis.h"/>
      </source>
    </component>
    <component id="platform.drivers.ii2c_cmsis.MIMX8MN5" name="i2c_cmsis" brief="I2C CMSIS Driver" version="2.0.0" full_name="II2C CMSIS Driver" devices="MIMX8MN5xxxJZ" dependency="RTE_Device.MIMX8MN5 platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MN5 platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMX8MN5 platform.drivers.ii2c.MIMX8MN5" user_visible="true" type="CMSIS_driver">
      <source path="devices/MIMX8MN5/cmsis_drivers" target_path="drivers" type="src">
        <files mask="fsl_i2c_cmsis.c"/>
      </source>
      <source path="devices/MIMX8MN5/cmsis_drivers" target_path="drivers" type="c_include">
        <files mask="fsl_i2c_cmsis.h"/>
      </source>
    </component>
    <component id="platform.drivers.iuart_cmsis.MIMX8MN5" name="uart_cmsis" brief="UART CMSIS Driver" version="2.0.0" full_name="IUART CMSIS Driver" devices="MIMX8MN5xxxJZ" dependency="RTE_Device.MIMX8MN5 platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMX8MN5 platform.CMSIS_Driver_Include.USART_CMSISInclude.MIMX8MN5 platform.drivers.iuart.MIMX8MN5" user_visible="true" type="CMSIS_driver">
      <source path="devices/MIMX8MN5/cmsis_drivers" target_path="drivers" type="src">
        <files mask="fsl_uart_cmsis.c"/>
      </source>
      <source path="devices/MIMX8MN5/cmsis_drivers" target_path="drivers" type="c_include">
        <files mask="fsl_uart_cmsis.h"/>
      </source>
    </component>
    <component id="platform.drivers.common.MIMX8MN5" name="common" brief="COMMON Driver" version="2.1.3" full_name="COMMON Driver" devices="MIMX8MN5xxxJZ" dependency="device.MIMX8MN5_CMSIS.MIMX8MN5 platform.Include_common.MIMX8MN5 platform.Include_core_cm7.MIMX8MN5 platform.Include_dsp.MIMX8MN5 platform.drivers.clock.MIMX8MN5" device_cores="cm7_MIMX8MN5xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="src">
        <files mask="fsl_common.c"/>
      </source>
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_common.h"/>
      </source>
    </component>
    <component id="platform.drivers.easrc.MIMX8MN5" name="asrc" brief="asrc Driver" version="2.0.1" full_name="asrc Driver" devices="MIMX8MN5xxxJZ" dependency="device.MIMX8MN5_CMSIS.MIMX8MN5 platform.Include_common.MIMX8MN5 platform.Include_core_cm7.MIMX8MN5 platform.Include_dsp.MIMX8MN5 platform.drivers.clock.MIMX8MN5 platform.drivers.common.MIMX8MN5" device_cores="cm7_MIMX8MN5xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="src">
        <files mask="fsl_asrc.c"/>
      </source>
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_asrc.h"/>
        <files mask="fsl_asrc_firmware.h"/>
      </source>
    </component>
    <component id="platform.drivers.easrc_sdma.MIMX8MN5" name="asrc_sdma" brief="asrc_sdma Driver" version="2.0.1" full_name="asrc_m2m_sdma Driver" devices="MIMX8MN5xxxJZ" dependency="device.MIMX8MN5_CMSIS.MIMX8MN5 platform.Include_common.MIMX8MN5 platform.Include_core_cm7.MIMX8MN5 platform.Include_dsp.MIMX8MN5 platform.drivers.clock.MIMX8MN5 platform.drivers.common.MIMX8MN5 platform.drivers.easrc.MIMX8MN5" device_cores="cm7_MIMX8MN5xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="src">
        <files mask="fsl_asrc_sdma.c"/>
      </source>
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_asrc_sdma.h"/>
      </source>
    </component>
    <component id="platform.drivers.ecspi.MIMX8MN5" name="ecspi" brief="ECSPI Driver" version="2.0.0" full_name="ECSPI Driver" devices="MIMX8MN5xxxJZ" dependency="device.MIMX8MN5_CMSIS.MIMX8MN5 platform.Include_common.MIMX8MN5 platform.Include_core_cm7.MIMX8MN5 platform.Include_dsp.MIMX8MN5 platform.drivers.clock.MIMX8MN5 platform.drivers.common.MIMX8MN5" device_cores="cm7_MIMX8MN5xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="src">
        <files mask="fsl_ecspi.c"/>
      </source>
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_ecspi.h"/>
      </source>
    </component>
    <component id="platform.drivers.ecspi_sdma.MIMX8MN5" name="ecspi_sdma" brief="ECSPI SDMA Driver" version="2.0.0" full_name="ECSPI SDMA Driver" devices="MIMX8MN5xxxJZ" dependency="device.MIMX8MN5_CMSIS.MIMX8MN5 platform.Include_common.MIMX8MN5 platform.Include_core_cm7.MIMX8MN5 platform.Include_dsp.MIMX8MN5 platform.drivers.clock.MIMX8MN5 platform.drivers.common.MIMX8MN5 platform.drivers.ecspi.MIMX8MN5 platform.drivers.sdma.MIMX8MN5" device_cores="cm7_MIMX8MN5xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="src">
        <files mask="fsl_ecspi_sdma.c"/>
      </source>
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_ecspi_sdma.h"/>
      </source>
    </component>
    <component id="platform.drivers.gpc_2.MIMX8MN5" name="gpc" brief="GPC Driver" version="2.1.0" full_name="GPC Driver" devices="MIMX8MN5xxxJZ" dependency="device.MIMX8MN5_CMSIS.MIMX8MN5 platform.Include_common.MIMX8MN5 platform.Include_core_cm7.MIMX8MN5 platform.Include_dsp.MIMX8MN5 platform.drivers.clock.MIMX8MN5 platform.drivers.common.MIMX8MN5" device_cores="cm7_MIMX8MN5xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="src">
        <files mask="fsl_gpc.c"/>
      </source>
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_gpc.h"/>
      </source>
    </component>
    <component id="platform.drivers.gpt.MIMX8MN5" name="gpt" brief="GPT Driver" version="2.0.0" full_name="GPT Driver" devices="MIMX8MN5xxxJZ" dependency="device.MIMX8MN5_CMSIS.MIMX8MN5 platform.Include_common.MIMX8MN5 platform.Include_core_cm7.MIMX8MN5 platform.Include_dsp.MIMX8MN5 platform.drivers.clock.MIMX8MN5 platform.drivers.common.MIMX8MN5" device_cores="cm7_MIMX8MN5xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="src">
        <files mask="fsl_gpt.c"/>
      </source>
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_gpt.h"/>
      </source>
    </component>
    <component id="platform.drivers.igpio.MIMX8MN5" name="gpio" brief="GPIO Driver" version="2.0.3" full_name="igpio" devices="MIMX8MN5xxxJZ" dependency="device.MIMX8MN5_CMSIS.MIMX8MN5 platform.Include_common.MIMX8MN5 platform.Include_core_cm7.MIMX8MN5 platform.Include_dsp.MIMX8MN5 platform.drivers.clock.MIMX8MN5 platform.drivers.common.MIMX8MN5" device_cores="cm7_MIMX8MN5xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="src">
        <files mask="fsl_gpio.c"/>
      </source>
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_gpio.h"/>
      </source>
    </component>
    <component id="platform.drivers.ii2c.MIMX8MN5" name="i2c" brief="I2C Driver" version="2.0.4" full_name="I2C Driver" devices="MIMX8MN5xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="src">
        <files mask="fsl_i2c.c"/>
      </source>
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_i2c.h"/>
      </source>
    </component>
    <component id="platform.drivers.iomuxc.MIMX8MN5" name="iomuxc" brief="IOMUXC Driver" version="2.0.0" full_name="IOMUXC Driver" devices="MIMX8MN5xxxJZ" dependency="device.MIMX8MN5_CMSIS.MIMX8MN5 platform.Include_common.MIMX8MN5 platform.Include_core_cm7.MIMX8MN5 platform.Include_dsp.MIMX8MN5 platform.drivers.clock.MIMX8MN5 platform.drivers.common.MIMX8MN5" device_cores="cm7_MIMX8MN5xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_iomuxc.h"/>
      </source>
    </component>
    <component id="platform.drivers.ipwm.MIMX8MN5" name="ipwm" brief="PWM Driver" version="2.0.0" full_name="PWM Driver" devices="MIMX8MN5xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="src">
        <files mask="fsl_pwm.c"/>
      </source>
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_pwm.h"/>
      </source>
    </component>
    <component id="platform.drivers.iuart.MIMX8MN5" name="iuart" brief="IUART Driver" version="2.0.0" full_name="IUART Driver" devices="MIMX8MN5xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="src">
        <files mask="fsl_uart.c"/>
      </source>
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_uart.h"/>
      </source>
    </component>
    <component id="platform.drivers.iuart_sdma.MIMX8MN5" name="iuart_sdma" brief="IUART SDMA Driver" version="2.0.0" full_name="IUART SDMA Driver" devices="MIMX8MN5xxxJZ" dependency="device.MIMX8MN5_CMSIS.MIMX8MN5 platform.Include_common.MIMX8MN5 platform.Include_core_cm7.MIMX8MN5 platform.Include_dsp.MIMX8MN5 platform.drivers.clock.MIMX8MN5 platform.drivers.common.MIMX8MN5 platform.drivers.iuart.MIMX8MN5 platform.drivers.sdma.MIMX8MN5" device_cores="cm7_MIMX8MN5xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="src">
        <files mask="fsl_uart_sdma.c"/>
      </source>
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_uart_sdma.h"/>
      </source>
    </component>
    <component id="platform.drivers.memory.MIMX8MN5" name="memory" brief="MEMORY Driver" version="2.0.0" full_name="Memory Driver" devices="MIMX8MN5xxxJZ" dependency="device.MIMX8MN5_CMSIS.MIMX8MN5 platform.Include_common.MIMX8MN5 platform.Include_core_cm7.MIMX8MN5 platform.Include_dsp.MIMX8MN5 platform.drivers.clock.MIMX8MN5 platform.drivers.common.MIMX8MN5" device_cores="cm7_MIMX8MN5xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_memory.h"/>
      </source>
    </component>
    <component id="platform.drivers.mu.MIMX8MN5" name="mu" brief="MU Driver" version="2.0.4" full_name="MU Driver" devices="MIMX8MN5xxxJZ" dependency="device.MIMX8MN5_CMSIS.MIMX8MN5 platform.Include_common.MIMX8MN5 platform.Include_core_cm7.MIMX8MN5 platform.Include_dsp.MIMX8MN5 platform.drivers.clock.MIMX8MN5 platform.drivers.common.MIMX8MN5" device_cores="cm7_MIMX8MN5xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="src">
        <files mask="fsl_mu.c"/>
      </source>
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_mu.h"/>
      </source>
    </component>
    <component id="platform.drivers.pdm.MIMX8MN5" name="pdm" brief="PDM Driver" version="2.1.1" full_name="PDM Driver" devices="MIMX8MN5xxxJZ" dependency="device.MIMX8MN5_CMSIS.MIMX8MN5 platform.Include_common.MIMX8MN5 platform.Include_core_cm7.MIMX8MN5 platform.Include_dsp.MIMX8MN5 platform.drivers.clock.MIMX8MN5 platform.drivers.common.MIMX8MN5" device_cores="cm7_MIMX8MN5xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="src">
        <files mask="fsl_pdm.c"/>
      </source>
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_pdm.h"/>
      </source>
    </component>
    <component id="platform.drivers.pdm_sdma.MIMX8MN5" name="pdm_sdma" brief="PDM SDMA Driver" version="2.1.1" full_name="PDM SDMA Driver" devices="MIMX8MN5xxxJZ" dependency="device.MIMX8MN5_CMSIS.MIMX8MN5 platform.Include_common.MIMX8MN5 platform.Include_core_cm7.MIMX8MN5 platform.Include_dsp.MIMX8MN5 platform.drivers.clock.MIMX8MN5 platform.drivers.common.MIMX8MN5 platform.drivers.pdm.MIMX8MN5" device_cores="cm7_MIMX8MN5xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="src">
        <files mask="fsl_pdm_sdma.c"/>
      </source>
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_pdm_sdma.h"/>
      </source>
    </component>
    <component id="platform.drivers.rdc.MIMX8MN5" name="rdc" brief="RDC Driver" version="2.0.1" full_name="RDC Driver" devices="MIMX8MN5xxxJZ" dependency="device.MIMX8MN5_CMSIS.MIMX8MN5 platform.Include_common.MIMX8MN5 platform.Include_core_cm7.MIMX8MN5 platform.Include_dsp.MIMX8MN5 platform.drivers.clock.MIMX8MN5 platform.drivers.common.MIMX8MN5" device_cores="cm7_MIMX8MN5xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="src">
        <files mask="fsl_rdc.c"/>
      </source>
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_rdc.h"/>
      </source>
    </component>
    <component id="platform.drivers.rdc_sema42.MIMX8MN5" name="rdc_sema42" brief="RDC SEMA42 Driver" version="2.0.1" full_name="RDC SEMA42 Driver" devices="MIMX8MN5xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="src">
        <files mask="fsl_rdc_sema42.c"/>
      </source>
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_rdc_sema42.h"/>
      </source>
    </component>
    <component id="platform.drivers.sai.MIMX8MN5" name="sai" brief="SAI Driver" version="2.2.2" full_name="SAI Driver" devices="MIMX8MN5xxxJZ" dependency="device.MIMX8MN5_CMSIS.MIMX8MN5 platform.Include_common.MIMX8MN5 platform.Include_core_cm7.MIMX8MN5 platform.Include_dsp.MIMX8MN5 platform.drivers.clock.MIMX8MN5 platform.drivers.common.MIMX8MN5" device_cores="cm7_MIMX8MN5xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="src">
        <files mask="fsl_sai.c"/>
      </source>
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_sai.h"/>
      </source>
    </component>
    <component id="platform.drivers.sai_sdma.MIMX8MN5" name="sai_sdma" brief="SAI SDMA Driver" version="2.2.0" full_name="SAI SDMA Driver" devices="MIMX8MN5xxxJZ" dependency="device.MIMX8MN5_CMSIS.MIMX8MN5 platform.Include_common.MIMX8MN5 platform.Include_core_cm7.MIMX8MN5 platform.Include_dsp.MIMX8MN5 platform.drivers.clock.MIMX8MN5 platform.drivers.common.MIMX8MN5 platform.drivers.sai.MIMX8MN5 platform.drivers.sdma.MIMX8MN5" device_cores="cm7_MIMX8MN5xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="src">
        <files mask="fsl_sai_sdma.c"/>
      </source>
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_sai_sdma.h"/>
      </source>
    </component>
    <component id="platform.drivers.sdma.MIMX8MN5" name="sdma" brief="SDMA Driver" version="2.3.0" full_name="SDMA Driver" devices="MIMX8MN5xxxJZ" dependency="device.MIMX8MN5_CMSIS.MIMX8MN5 platform.Include_common.MIMX8MN5 platform.Include_core_cm7.MIMX8MN5 platform.Include_dsp.MIMX8MN5 platform.drivers.clock.MIMX8MN5 platform.drivers.common.MIMX8MN5" device_cores="cm7_MIMX8MN5xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="src">
        <files mask="fsl_sdma.c"/>
      </source>
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_sdma.h"/>
        <files mask="fsl_sdma_script.h"/>
      </source>
    </component>
    <component id="platform.drivers.sema4.MIMX8MN5" name="sema4" brief="SEMA4 Driver" version="2.0.0" full_name="SEMA4 Driver" devices="MIMX8MN5xxxJZ" dependency="device.MIMX8MN5_CMSIS.MIMX8MN5 platform.Include_common.MIMX8MN5 platform.Include_core_cm7.MIMX8MN5 platform.Include_dsp.MIMX8MN5 platform.drivers.clock.MIMX8MN5 platform.drivers.common.MIMX8MN5" device_cores="cm7_MIMX8MN5xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="src">
        <files mask="fsl_sema4.c"/>
      </source>
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_sema4.h"/>
      </source>
    </component>
    <component id="platform.drivers.tmu_1.MIMX8MN5" name="tmu" brief="TMU Driver" version="2.0.1" full_name="TMU Driver" devices="MIMX8MN5xxxJZ" dependency="device.MIMX8MN5_CMSIS.MIMX8MN5 platform.Include_common.MIMX8MN5 platform.Include_core_cm7.MIMX8MN5 platform.Include_dsp.MIMX8MN5 platform.drivers.clock.MIMX8MN5 platform.drivers.common.MIMX8MN5" device_cores="cm7_MIMX8MN5xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="src">
        <files mask="fsl_tmu.c"/>
      </source>
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_tmu.h"/>
      </source>
    </component>
    <component id="platform.drivers.wdog01.MIMX8MN5" name="wdog" brief="wdog01 Driver" version="2.1.0" full_name="wdog01 Driver" devices="MIMX8MN5xxxJZ" dependency="device.MIMX8MN5_CMSIS.MIMX8MN5 platform.Include_common.MIMX8MN5 platform.Include_core_cm7.MIMX8MN5 platform.Include_dsp.MIMX8MN5 platform.drivers.clock.MIMX8MN5 platform.drivers.common.MIMX8MN5" device_cores="cm7_MIMX8MN5xxxJZ" user_visible="true" type="driver">
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="src">
        <files mask="fsl_wdog.c"/>
      </source>
      <source path="devices/MIMX8MN5/drivers" target_path="drivers" type="c_include">
        <files mask="fsl_wdog.h"/>
      </source>
    </component>
    <component id="middleware.baremetal.MIMX8MN5" name="baremetal" version="1.0.0" full_name="Baremetal" devices="MIMX8MN5xxxJZ" user_visible="true" type="OS">
      <defines>
        <define name="FSL_RTOS_BM" value=""/>
        <define name="SDK_OS_BAREMETAL" value=""/>
      </defines>
    </component>
    <component id="platform.utilities.misc_utilities.MIMX8MN5" name="misc_utilities" brief="Utilities which is needed for particular toolchain like the SBRK function required to address limitation between HEAP and STACK in GCC toolchain library." version="1.0.0" devices="MIMX8MN5xxxJZ" user_visible="true" type="utilities">
      <source toolchain="armgcc" path="devices/MIMX8MN5/utilities" target_path="utilities" type="src">
        <files mask="fsl_sbrk.c"/>
      </source>
    </component>
    <component id="platform.utilities.assert.MIMX8MN5" name="assert" version="1.0.0" devices="MIMX8MN5xxxJZ" dependency="component.lists.MIMX8MN5 component.serial_manager.MIMX8MN5 device.MIMX8MN5_CMSIS.MIMX8MN5 platform.Include_common.MIMX8MN5 platform.Include_core_cm7.MIMX8MN5 platform.Include_dsp.MIMX8MN5 platform.drivers.clock.MIMX8MN5 platform.drivers.common.MIMX8MN5 utility.debug_console.MIMX8MN5" device_cores="cm7_MIMX8MN5xxxJZ" user_visible="true" type="utilities">
      <source path="devices/MIMX8MN5/utilities" target_path="utilities" type="src">
        <files mask="fsl_assert.c"/>
      </source>
    </component>
    <component id="utility.debug_console.MIMX8MN5" name="debug_console" version="1.0.0" devices="MIMX8MN5xxxJZ" dependency="component.lists.MIMX8MN5 component.serial_manager.MIMX8MN5 device.MIMX8MN5_CMSIS.MIMX8MN5 platform.Include_common.MIMX8MN5 platform.Include_core_cm7.MIMX8MN5 platform.Include_dsp.MIMX8MN5 platform.drivers.clock.MIMX8MN5 platform.drivers.common.MIMX8MN5" device_cores="cm7_MIMX8MN5xxxJZ" user_visible="true" type="utilities">
      <source path="devices/MIMX8MN5/utilities/debug_console" target_path="utilities" type="src">
        <files mask="fsl_debug_console.c"/>
      </source>
      <source path="devices/MIMX8MN5/utilities/debug_console" target_path="utilities" type="c_include">
        <files mask="fsl_debug_console.h"/>
        <files mask="fsl_debug_console_conf.h"/>
      </source>
      <source path="devices/MIMX8MN5/utilities/str" target_path="utilities" type="src">
        <files mask="fsl_str.c"/>
      </source>
      <source path="devices/MIMX8MN5/utilities/str" target_path="utilities" type="c_include">
        <files mask="fsl_str.h"/>
      </source>
    </component>
  </components>
</ksdk:manifest>
