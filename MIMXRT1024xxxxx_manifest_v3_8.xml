<?xml version="1.0" encoding="UTF-8"?>
<ksdk:manifest xmlns:ksdk="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="SDK_2.x_MIMXRT1024xxxxx" name="MIMXRT1024xxxxx" brief="This is SDK version 2.9.0 manifest file. It describes the content of the MIMXRT1024xxxxx and additional settings for tools that support SDK version 2.9.0" format_version="3.8" api_version="2.0.0" configuration="3a85c9bec501a3007deaf06c6da340a1" xsi:schemaLocation="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd http://nxp.com/mcuxpresso/sdk/sdk_manifest_v3.8.xsd">
  <!--Timestamp (UTC): 2021-01-15 21:21:47.185366-->
  <!--This manifest is generated based on sdk repo commit: 3073e476325c80265f0c6d9a806af8fd0bfd767b-->
  <defines>
    <define name="CPU_$|package|" value=""/>
    <define name="CPU_$|package|_$|core|" value=""/>
  </defines>
  <ksdk id="MCUXpresso290" name="MCUXpresso290" version="2.9.0" revision="435 2021-01-15"/>
  <compilers>
    <compiler id="compiler_armclang" name="armclang" type="armclang"/>
    <compiler id="compiler_gcc" name="gcc" type="gcc"/>
    <compiler id="compiler_iar" name="iar" type="iar"/>
  </compilers>
  <toolchainSettings>
    <toolchainSetting id="com.nxp.mcuxpresso" name="mcuxpresso" version="11.3.0" full_name="MCUXpresso IDE" compiler="compiler_gcc" toolchain="mcuxpresso">
      <option id="gnu.cpp.compiler.option.optimization.flags" type="string" user_name="">
        <value>-fno-common</value>
      </option>
      <option id="gnu.c.compiler.option.optimization.flags" type="string" user_name="">
        <value>-fno-common</value>
      </option>
      <option id="gnu.cpp.link.option.nostdlibs" type="boolean" user_name="">
        <value>true</value>
      </option>
      <option id="com.crt.advproject.link.cpp.flashconfigenable" type="boolean" user_name="">
        <value>true</value>
      </option>
      <option id="com.crt.advproject.link.flashconfigenable" type="boolean" user_name="">
        <value>true</value>
      </option>
      <option id="gnu.c.link.option.nostdlibs" type="boolean" user_name="">
        <value>true</value>
      </option>
    </toolchainSetting>
  </toolchainSettings>
  <toolchains>
    <toolchain id="armgcc" name="GCC_ARM_Embedded" version="9.3.1" full_name="GCC ARM Embedded" compiler="compiler_gcc" type="armgcc" vendor="GCC ARM Embedded" vendor_url="http://launchpad.net/gcc-arm-embedded"/>
    <toolchain id="mdk" name="Keil_MDK" version="5.33" full_name="Keil MDK" compiler="compiler_armclang" type="mdk" vendor="ARM" vendor_url="http://www.arm.com"/>
    <toolchain id="iar" name="IAR_Embedded_Workbench_for_ARM" version="8.50.9" full_name="IAR Embedded Workbench for ARM" compiler="compiler_iar" type="iar" vendor="IAR Systems" vendor_url="http://www.iar.com"/>
    <toolchain id="mcuxpresso" name="MCUXpresso_IDE" version="11.3.0" full_name="MCUXpresso IDE" compiler="compiler_gcc" type="mcuxpresso" vendor="NXP Semiconductors" vendor_url="http://www.nxp.com">
      <debug>
        <debug_configuration id="com.crt.advproject.config.exe.release" name="Release Configuration" probe="LinkServer">
          <scripts>
            <script type="init" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>
set remotetimeout 60000
##target_extended_remote##
set mem inaccessible-by-default ${mem.access}
mon ondisconnect ${ondisconnect}
set arm force-mode thumb
${load}</script>
            </script>
            <script type="run" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>${run}</script>
            </script>
          </scripts>
          <params>
            <params id="vector.catch.release.mcuxpresso" name="vector.catch" value="false"/>
            <params id="internal.cache.release.mcuxpresso" name="internal.cache" value="Disable"/>
          </params>
        </debug_configuration>
        <debug_configuration id="com.crt.advproject.config.exe.debug" name="Debug Configuration" probe="LinkServer">
          <scripts>
            <script type="init" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>
set remotetimeout 60000
##target_extended_remote##
set mem inaccessible-by-default ${mem.access}
mon ondisconnect ${ondisconnect}
set arm force-mode thumb
${load}</script>
            </script>
            <script type="run" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>${run}</script>
            </script>
          </scripts>
          <params>
            <params id="vector.catch.debug.mcuxpresso" name="vector.catch" value="false"/>
            <params id="internal.cache.debug.mcuxpresso" name="internal.cache" value="Disable"/>
          </params>
        </debug_configuration>
        <debug_configuration id="com.nxp.mcuxpresso.core.debug.support.segger.debug" name="Debug Configuration" probe="Segger"/>
        <debug_configuration id="com.nxp.mcuxpresso.core.debug.support.segger.release" name="Release Configuration" probe="Segger"/>
      </debug>
    </toolchain>
  </toolchains>
  <boards>
    <board id="evkmimxrt1024" name="MIMXRT1024-EVK" href="https://www.nxp.com/pip/MIMXRT1024-EVK" version="1.0.0" package="MIMXRT1024DAG5A">
      <description>i.MX RT1024 Evaluation Kit</description>
      <image path="boards/evkmimxrt1024" type="image">
        <files mask="evkmimxrt1024.png"/>
      </image>
      <memory>
        <memoryBlock id="PROGRAM_FLASH_evkmimxrt1024" name="PROGRAM_FLASH" addr="60000000" size="00400000" type="Flash" access="RO"/>
        <memoryBlock id="BOARD_SDRAM_evkmimxrt1024" name="BOARD_SDRAM" addr="80000000" size="01e00000" type="RAM" access="RW"/>
        <memoryBlock id="NCACHE_REGION_evkmimxrt1024" name="NCACHE_REGION" addr="81e00000" size="00200000" type="RAM" access="RW"/>
      </memory>
      <total_memory flash_size_kb="8192" ram_size_kb="32768"/>
      <examples>
        <example id="evkmimxrt1024_adc_12b1msps_sar_interrupt" name="adc_12b1msps_sar_interrupt" brief="The adc_interrupt example shows how to use interrupt with adc driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the adc'ssample input. When running the project, typing any key into debug console would trigger the conversion. ADC interrupt would be asserted once the conversion is completed. In ADC ISR, the conversion completed flag would be cleared by reading the conversion result value. Also, the conversion result value is stored, and the ISR counter is increased. These information would be printed when the execution return to the main loop.The point is that the adc interrupt configuration is set when configuring the adc's conversion channel. When in software trigger mode, the conversion would be launched by the operation of configuring channel, just like writing aconversion command. So if user wants to generate the interrupt every time the conversion is completed, the channel's configuration with enabling interrupt setting would be used for each conversion." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/adc" path="boards/evkmimxrt1024/driver_examples/adc/interrupt">
          <external path="boards/evkmimxrt1024/driver_examples/adc/interrupt" type="xml">
            <files mask="adc_12b1msps_sar_interrupt_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_adc_12b1msps_sar_polling" name="adc_12b1msps_sar_polling" brief="The adc_polling example shows the simplest way to use adc driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the adc'ssample input. When running the project, typing any key into debug console would trigger the conversion. The execution would check the conversion completed flag in loop until the flag is asserted, which means the conversion is completed. Then read the conversion result value and print it to debug console.Note, the default setting of initialization for the ADC converter is just an available configuration. User can changethe configuration structure's setting in application to fit the special requirement.The auto-calibration is not essential but strongly recommended. It can help to adjust the converter itself and improvethe adc's performance." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/adc" path="boards/evkmimxrt1024/driver_examples/adc/polling">
          <external path="boards/evkmimxrt1024/driver_examples/adc/polling" type="xml">
            <files mask="adc_12b1msps_sar_polling_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_adc_etc_hardware_trigger_conv" name="adc_etc_hardware_trigger_conv" brief="The adc_etc_software_trigger_conv example shows how to use the ADC_ETC to generate a ADC trigger by PIT channel0 trigger.Every 1 second, PIT channel0 would send a trigger signal to ADC_ETC, which can arbitrate and manage multiple external triggers,and ADC_ETC would generate ADC trigger.In this example, the ADC is configured with hardware trigger. Once ADC gets the trigger from the ADC_ETC, the conversion goes,then the ADC_ETC ISR would be executed." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/adc_etc" path="boards/evkmimxrt1024/driver_examples/adc_etc/adc_etc_hardware_trigger_conv">
          <external path="boards/evkmimxrt1024/driver_examples/adc_etc/adc_etc_hardware_trigger_conv" type="xml">
            <files mask="adc_etc_hardware_trigger_conv_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_adc_etc_software_trigger_conv" name="adc_etc_software_trigger_conv" brief="The adc_etc_software_trigger_conv example shows how to use the ADC_ETC to generate a ADC trigger by software trigger.In this example, the ADC is configured with hardware trigger. Once ADC gets the trigger from the ADC_ETC, the conversion goes,then the ADC_ETC ISR would be executed." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/adc_etc" path="boards/evkmimxrt1024/driver_examples/adc_etc/adc_etc_software_trigger_conv">
          <external path="boards/evkmimxrt1024/driver_examples/adc_etc/adc_etc_software_trigger_conv" type="xml">
            <files mask="adc_etc_software_trigger_conv_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_aws_device_configuration_enet" name="aws_device_configuration_enet" brief="This example demonstrates how the aws iot device can be configured by mobile application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="aws_examples" path="boards/evkmimxrt1024/aws_examples/device_configuration_enet">
          <external path="boards/evkmimxrt1024/aws_examples/device_configuration_enet" type="xml">
            <files mask="aws_device_configuration_enet_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_aws_greengrass_discovery_enet" name="aws_greengrass_discovery_enet" brief="This example demonstrates how the board can discover Greengrass core and communicate with AWS IoT cloud through it. You will need device (A Mac, Windows PC, or UNIX-like system) for running AWS Greengrass. Example will connect to WiFi network, try to discover your AWS Greengrass device and send Hello World message to AWS IoT cloud through it. This demo needs WiFi network with internet access and opened 8883 and 8443 ports." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="aws_examples" path="boards/evkmimxrt1024/aws_examples/greengrass_discovery_enet">
          <external path="boards/evkmimxrt1024/aws_examples/greengrass_discovery_enet" type="xml">
            <files mask="aws_greengrass_discovery_enet_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_aws_remote_control_enet" name="aws_remote_control_enet" brief="This example demonstrates how the board can be controlled by Android mobile application with usage the AWS IoT. User LEDs on the board can be controlled and also an action can be invoked to read data from accelerometer and report it to AWS IoT device shadow." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="aws_examples" path="boards/evkmimxrt1024/aws_examples/remote_control_enet">
          <external path="boards/evkmimxrt1024/aws_examples/remote_control_enet" type="xml">
            <files mask="aws_remote_control_enet_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_aws_shadow_enet" name="aws_shadow_enet" brief="The simple Shadow lightbulb example to illustrate how client application and things communicate with the Shadow service." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="aws_examples" path="boards/evkmimxrt1024/aws_examples/shadow_enet">
          <external path="boards/evkmimxrt1024/aws_examples/shadow_enet" type="xml">
            <files mask="aws_shadow_enet_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_aws_shadow_wiced" name="aws_shadow_wiced" brief="The simple Shadow lightbulb example to illustrate how client application and things communicate with the Shadow service." toolchain="armgcc iar mcuxpresso" compiler="compiler_gcc compiler_iar" category="aws_examples" path="boards/evkmimxrt1024/aws_examples/shadow_wifi_wiced_4343W">
          <external path="boards/evkmimxrt1024/aws_examples/shadow_wifi_wiced_4343W" type="xml">
            <files mask="aws_shadow_wiced_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_bee" name="bee" brief="This driver example should demonstrate how to setup BEE driver for on the fly decryption of data stored in QSPI memory region. The BEE is configuerd to decrypt all data starting from location 0x6000_0000 to 0x6001_0000 using AES ECB mode with user specified key. If the BEE_KEY_SEL fuse is programmed, then OTPMK key will be used instead.The example itself does not perform any data decryption operation over QSPI. It is used only as a BEE setup guide." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/bee" path="boards/evkmimxrt1024/driver_examples/bee">
          <external path="boards/evkmimxrt1024/driver_examples/bee" type="xml">
            <files mask="bee_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_bubble_peripheral" name="bubble_peripheral" brief="The bubble level demo demonstrates basic usage of the on-board accelerometer to implement a bubble level. A bubble level utilizes two axes to visually show deviation from a level plane (0 degrees) on a given axis. You can open the mex file with MCUXpresso Config Tool to do further configuration of pin, clock and peripheral." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkmimxrt1024/demo_apps/bubble_peripheral">
          <external path="boards/evkmimxrt1024/demo_apps/bubble_peripheral" type="xml">
            <files mask="bubble_peripheral_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_cache" name="cache" brief="The cache example shows how to use memory cache driver.In this example, many memory (such as SDRAM, etc) and DMA will be used to show the example.Those memory is both accessible for cpu and DMA. For the memory data alignment, cache driver should be used rightly. For cache enabled case, the cache invalidate operation should be done before cpu access the memory. The cache clean opeartion should be done after CPU verify the memorymemory and before DMA access the memory." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples" path="boards/evkmimxrt1024/driver_examples/cache">
          <external path="boards/evkmimxrt1024/driver_examples/cache" type="xml">
            <files mask="cache_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_ccm_clockout" name="ccm_clockout" brief="The ccm_clockout driver example shows how to output the internal clock signal. In this driver example, users can choose the clock signal to be outputted, and the divider of the output clock signal. By probing the output pin, users can observe the selected internal clock signal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples" path="boards/evkmimxrt1024/driver_examples/clockout">
          <external path="boards/evkmimxrt1024/driver_examples/clockout" type="xml">
            <files mask="ccm_clockout_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_cmp_interrupt" name="cmp_interrupt" brief="The CMP interrupt Example shows how to use interrupt with CMP driver.In this example, user should indicate an input channel to capture a voltage signal (can be controlled by user) as the CMP's positive channel input. On the negative side, the internal 6-bit DAC is used to generate the fixed voltage abouthalf value of reference voltage.When running the project, change the input voltage of user-defined channel, then the comparator's output would changebetween logic one and zero when the user-defined channel's voltage crosses the internal DAC's value. The change ofcomparator's output would generate the falling and rising edge events with their interrupts enabled. When any CMP interrupt happens, the CMP's ISR would turn on the LED light if detecting the output's rising edge, or turn off it whendetecting the output's falling edge." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/cmp" path="boards/evkmimxrt1024/driver_examples/cmp/interrupt">
          <external path="boards/evkmimxrt1024/driver_examples/cmp/interrupt" type="xml">
            <files mask="cmp_interrupt_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_cmp_polling" name="cmp_polling" brief="The CMP polling Example shows the simplest way to use CMP driver and help user with a quick start.In this example, user should indicate an input channel to capture a voltage signal (can be controlled by user) as the CMP's positive channel input. On the negative side, the internal 6-bit DAC is used to generate the fixed voltage abouthalf value of reference voltage.When running the project, change the input voltage of user-defined channel, then the comparator's output would changebetween logic one and zero when the user's voltage crosses the internal DAC's value. The endless loop in main() functionwould detect the logic value of comparator's output, and change the LED. The LED would be turned on when the compareoutput is logic one, or turned off when zero." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/cmp" path="boards/evkmimxrt1024/driver_examples/cmp/polling">
          <external path="boards/evkmimxrt1024/driver_examples/cmp/polling" type="xml">
            <files mask="cmp_polling_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_cmsis_enet_txrx_transfer" name="cmsis_enet_txrx_transfer" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide &#10;range of supported microcontroller devices. The API connects microcontroller peripherals with middleware &#10;that implements for example communication stacks, file systems, or graphic user interfaces. &#10;More information and usage method please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.&#10;&#10;The cmsis_enet_transfer example shows how to use CMSIS ENET driver:&#10;&#10;In this example, the ENET transmits 20 number broadcast frames and will print the received frame.&#10;&#10;" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/enet" path="boards/evkmimxrt1024/cmsis_driver_examples/enet/txrx_transfer">
          <external path="boards/evkmimxrt1024/cmsis_driver_examples/enet/txrx_transfer" type="xml">
            <files mask="cmsis_enet_txrx_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_cmsis_lpi2c_edma_b2b_transfer_master" name="cmsis_lpi2c_edma_b2b_transfer_master" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_edma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with EDMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpi2c" path="boards/evkmimxrt1024/cmsis_driver_examples/lpi2c/edma_b2b_transfer/master">
          <external path="boards/evkmimxrt1024/cmsis_driver_examples/lpi2c/edma_b2b_transfer/master" type="xml">
            <files mask="cmsis_lpi2c_edma_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_cmsis_lpi2c_edma_b2b_transfer_slave" name="cmsis_lpi2c_edma_b2b_transfer_slave" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_edma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with EDMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpi2c" path="boards/evkmimxrt1024/cmsis_driver_examples/lpi2c/edma_b2b_transfer/slave">
          <external path="boards/evkmimxrt1024/cmsis_driver_examples/lpi2c/edma_b2b_transfer/slave" type="xml">
            <files mask="cmsis_lpi2c_edma_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_cmsis_lpi2c_int_b2b_transfer_master" name="cmsis_lpi2c_int_b2b_transfer_master" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The lpi2c_int_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpi2c" path="boards/evkmimxrt1024/cmsis_driver_examples/lpi2c/int_b2b_transfer/master">
          <external path="boards/evkmimxrt1024/cmsis_driver_examples/lpi2c/int_b2b_transfer/master" type="xml">
            <files mask="cmsis_lpi2c_int_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_cmsis_lpi2c_int_b2b_transfer_slave" name="cmsis_lpi2c_int_b2b_transfer_slave" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The lpi2c_int_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpi2c" path="boards/evkmimxrt1024/cmsis_driver_examples/lpi2c/int_b2b_transfer/slave">
          <external path="boards/evkmimxrt1024/cmsis_driver_examples/lpi2c/int_b2b_transfer/slave" type="xml">
            <files mask="cmsis_lpi2c_int_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_cmsis_lpspi_edma_b2b_transfer_master" name="cmsis_lpspi_edma_b2b_transfer_master" brief="The cmsis_lpspi_edma_b2b_transfer example shows how to use LPSPI CMSIS driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_edma_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in edma . " toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpspi" path="boards/evkmimxrt1024/cmsis_driver_examples/lpspi/edma_b2b_transfer/master">
          <external path="boards/evkmimxrt1024/cmsis_driver_examples/lpspi/edma_b2b_transfer/master" type="xml">
            <files mask="cmsis_lpspi_edma_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_cmsis_lpspi_edma_b2b_transfer_slave" name="cmsis_lpspi_edma_b2b_transfer_slave" brief="The cmsis_lpspi_edma_b2b_transfer example shows how to use LPSPI CMSIS driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_edma_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in edma . " toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpspi" path="boards/evkmimxrt1024/cmsis_driver_examples/lpspi/edma_b2b_transfer/slave">
          <external path="boards/evkmimxrt1024/cmsis_driver_examples/lpspi/edma_b2b_transfer/slave" type="xml">
            <files mask="cmsis_lpspi_edma_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_cmsis_lpspi_int_b2b_transfer_master" name="cmsis_lpspi_int_b2b_transfer_master" brief="The cmsis_lpspi_int_b2b_transfer example shows how to use LPSPI CMSIS driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_int_b2b_transfer_master.c' includes the LPSPI master code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . " toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpspi" path="boards/evkmimxrt1024/cmsis_driver_examples/lpspi/int_b2b_transfer/master">
          <external path="boards/evkmimxrt1024/cmsis_driver_examples/lpspi/int_b2b_transfer/master" type="xml">
            <files mask="cmsis_lpspi_int_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_cmsis_lpspi_int_b2b_transfer_slave" name="cmsis_lpspi_int_b2b_transfer_slave" brief="The lpspi_int_b2b_transfer example shows how to use LPSPI CMSIS driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_int_b2b_transfer_slave.c' includes the LPSPI slave code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . " toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpspi" path="boards/evkmimxrt1024/cmsis_driver_examples/lpspi/int_b2b_transfer/slave">
          <external path="boards/evkmimxrt1024/cmsis_driver_examples/lpspi/int_b2b_transfer/slave" type="xml">
            <files mask="cmsis_lpspi_int_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_cmsis_lpuart_edma_transfer" name="cmsis_lpuart_edma_transfer" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_edma_transfer example shows how to use uart cmsis  driver with EDMA:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpuart" path="boards/evkmimxrt1024/cmsis_driver_examples/lpuart/edma_transfer">
          <external path="boards/evkmimxrt1024/cmsis_driver_examples/lpuart/edma_transfer" type="xml">
            <files mask="cmsis_lpuart_edma_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_cmsis_lpuart_interrupt_transfer" name="cmsis_lpuart_interrupt_transfer" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http://www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_interrupt_transfer example shows how to use uart cmsis driver in interrupt way:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpuart" path="boards/evkmimxrt1024/cmsis_driver_examples/lpuart/interrupt_transfer">
          <external path="boards/evkmimxrt1024/cmsis_driver_examples/lpuart/interrupt_transfer" type="xml">
            <files mask="cmsis_lpuart_interrupt_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dcp" name="dcp" brief="The DCP Example project is a demonstration program that uses the KSDK software implementseveral cryptography algorithms using the DCP software driver." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples" path="boards/evkmimxrt1024/driver_examples/dcp">
          <external path="boards/evkmimxrt1024/driver_examples/dcp" type="xml">
            <files mask="dcp_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_audio_generator_bm" name="dev_audio_generator_bm" brief="The USB Audio Generator application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a recording device and users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_audio_generator/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_audio_generator/bm" type="xml">
            <files mask="dev_audio_generator_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_audio_generator_freertos" name="dev_audio_generator_freertos" brief="The USB Audio Generator application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a recording device and users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_audio_generator/freertos">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_audio_generator/freertos" type="xml">
            <files mask="dev_audio_generator_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_audio_generator_lite_bm" name="dev_audio_generator_lite_bm" brief="The USB Audio Generator application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a recording device and users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_audio_generator_lite/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_audio_generator_lite/bm" type="xml">
            <files mask="dev_audio_generator_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_audio_speaker_bm" name="dev_audio_speaker_bm" brief="The USB Audio Speaker application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a playback device and users can play music using the device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_audio_speaker/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_audio_speaker/bm" type="xml">
            <files mask="dev_audio_speaker_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_audio_speaker_freertos" name="dev_audio_speaker_freertos" brief="The USB Audio Speaker application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a playback device and users can play music using the device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_audio_speaker/freertos">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_audio_speaker/freertos" type="xml">
            <files mask="dev_audio_speaker_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_audio_speaker_lite_bm" name="dev_audio_speaker_lite_bm" brief="The USB Audio Speaker application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a playback device and users can play music using the device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_audio_speaker_lite/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_audio_speaker_lite/bm" type="xml">
            <files mask="dev_audio_speaker_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_cdc_vcom_bm" name="dev_cdc_vcom_bm" brief="The Virtual COM project is enumerated as a COM port, which the users can open using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_cdc_vcom/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_cdc_vcom/bm" type="xml">
            <files mask="dev_cdc_vcom_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_cdc_vcom_freertos" name="dev_cdc_vcom_freertos" brief="The Virtual COM project is  enumerated as a COM port, which the users can open using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_cdc_vcom/freertos">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_cdc_vcom/freertos" type="xml">
            <files mask="dev_cdc_vcom_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_cdc_vcom_lite_bm" name="dev_cdc_vcom_lite_bm" brief="The Virtual COM project enumerated as a COM port, which the users can open using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_cdc_vcom_lite/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_cdc_vcom_lite/bm" type="xml">
            <files mask="dev_cdc_vcom_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_cdc_vnic_bm" name="dev_cdc_vnic_bm" brief="The Virtual NIC project is enumerated as a network adapter. Users can access the network by properly configuring this network adapter." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_cdc_vnic/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_cdc_vnic/bm" type="xml">
            <files mask="dev_cdc_vnic_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_cdc_vnic_freertos" name="dev_cdc_vnic_freertos" brief="The Virtual NIC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a network adapter. Users can access the network by properly configuring this network adapter." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_cdc_vnic/freertos">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_cdc_vnic/freertos" type="xml">
            <files mask="dev_cdc_vnic_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_cdc_vnic_lite_bm" name="dev_cdc_vnic_lite_bm" brief="The Virtual NIC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a network adapter. Users can access the network by properly configuring this network adapter." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_cdc_vnic_lite/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_cdc_vnic_lite/bm" type="xml">
            <files mask="dev_cdc_vnic_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_composite_cdc_msc_bm" name="dev_composite_cdc_msc_bm" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted.." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_composite_cdc_msc/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_composite_cdc_msc/bm" type="xml">
            <files mask="dev_composite_cdc_msc_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_composite_cdc_msc_disk_bm" name="dev_composite_cdc_msc_disk_bm" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_composite_cdc_msc_disk/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_composite_cdc_msc_disk/bm" type="xml">
            <files mask="dev_composite_cdc_msc_disk_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_composite_cdc_msc_disk_freertos" name="dev_composite_cdc_msc_disk_freertos" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_composite_cdc_msc_disk/freertos">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_composite_cdc_msc_disk/freertos" type="xml">
            <files mask="dev_composite_cdc_msc_disk_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_composite_cdc_msc_disk_lite_bm" name="dev_composite_cdc_msc_disk_lite_bm" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a U-disk. The COM  port can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The U-disk can be read and write as a standard SD card." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_composite_cdc_msc_disk_lite/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_composite_cdc_msc_disk_lite/bm" type="xml">
            <files mask="dev_composite_cdc_msc_disk_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_composite_cdc_msc_freertos" name="dev_composite_cdc_msc_freertos" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_composite_cdc_msc/freertos">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_composite_cdc_msc/freertos" type="xml">
            <files mask="dev_composite_cdc_msc_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_composite_cdc_msc_lite_bm" name="dev_composite_cdc_msc_lite_bm" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_composite_cdc_msc_lite/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_composite_cdc_msc_lite/bm" type="xml">
            <files mask="dev_composite_cdc_msc_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_composite_cdc_vcom_cdc_vcom_bm" name="dev_composite_cdc_vcom_cdc_vcom_bm" brief="The Composite CDC_VCOM_CDC_VCOM project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as two COM port, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom/bm" type="xml">
            <files mask="dev_composite_cdc_vcom_cdc_vcom_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_composite_cdc_vcom_cdc_vcom_freertos" name="dev_composite_cdc_vcom_cdc_vcom_freertos" brief="The Composite CDC_VCOM_CDC_VCOM project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as two COM port, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom/freertos">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom/freertos" type="xml">
            <files mask="dev_composite_cdc_vcom_cdc_vcom_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_composite_cdc_vcom_cdc_vcom_lite_bm" name="dev_composite_cdc_vcom_cdc_vcom_lite_bm" brief="The Composite CDC_VCOM_CDC_VCOM project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as two COM port, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom_lite/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom_lite/bm" type="xml">
            <files mask="dev_composite_cdc_vcom_cdc_vcom_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_composite_hid_audio_unified_bm" name="dev_composite_hid_audio_unified_bm" brief="The USB Composite device application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a recording device. Users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories with an HID mouse device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_composite_hid_audio_unified/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_composite_hid_audio_unified/bm" type="xml">
            <files mask="dev_composite_hid_audio_unified_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_composite_hid_audio_unified_freertos" name="dev_composite_hid_audio_unified_freertos" brief="The USB Composite device application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a recording device. Users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories with an HID mouse device." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_composite_hid_audio_unified/freertos">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_composite_hid_audio_unified/freertos" type="xml">
            <files mask="dev_composite_hid_audio_unified_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_composite_hid_audio_unified_lite_bm" name="dev_composite_hid_audio_unified_lite_bm" brief="The USB Composite HID and Audio Unified application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a playback and recording device. Users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories and play music with the device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_composite_hid_audio_unified_lite/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_composite_hid_audio_unified_lite/bm" type="xml">
            <files mask="dev_composite_hid_audio_unified_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_composite_hid_mouse_hid_keyboard_bm" name="dev_composite_hid_mouse_hid_keyboard_bm" brief="The application is a simple demonstration program based on the MCUXpresso SDK. The application is enumerated as HID-compliant mouse and keyboard devices." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/bm" type="xml">
            <files mask="dev_composite_hid_mouse_hid_keyboard_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_composite_hid_mouse_hid_keyboard_freertos" name="dev_composite_hid_mouse_hid_keyboard_freertos" brief="The application is a simple demonstration program based on the MCUXpresso SDK. The application is enumerated as HID-compliant mouse and keyboard devices." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/freertos">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/freertos" type="xml">
            <files mask="dev_composite_hid_mouse_hid_keyboard_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_composite_hid_mouse_hid_keyboard_lite_bm" name="dev_composite_hid_mouse_hid_keyboard_lite_bm" brief="The application is a simple demonstration program based on the MCUXpresso SDK. The application is enumerated as HID-compliant mouse and keyboard devices." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_composite_hid_mouse_hid_keyboard_lite/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_composite_hid_mouse_hid_keyboard_lite/bm" type="xml">
            <files mask="dev_composite_hid_mouse_hid_keyboard_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_dfu_bm" name="dev_dfu_bm" brief="The DFU project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a compoiste dfu device, users can download one firmware to the dfu device with the tool called &quot;dfu-util&quot;. the dfu example write the firmware content to flash and will check the CRC32 which stored in the last 4 byte of the firmware.if the CRC32 check is right, then the dfu example will run the new firmware.Generally speaking, the firmware doesn't have CRC32. sothe following content will introduce how to add CRC32 to the firmware." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_dfu/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_dfu/bm" type="xml">
            <files mask="dev_dfu_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_dfu_freertos" name="dev_dfu_freertos" brief="The DFU project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a compoiste dfu device, users can download one firmware to the dfu device with the tool called &quot;dfu-util&quot;. the dfu example write the firmware content to flash and will check the CRC32 which stored in the last 4 byte of the firmware.if the CRC32 check is right, then the dfu example will run the new firmware.Generally speaking, the firmware doesn't have CRC32. sothe following content will introduce how to add CRC32 to the firmware." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_dfu/freertos">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_dfu/freertos" type="xml">
            <files mask="dev_dfu_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_dfu_lite_bm" name="dev_dfu_lite_bm" brief="The DFU project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a compoiste dfu device, users can download one firmware to the dfu device with the tool called &quot;dfu-util&quot;. the dfu example write the firmware content to flash and will check the CRC32 which stored in the last 4 byte of the firmware.if the CRC32 check is right, then the dfu example will run the new firmware.Generally speaking, the firmware doesn't have CRC32. sothe following content will introduce how to add CRC32 to the firmware." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_dfu_lite/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_dfu_lite/bm" type="xml">
            <files mask="dev_dfu_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_hid_generic_bm" name="dev_hid_generic_bm" brief="The USB HID generic application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a HID-compliant device. A PC application can be used to exchange data with the device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_hid_generic/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_hid_generic/bm" type="xml">
            <files mask="dev_hid_generic_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_hid_generic_freertos" name="dev_hid_generic_freertos" brief="The USB HID generic application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a HID-compliant device. A PC application can be used to exchange data with the device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_hid_generic/freertos">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_hid_generic/freertos" type="xml">
            <files mask="dev_hid_generic_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_hid_generic_lite_bm" name="dev_hid_generic_lite_bm" brief="The USB HID generic application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a HID-compliant device. A PC application can be used to exchange data with the device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_hid_generic_lite/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_hid_generic_lite/bm" type="xml">
            <files mask="dev_hid_generic_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_hid_mouse_bm" name="dev_hid_mouse_bm" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_hid_mouse/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_hid_mouse/bm" type="xml">
            <files mask="dev_hid_mouse_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_hid_mouse_freertos" name="dev_hid_mouse_freertos" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_hid_mouse/freertos">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_hid_mouse/freertos" type="xml">
            <files mask="dev_hid_mouse_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_hid_mouse_lite_bm" name="dev_hid_mouse_lite_bm" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_hid_mouse_lite/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_hid_mouse_lite/bm" type="xml">
            <files mask="dev_hid_mouse_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_msc_disk_bm" name="dev_msc_disk_bm" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk. Users can read and write the SD card or MMC as a standard U-disk." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_msc_disk/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_msc_disk/bm" type="xml">
            <files mask="dev_msc_disk_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_msc_disk_freertos" name="dev_msc_disk_freertos" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk. Users can read and write the SD card or MMC as a standard U-disk." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_msc_disk/freertos">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_msc_disk/freertos" type="xml">
            <files mask="dev_msc_disk_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_msc_disk_lite_bm" name="dev_msc_disk_lite_bm" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk. Users can read and write the SD card or MMC as a standard U-disk." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_msc_disk_lite/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_msc_disk_lite/bm" type="xml">
            <files mask="dev_msc_disk_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_msc_ramdisk_bm" name="dev_msc_ramdisk_bm" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk and can be read and written to as a normal U-disk ." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_msc_ramdisk/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_msc_ramdisk/bm" type="xml">
            <files mask="dev_msc_ramdisk_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_msc_ramdisk_freertos" name="dev_msc_ramdisk_freertos" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk and can be read and written to as a normal U-disk ." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_msc_ramdisk/freertos">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_msc_ramdisk/freertos" type="xml">
            <files mask="dev_msc_ramdisk_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_msc_ramdisk_lite_bm" name="dev_msc_ramdisk_lite_bm" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk and can be read and written to as a normal U-disk ." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_msc_ramdisk_lite/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_msc_ramdisk_lite/bm" type="xml">
            <files mask="dev_msc_ramdisk_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_mtp_bm" name="dev_mtp_bm" brief="The USB MTP application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as portable media device. Users can read and write the SD card or MMC by MTP operations." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_mtp/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_mtp/bm" type="xml">
            <files mask="dev_mtp_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_mtp_freertos" name="dev_mtp_freertos" brief="The USB MTP application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as portable media device. Users can read and write the SD card or MMC by MTP operations." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_mtp/freertos">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_mtp/freertos" type="xml">
            <files mask="dev_mtp_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_mtp_lite_bm" name="dev_mtp_lite_bm" brief="The USB MTP application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as portable media device. Users can read and write the SD card or MMC by MTP operations." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_mtp_lite/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_mtp_lite/bm" type="xml">
            <files mask="dev_mtp_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_phdc_weighscale_bm" name="dev_phdc_weighscale_bm" brief="The USB PHDC WeighScale application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a weight scale device and the HealthLink software is used to interact with thisdevice to simulate the personal weight scale data, such as body mass and body mass index." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_phdc_weighscale/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_phdc_weighscale/bm" type="xml">
            <files mask="dev_phdc_weighscale_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_phdc_weighscale_freertos" name="dev_phdc_weighscale_freertos" brief="The USB PHDC WeighScale application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a weight scale device and the HealthLink software is used to interact with thisdevice to simulate the personal weight scale data, such as body mass and body mass index." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_phdc_weighscale/freertos">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_phdc_weighscale/freertos" type="xml">
            <files mask="dev_phdc_weighscale_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_phdc_weighscale_lite_bm" name="dev_phdc_weighscale_lite_bm" brief="The USB PHDC WeighScale application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a weight scale device and the HealthLink software is used to interact with thisdevice to simulate the personal weight scale data, such as body mass and body mass index." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_phdc_weighscale_lite/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_phdc_weighscale_lite/bm" type="xml">
            <files mask="dev_phdc_weighscale_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_printer_virtual_plain_text_bm" name="dev_printer_virtual_plain_text_bm" brief="The USB virtual printer application is a simple application to demonstrate a virtual printer functionality.Because there is no printer language parsing, the received raw data is output directly in the debug console.As a result, only plain text is suitable for testing. For other printer language support, such as postscript, implement the corresponding parser." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_printer_virtual_plain_text/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_printer_virtual_plain_text/bm" type="xml">
            <files mask="dev_printer_virtual_plain_text_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_printer_virtual_plain_text_freertos" name="dev_printer_virtual_plain_text_freertos" brief="The USB virtual printer application is a simple application to demonstrate a virtual printer functionality.Because there is no printer language parsing, the received raw data is output directly in the debug console.As a result, only plain text is suitable for testing. For other printer language support, such as postscript, implement the corresponding parser." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_printer_virtual_plain_text/freertos">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_printer_virtual_plain_text/freertos" type="xml">
            <files mask="dev_printer_virtual_plain_text_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_printer_virtual_plain_text_lite_bm" name="dev_printer_virtual_plain_text_lite_bm" brief="The USB virtual printer application is a simple application to demonstrate a virtual printer functionality.Because there is no printer language parsing, the received raw data is output directly in the debug console.As a result, only plain text is suitable for testing. For other printer language support, such as postscript, implement the corresponding parser." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_printer_virtual_plain_text_lite/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_printer_virtual_plain_text_lite/bm" type="xml">
            <files mask="dev_printer_virtual_plain_text_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_suspend_resume_hid_mouse_bm" name="dev_suspend_resume_hid_mouse_bm" brief="the application is enumerated as a mouse. When host releases the USB Bus, the device will enter into low power mode. The device can be waked up when resume signal is detected on the bus. Or the device can remote wake-up the host by delivering the resume signal when the remote wake-up is enabled by the host." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_suspend_resume_device_hid_mouse/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_suspend_resume_device_hid_mouse/bm" type="xml">
            <files mask="dev_suspend_resume_hid_mouse_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_suspend_resume_hid_mouse_freertos" name="dev_suspend_resume_hid_mouse_freertos" brief="the application is enumerated as a mouse. When host releases the USB Bus, the device will enter into low power mode. The device can be waked up when resume signal is detected on the bus. Or the device can remote wake-up the host by delivering the resume signal when the remote wake-up is enabled by the host." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_suspend_resume_device_hid_mouse/freertos">
          <external path="boards/evkmimxrt1024/usb_examples/usb_suspend_resume_device_hid_mouse/freertos" type="xml">
            <files mask="dev_suspend_resume_hid_mouse_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_suspend_resume_hid_mouse_lite_bm" name="dev_suspend_resume_hid_mouse_lite_bm" brief="the application is enumerated as a mouse. When host releases the USB Bus, the device will enter into low power mode. The device can be waked up when resume signal is detected on the bus. Or the device can remote wake-up the host by delivering the resume signal when the remote wake-up is enabled by the host." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_suspend_resume_device_hid_mouse_lite/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_suspend_resume_device_hid_mouse_lite/bm" type="xml">
            <files mask="dev_suspend_resume_hid_mouse_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_video_virtual_camera_bm" name="dev_video_virtual_camera_bm" brief="The USB video virtual camera application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a camera and users can see the video of the device by using a PC test tool." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_video_virtual_camera/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_video_virtual_camera/bm" type="xml">
            <files mask="dev_video_virtual_camera_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_video_virtual_camera_freertos" name="dev_video_virtual_camera_freertos" brief="The USB video virtual camera application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a camera and users can see the video of the device by using a PC test tool." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_video_virtual_camera/freertos">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_video_virtual_camera/freertos" type="xml">
            <files mask="dev_video_virtual_camera_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_dev_video_virtual_camera_lite_bm" name="dev_video_virtual_camera_lite_bm" brief="The USB video virtual camera application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a camera and users can see the video of the device by using a PC test tool." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_device_video_virtual_camera_lite/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_device_video_virtual_camera_lite/bm" type="xml">
            <files mask="dev_video_virtual_camera_lite_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_ecompass" name="ecompass" brief="The E-Compass demo application demonstrates the use of the FXOS8700 sensor. The tilt-compensated algorithm calculatesall three angles (pitch, roll, and yaw or compass heading)." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkmimxrt1024/demo_apps/ecompass">
          <external path="boards/evkmimxrt1024/demo_apps/ecompass" type="xml">
            <files mask="ecompass_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_edma_channel_link" name="edma_channel_link" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/edma" path="boards/evkmimxrt1024/driver_examples/edma/channel_link">
          <external path="boards/evkmimxrt1024/driver_examples/edma/channel_link" type="xml">
            <files mask="edma_channel_link_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_edma_interleave_transfer" name="edma_interleave_transfer" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/edma" path="boards/evkmimxrt1024/driver_examples/edma/interleave_transfer">
          <external path="boards/evkmimxrt1024/driver_examples/edma/interleave_transfer" type="xml">
            <files mask="edma_interleave_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_edma_memory_to_memory" name="edma_memory_to_memory" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/edma" path="boards/evkmimxrt1024/driver_examples/edma/memory_to_memory">
          <external path="boards/evkmimxrt1024/driver_examples/edma/memory_to_memory" type="xml">
            <files mask="edma_memory_to_memory_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_edma_ping_pong_transfer" name="edma_ping_pong_transfer" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/edma" path="boards/evkmimxrt1024/driver_examples/edma/ping_pong_transfer">
          <external path="boards/evkmimxrt1024/driver_examples/edma/ping_pong_transfer" type="xml">
            <files mask="edma_ping_pong_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_edma_scatter_gather" name="edma_scatter_gather" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/edma" path="boards/evkmimxrt1024/driver_examples/edma/scatter_gather">
          <external path="boards/evkmimxrt1024/driver_examples/edma/scatter_gather" type="xml">
            <files mask="edma_scatter_gather_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_edma_wrap_transfer" name="edma_wrap_transfer" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/edma" path="boards/evkmimxrt1024/driver_examples/edma/wrap_transfer">
          <external path="boards/evkmimxrt1024/driver_examples/edma/wrap_transfer" type="xml">
            <files mask="edma_wrap_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_enc_basic" name="enc_basic" brief="The enc_basic example shows how to quickly start using ENC driver.In this example, user needs to connect a real encoder to the board. Actually, only PHASE A and PHASE B are enough for the basic application. When running the project, user can turn the encoder so that ENC module can monitor the position change. Then, the internal counter would also count for the position. User can also type keys into terminal, and the current position values recorded by ENC would display. The ENC hardware is created with a special synchronize mechanism. There are actually 4 counters (the 32-bit position counter is combined with the two 16-bit counter registers) for position with responding hold registers. When any of the counter registers is read, the contents of each counter register is written to the corresponding hold register. Taking a snapshot of the counters' values provides a consistent view of a system position and a velocity to be attained." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/enc" path="boards/evkmimxrt1024/driver_examples/enc/basic">
          <external path="boards/evkmimxrt1024/driver_examples/enc/basic" type="xml">
            <files mask="enc_basic_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_enc_index_interrupt" name="enc_index_interrupt" brief="The enc_index_interrupt example shows how to use the interrupt of ENC module with ENC driver.In this example, user needs to connect a real encoder to the board. Actually, only PHASE A and PHASE B are enough for the basic application. However, the additional INDEX/HOME/TRIGGER could be used as the event detector. INDEX: This pulse can optionally reset the position counter and the pulse accumulator of the quadrature decoder module. It also causes a change of state on the revolution counter. The direction of this change, increment or decrement, is calculated from the PHASEA and PHASEB inputs.HOME: This input can be used to trigger the initialization of the position counters. Often this signal is connected to a sensor signalling the motor or machine, sending notification that it has reached a defined home position.TRIGGER: This input can be used to clear the position counters or to take a snapshot of the POS, REV, and POSD registers. Often this signal is connected to a periodic pulse generator or timer to indicate an elapsed time period.This example uses INDEX to response the external event. When running the project, user can turn the encoder so that ENC module can monitor the position change. Also, a variable counter would count the time of INDEX interrupt for rising edge on INDEX signal line." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/enc" path="boards/evkmimxrt1024/driver_examples/enc/index_interrupt">
          <external path="boards/evkmimxrt1024/driver_examples/enc/index_interrupt" type="xml">
            <files mask="enc_index_interrupt_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_enet_txrx_ptp1588_transfer" name="enet_txrx_ptp1588_transfer" brief="The enet_rxtx_ptp1588 example shows the way to use ENET driver to   receive and transmit frame in the 1588 feature required cases.1. This example shows how to initialize the ENET MAC.2. How to use ENET MAC to receive and transmit frame.3. How to add to the multicast group to receive PTP 1588 message.4. How to get the time stamp of the PTP 1588 timer.4. How to use Get the ENET transmit and receive frame time stamp.The example transmits 20 number PTP event frame, shows the timestamp of the transmitted frame.The length, source MAC address and destination MAC address of the received frame will be print. The time stamp of the received timestamp will be print when the PTP message frame is received. Note, The RMII mode is used for default setting to initialize the ENET interface between MAC and the external PHY. you can change it to MII mode as you wish. Please make sure the MII Mode setting in the MAC is synchronize to the settingin TWR-SERIAL board for the external PHY." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/enet" path="boards/evkmimxrt1024/driver_examples/enet/txrx_ptp1588_transfer">
          <external path="boards/evkmimxrt1024/driver_examples/enet/txrx_ptp1588_transfer" type="xml">
            <files mask="enet_txrx_ptp1588_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_enet_txrx_transfer" name="enet_txrx_transfer" brief="The enet_rxtx example shows the simplest way to use ENET driver for simple frame receive and transmit.1. This example shows how to initialize the ENET MAC.2. How to use ENET MAC to receive and transmit frame.The example transmits 20 number broadcast frame, print the frame length, source MAC addressand destination MAC address when receive frame.Note, The RMII mode is used for default setting to initialize the ENET interface between MAC and the external PHY. youcan change it to MII mode as you wish. Please make sure the MII Mode setting in the MAC is synchronize to the settingin TWR-SERIAL board for the external PHY." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/enet" path="boards/evkmimxrt1024/driver_examples/enet/txrx_transfer">
          <external path="boards/evkmimxrt1024/driver_examples/enet/txrx_transfer" type="xml">
            <files mask="enet_txrx_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_ewm" name="ewm" brief="The EWM Example project is to demonstrate usage of the KSDK EWM driver.In the example, EWM counter is continuously refreshed until button is pressed.Once the button is pressed, EWM counter will expire and interrupt will be generated.After the first pressing, another interrupt can be triggered by pressing button again." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples" path="boards/evkmimxrt1024/driver_examples/ewm">
          <external path="boards/evkmimxrt1024/driver_examples/ewm" type="xml">
            <files mask="ewm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_flash_component_nor" name="flash_component_nor" brief="nor flash demo shows the use of nor flash component to erase, program, and read an external nor flash device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="component_examples/flash_component/flexspi_nor" path="boards/evkmimxrt1024/component_examples/flash_component/flexspi_nor">
          <external path="boards/evkmimxrt1024/component_examples/flash_component/flexspi_nor" type="xml">
            <files mask="flash_component_nor_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_flashloader" name="flashloader" brief="The flashloader is a bootloader that executes from target RAM memory on the platform. The bootloader is a configurable flash programming utility that operates over a serial connection on MCU devices. It enables quick and easy programming of MCU devices through the entire product life cycle, including application development, final product manufacturing, and more.Host-side command line and GUI tools are available to communicate with the bootloader. Users can utilize host tools to upload and/or download application code via the bootloader." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="bootloader_examples" path="boards/evkmimxrt1024/bootloader_examples/flashloader">
          <external path="boards/evkmimxrt1024/bootloader_examples/flashloader" type="xml">
            <files mask="flashloader_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_flexcan_interrupt_transfer" name="flexcan_interrupt_transfer" brief="The flexcan_interrupt example shows how to use FlexCAN driver in none-blocking interrupt way:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send a CAN Message toEndpoint B(board B) when user press space key in terminal. Endpoint B receive the message, printthe message content to terminal and echo back the message. Endpoint A will increase the receivedmessage and waiting for the next transmission of the user initiated." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexcan" path="boards/evkmimxrt1024/driver_examples/flexcan/interrupt_transfer">
          <external path="boards/evkmimxrt1024/driver_examples/flexcan/interrupt_transfer" type="xml">
            <files mask="flexcan_interrupt_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_flexcan_loopback" name="flexcan_loopback" brief="The flexcan_loopback_functional example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrouth internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexcan" path="boards/evkmimxrt1024/driver_examples/flexcan/loopback">
          <external path="boards/evkmimxrt1024/driver_examples/flexcan/loopback" type="xml">
            <files mask="flexcan_loopback_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_flexcan_loopback_transfer" name="flexcan_loopback_transfer" brief="The flexcan_loopback example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrough internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexcan" path="boards/evkmimxrt1024/driver_examples/flexcan/loopback_transfer">
          <external path="boards/evkmimxrt1024/driver_examples/flexcan/loopback_transfer" type="xml">
            <files mask="flexcan_loopback_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_flexio_i2c_interrupt_lpi2c_transfer" name="flexio_i2c_interrupt_lpi2c_transfer" brief="The flexio_lpi2c_interrupt example shows how to use flexio i2c master  driver in interrupt way:In this example, a flexio simulated i2c master connect to a LPI2C slave" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkmimxrt1024/driver_examples/flexio/i2c/interrupt_lpi2c_transfer">
          <external path="boards/evkmimxrt1024/driver_examples/flexio/i2c/interrupt_lpi2c_transfer" type="xml">
            <files mask="flexio_i2c_interrupt_lpi2c_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_flexio_i2c_read_accel_value_transfer" name="flexio_i2c_read_accel_value_transfer" brief="The flexio_i2c_read_accel_value example shows how to use FLEXIO I2C  Master driver to communicate with an i2c device: 1. How to use the flexio i2c master driver to read a i2c device who_am_I register. 2. How to use the flexio i2c master driver to write/read the device registers.In this example, the values of three-axis accelerometer print to the serial terminal on PC throughthe virtual serial port on board." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkmimxrt1024/driver_examples/flexio/i2c/read_accel_value_transfer">
          <external path="boards/evkmimxrt1024/driver_examples/flexio/i2c/read_accel_value_transfer" type="xml">
            <files mask="flexio_i2c_read_accel_value_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_flexio_i2s_edma_transfer" name="flexio_i2s_edma_transfer" brief="The flexio_i2s_EDMA example shows how to use flexio_i2s driver with EDMA:In this example, flexio acts as I2S module to record data from line-in line and playbacks the recorded data at the same time using EDMA." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkmimxrt1024/driver_examples/flexio/i2s/edma_transfer">
          <external path="boards/evkmimxrt1024/driver_examples/flexio/i2s/edma_transfer" type="xml">
            <files mask="flexio_i2s_edma_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_flexio_i2s_interrupt_transfer" name="flexio_i2s_interrupt_transfer" brief="The flexio_i2s_interrupt example shows how to use flexio_i2s driver with interrupt:In this example, flexio acts as I2S module to record data from line-in line and playbacks the recorded data at the same time using interrupt." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkmimxrt1024/driver_examples/flexio/i2s/interrupt_transfer">
          <external path="boards/evkmimxrt1024/driver_examples/flexio/i2s/interrupt_transfer" type="xml">
            <files mask="flexio_i2s_interrupt_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_flexio_pwm" name="flexio_pwm" brief="This demo describes how to use SDK drivers to implement the PWM feature by FLEXIO IP module. It outputs the PWM singal with fixed frequency defined by &quot;DEMO_FLEXIO_FREQUENCY&quot; in source code and dynamic duty from 99 to 1 to one of the FLEXIO pin." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkmimxrt1024/driver_examples/flexio/pwm">
          <external path="boards/evkmimxrt1024/driver_examples/flexio/pwm" type="xml">
            <files mask="flexio_pwm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_flexio_spi_edma_b2b_transfer_master" name="flexio_spi_edma_b2b_transfer_master" brief="The flexio_spi_master_edma example shows how to use flexio spi master  driver in edma way:In this example, a flexio simulated master connect to a flexio simulated spi slave ." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkmimxrt1024/driver_examples/flexio/spi/edma_b2b_transfer/master">
          <external path="boards/evkmimxrt1024/driver_examples/flexio/spi/edma_b2b_transfer/master" type="xml">
            <files mask="flexio_spi_edma_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_flexio_spi_edma_b2b_transfer_slave" name="flexio_spi_edma_b2b_transfer_slave" brief="The flexio_spi_slave_edma example shows how to use flexio spi slave  driver in dma way:In this example, a flexio simulated slave connect to a flexio simulated spi master." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkmimxrt1024/driver_examples/flexio/spi/edma_b2b_transfer/slave">
          <external path="boards/evkmimxrt1024/driver_examples/flexio/spi/edma_b2b_transfer/slave" type="xml">
            <files mask="flexio_spi_edma_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_flexio_spi_edma_lpspi_transfer_master" name="flexio_spi_edma_lpspi_transfer_master" brief="The flexio_spi_master_edma_lpspi_slave example shows how to use flexio spi master driver in edma way:In this example, a flexio simulated master connect to a lpspi slave ." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkmimxrt1024/driver_examples/flexio/spi/edma_lpspi_transfer/master">
          <external path="boards/evkmimxrt1024/driver_examples/flexio/spi/edma_lpspi_transfer/master" type="xml">
            <files mask="flexio_spi_edma_lpspi_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_flexio_spi_edma_lpspi_transfer_slave" name="flexio_spi_edma_lpspi_transfer_slave" brief="The flexio_spi_slave_edma_lpspi_master example shows how to use flexio spi slave driver in edma way:In this example, a flexio simulated slave connect to a lpspi master." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkmimxrt1024/driver_examples/flexio/spi/edma_lpspi_transfer/slave">
          <external path="boards/evkmimxrt1024/driver_examples/flexio/spi/edma_lpspi_transfer/slave" type="xml">
            <files mask="flexio_spi_edma_lpspi_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_flexio_spi_int_b2b_transfer_master" name="flexio_spi_int_b2b_transfer_master" brief="The flexio_spi_master_interrupt example shows how to use flexio spi master  driver in interrupt way:In this example, a flexio simulated master connect to a flexio simulated spi slave ." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkmimxrt1024/driver_examples/flexio/spi/int_b2b_transfer/master">
          <external path="boards/evkmimxrt1024/driver_examples/flexio/spi/int_b2b_transfer/master" type="xml">
            <files mask="flexio_spi_int_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_flexio_spi_int_b2b_transfer_slave" name="flexio_spi_int_b2b_transfer_slave" brief="The flexio_spi_slave_interrupt example shows how to use flexio spi slave  driver in interrupt way:In this example, a flexio simulated slave connect to a flexio simulated spi master." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkmimxrt1024/driver_examples/flexio/spi/int_b2b_transfer/slave">
          <external path="boards/evkmimxrt1024/driver_examples/flexio/spi/int_b2b_transfer/slave" type="xml">
            <files mask="flexio_spi_int_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_flexio_spi_int_lpspi_transfer_master" name="flexio_spi_int_lpspi_transfer_master" brief="The flexio_spi_master_interrupt_lpspi_slave example shows how to use flexio spi master driver in interrupt way. In this example, a flexio simulated master connect to a lpspi slave ." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkmimxrt1024/driver_examples/flexio/spi/int_lpspi_transfer/master">
          <external path="boards/evkmimxrt1024/driver_examples/flexio/spi/int_lpspi_transfer/master" type="xml">
            <files mask="flexio_spi_int_lpspi_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_flexio_spi_int_lpspi_transfer_slave" name="flexio_spi_int_lpspi_transfer_slave" brief="The flexio_spi_slave_interrupt_lpspi_master example shows how to use flexio spi slave driver in interrupt way. In this example, a flexio simulated slave connect to a lpspi master." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkmimxrt1024/driver_examples/flexio/spi/int_lpspi_transfer/slave">
          <external path="boards/evkmimxrt1024/driver_examples/flexio/spi/int_lpspi_transfer/slave" type="xml">
            <files mask="flexio_spi_int_lpspi_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_flexio_uart_edma_transfer" name="flexio_uart_edma_transfer" brief="The flexio_uart_edma example shows how to use flexio uart driver in edma way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send back all charactersthat PC send to the board." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkmimxrt1024/driver_examples/flexio/uart/edma_transfer">
          <external path="boards/evkmimxrt1024/driver_examples/flexio/uart/edma_transfer" type="xml">
            <files mask="flexio_uart_edma_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_flexio_uart_int_rb_transfer" name="flexio_uart_int_rb_transfer" brief="The flexio_uart_interrupt_ring_buffer example shows how to use flexio uart driver in interrupt way withRX ring buffer enabled:In this example, a flexio simulated uart connect to PC through USB-Serial, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkmimxrt1024/driver_examples/flexio/uart/int_rb_transfer">
          <external path="boards/evkmimxrt1024/driver_examples/flexio/uart/int_rb_transfer" type="xml">
            <files mask="flexio_uart_int_rb_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_flexio_uart_interrupt_transfer" name="flexio_uart_interrupt_transfer" brief="The flexio_uart_interrupt example shows how to use flexio uart driver in interrupt way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send back all charactersthat PC send to the board. Note: two queued transfer in this example, so please input even number characters." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkmimxrt1024/driver_examples/flexio/uart/interrupt_transfer">
          <external path="boards/evkmimxrt1024/driver_examples/flexio/uart/interrupt_transfer" type="xml">
            <files mask="flexio_uart_interrupt_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_flexio_uart_polling_transfer" name="flexio_uart_polling_transfer" brief="The flexio_uart_polling example shows how to use flexio uart driver in polling way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send backall characters that PC send to the board." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkmimxrt1024/driver_examples/flexio/uart/polling_transfer">
          <external path="boards/evkmimxrt1024/driver_examples/flexio/uart/polling_transfer" type="xml">
            <files mask="flexio_uart_polling_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_flexram_ram_access" name="flexram_ram_access" brief="The FLEXRAM project is a simple demonstration program of the SDK FLEXRAM driver. It allocate the on-chip ram and then access the OCRAM to demo magic address and access error interrupt." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexram" path="boards/evkmimxrt1024/driver_examples/flexram/ram_access">
          <external path="boards/evkmimxrt1024/driver_examples/flexram/ram_access" type="xml">
            <files mask="flexram_ram_access_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_flexram_ram_allocate" name="flexram_ram_allocate" brief="The FLEXRAM project is a simple demonstration program of the SDK FLEXRAM driver. It allocate the on-chip ram and then access the OCRAM to demo magic address and access error interrupt." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexram" path="boards/evkmimxrt1024/driver_examples/flexram/ram_allocate">
          <external path="boards/evkmimxrt1024/driver_examples/flexram/ram_allocate" type="xml">
            <files mask="flexram_ram_allocate_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_flexspi_nor_edma_transfer" name="flexspi_nor_edma_transfer" brief="The flexspi_nor_edma_transfer example shows how to use flexspi driver with dma:In this example, flexspi will send data and operate the external nor flash connected with FLEXSPI. Some simple flash command will be executed, such as Write Enable, Erase sector, Program page.Example will first erase the sector and program a page into the flash, at last check if the data in flash is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexspi" path="boards/evkmimxrt1024/driver_examples/flexspi/nor/edma_transfer">
          <external path="boards/evkmimxrt1024/driver_examples/flexspi/nor/edma_transfer" type="xml">
            <files mask="flexspi_nor_edma_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_flexspi_nor_polling_transfer" name="flexspi_nor_polling_transfer" brief="The flexspi_nor_polling_transfer example shows how to use flexspi driver with polling:In this example, flexspi will send data and operate the external Nor flash connected with FLEXSPI. Some simple flash command willbe executed, such as Write Enable, Erase sector, Program page.Example will first erase the sector and program a page into the flash, at last check if the data in flash is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexspi" path="boards/evkmimxrt1024/driver_examples/flexspi/nor/polling_transfer">
          <external path="boards/evkmimxrt1024/driver_examples/flexspi/nor/polling_transfer" type="xml">
            <files mask="flexspi_nor_polling_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_fmstr_example_any" name="fmstr_example_any" brief="FreeMASTER example fully configured by MCUXpresso ConfigTools. Serial communication is used by default, but it can be changed easily to CAN or other in the MCUXpresso Peripheral Tool. Also FreeMASTER driver features are configured graphically in this tool. The Pins and Clock Tool are used to configure pin multiplexers and clocks. Just like other FreeMASTER examples, the application demonstrates use of FreeMASTER tool to visualize internal variables and to control the application flow by modifying variables. The application also shows use of advanced FreeMASTER features like TSA tables and Pipes." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="FreeMASTER_examples" path="boards/evkmimxrt1024/freemaster_examples/fmstr_any">
          <external path="boards/evkmimxrt1024/freemaster_examples/fmstr_any" type="xml">
            <files mask="fmstr_example_any_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_fmstr_example_can" name="fmstr_example_can" brief="FreeMASTER example using the CAN bus to communicate with target microcontroller. This example application demonstrates use of FreeMASTER tool to visualize internal variables and to control the application flow by modifying variables. The application also shows use of advanced FreeMASTER features like TSA tables and Pipes." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="FreeMASTER_examples" path="boards/evkmimxrt1024/freemaster_examples/fmstr_can">
          <external path="boards/evkmimxrt1024/freemaster_examples/fmstr_can" type="xml">
            <files mask="fmstr_example_can_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_fmstr_example_pdbdm" name="fmstr_example_pdbdm" brief="FreeMASTER example using a special packet-driven protocol on top of JTAG or BDM direct memory access. This example application demonstrates use of FreeMASTER tool to visualize internal variables and to control the application flow by modifying variables. The application also shows use of advanced FreeMASTER features like TSA tables and Pipes." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="FreeMASTER_examples" path="boards/evkmimxrt1024/freemaster_examples/fmstr_pdbdm">
          <external path="boards/evkmimxrt1024/freemaster_examples/fmstr_pdbdm" type="xml">
            <files mask="fmstr_example_pdbdm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_fmstr_example_uart" name="fmstr_example_uart" brief="FreeMASTER example using Serial-UART communication with the target microcontroller. This example application demonstrates use of FreeMASTER tool to visualize internal variables and to control the application flow by modifying variables. The application also shows use of advanced FreeMASTER features like TSA tables and Pipes." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="FreeMASTER_examples" path="boards/evkmimxrt1024/freemaster_examples/fmstr_uart">
          <external path="boards/evkmimxrt1024/freemaster_examples/fmstr_uart" type="xml">
            <files mask="fmstr_example_uart_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_fmstr_example_usb_cdc" name="fmstr_example_usb_cdc" brief="FreeMASTER example using virtual serial communication at USB port and CDC VCOM class. This example application demonstrates use of FreeMASTER tool to visualize internal variables and to control the application flow by modifying variables. The application also shows use of advanced FreeMASTER features like TSA tables and Pipes." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="FreeMASTER_examples" path="boards/evkmimxrt1024/freemaster_examples/fmstr_usb_cdc">
          <external path="boards/evkmimxrt1024/freemaster_examples/fmstr_usb_cdc" type="xml">
            <files mask="fmstr_example_usb_cdc_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_freertos_event" name="freertos_event" brief="This document explains the freertos_event example. It shows how task waits for an event (defined setof bits in event group). This event can be set by any other process or interrupt in the system.The example application creates three tasks. Two write tasks write_task_1 and write_task_2continuously setting event bit 0 and bit 1.Read_task is waiting for any event bit and printing actual state on console. Event bits areautomatically cleared after read task is entered.Three possible states can occurre:Both bits are set.zBit B0 is set.Bit B1 is set." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/evkmimxrt1024/rtos_examples/freertos_event">
          <external path="boards/evkmimxrt1024/rtos_examples/freertos_event" type="xml">
            <files mask="freertos_event_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_freertos_generic" name="freertos_generic" brief="This document explains the freertos_generic example. It is based on code FreeRTOS documentation fromhttp://www.freertos.org/Hardware-independent-RTOS-example.html. It shows combination of severaltasks with queue, software timer, tick hook and semaphore.The example application creates three tasks. The prvQueueSendTask periodically sending data toxQueue queue. The prvQueueReceiveTask is waiting for incoming message and counting number ofreceived messages. Task prvEventSemaphoreTask is waiting for xEventSemaphore semaphore given fromvApplicationTickHook. Tick hook give semaphore every 500 ms.Other hook types used for RTOS and resource statistics are also demonstrated in example:* vApplicationIdleHook* vApplicationStackOverflowHook* vApplicationMallocFailedHook" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/evkmimxrt1024/rtos_examples/freertos_generic">
          <external path="boards/evkmimxrt1024/rtos_examples/freertos_generic" type="xml">
            <files mask="freertos_generic_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_freertos_hello" name="freertos_hello" brief="The Hello World project is a simple demonstration program that uses the SDK UART drivere incombination with FreeRTOS. The purpose of this demo is to show how to use the debug console and toprovide a simple project for debugging and further development.The example application creates one task called hello_task. This task print &quot;Hello world.&quot; messagevia debug console utility and suspend itself." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/evkmimxrt1024/rtos_examples/freertos_hello">
          <external path="boards/evkmimxrt1024/rtos_examples/freertos_hello" type="xml">
            <files mask="freertos_hello_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_freertos_hello_flash_operation" name="freertos_hello_flash_operation" brief="The FreeRTOS hello world flash operation project is a simple demonstration program that uses the SDK UART drivere incombination with FreeRTOS. The purpose of this demo is to show how to use the debug console and toprovide a simple project for debugging and further development.The example application creates two tasks called flash_operation_task and hello_task . First task operate flash and suspend itself, second task print &quot;Hello world.&quot;   message periodically via debug console utility." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/evkmimxrt1024/rtos_examples/freertos_hello_flash_operation">
          <external path="boards/evkmimxrt1024/rtos_examples/freertos_hello_flash_operation" type="xml">
            <files mask="freertos_hello_flash_operation_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_freertos_lpi2c" name="freertos_lpi2c" brief="The LPI2C Example project is a demonstration program that uses the KSDK software to manipulate the Low Power Inter-Integrated Circuit.The example uses two instances of LPI2C, one in configured as master and the other one as slave.The LPI2C master sends data to LPI2C slave. The slave will check the data it receives and shows the log." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/evkmimxrt1024/rtos_examples/freertos_lpi2c">
          <external path="boards/evkmimxrt1024/rtos_examples/freertos_lpi2c" type="xml">
            <files mask="freertos_lpi2c_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_freertos_lpspi" name="freertos_lpspi" brief="The lpspi_interrupt example shows how to use LPSPI driver in interrupt way:In this example , one lpspi instance used as LPSPI master and another lpspi instance used as LPSPI slave.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/evkmimxrt1024/rtos_examples/freertos_lpspi">
          <external path="boards/evkmimxrt1024/rtos_examples/freertos_lpspi" type="xml">
            <files mask="freertos_lpspi_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_freertos_lpspi_b2b_master" name="freertos_lpspi_b2b_master" brief="The freertos_lpspi_b2b_master example shows how to use LPSPI driver in FreeRTOS." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/evkmimxrt1024/rtos_examples/freertos_lpspi_b2b/master">
          <external path="boards/evkmimxrt1024/rtos_examples/freertos_lpspi_b2b/master" type="xml">
            <files mask="freertos_lpspi_b2b_master_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_freertos_lpspi_b2b_slave" name="freertos_lpspi_b2b_slave" brief="The freertos_lpspi_b2b_slave example shows how to use LPSPI driver in FreeRTOS." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/evkmimxrt1024/rtos_examples/freertos_lpspi_b2b/slave">
          <external path="boards/evkmimxrt1024/rtos_examples/freertos_lpspi_b2b/slave" type="xml">
            <files mask="freertos_lpspi_b2b_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_freertos_lpuart" name="freertos_lpuart" brief="The LPUART example for FreeRTOS demonstrates the possibility to use the LPUART driver in the RTOS.The example uses single instance of LPUART IP and writes string into, then reads back chars.After every 4B received, these are sent back on LPUART." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/evkmimxrt1024/rtos_examples/freertos_lpuart">
          <external path="boards/evkmimxrt1024/rtos_examples/freertos_lpuart" type="xml">
            <files mask="freertos_lpuart_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_freertos_mutex" name="freertos_mutex" brief="This document explains the freertos_mutex example. It shows how mutex manage access to commonresource (terminal output).The example application creates two identical instances of write_task. Each task will lock the mutexbefore printing and unlock it after printing to ensure that the outputs from tasks are not mixedtogether.The test_task accept output message during creation as function parameter. Output message have twoparts. If xMutex is unlocked, the write_task_1 acquire xMutex and print first part of message. Thenrescheduling is performed. In this moment scheduler check if some other task could run, but secondtask write_task+_2 is blocked because xMutex is already locked by first write task. The firstwrite_task_1 continue from last point by printing of second message part. Finaly the xMutex isunlocked and second instance of write_task_2 is executed." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/evkmimxrt1024/rtos_examples/freertos_mutex">
          <external path="boards/evkmimxrt1024/rtos_examples/freertos_mutex" type="xml">
            <files mask="freertos_mutex_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_freertos_queue" name="freertos_queue" brief="This document explains the freertos_queue example. This example introduce simple logging mechanismbased on message passing.Example could be devided in two parts. First part is logger. It contain three tasks:log_add().....Add new message into the log. Call xQueueSend function to pass new message into              message queue.log_init()....Initialize logger (create logging task and message queue log_queue).log_task()....Task responsible for printing of log output.Second part is application of this simple logging mechanism. Each of two tasks write_task_1 andwrite_task_2 print 5 messages into log." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/evkmimxrt1024/rtos_examples/freertos_queue">
          <external path="boards/evkmimxrt1024/rtos_examples/freertos_queue" type="xml">
            <files mask="freertos_queue_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_freertos_sem" name="freertos_sem" brief="This document explains the freertos_sem example, what to expect when running it and a briefintroduction to the API. The freertos_sem example code shows how semaphores works. Two differenttasks are synchronized in bilateral rendezvous model.The example uses four tasks. One producer_task and three consumer_tasks. The producer_task starts bycreating of two semaphores (xSemaphore_producer and xSemaphore_consumer). These semaphores controlaccess to virtual item. The synchronization is based on bilateral rendezvous pattern. Both ofconsumer and producer must be prepared to enable transaction." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/evkmimxrt1024/rtos_examples/freertos_sem">
          <external path="boards/evkmimxrt1024/rtos_examples/freertos_sem" type="xml">
            <files mask="freertos_sem_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_freertos_sem_static" name="freertos_sem_static" brief="This document explains the freertos_sem example, what to expect when running it and a briefintroduction to the API. The freertos_sem example code shows how semaphores works. Two differenttasks are synchronized in bilateral rendezvous model.The example uses four tasks. One producer_task and three consumer_tasks. The producer_task starts bycreating of two semaphores (xSemaphore_producer and xSemaphore_consumer). These semaphores controlaccess to virtual item. The synchronization is based on bilateral rendezvous pattern. Both ofconsumer and producer must be prepared to enable transaction." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/evkmimxrt1024/rtos_examples/freertos_sem_static">
          <external path="boards/evkmimxrt1024/rtos_examples/freertos_sem_static" type="xml">
            <files mask="freertos_sem_static_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_freertos_swtimer" name="freertos_swtimer" brief="This document explains the freertos_swtimer example. It shows usage of software timer and itscallback.The example application creates one software timer SwTimer. The timer's callback SwTimerCallback isperiodically executed and text &quot;Tick.&quot; is printed to terminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/evkmimxrt1024/rtos_examples/freertos_swtimer">
          <external path="boards/evkmimxrt1024/rtos_examples/freertos_swtimer" type="xml">
            <files mask="freertos_swtimer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_freertos_tickless" name="freertos_tickless" brief="This document explains the freertos_tickless example. It shows the CPU enter at sleep mode and then it is waked up by expired time delay that using GPT module." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="rtos_examples" path="boards/evkmimxrt1024/rtos_examples/freertos_tickless">
          <external path="boards/evkmimxrt1024/rtos_examples/freertos_tickless" type="xml">
            <files mask="freertos_tickless_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_fsl_romapi" name="fsl_romapi" brief="The fsl_romapi example shows how to use flexspi rom api In this example, rom api will send data and operate the external Nor flash connected with FLEXSPI. Some simple flash command willbe executed, such as Write Enable, Erase sector, Program page.Example will first erase the sector and program a page into the flash, at last check if the data in flash is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/fsl_romapi" path="boards/evkmimxrt1024/driver_examples/fsl_romapi">
          <external path="boards/evkmimxrt1024/driver_examples/fsl_romapi" type="xml">
            <files mask="fsl_romapi_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_gpt_capture" name="gpt_capture" brief="The gpt_capture project is a simple demonstration program of the SDK GPT driver's input capture feature.The example sets up a GPT channel for rise-edge capture. Once the input signal is received,this example will print the capture value." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/gpt" path="boards/evkmimxrt1024/driver_examples/gpt/capture">
          <external path="boards/evkmimxrt1024/driver_examples/gpt/capture" type="xml">
            <files mask="gpt_capture_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_gpt_timer" name="gpt_timer" brief="The gpt_timer project is a simple demonstration program of the SDK GPT driver. It sets up the GPThardware block to trigger a periodic interrupt after every 1 second. When the GPT interrupt is triggereda message a printed on the UART terminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/gpt" path="boards/evkmimxrt1024/driver_examples/gpt/timer">
          <external path="boards/evkmimxrt1024/driver_examples/gpt/timer" type="xml">
            <files mask="gpt_timer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_hardfault_handling" name="hardfault_handling" brief="The Hardfault Handling demo is used to get excaption handling log. By default, exception handling module will overwrite the following ISR as the reference. &quot;NMI_Handler, HardFault_Handler, MemManage_Handler, BusFault_Handler, UsageFault_Handler&quot;. The users can refer to these ISRs to have their owner ISRs to output the stack frame information." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="component_examples" path="boards/evkmimxrt1024/component_examples/hardfault_handling">
          <external path="boards/evkmimxrt1024/component_examples/hardfault_handling" type="xml">
            <files mask="hardfault_handling_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_hello_world" name="hello_world" brief="The HelloWorld demo prints the &quot;Hello World&quot; string to the terminal using the SDK UART drivers and repeat what user input. The purpose of this demo is to show how to use the UART, and to provide a simple project for debugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkmimxrt1024/demo_apps/hello_world">
          <external path="boards/evkmimxrt1024/demo_apps/hello_world" type="xml">
            <files mask="hello_world_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_hello_world_virtual_com" name="hello_world_virtual_com" brief="Hello World Virtual Com demonstrates the use of virtual com to print the &quot;Hello World&quot; string to the terminal. Different with Hello World demo (a HW UART peripheral is used to transmit data), the demo transmits data based on a serial port simulated by the USB device stack on target board side via USB peripheral. The purpose of this demo is to demonstrate how to use virtual com and provide a simple project for debugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkmimxrt1024/demo_apps/hello_world_virtual_com">
          <external path="boards/evkmimxrt1024/demo_apps/hello_world_virtual_com" type="xml">
            <files mask="hello_world_virtual_com_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_host_audio_speaker_bm" name="host_audio_speaker_bm" brief="The Host Audio example supports the audio speaker device. @n The application prints the audio speaker information when the USB speaker device is attached." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_host_audio_speaker/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_host_audio_speaker/bm" type="xml">
            <files mask="host_audio_speaker_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_host_audio_speaker_freertos" name="host_audio_speaker_freertos" brief="The Host Audio example supports the audio speaker device. @n The application prints the audio speaker information when the USB speaker device is attached." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_host_audio_speaker/freertos">
          <external path="boards/evkmimxrt1024/usb_examples/usb_host_audio_speaker/freertos" type="xml">
            <files mask="host_audio_speaker_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_host_cdc_bm" name="host_cdc_bm" brief="The host CDC project is a simple demonstration program based on the MCUXpresso SDK. It enumerates a COM port and echoes back the data from the UART." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_host_cdc/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_host_cdc/bm" type="xml">
            <files mask="host_cdc_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_host_cdc_freertos" name="host_cdc_freertos" brief="The host CDC project is a simple demonstration program based on the MCUXpresso SDK. It enumerates a COM port and echoes back the data from the UART ." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_host_cdc/freertos">
          <external path="boards/evkmimxrt1024/usb_examples/usb_host_cdc/freertos" type="xml">
            <files mask="host_cdc_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_host_hid_generic_bm" name="host_hid_generic_bm" brief="This application implements a simple HID interrupt in-and-out endpoint bi-directional communication.The application sends one test string to the device. The device receives and sends back the string. The application receives the string and prints it." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_host_hid_generic/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_host_hid_generic/bm" type="xml">
            <files mask="host_hid_generic_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_host_hid_generic_freertos" name="host_hid_generic_freertos" brief="This application implements a simple HID interrupt in-and-out endpoint bi-directional communication.The application sends one test string to the device. The device receives and sends back the string. The application receives the string and prints it." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_host_hid_generic/freertos">
          <external path="boards/evkmimxrt1024/usb_examples/usb_host_hid_generic/freertos" type="xml">
            <files mask="host_hid_generic_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_host_hid_mouse_bm" name="host_hid_mouse_bm" brief="The application supports the mouse device. It prints the mouse operation when the mouse device is attached." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_host_hid_mouse/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_host_hid_mouse/bm" type="xml">
            <files mask="host_hid_mouse_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_host_hid_mouse_freertos" name="host_hid_mouse_freertos" brief="The application supports the mouse device. It prints the mouse operation when the mouse device is attached." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_host_hid_mouse/freertos">
          <external path="boards/evkmimxrt1024/usb_examples/usb_host_hid_mouse/freertos" type="xml">
            <files mask="host_hid_mouse_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_host_hid_mouse_keyboard_bm" name="host_hid_mouse_keyboard_bm" brief="This example supports the mouse device and the keyboard device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_host_hid_mouse_keyboard/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_host_hid_mouse_keyboard/bm" type="xml">
            <files mask="host_hid_mouse_keyboard_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_host_hid_mouse_keyboard_freertos" name="host_hid_mouse_keyboard_freertos" brief="This example supports the mouse device and the keyboard device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_host_hid_mouse_keyboard/freertos">
          <external path="boards/evkmimxrt1024/usb_examples/usb_host_hid_mouse_keyboard/freertos" type="xml">
            <files mask="host_hid_mouse_keyboard_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_host_msd_command_bm" name="host_msd_command_bm" brief="This Host MSD example supports the UFI and SCSI U-disk device. The application prints the attached device information when the U-disk device is attached.The application executes UFI commands to test the attached device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_host_msd_command/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_host_msd_command/bm" type="xml">
            <files mask="host_msd_command_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_host_msd_command_freertos" name="host_msd_command_freertos" brief="This Host MSD example supports the UFI and SCSI U-disk device.  The application prints the attached device information when the U-disk device is attached.The application executes UFI commands to test the attached device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_host_msd_command/freertos">
          <external path="boards/evkmimxrt1024/usb_examples/usb_host_msd_command/freertos" type="xml">
            <files mask="host_msd_command_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_host_msd_fatfs_bm" name="host_msd_fatfs_bm" brief="This Host FatFs example supports UFI and SCSI U-disk device. The application prints the attached device information when U-disk device is attached.The application executes some FatFs APIs to test the attached device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_host_msd_fatfs/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_host_msd_fatfs/bm" type="xml">
            <files mask="host_msd_fatfs_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_host_msd_fatfs_freertos" name="host_msd_fatfs_freertos" brief="This Host FatFs example supports UFI and SCSI U-disk device. The application prints the attached device information when U-disk device is attached.The application executes some FatFs APIs to test the attached device." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_host_msd_fatfs/freertos">
          <external path="boards/evkmimxrt1024/usb_examples/usb_host_msd_fatfs/freertos" type="xml">
            <files mask="host_msd_fatfs_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_host_phdc_manager_bm" name="host_phdc_manager_bm" brief="The Host PHDC Manager Example is a simple demonstration program based on the MCUXpresso SDK.The application supports the USB weight scale device. It prints out the body mass and body mass index information when the USB weight scale device is attached." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_host_phdc_manager/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_host_phdc_manager/bm" type="xml">
            <files mask="host_phdc_manager_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_host_phdc_manager_freertos" name="host_phdc_manager_freertos" brief="The Host PHDC Manager Example is a simple demonstration program based on the MCUXpresso SDK.The application supports the USB weight scale device. It prints out the body mass and body mass index information when the USB weight scale device is attached." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_host_phdc_manager/freertos">
          <external path="boards/evkmimxrt1024/usb_examples/usb_host_phdc_manager/freertos" type="xml">
            <files mask="host_phdc_manager_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_host_printer_plain_text_bm" name="host_printer_plain_text_bm" brief="The host printer example demonstrates how to get the status of the printer deviceand how to print a certain test string." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_host_printer_plain_text/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_host_printer_plain_text/bm" type="xml">
            <files mask="host_printer_plain_text_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_host_printer_plain_text_freertos" name="host_printer_plain_text_freertos" brief="The host printer example demonstrates how to get the status of the printer deviceand how to print a certain test string.." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_host_printer_plain_text/freertos">
          <external path="boards/evkmimxrt1024/usb_examples/usb_host_printer_plain_text/freertos" type="xml">
            <files mask="host_printer_plain_text_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_host_suspend_resume_hid_mouse_bm" name="host_suspend_resume_hid_mouse_bm" brief="This is one example support suspend/resume." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_suspend_resume_host_hid_mouse/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_suspend_resume_host_hid_mouse/bm" type="xml">
            <files mask="host_suspend_resume_hid_mouse_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_host_suspend_resume_hid_mouse_freertos" name="host_suspend_resume_hid_mouse_freertos" brief="This is one example support suspend/resume." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_suspend_resume_host_hid_mouse/freertos">
          <external path="boards/evkmimxrt1024/usb_examples/usb_suspend_resume_host_hid_mouse/freertos" type="xml">
            <files mask="host_suspend_resume_hid_mouse_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_host_video_camera_freertos" name="host_video_camera_freertos" brief="The application supports to get JPEG image from camera function." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_host_video_camera/freertos">
          <external path="boards/evkmimxrt1024/usb_examples/usb_host_video_camera/freertos" type="xml">
            <files mask="host_video_camera_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_igpio_input_interrupt" name="igpio_input_interrupt" brief="The GPIO Example project is a demonstration program that uses the KSDK software to manipulate the general-purposeoutputs.The example is supported by the set, clear registers for each GPIO pin output register. " toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/gpio" path="boards/evkmimxrt1024/driver_examples/gpio/input_interrupt">
          <external path="boards/evkmimxrt1024/driver_examples/gpio/input_interrupt" type="xml">
            <files mask="igpio_input_interrupt_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_igpio_led_output" name="igpio_led_output" brief="The GPIO Example project is a demonstration program that uses the KSDK software to manipulate the general-purposeoutputs.The example is supported by the set, clear, and toggle write-only registers for each port output data register. The example take turns to shine the LED." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/gpio" path="boards/evkmimxrt1024/driver_examples/gpio/led_output">
          <external path="boards/evkmimxrt1024/driver_examples/gpio/led_output" type="xml">
            <files mask="igpio_led_output_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_iled_blinky" name="iled_blinky" brief="The LED Blinky demo application provides a sanity check for the new SDK build environments and board bring up. The LED Blinky demo uses the systick interrupt to realize the function of timing delay. The example takes turns to shine the LED. The purpose of this demo is to provide a simple project for debugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkmimxrt1024/demo_apps/led_blinky">
          <external path="boards/evkmimxrt1024/demo_apps/led_blinky" type="xml">
            <files mask="iled_blinky_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_kpp" name="kpp" brief="The KPP Example project is a demonstration program that uses the KSDK software to manipulate the Keypad MATRIX.The example is use the continuous column and rows as 4*4 or 8*8 matrix to show the example." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples" path="boards/evkmimxrt1024/driver_examples/kpp">
          <external path="boards/evkmimxrt1024/driver_examples/kpp" type="xml">
            <files mask="kpp_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_littlevgl_demo_widgets" name="littlevgl_demo_widgets" brief="A demo application to show littlevgl widgets." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="littlevgl_examples" path="boards/evkmimxrt1024/littlevgl_examples/littlevgl_demo_widgets">
          <external path="boards/evkmimxrt1024/littlevgl_examples/littlevgl_demo_widgets" type="xml">
            <files mask="littlevgl_demo_widgets_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_littlevgl_demo_widgets_bm" name="littlevgl_demo_widgets_bm" brief="A demo application to show littlevgl widgets." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="littlevgl_examples" path="boards/evkmimxrt1024/littlevgl_examples/littlevgl_demo_widgets_bm">
          <external path="boards/evkmimxrt1024/littlevgl_examples/littlevgl_demo_widgets_bm" type="xml">
            <files mask="littlevgl_demo_widgets_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_littlevgl_guider" name="littlevgl_guider" brief="LittleVGL project used with GUI Guider." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="littlevgl_examples" path="boards/evkmimxrt1024/littlevgl_examples/littlevgl_guider">
          <external path="boards/evkmimxrt1024/littlevgl_examples/littlevgl_guider" type="xml">
            <files mask="littlevgl_guider_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_log_bm" name="log_bm" brief="The log demo is used to demonstrate how to use log component. The main function of the demo is to prompt the LOG level string according to the user input log level command." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="component_examples" path="boards/evkmimxrt1024/component_examples/log/bm">
          <external path="boards/evkmimxrt1024/component_examples/log/bm" type="xml">
            <files mask="log_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_log_freertos" name="log_freertos" brief="The log demo is used to demonstrate how to use log component. The main function of the demo is to prompt the LOG level string according to the user input log level command." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="component_examples" path="boards/evkmimxrt1024/component_examples/log/freertos">
          <external path="boards/evkmimxrt1024/component_examples/log/freertos" type="xml">
            <files mask="log_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_lpi2c_edma_b2b_transfer_master" name="lpi2c_edma_b2b_transfer_master" brief="The lpi2c_edma_b2b_transfer_master example shows how to use lpi2c driver as master to do board to board transfer with EDMA:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/evkmimxrt1024/driver_examples/lpi2c/edma_b2b_transfer/master">
          <external path="boards/evkmimxrt1024/driver_examples/lpi2c/edma_b2b_transfer/master" type="xml">
            <files mask="lpi2c_edma_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_lpi2c_edma_b2b_transfer_slave" name="lpi2c_edma_b2b_transfer_slave" brief="The lpi2c_edma_b2b_transfer_slave example shows how to use lpi2c driver as slave to do board to board transfer with a EDMA master:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/evkmimxrt1024/driver_examples/lpi2c/edma_b2b_transfer/slave">
          <external path="boards/evkmimxrt1024/driver_examples/lpi2c/edma_b2b_transfer/slave" type="xml">
            <files mask="lpi2c_edma_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_lpi2c_interrupt" name="lpi2c_interrupt" brief="The lpi2c_functional_interrupt example shows how to use lpi2c functional driver to build a interrupt based application:In this example , one lpi2c instance used as lpi2c master and another lpi2c instance used as lpi2c slave .1. lpi2c master send data using interrupt to lpi2c slave in interrupt .2. lpi2c master read data using interrupt from lpi2c slave in interrupt .3. The example assumes that the connection is OK between master and slave, so there's NO error handling code." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/evkmimxrt1024/driver_examples/lpi2c/interrupt">
          <external path="boards/evkmimxrt1024/driver_examples/lpi2c/interrupt" type="xml">
            <files mask="lpi2c_interrupt_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_lpi2c_interrupt_b2b_transfer_master" name="lpi2c_interrupt_b2b_transfer_master" brief="The lpi2c_interrupt_b2b_transfer_master example shows how to use lpi2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/evkmimxrt1024/driver_examples/lpi2c/interrupt_b2b_transfer/master">
          <external path="boards/evkmimxrt1024/driver_examples/lpi2c/interrupt_b2b_transfer/master" type="xml">
            <files mask="lpi2c_interrupt_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_lpi2c_interrupt_b2b_transfer_slave" name="lpi2c_interrupt_b2b_transfer_slave" brief="The lpi2c_interrupt_b2b_transfer_slave example shows how to use lpi2c driver as slave to do board to board transfer with interrupt:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/evkmimxrt1024/driver_examples/lpi2c/interrupt_b2b_transfer/slave">
          <external path="boards/evkmimxrt1024/driver_examples/lpi2c/interrupt_b2b_transfer/slave" type="xml">
            <files mask="lpi2c_interrupt_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_lpi2c_polling_b2b_master" name="lpi2c_polling_b2b_master" brief="The lpi2c_polling_b2b_master example shows how to use lpi2c driver as master to do board to board transfer using polling method:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/evkmimxrt1024/driver_examples/lpi2c/polling_b2b/master">
          <external path="boards/evkmimxrt1024/driver_examples/lpi2c/polling_b2b/master" type="xml">
            <files mask="lpi2c_polling_b2b_master_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_lpi2c_polling_b2b_slave" name="lpi2c_polling_b2b_slave" brief="The lpi2c_polling_b2b_slave example shows how to use lpi2c driver as slave to do board to board transfer with a polling master:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/evkmimxrt1024/driver_examples/lpi2c/polling_b2b/slave">
          <external path="boards/evkmimxrt1024/driver_examples/lpi2c/polling_b2b/slave" type="xml">
            <files mask="lpi2c_polling_b2b_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_lpspi_3wire_int_transfer_master" name="lpspi_3wire_int_transfer_master" brief="The lpspi_3wire_int_transfer example shows how to use LPSPI's 3-wire mode in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_3wire_int_b2b_transfer_master.c' includes the LPSPI master code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)2. LPSPI master will use SOUT pin as input/output pin, and slave will use SIN pin as input/output pin." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/evkmimxrt1024/driver_examples/lpspi/3wire_transfer/int_transfer/master">
          <external path="boards/evkmimxrt1024/driver_examples/lpspi/3wire_transfer/int_transfer/master" type="xml">
            <files mask="lpspi_3wire_int_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_lpspi_3wire_int_transfer_slave" name="lpspi_3wire_int_transfer_slave" brief="The lpspi_3wire_int_transfer example shows how to use LPSPI's 3-wire mode in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_3wire_int_b2b_transfer_slave.c' includes the LPSPI slave code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)2. LPSPI master will use SOUT pin as input/output pin, and slave will use SIN pin as input/output pin." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/evkmimxrt1024/driver_examples/lpspi/3wire_transfer/int_transfer/slave">
          <external path="boards/evkmimxrt1024/driver_examples/lpspi/3wire_transfer/int_transfer/slave" type="xml">
            <files mask="lpspi_3wire_int_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_lpspi_3wire_polling_transfer_master" name="lpspi_3wire_polling_transfer_master" brief="The lpspi_3wire_polling_transfer example shows how to use LPSPI's 3-wire mode in polling way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_3wire_polling_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in polling . (LPSPI Slave using interrupt to receive/send the data)2. LPSPI master will use SOUT pin as input/output pin, and slave will use SIN pin as input/output pin." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/evkmimxrt1024/driver_examples/lpspi/3wire_transfer/polling_transfer/master">
          <external path="boards/evkmimxrt1024/driver_examples/lpspi/3wire_transfer/polling_transfer/master" type="xml">
            <files mask="lpspi_3wire_polling_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_lpspi_3wire_polling_transfer_slave" name="lpspi_3wire_polling_transfer_slave" brief="The lpspi_3wire_polling_transfer example shows how to use LPSPI's 3-wire mode in polling way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_3wire_polling_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in polling . (LPSPI Slave using interrupt to receive/send the data)2. LPSPI master will use SOUT pin as input/output pin, and slave will use SIN pin as input/output pin." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/evkmimxrt1024/driver_examples/lpspi/3wire_transfer/polling_transfer/slave">
          <external path="boards/evkmimxrt1024/driver_examples/lpspi/3wire_transfer/polling_transfer/slave" type="xml">
            <files mask="lpspi_3wire_polling_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_lpspi_edma_b2b_transfer_master" name="lpspi_edma_b2b_transfer_master" brief="The lpspi_edma_b2b_transfer example shows how to use LPSPI driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_edma_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in edma . (LPSPI Slave using edma to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/evkmimxrt1024/driver_examples/lpspi/edma_b2b_transfer/master">
          <external path="boards/evkmimxrt1024/driver_examples/lpspi/edma_b2b_transfer/master" type="xml">
            <files mask="lpspi_edma_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_lpspi_edma_b2b_transfer_slave" name="lpspi_edma_b2b_transfer_slave" brief="The lpspi_edma_b2b_transfer example shows how to use LPSPI driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_edma_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in edma . (LPSPI Slave using edma to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/evkmimxrt1024/driver_examples/lpspi/edma_b2b_transfer/slave">
          <external path="boards/evkmimxrt1024/driver_examples/lpspi/edma_b2b_transfer/slave" type="xml">
            <files mask="lpspi_edma_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_lpspi_interrupt" name="lpspi_interrupt" brief="The lpspi_functional_interrupt example shows how to use LPSPI driver in interrupt way:In this example , one lpspi instance used as LPSPI master and another lpspi instance used as LPSPI slave .1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/evkmimxrt1024/driver_examples/lpspi/interrupt">
          <external path="boards/evkmimxrt1024/driver_examples/lpspi/interrupt" type="xml">
            <files mask="lpspi_interrupt_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_lpspi_interrupt_b2b_master" name="lpspi_interrupt_b2b_master" brief="The lpspi_interrupt_b2b example shows how to use LPSPI driver in interrupt way:In this example , we need two boards , one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_interrupt_b2b_master.c' includes the LPSPI master code.This example does not use the transactional API in LPSPI driver. It's a demonstration that how to use the interrupt in KSDK driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/evkmimxrt1024/driver_examples/lpspi/interrupt_b2b/master">
          <external path="boards/evkmimxrt1024/driver_examples/lpspi/interrupt_b2b/master" type="xml">
            <files mask="lpspi_interrupt_b2b_master_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_lpspi_interrupt_b2b_slave" name="lpspi_interrupt_b2b_slave" brief="The lpspi_interrupt_b2b example shows how to use LPSPI driver in interrupt way:In this example , we need two boards , one board used as LPSPI master and another board used as LPSPI slave.The file 'dspi_interrupt_b2b_slave.c' includes the LPSPI slave code.This example does not use the transactional API in LPSPI driver. It's a demonstration that how to use the interrupt in KSDK driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/evkmimxrt1024/driver_examples/lpspi/interrupt_b2b/slave">
          <external path="boards/evkmimxrt1024/driver_examples/lpspi/interrupt_b2b/slave" type="xml">
            <files mask="lpspi_interrupt_b2b_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_lpspi_interrupt_b2b_transfer_master" name="lpspi_interrupt_b2b_transfer_master" brief="The lpspi_interrupt_b2b_transfer example shows how to use LPSPI driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_interrupt_b2b_transfer_master.c' includes the LPSPI master code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/evkmimxrt1024/driver_examples/lpspi/interrupt_b2b_transfer/master">
          <external path="boards/evkmimxrt1024/driver_examples/lpspi/interrupt_b2b_transfer/master" type="xml">
            <files mask="lpspi_interrupt_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_lpspi_interrupt_b2b_transfer_slave" name="lpspi_interrupt_b2b_transfer_slave" brief="The lpspi_interrupt_b2b_transfer example shows how to use LPSPI driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_interrupt_b2b_transfer_slave.c' includes the LPSPI slave code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/evkmimxrt1024/driver_examples/lpspi/interrupt_b2b_transfer/slave">
          <external path="boards/evkmimxrt1024/driver_examples/lpspi/interrupt_b2b_transfer/slave" type="xml">
            <files mask="lpspi_interrupt_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_lpspi_loopback" name="lpspi_loopback" brief="The lpspi_loopback demo shows how the lpspi do a loopback transfer, LPSPImaster will transmit data to itself, so please connect the SOUT pin to SIN pin directly." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkmimxrt1024/demo_apps/lpspi_loopback">
          <external path="boards/evkmimxrt1024/demo_apps/lpspi_loopback" type="xml">
            <files mask="lpspi_loopback_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_lpspi_polling_b2b_transfer_master" name="lpspi_polling_b2b_transfer_master" brief="The lpspi_polling_b2b_transfer example shows how to use LPSPI driver in polling way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_polling_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in polling . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/evkmimxrt1024/driver_examples/lpspi/polling_b2b_transfer/master">
          <external path="boards/evkmimxrt1024/driver_examples/lpspi/polling_b2b_transfer/master" type="xml">
            <files mask="lpspi_polling_b2b_transfer_master_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_lpspi_polling_b2b_transfer_slave" name="lpspi_polling_b2b_transfer_slave" brief="The lpspi_polling_b2b_transfer example shows how to use LPSPI driver in polling way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_polling_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in polling . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/evkmimxrt1024/driver_examples/lpspi/polling_b2b_transfer/slave">
          <external path="boards/evkmimxrt1024/driver_examples/lpspi/polling_b2b_transfer/slave" type="xml">
            <files mask="lpspi_polling_b2b_transfer_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_lpuart_edma_rb_transfer" name="lpuart_edma_rb_transfer" brief="The lpuart_edma Ring Buffer Example project is to demonstrate usage of the KSDK lpuart driver." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/evkmimxrt1024/driver_examples/lpuart/edma_rb_transfer">
          <external path="boards/evkmimxrt1024/driver_examples/lpuart/edma_rb_transfer" type="xml">
            <files mask="lpuart_edma_rb_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_lpuart_edma_transfer" name="lpuart_edma_transfer" brief="The lpuart_edma Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/evkmimxrt1024/driver_examples/lpuart/edma_transfer">
          <external path="boards/evkmimxrt1024/driver_examples/lpuart/edma_transfer" type="xml">
            <files mask="lpuart_edma_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_lpuart_hardware_flow_control" name="lpuart_hardware_flow_control" brief="The lpuart_hardware_flow_control Example project is to demonstrate usage of the hardware flow control function.This example will send data to itself(loopback), and hardware flow control will be enabled in the example.The CTS(clear-to-send) pin is for transmiter to check if receiver is ready, if the CTS pin is assert, transmiter startto send data. The RTS(request-to-send) is a pin for receiver to inform the transmiter if receiver is ready to receivedata. So, please connect RTS to CTS pin directly." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/evkmimxrt1024/driver_examples/lpuart/hardware_flow_control">
          <external path="boards/evkmimxrt1024/driver_examples/lpuart/hardware_flow_control" type="xml">
            <files mask="lpuart_hardware_flow_control_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_lpuart_interrupt" name="lpuart_interrupt" brief="The lpuart_functioncal_interrupt example shows how to use lpuart driver functionalAPI to receive data with interrupt method:In this example, one lpuart instance connect to PC, the board willsend back all characters that PC send to the board." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/evkmimxrt1024/driver_examples/lpuart/interrupt">
          <external path="boards/evkmimxrt1024/driver_examples/lpuart/interrupt" type="xml">
            <files mask="lpuart_interrupt_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_lpuart_interrupt_rb_transfer" name="lpuart_interrupt_rb_transfer" brief="The lpuart_interrupt_ring_buffer Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/evkmimxrt1024/driver_examples/lpuart/interrupt_rb_transfer">
          <external path="boards/evkmimxrt1024/driver_examples/lpuart/interrupt_rb_transfer" type="xml">
            <files mask="lpuart_interrupt_rb_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_lpuart_interrupt_transfer" name="lpuart_interrupt_transfer" brief="The lpuart_interrupt Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/evkmimxrt1024/driver_examples/lpuart/interrupt_transfer">
          <external path="boards/evkmimxrt1024/driver_examples/lpuart/interrupt_transfer" type="xml">
            <files mask="lpuart_interrupt_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_lpuart_interrupt_transfer_seven_bits" name="lpuart_interrupt_transfer_seven_bits" brief="The lpuart_interrupt_transfer_seven_bits Example project is to demonstrate usage of the KSDK lpuart driver with seven data bits feature enabled.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters.NOTE: Please set com port format to &quot;7 data bits without parity bit&quot; in PC's com port tool" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/evkmimxrt1024/driver_examples/lpuart/interrupt_transfer_seven_bits">
          <external path="boards/evkmimxrt1024/driver_examples/lpuart/interrupt_transfer_seven_bits" type="xml">
            <files mask="lpuart_interrupt_transfer_seven_bits_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_lpuart_polling" name="lpuart_polling" brief="The lpuart_polling Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console instantly." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/evkmimxrt1024/driver_examples/lpuart/polling">
          <external path="boards/evkmimxrt1024/driver_examples/lpuart/polling" type="xml">
            <files mask="lpuart_polling_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_lpuart_polling_seven_bits" name="lpuart_polling_seven_bits" brief="The lpuart_polling_seven_bits Example project is to demonstrate usage of the KSDK lpuart driver with seven data bits feature enabled.In the example, you can send characters to the console back and they will be printed out onto console instantly.NOTE: Please set com port format to &quot;7 data bits without parity bit&quot; in PC's com port tool" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/evkmimxrt1024/driver_examples/lpuart/polling_seven_bits">
          <external path="boards/evkmimxrt1024/driver_examples/lpuart/polling_seven_bits" type="xml">
            <files mask="lpuart_polling_seven_bits_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_lwip_dhcp_bm" name="lwip_dhcp_bm" brief="The lwip_dhcp demo application demonstrates a DHCP demo on the lwIP TCP/IP stack.The application acts as a DHCP client and prints the status as it is progressing.Once the interface is being bound to an IP address obtained from DHCP server, address information is printed." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkmimxrt1024/lwip_examples/lwip_dhcp/bm">
          <external path="boards/evkmimxrt1024/lwip_examples/lwip_dhcp/bm" type="xml">
            <files mask="lwip_dhcp_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_lwip_dhcp_usb_bm" name="lwip_dhcp_usb_bm" brief="The lwip_dhcp_usb demo application demonstrates a DHCP demo on the lwIP TCP/IP stack.The application acts as a DHCP client and prints the status as it is progressing.Once the interface is being bound to an IP address obtained from DHCP server, address information is printed." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkmimxrt1024/lwip_examples/lwip_dhcp_usb/bm">
          <external path="boards/evkmimxrt1024/lwip_examples/lwip_dhcp_usb/bm" type="xml">
            <files mask="lwip_dhcp_usb_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_lwip_dhcp_usb_freertos" name="lwip_dhcp_usb_freertos" brief="The lwip_dhcp demo application demonstrates a DHCP demo on the lwIP TCP/IP stack.The application acts as a DHCP client and prints the status as it is progressing.Once the interface is being bound to an IP address obtained from DHCP server, address information is printed." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkmimxrt1024/lwip_examples/lwip_dhcp_usb/freertos">
          <external path="boards/evkmimxrt1024/lwip_examples/lwip_dhcp_usb/freertos" type="xml">
            <files mask="lwip_dhcp_usb_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_lwip_httpscli_mbedTLS_freertos" name="lwip_httpscli_mbedTLS_freertos" brief="The lwip_https_client_mbedTLS demo application demonstrates an HTTPS client set up on lwIP TCP/IP and the MbedTLS stack withFreeRTOS. The board acts as an HTTP client and sends a request to the HTTPServer.Demo requires DHCP and DNS servers." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkmimxrt1024/lwip_examples/lwip_httpscli_mbedTLS/freertos">
          <external path="boards/evkmimxrt1024/lwip_examples/lwip_httpscli_mbedTLS/freertos" type="xml">
            <files mask="lwip_httpscli_mbedTLS_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_lwip_httpsrv_bm" name="lwip_httpsrv_bm" brief="The lwip_httpsrv demo application demonstrates an HTTPServer on the lwIP TCP/IP stack with bare metal SDK or FreeRTOS.The user uses an Internet browser to send a request for connection. The board acts as an HTTP server and sends a Webpage back to the PC." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkmimxrt1024/lwip_examples/lwip_httpsrv/bm">
          <external path="boards/evkmimxrt1024/lwip_examples/lwip_httpsrv/bm" type="xml">
            <files mask="lwip_httpsrv_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_lwip_httpsrv_freertos" name="lwip_httpsrv_freertos" brief="The lwip_httpsrv demo application demonstrates an HTTPServer on the lwIP TCP/IP stack with bare metal SDK or FreeRTOS.The user uses an Internet browser to send a request for connection. The board acts as an HTTP server and sends a Webpage back to the PC." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkmimxrt1024/lwip_examples/lwip_httpsrv/freertos">
          <external path="boards/evkmimxrt1024/lwip_examples/lwip_httpsrv/freertos" type="xml">
            <files mask="lwip_httpsrv_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_lwip_iperf_bm" name="lwip_iperf_bm" brief="This is the IPerf server example to check your bandwidth using the network performance measurement IPerf application on a PC as a client.It is currently a minimal implementation providing an IPv4 TCP server only.Instead of the command line IPerf application, for more convenience, it is recommended to use the JPerf2 graphical tool, which can be downloaded here: https://sourceforge.net/projects/iperf/files/jperf/jperf%202.0.0/jperf-2.0.0.zip/download" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkmimxrt1024/lwip_examples/lwip_iperf/bm">
          <external path="boards/evkmimxrt1024/lwip_examples/lwip_iperf/bm" type="xml">
            <files mask="lwip_iperf_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_lwip_mqtt_freertos" name="lwip_mqtt_freertos" brief="The lwip_mqtt demo application demonstrates MQTT client connecting to MQTT broker via unsecured socket. The application obtains IP and DNS addresses from DHCP and resolves broker's hostname if needed. Then it connects to the broker and subscribes to the &quot;lwip_topic/#&quot; and &quot;lwip_other/#&quot; topics. Further it publishes five messages to the &quot;lwip_topic/100&quot; which are also received back as the board is subscribed to the &quot;lwip_topic/#&quot;. Meanwhile it continues to receive messages published to the subscribed topics from other clients." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkmimxrt1024/lwip_examples/lwip_mqtt/freertos">
          <external path="boards/evkmimxrt1024/lwip_examples/lwip_mqtt/freertos" type="xml">
            <files mask="lwip_mqtt_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_lwip_ping_bm" name="lwip_ping_bm" brief="The lwip_ping demo application demonstrates a Ping Demo on the lwIP TCP/IP stack, which uses the ICMP protocol. Theapplication periodically sends the ICMP echo request to a PC, and processes the PC reply. Type &quot;ping $board_address&quot;in the PC command window to send an ICMP echo request to the board. The lwIP stack sends the ICMP echo reply back to thePC." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkmimxrt1024/lwip_examples/lwip_ping/bm">
          <external path="boards/evkmimxrt1024/lwip_examples/lwip_ping/bm" type="xml">
            <files mask="lwip_ping_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_lwip_ping_freertos" name="lwip_ping_freertos" brief="The lwip_ping demo application demonstrates a Ping Demo on the lwIP TCP/IP stack which using the ICMP protocol. Theapplication periodically sends the ICMP echo request to a PC and processes the PC reply. Type the &quot;ping $board_address&quot;in the PC command window to send an ICMP echo request to the board. The lwIP stack sends the ICMP echo reply back to thePC." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkmimxrt1024/lwip_examples/lwip_ping/freertos">
          <external path="boards/evkmimxrt1024/lwip_examples/lwip_ping/freertos" type="xml">
            <files mask="lwip_ping_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_lwip_tcpecho_bm" name="lwip_tcpecho_bm" brief="The lwip_tcpecho demo application demonstrates a TCP echo demo on the lwIP TCP/IP stack with bare metal KSDK orFreeRTOS. The demo uses the TCP protocol and acts as an echo server. The application sends back the received TCPpackets from the PC, which can be used to test whether a TCP connection is available." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkmimxrt1024/lwip_examples/lwip_tcpecho/bm">
          <external path="boards/evkmimxrt1024/lwip_examples/lwip_tcpecho/bm" type="xml">
            <files mask="lwip_tcpecho_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_lwip_tcpecho_freertos" name="lwip_tcpecho_freertos" brief="The lwip_tcpecho demo application demonstrates a TCP echo demo on the lwIP TCP/IP stack with bare metal KSDK orFreeRTOS. The demo uses the TCP protocol and acts as an echo server. The application sends back the received TCPpackets from the PC, which can be used to test whether a TCP connection is available." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkmimxrt1024/lwip_examples/lwip_tcpecho/freertos">
          <external path="boards/evkmimxrt1024/lwip_examples/lwip_tcpecho/freertos" type="xml">
            <files mask="lwip_tcpecho_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_lwip_udpecho_bm" name="lwip_udpecho_bm" brief="The lwip_udpecho demo application demonstrates a UDP echo demo on the lwIP TCP/IP stack with bare metal KSDK orFreeRTOS, which uses the UDP protocol and acts as an echo server. The application sends back the received UDP packetsfrom the PC, which can be used to test whether a UDP connection is available." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkmimxrt1024/lwip_examples/lwip_udpecho/bm">
          <external path="boards/evkmimxrt1024/lwip_examples/lwip_udpecho/bm" type="xml">
            <files mask="lwip_udpecho_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_lwip_udpecho_freertos" name="lwip_udpecho_freertos" brief="The lwip_udpecho demo application demonstrates a UDP echo demo on the lwIP TCP/IP stack with bare metal KSDK orFreeRTOS, which uses the UDP protocol and acts as an echo server. The application sends back the received UDP packetsfrom the PC, which can be used to test whether a UDP connection is available." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkmimxrt1024/lwip_examples/lwip_udpecho/freertos">
          <external path="boards/evkmimxrt1024/lwip_examples/lwip_udpecho/freertos" type="xml">
            <files mask="lwip_udpecho_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_mbedtls_benchmark" name="mbedtls_benchmark" brief="The mbdedTLS Benchmark demo application performs cryptographic algorithm benchmarking and prints results to theterminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="mbedtls_examples" path="boards/evkmimxrt1024/mbedtls_examples/mbedtls_benchmark">
          <external path="boards/evkmimxrt1024/mbedtls_examples/mbedtls_benchmark" type="xml">
            <files mask="mbedtls_benchmark_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_mbedtls_selftest" name="mbedtls_selftest" brief="The mbdedTLS SelfTest program performs cryptographic algorithm testing and prints results to theterminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="mbedtls_examples" path="boards/evkmimxrt1024/mbedtls_examples/mbedtls_selftest">
          <external path="boards/evkmimxrt1024/mbedtls_examples/mbedtls_selftest" type="xml">
            <files mask="mbedtls_selftest_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_mc_pmsm" name="mc_pmsm" brief="This example demonstrates the control of the PMSM." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkmimxrt1024/demo_apps/mc_pmsm/pmsm_enc">
          <external path="boards/evkmimxrt1024/demo_apps/mc_pmsm/pmsm_enc" type="xml">
            <files mask="mc_pmsm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_mco_manager" name="mco_manager" brief="Example manager application using MicroCANopen Plus library" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="canopen_examples" path="boards/evkmimxrt1024/canopen_examples/mco_manager">
          <external path="boards/evkmimxrt1024/canopen_examples/mco_manager" type="xml">
            <files mask="mco_manager_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_mco_slave" name="mco_slave" brief="Example slave application using MicroCANopen Plus library" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="canopen_examples" path="boards/evkmimxrt1024/canopen_examples/mco_slave">
          <external path="boards/evkmimxrt1024/canopen_examples/mco_slave" type="xml">
            <files mask="mco_slave_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_mmccard_freertos" name="mmccard_freertos" brief="The MMCCARD FreeRTOS project is a demonstration program that uses the SDK software. It reads/writes/erases the MMC card continusly. The purpose of this example is to show how to use MMCCARD driverwith FreeRTOS in SDK software to access MMC card.Note:User can use MMC plus card or emmc(on board IC, but not recommand use emmc socket,due to high speed timing restriction)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/mmccard_freertos" path="boards/evkmimxrt1024/sdmmc_examples/mmccard_freertos">
          <external path="boards/evkmimxrt1024/sdmmc_examples/mmccard_freertos" type="xml">
            <files mask="mmccard_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_ocotp_example" name="ocotp_example" brief="The ocotp driver example shows how to operation the OCOTP register with driver API." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/ocotp" path="boards/evkmimxrt1024/driver_examples/ocotp">
          <external path="boards/evkmimxrt1024/driver_examples/ocotp" type="xml">
            <files mask="ocotp_example_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_pin_detect_hid_mouse_bm" name="pin_detect_hid_mouse_bm" brief="This pin detect HID example supports the mouse device. The application prints the operation information when the mouse device is attached or plugged in to the PC host." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_pin_detect_hid_mouse/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_pin_detect_hid_mouse/bm" type="xml">
            <files mask="pin_detect_hid_mouse_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_pin_detect_hid_mouse_freertos" name="pin_detect_hid_mouse_freertos" brief="This pin detect HID example supports the mouse device. The application prints the operation information when the mouse device is attached or plugged in to the PC host." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_pin_detect_hid_mouse/freertos">
          <external path="boards/evkmimxrt1024/usb_examples/usb_pin_detect_hid_mouse/freertos" type="xml">
            <files mask="pin_detect_hid_mouse_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_pin_detect_hid_msd_bm" name="pin_detect_hid_msd_bm" brief="This pin detect HID MSD example can become a HID mouse device or a MSD host that supports U-disk. The application prints the operation information when the U-disk is attached or is plugged into the PC host." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_pin_detect_hid_msd/bm">
          <external path="boards/evkmimxrt1024/usb_examples/usb_pin_detect_hid_msd/bm" type="xml">
            <files mask="pin_detect_hid_msd_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_pin_detect_hid_msd_freertos" name="pin_detect_hid_msd_freertos" brief="This pin detect HID MSD example can become a HID mouse device or a MSD host that supports U-disk. The application prints the operation information when the U-disk is attached or is plugged into the PC host." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt1024/usb_examples/usb_pin_detect_hid_msd/freertos">
          <external path="boards/evkmimxrt1024/usb_examples/usb_pin_detect_hid_msd/freertos" type="xml">
            <files mask="pin_detect_hid_msd_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_pit" name="pit" brief="The PIT project is a simple demonstration program of the SDK PIT driver. It sets up the PIThardware block to trigger a periodic interrupt after every 1 second. When the PIT interrupt is triggereda message a printed on the UART terminal and an LED is toggled on the board." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples" path="boards/evkmimxrt1024/driver_examples/pit">
          <external path="boards/evkmimxrt1024/driver_examples/pit" type="xml">
            <files mask="pit_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_power_mode_switch_bm" name="power_mode_switch_bm" brief="The Power mode switch demo application demonstrates the use of power modes in the KSDK. The demo prints the power mode menuthrough the debug console, where the user can set the MCU to a specific power mode. The user can also set the wakeupsource by following the debug console prompts. The purpose of this demo is to show how to switch between different power modes, and how to configure a wakeup source and wakeup the MCU from low power modes. Tips: This demo is to show how the various power mode can switch to each other. However, in actual low power use case, to save energy and reduce the consumption even more, many things can be done including: - Disable the clock for unnecessary module during low power mode. That means, programmer can disable the clocks before entering the low power mode and re-enable them after exiting the low power mode when necessary. - Disable the function for unnecessary part of a module when other part would keep working in low power mode. At the most time, more powerful function means more power consumption. For example, disable the digital function for the unnecessary pin mux, and so on. - Set the proper pin state (direction and logic level) according to the actual application hardware. Otherwise, the pin cirrent would be activied unexpectedly waste some energy. - Other low power consideration based on the actual application hardware. - Debug pins(e.g SWD_DIO) would consume addtional power, had better to disable related pins or disconnect them. " toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkmimxrt1024/demo_apps/power_mode_switch/bm">
          <external path="boards/evkmimxrt1024/demo_apps/power_mode_switch/bm" type="xml">
            <files mask="power_mode_switch_bm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_power_mode_switch_rtos" name="power_mode_switch_rtos" brief="The Power mode switch demo application demonstrates the use of power modes in the KSDK. The demo prints the power mode menuthrough the debug console, where the user can set the MCU to a specific power mode. The user can also set the wakeupsource by following the debug console prompts. The purpose of this demo is to show how to switch between different power modes, and how to configure a wakeup source and wakeup the MCU from low power modes. Tips: This demo is to show how the various power mode can switch to each other. However, in actual low power use case, to save energy and reduce the consumption even more, many things can be done including: - Disable the clock for unnecessary module during low power mode. That means, programmer can disable the clocks before entering the low power mode and re-enable them after exiting the low power mode when necessary. - Disable the function for unnecessary part of a module when other part would keep working in low power mode. At the most time, more powerful function means more power consumption. For example, disable the digital function for the unnecessary pin mux, and so on. - Set the proper pin state (direction and logic level) according to the actual application hardware. Otherwise, the pin cirrent would be activied unexpectedly waste some energy. - Other low power consideration based on the actual application hardware. - Debug pins(e.g SWD_DIO) would consume addtional power, had better to disable related pins or disconnect them. " toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkmimxrt1024/demo_apps/power_mode_switch/rtos">
          <external path="boards/evkmimxrt1024/demo_apps/power_mode_switch/rtos" type="xml">
            <files mask="power_mode_switch_rtos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_pwm" name="pwm" brief="The PWM project is a simple demonstration program of the SDK PWM driver.The pulse width modulator (PWM) module contains PWM submodules, each of which is set up to control a single half-bridge power stage.Fault channel support is provided. This PWM module can generate various switching patterns, including highly sophisticated waveforms.It can be used to control all known Switched Mode Power Supplies (SMPS) topologies." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples" path="boards/evkmimxrt1024/driver_examples/pwm">
          <external path="boards/evkmimxrt1024/driver_examples/pwm" type="xml">
            <files mask="pwm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_pwm_fault" name="pwm_fault" brief="This demo application demonstrates the EflexPWM fault demo.This application demonstrates the pulse with modulation function of EflexPWM module. It outputs thePWM to control the intensity of the LED. PWM shut down when a fault signal is detected on the CMPoutput. One input of CMP, other input is from internal DAC." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkmimxrt1024/demo_apps/pwm_fault">
          <external path="boards/evkmimxrt1024/demo_apps/pwm_fault" type="xml">
            <files mask="pwm_fault_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_qtmr_inputcapture_outputpwm" name="qtmr_inputcapture_outputpwm" brief="The QTMR project is a demonstration program of the SDK QTMR driver's input capture and output pwm feature.The example sets up a QTMR channel for input capture. Once the input signal is received,this example will enter interrupt and print the capture value.The example also sets up one QTMR channel to output pwm. The user should probe a 50Khz PWM signal output with50% dutycycle with a oscilloscope. " toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples" path="boards/evkmimxrt1024/driver_examples/qtmr/inputcapture_outputpwm">
          <external path="boards/evkmimxrt1024/driver_examples/qtmr/inputcapture_outputpwm" type="xml">
            <files mask="qtmr_inputcapture_outputpwm_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_qtmr_inputcapture_outputpwm_dma" name="qtmr_inputcapture_outputpwm_dma" brief="The QTMR project is a demonstration program of the SDK QTMR driver's input capture and output pwm feature by DMA.The example sets up a QTMR channel for input capture. Once the input signal is received,this example will print the capture value.The example also sets up one QTMR channel to output pwm. The user should probe a 50Khz PWM signal output with50% dutycycle with a oscilloscope.The user can enter a value to update the Duty cycle." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples" path="boards/evkmimxrt1024/driver_examples/qtmr/inputcapture_outputpwm_dma">
          <external path="boards/evkmimxrt1024/driver_examples/qtmr/inputcapture_outputpwm_dma" type="xml">
            <files mask="qtmr_inputcapture_outputpwm_dma_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_qtmr_timer" name="qtmr_timer" brief="The QTMR project is a simple demonstration program of the SDK QTMR driver to use QTMR as a timer.The quad-timer module provides four timer channels with a variety of controls affecting both individualand multi-channel features. It sets up the QTMR hardware block to trigger an interrupt every 50 millisecond.When chaining the first channel and the second channel, Timer interrupt occur every 10 second.When the QTMR interrupt is triggered a message a printed on the UART terminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples" path="boards/evkmimxrt1024/driver_examples/qtmr/timer">
          <external path="boards/evkmimxrt1024/driver_examples/qtmr/timer" type="xml">
            <files mask="qtmr_timer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_rtwdog" name="rtwdog" brief="The RTWDOG Example project is to demonstrate usage of the KSDK rtwdog driver.In this example, fast testing is first implemented to test the rtwdog.After this, refreshing the watchdog in None-window mode and window mode is executed.Note rtwdog is disabled in SystemInit function which means rtwdog is disabledafter chip emerges from reset." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/rtwdog" path="boards/evkmimxrt1024/driver_examples/rtwdog">
          <external path="boards/evkmimxrt1024/driver_examples/rtwdog" type="xml">
            <files mask="rtwdog_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_safety_iec60730b" name="safety_iec60730b" brief="This example demonstrates the core self-test of the IEC60730B." toolchain="iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkmimxrt1024/demo_apps/safety_iec60730b">
          <external path="boards/evkmimxrt1024/demo_apps/safety_iec60730b" type="xml">
            <files mask="safety_iec60730b_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_sai" name="sai" brief="The SAI Demo application demonstrates complicated digital audio playback and record case. The demo provide these features below:1. Duplex audio transfer, record and playback at same time.2. Playback a 250 Hz sine wave data generated by CMSIS-DSP library. Also compute the fundamental frequency using Fast Fourier Transform with CMSIS-DSP library.3. Record a 5 seconds audio to sdcard with a FatFs system. After record, playback it. This feature may only existed in platform which support sdhc." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkmimxrt1024/demo_apps/sai">
          <external path="boards/evkmimxrt1024/demo_apps/sai" type="xml">
            <files mask="sai_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_sai_edma_record_playback" name="sai_edma_record_playback" brief="The sai_edma_record_playback example shows how to use sai driver with EDMA: In this example, one sai instance record the audio data from input and playbacks the audio data." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sai" path="boards/evkmimxrt1024/driver_examples/sai/edma_record_playback">
          <external path="boards/evkmimxrt1024/driver_examples/sai/edma_record_playback" type="xml">
            <files mask="sai_edma_record_playback_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_sai_edma_transfer" name="sai_edma_transfer" brief="The sai_edma_transfer example shows how to use sai driver with EDMA:In this example, one sai instance playbacks the audio data stored in flash/SRAM using EDMA channel." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sai" path="boards/evkmimxrt1024/driver_examples/sai/edma_transfer">
          <external path="boards/evkmimxrt1024/driver_examples/sai/edma_transfer" type="xml">
            <files mask="sai_edma_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_sai_interrupt" name="sai_interrupt" brief="The sai_interrupt example shows how to use sai functional API to implement interrupt playback:In this example, one sai instance playbacks the audio data stored in flash/SRAM using interrupt." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sai" path="boards/evkmimxrt1024/driver_examples/sai/interrupt">
          <external path="boards/evkmimxrt1024/driver_examples/sai/interrupt" type="xml">
            <files mask="sai_interrupt_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_sai_interrupt_record_playback" name="sai_interrupt_record_playback" brief="The sai_interrupt_record_playback example shows how to use sai driver with record and playback features: In this example, one sai instance record the audio data from input and playbacks the audio data." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sai" path="boards/evkmimxrt1024/driver_examples/sai/interrupt_record_playback">
          <external path="boards/evkmimxrt1024/driver_examples/sai/interrupt_record_playback" type="xml">
            <files mask="sai_interrupt_record_playback_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_sai_interrupt_transfer" name="sai_interrupt_transfer" brief="The sai_interrupt_transfer example shows how to use sai driver with interrupt:In this example, one sai instance playbacks the audio data stored in flash/SRAM using interrupt." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sai" path="boards/evkmimxrt1024/driver_examples/sai/interrupt_transfer">
          <external path="boards/evkmimxrt1024/driver_examples/sai/interrupt_transfer" type="xml">
            <files mask="sai_interrupt_transfer_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_sai_peripheral" name="sai_peripheral" brief="The SAI Demo application demonstrates complicated digital audio playback and record case. The demo provide these features below:1. Duplex audio transfer, record and playback at same time.2. Playback a 250 Hz sine wave data generated by CMSIS-DSP library. Also compute the fundamental frequency using Fast Fourier Transform with CMSIS-DSP library.3. Record a 5 seconds audio to sdcard with a FatFs system. After record, playback it. This feature may only existed in platform which support sdhc." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkmimxrt1024/demo_apps/sai_peripheral">
          <external path="boards/evkmimxrt1024/demo_apps/sai_peripheral" type="xml">
            <files mask="sai_peripheral_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_sdcard_fatfs" name="sdcard_fatfs" brief="The SDCARD FATFS project is a demonstration program that uses the SDK software. Tt mounts a file system based on a SD card then does &quot;creat directory/read directory/create file/write file/read file&quot;operation. The file sdhc_config.h has default SDHC configuration which can be adjusted to let carddriver has different performance. The purpose of this example is to show how to use SDCARD driver based FATFS disk in SDK software." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/sdcard_fatfs" path="boards/evkmimxrt1024/sdmmc_examples/sdcard_fatfs">
          <external path="boards/evkmimxrt1024/sdmmc_examples/sdcard_fatfs" type="xml">
            <files mask="sdcard_fatfs_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_sdcard_fatfs_freertos" name="sdcard_fatfs_freertos" brief="The SDCARD FATFS FREERTOS project is a demonstration program that uses the SDK software. The purpose of this example is to show how to use SDCARD with fatfs and freertos." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/sdcard_fatfs_freertos" path="boards/evkmimxrt1024/sdmmc_examples/sdcard_fatfs_freertos">
          <external path="boards/evkmimxrt1024/sdmmc_examples/sdcard_fatfs_freertos" type="xml">
            <files mask="sdcard_fatfs_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_sdcard_freertos" name="sdcard_freertos" brief="The SDCARD FreeRTOS project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver with FreeRTOS in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/sdcard_freertos" path="boards/evkmimxrt1024/sdmmc_examples/sdcard_freertos">
          <external path="boards/evkmimxrt1024/sdmmc_examples/sdcard_freertos" type="xml">
            <files mask="sdcard_freertos_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_sdcard_interrupt" name="sdcard_interrupt" brief="The SDCARD Interrupt project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver andshow how to use interrupt based transfer API in SDHC driver in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/sdcard_interrupt" path="boards/evkmimxrt1024/sdmmc_examples/sdcard_interrupt">
          <external path="boards/evkmimxrt1024/sdmmc_examples/sdcard_interrupt" type="xml">
            <files mask="sdcard_interrupt_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_sdcard_polling" name="sdcard_polling" brief="The SDCARD Polling project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver andshow how to use polling based transfer API in SDHC driver in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/sdcard_polling" path="boards/evkmimxrt1024/sdmmc_examples/sdcard_polling">
          <external path="boards/evkmimxrt1024/sdmmc_examples/sdcard_polling" type="xml">
            <files mask="sdcard_polling_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_semc" name="semc" brief="The sdramc example shows how to use SEMC controller driver to initialize the external SDRAM chip." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/semc" path="boards/evkmimxrt1024/driver_examples/semc/sdram">
          <external path="boards/evkmimxrt1024/driver_examples/semc/sdram" type="xml">
            <files mask="semc_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_shell" name="shell" brief="The Shell Demo application demonstrates to control Leds by commands." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkmimxrt1024/demo_apps/shell">
          <external path="boards/evkmimxrt1024/demo_apps/shell" type="xml">
            <files mask="shell_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_snvs_hp_rtc" name="snvs_hp_rtc" brief="The SNVS HP RTC project is a simple demonstration program of the SDK SNVS HP driver. The test will set up RTC date and time to a predefined value and starts the counter. RTC then triggers an alarm after a user specified time period. The alarm will be set with reference to this predefined date and time." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/snvs" path="boards/evkmimxrt1024/driver_examples/snvs/snvs_hp_rtc">
          <external path="boards/evkmimxrt1024/driver_examples/snvs/snvs_hp_rtc" type="xml">
            <files mask="snvs_hp_rtc_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_snvs_lp_srtc" name="snvs_lp_srtc" brief="The SNVS LP SRTC project is a simple demonstration program of the SDK SNVS LP driver. The test will set up secure RTC (SRTC) date and time to a predefined value and starts the counter, then the SRTC counter value is synchronized with non secure RTC (RTC). RTC then triggers an alarm after a user specified time period. The alarm will be set with reference to this predefined dateand time." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/snvs" path="boards/evkmimxrt1024/driver_examples/snvs/snvs_lp_srtc">
          <external path="boards/evkmimxrt1024/driver_examples/snvs/snvs_lp_srtc" type="xml">
            <files mask="snvs_lp_srtc_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_src_reset_source" name="src_reset_source" brief="The src_reset_source example shows how to check the reset source and boot option with SRC driver.When run this example firstly on the board after power up, the POR reset or IPP reset flag would be asserted. But when running it again, the flag would be cleared, since it is no longer a reset.Usually, the reset flags are used and cleared by ROM code or bootloader to check which reset occurred. With the boot mode words, the initial boot code would go to the right way to execute the start code. For example, when the SoC is waked up from some low power mode, all necessary data are already staying in the RAM, the CPU would not have to reload the program to RAM and execute the application directly." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/src" path="boards/evkmimxrt1024/driver_examples/src/src_reset_source">
          <external path="boards/evkmimxrt1024/driver_examples/src/src_reset_source" type="xml">
            <files mask="src_reset_source_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_temperaturemonitor" name="temperaturemonitor" brief="The TEMPMON project is a simple demonstration program of the SDK TEMPMON driver.The temperatue monitor (TEMPMON) module features alarm functions that can raise independent interrupt signals if the temperature is above two high-temperature thresholds and below a low temperature threshold, the system can then use this module to monitor the on-die temperature and take appropriate actions such as throttling back the core frequency when a the high temperature interrupt is set." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples" path="boards/evkmimxrt1024/driver_examples/tempmon">
          <external path="boards/evkmimxrt1024/driver_examples/tempmon" type="xml">
            <files mask="temperaturemonitor_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_trng_random" name="trng_random" brief="The True Random Number Generator (TRNG) is a hardware accelerator module that generates a 512-bitentropy as needed by an entropy consuming module or by other post processing functions. The TRNGExample project is a demonstration program that uses the KSDK software to generate random numbersand prints them to the terminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/trng" path="boards/evkmimxrt1024/driver_examples/trng/random">
          <external path="boards/evkmimxrt1024/driver_examples/trng/random" type="xml">
            <files mask="trng_random_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_wdog01" name="wdog01" brief="The WDOG Example project is to demonstrate usage of the KSDK wdog driver.In this example,implemented to test the wdog.And then after 10 times of refreshing the watchdog, a timeout reset is generated.We also try to refresh out of window to trigger reset after 10 times of refreshing.Please notice that because WDOG control registers are write-once only, so the WDOG_Init function and the WDOG_Disable function can be called only once after reset." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/wdog" path="boards/evkmimxrt1024/driver_examples/wdog">
          <external path="boards/evkmimxrt1024/driver_examples/wdog" type="xml">
            <files mask="wdog01_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_wiced_ble_4343W" name="wiced_ble_4343W" brief="Demonstrates Cypress WiFi and BLE connected over USDHC/SDIO" toolchain="armgcc iar mcuxpresso" compiler="compiler_gcc compiler_iar" category="wifi_examples" path="boards/evkmimxrt1024/ble_cypress_examples/wiced_ble_4343W">
          <external path="boards/evkmimxrt1024/ble_cypress_examples/wiced_ble_4343W" type="xml">
            <files mask="wiced_ble_4343W_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_wiced_bt_passthrough_4343W" name="wiced_bt_passthrough_4343W" brief="Sends HCI commands to Cypress Bluetooth via UART" toolchain="armgcc iar mcuxpresso" compiler="compiler_gcc compiler_iar" category="wifi_examples" path="boards/evkmimxrt1024/ble_cypress_examples/wiced_bt_passthrough_4343W">
          <external path="boards/evkmimxrt1024/ble_cypress_examples/wiced_bt_passthrough_4343W" type="xml">
            <files mask="wiced_bt_passthrough_4343W_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_wiced_iperf_4343W" name="wiced_iperf_4343W" brief="Demonstrates Cypress WiFi connected over USDHC/SDIO" toolchain="armgcc iar mcuxpresso" compiler="compiler_gcc compiler_iar" category="wifi_examples" path="boards/evkmimxrt1024/wifi_cypress_examples/wiced_iperf_4343W">
          <external path="boards/evkmimxrt1024/wifi_cypress_examples/wiced_iperf_4343W" type="xml">
            <files mask="wiced_iperf_4343W_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_wiced_mfg_test_4343W" name="wiced_mfg_test_4343W" brief="Manufacturing Test Application" toolchain="armgcc iar mcuxpresso" compiler="compiler_gcc compiler_iar" category="wifi_examples" path="boards/evkmimxrt1024/wifi_cypress_examples/wiced_mfg_test_4343W">
          <external path="boards/evkmimxrt1024/wifi_cypress_examples/wiced_mfg_test_4343W" type="xml">
            <files mask="wiced_mfg_test_4343W_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_xbar_aoi" name="xbar_aoi" brief="The XBAR AOI demo application demonstrates the usage of the XBAR, AOI peripheral to combine interruptfrom CMP and PIT. If the button is pressed(CMP interrupt) and the PIT periodic interrupt occurs a message is printed." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkmimxrt1024/demo_apps/xbar_aoi">
          <external path="boards/evkmimxrt1024/demo_apps/xbar_aoi" type="xml">
            <files mask="xbar_aoi_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_xbar_aoi_peripheral" name="xbar_aoi_peripheral" brief="The XBAR AOI demo application demonstrates the usage of the XBAR, AOI peripheral to combine interruptfrom CMP and PIT. If the button is pressed(CMP interrupt) and the PIT periodic interrupt occurs a message is printed." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkmimxrt1024/demo_apps/xbar_aoi_peripheral">
          <external path="boards/evkmimxrt1024/demo_apps/xbar_aoi_peripheral" type="xml">
            <files mask="xbar_aoi_peripheral_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_xbara" name="xbara" brief="The Xbara project is a simple demonstration program of the SDK Xbara driver.The intended applicationof this module is to provide a flexible crossbar switch function that allows any input to beconnected to any output under user control.It sets up the Xbara hardware block to trigger a periodicinterrupt after every 1 second. When the Xbar interrupt is triggered a message a printed on the UARTterminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples" path="boards/evkmimxrt1024/driver_examples/xbara">
          <external path="boards/evkmimxrt1024/driver_examples/xbara" type="xml">
            <files mask="xbara_v3_8.xml"/>
          </external>
        </example>
      </examples>
      <debug_configurations>
        <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
          <drivers>
            <driver id_refs="PROGRAM_FLASH_evkmimxrt1024">
              <driverBinary path="devices/MIMXRT1024/mcuxpresso" type="binary">
                <files mask="MIMXRT1024.cfx"/>
              </driverBinary>
            </driver>
          </drivers>
        </debug_configuration>
      </debug_configurations>
    </board>
    <board id="evkmimxrt1024_agm01" name="MIMXRT1024-EVK-AGM01" href="" version="1.0.0" package="MIMXRT1024DAG5A" type="kit">
      <description>i.MX RT1024 Evaluation Kit with 9-Axis sensor shield board FRDM-STBC-AGM01 having FXAS21002C Gyroscope &amp; FXOS8700CQ E-compass sensors</description>
      <image path="boards/evkmimxrt1024_agm01" type="image">
        <files mask="evkmimxrt1024_agm01.png"/>
      </image>
      <memory>
        <memoryBlock id="PROGRAM_FLASH_evkmimxrt1024_agm01" name="PROGRAM_FLASH" addr="60000000" size="00400000" type="Flash" access="RO"/>
        <memoryBlock id="BOARD_SDRAM_evkmimxrt1024_agm01" name="BOARD_SDRAM" addr="80000000" size="01e00000" type="RAM" access="RW"/>
        <memoryBlock id="NCACHE_REGION_evkmimxrt1024_agm01" name="NCACHE_REGION" addr="81e00000" size="00200000" type="RAM" access="RW"/>
      </memory>
      <total_memory flash_size_kb="8192" ram_size_kb="32768"/>
      <examples>
        <example id="evkmimxrt1024_agm01_fxas21002_fifo" name="fxas21002_fifo" brief="The FXAS21002 FIFO example application demonstrates the use of the FXAS21002 sensor in Buffered (FIFO) Mode.The example demonstrates configuration of all registers reguired to put the sensor in FIFO Mode and read out samples.The sensor reads samples and are buffered upto the configured Water Mark Level and then a Flag is set." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="issdk/sensors" path="boards/evkmimxrt1024_agm01/issdk_examples/sensors/fxas21002/fxas21002_fifo">
          <external path="boards/evkmimxrt1024_agm01/issdk_examples/sensors/fxas21002/fxas21002_fifo" type="xml">
            <files mask="fxas21002_fifo_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_agm01_fxas21002_poll" name="fxas21002_poll" brief="The FXAS21002 FIFO example application demonstrates the use of the FXAS21002 sensor in Buffered (FIFO) Mode.The example demonstrates configuration of all registers reguired to put the sensor in FIFO Mode and read out samples.The sensor reads samples and are buffered upto the configured Water Mark Level and then a Flag is set." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="issdk/sensors" path="boards/evkmimxrt1024_agm01/issdk_examples/sensors/fxas21002/fxas21002_poll">
          <external path="boards/evkmimxrt1024_agm01/issdk_examples/sensors/fxas21002/fxas21002_poll" type="xml">
            <files mask="fxas21002_poll_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_agm01_fxos8700_fifo" name="fxos8700_fifo" brief="The FXAS8700 FIFO example application demonstrates the use of the FXAS8700 sensor in Buffered (FIFO) Mode.The example demonstrates configuration of all registers reguired to put the sensor in FIFO Mode and read out samples.The sensor reads samples and are buffered upto the configured Water Mark Level and then a Flag is set." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="issdk/sensors" path="boards/evkmimxrt1024_agm01/issdk_examples/sensors/fxos8700/fxos8700_fifo">
          <external path="boards/evkmimxrt1024_agm01/issdk_examples/sensors/fxos8700/fxos8700_fifo" type="xml">
            <files mask="fxos8700_fifo_v3_8.xml"/>
          </external>
        </example>
        <example id="evkmimxrt1024_agm01_fxos8700_poll" name="fxos8700_poll" brief="The FXAS8700 FIFO example application demonstrates the use of the FXAS8700 sensor in Buffered (FIFO) Mode.The example demonstrates configuration of all registers reguired to put the sensor in FIFO Mode and read out samples.The sensor reads samples and are buffered upto the configured Water Mark Level and then a Flag is set." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="issdk/sensors" path="boards/evkmimxrt1024_agm01/issdk_examples/sensors/fxos8700/fxos8700_poll">
          <external path="boards/evkmimxrt1024_agm01/issdk_examples/sensors/fxos8700/fxos8700_poll" type="xml">
            <files mask="fxos8700_poll_v3_8.xml"/>
          </external>
        </example>
      </examples>
      <debug_configurations>
        <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
          <drivers>
            <driver id_refs="PROGRAM_FLASH_evkmimxrt1024_agm01">
              <driverBinary path="devices/MIMXRT1024/mcuxpresso" type="binary">
                <files mask="MIMXRT1024.cfx"/>
              </driverBinary>
            </driver>
          </drivers>
        </debug_configuration>
      </debug_configurations>
    </board>
  </boards>
  <devices>
    <device id="MIMXRT1024xxxxx" name="MIMXRT1024" version="1.0.0" full_name="MIMXRT1024xxxxx" family="MIMXRT1020" platform="i.MX">
      <description>MIMXRT1021: i.MX® MIMXRT1021 500MHz, 256KB SRAM Microcontrollers (MCUs) based on ARM® Cortex®-M7 Core</description>
      <metadataSet>
        <metadata key="vendor" value="NXP"/>
        <metadata key="compatible_device.segger" value="MIMXRT1024DAG5A"/>
        <metadata key="compatible_device.pemicro" value="IMXRT1024"/>
      </metadataSet>
      <core id="core0_MIMXRT1024xxxxx" name="core0" fpu="true" type="cm7"/>
      <memory>
        <memoryBlock id="PROGRAM_FLASH_MIMXRT1024xxxxx" name="PROGRAM_FLASH" addr="60000000" size="00400000" type="Flash" access="RO"/>
        <memoryBlock id="SRAM_DTC_MIMXRT1024xxxxx" name="SRAM_DTC" addr="20000000" size="00010000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM_ITC_MIMXRT1024xxxxx" name="SRAM_ITC" addr="00000000" size="00010000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM_OC_MIMXRT1024xxxxx" name="SRAM_OC" addr="20200000" size="00020000" type="RAM" access="RW"/>
      </memory>
      <total_memory flash_size_kb="4096" ram_size_kb="256"/>
      <package id="MIMXRT1024CAG4A" name="MIMXRT1024CAG4A"/>
      <package id="MIMXRT1024DAG5A" name="MIMXRT1024DAG5A"/>
      <evaluation_boards>
        <evaluation_board name="evkmimxrt1024"/>
      </evaluation_boards>
      <debug_configurations>
        <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
          <params>
            <params id="misc.options.MIMXRT1024xxxxx" name="misc.options" value="--no-packed"/>
            <params id="internal.wiretype.release.MIMXRT1024xxxxx" name="internal.wiretype" value="SWD"/>
            <params id="internal.has_swo.release.MIMXRT1024xxxxx" name="internal.has_swo" value="false"/>
            <params id="internal.connect.script.debug.mcuxpresso.MIMXRT1024xxxxx" name="internal.connect.script" value="RT1024_connect.scp"/>
          </params>
        </debug_configuration>
      </debug_configurations>
      <linkerSettings nature="c_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
      <linkerSettings nature="cpp_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
    </device>
  </devices>
  <components>
    <component id="project_template.evkmimxrt1024.MIMXRT1024" name="evkmimxrt1024" brief="Board_project_template evkmimxrt1024" version="1.0.0" full_name="Board_project_template evkmimxrt1024" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="Board Support/SDK Project Template" user_visible="true" type="project_template" package_base_path="boards/evkmimxrt1024/project_template" project_base_path="board">
      <dependencies>
        <all>
          <component_dependency value="device.MIMXRT1024_startup.MIMXRT1024"/>
          <component_dependency value="platform.drivers.common.MIMXRT1024"/>
          <component_dependency value="platform.drivers.igpio.MIMXRT1024"/>
          <component_dependency value="platform.drivers.iomuxc.MIMXRT1024"/>
          <component_dependency value="platform.drivers.xip_device.MIMXRT1024"/>
          <component_dependency value="platform.drivers.xip_board.MIMXRT1024"/>
          <component_dependency value="platform.drivers.lpuart.MIMXRT1024"/>
          <component_dependency value="component.lpuart_adapter.MIMXRT1024"/>
          <any_of>
            <all>
              <component_dependency value="utility.debug_console.MIMXRT1024"/>
              <component_dependency value="component.serial_manager.MIMXRT1024"/>
            </all>
            <component_dependency value="utility.debug_console_lite.MIMXRT1024"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="dcd.h"/>
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="pin_mux.h"/>
        <files mask="peripherals.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="dcd.c"/>
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="pin_mux.c"/>
        <files mask="peripherals.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="project_template.evkmimxrt1024_agm01.MIMXRT1024" name="evkmimxrt1024_agm01" brief="Board_project_template evkmimxrt1024_agm01" version="1.0.0" full_name="Board_project_template evkmimxrt1024_agm01" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="Board Support/SDK Project Template" user_visible="true" type="project_template" package_base_path="boards" project_base_path="./">
      <dependencies>
        <all>
          <component_dependency value="device.MIMXRT1024_startup.MIMXRT1024"/>
          <component_dependency value="platform.drivers.lpuart.MIMXRT1024"/>
          <component_dependency value="platform.drivers.common.MIMXRT1024"/>
          <component_dependency value="platform.drivers.iomuxc.MIMXRT1024"/>
          <component_dependency value="platform.drivers.igpio.MIMXRT1024"/>
          <component_dependency value="platform.drivers.xip_device.MIMXRT1024"/>
          <component_dependency value="platform.drivers.xip_board.MIMXRT1024"/>
          <component_dependency value="utility.debug_console.MIMXRT1024"/>
          <component_dependency value="platform.drivers.clock.MIMXRT1024"/>
          <component_dependency value="component.lpuart_adapter.MIMXRT1024"/>
          <component_dependency value="component.serial_manager_uart.MIMXRT1024"/>
          <component_dependency value="component.serial_manager.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="evkmimxrt1024/project_template" project_relative_path="evkmimxrt1024" type="c_include">
        <files mask="dcd.h"/>
      </source>
      <source relative_path="evkmimxrt1024/project_template" project_relative_path="evkmimxrt1024" type="src">
        <files mask="dcd.c"/>
      </source>
      <source relative_path="evkmimxrt1024_agm01/project_template" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="pin_mux.c"/>
        <files mask="peripherals.c"/>
      </source>
      <source relative_path="evkmimxrt1024_agm01/project_template" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="pin_mux.h"/>
        <files mask="peripherals.h"/>
      </source>
      <include_paths>
        <include_path relative_path="evkmimxrt1024/project_template" project_relative_path="evkmimxrt1024" type="c_include"/>
        <include_path relative_path="evkmimxrt1024_agm01/project_template" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS.MIMXRT1024" name="CMSIS" brief="Cmsis" version="5.6.0" full_name="Cmsis" devices="MIMXRT1024xxxxx" user_visible="true" type="CMSIS" package_base_path="CMSIS" project_base_path="./">
      <dependencies>
        <all>
          <component_dependency value="platform.Include_common.MIMXRT1024"/>
          <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1024"/>
          <component_dependency value="platform.CMSIS_Driver"/>
          <component_dependency value="platform.CMSIS_Driver_Include.CAN_CMSISInclude.MIMXRT1024"/>
          <component_dependency value="platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.MIMXRT1024"/>
          <component_dependency value="platform.CMSIS_Driver_Include.Ethernet_MAC_CMSISInclude.MIMXRT1024"/>
          <component_dependency value="platform.CMSIS_Driver_Include.Ethernet_PHY_CMSISInclude.MIMXRT1024"/>
          <component_dependency value="platform.CMSIS_Driver_Include.Flash_CMSISInclude.MIMXRT1024"/>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT1024"/>
          <component_dependency value="platform.CMSIS_Driver_Include.MCI_CMSISInclude.MIMXRT1024"/>
          <component_dependency value="platform.CMSIS_Driver_Include.NAND_CMSISInclude.MIMXRT1024"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SAI_CMSISInclude.MIMXRT1024"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT1024"/>
          <component_dependency value="platform.CMSIS_Driver_Include.USART_CMSISInclude.MIMXRT1024"/>
          <component_dependency value="platform.CMSIS_Driver_Include.USB_CMSISInclude.MIMXRT1024"/>
          <component_dependency value="platform.CMSIS_Driver_Include.USB_Device_CMSISInclude.MIMXRT1024"/>
          <component_dependency value="platform.CMSIS_Driver_Include.USB_Host_CMSISInclude.MIMXRT1024"/>
          <component_dependency value="platform.CMSIS_Driver_Include.WiFi_CMSISInclude.MIMXRT1024"/>
          <component_dependency value="platform.Include_dsp.MIMXRT1024"/>
          <component_dependency value="platform.CMSIS_Driver_Include.GPIO_CMSISInclude.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" project_relative_path="CMSIS" type="doc">
        <files mask="LICENSE.txt"/>
      </source>
      <source relative_path="Include" type="c_include">
        <files mask="core_cm23.h"/>
        <files mask="cmsis_armcc.h"/>
        <files mask="tz_context.h"/>
        <files mask="core_cm3.h"/>
        <files mask="mpu_armv8.h"/>
        <files mask="core_cm4.h"/>
        <files mask="core_cm0.h"/>
        <files mask="cmsis_armclang.h"/>
        <files mask="core_cm7.h"/>
        <files mask="arm_math.h"/>
        <files mask="cmsis_iccarm.h"/>
        <files mask="core_cm1.h"/>
        <files mask="core_dsp.h"/>
        <files mask="cmsis_compiler.h"/>
        <files mask="core_cm0plus.h"/>
        <files mask="core_sc000.h"/>
        <files mask="core_armv81mml.h"/>
        <files mask="core_cm35p.h"/>
        <files mask="cmsis_armclang_ltm.h"/>
        <files mask="cmsis_gcc.h"/>
        <files mask="mpu_armv7.h"/>
        <files mask="core_armv8mml.h"/>
        <files mask="core_cm33.h"/>
        <files mask="cmsis_version.h"/>
        <files mask="core_armv8mbl.h"/>
        <files mask="core_sc300.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_common_tables.h"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_DSP_Lib.MIMXRT1024" name="CMSIS_DSP_Lib" brief="Cmsis_dsp_lib" version="1.7.0" full_name="Cmsis_dsp_lib" devices="MIMXRT1024xxxxx" user_visible="false" type="CMSIS" package_base_path="CMSIS/DSP" project_base_path="DSP">
      <source relative_path="Examples/ARM/arm_class_marks_example" type="src">
        <files mask="arm_class_marks_example_f32.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_class_marks_example" type="configuration">
        <files mask="arm_class_marks_example.ini"/>
      </source>
      <source relative_path="Examples/ARM/arm_class_marks_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source relative_path="Examples/ARM/arm_class_marks_example" type="project">
        <files mask="arm_class_marks_example.uvoptx"/>
        <files mask="arm_class_marks_example.uvprojx"/>
      </source>
      <source relative_path="Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_class_marks_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_convolution_example" type="src">
        <files mask="arm_convolution_example_f32.c"/>
        <files mask="math_helper.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_convolution_example" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source relative_path="Examples/ARM/arm_convolution_example" type="configuration">
        <files mask="arm_convolution_example.ini"/>
      </source>
      <source relative_path="Examples/ARM/arm_convolution_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source relative_path="Examples/ARM/arm_convolution_example" type="project">
        <files mask="arm_convolution_example.uvoptx"/>
        <files mask="arm_convolution_example.uvprojx"/>
      </source>
      <source relative_path="Examples/ARM/arm_convolution_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_convolution_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_convolution_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_convolution_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_convolution_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_convolution_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_convolution_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_convolution_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_dotproduct_example" type="src">
        <files mask="arm_dotproduct_example_f32.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_dotproduct_example" type="configuration">
        <files mask="arm_dotproduct_example.ini"/>
      </source>
      <source relative_path="Examples/ARM/arm_dotproduct_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source relative_path="Examples/ARM/arm_dotproduct_example" type="project">
        <files mask="arm_dotproduct_example.uvoptx"/>
        <files mask="arm_dotproduct_example.uvprojx"/>
      </source>
      <source relative_path="Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_dotproduct_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_fft_bin_example" type="src">
        <files mask="arm_fft_bin_data.c"/>
        <files mask="arm_fft_bin_example_f32.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_fft_bin_example" type="configuration">
        <files mask="arm_fft_bin_example.ini"/>
      </source>
      <source relative_path="Examples/ARM/arm_fft_bin_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source relative_path="Examples/ARM/arm_fft_bin_example" type="project">
        <files mask="arm_fft_bin_example.uvoptx"/>
        <files mask="arm_fft_bin_example.uvprojx"/>
      </source>
      <source relative_path="Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_fft_bin_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_fir_example" type="src">
        <files mask="arm_fir_data.c"/>
        <files mask="arm_fir_example_f32.c"/>
        <files mask="math_helper.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_fir_example" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source relative_path="Examples/ARM/arm_fir_example" type="configuration">
        <files mask="arm_fir_example.ini"/>
      </source>
      <source relative_path="Examples/ARM/arm_fir_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source relative_path="Examples/ARM/arm_fir_example" type="project">
        <files mask="arm_fir_example.uvoptx"/>
        <files mask="arm_fir_example.uvprojx"/>
      </source>
      <source relative_path="Examples/ARM/arm_fir_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_fir_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_fir_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_fir_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_fir_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_fir_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_fir_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_fir_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_graphic_equalizer_example" type="src">
        <files mask="arm_graphic_equalizer_example_q31.c"/>
        <files mask="arm_graphic_equalizer_data.c"/>
        <files mask="math_helper.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_graphic_equalizer_example" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source relative_path="Examples/ARM/arm_graphic_equalizer_example" type="configuration">
        <files mask="arm_graphic_equalizer_example.ini"/>
      </source>
      <source relative_path="Examples/ARM/arm_graphic_equalizer_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source relative_path="Examples/ARM/arm_graphic_equalizer_example" type="project">
        <files mask="arm_graphic_equalizer_example.uvoptx"/>
        <files mask="arm_graphic_equalizer_example.uvprojx"/>
      </source>
      <source relative_path="Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_graphic_equalizer_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_linear_interp_example" type="src">
        <files mask="math_helper.c"/>
        <files mask="arm_linear_interp_example_f32.c"/>
        <files mask="arm_linear_interp_data.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_linear_interp_example" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source relative_path="Examples/ARM/arm_linear_interp_example" type="configuration">
        <files mask="arm_linear_interp_example.ini"/>
      </source>
      <source relative_path="Examples/ARM/arm_linear_interp_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source relative_path="Examples/ARM/arm_linear_interp_example" type="project">
        <files mask="arm_linear_interp_example.uvoptx"/>
        <files mask="arm_linear_interp_example.uvprojx"/>
      </source>
      <source relative_path="Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_linear_interp_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_matrix_example" type="src">
        <files mask="arm_matrix_example_f32.c"/>
        <files mask="math_helper.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_matrix_example" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source relative_path="Examples/ARM/arm_matrix_example" type="configuration">
        <files mask="arm_matrix_example.ini"/>
      </source>
      <source relative_path="Examples/ARM/arm_matrix_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source relative_path="Examples/ARM/arm_matrix_example" type="project">
        <files mask="arm_matrix_example.uvoptx"/>
        <files mask="arm_matrix_example.uvprojx"/>
      </source>
      <source relative_path="Examples/ARM/arm_matrix_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_matrix_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_matrix_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_matrix_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_matrix_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_matrix_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_matrix_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_matrix_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_signal_converge_example" type="src">
        <files mask="math_helper.c"/>
        <files mask="arm_signal_converge_example_f32.c"/>
        <files mask="arm_signal_converge_data.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_signal_converge_example" type="c_include">
        <files mask="math_helper.h"/>
      </source>
      <source relative_path="Examples/ARM/arm_signal_converge_example" type="configuration">
        <files mask="arm_signal_converge_example.ini"/>
      </source>
      <source relative_path="Examples/ARM/arm_signal_converge_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source relative_path="Examples/ARM/arm_signal_converge_example" type="project">
        <files mask="arm_signal_converge_example.uvoptx"/>
        <files mask="arm_signal_converge_example.uvprojx"/>
      </source>
      <source relative_path="Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_signal_converge_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_sin_cos_example" type="src">
        <files mask="arm_sin_cos_example_f32.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_sin_cos_example" type="configuration">
        <files mask="arm_sin_cos_example.ini"/>
      </source>
      <source relative_path="Examples/ARM/arm_sin_cos_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source relative_path="Examples/ARM/arm_sin_cos_example" type="project">
        <files mask="arm_sin_cos_example.uvoptx"/>
        <files mask="arm_sin_cos_example.uvprojx"/>
      </source>
      <source relative_path="Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_sin_cos_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_variance_example" type="src">
        <files mask="arm_variance_example_f32.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_variance_example" type="configuration">
        <files mask="arm_variance_example.ini"/>
      </source>
      <source relative_path="Examples/ARM/arm_variance_example" type="doc">
        <files mask="Abstract.txt"/>
      </source>
      <source relative_path="Examples/ARM/arm_variance_example" type="project">
        <files mask="arm_variance_example.uvoptx"/>
        <files mask="arm_variance_example.uvprojx"/>
      </source>
      <source relative_path="Examples/ARM/arm_variance_example/RTE/Device/ARMCM0" type="src">
        <files mask="system_ARMCM0.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_variance_example/RTE/Device/ARMCM0" type="asm_include">
        <files mask="startup_ARMCM0.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_variance_example/RTE/Device/ARMCM3" type="src">
        <files mask="system_ARMCM3.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_variance_example/RTE/Device/ARMCM3" type="asm_include">
        <files mask="startup_ARMCM3.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_variance_example/RTE/Device/ARMCM4_FP" type="src">
        <files mask="system_ARMCM4.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_variance_example/RTE/Device/ARMCM4_FP" type="asm_include">
        <files mask="startup_ARMCM4.s"/>
      </source>
      <source relative_path="Examples/ARM/arm_variance_example/RTE/Device/ARMCM7_SP" type="src">
        <files mask="system_ARMCM7.c"/>
      </source>
      <source relative_path="Examples/ARM/arm_variance_example/RTE/Device/ARMCM7_SP" type="asm_include">
        <files mask="startup_ARMCM7.s"/>
      </source>
      <source relative_path="Projects/ARM" type="script">
        <files mask="arm_cortexM_math_Build.bat"/>
      </source>
      <source relative_path="Projects/ARM" type="project">
        <files mask="arm_cortexM_math.uvoptx"/>
        <files mask="arm_cortexM_math.uvprojx"/>
      </source>
      <source relative_path="Projects/GCC" type="script">
        <files mask="arm_cortexM_math_Build.bat"/>
      </source>
      <source relative_path="Projects/GCC" type="project">
        <files mask="arm_cortexM_math.uvoptx"/>
        <files mask="arm_cortexM_math.uvprojx"/>
      </source>
      <source relative_path="Projects/IAR" type="script">
        <files mask="arm_cortexM_math_Build.bat"/>
      </source>
      <source relative_path="Projects/IAR" type="other">
        <files mask="arm_cortexM_math.eww"/>
      </source>
      <source relative_path="Projects/IAR" type="project">
        <files mask="arm_cortexM_math.ewp"/>
      </source>
      <source relative_path="Source/BasicMathFunctions" type="src">
        <files mask="arm_dot_prod_f32.c"/>
        <files mask="BasicMathFunctions.c"/>
        <files mask="arm_add_q7.c"/>
        <files mask="arm_sub_f32.c"/>
        <files mask="arm_shift_q31.c"/>
        <files mask="arm_offset_q31.c"/>
        <files mask="arm_mult_q15.c"/>
        <files mask="arm_add_q31.c"/>
        <files mask="arm_mult_q7.c"/>
        <files mask="arm_dot_prod_q7.c"/>
        <files mask="arm_scale_q7.c"/>
        <files mask="arm_dot_prod_q31.c"/>
        <files mask="arm_negate_q7.c"/>
        <files mask="arm_scale_f32.c"/>
        <files mask="arm_mult_q31.c"/>
        <files mask="arm_abs_f32.c"/>
        <files mask="arm_offset_f32.c"/>
        <files mask="arm_negate_q31.c"/>
        <files mask="arm_negate_f32.c"/>
        <files mask="arm_abs_q31.c"/>
        <files mask="arm_dot_prod_q15.c"/>
        <files mask="arm_scale_q31.c"/>
        <files mask="arm_add_f32.c"/>
        <files mask="arm_abs_q15.c"/>
        <files mask="arm_offset_q7.c"/>
        <files mask="arm_abs_q7.c"/>
        <files mask="arm_sub_q7.c"/>
        <files mask="arm_offset_q15.c"/>
        <files mask="arm_add_q15.c"/>
        <files mask="arm_negate_q15.c"/>
        <files mask="arm_shift_q15.c"/>
        <files mask="arm_scale_q15.c"/>
        <files mask="arm_sub_q15.c"/>
        <files mask="arm_shift_q7.c"/>
        <files mask="arm_mult_f32.c"/>
        <files mask="arm_sub_q31.c"/>
      </source>
      <source relative_path="Source/CommonTables" type="src">
        <files mask="arm_const_structs.c"/>
        <files mask="arm_common_tables.c"/>
        <files mask="CommonTables.c"/>
      </source>
      <source relative_path="Source/ComplexMathFunctions" type="src">
        <files mask="arm_cmplx_dot_prod_f32.c"/>
        <files mask="arm_cmplx_mult_real_q31.c"/>
        <files mask="ComplexMathFunctions.c"/>
        <files mask="arm_cmplx_mult_cmplx_f32.c"/>
        <files mask="arm_cmplx_mult_real_f32.c"/>
        <files mask="arm_cmplx_mag_q31.c"/>
        <files mask="arm_cmplx_mag_squared_q15.c"/>
        <files mask="arm_cmplx_mag_q15.c"/>
        <files mask="arm_cmplx_dot_prod_q15.c"/>
        <files mask="arm_cmplx_mult_cmplx_q15.c"/>
        <files mask="arm_cmplx_mag_squared_f32.c"/>
        <files mask="arm_cmplx_conj_q15.c"/>
        <files mask="arm_cmplx_conj_q31.c"/>
        <files mask="arm_cmplx_mult_real_q15.c"/>
        <files mask="arm_cmplx_conj_f32.c"/>
        <files mask="arm_cmplx_mag_squared_q31.c"/>
        <files mask="arm_cmplx_mag_f32.c"/>
        <files mask="arm_cmplx_dot_prod_q31.c"/>
        <files mask="arm_cmplx_mult_cmplx_q31.c"/>
      </source>
      <source relative_path="Source/ControllerFunctions" type="src">
        <files mask="arm_pid_init_f32.c"/>
        <files mask="ControllerFunctions.c"/>
        <files mask="arm_pid_reset_q15.c"/>
        <files mask="arm_pid_reset_q31.c"/>
        <files mask="arm_sin_cos_f32.c"/>
        <files mask="arm_pid_init_q31.c"/>
        <files mask="arm_pid_init_q15.c"/>
        <files mask="arm_sin_cos_q31.c"/>
        <files mask="arm_pid_reset_f32.c"/>
      </source>
      <source relative_path="Source/FastMathFunctions" type="src">
        <files mask="arm_sin_f32.c"/>
        <files mask="arm_cos_q15.c"/>
        <files mask="FastMathFunctions.c"/>
        <files mask="arm_sqrt_q15.c"/>
        <files mask="arm_cos_q31.c"/>
        <files mask="arm_cos_f32.c"/>
        <files mask="arm_sin_q15.c"/>
        <files mask="arm_sqrt_q31.c"/>
        <files mask="arm_sin_q31.c"/>
      </source>
      <source relative_path="Source/FilteringFunctions" type="src">
        <files mask="arm_conv_fast_q15.c"/>
        <files mask="arm_correlate_fast_opt_q15.c"/>
        <files mask="arm_correlate_q7.c"/>
        <files mask="arm_conv_q15.c"/>
        <files mask="arm_fir_sparse_init_f32.c"/>
        <files mask="arm_fir_lattice_q15.c"/>
        <files mask="arm_fir_decimate_init_f32.c"/>
        <files mask="arm_iir_lattice_init_q31.c"/>
        <files mask="arm_fir_decimate_init_q15.c"/>
        <files mask="arm_fir_sparse_q7.c"/>
        <files mask="arm_biquad_cascade_df1_q15.c"/>
        <files mask="arm_fir_q15.c"/>
        <files mask="arm_lms_init_q15.c"/>
        <files mask="arm_biquad_cascade_df1_fast_q31.c"/>
        <files mask="arm_biquad_cascade_df1_32x64_q31.c"/>
        <files mask="arm_fir_fast_q15.c"/>
        <files mask="arm_biquad_cascade_df1_fast_q15.c"/>
        <files mask="arm_fir_q31.c"/>
        <files mask="arm_fir_interpolate_init_q31.c"/>
        <files mask="arm_conv_partial_q7.c"/>
        <files mask="arm_fir_interpolate_q15.c"/>
        <files mask="arm_conv_fast_opt_q15.c"/>
        <files mask="arm_lms_norm_q15.c"/>
        <files mask="arm_fir_lattice_init_q31.c"/>
        <files mask="arm_iir_lattice_q31.c"/>
        <files mask="arm_lms_norm_f32.c"/>
        <files mask="arm_fir_interpolate_init_q15.c"/>
        <files mask="arm_correlate_q31.c"/>
        <files mask="arm_conv_partial_q15.c"/>
        <files mask="arm_iir_lattice_init_f32.c"/>
        <files mask="arm_conv_partial_f32.c"/>
        <files mask="arm_fir_f32.c"/>
        <files mask="arm_fir_decimate_q15.c"/>
        <files mask="arm_correlate_fast_q31.c"/>
        <files mask="arm_correlate_opt_q15.c"/>
        <files mask="arm_conv_partial_fast_opt_q15.c"/>
        <files mask="arm_fir_sparse_f32.c"/>
        <files mask="arm_correlate_fast_q15.c"/>
        <files mask="arm_conv_opt_q15.c"/>
        <files mask="arm_correlate_opt_q7.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_f32.c"/>
        <files mask="arm_fir_decimate_f32.c"/>
        <files mask="arm_fir_sparse_init_q15.c"/>
        <files mask="arm_lms_q15.c"/>
        <files mask="arm_fir_interpolate_init_f32.c"/>
        <files mask="arm_fir_lattice_q31.c"/>
        <files mask="arm_correlate_q15.c"/>
        <files mask="arm_conv_opt_q7.c"/>
        <files mask="arm_iir_lattice_q15.c"/>
        <files mask="arm_conv_fast_q31.c"/>
        <files mask="arm_conv_partial_fast_q31.c"/>
        <files mask="arm_fir_lattice_init_f32.c"/>
        <files mask="arm_biquad_cascade_df1_f32.c"/>
        <files mask="arm_biquad_cascade_df2T_init_f32.c"/>
        <files mask="arm_conv_f32.c"/>
        <files mask="arm_biquad_cascade_df1_init_f32.c"/>
        <files mask="arm_fir_lattice_f32.c"/>
        <files mask="arm_fir_decimate_init_q31.c"/>
        <files mask="arm_fir_init_q7.c"/>
        <files mask="arm_correlate_f32.c"/>
        <files mask="arm_conv_partial_opt_q7.c"/>
        <files mask="arm_lms_norm_init_q31.c"/>
        <files mask="arm_conv_partial_q31.c"/>
        <files mask="arm_biquad_cascade_df1_init_q31.c"/>
        <files mask="arm_fir_sparse_q15.c"/>
        <files mask="arm_lms_init_q31.c"/>
        <files mask="arm_fir_init_q31.c"/>
        <files mask="arm_fir_sparse_init_q31.c"/>
        <files mask="arm_fir_sparse_q31.c"/>
        <files mask="arm_biquad_cascade_df2T_f32.c"/>
        <files mask="arm_iir_lattice_init_q15.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_init_f32.c"/>
        <files mask="arm_fir_decimate_q31.c"/>
        <files mask="arm_fir_fast_q31.c"/>
        <files mask="arm_fir_lattice_init_q15.c"/>
        <files mask="arm_conv_partial_opt_q15.c"/>
        <files mask="arm_conv_q7.c"/>
        <files mask="arm_conv_q31.c"/>
        <files mask="arm_fir_interpolate_f32.c"/>
        <files mask="arm_fir_sparse_init_q7.c"/>
        <files mask="FilteringFunctions.c"/>
        <files mask="arm_biquad_cascade_df2T_init_f64.c"/>
        <files mask="arm_fir_init_q15.c"/>
        <files mask="arm_lms_norm_q31.c"/>
        <files mask="arm_biquad_cascade_df2T_f64.c"/>
        <files mask="arm_conv_partial_fast_q15.c"/>
        <files mask="arm_fir_decimate_fast_q15.c"/>
        <files mask="arm_lms_q31.c"/>
        <files mask="arm_lms_init_f32.c"/>
        <files mask="arm_biquad_cascade_df1_32x64_init_q31.c"/>
        <files mask="arm_lms_norm_init_q15.c"/>
        <files mask="arm_fir_init_f32.c"/>
        <files mask="arm_iir_lattice_f32.c"/>
        <files mask="arm_biquad_cascade_df1_q31.c"/>
        <files mask="arm_lms_f32.c"/>
        <files mask="arm_lms_norm_init_f32.c"/>
        <files mask="arm_biquad_cascade_df1_init_q15.c"/>
        <files mask="arm_fir_decimate_fast_q31.c"/>
        <files mask="arm_fir_interpolate_q31.c"/>
        <files mask="arm_fir_q7.c"/>
      </source>
      <source relative_path="Source/MatrixFunctions" type="src">
        <files mask="arm_mat_sub_q15.c"/>
        <files mask="arm_mat_mult_fast_q31.c"/>
        <files mask="arm_mat_sub_q31.c"/>
        <files mask="arm_mat_add_f32.c"/>
        <files mask="arm_mat_inverse_f32.c"/>
        <files mask="arm_mat_mult_q15.c"/>
        <files mask="arm_mat_mult_q31.c"/>
        <files mask="MatrixFunctions.c"/>
        <files mask="arm_mat_cmplx_mult_q15.c"/>
        <files mask="arm_mat_mult_f32.c"/>
        <files mask="arm_mat_trans_f32.c"/>
        <files mask="arm_mat_trans_q31.c"/>
        <files mask="arm_mat_add_q15.c"/>
        <files mask="arm_mat_mult_fast_q15.c"/>
        <files mask="arm_mat_inverse_f64.c"/>
        <files mask="arm_mat_scale_q31.c"/>
        <files mask="arm_mat_trans_q15.c"/>
        <files mask="arm_mat_sub_f32.c"/>
        <files mask="arm_mat_init_q15.c"/>
        <files mask="arm_mat_cmplx_mult_q31.c"/>
        <files mask="arm_mat_scale_f32.c"/>
        <files mask="arm_mat_cmplx_mult_f32.c"/>
        <files mask="arm_mat_init_f32.c"/>
        <files mask="arm_mat_init_q31.c"/>
        <files mask="arm_mat_scale_q15.c"/>
        <files mask="arm_mat_add_q31.c"/>
      </source>
      <source relative_path="Source/StatisticsFunctions" type="src">
        <files mask="arm_power_q31.c"/>
        <files mask="arm_min_q7.c"/>
        <files mask="arm_var_q15.c"/>
        <files mask="arm_mean_q15.c"/>
        <files mask="arm_min_q15.c"/>
        <files mask="arm_rms_q15.c"/>
        <files mask="arm_min_f32.c"/>
        <files mask="arm_max_q7.c"/>
        <files mask="arm_max_q31.c"/>
        <files mask="arm_var_f32.c"/>
        <files mask="arm_std_q31.c"/>
        <files mask="arm_std_f32.c"/>
        <files mask="arm_mean_f32.c"/>
        <files mask="arm_power_f32.c"/>
        <files mask="arm_rms_f32.c"/>
        <files mask="arm_var_q31.c"/>
        <files mask="arm_power_q7.c"/>
        <files mask="arm_mean_q31.c"/>
        <files mask="arm_power_q15.c"/>
        <files mask="arm_max_f32.c"/>
        <files mask="arm_rms_q31.c"/>
        <files mask="arm_max_q15.c"/>
        <files mask="arm_min_q31.c"/>
        <files mask="StatisticsFunctions.c"/>
        <files mask="arm_std_q15.c"/>
        <files mask="arm_mean_q7.c"/>
      </source>
      <source relative_path="Source/SupportFunctions" type="src">
        <files mask="arm_copy_q15.c"/>
        <files mask="arm_q7_to_q31.c"/>
        <files mask="arm_fill_q31.c"/>
        <files mask="arm_fill_q15.c"/>
        <files mask="arm_q31_to_q7.c"/>
        <files mask="arm_float_to_q15.c"/>
        <files mask="arm_q31_to_float.c"/>
        <files mask="arm_fill_q7.c"/>
        <files mask="arm_q15_to_q31.c"/>
        <files mask="arm_copy_f32.c"/>
        <files mask="arm_q7_to_q15.c"/>
        <files mask="arm_copy_q7.c"/>
        <files mask="arm_q7_to_float.c"/>
        <files mask="arm_float_to_q7.c"/>
        <files mask="SupportFunctions.c"/>
        <files mask="arm_copy_q31.c"/>
        <files mask="arm_q31_to_q15.c"/>
        <files mask="arm_fill_f32.c"/>
        <files mask="arm_q15_to_float.c"/>
        <files mask="arm_q15_to_q7.c"/>
        <files mask="arm_float_to_q31.c"/>
      </source>
      <source relative_path="Source/TransformFunctions" type="src">
        <files mask="arm_cfft_radix2_f32.c"/>
        <files mask="arm_cfft_radix2_init_f32.c"/>
        <files mask="arm_cfft_radix4_q31.c"/>
        <files mask="arm_cfft_radix4_init_q15.c"/>
        <files mask="arm_rfft_init_q15.c"/>
        <files mask="arm_cfft_f32.c"/>
        <files mask="arm_cfft_q15.c"/>
        <files mask="arm_rfft_q31.c"/>
        <files mask="arm_dct4_init_q31.c"/>
        <files mask="arm_dct4_f32.c"/>
        <files mask="arm_cfft_radix4_q15.c"/>
        <files mask="arm_cfft_radix2_q31.c"/>
        <files mask="arm_cfft_radix4_f32.c"/>
        <files mask="arm_rfft_q15.c"/>
        <files mask="arm_bitreversal.c"/>
        <files mask="arm_rfft_fast_f32.c"/>
        <files mask="arm_dct4_init_q15.c"/>
        <files mask="arm_rfft_f32.c"/>
        <files mask="arm_dct4_q15.c"/>
        <files mask="arm_rfft_fast_init_f32.c"/>
        <files mask="arm_cfft_radix2_init_q31.c"/>
        <files mask="arm_cfft_radix4_init_f32.c"/>
        <files mask="arm_rfft_init_q31.c"/>
        <files mask="TransformFunctions.c"/>
        <files mask="arm_cfft_radix2_init_q15.c"/>
        <files mask="arm_dct4_q31.c"/>
        <files mask="arm_bitreversal2.c"/>
        <files mask="arm_cfft_radix8_f32.c"/>
        <files mask="arm_cfft_radix2_q15.c"/>
        <files mask="arm_cfft_radix4_init_q31.c"/>
        <files mask="arm_rfft_init_f32.c"/>
        <files mask="arm_dct4_init_f32.c"/>
        <files mask="arm_cfft_q31.c"/>
      </source>
      <source relative_path="Source/TransformFunctions" type="asm_include">
        <files mask="arm_bitreversal2.S"/>
      </source>
      <include_paths>
        <include_path relative_path="Examples/ARM/arm_class_marks_example/RTE" type="c_include"/>
        <include_path relative_path="Examples/ARM/arm_convolution_example" type="c_include"/>
        <include_path relative_path="Examples/ARM/arm_convolution_example/RTE" type="c_include"/>
        <include_path relative_path="Examples/ARM/arm_dotproduct_example/RTE" type="c_include"/>
        <include_path relative_path="Examples/ARM/arm_fft_bin_example/RTE" type="c_include"/>
        <include_path relative_path="Examples/ARM/arm_fir_example" type="c_include"/>
        <include_path relative_path="Examples/ARM/arm_fir_example/RTE" type="c_include"/>
        <include_path relative_path="Examples/ARM/arm_graphic_equalizer_example" type="c_include"/>
        <include_path relative_path="Examples/ARM/arm_graphic_equalizer_example/RTE" type="c_include"/>
        <include_path relative_path="Examples/ARM/arm_linear_interp_example" type="c_include"/>
        <include_path relative_path="Examples/ARM/arm_linear_interp_example/RTE" type="c_include"/>
        <include_path relative_path="Examples/ARM/arm_matrix_example" type="c_include"/>
        <include_path relative_path="Examples/ARM/arm_matrix_example/RTE" type="c_include"/>
        <include_path relative_path="Examples/ARM/arm_signal_converge_example" type="c_include"/>
        <include_path relative_path="Examples/ARM/arm_signal_converge_example/RTE" type="c_include"/>
        <include_path relative_path="Examples/ARM/arm_sin_cos_example/RTE" type="c_include"/>
        <include_path relative_path="Examples/ARM/arm_variance_example/RTE" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_DSP_Lib.arm_cortexM7bfdp_math.MIMXRT1024" name="arm_cortexM7bfdp_math" brief="Cmsis_dsp_lib arm_cortexm7bfdp_math" version="1.7.0" full_name="Cmsis_dsp_lib arm_cortexm7bfdp_math" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/DSP/Lib/ARM" project_base_path="libs">
      <source toolchain="mdk" relative_path="./" type="lib">
        <files mask="arm_cortexM7bfdp_math.lib"/>
      </source>
    </component>
    <component id="platform.CMSIS_DSP_Lib.arm_cortexM7bfsp_math.MIMXRT1024" name="arm_cortexM7bfsp_math" brief="Cmsis_dsp_lib arm_cortexm7bfsp_math" version="1.7.0" full_name="Cmsis_dsp_lib arm_cortexm7bfsp_math" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/DSP/Lib/ARM" project_base_path="libs">
      <source toolchain="mdk" relative_path="./" type="lib">
        <files mask="arm_cortexM7bfsp_math.lib"/>
      </source>
    </component>
    <component id="platform.CMSIS_DSP_Lib.arm_cortexM7lfdp_math.MIMXRT1024" name="arm_cortexM7lfdp_math" brief="Cmsis_dsp_lib arm_cortexm7lfdp_math" version="1.7.0" full_name="Cmsis_dsp_lib arm_cortexm7lfdp_math" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/DSP/Lib" project_base_path="libs">
      <source toolchain="mdk" relative_path="ARM" project_relative_path="./" type="lib">
        <files mask="arm_cortexM7lfdp_math.lib"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="GCC" project_relative_path="./" type="lib">
        <files mask="libarm_cortexM7lfdp_math.a"/>
      </source>
    </component>
    <component id="platform.CMSIS_DSP_Lib.arm_cortexM7lfsp_math.MIMXRT1024" name="arm_cortexM7lfsp_math" brief="Cmsis_dsp_lib arm_cortexm7lfsp_math" version="1.7.0" full_name="Cmsis_dsp_lib arm_cortexm7lfsp_math" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/DSP/Lib" project_base_path="libs">
      <source toolchain="mdk" relative_path="ARM" project_relative_path="./" type="lib">
        <files mask="arm_cortexM7lfsp_math.lib"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="GCC" project_relative_path="./" type="lib">
        <files mask="libarm_cortexM7lfsp_math.a"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="CMSIS_DSP_Lib_arm_cortexM7lfsp_math_MIMXRT1024.cmake" hidden="true"/>
      </source>
    </component>
    <component id="platform.CMSIS_Driver" name="CMSIS_Driver" brief="Cmsis_driver" version="2.7.1" full_name="Cmsis_driver" user_visible="true" type="CMSIS" package_base_path="CMSIS/Driver/DriverTemplates" project_base_path="Driver/DriverTemplates">
      <source relative_path="./" type="src">
        <files mask="Driver_USBH.c"/>
        <files mask="Driver_Flash.c"/>
        <files mask="Driver_ETH_PHY.c"/>
        <files mask="Driver_MCI.c"/>
        <files mask="Driver_CAN.c"/>
        <files mask="Driver_USART.c"/>
        <files mask="Driver_I2C.c"/>
        <files mask="Driver_USBD.c"/>
        <files mask="Driver_SAI.c"/>
        <files mask="Driver_ETH_MAC.c"/>
        <files mask="Driver_SPI.c"/>
        <files mask="Driver_Storage.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.CAN_CMSISInclude.MIMXRT1024" name="CAN" brief="Cmsis_driver_include can" version="1.2.0" full_name="Cmsis_driver_include can" devices="MIMXRT1024xxxxx" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_CAN.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1024" name="Common" brief="Cmsis_driver_include common" version="2.7.1" full_name="Cmsis_driver_include common" devices="MIMXRT1024xxxxx" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <source relative_path="./" type="c_include">
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="CMSIS_Driver_Include_Common_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.MIMXRT1024" name="Ethernet" brief="Cmsis_driver_include ethernet" version="2.1.0" full_name="Cmsis_driver_include ethernet" devices="MIMXRT1024xxxxx" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_ETH.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="CMSIS_Driver_Include_Ethernet_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.Ethernet_MAC_CMSISInclude.MIMXRT1024" name="Ethernet_MAC" brief="Cmsis_driver_include ethernet_mac" version="2.1.0" full_name="Cmsis_driver_include ethernet_mac" devices="MIMXRT1024xxxxx" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_ETH_MAC.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="CMSIS_Driver_Include_Ethernet_MAC_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.Ethernet_PHY_CMSISInclude.MIMXRT1024" name="Ethernet_PHY" brief="Cmsis_driver_include ethernet_phy" version="2.1.0" full_name="Cmsis_driver_include ethernet_phy" devices="MIMXRT1024xxxxx" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_ETH_PHY.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="CMSIS_Driver_Include_Ethernet_PHY_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.Flash_CMSISInclude.MIMXRT1024" name="Flash" brief="Cmsis_driver_include flash" version="2.2.0" full_name="Cmsis_driver_include flash" devices="MIMXRT1024xxxxx" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_Flash.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.GPIO_CMSISInclude.MIMXRT1024" name="GPIO" brief="Cmsis_driver_include gpio" version="2.0.0" full_name="Cmsis_driver_include gpio" devices="MIMXRT1024xxxxx" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_GPIO.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT1024" name="I2C" brief="Cmsis_driver_include i2c" version="2.3.0" full_name="Cmsis_driver_include i2c" devices="MIMXRT1024xxxxx" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_I2C.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="CMSIS_Driver_Include_I2C_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.MCI_CMSISInclude.MIMXRT1024" name="MCI" brief="Cmsis_driver_include mci" version="2.3.0" full_name="Cmsis_driver_include mci" devices="MIMXRT1024xxxxx" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_MCI.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.NAND_CMSISInclude.MIMXRT1024" name="NAND" brief="Cmsis_driver_include nand" version="2.3.0" full_name="Cmsis_driver_include nand" devices="MIMXRT1024xxxxx" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_NAND.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.SAI_CMSISInclude.MIMXRT1024" name="SAI" brief="Cmsis_driver_include sai" version="1.1.0" full_name="Cmsis_driver_include sai" devices="MIMXRT1024xxxxx" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_SAI.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT1024" name="SPI" brief="Cmsis_driver_include spi" version="2.2.0" full_name="Cmsis_driver_include spi" devices="MIMXRT1024xxxxx" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_SPI.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="CMSIS_Driver_Include_SPI_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.USART_CMSISInclude.MIMXRT1024" name="USART" brief="Cmsis_driver_include usart" version="2.3.0" full_name="Cmsis_driver_include usart" devices="MIMXRT1024xxxxx" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_USART.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="CMSIS_Driver_Include_USART_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.USB_CMSISInclude.MIMXRT1024" name="USB" brief="Cmsis_driver_include usb" version="2.2.0" full_name="Cmsis_driver_include usb" devices="MIMXRT1024xxxxx" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_USB.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.USB_Device_CMSISInclude.MIMXRT1024" name="USB_Device" brief="Cmsis_driver_include usb_device" version="2.2.0" full_name="Cmsis_driver_include usb_device" devices="MIMXRT1024xxxxx" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.USB_CMSISInclude.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_USBD.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.USB_Host_CMSISInclude.MIMXRT1024" name="USB_Host" brief="Cmsis_driver_include usb_host" version="2.2.0" full_name="Cmsis_driver_include usb_host" devices="MIMXRT1024xxxxx" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.USB_CMSISInclude.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_USBH.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.CMSIS_Driver_Include.WiFi_CMSISInclude.MIMXRT1024" name="WiFi" brief="Cmsis_driver_include wifi" version="1.0.0" full_name="Cmsis_driver_include wifi" devices="MIMXRT1024xxxxx" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver/Include" project_base_path="CMSIS_driver">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.Common_CMSISInclude.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="Driver_WiFi.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.Include_common.MIMXRT1024" name="CMSIS_Include_common" brief="Cmsis_include_common" version="5.3.0" full_name="Cmsis_include_common" devices="MIMXRT1024xxxxx" user_visible="true" type="CMSIS_Include" package_base_path="CMSIS/Include" project_base_path="CMSIS">
      <source relative_path="./" type="c_include">
        <files mask="cmsis_armcc.h"/>
        <files mask="cmsis_armclang.h"/>
        <files mask="cmsis_armclang_ltm.h"/>
        <files mask="cmsis_gcc.h"/>
        <files mask="cmsis_compiler.h"/>
        <files mask="cmsis_version.h"/>
        <files mask="cmsis_iccarm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="CMSIS_Include_common_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.Include_core_cm7.MIMXRT1024" name="CMSIS_Include_core_cm7" brief="Cmsis_include_core_cm7" version="5.3.0" full_name="Cmsis_include_core_cm7" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="CMSIS_Include" package_base_path="CMSIS/Include" project_base_path="CMSIS">
      <dependencies>
        <all>
          <component_dependency value="platform.Include_common.MIMXRT1024"/>
          <component_dependency value="platform.Include_dsp.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="core_cm7.h"/>
        <files mask="mpu_armv7.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="CMSIS_Include_core_cm7_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.Include_dsp.MIMXRT1024" name="CMSIS_Include_dsp" brief="Cmsis_include_dsp" version="1.7.0" full_name="Cmsis_include_dsp" devices="MIMXRT1024xxxxx" user_visible="true" type="CMSIS_Include" package_base_path="CMSIS/Include" project_base_path="CMSIS">
      <source relative_path="./" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_math.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="CMSIS_Include_dsp_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="COPY_BSD_License.MIMXRT1024" name="COPY_BSD_License" brief="COPY of BSD-3-Clause license" version="1.0.0" full_name="COPY of BSD-3-Clause license" devices="MIMXRT1024xxxxx" user_visible="true" type="other" package_base_path="./" project_base_path="src">
      <source relative_path="./" type="other">
        <files mask="COPYING-BSD-3"/>
      </source>
    </component>
    <component id="project_template.MIMXRT1024.MIMXRT1024" name="MIMXRT1024" brief="Devices_project_template MIMXRT1024" version="1.0.0" full_name="Devices_project_template MIMXRT1024" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="Board Support/SDK Project Template" user_visible="true" type="project_template" package_base_path="devices/MIMXRT1024/project_template" project_base_path="board">
      <dependencies>
        <all>
          <component_dependency value="device.MIMXRT1024_startup.MIMXRT1024"/>
          <component_dependency value="platform.drivers.common.MIMXRT1024"/>
          <component_dependency value="platform.drivers.clock.MIMXRT1024"/>
          <component_dependency value="platform.drivers.igpio.MIMXRT1024"/>
          <component_dependency value="platform.drivers.iomuxc.MIMXRT1024"/>
          <component_dependency value="platform.drivers.lpuart.MIMXRT1024"/>
          <component_dependency value="component.lpuart_adapter.MIMXRT1024"/>
          <any_of>
            <all>
              <component_dependency value="utility.debug_console.MIMXRT1024"/>
              <component_dependency value="component.serial_manager.MIMXRT1024"/>
            </all>
            <component_dependency value="utility.debug_console_lite.MIMXRT1024"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="pin_mux.h"/>
        <files mask="peripherals.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="pin_mux.c"/>
        <files mask="peripherals.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="RTE_Device.MIMXRT1024" name="RTE_Device" brief="Rte_device" version="1.0.0" full_name="Rte_device" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="Device/SDK Project Template" user_visible="true" type="project_template" package_base_path="devices/MIMXRT1024/template" project_base_path="board">
      <dependencies>
        <component_dependency value="platform.drivers.edma.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="RTE_Device.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="tools.MIMXRT1024" name="cmake_toolchain" brief="Cmake_toolchain" version="1.0.0" full_name="Cmake_toolchain" devices="MIMXRT1024xxxxx" user_visible="true" type="other" package_base_path="tools/cmake_toolchain_files" project_base_path="cmake_toolchain_files">
      <source relative_path="./" type="script">
        <files mask="armgcc.cmake"/>
        <files mask="xcc.cmake"/>
        <files mask="armgcc_force_cpp.cmake"/>
      </source>
    </component>
    <component id="cmsis_pack_flash_algo.MIMXRT1024.MIMXRT1024" name="cmsis_pack_flash_algo" brief="cmsis_pack_flash_algo" version="1.0.0" full_name="cmsis_pack_flash_algo" devices="MIMXRT1024xxxxx" user_visible="true" type="other" package_base_path="boards/evkmimxrt1024/cmsis_pack_flash_algo" project_base_path="evkmimxrt1024/cmsis_pack_flash_algo">
      <source relative_path="Sources" type="src">
        <files mask="fsl_romapi.c"/>
      </source>
      <source relative_path="Sources" type="c_include">
        <files mask="fsl_romapi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="FlashDev.c"/>
        <files mask="FlashPrg.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="FlashOS.h"/>
      </source>
      <source relative_path="./" type="project">
        <files mask="MIMXRT1024_QSPI.uvproj"/>
      </source>
      <source relative_path="./" type="other">
        <files mask="MIMXRT1024_QuadSPI_4KB_SEC.FLM"/>
        <files mask="Target.lin"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="readme.txt"/>
      </source>
      <include_paths>
        <include_path relative_path="Sources" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.button.MIMXRT1024" name="button" brief="Component button" version="1.0.0" full_name="Component button" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="software_component" package_base_path="components/button" project_base_path="component/button">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1024"/>
          <component_dependency value="component.timer_manager.MIMXRT1024"/>
          <component_dependency value="component.igpio_adapter.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_button.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_button.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.codec_cs42888_adapter.MIMXRT1024" name="codecs_cs42888_adapter" brief="Component cs42888 adapter for multi codecs" version="2.2.1" full_name="Component codec_cs42888_adapter" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="abstraction_layer" package_base_path="components/codec/port" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="driver.cs42888.MIMXRT1024"/>
          <component_dependency value="driver.codec.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_cs42888_adapter.c"/>
        <files mask="fsl_codec_adapter.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cs42888_adapter.h"/>
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.codec_da7212_adapter.MIMXRT1024" name="codecs_da7212_adapter" brief="Component da7212 adapter for multi codecs" version="2.2.0" full_name="Component codec_da7212_adapter" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="abstraction_layer" package_base_path="components/codec/port" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="driver.dialog7212.MIMXRT1024"/>
          <component_dependency value="driver.codec.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_da7212_adapter.c"/>
        <files mask="fsl_codec_adapter.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_da7212_adapter.h"/>
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.codec_i2c.MIMXRT1024" name="codec_i2c" brief="Component codec_i2c" version="2.1.0" full_name="Component codec_i2c" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="software_component" package_base_path="components/codec/i2c" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1024"/>
          <component_dependency value="component.lpi2c_adapter.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_codec_i2c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_codec_i2c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="component_codec_i2c_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.codec_sgtl_adapter.MIMXRT1024" name="codecs_sgtl_adapter" brief="Component sgtl5000 adapter for multi codecs" version="2.2.0" full_name="Component codec_sgtl_adapter" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="abstraction_layer" package_base_path="components/codec/port" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="driver.sgtl5000.MIMXRT1024"/>
          <component_dependency value="driver.codec.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_sgtl_adapter.c"/>
        <files mask="fsl_codec_adapter.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sgtl_adapter.h"/>
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.codec_wm8904_adapter.MIMXRT1024" name="codecs_wm8904_adapter" brief="Component wm8904 adapter for multi codecs" version="2.2.0" full_name="Component codec_wm8904_adapter" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="abstraction_layer" package_base_path="components/codec/port" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="driver.wm8904.MIMXRT1024"/>
          <component_dependency value="driver.codec.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_wm8904_adapter.c"/>
        <files mask="fsl_codec_adapter.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wm8904_adapter.h"/>
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.codec_wm8960_adapter.MIMXRT1024" name="codecs_wm8960_adapter" brief="Component wm8960 adapter for multi codecs" version="2.2.0" full_name="Component codec_wm8960_adapter" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="abstraction_layer" package_base_path="components/codec/port" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="driver.wm8960.MIMXRT1024"/>
          <component_dependency value="driver.codec.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_wm8960_adapter.c"/>
        <files mask="fsl_codec_adapter.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wm8960_adapter.h"/>
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.common_task.MIMXRT1024" name="common_task" brief="Component common_task" version="1.0.0" full_name="Component common_task" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="software_component" package_base_path="components/common_task" project_base_path="component/common_task">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1024"/>
          <component_dependency value="component.osa.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_common_task.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_common_task.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.cs42888_adapter.MIMXRT1024" name="codec_cs42888_adapter" brief="Component cs42888 adapter for single codec" version="2.2.1" full_name="Component cs42888_adapter" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="abstraction_layer" package_base_path="components/codec/port/cs42888" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="driver.cs42888.MIMXRT1024"/>
          <component_dependency value="driver.codec.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_codec_adapter.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.da7212_adapter.MIMXRT1024" name="codec_da7212_adapter" brief="Component da7212 adapter for single codec" version="2.2.0" full_name="Component da7212_adapter" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="abstraction_layer" package_base_path="components/codec/port/da7212" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="driver.dialog7212.MIMXRT1024"/>
          <component_dependency value="driver.codec.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_codec_adapter.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.exception_handling_cm7.MIMXRT1024" name="exception_handling_cm7" brief="Component exception_handling_cm7" version="1.0.0" full_name="Component exception_handling_cm7" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="software_component" package_base_path="components/exception_handling" project_base_path="component/exception_handling">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1024"/>
          <component_dependency value="utility.debug_console.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_exception_handling.h"/>
      </source>
      <source relative_path="cm7" project_relative_path="./" type="src" device_cores="core0_MIMXRT1024xxxxx">
        <files mask="fsl_component_exception_handling.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="component_exception_handling_cm7_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.flexspi_nor_flash_adapter.MIMXRT1024" name="flexspi_nor_flash_adapter" brief="Component flexspi_nor_flash_adapter" version="1.0.0" full_name="Component flexspi_nor_flash_adapter" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="abstraction_layer" package_base_path="components/internal_flash" project_base_path="component/internal_flash">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1024"/>
          <component_dependency value="platform.drivers.flexspi.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_flash.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_flexspi_nor_flash.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.gpt_adapter.MIMXRT1024" name="gpt_adapter" brief="Component gpt_adapter" version="1.0.0" full_name="Component gpt_adapter" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="abstraction_layer" package_base_path="components/timer" project_base_path="component/timer">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1024"/>
          <component_dependency value="platform.drivers.gpt.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_gpt.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.igpio_adapter.MIMXRT1024" name="igpio_adapter" brief="Component igpio_adapter" version="1.0.0" full_name="Component igpio_adapter" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="abstraction_layer" package_base_path="components/gpio" project_base_path="component/gpio">
      <dependencies>
        <component_dependency value="platform.drivers.igpio.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_gpio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_igpio.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.led.MIMXRT1024" name="led" brief="Component led" version="1.0.0" full_name="Component led" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="software_component" package_base_path="components/led" project_base_path="component/led">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1024"/>
          <component_dependency value="component.timer_manager.MIMXRT1024"/>
          <component_dependency value="component.igpio_adapter.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_led.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_led.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.lists.MIMXRT1024" name="lists" brief="Component lists" version="1.0.0" full_name="Component lists" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="software_component" package_base_path="components/lists" project_base_path="component/lists">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_generic_list.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_generic_list.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="component_lists_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.log.MIMXRT1024" name="log" brief="Component log" version="1.0.0" full_name="Component log" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="software_component" package_base_path="components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1024"/>
          <component_dependency value="utility.debug_console.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log.h"/>
        <files mask="fsl_component_log_config.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="component_log_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.log.backend.debugconsole.MIMXRT1024" name="log_backend_debug_console" brief="Component log backend debug console" version="1.0.0" full_name="Component log backend debug console" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="software_component" package_base_path="components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1024"/>
          <component_dependency value="component.log.MIMXRT1024"/>
          <component_dependency value="utility.debug_console.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log_backend_debugconsole.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log_backend_debugconsole.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="component_log_backend_debugconsole_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.log.backend.ringbuffer.MIMXRT1024" name="log_backend_ring_buffer" brief="Component log backend ring buffer" version="1.0.0" full_name="Component log backend ring buffer" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="software_component" package_base_path="components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1024"/>
          <component_dependency value="component.log.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log_backend_ringbuffer.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log_backend_ringbuffer.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="component_log_backend_ringbuffer_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.lpi2c_adapter.MIMXRT1024" name="lpi2c_adapter" brief="Component lpi2c_adapter" version="1.0.0" full_name="Component lpi2c_adapter" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="abstraction_layer" package_base_path="components/i2c" project_base_path="component/i2c">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1024"/>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_i2c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpi2c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="component_lpi2c_adapter_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.lpuart_adapter.MIMXRT1024" name="lpuart_adapter" brief="Component lpuart_adapter" version="1.0.0" full_name="lpuart_adapter" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="utilities" package_base_path="components/uart" project_base_path="component/uart">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1024"/>
          <component_dependency value="platform.drivers.lpuart.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpuart.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="component_lpuart_adapter_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.mem_manager.MIMXRT1024" name="mem_manager" brief="Component mem_manager" version="1.0.0" full_name="Component mem_manager" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="software_component" package_base_path="components/mem_manager" project_base_path="component/mem_manager">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1024"/>
          <component_dependency value="component.lists.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_mem_manager.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_mem_manager.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.mem_manager_light.MIMXRT1024" name="mem_manager_light" brief="Component mem_manager_light" version="1.0.0" full_name="Component mem_manager_light" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="software_component" package_base_path="components/mem_manager" project_base_path="component/mem_manager">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1024"/>
          <component_dependency value="component.lists.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_mem_manager.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_mem_manager_light.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.mflash.common.MIMXRT1024" name="mflash common" brief="mflash common" version="1.0.0" full_name="statically allocated file system for mflash" devices="MIMXRT1024xxxxx" user_visible="false" type="software_component" package_base_path="components/flash/mflash" project_base_path="flash/mflash">
      <source relative_path="./" type="c_include">
        <files mask="mflash_common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="component_mflash_common_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.mflash.rt1024.MIMXRT1024" name="mflash rt1024" brief="mflash rt1024" version="1.0.0" full_name="mflash rt1024" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="software_component" package_base_path="components/flash/mflash/mimxrt1024" project_base_path="flash/mflash/mimxrt1024">
      <dependencies>
        <all>
          <component_dependency value="component.mflash.common.MIMXRT1024"/>
          <component_dependency value="platform.drivers.flexspi.MIMXRT1024"/>
          <component_dependency value="platform.drivers.cache_armv7_m7.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="mflash_drv.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="mflash_drv.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="component_mflash_rt1024_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.mflash_file.MIMXRT1024" name="mflash file" brief="mflash file" version="1.0.0" full_name="statically allocated file system for mflash" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="false" type="software_component" package_base_path="components/flash/mflash" project_base_path="flash/mflash">
      <dependencies>
        <component_dependency value="component.mflash.rt1024.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="mflash_file.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="mflash_file.c"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="readme.txt" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="component_mflash_file_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.osa.MIMXRT1024" name="osa" brief="Component osa" version="1.0.0" full_name="Component osa" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1024"/>
          <component_dependency value="component.lists.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction.h"/>
        <files mask="fsl_os_abstraction_config.h"/>
      </source>
      <source condition="middleware.baremetal.MIMXRT1024" relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction_bm.h"/>
      </source>
      <source condition="middleware.baremetal.MIMXRT1024" relative_path="./" type="src">
        <files mask="fsl_os_abstraction_bm.c"/>
      </source>
      <source condition="middleware.freertos-kernel.MIMXRT1024" relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction_free_rtos.h"/>
      </source>
      <source condition="middleware.freertos-kernel.MIMXRT1024" relative_path="./" type="src">
        <files mask="fsl_os_abstraction_free_rtos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="component_osa_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.osa_bm.MIMXRT1024" name="osa_bm" brief="Component osa_bm" version="1.0.0" full_name="Component osa_bm" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="false" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1024"/>
          <component_dependency value="component.lists.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction.h"/>
        <files mask="fsl_os_abstraction_bm.h"/>
        <files mask="fsl_os_abstraction_config.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_os_abstraction_bm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="component_osa_bm_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.osa_free_rtos.MIMXRT1024" name="osa_free_rtos" brief="Component osa_free_rtos" version="1.0.0" full_name="Component osa_free_rtos" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="false" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1024"/>
          <component_dependency value="platform.drivers.common.MIMXRT1024"/>
          <component_dependency value="component.lists.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction.h"/>
        <files mask="fsl_os_abstraction_free_rtos.h"/>
        <files mask="fsl_os_abstraction_config.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_os_abstraction_free_rtos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="component_osa_free_rtos_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.panic.MIMXRT1024" name="panic" brief="Component panic" version="1.0.0" full_name="Component panic" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="software_component" package_base_path="components/panic" project_base_path="component/panic">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1024"/>
          <component_dependency value="utility.debug_console.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_panic.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_panic.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="component_panic_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.pit_adapter.MIMXRT1024" name="pit_adapter" brief="Component pit_adapter" version="1.0.0" full_name="Component pit_adapter" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="abstraction_layer" package_base_path="components/timer" project_base_path="component/timer">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1024"/>
          <component_dependency value="platform.drivers.pit.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_pit.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="component_pit_adapter_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager.MIMXRT1024" name="serial_manager" brief="Component serial_manager" version="1.0.0" full_name="Serial Manager" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1024"/>
          <component_dependency value="component.lists.MIMXRT1024"/>
          <any_of>
            <component_dependency value="component.serial_manager_uart.MIMXRT1024"/>
            <component_dependency value="component.serial_manager_swo.MIMXRT1024"/>
            <component_dependency value="component.serial_manager_virtual.MIMXRT1024"/>
            <component_dependency value="component.serial_manager_usb_cdc.MIMXRT1024"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_manager.h"/>
        <files mask="fsl_component_serial_port_internal.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_manager.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="component_serial_manager_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_swo.MIMXRT1024" name="serial_manager_swo" brief="Component serial_manager_swo" version="1.0.0" full_name="Serial Manager Swo" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_SWO" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1024"/>
          <component_dependency value="component.serial_manager.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_swo.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_swo.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_uart.MIMXRT1024" name="serial_manager_uart" brief="Component serial_manager_uart" version="1.0.0" full_name="Serial Manager uart" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_UART" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.lpuart_adapter.MIMXRT1024"/>
          <component_dependency value="component.serial_manager.MIMXRT1024"/>
          <component_dependency value="platform.drivers.lpuart.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_uart.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="component_serial_manager_uart_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_usb_cdc.MIMXRT1024" name="serial_manager_usb_cdc" brief="Component serial_manager_usb_cdc" version="1.0.0" full_name="Serial Manager USB CDC" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_USBCDC" value="1"/>
        <define name="DEBUG_CONSOLE_TRANSFER_NON_BLOCKING" value=""/>
        <define name="USB_DEVICE_CONFIG_CDC_ACM" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.serial_manager.MIMXRT1024"/>
          <component_dependency value="middleware.usb.device.cdc.external.MIMXRT1024"/>
          <component_dependency value="platform.drivers.common.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_usb.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_usb.c"/>
      </source>
      <source relative_path="usb_cdc_adapter" type="c_include">
        <files mask="usb_device_descriptor.h"/>
      </source>
      <source relative_path="usb_cdc_adapter" type="src">
        <files mask="usb_device_descriptor.c"/>
      </source>
      <source relative_path="usb_cdc_adapter/inf" type="configuration">
        <files mask="fsl_ucwxp.inf" hidden="true"/>
      </source>
      <source relative_path="usb_cdc_adapter/inf" type="other">
        <files mask="cdc.cat" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="component_serial_manager_usb_cdc_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="usb_cdc_adapter" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_virtual.MIMXRT1024" name="serial_manager_virtual" brief="Component serial_manager_virtual" version="1.0.0" full_name="Serial Manager Virtual" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_VIRTUAL" value="1"/>
        <define name="DEBUG_CONSOLE_TRANSFER_NON_BLOCKING" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.serial_manager.MIMXRT1024"/>
          <component_dependency value="platform.drivers.common.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_virtual.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_virtual.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.sgtl_adapter.MIMXRT1024" name="codec_sgtl_adapter" brief="Component sgtl5000 adapter for single codec" version="2.2.0" full_name="Component sgtl_adapter" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="abstraction_layer" package_base_path="components/codec/port/sgtl5000" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="driver.sgtl5000.MIMXRT1024"/>
          <component_dependency value="driver.codec.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_codec_adapter.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.software_crc_adapter.MIMXRT1024" name="software_crc_adapter" brief="Component software_crc_adapter" version="1.0.0" full_name="Component software_crc_adapter" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="abstraction_layer" package_base_path="components/crc" project_base_path="component/crc">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_crc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_software_crc.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.software_rng_adapter.MIMXRT1024" name="software_rng_adapter" brief="Component software_rng_adapter" version="1.0.0" full_name="Component software_rng_adapter" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="abstraction_layer" package_base_path="components/rng" project_base_path="component/rng">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_rng.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_software_rng.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.timer_manager.MIMXRT1024" name="timer_manager" brief="Component timer_manager" version="1.0.0" full_name="Component timer_manager" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="software_component" package_base_path="components/timer_manager" project_base_path="component/timer_manager">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1024"/>
          <component_dependency value="component.lists.MIMXRT1024"/>
          <any_of>
            <component_dependency value="component.gpt_adapter.MIMXRT1024"/>
            <component_dependency value="component.pit_adapter.MIMXRT1024"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_timer_manager.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_timer_manager.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.trng_adapter.MIMXRT1024" name="trng_adapter" brief="Component trng_adapter" version="1.0.0" full_name="Component trng_adapter" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="abstraction_layer" package_base_path="components/rng" project_base_path="component/rng">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1024"/>
          <component_dependency value="platform.drivers.trng.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_rng.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_trng.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.wm8904_adapter.MIMXRT1024" name="codec_wm8904_adapter" brief="Component wm8904 adapter for single codec" version="2.2.0" full_name="Component wm8904_adapter" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="abstraction_layer" package_base_path="components/codec/port/wm8904" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="driver.wm8904.MIMXRT1024"/>
          <component_dependency value="driver.codec.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_codec_adapter.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="component.wm8960_adapter.MIMXRT1024" name="codec_wm8960_adapter" brief="Component wm8960 adapter for single codecs" version="2.2.0" full_name="Component wm8960_adapter" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="abstraction_layer" package_base_path="components/codec/port/wm8960" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="driver.wm8960.MIMXRT1024"/>
          <component_dependency value="driver.codec.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_codec_adapter.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="component_wm8960_adapter_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="device.MIMXRT1024_CMSIS.MIMXRT1024" name="MIMXRT1024_CMSIS" brief="Device MIMXRT1024_cmsis" version="1.0.0" full_name="Device MIMXRT1024_cmsis" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="CMSIS_Include" package_base_path="devices/MIMXRT1024" project_base_path="device">
      <dependencies>
        <component_dependency value="platform.Include_core_cm7.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_device_registers.h"/>
        <files mask="MIMXRT1024.h"/>
        <files mask="MIMXRT1024_features.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="device_MIMXRT1024_CMSIS_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="device.MIMXRT1024_debugger.MIMXRT1024" name="MIMXRT1024_debugger" brief="Device MIMXRT1024_debugger" version="1.0.0" full_name="Device MIMXRT1024_debugger" devices="MIMXRT1024xxxxx" user_visible="true" type="debugger" package_base_path="devices/MIMXRT1024" project_base_path="MIMXRT1024">
      <source relative_path="./" type="xml">
        <files mask="MIMXRT1024.xml"/>
      </source>
    </component>
    <component id="platform.devices.MIMXRT1024_linker.MIMXRT1024" name="MIMXRT1024_linker" brief="Device MIMXRT1024_linker" version="1.0.0" full_name="Device MIMXRT1024_linker" devices="MIMXRT1024xxxxx" user_visible="true" type="linker" package_base_path="devices/MIMXRT1024" project_base_path="MIMXRT1024">
      <source toolchain="mdk" relative_path="arm" type="linker">
        <files mask="MIMXRT1024xxxxx_flexspi_nor.scf"/>
        <files mask="MIMXRT1024xxxxx_flexspi_nor_sdram.scf"/>
        <files mask="MIMXRT1024xxxxx_ram.scf"/>
        <files mask="MIMXRT1024xxxxx_sdram.scf"/>
        <files mask="MIMXRT1024xxxxx_sdram_txt.scf"/>
      </source>
      <source toolchain="armgcc" relative_path="gcc" type="linker">
        <files mask="MIMXRT1024xxxxx_flexspi_nor.ld"/>
        <files mask="MIMXRT1024xxxxx_flexspi_nor_sdram.ld"/>
        <files mask="MIMXRT1024xxxxx_ram.ld"/>
        <files mask="MIMXRT1024xxxxx_sdram.ld"/>
        <files mask="MIMXRT1024xxxxx_sdram_txt.ld"/>
      </source>
      <source toolchain="iar" relative_path="iar" type="linker">
        <files mask="MIMXRT1024xxxxx_flexspi_nor.icf"/>
        <files mask="MIMXRT1024xxxxx_flexspi_nor_sdram.icf"/>
        <files mask="MIMXRT1024xxxxx_ram.icf"/>
        <files mask="MIMXRT1024xxxxx_sdram.icf"/>
        <files mask="MIMXRT1024xxxxx_sdram_txt.icf"/>
      </source>
    </component>
    <component id="device.MIMXRT1024_startup.MIMXRT1024" name="MIMXRT1024_startup" brief="Device MIMXRT1024_startup" version="1.1.0" full_name="Device MIMXRT1024_startup" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="Device/Startup" user_visible="true" type="startup" package_base_path="devices/MIMXRT1024" project_base_path="startup">
      <dependencies>
        <component_dependency value="device.MIMXRT1024_system.MIMXRT1024"/>
      </dependencies>
      <source toolchain="iar" relative_path="iar" project_relative_path="./" type="asm_include">
        <files mask="startup_MIMXRT1024.s"/>
      </source>
      <source toolchain="armgcc" relative_path="gcc" project_relative_path="./" type="asm_include">
        <files mask="startup_MIMXRT1024.S"/>
      </source>
      <source toolchain="mdk" relative_path="arm" project_relative_path="./" type="asm_include">
        <files mask="startup_MIMXRT1024.S"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" type="src_c">
        <files mask="startup_mimxrt1024.c"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" type="src_cpp">
        <files mask="startup_mimxrt1024.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="device_MIMXRT1024_startup_MIMXRT1024.cmake" hidden="true"/>
      </source>
    </component>
    <component id="device.MIMXRT1024_system.MIMXRT1024" name="MIMXRT1024_system" brief="Device MIMXRT1024_system" version="1.0.0" full_name="Device MIMXRT1024_system" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="CMSIS_Include" package_base_path="devices/MIMXRT1024" project_base_path="device">
      <dependencies>
        <component_dependency value="device.MIMXRT1024_CMSIS.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="system_MIMXRT1024.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="system_MIMXRT1024.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="device_MIMXRT1024_system_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="docs.MIMXRT1024.MIMXRT1024" name="MIMXRT1024" brief="Docs mimxrt1024" version="1.0.0" full_name="Docs mimxrt1024" devices="MIMXRT1024xxxxx" user_visible="true" type="documentation" package_base_path="docs" project_base_path="docs">
      <source relative_path="./" type="doc">
        <files mask="Getting Started with MCUXpresso SDK for MIMXRT1024-EVK.pdf"/>
        <files mask="MCUXpresso SDK Release Notes for MIMXRT1024-EVK.pdf"/>
      </source>
    </component>
    <component id="docs.motor_control_pmsm_safe.MIMXRT1024" name="motor_control_pmsm_safe" brief="Docs motor_control_pmsm_safe" version="1.0.0" full_name="Docs motor_control_pmsm_safe" devices="MIMXRT1024xxxxx" user_visible="true" type="documentation" package_base_path="docs/MC" project_base_path="MC">
      <dependencies>
        <component_dependency value="middleware.motor_control.pmsm.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="MCUXSDK3PPMSMCWSUG.pdf"/>
      </source>
    </component>
    <component id="docs.motor_control_rn.MIMXRT1024" name="motor_control_rn" brief="Docs motor_control_rn" version="1.0.0" full_name="Docs motor_control_rn" devices="MIMXRT1024xxxxx" user_visible="true" type="documentation" package_base_path="docs/MC" project_base_path="MC">
      <dependencies>
        <any_of>
          <component_dependency value="middleware.motor_control.pmsm.MIMXRT1024"/>
          <component_dependency value="middleware.motor_control.acim.MIMXRT1024"/>
          <component_dependency value="middleware.motor_control.bldc.MIMXRT1024"/>
        </any_of>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="Release_notes.pdf"/>
      </source>
    </component>
    <component id="docs.safety.rt10xx.MIMXRT1024" name="rt10xx" brief="Docs safety rt10xx" version="1.0.0" full_name="Docs safety rt10xx" devices="MIMXRT1024xxxxx" user_visible="true" type="documentation" package_base_path="docs/safety" project_base_path="safety">
      <dependencies>
        <component_dependency value="middleware.safety.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="IEC60730B_Example_Release_Notes_v4_1.pdf"/>
        <files mask="IEC60730B_Example_User_Guide_IMXrt_v4_1.pdf"/>
        <files mask="IEC60730B_Library_Release_Notes_CM4_CM7_v4_1.pdf"/>
        <files mask="IEC60730B_Library_User_Guide_CM4_CM7_v4_1.pdf"/>
      </source>
    </component>
    <component id="platform.drivers.adc_12b1msps_sar.MIMXRT1024" name="adc_12b1msps_sar" brief="ADC Driver" version="2.0.4" full_name="ADC Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_adc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_adc_12b1msps_sar_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.adc_etc.MIMXRT1024" name="adc_etc" brief="ADC_ETC Driver" version="2.1.1" full_name="ADC_ETC Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_adc_etc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adc_etc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_adc_etc_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.aipstz.MIMXRT1024" name="aipstz" brief="aipstz Driver" version="2.0.1" full_name="AIPSTZ Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_aipstz.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_aipstz.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.aoi.MIMXRT1024" name="aoi" brief="AOI Driver" version="2.0.1" full_name="AOI Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_aoi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_aoi.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_aoi_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.bee.MIMXRT1024" name="bee" brief="BEE Driver" version="2.0.2" full_name="BEE Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_bee.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_bee.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_bee_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.cache_armv7_m7.MIMXRT1024" name="cache" brief="CACHE Driver" version="2.0.3" full_name="CACHE Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_cache.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cache.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_cache_armv7_m7_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.clock.MIMXRT1024" name="clock" brief="Clock Driver" version="2.4.0" full_name="Clock Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_clock.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_clock.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_clock_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.cmp.MIMXRT1024" name="cmp" brief="CMP Driver" version="2.0.2" full_name="CMP Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_cmp.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cmp.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_cmp_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.enet_cmsis.MIMXRT1024" name="enet_cmsis" brief="ENET CMSIS Driver" version="2.2.0" full_name="ENET CMSIS Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="CMSIS_driver" package_base_path="devices/MIMXRT1024/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.enet.MIMXRT1024"/>
          <component_dependency value="platform.CMSIS_Driver_Include.Ethernet_MAC_CMSISInclude.MIMXRT1024"/>
          <component_dependency value="platform.CMSIS_Driver_Include.Ethernet_PHY_CMSISInclude.MIMXRT1024"/>
          <component_dependency value="platform.CMSIS_Driver_Include.Ethernet_CMSISInclude.MIMXRT1024"/>
          <component_dependency value="RTE_Device.MIMXRT1024"/>
          <component_dependency value="driver.phy-common.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_enet_cmsis.h"/>
        <files mask="fsl_enet_phy_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_enet_cmsis.c"/>
        <files mask="fsl_enet_phy_cmsis.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_cmsis_enet_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpi2c_cmsis.MIMXRT1024" name="lpi2c_cmsis" brief="LPI2C CMSIS Driver" version="2.1" full_name="LPI2C CMSIS Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="CMSIS_driver" package_base_path="devices/MIMXRT1024/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1024"/>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT1024"/>
          <component_dependency value="RTE_Device.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpi2c_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpi2c_cmsis.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_cmsis_lpi2c_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpspi_cmsis.MIMXRT1024" name="lpspi_cmsis" brief="LPSPI CMSIS Driver" version="2.3.0" full_name="LPSPI CMSIS Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="CMSIS_driver" package_base_path="devices/MIMXRT1024/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpspi.MIMXRT1024"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT1024"/>
          <component_dependency value="RTE_Device.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpspi_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpspi_cmsis.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_cmsis_lpspi_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpuart_cmsis.MIMXRT1024" name="lpuart_cmsis" brief="LPUART CMSIS Driver" version="2.1.0" full_name="LPUART CMSIS Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="CMSIS_driver" package_base_path="devices/MIMXRT1024/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpuart.MIMXRT1024"/>
          <component_dependency value="platform.CMSIS_Driver_Include.USART_CMSISInclude.MIMXRT1024"/>
          <component_dependency value="RTE_Device.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart_cmsis.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_cmsis_lpuart_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.codec.MIMXRT1024" name="codec" brief="Driver codec" version="2.2.1" full_name="Driver codec" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1024"/>
          <any_of>
            <component_dependency value="component.wm8904_adapter.MIMXRT1024"/>
            <component_dependency value="component.codec_cs42888_adapter.MIMXRT1024"/>
            <component_dependency value="component.codec_da7212_adapter.MIMXRT1024"/>
            <component_dependency value="component.codec_sgtl_adapter.MIMXRT1024"/>
            <component_dependency value="component.codec_wm8960_adapter.MIMXRT1024"/>
            <component_dependency value="component.codec_wm8904_adapter.MIMXRT1024"/>
            <component_dependency value="component.cs42888_adapter.MIMXRT1024"/>
            <component_dependency value="component.da7212_adapter.MIMXRT1024"/>
            <component_dependency value="component.sgtl_adapter.MIMXRT1024"/>
            <component_dependency value="component.wm8960_adapter.MIMXRT1024"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_codec_common.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_codec_common.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_codec_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.common.MIMXRT1024" name="common" brief="COMMON Driver" version="2.2.9" full_name="COMMON Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.clock.MIMXRT1024"/>
          <component_dependency value="device.MIMXRT1024_CMSIS.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_common.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_common.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_common_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.cs42888.MIMXRT1024" name="cs42888" brief="Driver cs42888" version="2.1.2" full_name="Driver cs42888" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="software_component" package_base_path="components/codec/cs42888" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1024"/>
          <component_dependency value="component.codec_i2c.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cs42888.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_cs42888.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dcdc_1.MIMXRT1024" name="dcdc_1" brief="DCDC Driver" version="2.2.1" full_name="DCDC Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_dcdc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dcdc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_dcdc_1_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dcp.MIMXRT1024" name="dcp" brief="DCP Driver" version="2.1.6" full_name="DCP Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.cache_armv7_m7.MIMXRT1024"/>
          <component_dependency value="platform.drivers.common.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_dcp.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dcp.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_dcp_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.dialog7212.MIMXRT1024" name="dialog7212" brief="Driver dialog7212" version="2.2.2" full_name="Driver dialog7212" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="software_component" package_base_path="components/codec/da7212" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1024"/>
          <component_dependency value="component.codec_i2c.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dialog7212.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dialog7212.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dmamux.MIMXRT1024" name="dmamux" brief="DMAMUX Driver" version="2.0.5" full_name="DMAMUX Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dmamux.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dmamux.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_dmamux_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.edma.MIMXRT1024" name="edma" brief="EDMA Driver" version="2.4.1" full_name="EDMA Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1024"/>
          <component_dependency value="platform.drivers.dmamux.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_edma_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.enc.MIMXRT1024" name="enc" brief="ENC Driver" version="2.0.1" full_name="ENC Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_enc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_enc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_enc_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.enet.MIMXRT1024" name="enet" brief="ENET Driver" version="2.3.4" full_name="ENET Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_enet.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_enet.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_enet_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.ewm.MIMXRT1024" name="ewm" brief="EWM Driver" version="2.0.3" full_name="EWM Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_ewm.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ewm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_ewm_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcan.MIMXRT1024" name="flexcan" brief="FLEXCAN Driver" version="2.6.0" full_name="FLEXCAN Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexcan.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_flexcan.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_flexcan_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio.MIMXRT1024" name="flexio" brief="FLEXIO Driver" version="2.0.4" full_name="FLEXIO Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_flexio_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_camera.MIMXRT1024" name="flexio_camera" brief="FLEXIO Driver" version="2.1.3" full_name="FLEXIO CAMERA Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.flexio.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_camera.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_camera.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_camera_edma.MIMXRT1024" name="flexio_camera_edma" brief="FLEXIO CAMERA EDMA Driver" version="2.1.3" full_name="FLEXIO CAMERA EDMA Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio_camera.MIMXRT1024"/>
          <component_dependency value="platform.drivers.edma.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_camera_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_camera_edma.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_i2c_master.MIMXRT1024" name="flexio_i2c_master" brief="FLEXIO I2C Driver" version="2.4.0" full_name="FLEXIO I2C Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.flexio.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_i2c_master.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_i2c_master.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_flexio_i2c_master_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_i2s.MIMXRT1024" name="flexio_i2s" brief="FLEXIO I2S Driver" version="2.2.0" full_name="FLEXIO I2S Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.flexio.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_i2s.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_i2s.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_flexio_i2s_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_i2s_edma.MIMXRT1024" name="flexio_i2s_edma" brief="FLEXIO I2S EDMA Driver" version="2.1.7" full_name="FLEXIO I2S EDMA Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma.MIMXRT1024"/>
          <component_dependency value="platform.drivers.flexio_i2s.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_i2s_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_i2s_edma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_flexio_i2s_edma_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_mculcd.MIMXRT1024" name="flexio_mculcd" brief="FLEXIO MCULCD Driver" version="2.0.5" full_name="FLEXIO MCULCD Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.flexio.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_mculcd.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_mculcd.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_mculcd_edma.MIMXRT1024" name="flexio_mculcd_edma" brief="FLEXIO MCULCD EDMA Driver" version="2.0.4" full_name="FLEXIO MCULCD EDMA Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio_mculcd.MIMXRT1024"/>
          <component_dependency value="platform.drivers.edma.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_mculcd_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_mculcd_edma.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_spi.MIMXRT1024" name="flexio_spi" brief="FLEXIO SPI Driver" version="2.2.0" full_name="FLEXIO SPI Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.flexio.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_spi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_spi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_flexio_spi_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_spi_edma.MIMXRT1024" name="flexio_spi_edma" brief="FLEXIO SPI EDMA Driver" version="2.2.0" full_name="FLEXIO SPI EDMA Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma.MIMXRT1024"/>
          <component_dependency value="platform.drivers.flexio_spi.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_spi_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_spi_edma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_flexio_spi_edma_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_uart.MIMXRT1024" name="flexio_uart" brief="FLEXIO UART Driver" version="2.3.0" full_name="FLEXIO UART Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.flexio.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_uart.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_uart.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_flexio_uart_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_uart_edma.MIMXRT1024" name="flexio_uart_edma" brief="FLEXIO UART EDMA Driver" version="2.3.0" full_name="FLEXIO UART EDMA Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio_uart.MIMXRT1024"/>
          <component_dependency value="platform.drivers.edma.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_uart_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_uart_edma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_flexio_uart_edma_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexram.MIMXRT1024" name="flexram" brief="FLEXRAM Driver" version="2.1.0" full_name="FLEXRAM Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1024"/>
          <component_dependency value="driver.soc_flexram_allocate.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexram.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexram.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_flexram_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexspi.MIMXRT1024" name="flexspi" brief="FLEXSPI Driver" version="2.3.2" full_name="FLEXSPI Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexspi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexspi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_flexspi_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexspi_edma.MIMXRT1024" name="flexspi_edma" brief="FLEXSPI Driver" version="2.3.2" full_name="FLEXSPI EDMA Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexspi.MIMXRT1024"/>
          <component_dependency value="platform.drivers.edma.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexspi_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexspi_edma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_flexspi_edma_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.ft6x06.MIMXRT1024" name="ft6x06" brief="Driver ft6x06" version="1.0.0" full_name="Driver ft6x06" devices="MIMXRT1024xxxxx" user_visible="false" type="board_component" package_base_path="components/ft6x06" project_base_path="touchpanel">
      <dependencies>
        <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ft6x06.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ft6x06.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_ft6x06_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.fxos8700cq.MIMXRT1024" name="fxos8700cq" brief="Driver fxos8700cq" version="1.0.0" full_name="Driver fxos8700cq" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="board_component" package_base_path="components/fxos8700cq" project_base_path="accel">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_fxos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_fxos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_fxos8700cq_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.gpc_1.MIMXRT1024" name="gpc" brief="GPC Driver" version="2.1.1" full_name="GPC Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_gpc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_gpc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_gpc_1_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.gpt.MIMXRT1024" name="gpt" brief="GPT Driver" version="2.0.2" full_name="GPT Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_gpt.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_gpt.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_gpt_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.igpio.MIMXRT1024" name="gpio" brief="GPIO Driver" version="2.0.5" full_name="igpio" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_gpio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_gpio.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_igpio_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.ili9341.MIMXRT1024" name="ili9341" brief="Driver ili9341" version="1.0.1" full_name="Driver ili9341" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="board_component" package_base_path="components/ili9341" project_base_path="lcd">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ili9341.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ili9341.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_ili9341_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.iomuxc.MIMXRT1024" name="iomuxc" brief="IOMUXC Driver" version="2.0.1" full_name="IOMUXC Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_iomuxc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_iomuxc_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.kpp.MIMXRT1024" name="kpp" brief="KPP Driver" version="2.0.1" full_name="KPP Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_kpp.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_kpp.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_kpp_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpi2c.MIMXRT1024" name="i2c" brief="LPI2C Driver" version="2.2.0" full_name="LPI2C Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lpi2c.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpi2c.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_lpi2c_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpi2c_edma.MIMXRT1024" name="i2c_edma" brief="LPI2C Driver" version="2.2.0" full_name="LPI2C Edma Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma.MIMXRT1024"/>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lpi2c_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpi2c_edma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_lpi2c_edma_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpi2c_freertos.MIMXRT1024" name="i2c_freertos" brief="LPI2C Driver" version="2.2.0" full_name="LPI2C Freerto Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpi2c_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpi2c_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_lpi2c_freertos_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpspi.MIMXRT1024" name="lpspi" brief="LPSPI Driver" version="2.1.0" full_name="LPSPI Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lpspi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpspi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_lpspi_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpspi_edma.MIMXRT1024" name="lpspi_edma" brief="LPSPI Driver" version="2.0.5" full_name="LPSPI Edma Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma.MIMXRT1024"/>
          <component_dependency value="platform.drivers.lpspi.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpspi_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpspi_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_lpspi_edma_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpspi_freertos.MIMXRT1024" name="lpspi_freertos" brief="LPSPI Driver" version="2.0.5" full_name="LPSPI Freertos Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpspi.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpspi_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpspi_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_lpspi_freertos_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpuart.MIMXRT1024" name="lpuart" brief="LPUART Driver" version="2.4.1" full_name="LPUART Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_lpuart_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpuart_edma.MIMXRT1024" name="lpuart_edma" brief="LPUART Driver" version="2.4.0" full_name="LPUART Edma Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma.MIMXRT1024"/>
          <component_dependency value="platform.drivers.lpuart.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_lpuart_edma_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpuart_freertos.MIMXRT1024" name="lpuart_freertos" brief="LPUART Driver" version="2.4.0" full_name="LPUART Freertos Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpuart.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_lpuart_freertos_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.mdio-common.MIMXRT1024" name="mdio-common" brief="Driver mdio-common" version="2.0.0" full_name="Driver mdio-common" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="board_component" package_base_path="components/phy" project_base_path="mdio">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mdio.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_mdio-common_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.mdio-enet.MIMXRT1024" name="mdio-enet" brief="Driver mdio-enet" version="2.0.0" full_name="Driver mdio-enet" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="board_component" package_base_path="components/phy/mdio/enet" project_base_path="mdio">
      <dependencies>
        <all>
          <component_dependency value="driver.mdio-common.MIMXRT1024"/>
          <component_dependency value="platform.drivers.enet.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_enet_mdio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_enet_mdio.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_mdio-enet_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.nand_flash-common.MIMXRT1024" name="nand_flash-common" brief="Driver nand_flash-common" version="1.0.0" full_name="Driver nand_flash-common" devices="MIMXRT1024xxxxx" user_visible="true" type="abstraction_layer" package_base_path="components/flash/nand" project_base_path="nand_flash">
      <source relative_path="./" type="c_include">
        <files mask="fsl_nand_flash.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.nand_flash-controller-flexspi.MIMXRT1024" name="nand_flash-controller-flexspi" brief="Driver nand_flash-controller-flexspi" version="1.0.0" full_name="Driver nand_flash-controller-flexspi" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="abstraction_layer" package_base_path="components/flash/nand/flexspi" project_base_path="nand_flash">
      <dependencies>
        <all>
          <component_dependency value="driver.nand_flash-common.MIMXRT1024"/>
          <component_dependency value="platform.drivers.flexspi.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexspi_nand_flash.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexspi_nand_flash.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.nand_flash-controller-semc.MIMXRT1024" name="nand_flash-controller-semc" brief="Driver nand_flash-controller-semc" version="1.0.0" full_name="Driver nand_flash-controller-semc" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="abstraction_layer" package_base_path="components/flash/nand/semc" project_base_path="nand_flash">
      <dependencies>
        <all>
          <component_dependency value="driver.nand_flash-common.MIMXRT1024"/>
          <component_dependency value="platform.drivers.semc.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_semc_nand_flash.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_semc_nand_flash.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.nor_flash-common.MIMXRT1024" name="nor_flash-common" brief="Driver nor_flash-common" version="1.0.0" full_name="Driver nor_flash-common" devices="MIMXRT1024xxxxx" user_visible="true" type="abstraction_layer" package_base_path="components/flash/nor" project_base_path="nor_flash">
      <source relative_path="./" type="c_include">
        <files mask="fsl_nor_flash.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_nor_flash-common_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.nor_flash-controller-flexspi.MIMXRT1024" name="nor_flash-controller-flexspi" brief="Driver nor_flash-controller-flexspi" version="1.0.0" full_name="Driver nor_flash-controller-flexspi" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="abstraction_layer" package_base_path="components/flash/nor/flexspi" project_base_path="nor_flash">
      <dependencies>
        <all>
          <component_dependency value="driver.nor_flash-common.MIMXRT1024"/>
          <component_dependency value="platform.drivers.flexspi.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexspi_nor_flash.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexspi_nor_flash.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_nor_flash-controller-flexspi_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.ocotp.MIMXRT1024" name="ocotp" brief="OCOTP Driver" version="2.1.3" full_name="OCOTP Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ocotp.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ocotp.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_ocotp_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.phy-common.MIMXRT1024" name="phy-common" brief="Driver phy-common" version="2.0.0" full_name="Driver phy-common" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="software_component" package_base_path="components/phy" project_base_path="phy">
      <dependencies>
        <component_dependency value="driver.mdio-common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_phy.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_phy-common_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.phy-device-ksz8081.MIMXRT1024" name="phy-device-ksz8081" brief="Driver phy-device-ksz8081" version="2.0.0" full_name="Driver phy-device-ksz8081" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="board_component" package_base_path="components/phy/device/phyksz8081" project_base_path="phy">
      <dependencies>
        <component_dependency value="driver.phy-common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_phyksz8081.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_phyksz8081.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_phy-device-ksz8081_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.phyksz8081.MIMXRT1024" name="phyksz8081" brief="Driver phyksz8081" version="1.0.0" full_name="Driver phyksz8081" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="board_component" package_base_path="components/phyksz8081" project_base_path="board">
      <dependencies>
        <component_dependency value="platform.drivers.enet.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_phy.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_phy.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_phyksz8081_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pit.MIMXRT1024" name="pit" brief="PIT Driver" version="2.0.4" full_name="PIT Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pit.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pit.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_pit_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pmu.MIMXRT1024" name="pmu" brief="pmu Driver" version="2.1.1" full_name="pmu Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pmu.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pmu.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pwm.MIMXRT1024" name="pwm" brief="PWM Driver" version="2.2.1" full_name="PWM Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pwm.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pwm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_pwm_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.qtmr.MIMXRT1024" name="qtmr" brief="QTMR Driver" version="2.0.2" full_name="QTMR Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_qtmr.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_qtmr.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_qtmr_1_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.romapi.MIMXRT1024" name="ROMAPI" brief="ROMAPI Driver" version="1.1.0" full_name="ROMAPI Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_romapi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_romapi.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_romapi_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.rtwdog.MIMXRT1024" name="rtwdog" brief="RTWDOG Driver" version="2.1.2" full_name="RTWDOG Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rtwdog.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rtwdog.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_rtwatchdog_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sai.MIMXRT1024" name="sai" brief="SAI Driver" version="2.3.2" full_name="SAI Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sai.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sai.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_sai_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sai_edma.MIMXRT1024" name="sai_edma" brief="SAI EDMA Driver" version="2.3.1" full_name="SAI EDMA Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma.MIMXRT1024"/>
          <component_dependency value="platform.drivers.sai.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sai_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sai_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_sai_edma_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.semc.MIMXRT1024" name="semc" brief="SEMC Driver" version="2.3.1" full_name="SEMC Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_semc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_semc.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_semc_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.sgtl5000.MIMXRT1024" name="sgtl5000" brief="Driver sgtl5000" version="2.1.1" full_name="Driver sgtl5000" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="software_component" package_base_path="components/codec/sgtl5000" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1024"/>
          <component_dependency value="component.codec_i2c.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sgtl5000.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sgtl5000.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.snvs_hp.MIMXRT1024" name="snvs_hp" brief="SNVS HP Driver" version="2.2.0" full_name="SNVS HP Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_snvs_hp.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_snvs_hp.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_snvs_hp_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.snvs_lp.MIMXRT1024" name="snvs_lp" brief="SNVS LP Driver" version="2.2.0" full_name="SNVS LP Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_snvs_lp.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_snvs_lp.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_snvs_lp_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.soc_flexram_allocate.MIMXRT1024" name="soc_flexram_allocate" brief="SOC FLEXRAM ALLOCATE Driver" version="2.0.1" full_name="SOC FLEXRAM ALLOCATE Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexram_allocate.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexram_allocate.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_soc_flexram_allocate_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.spdif.MIMXRT1024" name="spdif" brief="SPDIF Driver" version="2.0.5" full_name="SPDIF Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_spdif.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_spdif.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.spdif_edma.MIMXRT1024" name="spdif_edma" brief="SPDIF EDMA Driver" version="2.0.5" full_name="SPDIF EDMA Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.spdif.MIMXRT1024"/>
          <component_dependency value="platform.drivers.edma.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_spdif_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_spdif_edma.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.src.MIMXRT1024" name="src" brief="SRC Driver" version="2.0.1" full_name="SRC Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_src.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_src.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_src_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.tempmon.MIMXRT1024" name="tempmon" brief="TEMPMON Driver" version="2.0.2" full_name="TEMPMON Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_tempmon.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_tempmon.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_tempmon_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.trng.MIMXRT1024" name="trng" brief="TRNG Driver" version="2.0.12" full_name="TRNG Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_trng.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_trng.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_trng_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.usdhc.MIMXRT1024" name="sdhc" brief="USDHC Driver" version="2.7.0" full_name="USDHC Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_usdhc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_usdhc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_usdhc_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.wdog01.MIMXRT1024" name="wdog" brief="wdog01 Driver" version="2.1.1" full_name="wdog01 Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wdog.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wdog.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_wdog01_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.wm8904.MIMXRT1024" name="wm8904" brief="Driver wm8904" version="2.4.3" full_name="Driver wm8904" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="software_component" package_base_path="components/codec/wm8904" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1024"/>
          <component_dependency value="component.codec_i2c.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wm8904.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wm8904.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.wm8960.MIMXRT1024" name="wm8960" brief="Driver wm8960" version="2.1.3" full_name="Driver wm8960" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="software_component" package_base_path="components/codec/wm8960" project_base_path="codec">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1024"/>
          <component_dependency value="component.codec_i2c.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wm8960.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wm8960.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_wm8960_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.xbara.MIMXRT1024" name="xbara" brief="XBARA Driver" version="2.0.5" full_name="XBARA Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_xbara.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_xbara.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_xbara_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.xbarb.MIMXRT1024" name="xbarb" brief="XBARB Driver" version="2.0.2" full_name="XBARB Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/drivers" project_base_path="drivers">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_xbarb.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_xbarb.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_xbarb_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.xip_board.MIMXRT1024" name="xip_board" brief="XIP Board Driver" version="2.0.1" full_name="XIP Board Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="board_component" package_base_path="boards/evkmimxrt1024/xip" project_base_path="xip">
      <defines>
        <define name="XIP_EXTERNAL_FLASH" value="1"/>
        <define name="XIP_BOOT_HEADER_ENABLE" value="1"/>
      </defines>
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="evkmimxrt1024_flexspi_nor_config.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="evkmimxrt1024_flexspi_nor_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_xip_board_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.xip_device.MIMXRT1024" name="xip_device" brief="XIP Device Driver" version="2.0.2" full_name="XIP Device Driver" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="driver" package_base_path="devices/MIMXRT1024/xip" project_base_path="xip">
      <defines>
        <define name="XIP_EXTERNAL_FLASH" value="1"/>
        <define name="XIP_BOOT_HEADER_ENABLE" value="1"/>
      </defines>
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexspi_nor_boot.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_flexspi_nor_boot.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="driver_xip_device_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.baremetal.MIMXRT1024" name="baremetal" brief="Middleware baremetal" version="1.0.0" full_name="Baremetal" devices="MIMXRT1024xxxxx" user_visible="true" type="OS" package_base_path="middleware" project_base_path="middleware">
      <defines>
        <define name="FSL_RTOS_BM" value=""/>
        <define name="SDK_OS_BAREMETAL" value=""/>
      </defines>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_baremetal_MIMXRT1024.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.ble_wiced.MIMXRT1024" name="ble_wiced_4343W" brief="Cypress WICED BLE support" version="6.1.0" full_name="Cypress WICED BLE" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="Wireless/Cypress WiFi" user_visible="true" type="middleware" package_base_path="middleware/wiced" project_base_path="wiced">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1024"/>
          <component_dependency value="middleware.sdmmc.sdio.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="43xxx_BLE/bt_app_inc" type="c_include">
        <files mask="wiced_bt_dev.h"/>
        <files mask="wiced_bt_stack.h"/>
        <files mask="wiced_bt_types.h"/>
        <files mask="wiced_bt_ble.h"/>
        <files mask="wiced_bt_cfg.h"/>
        <files mask="wiced_bt_gatt.h"/>
      </source>
      <source relative_path="43xxx_BLE/wiced_bt/BTE/Projects/bte/main" type="c_include">
        <files mask="bt_target.h"/>
        <files mask="gki_target.h"/>
        <files mask="bt_trace.h"/>
      </source>
      <source relative_path="43xxx_BLE/wiced_bt/BTE/Components/stack/include" type="c_include">
        <files mask="hcimsgs.h"/>
        <files mask="gattdefs.h"/>
        <files mask="l2cdefs.h"/>
        <files mask="bt_types.h"/>
        <files mask="hcidefs.h"/>
        <files mask="sdpdefs.h"/>
        <files mask="dyn_mem.h"/>
        <files mask="hiddefs.h"/>
      </source>
      <source relative_path="43xxx_BLE/wiced_bt/BTE/WICED" type="c_include">
        <files mask="data_types.h"/>
        <files mask="wiced_bt_int.h"/>
      </source>
      <source toolchain="armgcc mcuxpresso iar" relative_path="43xxx_BLE/wiced_bt/BTE" type="lib" device_cores="core0_MIMXRT1024xxxxx">
        <files mask="libwicedble.a"/>
      </source>
      <source relative_path="43xxx_BLE/wiced_bt/imxrt_port" type="c_include">
        <files mask="platform_imxrt.h"/>
        <files mask="wiced_bt_uuid.h"/>
        <files mask="wiced_result.h"/>
        <files mask="wiced_utilities.h"/>
        <files mask="wiced_bt_sco.h"/>
        <files mask="wiced_bluetooth_result.h"/>
        <files mask="rtos.h"/>
        <files mask="buildcfg.h"/>
        <files mask="wiced_rtos.h"/>
        <files mask="wiced_time.h"/>
        <files mask="platform_bluetooth.h"/>
      </source>
      <source relative_path="43xxx_BLE/wiced_bt/imxrt_port" type="src">
        <files mask="wiced_rtos.c"/>
        <files mask="bt_firmware_controller.c"/>
        <files mask="platform_imxrt.c"/>
        <files mask="platform_bluetooth.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_ble_wiced_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="43xxx_BLE/bt_app_inc" type="c_include"/>
        <include_path relative_path="43xxx_BLE/wiced_bt/BTE/Projects/bte/main" type="c_include"/>
        <include_path relative_path="43xxx_BLE/wiced_bt/BTE/Components/stack/include" type="c_include"/>
        <include_path relative_path="43xxx_BLE/wiced_bt/BTE/WICED" type="c_include"/>
        <include_path relative_path="43xxx_BLE/wiced_bt/imxrt_port" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.canopen.MIMXRT1024" name="canopen" brief="CANopen library" version="7.1.0" full_name="Middleware canopen" devices="MIMXRT1024xxxxx" user_visible="false" type="middleware" package_base_path="middleware/canopen" project_base_path="MCO">
      <source relative_path="mco" type="c_include">
        <files mask="comgr.h"/>
        <files mask="concisedcf.h"/>
        <files mask="mco.h"/>
        <files mask="mcohw.h"/>
        <files mask="mcohw_com.h"/>
        <files mask="mcop.h"/>
        <files mask="mcop_inc.h"/>
        <files mask="mcop_mgr_inc.h"/>
        <files mask="mcop_xod_inc.h"/>
        <files mask="raccess.h"/>
        <files mask="racrc.h"/>
        <files mask="raserial.h"/>
        <files mask="sdoclnt.h"/>
        <files mask="usdo.h"/>
        <files mask="usdoclnt.h"/>
      </source>
      <source relative_path="doc" type="doc">
        <files mask="CANopen_NXP_SDK.pdf" hidden="true"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="LICENSE.INFO" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_canopen_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="mco" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.MIMXRT1024" name="fatfs" brief="FatFs" version="0.14" full_name="FAT File System stack" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.template.MIMXRT1024"/>
          <any_of>
            <component_dependency value="middleware.fatfs.ram.MIMXRT1024"/>
            <component_dependency value="middleware.fatfs.nand.MIMXRT1024"/>
            <component_dependency value="middleware.fatfs.usb.MIMXRT1024"/>
            <component_dependency value="middleware.fatfs.mmc.MIMXRT1024"/>
            <component_dependency value="middleware.fatfs.sd.MIMXRT1024"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="diskio.c"/>
        <files mask="ff.c"/>
        <files mask="ffsystem.c"/>
        <files mask="ffunicode.c"/>
      </source>
      <source relative_path="source" type="c_include">
        <files mask="diskio.h"/>
        <files mask="ff.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_fatfs_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.mmc.MIMXRT1024" name="mmc" brief="FatFs_MMC" version="0.14" full_name="Fatfs MMC layer" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.MIMXRT1024"/>
          <component_dependency value="middleware.fatfs.template.MIMXRT1024"/>
          <component_dependency value="middleware.sdmmc.mmc.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_mmc_disk" type="c_include">
        <files mask="fsl_mmc_disk.h"/>
      </source>
      <source relative_path="source/fsl_mmc_disk" type="src">
        <files mask="fsl_mmc_disk.c"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_mmc_disk" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.nand.MIMXRT1024" name="nand" brief="FatFs_NAND" version="0.14" full_name="Fatfs NAND layer" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.MIMXRT1024"/>
          <component_dependency value="middleware.fatfs.template.MIMXRT1024"/>
          <any_of>
            <component_dependency value="driver.nand_flash-controller-semc.MIMXRT1024"/>
            <component_dependency value="driver.nand_flash-controller-flexspi.MIMXRT1024"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="source/fsl_nand_disk" type="c_include">
        <files mask="fsl_nand_disk.h"/>
      </source>
      <source relative_path="source/fsl_nand_disk" type="src">
        <files mask="fsl_nand_disk.c"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_nand_disk" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.ram.MIMXRT1024" name="ram" brief="FatFs_RAM" version="0.14" full_name="Fatfs RAM layer" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.MIMXRT1024"/>
          <component_dependency value="middleware.fatfs.template.MIMXRT1024"/>
          <component_dependency value="platform.drivers.common.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_ram_disk" type="c_include">
        <files mask="fsl_ram_disk.h"/>
      </source>
      <source relative_path="source/fsl_ram_disk" type="src">
        <files mask="fsl_ram_disk.c"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_ram_disk" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.sd.MIMXRT1024" name="sd" brief="FatFs_SD" version="0.14" full_name="Fatfs SD layer" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.MIMXRT1024"/>
          <component_dependency value="middleware.fatfs.template.MIMXRT1024"/>
          <component_dependency value="middleware.sdmmc.sd.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_sd_disk" type="c_include">
        <files mask="fsl_sd_disk.h"/>
      </source>
      <source relative_path="source/fsl_sd_disk" type="src">
        <files mask="fsl_sd_disk.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_fatfs_sd_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_sd_disk" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template.MIMXRT1024" name="fatfs" brief="FatFs template" version="0.14" full_name="FatFs template configuration" devices="MIMXRT1024xxxxx" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <source relative_path="template" project_relative_path="./" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <include_paths>
        <include_path relative_path="template" project_relative_path="./" type="c_include"/>
        <include_path relative_path="source" type="c_include"/>
        <include_path relative_path="source/option" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.unused_files.MIMXRT1024" name="unused_files" brief="fatfs files unused by projects" version="0.14" full_name="fatfs unused" devices="MIMXRT1024xxxxx" user_visible="false" type="other" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <source exclude="true" relative_path="source" type="c_include">
        <files mask="ffconf_template.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="source" type="doc">
        <files mask="00history.txt" hidden="true"/>
        <files mask="00readme.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="documents" type="doc">
        <files mask="00index_e.html" hidden="true"/>
        <files mask="updates.txt" hidden="true"/>
        <files mask="css_e.css" hidden="true"/>
      </source>
      <source exclude="true" relative_path="documents/doc" type="doc">
        <files mask="expand.html" hidden="true"/>
        <files mask="printf.html" hidden="true"/>
        <files mask="sfileinfo.html" hidden="true"/>
        <files mask="size.html" hidden="true"/>
        <files mask="putc.html" hidden="true"/>
        <files mask="dread.html" hidden="true"/>
        <files mask="stat.html" hidden="true"/>
        <files mask="sync.html" hidden="true"/>
        <files mask="close.html" hidden="true"/>
        <files mask="setcp.html" hidden="true"/>
        <files mask="dwrite.html" hidden="true"/>
        <files mask="sfile.html" hidden="true"/>
        <files mask="tell.html" hidden="true"/>
        <files mask="readdir.html" hidden="true"/>
        <files mask="gets.html" hidden="true"/>
        <files mask="mount.html" hidden="true"/>
        <files mask="filename.html" hidden="true"/>
        <files mask="sfatfs.html" hidden="true"/>
        <files mask="rc.html" hidden="true"/>
        <files mask="getlabel.html" hidden="true"/>
        <files mask="read.html" hidden="true"/>
        <files mask="open.html" hidden="true"/>
        <files mask="dstat.html" hidden="true"/>
        <files mask="config.html" hidden="true"/>
        <files mask="lseek.html" hidden="true"/>
        <files mask="puts.html" hidden="true"/>
        <files mask="mkfs.html" hidden="true"/>
        <files mask="chdrive.html" hidden="true"/>
        <files mask="appnote.html" hidden="true"/>
        <files mask="setlabel.html" hidden="true"/>
        <files mask="sdir.html" hidden="true"/>
        <files mask="dinit.html" hidden="true"/>
        <files mask="truncate.html" hidden="true"/>
        <files mask="opendir.html" hidden="true"/>
        <files mask="error.html" hidden="true"/>
        <files mask="unlink.html" hidden="true"/>
        <files mask="getcwd.html" hidden="true"/>
        <files mask="fdisk.html" hidden="true"/>
        <files mask="getfree.html" hidden="true"/>
        <files mask="dioctl.html" hidden="true"/>
        <files mask="rename.html" hidden="true"/>
        <files mask="closedir.html" hidden="true"/>
        <files mask="utime.html" hidden="true"/>
        <files mask="findfirst.html" hidden="true"/>
        <files mask="forward.html" hidden="true"/>
        <files mask="chmod.html" hidden="true"/>
        <files mask="fattime.html" hidden="true"/>
        <files mask="findnext.html" hidden="true"/>
        <files mask="mkdir.html" hidden="true"/>
        <files mask="write.html" hidden="true"/>
        <files mask="chdir.html" hidden="true"/>
        <files mask="eof.html" hidden="true"/>
      </source>
      <source exclude="true" relative_path="documents/res" type="image">
        <files mask="rwtest2.png" hidden="true"/>
        <files mask="f4.png" hidden="true"/>
        <files mask="rwtest1.png" hidden="true"/>
        <files mask="f1.png" hidden="true"/>
        <files mask="layers.png" hidden="true"/>
        <files mask="f2.png" hidden="true"/>
        <files mask="funcs.png" hidden="true"/>
        <files mask="f5.png" hidden="true"/>
        <files mask="rwtest3.png" hidden="true"/>
        <files mask="layers1.png" hidden="true"/>
        <files mask="f6.png" hidden="true"/>
        <files mask="f7.png" hidden="true"/>
        <files mask="layers3.png" hidden="true"/>
        <files mask="layers2.png" hidden="true"/>
        <files mask="modules.png" hidden="true"/>
        <files mask="f3.png" hidden="true"/>
      </source>
      <source exclude="true" relative_path="documents/res" type="src">
        <files mask="app4.c" hidden="true"/>
        <files mask="app5.c" hidden="true"/>
        <files mask="app3.c" hidden="true"/>
        <files mask="app6.c" hidden="true"/>
        <files mask="app2.c" hidden="true"/>
        <files mask="app1.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="documents/res" type="other">
        <files mask="mkfs.xlsx" hidden="true"/>
      </source>
      <source exclude="true" relative_path="documents/res" type="archive">
        <files mask="mkfatimg.zip" hidden="true"/>
      </source>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="LICENSE.txt" hidden="true"/>
        <files mask="ChangeLogKSDK.txt" hidden="true"/>
      </source>
    </component>
    <component id="middleware.fatfs.usb.MIMXRT1024" name="usb" brief="FatFs_USB" version="0.14" full_name="Fatfs USB layer" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.MIMXRT1024"/>
          <component_dependency value="middleware.fatfs.template.MIMXRT1024"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT1024"/>
          <component_dependency value="middleware.usb.host_msd.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_usb_disk" type="c_include">
        <files mask="fsl_usb_disk.h"/>
      </source>
      <source condition="middleware.baremetal.MIMXRT1024" relative_path="source/fsl_usb_disk" type="src">
        <files mask="fsl_usb_disk_bm.c"/>
      </source>
      <source condition="middleware.freertos-kernel.MIMXRT1024" relative_path="source/fsl_usb_disk" type="src">
        <files mask="fsl_usb_disk_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_fatfs_usb_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_usb_disk" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.MIMXRT1024" name="FreeMASTER" brief="Driver code enabling communication between FreeMASTER or FreeMASTER Lite tools and MCU application. Supports Serial, CAN and BDM/JTAG physical interface." version="3.0.2" full_name="FreeMASTER communication driver" devices="MIMXRT1024xxxxx" user_visible="true" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <component_dependency value="middleware.fmstr.template_app.MIMXRT1024"/>
      </dependencies>
      <source relative_path="src/common" project_relative_path="./" type="c_include">
        <files mask="freemaster.h"/>
        <files mask="freemaster_defcfg.h"/>
        <files mask="freemaster_private.h"/>
        <files mask="freemaster_protocol.h"/>
        <files mask="freemaster_rec.h"/>
        <files mask="freemaster_tsa.h"/>
        <files mask="freemaster_ures.h"/>
        <files mask="freemaster_utils.h"/>
        <files mask="freemaster_can.h"/>
        <files mask="freemaster_serial.h"/>
      </source>
      <source relative_path="src/common" project_relative_path="./" type="src">
        <files mask="freemaster_appcmd.c"/>
        <files mask="freemaster_pipes.c"/>
        <files mask="freemaster_protocol.c"/>
        <files mask="freemaster_rec.c"/>
        <files mask="freemaster_scope.c"/>
        <files mask="freemaster_tsa.c"/>
        <files mask="freemaster_ures.c"/>
        <files mask="freemaster_utils.c"/>
        <files mask="freemaster_can.c"/>
        <files mask="freemaster_sha.c"/>
        <files mask="freemaster_pdbdm.c"/>
        <files mask="freemaster_serial.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_fmstr_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/common" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.files.MIMXRT1024" name="FreeMASTER driver files" brief="FreeMASTER communication driver source code files" version="1.0.0" full_name="FreeMASTER driver files" devices="MIMXRT1024xxxxx" user_visible="false" type="other" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <source relative_path="src/common" type="c_include">
        <files mask="freemaster_serial.h"/>
        <files mask="freemaster_protocol.h"/>
        <files mask="freemaster_utils.h"/>
        <files mask="freemaster_can.h"/>
        <files mask="freemaster.h"/>
        <files mask="freemaster_defcfg.h"/>
        <files mask="freemaster_rec.h"/>
        <files mask="freemaster_ures.h"/>
        <files mask="freemaster_private.h"/>
        <files mask="freemaster_tsa.h"/>
      </source>
      <source relative_path="src/common" type="src">
        <files mask="freemaster_pdbdm.c"/>
        <files mask="freemaster_serial.c"/>
        <files mask="freemaster_pipes.c"/>
        <files mask="freemaster_sha.c"/>
        <files mask="freemaster_utils.c"/>
        <files mask="freemaster_can.c"/>
        <files mask="freemaster_scope.c"/>
        <files mask="freemaster_protocol.c"/>
        <files mask="freemaster_rec.c"/>
        <files mask="freemaster_ures.c"/>
        <files mask="freemaster_tsa.c"/>
        <files mask="freemaster_appcmd.c"/>
      </source>
      <source relative_path="src/common" type="other">
        <files mask="freemaster_cfg.h.example"/>
      </source>
      <source relative_path="src/platforms/56f800e" type="c_include">
        <files mask="freemaster_56f800e.h"/>
      </source>
      <source relative_path="src/platforms/gen32be" type="c_include">
        <files mask="freemaster_gen32be.h"/>
      </source>
      <source relative_path="src/platforms/gen32le" type="c_include">
        <files mask="freemaster_gen32le.h"/>
      </source>
      <source relative_path="src/platforms/s12z" type="c_include">
        <files mask="freemaster_s12z.h"/>
      </source>
      <source relative_path="src/drivers" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source relative_path="src/drivers/dreg/DSC" type="src">
        <files mask="freemaster_56f800e_eonce.c"/>
        <files mask="freemaster_56f800e_flexcan.c"/>
        <files mask="freemaster_56f800e_qsci.c"/>
      </source>
      <source relative_path="src/drivers/dreg/DSC" type="c_include">
        <files mask="freemaster_56f800e_eonce.h"/>
        <files mask="freemaster_56f800e_flexcan.h"/>
        <files mask="freemaster_56f800e_qsci.h"/>
      </source>
      <source relative_path="src/drivers/dreg/Kxx" type="src">
        <files mask="freemaster_kxx_uart.c"/>
      </source>
      <source relative_path="src/drivers/dreg/Kxx" type="c_include">
        <files mask="freemaster_kxx_uart.h"/>
      </source>
      <source relative_path="src/drivers/dreg/MPC" type="src">
        <files mask="freemaster_mpc574xp_linflex.c"/>
      </source>
      <source relative_path="src/drivers/dreg/MPC" type="c_include">
        <files mask="freemaster_mpc574xp_linflex.h"/>
      </source>
      <source relative_path="src/drivers/dreg/S12Z" type="src">
        <files mask="freemaster_s12z_sci.c"/>
        <files mask="freemaster_s12z_mscan.c"/>
      </source>
      <source relative_path="src/drivers/dreg/S12Z" type="c_include">
        <files mask="freemaster_s12z_sci.h"/>
        <files mask="freemaster_s12z_mscan.h"/>
      </source>
      <source relative_path="src/drivers/dreg/S32G" type="src">
        <files mask="freemaster_s32g274a_linflexd.c"/>
      </source>
      <source relative_path="src/drivers/dreg/S32G" type="c_include">
        <files mask="freemaster_s32g274a_linflexd.h"/>
      </source>
      <source relative_path="src/drivers/dreg/S32K" type="src">
        <files mask="freemaster_s32k344_lpuart.c"/>
        <files mask="freemaster_s32k144_lpuart.c"/>
      </source>
      <source relative_path="src/drivers/dreg/S32K" type="c_include">
        <files mask="freemaster_s32k144_lpuart.h"/>
        <files mask="freemaster_s32k344_lpuart.h"/>
      </source>
      <source relative_path="src/drivers/dreg/S32R" type="src">
        <files mask="freemaster_s32r45_linflexd.c"/>
      </source>
      <source relative_path="src/drivers/dreg/S32R" type="c_include">
        <files mask="freemaster_s32r45_linflexd.h"/>
      </source>
      <source relative_path="src/drivers/dreg/S32S" type="src">
        <files mask="freemaster_s32s247tv_linflexd.c"/>
      </source>
      <source relative_path="src/drivers/dreg/S32S" type="c_include">
        <files mask="freemaster_s32s247tv_linflexd.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/can" type="src">
        <files mask="freemaster_mscan.c"/>
        <files mask="freemaster_flexcan.c"/>
        <files mask="freemaster_flexcan_dsc.c"/>
        <files mask="freemaster_mcan.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/can" type="c_include">
        <files mask="freemaster_flexcan_dsc.h"/>
        <files mask="freemaster_mcan.h"/>
        <files mask="freemaster_mscan.h"/>
        <files mask="freemaster_flexcan.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/serial" type="src">
        <files mask="freemaster_56f800e_eonce.c"/>
        <files mask="freemaster_serial_lpsci.c"/>
        <files mask="freemaster_serial_usart.c"/>
        <files mask="freemaster_serial_qsci.c"/>
        <files mask="freemaster_serial_miniusart.c"/>
        <files mask="freemaster_serial_lpuart.c"/>
        <files mask="freemaster_serial_usb.c"/>
        <files mask="freemaster_serial_uart.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/serial" type="c_include">
        <files mask="freemaster_serial_usart.h"/>
        <files mask="freemaster_56f800e_eonce.h"/>
        <files mask="freemaster_serial_usb.h"/>
        <files mask="freemaster_serial_uart.h"/>
        <files mask="freemaster_serial_lpsci.h"/>
        <files mask="freemaster_serial_miniusart.h"/>
        <files mask="freemaster_serial_qsci.h"/>
        <files mask="freemaster_serial_lpuart.h"/>
      </source>
      <source relative_path="src/drivers/ampxsdk/uart/S32K1x" type="src">
        <files mask="freemaster_serial_lpuart.c"/>
      </source>
      <source relative_path="src/drivers/ampxsdk/uart/S32K1x" type="c_include">
        <files mask="freemaster_serial_lpuart.h"/>
      </source>
      <source relative_path="src/drivers/ampxsdk/can/S32K1x" type="src">
        <files mask="freemaster_flexcan.c"/>
      </source>
      <source relative_path="src/drivers/ampxsdk/can/S32K1x" type="c_include">
        <files mask="freemaster_flexcan.h"/>
      </source>
      <source relative_path="src/support/mcuxsdk_usb" type="src">
        <files mask="freemaster_usb.c"/>
        <files mask="freemaster_usb_device_descriptor.c"/>
      </source>
      <source relative_path="src/support/mcuxsdk_usb" type="c_include">
        <files mask="freemaster_usb_device_descriptor.h"/>
        <files mask="usb_device_config.h"/>
        <files mask="freemaster_usb.h"/>
      </source>
      <source relative_path="src/support/mcuxsdk_usb" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source relative_path="license" type="doc">
        <files mask="LA_OPT_NXP_Software_License.txt"/>
        <files mask="SW-Content-Register.txt"/>
      </source>
      <source relative_path="doc" type="doc">
        <files mask="release_notes.txt"/>
        <files mask="serial_protocol_readme.txt"/>
        <files mask="serial_protocol_v4.pdf"/>
        <files mask="user_guide.pdf"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
      </source>
      <include_paths>
        <include_path relative_path="src/common" type="c_include"/>
        <include_path relative_path="src/platforms/56f800e" type="c_include"/>
        <include_path relative_path="src/platforms/gen32be" type="c_include"/>
        <include_path relative_path="src/platforms/gen32le" type="c_include"/>
        <include_path relative_path="src/platforms/s12z" type="c_include"/>
        <include_path relative_path="src/drivers/dreg/DSC" type="c_include"/>
        <include_path relative_path="src/drivers/dreg/Kxx" type="c_include"/>
        <include_path relative_path="src/drivers/dreg/MPC" type="c_include"/>
        <include_path relative_path="src/drivers/dreg/S12Z" type="c_include"/>
        <include_path relative_path="src/drivers/dreg/S32G" type="c_include"/>
        <include_path relative_path="src/drivers/dreg/S32K" type="c_include"/>
        <include_path relative_path="src/drivers/dreg/S32R" type="c_include"/>
        <include_path relative_path="src/drivers/dreg/S32S" type="c_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/can" type="c_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/serial" type="c_include"/>
        <include_path relative_path="src/drivers/ampxsdk/uart/S32K1x" type="c_include"/>
        <include_path relative_path="src/drivers/ampxsdk/can/S32K1x" type="c_include"/>
        <include_path relative_path="src/support/mcuxsdk_usb" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.platform_56f800e.MIMXRT1024" name="FreeMASTER 56F800EX platform files" brief="FreeMASTER 56F800EX platform source code files" version="1.0.0" full_name="FreeMASTER 56F800EX platform files" devices="MIMXRT1024xxxxx" user_visible="false" type="other" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <component_dependency value="middleware.fmstr.MIMXRT1024"/>
      </dependencies>
      <source relative_path="src/platforms/56f800e" project_relative_path="platforms" type="c_include">
        <files mask="freemaster_56f800e.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/can" project_relative_path="drivers" type="src">
        <files mask="freemaster_flexcan_dsc.c"/>
        <files mask="freemaster_mscan.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/can" project_relative_path="drivers" type="c_include">
        <files mask="freemaster_flexcan_dsc.h"/>
        <files mask="freemaster_mscan.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/serial" project_relative_path="drivers" type="src">
        <files mask="freemaster_serial_qsci.c"/>
        <files mask="freemaster_56f800e_eonce.c"/>
        <files mask="freemaster_serial_usb.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/serial" project_relative_path="drivers" type="c_include">
        <files mask="freemaster_serial_qsci.h"/>
        <files mask="freemaster_56f800e_eonce.h"/>
        <files mask="freemaster_serial_usb.h"/>
      </source>
      <include_paths>
        <include_path relative_path="src/platforms/56f800e" project_relative_path="platforms" type="c_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/can" project_relative_path="drivers" type="c_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/serial" project_relative_path="drivers" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.platform_gen32le.MIMXRT1024" name="FreeMASTER gen32le platform files" brief="FreeMASTER gen32le platform source code files" version="1.0.0" full_name="FreeMASTER gen32le platform files" devices="MIMXRT1024xxxxx" user_visible="false" type="other" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <component_dependency value="middleware.fmstr.MIMXRT1024"/>
      </dependencies>
      <source relative_path="src/platforms/gen32le" project_relative_path="platforms" type="c_include">
        <files mask="freemaster_gen32le.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/can" project_relative_path="drivers" type="src">
        <files mask="freemaster_flexcan.c"/>
        <files mask="freemaster_mscan.c"/>
        <files mask="freemaster_mcan.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/can" project_relative_path="drivers" type="c_include">
        <files mask="freemaster_flexcan.h"/>
        <files mask="freemaster_mscan.h"/>
        <files mask="freemaster_mcan.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/serial" project_relative_path="drivers" type="src">
        <files mask="freemaster_serial_uart.c"/>
        <files mask="freemaster_serial_lpsci.c"/>
        <files mask="freemaster_serial_lpuart.c"/>
        <files mask="freemaster_serial_usart.c"/>
        <files mask="freemaster_serial_miniusart.c"/>
        <files mask="freemaster_serial_usb.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/serial" project_relative_path="drivers" type="c_include">
        <files mask="freemaster_serial_uart.h"/>
        <files mask="freemaster_serial_lpsci.h"/>
        <files mask="freemaster_serial_lpuart.h"/>
        <files mask="freemaster_serial_usart.h"/>
        <files mask="freemaster_serial_miniusart.h"/>
        <files mask="freemaster_serial_usb.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_fmstr_platform_gen32le_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/platforms/gen32le" project_relative_path="platforms" type="c_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/can" project_relative_path="drivers" type="c_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/serial" project_relative_path="drivers" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.template_app.MIMXRT1024" name="freemaster_template_app" brief="FreeMASTER application configuration file template. Needs to be updated manually to match MCU and board settings." version="1.0.0" full_name="FreeMASTER application template" devices="MIMXRT1024xxxxx" user_visible="false" type="project_template" package_base_path="middleware/freemaster" project_base_path="source">
      <source relative_path="src/template" project_relative_path="./" type="c_include">
        <files mask="freemaster_cfg.h"/>
      </source>
      <include_paths>
        <include_path relative_path="src/template" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.c_sdk.standard.serializer.MIMXRT1024" name="AWS IoT C SDK serializer" brief="AWS IoT C SDK serializer" version="202007.00.0" full_name="AWS IoT C SDK serializer" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-aws_iot.template.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.common.MIMXRT1024"/>
          <component_dependency value="middleware.mbedtls.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="libraries/c_sdk/standard/serializer/include" type="c_include">
        <files mask="iot_json_utils.h"/>
        <files mask="iot_serializer.h"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/serializer/src" type="src">
        <files mask="iot_json_utils.c"/>
        <files mask="iot_serializer_static_memory.c"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/serializer/src/json" type="src">
        <files mask="iot_serializer_json_decoder.c"/>
        <files mask="iot_serializer_json_encoder.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_freertos-aws_iot_c_sdk_standard_serializer_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/c_sdk/standard/serializer/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.c_sdk.standard.shadow.MIMXRT1024" name="AWS IoT C SDK shadow" brief="AWS IoT C SDK shadow" version="202007.00.0" full_name="AWS IoT C SDK shadow" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.template.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.common.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.mqtt.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.abstractions.platform.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.c_sdk.standard.serializer.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="libraries/c_sdk/aws/shadow/include" type="c_include">
        <files mask="aws_iot_shadow.h"/>
        <files mask="aws_shadow.h"/>
      </source>
      <source relative_path="libraries/c_sdk/aws/shadow/include/types" type="c_include">
        <files mask="aws_iot_shadow_types.h"/>
      </source>
      <source relative_path="libraries/c_sdk/aws/shadow/src" type="src">
        <files mask="aws_iot_shadow_api.c"/>
        <files mask="aws_iot_shadow_operation.c"/>
        <files mask="aws_iot_shadow_parser.c"/>
        <files mask="aws_iot_shadow_static_memory.c"/>
        <files mask="aws_iot_shadow_subscription.c"/>
        <files mask="aws_shadow.c"/>
      </source>
      <source relative_path="libraries/c_sdk/aws/shadow/src" type="c_include">
        <files mask="aws_shadow_config_defaults.h"/>
      </source>
      <source relative_path="libraries/c_sdk/aws/shadow/src/private" type="c_include">
        <files mask="aws_iot_shadow_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_freertos-aws_iot_c_sdk_standard_shadow_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/c_sdk/aws/shadow/include" type="c_include"/>
        <include_path relative_path="libraries/c_sdk/aws/shadow/include/types" type="c_include"/>
        <include_path relative_path="libraries/c_sdk/aws/shadow/src" type="c_include"/>
        <include_path relative_path="libraries/c_sdk/aws/shadow/src/private" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.common.MIMXRT1024" name="AWS IoT common" brief="AWS IoT common" version="202007.00.0" full_name="AWS IoT common" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.abstractions.platform.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="libraries/c_sdk/standard/common/include" type="c_include">
        <files mask="iot_linear_containers.h"/>
        <files mask="iot_appversion32.h"/>
        <files mask="iot_atomic.h"/>
        <files mask="iot_init.h"/>
        <files mask="iot_logging_setup.h"/>
        <files mask="iot_logging_task.h"/>
        <files mask="iot_taskpool.h"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/common/include/private" type="c_include">
        <files mask="iot_default_root_certificates.h"/>
        <files mask="iot_doubly_linked_list.h"/>
        <files mask="iot_error.h"/>
        <files mask="iot_lib_init.h"/>
        <files mask="iot_logging.h"/>
        <files mask="iot_static_memory.h"/>
        <files mask="iot_taskpool_internal.h"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/common/include/types" type="c_include">
        <files mask="iot_network_types.h"/>
        <files mask="iot_taskpool_types.h"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/common" type="src">
        <files mask="iot_device_metrics.c"/>
        <files mask="iot_init.c"/>
        <files mask="iot_static_memory_common.c"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/common/logging" type="src">
        <files mask="iot_logging.c"/>
        <files mask="iot_logging_task_dynamic_buffers.c"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/common/taskpool" type="src">
        <files mask="iot_taskpool.c"/>
        <files mask="iot_taskpool_static_memory.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_freertos-aws_iot_common_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/c_sdk/standard/common/include" type="c_include"/>
        <include_path relative_path="libraries/c_sdk/standard/common/include/private" type="c_include"/>
        <include_path relative_path="libraries/c_sdk/standard/common/include/types" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.demos.MIMXRT1024" name="AWS IoT demos" brief="AWS IoT demos" version="202007.00.0" full_name="AWS IoT demos" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.network_manager.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.abstractions.platform.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.common.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.mqtt.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="demos/demo_runner" type="src">
        <files mask="aws_demo.c"/>
        <files mask="iot_demo_freertos.c"/>
      </source>
      <source relative_path="demos/include" type="c_include">
        <files mask="aws_clientcredential.h"/>
        <files mask="aws_clientcredential_keys.h"/>
        <files mask="aws_demo.h"/>
        <files mask="aws_iot_demo_network.h"/>
        <files mask="aws_ota_codesigner_certificate.h"/>
        <files mask="iot_config_common.h"/>
        <files mask="iot_demo_logging.h"/>
        <files mask="iot_demo_runner.h"/>
      </source>
      <source relative_path="demos/network_manager" type="src">
        <files mask="aws_iot_demo_network.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_freertos-aws_iot_demos_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="demos/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.demos.dev_mode_key_provisioning.MIMXRT1024" name="AWS IoT demo key provisioning (dev mode)" brief="AWS IoT demo key provisioning (dev mode)" version="202007.00.0" full_name="AWS IoT demo key provisioning (dev mode)" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-aws_iot.common.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.freertos_plus.standard.pkcs11.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.freertos_plus.standard.utils.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.template.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1024"/>
          <component_dependency value="middleware.mbedtls.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="demos/dev_mode_key_provisioning/include" type="c_include">
        <files mask="aws_dev_mode_key_provisioning.h"/>
      </source>
      <source relative_path="demos/dev_mode_key_provisioning/src" type="src">
        <files mask="aws_dev_mode_key_provisioning.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_freertos-aws_iot_demos_dev_mode_key_provisioning_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="demos/dev_mode_key_provisioning/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.demos_greengrass_discovery.MIMXRT1024" name="AWS IoT demo greengrass discovery" brief="AWS IoT demo greengrass discovery" version="202007.00.0" full_name="AWS IoT demo greengrass discovery" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-aws_iot.demos.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.abstractions.platform.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.freertos_plus.aws.greengrass.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.mqtt.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="demos/greengrass_connectivity" type="src">
        <files mask="aws_greengrass_discovery_demo.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_freertos-aws_iot_demos_greengrass_discovery_MIMXRT1024.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.demos_ota.MIMXRT1024" name="FreeRTOS OTA demos" brief="FreeRTOS OTA demos" version="202007.00.0" full_name="AWS IOT OTA demos" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-aws_iot.common.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.demos.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.abstractions.platform.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.freertos_plus.aws.ota.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.mqtt.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.template.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="demos/include" type="c_include">
        <files mask="aws_application_version.h"/>
      </source>
      <source relative_path="demos/ota" type="src">
        <files mask="aws_iot_ota_update_demo.c"/>
      </source>
      <include_paths>
        <include_path relative_path="demos/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.demos_shadow.MIMXRT1024" name="AWS IoT demo shadow" brief="AWS IoT demo shadow" version="202007.00.0" full_name="AWS IoT demo shadow" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-aws_iot.c_sdk.standard.shadow.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.c_sdk.standard.serializer.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.demos.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.abstractions.platform.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.mqtt.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.template.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="demos/shadow" type="src">
        <files mask="aws_iot_demo_shadow.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_freertos-aws_iot_demos_shadow_MIMXRT1024.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.demos_unused.MIMXRT1024" name="AWS IoT demos unused" brief="AWS IoT demos unused" version="202007.00.0" full_name="AWS IoT demos unused" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="demos/ble" type="src">
        <files mask="aws_ble_gatt_server_demo.c"/>
        <files mask="iot_ble_numericComparison.c"/>
      </source>
      <source relative_path="demos/ble" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="demos/ble" type="other">
        <files mask="README.md"/>
      </source>
      <source relative_path="demos" type="doc">
        <files mask="CMakeLists.txt"/>
        <files mask="directories.txt"/>
      </source>
      <source relative_path="demos/defender" type="src">
        <files mask="aws_iot_demo_defender.c"/>
      </source>
      <source relative_path="demos/defender" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="demos/demo_runner" type="src">
        <files mask="aws_demo_network_addr.c"/>
        <files mask="aws_demo_version.c"/>
        <files mask="iot_demo_runner.c"/>
      </source>
      <source relative_path="demos/dev_mode_key_provisioning" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="demos/dev_mode_key_provisioning" type="other">
        <files mask="README.md"/>
      </source>
      <source relative_path="demos/greengrass_connectivity" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="demos/greengrass_connectivity" type="other">
        <files mask="README.md"/>
      </source>
      <source relative_path="demos/include" type="c_include">
        <files mask="aws_ble_gatt_server_demo.h"/>
      </source>
      <source relative_path="demos/mqtt" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="demos/mqtt" type="src">
        <files mask="iot_demo_mqtt.c"/>
      </source>
      <source relative_path="demos/ota" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="demos/posix" type="src">
        <files mask="aws_posix_demo.c"/>
      </source>
      <source relative_path="demos/posix" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="demos" type="other">
        <files mask="README.md"/>
      </source>
      <source relative_path="demos/shadow" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="demos/tcp" type="src">
        <files mask="aws_tcp_echo_client_single_task.c"/>
      </source>
      <source relative_path="demos/tcp" type="c_include">
        <files mask="aws_tcp_echo_client_single_tasks.h"/>
      </source>
      <source relative_path="demos/tcp" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="demos/wifi_provisioning" type="src">
        <files mask="aws_wifi_connect_task.c"/>
      </source>
      <source relative_path="demos/wifi_provisioning" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="demos/wifi_provisioning" type="other">
        <files mask="README.md"/>
      </source>
      <source relative_path="demos/https" type="src">
        <files mask="iot_demo_https_common.c"/>
        <files mask="iot_demo_https_s3_download_async.c"/>
        <files mask="iot_demo_https_s3_download_sync.c"/>
        <files mask="iot_demo_https_s3_upload_async.c"/>
        <files mask="iot_demo_https_s3_upload_sync.c"/>
      </source>
      <source relative_path="demos/https" type="c_include">
        <files mask="iot_demo_https_common.h"/>
      </source>
      <source relative_path="demos/https" type="script">
        <files mask="presigned_urls_gen.py"/>
      </source>
      <source relative_path="demos/https" type="other">
        <files mask="README.md"/>
      </source>
      <source relative_path="demos/https" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <include_paths>
        <include_path relative_path="demos/include" type="c_include"/>
        <include_path relative_path="demos/tcp" type="c_include"/>
        <include_path relative_path="demos/https" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.3rdparty.cmock.MIMXRT1024" name="AWS IoT 3rd party C mocking library" brief="AWS IoT 3rd party C mocking library" version="202007.00.0" full_name="AWS IoT 3rd party C mocking library" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/3rdparty/CMock" type="other">
        <files mask=".travis.yml"/>
        <files mask="Gemfile"/>
        <files mask="meson.build"/>
        <files mask="README.md"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/config" type="other">
        <files mask="production_environment.rb"/>
        <files mask="test_environment.rb"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/docs" type="other">
        <files mask="CMock_Summary.md"/>
        <files mask="ThrowTheSwitchCodingStandard.md"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/examples/make_example" type="other">
        <files mask="Makefile"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/examples/make_example/src" type="src">
        <files mask="foo.c"/>
        <files mask="main.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/examples/make_example/src" type="c_include">
        <files mask="foo.h"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/examples/make_example/test" type="src">
        <files mask="test_foo.c"/>
        <files mask="test_main.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/examples/temp_sensor" type="other">
        <files mask="gcc.yml"/>
        <files mask="iar_v4.yml"/>
        <files mask="iar_v5.yml"/>
        <files mask="rakefile.rb"/>
        <files mask="rakefile_helper.rb"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/examples/temp_sensor/src" type="src">
        <files mask="AdcConductor.c"/>
        <files mask="AdcHardware.c"/>
        <files mask="AdcHardwareConfigurator.c"/>
        <files mask="AdcModel.c"/>
        <files mask="AdcTemperatureSensor.c"/>
        <files mask="Executor.c"/>
        <files mask="IntrinsicsWrapper.c"/>
        <files mask="Main.c"/>
        <files mask="Model.c"/>
        <files mask="TaskScheduler.c"/>
        <files mask="TemperatureCalculator.c"/>
        <files mask="TemperatureFilter.c"/>
        <files mask="TimerConductor.c"/>
        <files mask="TimerConfigurator.c"/>
        <files mask="TimerHardware.c"/>
        <files mask="TimerInterruptConfigurator.c"/>
        <files mask="TimerInterruptHandler.c"/>
        <files mask="TimerModel.c"/>
        <files mask="UsartBaudRateRegisterCalculator.c"/>
        <files mask="UsartConductor.c"/>
        <files mask="UsartConfigurator.c"/>
        <files mask="UsartHardware.c"/>
        <files mask="UsartModel.c"/>
        <files mask="UsartPutChar.c"/>
        <files mask="UsartTransmitBufferStatus.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/examples/temp_sensor/src" type="c_include">
        <files mask="AdcConductor.h"/>
        <files mask="AdcHardware.h"/>
        <files mask="AdcHardwareConfigurator.h"/>
        <files mask="AdcModel.h"/>
        <files mask="AdcTemperatureSensor.h"/>
        <files mask="AT91SAM7X256.h"/>
        <files mask="Executor.h"/>
        <files mask="IntrinsicsWrapper.h"/>
        <files mask="Main.h"/>
        <files mask="Model.h"/>
        <files mask="ModelConfig.h"/>
        <files mask="TaskScheduler.h"/>
        <files mask="TemperatureCalculator.h"/>
        <files mask="TemperatureFilter.h"/>
        <files mask="TimerConductor.h"/>
        <files mask="TimerConfigurator.h"/>
        <files mask="TimerHardware.h"/>
        <files mask="TimerInterruptConfigurator.h"/>
        <files mask="TimerInterruptHandler.h"/>
        <files mask="TimerModel.h"/>
        <files mask="Types.h"/>
        <files mask="UsartBaudRateRegisterCalculator.h"/>
        <files mask="UsartConductor.h"/>
        <files mask="UsartConfigurator.h"/>
        <files mask="UsartHardware.h"/>
        <files mask="UsartModel.h"/>
        <files mask="UsartPutChar.h"/>
        <files mask="UsartTransmitBufferStatus.h"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/examples/temp_sensor/test" type="src">
        <files mask="TestAdcConductor.c"/>
        <files mask="TestAdcHardware.c"/>
        <files mask="TestAdcHardwareConfigurator.c"/>
        <files mask="TestAdcModel.c"/>
        <files mask="TestAdcTemperatureSensor.c"/>
        <files mask="TestExecutor.c"/>
        <files mask="TestMain.c"/>
        <files mask="TestModel.c"/>
        <files mask="TestTaskScheduler.c"/>
        <files mask="TestTemperatureCalculator.c"/>
        <files mask="TestTemperatureFilter.c"/>
        <files mask="TestTimerConductor.c"/>
        <files mask="TestTimerConfigurator.c"/>
        <files mask="TestTimerHardware.c"/>
        <files mask="TestTimerInterruptConfigurator.c"/>
        <files mask="TestTimerInterruptHandler.c"/>
        <files mask="TestTimerModel.c"/>
        <files mask="TestUsartBaudRateRegisterCalculator.c"/>
        <files mask="TestUsartConductor.c"/>
        <files mask="TestUsartConfigurator.c"/>
        <files mask="TestUsartHardware.c"/>
        <files mask="TestUsartModel.c"/>
        <files mask="TestUsartPutChar.c"/>
        <files mask="TestUsartTransmitBufferStatus.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/lib" type="other">
        <files mask="cmock.rb"/>
        <files mask="cmock_config.rb"/>
        <files mask="cmock_file_writer.rb"/>
        <files mask="cmock_generator.rb"/>
        <files mask="cmock_generator_plugin_array.rb"/>
        <files mask="cmock_generator_plugin_callback.rb"/>
        <files mask="cmock_generator_plugin_cexception.rb"/>
        <files mask="cmock_generator_plugin_expect.rb"/>
        <files mask="cmock_generator_plugin_expect_any_args.rb"/>
        <files mask="cmock_generator_plugin_ignore.rb"/>
        <files mask="cmock_generator_plugin_ignore_arg.rb"/>
        <files mask="cmock_generator_plugin_return_thru_ptr.rb"/>
        <files mask="cmock_generator_utils.rb"/>
        <files mask="cmock_header_parser.rb"/>
        <files mask="cmock_plugin_manager.rb"/>
        <files mask="cmock_unityhelper_parser.rb"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock" type="doc">
        <files mask="LICENSE.txt"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/scripts" type="other">
        <files mask="create_makefile.rb"/>
        <files mask="create_mock.rb"/>
        <files mask="create_runner.rb"/>
        <files mask="test_summary.rb"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/src" type="src">
        <files mask="cmock.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/src" type="c_include">
        <files mask="cmock.h"/>
        <files mask="cmock_internals.h"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/src" type="other">
        <files mask="meson.build"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/c" type="src">
        <files mask="TestCMockC.c"/>
        <files mask="TestCMockC_Runner.c"/>
        <files mask="TestCMockCDynamic.c"/>
        <files mask="TestCMockCDynamic_Runner.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/c" type="other">
        <files mask="TestCMockC.yml"/>
        <files mask="TestCMockCDynamic.yml"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/iar/iar_v4" type="other">
        <files mask="cmock_demo.dep"/>
        <files mask="cmock_demo.eww"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/iar/iar_v4" type="debug">
        <files mask="cmock_demo.ewd"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/iar/iar_v4" type="project">
        <files mask="cmock_demo.ewp"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/iar/iar_v4/incIAR" type="c_include">
        <files mask="AT91SAM7X-EK.h"/>
        <files mask="AT91SAM7X256_inc.h"/>
        <files mask="ioat91sam7x256.h"/>
        <files mask="lib_AT91SAM7X256.h"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/iar/iar_v4/incIAR" type="asm_include">
        <files mask="AT91SAM7X256.inc"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/iar/iar_v4/incIAR" type="other">
        <files mask="AT91SAM7X256.rdf"/>
        <files mask="AT91SAM7X256.tcl"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/iar/iar_v4/Resource" type="other">
        <files mask="at91SAM7X256_FLASH.xcl"/>
        <files mask="at91SAM7X256_RAM.xcl"/>
        <files mask="ioat91sam7x256.ddf"/>
        <files mask="SAM7_FLASH.mac"/>
        <files mask="SAM7_RAM.mac"/>
        <files mask="SAM7_SIM.mac"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/iar/iar_v4/settings" type="script">
        <files mask="cmock_demo.cspy.bat"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/iar/iar_v4/settings" type="other">
        <files mask="cmock_demo.dbgdt"/>
        <files mask="cmock_demo.wsdt"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/iar/iar_v4/settings" type="configuration">
        <files mask="cmock_demo.dni"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/iar/iar_v4/srcIAR" type="other">
        <files mask="Cstartup.s79"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/iar/iar_v4/srcIAR" type="src">
        <files mask="Cstartup_SAM7.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/iar/iar_v5" type="other">
        <files mask="cmock_demo.dep"/>
        <files mask="cmock_demo.eww"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/iar/iar_v5" type="debug">
        <files mask="cmock_demo.ewd"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/iar/iar_v5" type="project">
        <files mask="cmock_demo.ewp"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/iar/iar_v5/incIAR" type="c_include">
        <files mask="AT91SAM7X-EK.h"/>
        <files mask="AT91SAM7X256_inc.h"/>
        <files mask="lib_AT91SAM7X256.h"/>
        <files mask="project.h"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/iar/iar_v5/Resource" type="linker">
        <files mask="at91SAM7X256_FLASH.icf"/>
        <files mask="at91SAM7X256_RAM.icf"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/iar/iar_v5/Resource" type="other">
        <files mask="SAM7_FLASH.mac"/>
        <files mask="SAM7_RAM.mac"/>
        <files mask="SAM7_SIM.mac"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/iar/iar_v5/settings" type="script">
        <files mask="BasicInterrupt_SAM7X.cspy.bat"/>
        <files mask="cmock_demo.cspy.bat"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/iar/iar_v5/settings" type="other">
        <files mask="BasicInterrupt_SAM7X.dbgdt"/>
        <files mask="BasicInterrupt_SAM7X.wsdt"/>
        <files mask="BasicInterrupt_SAM7X_FLASH_Debug.jlink"/>
        <files mask="cmock_demo.dbgdt"/>
        <files mask="cmock_demo.wsdt"/>
        <files mask="cmock_demo_Binary.jlink"/>
        <files mask="cmock_demo_FLASH_Debug.jlink"/>
        <files mask="cmock_demo_RAM_Debug.jlink"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/iar/iar_v5/settings" type="configuration">
        <files mask="BasicInterrupt_SAM7X.dni"/>
        <files mask="cmock_demo.dni"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/iar/iar_v5/srcIAR" type="asm_include">
        <files mask="Cstartup.s"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/iar/iar_v5/srcIAR" type="src">
        <files mask="Cstartup_SAM7.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test" type="other">
        <files mask="rakefile"/>
        <files mask="rakefile_helper.rb"/>
        <files mask="test_helper.rb"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/system" type="other">
        <files mask="systest_generator.rb"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/system/test_compilation" type="c_include">
        <files mask="callingconv.h"/>
        <files mask="const.h"/>
        <files mask="inline.h"/>
        <files mask="osek.h"/>
        <files mask="parsing.h"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/system/test_compilation" type="other">
        <files mask="config.yml"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/system/test_interactions" type="other">
        <files mask="all_plugins_but_other_limits.yml"/>
        <files mask="all_plugins_coexist.yml"/>
        <files mask="array_and_pointer_handling.yml"/>
        <files mask="basic_expect_and_return.yml"/>
        <files mask="const_primitives_handling.yml"/>
        <files mask="doesnt_leave_details_behind.yml"/>
        <files mask="enforce_strict_ordering.yml"/>
        <files mask="expect_and_return_custom_types.yml"/>
        <files mask="expect_and_return_treat_as.yml"/>
        <files mask="expect_and_throw.yml"/>
        <files mask="expect_any_args.yml"/>
        <files mask="fancy_pointer_handling.yml"/>
        <files mask="function_pointer_handling.yml"/>
        <files mask="ignore_and_return.yml"/>
        <files mask="ignore_strict_mock_calling.yml"/>
        <files mask="newer_standards_stuff1.yml"/>
        <files mask="nonstandard_parsed_stuff_1.yml"/>
        <files mask="nonstandard_parsed_stuff_2.yml"/>
        <files mask="out_of_memory.yml"/>
        <files mask="parsing_challenges.yml"/>
        <files mask="return_thru_ptr_and_expect_any_args.yml"/>
        <files mask="return_thru_ptr_ignore_arg.yml"/>
        <files mask="struct_union_enum_expect_and_return.yml"/>
        <files mask="struct_union_enum_expect_and_return_with_plugins.yml"/>
        <files mask="stubs_with_callbacks.yml"/>
        <files mask="unity_64bit_support.yml"/>
        <files mask="unity_ignores.yml"/>
        <files mask="unity_void_pointer_compare.yml"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/targets" type="other">
        <files mask="clang_strict.yml"/>
        <files mask="gcc.yml"/>
        <files mask="gcc_64.yml"/>
        <files mask="gcc_tiny.yml"/>
        <files mask="iar_arm_v4.yml"/>
        <files mask="iar_arm_v5.yml"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/test/unit" type="other">
        <files mask="cmock_config_test.rb"/>
        <files mask="cmock_config_test.yml"/>
        <files mask="cmock_file_writer_test.rb"/>
        <files mask="cmock_generator_main_test.rb"/>
        <files mask="cmock_generator_plugin_array_test.rb"/>
        <files mask="cmock_generator_plugin_callback_test.rb"/>
        <files mask="cmock_generator_plugin_cexception_test.rb"/>
        <files mask="cmock_generator_plugin_expect_a_test.rb"/>
        <files mask="cmock_generator_plugin_expect_any_args_test.rb"/>
        <files mask="cmock_generator_plugin_expect_b_test.rb"/>
        <files mask="cmock_generator_plugin_ignore_arg_test.rb"/>
        <files mask="cmock_generator_plugin_ignore_test.rb"/>
        <files mask="cmock_generator_plugin_return_thru_ptr_test.rb"/>
        <files mask="cmock_generator_utils_test.rb"/>
        <files mask="cmock_header_parser_test.rb"/>
        <files mask="cmock_plugin_manager_test.rb"/>
        <files mask="cmock_unityhelper_parser_test.rb"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/behaviors/lib" type="other">
        <files mask="behaviors.rb"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/behaviors/lib/behaviors" type="other">
        <files mask="reporttask.rb"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/behaviors" type="doc">
        <files mask="Manifest.txt"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/behaviors" type="other">
        <files mask="Rakefile"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/behaviors/test" type="other">
        <files mask="behaviors_tasks_test.rb"/>
        <files mask="behaviors_test.rb"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/behaviors/test/tasks_test/lib" type="other">
        <files mask="user.rb"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/behaviors/test/tasks_test" type="other">
        <files mask="Rakefile"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/behaviors/test/tasks_test/test" type="other">
        <files mask="user_test.rb"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/c_exception" type="other">
        <files mask=".travis.yml"/>
        <files mask="Gemfile"/>
        <files mask="Gemfile.lock"/>
        <files mask="project.yml"/>
        <files mask="README.md"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/c_exception/docs" type="other">
        <files mask="CException.md"/>
        <files mask="ThrowTheSwitchCodingStandard.md"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/c_exception/lib" type="src">
        <files mask="CException.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/c_exception/lib" type="c_include">
        <files mask="CException.h"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/c_exception" type="doc">
        <files mask="LICENSE.txt"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/c_exception/test/support" type="c_include">
        <files mask="CExceptionConfig.h"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/c_exception/test" type="src">
        <files mask="TestException.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity" type="other">
        <files mask=".editorconfig"/>
        <files mask=".travis.yml"/>
        <files mask="meson.build"/>
        <files mask="README.md"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/auto" type="other">
        <files mask="colour_prompt.rb"/>
        <files mask="colour_reporter.rb"/>
        <files mask="generate_config.yml"/>
        <files mask="generate_module.rb"/>
        <files mask="generate_test_runner.rb"/>
        <files mask="parse_output.rb"/>
        <files mask="run_test.erb"/>
        <files mask="stylize_as_junit.rb"/>
        <files mask="test_file_filter.rb"/>
        <files mask="type_sanitizer.rb"/>
        <files mask="unity_test_summary.rb"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/auto" type="script">
        <files mask="unity_test_summary.py"/>
        <files mask="unity_to_junit.py"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity" type="doc">
        <files mask="CMakeLists.txt"/>
        <files mask="LICENSE.txt"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/docs" type="other">
        <files mask="ThrowTheSwitchCodingStandard.md"/>
        <files mask="UnityAssertionsReference.md"/>
        <files mask="UnityConfigurationGuide.md"/>
        <files mask="UnityGettingStartedGuide.md"/>
        <files mask="UnityHelperScriptsGuide.md"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/docs" type="doc">
        <files mask="UnityAssertionsCheatSheetSuitableforPrintingandPossiblyFraming.pdf"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_1" type="other">
        <files mask="makefile"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_1" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_1/src" type="src">
        <files mask="ProductionCode.c"/>
        <files mask="ProductionCode2.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_1/src" type="c_include">
        <files mask="ProductionCode.h"/>
        <files mask="ProductionCode2.h"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_1/test/test_runners" type="src">
        <files mask="TestProductionCode2_Runner.c"/>
        <files mask="TestProductionCode_Runner.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_1/test" type="src">
        <files mask="TestProductionCode.c"/>
        <files mask="TestProductionCode2.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_2" type="other">
        <files mask="makefile"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_2" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_2/src" type="src">
        <files mask="ProductionCode.c"/>
        <files mask="ProductionCode2.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_2/src" type="c_include">
        <files mask="ProductionCode.h"/>
        <files mask="ProductionCode2.h"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_2/test/test_runners" type="src">
        <files mask="all_tests.c"/>
        <files mask="TestProductionCode2_Runner.c"/>
        <files mask="TestProductionCode_Runner.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_2/test" type="src">
        <files mask="TestProductionCode.c"/>
        <files mask="TestProductionCode2.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_3/helper" type="src">
        <files mask="UnityHelper.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_3/helper" type="c_include">
        <files mask="UnityHelper.h"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_3" type="other">
        <files mask="rakefile.rb"/>
        <files mask="rakefile_helper.rb"/>
        <files mask="target_gcc_32.yml"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_3" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_3/src" type="src">
        <files mask="ProductionCode.c"/>
        <files mask="ProductionCode2.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_3/src" type="c_include">
        <files mask="ProductionCode.h"/>
        <files mask="ProductionCode2.h"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_3/test" type="src">
        <files mask="TestProductionCode.c"/>
        <files mask="TestProductionCode2.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_4" type="other">
        <files mask="meson.build"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_4" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_4/src" type="other">
        <files mask="meson.build"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_4/src" type="src">
        <files mask="ProductionCode.c"/>
        <files mask="ProductionCode2.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_4/src" type="c_include">
        <files mask="ProductionCode.h"/>
        <files mask="ProductionCode2.h"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_4/subprojects" type="other">
        <files mask="unity.wrap"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_4/test" type="other">
        <files mask="meson.build"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_4/test/test_runners" type="other">
        <files mask="meson.build"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_4/test/test_runners" type="src">
        <files mask="TestProductionCode2_Runner.c"/>
        <files mask="TestProductionCode_Runner.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_4/test" type="src">
        <files mask="TestProductionCode.c"/>
        <files mask="TestProductionCode2.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/examples" type="c_include">
        <files mask="unity_config.h"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/extras/eclipse" type="doc">
        <files mask="error_parsers.txt"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/extras/fixture" type="other">
        <files mask="rakefile.rb"/>
        <files mask="rakefile_helper.rb"/>
        <files mask="readme.md"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/extras/fixture/src" type="src">
        <files mask="unity_fixture.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/extras/fixture/src" type="c_include">
        <files mask="unity_fixture.h"/>
        <files mask="unity_fixture_internals.h"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/extras/fixture/test/main" type="src">
        <files mask="AllTests.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/extras/fixture/test" type="other">
        <files mask="Makefile"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/extras/fixture/test" type="src">
        <files mask="template_fixture_tests.c"/>
        <files mask="unity_fixture_Test.c"/>
        <files mask="unity_fixture_TestRunner.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/extras/memory" type="other">
        <files mask="rakefile.rb"/>
        <files mask="rakefile_helper.rb"/>
        <files mask="readme.md"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/extras/memory/src" type="src">
        <files mask="unity_memory.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/extras/memory/src" type="c_include">
        <files mask="unity_memory.h"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/extras/memory/test" type="other">
        <files mask="Makefile"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/extras/memory/test" type="src">
        <files mask="unity_memory_Test.c"/>
        <files mask="unity_memory_TestRunner.c"/>
        <files mask="unity_output_Spy.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/extras/memory/test" type="c_include">
        <files mask="unity_output_Spy.h"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/src" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/src" type="other">
        <files mask="meson.build"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/src" type="src">
        <files mask="unity.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/src" type="c_include">
        <files mask="unity.h"/>
        <files mask="unity_internals.h"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/test" type="other">
        <files mask=".rubocop.yml"/>
        <files mask="Makefile"/>
        <files mask="rakefile"/>
        <files mask="rakefile_helper.rb"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/test/expectdata" type="src">
        <files mask="testsample_cmd.c"/>
        <files mask="testsample_def.c"/>
        <files mask="testsample_head1.c"/>
        <files mask="testsample_mock_cmd.c"/>
        <files mask="testsample_mock_def.c"/>
        <files mask="testsample_mock_head1.c"/>
        <files mask="testsample_mock_new1.c"/>
        <files mask="testsample_mock_new2.c"/>
        <files mask="testsample_mock_param.c"/>
        <files mask="testsample_mock_run1.c"/>
        <files mask="testsample_mock_run2.c"/>
        <files mask="testsample_mock_yaml.c"/>
        <files mask="testsample_new1.c"/>
        <files mask="testsample_new2.c"/>
        <files mask="testsample_param.c"/>
        <files mask="testsample_run1.c"/>
        <files mask="testsample_run2.c"/>
        <files mask="testsample_yaml.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/test/expectdata" type="c_include">
        <files mask="testsample_head1.h"/>
        <files mask="testsample_mock_head1.h"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/test/spec" type="other">
        <files mask="generate_module_existing_file_spec.rb"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/test/targets" type="other">
        <files mask="ansi.yml"/>
        <files mask="clang_file.yml"/>
        <files mask="clang_strict.yml"/>
        <files mask="gcc_32.yml"/>
        <files mask="gcc_64.yml"/>
        <files mask="gcc_auto_limits.yml"/>
        <files mask="gcc_auto_stdint.yml"/>
        <files mask="gcc_manual_math.yml"/>
        <files mask="hitech_picc18.yml"/>
        <files mask="iar_arm_v4.yml"/>
        <files mask="iar_arm_v5.yml"/>
        <files mask="iar_arm_v5_3.yml"/>
        <files mask="iar_armcortex_LM3S9B92_v5_4.yml"/>
        <files mask="iar_cortexm3_v5.yml"/>
        <files mask="iar_msp430.yml"/>
        <files mask="iar_sh2a_v6.yml"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/test/testdata" type="c_include">
        <files mask="CException.h"/>
        <files mask="cmock.h"/>
        <files mask="Defs.h"/>
        <files mask="mockMock.h"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/test/testdata" type="src">
        <files mask="testRunnerGenerator.c"/>
        <files mask="testRunnerGeneratorSmall.c"/>
        <files mask="testRunnerGeneratorWithMocks.c"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/test/tests" type="other">
        <files mask="test_generate_test_runner.rb"/>
      </source>
      <source relative_path="libraries/3rdparty/CMock/vendor/unity/test/tests" type="src">
        <files mask="testparameterized.c"/>
        <files mask="testunity.c"/>
      </source>
      <source relative_path="tools/cmock" type="other">
        <files mask="project.yml"/>
      </source>
      <source relative_path="tools/cmock" type="script">
        <files mask="coverage.cmake"/>
        <files mask="create_test.cmake"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/3rdparty/CMock/examples/make_example/src" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/CMock/examples/temp_sensor/src" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/CMock/src" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/CMock/test/iar/iar_v4/incIAR" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/CMock/test/iar/iar_v5/incIAR" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/CMock/test/system/test_compilation" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/CMock/vendor/c_exception/lib" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/CMock/vendor/c_exception/test/support" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_1/src" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_2/src" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_3/helper" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_3/src" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/CMock/vendor/unity/examples/example_4/src" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/CMock/vendor/unity/examples" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/CMock/vendor/unity/extras/fixture/src" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/CMock/vendor/unity/extras/memory/src" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/CMock/vendor/unity/extras/memory/test" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/CMock/vendor/unity/src" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/CMock/vendor/unity/test/expectdata" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/CMock/vendor/unity/test/testdata" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.3rdparty.http_parser.MIMXRT1024" name="AWS IoT 3rd party http_parser" brief="AWS IoT 3rd party http_parser" version="202007.00.0" full_name="AWS IoT 3rd party http_parser" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/3rdparty/http_parser" type="src">
        <files mask="http_parser.c"/>
      </source>
      <source relative_path="libraries/3rdparty/http_parser" type="c_include">
        <files mask="http_parser.h"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/3rdparty/http_parser" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.3rdparty.http_parser_unused.MIMXRT1024" name="AWS IoT 3rd party http_parser unused" brief="AWS IoT 3rd party http_parser unused files" version="202007.00.0" full_name="AWS IoT 3rd party http_parser unused" devices="MIMXRT1024xxxxx" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/3rdparty/http_parser" type="other">
        <files mask=".gitignore"/>
        <files mask=".mailmap"/>
        <files mask=".travis.yml"/>
        <files mask="AUTHORS"/>
        <files mask="http_parser.gyp"/>
        <files mask="LICENSE-MIT"/>
        <files mask="Makefile"/>
        <files mask="README.md"/>
      </source>
      <source relative_path="libraries/3rdparty/http_parser" type="src">
        <files mask="bench.c"/>
        <files mask="test.c"/>
      </source>
      <source relative_path="libraries/3rdparty/http_parser/contrib" type="src">
        <files mask="parsertrace.c"/>
        <files mask="url_parser.c"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.3rdparty.jsmn.MIMXRT1024" name="AWS IoT jsmn" brief="AWS IoT jsmn" version="202007.00.0" full_name="AWS IoT jsmn" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/3rdparty/jsmn" type="src">
        <files mask="jsmn.c"/>
      </source>
      <source relative_path="libraries/3rdparty/jsmn" type="c_include">
        <files mask="jsmn.h"/>
      </source>
      <source relative_path="libraries/3rdparty/jsmn" type="other">
        <files mask="LICENSE"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_freertos-aws_iot_libraries_3rdparty_jsmn_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/3rdparty/jsmn" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.3rdparty.mbedtls_utils.MIMXRT1024" name="AWS IoT mbedtls utils" brief="AWS IoT mbedtls utils" version="202007.00.0" full_name="AWS IoT mbedtls utils" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <component_dependency value="middleware.mbedtls.MIMXRT1024"/>
      </dependencies>
      <source relative_path="libraries/3rdparty/mbedtls_utils" type="src">
        <files mask="mbedtls_error.c"/>
        <files mask="mbedtls_utils.c"/>
      </source>
      <source relative_path="libraries/3rdparty/mbedtls_utils" type="c_include">
        <files mask="mbedtls_error.h"/>
      </source>
      <source relative_path="libraries/3rdparty/mbedtls_utils" type="other">
        <files mask="README.md"/>
      </source>
      <source relative_path="libraries/3rdparty/mbedtls_utils" type="doc">
        <files mask="LICENSE-2.0.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_freertos-aws_iot_libraries_3rdparty_mbedtls_utils_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/3rdparty/mbedtls_utils" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.3rdparty.pkcs11.MIMXRT1024" name="AWS IoT 3rd party pkcs11" brief="AWS IoT 3rd party pkcs11" version="202007.00.0" full_name="AWS IoT 3rd party pkcs11" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/3rdparty/pkcs11" type="c_include">
        <files mask="pkcs11.h"/>
        <files mask="pkcs11f.h"/>
        <files mask="pkcs11t.h"/>
      </source>
      <source relative_path="libraries/3rdparty/pkcs11" type="other">
        <files mask="CONTRIBUTING.md"/>
        <files mask="LICENSE.md"/>
        <files mask="README.md"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_freertos-aws_iot_libraries_3rdparty_pkcs11_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/3rdparty/pkcs11" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.3rdparty.tinycbor.MIMXRT1024" name="AWS IoT tinycbor" brief="AWS IoT tinycbor" version="202007.00.0" full_name="AWS IoT tinycbor" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/3rdparty/tinycbor/src" type="c_include">
        <files mask="cbor.h"/>
        <files mask="cborinternal_p.h"/>
        <files mask="compilersupport_p.h"/>
        <files mask="tinycbor-version.h"/>
        <files mask="utf8_p.h"/>
      </source>
      <source relative_path="libraries/3rdparty/tinycbor/src" type="src">
        <files mask="cborencoder.c"/>
        <files mask="cborencoder_close_container_checked.c"/>
        <files mask="cborerrorstrings.c"/>
        <files mask="cborparser.c"/>
        <files mask="cborparser_dup_string.c"/>
        <files mask="cborvalidation.c"/>
      </source>
      <source relative_path="libraries/3rdparty/tinycbor/src" type="other">
        <files mask="LICENSE"/>
        <files mask="README.md"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/3rdparty/tinycbor/src" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.3rdparty.tinycbor_unused.MIMXRT1024" name="AWS IoT tinycbor" brief="AWS IoT tinycbor" version="202007.00.0" full_name="AWS IoT tinycbor" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/3rdparty/tinycbor/src" type="src">
        <files mask="cborpretty.c"/>
        <files mask="cborpretty_stdio.c"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.3rdparty.tinycrypt.MIMXRT1024" name="AWS IoT tinycrypt" brief="AWS IoT tinycrypt" version="202007.00.0" full_name="AWS IoT tinycrypt" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/3rdparty/tinycrypt" type="other">
        <files mask=".gitignore"/>
        <files mask="AUTHORS"/>
        <files mask="LICENSE"/>
        <files mask="Makefile"/>
        <files mask="README"/>
        <files mask="VERSION"/>
      </source>
      <source relative_path="libraries/3rdparty/tinycrypt/asn1" type="c_include">
        <files mask="asn1.h"/>
      </source>
      <source relative_path="libraries/3rdparty/tinycrypt/asn1" type="src">
        <files mask="asn1parse.c"/>
      </source>
      <source relative_path="libraries/3rdparty/tinycrypt" type="script">
        <files mask="config.mk"/>
      </source>
      <source relative_path="libraries/3rdparty/tinycrypt/documentation" type="other">
        <files mask="tinycrypt.rst"/>
      </source>
      <source relative_path="libraries/3rdparty/tinycrypt/lib/include/tinycrypt" type="c_include">
        <files mask="aes.h"/>
        <files mask="cbc_mode.h"/>
        <files mask="ccm_mode.h"/>
        <files mask="cmac_mode.h"/>
        <files mask="constants.h"/>
        <files mask="ctr_mode.h"/>
        <files mask="ctr_prng.h"/>
        <files mask="ecc.h"/>
        <files mask="ecc_dh.h"/>
        <files mask="ecc_dsa.h"/>
        <files mask="ecc_platform_specific.h"/>
        <files mask="hmac.h"/>
        <files mask="hmac_prng.h"/>
        <files mask="sha256.h"/>
        <files mask="utils.h"/>
      </source>
      <source relative_path="libraries/3rdparty/tinycrypt/lib" type="other">
        <files mask="Makefile"/>
      </source>
      <source relative_path="libraries/3rdparty/tinycrypt/lib/source" type="src">
        <files mask="aes_decrypt.c"/>
        <files mask="aes_encrypt.c"/>
        <files mask="cbc_mode.c"/>
        <files mask="ccm_mode.c"/>
        <files mask="cmac_mode.c"/>
        <files mask="ctr_mode.c"/>
        <files mask="ctr_prng.c"/>
        <files mask="ecc.c"/>
        <files mask="ecc_dh.c"/>
        <files mask="ecc_dsa.c"/>
        <files mask="ecc_platform_specific.c"/>
        <files mask="hmac.c"/>
        <files mask="hmac_prng.c"/>
        <files mask="sha256.c"/>
        <files mask="utils.c"/>
      </source>
      <source relative_path="libraries/3rdparty/tinycrypt/tests/include" type="c_include">
        <files mask="test_ecc_utils.h"/>
        <files mask="test_utils.h"/>
      </source>
      <source relative_path="libraries/3rdparty/tinycrypt/tests" type="other">
        <files mask="Makefile"/>
      </source>
      <source relative_path="libraries/3rdparty/tinycrypt/tests" type="binary">
        <files mask="pseudo-random-data.bin"/>
      </source>
      <source relative_path="libraries/3rdparty/tinycrypt/tests" type="src">
        <files mask="test_aes.c"/>
        <files mask="test_cbc_mode.c"/>
        <files mask="test_ccm_mode.c"/>
        <files mask="test_cmac_mode.c"/>
        <files mask="test_ctr_mode.c"/>
        <files mask="test_ctr_prng.c"/>
        <files mask="test_ecc_dh.c"/>
        <files mask="test_ecc_dsa.c"/>
        <files mask="test_ecc_utils.c"/>
        <files mask="test_hmac.c"/>
        <files mask="test_hmac_prng.c"/>
        <files mask="test_sha256.c"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/3rdparty/tinycrypt/asn1" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/tinycrypt/lib/include/tinycrypt" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/tinycrypt/tests/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.3rdparty.tracealyzer_recorder.MIMXRT1024" name="AWS IoT tracealyzer_recorder" brief="AWS IoT tracealyzer_recorder" version="202007.00.0" full_name="AWS IoT tracealyzer_recorder" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/3rdparty/tracealyzer_recorder/config" type="c_include">
        <files mask="trcConfig.h"/>
        <files mask="trcSnapshotConfig.h"/>
        <files mask="trcStreamingConfig.h"/>
      </source>
      <source relative_path="libraries/3rdparty/tracealyzer_recorder/Include" type="c_include">
        <files mask="trcHardwarePort.h"/>
        <files mask="trcKernelPort.h"/>
        <files mask="trcPortDefines.h"/>
        <files mask="trcRecorder.h"/>
      </source>
      <source relative_path="libraries/3rdparty/tracealyzer_recorder" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source relative_path="libraries/3rdparty/tracealyzer_recorder" type="other">
        <files mask="ReadMe.url"/>
        <files mask="LICENSE"/>
      </source>
      <source relative_path="libraries/3rdparty/tracealyzer_recorder/streamports/Jlink_RTT/include" type="c_include">
        <files mask="SEGGER_RTT.h"/>
        <files mask="SEGGER_RTT_Conf.h"/>
        <files mask="trcStreamingPort.h"/>
      </source>
      <source relative_path="libraries/3rdparty/tracealyzer_recorder/streamports/Jlink_RTT" type="doc">
        <files mask="Readme-Streamport.txt"/>
      </source>
      <source relative_path="libraries/3rdparty/tracealyzer_recorder/streamports/Jlink_RTT" type="src">
        <files mask="SEGGER_RTT.c"/>
        <files mask="SEGGER_RTT_Printf.c"/>
      </source>
      <source relative_path="libraries/3rdparty/tracealyzer_recorder/streamports/TCPIP/include" type="c_include">
        <files mask="trcStreamingPort.h"/>
      </source>
      <source relative_path="libraries/3rdparty/tracealyzer_recorder/streamports/TCPIP" type="doc">
        <files mask="Readme-Streamport.txt"/>
      </source>
      <source relative_path="libraries/3rdparty/tracealyzer_recorder/streamports/TCPIP" type="src">
        <files mask="trcStreamingPort.c"/>
      </source>
      <source relative_path="libraries/3rdparty/tracealyzer_recorder/streamports/USB_CDC/include" type="c_include">
        <files mask="trcStreamingPort.h"/>
      </source>
      <source relative_path="libraries/3rdparty/tracealyzer_recorder/streamports/USB_CDC" type="doc">
        <files mask="Readme-Streamport.txt"/>
      </source>
      <source relative_path="libraries/3rdparty/tracealyzer_recorder/streamports/USB_CDC" type="src">
        <files mask="trcStreamingPort.c"/>
      </source>
      <source relative_path="libraries/3rdparty/tracealyzer_recorder" type="src">
        <files mask="trcKernelPort.c"/>
        <files mask="trcSnapshotRecorder.c"/>
        <files mask="trcStreamingRecorder.c"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/3rdparty/tracealyzer_recorder/config" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/tracealyzer_recorder/Include" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/tracealyzer_recorder/streamports/Jlink_RTT/include" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/tracealyzer_recorder/streamports/TCPIP/include" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/tracealyzer_recorder/streamports/USB_CDC/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.3rdparty.unity.auto.MIMXRT1024" name="AWS IoT unity auto" brief="AWS IoT unity auto" version="202007.00.0" full_name="AWS IoT unity auto" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/3rdparty/unity/auto" type="other">
        <files mask="colour_prompt.rb"/>
        <files mask="colour_reporter.rb"/>
        <files mask="generate_config.yml"/>
        <files mask="generate_module.rb"/>
        <files mask="generate_test_runner.rb"/>
        <files mask="parse_output.rb"/>
        <files mask="stylize_as_junit.rb"/>
        <files mask="test_file_filter.rb"/>
        <files mask="type_sanitizer.rb"/>
        <files mask="unity_test_summary.rb"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/auto" type="script">
        <files mask="unity_test_summary.py"/>
        <files mask="unity_to_junit.py"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.3rdparty.unity.examples.MIMXRT1024" name="AWS IoT unity examples" brief="AWS IoT unity examples" version="202007.00.0" full_name="AWS IoT unity examples" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/3rdparty/unity/examples/example_1" type="other">
        <files mask="makefile"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_1" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_1/src" type="src">
        <files mask="ProductionCode.c"/>
        <files mask="ProductionCode2.c"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_1/src" type="c_include">
        <files mask="ProductionCode.h"/>
        <files mask="ProductionCode2.h"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_1/test/test_runners" type="src">
        <files mask="TestProductionCode_Runner.c"/>
        <files mask="TestProductionCode2_Runner.c"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_1/test" type="src">
        <files mask="TestProductionCode.c"/>
        <files mask="TestProductionCode2.c"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_2" type="other">
        <files mask="makefile"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_2" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_2/src" type="src">
        <files mask="ProductionCode.c"/>
        <files mask="ProductionCode2.c"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_2/src" type="c_include">
        <files mask="ProductionCode.h"/>
        <files mask="ProductionCode2.h"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_2/test/test_runners" type="src">
        <files mask="all_tests.c"/>
        <files mask="TestProductionCode_Runner.c"/>
        <files mask="TestProductionCode2_Runner.c"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_2/test" type="src">
        <files mask="TestProductionCode.c"/>
        <files mask="TestProductionCode2.c"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_3/helper" type="src">
        <files mask="UnityHelper.c"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_3/helper" type="c_include">
        <files mask="UnityHelper.h"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_3" type="other">
        <files mask="rakefile.rb"/>
        <files mask="rakefile_helper.rb"/>
        <files mask="target_gcc_32.yml"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_3" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_3/src" type="src">
        <files mask="ProductionCode.c"/>
        <files mask="ProductionCode2.c"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_3/src" type="c_include">
        <files mask="ProductionCode.h"/>
        <files mask="ProductionCode2.h"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_3/test" type="src">
        <files mask="TestProductionCode.c"/>
        <files mask="TestProductionCode2.c"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_4" type="other">
        <files mask="meson.build"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_4" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_4/src" type="other">
        <files mask="meson.build"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_4/src" type="src">
        <files mask="ProductionCode.c"/>
        <files mask="ProductionCode2.c"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_4/src" type="c_include">
        <files mask="ProductionCode.h"/>
        <files mask="ProductionCode2.h"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_4/subprojects" type="other">
        <files mask="unity.wrap"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_4/test" type="other">
        <files mask="meson.build"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_4/test" type="src">
        <files mask="TestProductionCode.c"/>
        <files mask="TestProductionCode2.c"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_4/test/test_runners" type="other">
        <files mask="meson.build"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples/example_4/test/test_runners" type="src">
        <files mask="TestProductionCode2_Runner.c"/>
        <files mask="TestProductionCode_Runner.c"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/examples" type="c_include">
        <files mask="unity_config.h"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/3rdparty/unity/examples/example_1/src" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/unity/examples/example_2/src" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/unity/examples/example_3/helper" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/unity/examples/example_3/src" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/unity/examples/example_4/src" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/unity/examples" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.3rdparty.unity.extras_unused.MIMXRT1024" name="AWS IoT unity extras" brief="AWS IoT unity extras" version="202007.00.0" full_name="AWS IoT unity extras" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/3rdparty/unity/extras/eclipse" type="doc">
        <files mask="error_parsers.txt"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/extras/fixture" type="other">
        <files mask="rakefile.rb"/>
        <files mask="rakefile_helper.rb"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/extras/fixture" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/extras/fixture/test/main" type="src">
        <files mask="AllTests.c"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/extras/fixture/test" type="other">
        <files mask="Makefile"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/extras/fixture/test" type="src">
        <files mask="template_fixture_tests.c"/>
        <files mask="unity_fixture_Test.c"/>
        <files mask="unity_fixture_TestRunner.c"/>
        <files mask="unity_output_Spy.c"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/extras/fixture/test" type="c_include">
        <files mask="unity_output_Spy.h"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/3rdparty/unity/extras/fixture/test" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.3rdparty.unity.tests.MIMXRT1024" name="AWS IoT unity tests" brief="AWS IoT unity tests" version="202007.00.0" full_name="AWS IoT unity tests" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/3rdparty/unity/test" type="other">
        <files mask=".rubocop.yml"/>
        <files mask="Makefile"/>
        <files mask="rakefile"/>
        <files mask="rakefile_helper.rb"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/test/expectdata" type="src">
        <files mask="testsample_cmd.c"/>
        <files mask="testsample_def.c"/>
        <files mask="testsample_head1.c"/>
        <files mask="testsample_mock_cmd.c"/>
        <files mask="testsample_mock_def.c"/>
        <files mask="testsample_mock_head1.c"/>
        <files mask="testsample_mock_new1.c"/>
        <files mask="testsample_mock_new2.c"/>
        <files mask="testsample_mock_param.c"/>
        <files mask="testsample_mock_run1.c"/>
        <files mask="testsample_mock_run2.c"/>
        <files mask="testsample_mock_yaml.c"/>
        <files mask="testsample_new1.c"/>
        <files mask="testsample_new2.c"/>
        <files mask="testsample_param.c"/>
        <files mask="testsample_run1.c"/>
        <files mask="testsample_run2.c"/>
        <files mask="testsample_yaml.c"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/test/expectdata" type="c_include">
        <files mask="testsample_head1.h"/>
        <files mask="testsample_mock_head1.h"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/test/spec" type="other">
        <files mask="generate_module_existing_file_spec.rb"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/test/targets" type="other">
        <files mask="clang_file.yml"/>
        <files mask="clang_strict.yml"/>
        <files mask="gcc_32.yml"/>
        <files mask="gcc_64.yml"/>
        <files mask="gcc_auto_limits.yml"/>
        <files mask="gcc_auto_stdint.yml"/>
        <files mask="gcc_manual_math.yml"/>
        <files mask="hitech_picc18.yml"/>
        <files mask="iar_arm_v4.yml"/>
        <files mask="iar_arm_v5.yml"/>
        <files mask="iar_arm_v5_3.yml"/>
        <files mask="iar_armcortex_LM3S9B92_v5_4.yml"/>
        <files mask="iar_cortexm3_v5.yml"/>
        <files mask="iar_msp430.yml"/>
        <files mask="iar_sh2a_v6.yml"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/test/testdata" type="c_include">
        <files mask="CException.h"/>
        <files mask="cmock.h"/>
        <files mask="Defs.h"/>
        <files mask="mockMock.h"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/test/testdata" type="src">
        <files mask="testRunnerGenerator.c"/>
        <files mask="testRunnerGeneratorSmall.c"/>
        <files mask="testRunnerGeneratorWithMocks.c"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/test/tests" type="other">
        <files mask="test_generate_test_runner.rb"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/test/tests" type="src">
        <files mask="testparameterized.c"/>
        <files mask="testunity.c"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/3rdparty/unity/test/expectdata" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/unity/test/testdata" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.3rdparty.unity_unused.MIMXRT1024" name="AWS IoT unity" brief="AWS IoT unity" version="202007.00.0" full_name="AWS IoT unity" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/3rdparty/unity" type="other">
        <files mask=".editorconfig"/>
        <files mask=".gitattributes"/>
        <files mask=".gitignore"/>
        <files mask=".travis.yml"/>
        <files mask="README.md"/>
        <files mask="meson.build"/>
      </source>
      <source relative_path="libraries/3rdparty/unity" type="doc">
        <files mask="CMakeLists.txt"/>
        <files mask="LICENSE.txt"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/release" type="other">
        <files mask="build.info"/>
        <files mask="version.info"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/docs" type="other">
        <files mask="ThrowTheSwitchCodingStandard.md"/>
        <files mask="UnityAssertionsReference.md"/>
        <files mask="UnityConfigurationGuide.md"/>
        <files mask="UnityGettingStartedGuide.md"/>
        <files mask="UnityHelperScriptsGuide.md"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/docs" type="doc">
        <files mask="UnityAssertionsCheatSheetSuitableforPrintingandPossiblyFraming.pdf"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/src" type="other">
        <files mask="meson.build"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.3rdparty.win_pcap.MIMXRT1024" name="AWS IoT win_pcap" brief="AWS IoT win_pcap" version="202007.00.0" full_name="AWS IoT win_pcap" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/3rdparty/win_pcap" type="c_include">
        <files mask="bittypes.h"/>
        <files mask="ip6_misc.h"/>
        <files mask="Packet32.h"/>
        <files mask="PacketData.h"/>
        <files mask="pcap.h"/>
        <files mask="pcap-bpf.h"/>
        <files mask="pcap-namedb.h"/>
        <files mask="pcap-stdinc.h"/>
        <files mask="remote-ext.h"/>
        <files mask="Win32-Extensions.h"/>
      </source>
      <source relative_path="libraries/3rdparty/win_pcap" type="lib">
        <files mask="libwpcap.a"/>
      </source>
      <source relative_path="libraries/3rdparty/win_pcap/pcap" type="c_include">
        <files mask="bluetooth.h"/>
        <files mask="bpf.h"/>
        <files mask="namedb.h"/>
        <files mask="pcap.h"/>
        <files mask="sll.h"/>
        <files mask="usb.h"/>
        <files mask="vlan.h"/>
      </source>
      <source relative_path="libraries/3rdparty/win_pcap" type="lib">
        <files mask="wpcap.lib"/>
      </source>
      <source relative_path="libraries/3rdparty/win_pcap" type="other">
        <files mask="LICENSE"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/3rdparty/win_pcap" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/win_pcap/pcap" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.abstractions.ble_hal.MIMXRT1024" name="AWS IoT ble_hal" brief="AWS IoT ble_hal" version="202007.00.0" full_name="AWS IoT ble_hal" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/abstractions/ble_hal" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/abstractions/ble_hal/include" type="c_include">
        <files mask="bt_hal_avsrc_profile.h"/>
        <files mask="bt_hal_gatt_client.h"/>
        <files mask="bt_hal_gatt_server.h"/>
        <files mask="bt_hal_gatt_types.h"/>
        <files mask="bt_hal_manager.h"/>
        <files mask="bt_hal_manager_adapter_ble.h"/>
        <files mask="bt_hal_manager_adapter_classic.h"/>
        <files mask="bt_hal_manager_types.h"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/abstractions/ble_hal/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.abstractions.common_io.MIMXRT1024" name="AWS IoT common_io" brief="AWS IoT common_io" version="202007.00.0" full_name="AWS IoT common_io" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MIMXRT1024"/>
      </dependencies>
      <source relative_path="libraries/abstractions/common_io" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/abstractions/common_io/include" type="c_include">
        <files mask="iot_adc.h"/>
        <files mask="iot_battery.h"/>
        <files mask="iot_efuse.h"/>
        <files mask="iot_flash.h"/>
        <files mask="iot_gpio.h"/>
        <files mask="iot_hw.h"/>
        <files mask="iot_i2c.h"/>
        <files mask="iot_i2s.h"/>
        <files mask="iot_perfcounter.h"/>
        <files mask="iot_power.h"/>
        <files mask="iot_pwm.h"/>
        <files mask="iot_reset.h"/>
        <files mask="iot_rtc.h"/>
        <files mask="iot_sdio.h"/>
        <files mask="iot_spi.h"/>
        <files mask="iot_timer.h"/>
        <files mask="iot_tsensor.h"/>
        <files mask="iot_uart.h"/>
        <files mask="iot_usb_device.h"/>
        <files mask="iot_usb_host.h"/>
        <files mask="iot_watchdog.h"/>
      </source>
      <source relative_path="libraries/abstractions/common_io/test" type="src">
        <files mask="iot_test_common_io.c"/>
        <files mask="test_iot_adc.c"/>
        <files mask="test_iot_battery.c"/>
        <files mask="test_iot_efuse.c"/>
        <files mask="test_iot_flash.c"/>
        <files mask="test_iot_gpio.c"/>
        <files mask="test_iot_i2c.c"/>
        <files mask="test_iot_i2s.c"/>
        <files mask="test_iot_perfcounter.c"/>
        <files mask="test_iot_power.c"/>
        <files mask="test_iot_pwm.c"/>
        <files mask="test_iot_reset.c"/>
        <files mask="test_iot_rtc.c"/>
        <files mask="test_iot_sdio.c"/>
        <files mask="test_iot_spi.c"/>
        <files mask="test_iot_timer.c"/>
        <files mask="test_iot_tsensor.c"/>
        <files mask="test_iot_uart.c"/>
        <files mask="test_iot_watchdog.c"/>
      </source>
      <source relative_path="libraries/abstractions/common_io/test" type="c_include">
        <files mask="iot_test_common_io_internal.h"/>
      </source>
      <source relative_path="libraries/abstractions/common_io/test/test_scripts/adc" type="script">
        <files mask="__init__.py"/>
        <files mask="test_iot_adc_rp3.py"/>
        <files mask="test_iot_adc_test.py"/>
        <files mask="test_iot_runonPI_adc.sh"/>
      </source>
      <source relative_path="libraries/abstractions/common_io/test/test_scripts/gpio" type="script">
        <files mask="__init__.py"/>
        <files mask="test_iot_gpio_rp3.py"/>
        <files mask="test_iot_gpio_test.py"/>
        <files mask="test_iot_runonPI_gpio.sh"/>
      </source>
      <source relative_path="libraries/abstractions/common_io/test/test_scripts/i2c_master" type="script">
        <files mask="test_iot_i2c_master_rp3.py"/>
        <files mask="test_iot_i2c_master_test.py"/>
        <files mask="test_iot_runonPI_i2c_master.sh"/>
      </source>
      <source relative_path="libraries/abstractions/common_io/test/test_scripts/pwm" type="script">
        <files mask="__init__.py"/>
        <files mask="test_iot_pwm_rp3.py"/>
        <files mask="test_iot_pwm_test.py"/>
        <files mask="test_iot_runonPI_pwm.sh"/>
      </source>
      <source relative_path="libraries/abstractions/common_io/test/test_scripts/spi_master" type="script">
        <files mask="test_iot_spi_master_pyb.sh"/>
        <files mask="test_iot_spi_master_test.py"/>
      </source>
      <source relative_path="libraries/abstractions/common_io/test/test_scripts" type="script">
        <files mask="test_iot_assisted_tests.py"/>
        <files mask="test_iot_test_template.py"/>
      </source>
      <source relative_path="libraries/abstractions/common_io/test/test_scripts/tsensor" type="script">
        <files mask="__init__.py"/>
        <files mask="test_iot_runonPI_tsensor.sh"/>
        <files mask="test_iot_tsensor_rp3.py"/>
        <files mask="test_iot_tsensor_test.py"/>
      </source>
      <source relative_path="libraries/abstractions/common_io/test/test_scripts/uart" type="script">
        <files mask="__init__.py"/>
        <files mask="test_iot_runonPI_uart.sh"/>
        <files mask="test_iot_uart_rp3.py"/>
        <files mask="test_iot_uart_test.py"/>
      </source>
      <source relative_path="libraries/abstractions/common_io/test/test_scripts/usb_device" type="script">
        <files mask="test_iot_usb_device_test.py"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/abstractions/common_io/include" type="c_include"/>
        <include_path relative_path="libraries/abstractions/common_io/test" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.abstractions.pkcs11.MIMXRT1024" name="AWS IoT abstraction pkcs11" brief="AWS IoT abstraction pkcs11" version="202007.00.0" full_name="AWS IoT abstraction pkcs11" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.mbedtls.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.freertos_plus.standard.crypto.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.freertos_plus.standard.pkcs11.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.freertos_plus.standard.utils.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.3rdparty.mbedtls_utils.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.template.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="libraries/abstractions/pkcs11/include" type="c_include">
        <files mask="iot_pkcs11_pal.h"/>
      </source>
      <source relative_path="libraries/abstractions/pkcs11/mbedtls" type="src">
        <files mask="iot_pkcs11_mbedtls.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_freertos-aws_iot_libraries_abstractions_pkcs11_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/abstractions/pkcs11/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.abstractions.pkcs11_unused.MIMXRT1024" name="AWS IoT abstraction pkcs11 unused" brief="AWS IoT abstraction pkcs11 unused" version="202007.00.0" full_name="AWS IoT abstraction pkcs11 unused" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/abstractions/pkcs11/ecc608a" type="src">
        <files mask="atca_cert_chain.c"/>
        <files mask="iot_pkcs11_secure_element.c"/>
      </source>
      <source relative_path="libraries/abstractions/pkcs11/ecc608a" type="c_include">
        <files mask="atca_cert_chain.h"/>
      </source>
      <source relative_path="libraries/abstractions/pkcs11/psa" type="src">
        <files mask="iot_pkcs11_psa.c"/>
        <files mask="iot_pkcs11_psa_input_format.c"/>
        <files mask="iot_pkcs11_psa_object_management.c"/>
      </source>
      <source relative_path="libraries/abstractions/pkcs11/psa" type="c_include">
        <files mask="iot_pkcs11_psa_input_format.h"/>
        <files mask="iot_pkcs11_psa_object_management.h"/>
      </source>
      <source relative_path="libraries/abstractions/pkcs11/psa" type="other">
        <files mask="License.md"/>
        <files mask="ReadMe.md"/>
      </source>
      <source relative_path="libraries/abstractions/pkcs11/test" type="src">
        <files mask="MBT_C_CloseSession.c"/>
        <files mask="MBT_C_DigestFinal.c"/>
        <files mask="MBT_C_DigestInit.c"/>
        <files mask="MBT_C_DigestUpdate.c"/>
        <files mask="MBT_C_Finalize.c"/>
        <files mask="MBT_C_FindObjects.c"/>
        <files mask="MBT_C_FindObjectsFinal.c"/>
        <files mask="MBT_C_FindObjectsInit.c"/>
        <files mask="MBT_C_GenerateKeyPair.c"/>
        <files mask="MBT_C_GenerateRandom.c"/>
        <files mask="MBT_C_GetAttributeValue.c"/>
        <files mask="MBT_C_Initialize.c"/>
        <files mask="MBT_C_OpenSession.c"/>
        <files mask="MBT_C_Sign.c"/>
        <files mask="MBT_C_SignInit.c"/>
        <files mask="MBT_C_Verify.c"/>
        <files mask="MBT_C_VerifyInit.c"/>
        <files mask="MBT_DigestMachine.c"/>
        <files mask="MBT_GenerationMachine.c"/>
        <files mask="MBT_ObjectMachine.c"/>
        <files mask="MBT_SessionMachine.c"/>
        <files mask="MBT_SignMachine.c"/>
        <files mask="MBT_VerifyMachine.c"/>
      </source>
      <source relative_path="libraries/abstractions/pkcs11/utest" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/abstractions/pkcs11/utest" type="src">
        <files mask="iot_pkcs11_mbedtls_utest.c"/>
      </source>
      <source relative_path="libraries/abstractions/pkcs11/utest" type="other">
        <files mask="project.yml"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/abstractions/pkcs11/ecc608a" type="c_include"/>
        <include_path relative_path="libraries/abstractions/pkcs11/psa" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.abstractions.platform.MIMXRT1024" name="AWS IoT abstraction platform" brief="AWS IoT abstraction platform" version="202007.00.0" full_name="AWS IoT abstraction platform" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-aws_iot.common.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.abstractions.secure_sockets.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.template.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="libraries/abstractions/platform/freertos/include/platform" type="c_include">
        <files mask="iot_network_ble.h"/>
        <files mask="iot_network_freertos.h"/>
        <files mask="iot_platform_types_freertos.h"/>
      </source>
      <source relative_path="libraries/abstractions/platform/freertos" type="src">
        <files mask="iot_clock_freertos.c"/>
        <files mask="iot_metrics.c"/>
        <files mask="iot_network_freertos.c"/>
        <files mask="iot_threads_freertos.c"/>
      </source>
      <source relative_path="libraries/abstractions/platform/include/platform" type="c_include">
        <files mask="iot_clock.h"/>
        <files mask="iot_metrics.h"/>
        <files mask="iot_network.h"/>
        <files mask="iot_threads.h"/>
      </source>
      <source relative_path="libraries/abstractions/platform/include/types" type="c_include">
        <files mask="iot_platform_types.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_freertos-aws_iot_libraries_abstractions_platform_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/abstractions/platform/freertos/include/platform" type="c_include"/>
        <include_path relative_path="libraries/abstractions/platform/include/platform" type="c_include"/>
        <include_path relative_path="libraries/abstractions/platform/include/types" type="c_include"/>
        <include_path relative_path="libraries/abstractions/platform/freertos/include" type="c_include"/>
        <include_path relative_path="libraries/abstractions/platform/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.abstractions.posix.MIMXRT1024" name="AWS IoT abstraction POSIX" brief="AWS IoT abstraction POSIX" version="202007.00.0" full_name="AWS IoT abstraction POSIX" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <component_dependency value="middleware.freertos-aws_iot.libraries.freertos_plus.standard.freertos_plus_posix.MIMXRT1024"/>
      </dependencies>
      <source relative_path="libraries/abstractions/posix" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/abstractions/posix/include/FreeRTOS_POSIX" type="c_include">
        <files mask="errno.h"/>
        <files mask="fcntl.h"/>
        <files mask="mqueue.h"/>
        <files mask="pthread.h"/>
        <files mask="sched.h"/>
        <files mask="semaphore.h"/>
        <files mask="signal.h"/>
        <files mask="time.h"/>
        <files mask="unistd.h"/>
        <files mask="utils.h"/>
      </source>
      <source relative_path="libraries/abstractions/posix/include/FreeRTOS_POSIX/sys" type="c_include">
        <files mask="types.h"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/abstractions/posix/include/FreeRTOS_POSIX" type="c_include"/>
        <include_path relative_path="libraries/abstractions/posix/include/FreeRTOS_POSIX/sys" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.abstractions.secure_sockets.MIMXRT1024" name="AWS IoT abstraction secure sockets" brief="AWS IoT abstraction secure sockets" version="202007.00.0" full_name="AWS IoT abstraction secure sockets" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-aws_iot.common.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.template.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="libraries/abstractions/secure_sockets/include" type="c_include">
        <files mask="iot_secure_sockets.h"/>
        <files mask="iot_secure_sockets_config_defaults.h"/>
        <files mask="iot_secure_sockets_wrapper_metrics.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_freertos-aws_iot_libraries_abstractions_secure_sockets_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/abstractions/secure_sockets/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.abstractions.secure_sockets_unused.MIMXRT1024" name="AWS IoT abstraction secure sockets unused" brief="AWS IoT abstraction secure sockets unused" version="202007.00.0" full_name="AWS IoT abstraction secure sockets unused" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/abstractions/secure_sockets/utest" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/abstractions/secure_sockets/utest" type="src">
        <files mask="secure_sockets_utest.c"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.abstractions.threading_alt.MIMXRT1024" name="AWS IoT abstraction mbedtls threading_alt" brief="AWS IoT abstraction mbedtls threading_alt" version="202007.00.0" full_name="AWS IoT abstraction mbedtls threading_alt" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MIMXRT1024"/>
      </dependencies>
      <source relative_path="libraries/abstractions/pkcs11/mbedtls" type="c_include">
        <files mask="threading_alt.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_freertos-aws_iot_libraries_abstractions_threading_alt_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/abstractions/pkcs11/mbedtls" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.abstractions.wifi.MIMXRT1024" name="AWS IoT abstractions wifi" brief="AWS IoT abstractions wifi" version="202007.00.0" full_name="AWS IoT abstractions wifi" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-aws_iot.common.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.template.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-kernel.template.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="libraries/abstractions/wifi/include" type="c_include">
        <files mask="iot_wifi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_freertos-aws_iot_libraries_abstractions_wifi_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/abstractions/wifi/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.c_sdk.aws.defender.MIMXRT1024" name="AWS IoT defender" brief="AWS IoT defender" version="202007.00.0" full_name="AWS IoT defender" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-aws_iot.common.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.mqtt.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.c_sdk.standard.shadow.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.c_sdk.standard.serializer.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.abstractions.platform.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.3rdparty.tinycbor.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="libraries/c_sdk/aws/defender" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/c_sdk/aws/defender/include" type="c_include">
        <files mask="aws_defender.h"/>
        <files mask="aws_iot_defender.h"/>
      </source>
      <source relative_path="libraries/c_sdk/aws/defender/src" type="src">
        <files mask="aws_iot_defender_api.c"/>
        <files mask="aws_iot_defender_collector.c"/>
        <files mask="aws_iot_defender_mqtt.c"/>
        <files mask="aws_iot_defender_v1.c"/>
      </source>
      <source relative_path="libraries/c_sdk/aws/defender/src/private" type="c_include">
        <files mask="aws_iot_defender_internal.h"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/c_sdk/aws/defender/include" type="c_include"/>
        <include_path relative_path="libraries/c_sdk/aws/defender/src/private" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.c_sdk.aws.defender_unused.MIMXRT1024" name="AWS IoT defender unused" brief="AWS IoT defender unused" version="202007.00.0" full_name="AWS IoT defender unused" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/c_sdk/aws/defender/test/system" type="src">
        <files mask="aws_iot_tests_defender_system.c"/>
      </source>
      <source relative_path="libraries/c_sdk/aws/defender/test/unit" type="src">
        <files mask="aws_iot_tests_defender_unit.c"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.c_sdk.standard.ble_unused.MIMXRT1024" name="AWS IoT BLE" brief="AWS IoT BLE" version="202007.00.0" full_name="AWS IoT BLE" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/c_sdk/standard/ble/utest" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/ble/utest" type="src">
        <files mask="iot_ble_data_transfer_utest.c"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/ble" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/ble/include" type="c_include">
        <files mask="iot_ble.h"/>
        <files mask="iot_ble_config_defaults.h"/>
        <files mask="iot_ble_data_transfer.h"/>
        <files mask="iot_ble_device_information.h"/>
        <files mask="iot_ble_mqtt_serialize.h"/>
        <files mask="iot_ble_wifi_provisioning.h"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/ble/src" type="src">
        <files mask="iot_ble_gap.c"/>
        <files mask="iot_ble_gatt.c"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/ble/src" type="c_include">
        <files mask="iot_ble_internal.h"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/ble/src/services/device_information" type="src">
        <files mask="iot_ble_device_information.c"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/ble/src/services/mqtt_ble" type="src">
        <files mask="iot_ble_data_transfer.c"/>
        <files mask="iot_network_ble.c"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/ble/src/services/wifi_provisioning" type="src">
        <files mask="iot_ble_wifi_provisioning.c"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/ble/test" type="c_include">
        <files mask="iot_ble_wifi_prov_test_access_declare.h"/>
        <files mask="iot_ble_wifi_prov_test_access_define.h"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/ble/test" type="src">
        <files mask="iot_test_ble_end_to_end.c"/>
        <files mask="iot_test_wifi_provisioning.c"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/c_sdk/standard/ble/include" type="c_include"/>
        <include_path relative_path="libraries/c_sdk/standard/ble/src" type="c_include"/>
        <include_path relative_path="libraries/c_sdk/standard/ble/test" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.c_sdk.standard.https.MIMXRT1024" name="AWS IoT https" brief="AWS IoT https" version="202007.00.0" full_name="AWS IoT https" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-aws_iot.common.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.3rdparty.http_parser.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.abstractions.platform.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.template.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="libraries/c_sdk/standard/https/include" type="c_include">
        <files mask="iot_https_client.h"/>
        <files mask="iot_https_utils.h"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/https/include/types" type="c_include">
        <files mask="iot_https_types.h"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/https/src" type="src">
        <files mask="iot_https_client.c"/>
        <files mask="iot_https_utils.c"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/https/src/private" type="c_include">
        <files mask="iot_https_internal.h"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/c_sdk/standard/https/include" type="c_include"/>
        <include_path relative_path="libraries/c_sdk/standard/https/include/types" type="c_include"/>
        <include_path relative_path="libraries/c_sdk/standard/https/src/private" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.c_sdk.standard.https_unused.MIMXRT1024" name="AWS IoT https unused" brief="AWS IoT https unused files" version="202007.00.0" full_name="AWS IoT https unused" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/c_sdk/standard/https" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/https/test/access" type="c_include">
        <files mask="iot_test_access_https.h"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/https/test/access" type="src">
        <files mask="iot_test_access_https_client.c"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/https/test/system" type="src">
        <files mask="iot_tests_https_system.c"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/https/test/unit" type="src">
        <files mask="iot_tests_https_async.c"/>
        <files mask="iot_tests_https_client.c"/>
        <files mask="iot_tests_https_common.c"/>
        <files mask="iot_tests_https_sync.c"/>
        <files mask="iot_tests_https_utils.c"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/https/test/unit" type="c_include">
        <files mask="iot_tests_https_common.h"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/c_sdk/standard/https/test/access" type="c_include"/>
        <include_path relative_path="libraries/c_sdk/standard/https/test/unit" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.c_sdk.standard.serializer_unused.MIMXRT1024" name="AWS IoT standard serializer" brief="AWS IoT standard serializer" version="202007.00.0" full_name="AWS IoT standard serializer" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/c_sdk/standard/serializer/src/cbor" type="src">
        <files mask="iot_serializer_tinycbor_decoder.c"/>
        <files mask="iot_serializer_tinycbor_encoder.c"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/serializer/test" type="src">
        <files mask="iot_tests_deserializer_json.c"/>
        <files mask="iot_tests_serializer_cbor.c"/>
        <files mask="iot_tests_serializer_json.c"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.freertos_plus.aws.greengrass.MIMXRT1024" name="AWS IoT libraries greengrass" brief="AWS IoT libraries greengrass" version="202007.00.0" full_name="AWS IoT libraries greengrass" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-aws_iot.libraries.3rdparty.jsmn.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.abstractions.secure_sockets.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.template.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="libraries/freertos_plus/aws/greengrass/include" type="c_include">
        <files mask="aws_ggd_config_defaults.h"/>
        <files mask="aws_greengrass_discovery.h"/>
      </source>
      <source relative_path="libraries/freertos_plus/aws/greengrass/src" type="src">
        <files mask="aws_greengrass_discovery.c"/>
        <files mask="aws_helper_secure_connect.c"/>
      </source>
      <source relative_path="libraries/freertos_plus/aws/greengrass/src" type="c_include">
        <files mask="aws_helper_secure_connect.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_freertos-aws_iot_libraries_freertos_plus_aws_greengrass_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/freertos_plus/aws/greengrass/include" type="c_include"/>
        <include_path relative_path="libraries/freertos_plus/aws/greengrass/src" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.freertos_plus.aws.greengrass_unused.MIMXRT1024" name="AWS IoT libraries greengrass unused" brief="AWS IoT libraries greengrass unused" version="202007.00.0" full_name="AWS IoT libraries greengrass unused" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/freertos_plus/aws/greengrass/test" type="src">
        <files mask="aws_test_ggd_system.c"/>
        <files mask="aws_test_ggd_unit.c"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.freertos_plus.aws.ota.MIMXRT1024" name="FreeRTOS ota" brief="FreeRTOS ota" version="202007.00.0" full_name="FreeRTOS ota" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-aws_iot.common.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.demos_ota.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.3rdparty.jsmn.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.3rdparty.tinycbor.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.abstractions.platform.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.c_sdk.standard.https.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.mqtt.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1024"/>
          <component_dependency value="middleware.mbedtls.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.template.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="libraries/freertos_plus/aws/ota" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/freertos_plus/aws/ota" type="other">
        <files mask="README.md"/>
      </source>
      <source relative_path="libraries/freertos_plus/aws/ota/include" type="c_include">
        <files mask="aws_iot_ota_agent.h"/>
        <files mask="aws_iot_ota_types.h"/>
      </source>
      <source relative_path="libraries/freertos_plus/aws/ota/src" type="src">
        <files mask="aws_iot_ota_agent.c"/>
        <files mask="aws_iot_ota_interface.c"/>
      </source>
      <source relative_path="libraries/freertos_plus/aws/ota/src" type="c_include">
        <files mask="aws_iot_ota_agent_internal.h"/>
        <files mask="aws_iot_ota_interface.h"/>
        <files mask="aws_iot_ota_pal.h"/>
      </source>
      <source relative_path="libraries/freertos_plus/aws/ota/src/http" type="src">
        <files mask="aws_iot_ota_http.c"/>
      </source>
      <source relative_path="libraries/freertos_plus/aws/ota/src/http" type="c_include">
        <files mask="aws_iot_ota_http.h"/>
      </source>
      <source relative_path="libraries/freertos_plus/aws/ota/src/mqtt" type="src">
        <files mask="aws_iot_ota_cbor.c"/>
        <files mask="aws_iot_ota_mqtt.c"/>
      </source>
      <source relative_path="libraries/freertos_plus/aws/ota/src/mqtt" type="c_include">
        <files mask="aws_iot_ota_cbor.h"/>
        <files mask="aws_iot_ota_cbor_internal.h"/>
        <files mask="aws_iot_ota_mqtt.h"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/freertos_plus/aws/ota/include" type="c_include"/>
        <include_path relative_path="libraries/freertos_plus/aws/ota/src" type="c_include"/>
        <include_path relative_path="libraries/freertos_plus/aws/ota/src/http" type="c_include"/>
        <include_path relative_path="libraries/freertos_plus/aws/ota/src/mqtt" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.freertos_plus.aws.ota_unused.MIMXRT1024" name="AWS IoT freertos plus OTA" brief="AWS IoT freertos plus OTA" version="202007.00.0" full_name="AWS IoT freertos plus OTA" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/freertos_plus/aws/ota/test" type="c_include">
        <files mask="aws_ota_agent_test_access_declare.h"/>
        <files mask="aws_ota_agent_test_access_define.h"/>
        <files mask="aws_ota_codesigner_certificate.h"/>
        <files mask="aws_ota_pal_test_access_declare.h"/>
        <files mask="aws_ota_pal_test_access_define.h"/>
        <files mask="aws_test_ota_pal_ecdsa_sha256_signature.h"/>
        <files mask="aws_test_ota_pal_rsa_sha1_signature.h"/>
        <files mask="aws_test_ota_pal_rsa_sha256_signature.h"/>
        <files mask="aws_test_ota_signature_methods.h"/>
      </source>
      <source relative_path="libraries/freertos_plus/aws/ota/test" type="src">
        <files mask="aws_test_ota_agent.c"/>
        <files mask="aws_test_ota_cbor.c"/>
        <files mask="aws_test_ota_pal.c"/>
      </source>
      <source relative_path="libraries/freertos_plus/aws/ota/test" type="other">
        <files mask="README.md"/>
      </source>
      <source relative_path="libraries/freertos_plus/aws/ota/test/test_files" type="other">
        <files mask="describeStreamResponse.cbor"/>
        <files mask="ecdsa-sha256-signer.crt.pem"/>
        <files mask="ecdsa-sha256-signer.key.pem"/>
        <files mask="getStreamResponse_0.cbor"/>
        <files mask="getStreamResponse_1.cbor"/>
        <files mask="getStreamResponse_10.cbor"/>
        <files mask="getStreamResponse_11.cbor"/>
        <files mask="getStreamResponse_12.cbor"/>
        <files mask="getStreamResponse_13.cbor"/>
        <files mask="getStreamResponse_14.cbor"/>
        <files mask="getStreamResponse_15.cbor"/>
        <files mask="getStreamResponse_2.cbor"/>
        <files mask="getStreamResponse_3.cbor"/>
        <files mask="getStreamResponse_4.cbor"/>
        <files mask="getStreamResponse_5.cbor"/>
        <files mask="getStreamResponse_6.cbor"/>
        <files mask="getStreamResponse_7.cbor"/>
        <files mask="getStreamResponse_8.cbor"/>
        <files mask="getStreamResponse_9.cbor"/>
        <files mask="rsa-sha1-root-ca-cert.pem"/>
        <files mask="rsa-sha1-root-ca-cert-key.pem"/>
        <files mask="rsa-sha1-signer.crt.pem"/>
        <files mask="rsa-sha1-signer.key.pem"/>
        <files mask="rsa-sha256-signer.crt.pem"/>
        <files mask="rsa-sha256-signer.key.pem"/>
      </source>
      <source relative_path="libraries/freertos_plus/aws/ota/test/test_files" type="binary">
        <files mask="payload.bin"/>
        <files mask="rsasigner.crt"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/freertos_plus/aws/ota/test" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.freertos_plus.standard.crypto.MIMXRT1024" name="AWS IoT crypto" brief="AWS IoT crypto" version="202007.00.0" full_name="AWS IoT crypto" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-aws_iot.libraries.abstractions.threading_alt.MIMXRT1024"/>
          <component_dependency value="middleware.mbedtls.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="libraries/freertos_plus/standard/crypto/include" type="c_include">
        <files mask="iot_crypto.h"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/crypto/src" type="src">
        <files mask="iot_crypto.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_freertos-aws_iot_libraries_freertos_plus_standard_crypto_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/freertos_plus/standard/crypto/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.freertos_plus.standard.freertos_plus_posix.MIMXRT1024" name="AWS IoT freertos plus POSIX" brief="AWS IoT freertos plus POSIX" version="202007.00.0" full_name="AWS IoT freertos plus POSIX" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_posix" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_posix/doc" type="other">
        <files mask="Doxyfile"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_posix/doc" type="xml">
        <files mask="DoxygenLayout.xml"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_posix/include" type="c_include">
        <files mask="FreeRTOS_POSIX.h"/>
        <files mask="FreeRTOS_POSIX_internal.h"/>
        <files mask="FreeRTOS_POSIX_portable_default.h"/>
        <files mask="FreeRTOS_POSIX_types.h"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_posix/source" type="src">
        <files mask="FreeRTOS_POSIX_clock.c"/>
        <files mask="FreeRTOS_POSIX_mqueue.c"/>
        <files mask="FreeRTOS_POSIX_pthread.c"/>
        <files mask="FreeRTOS_POSIX_pthread_barrier.c"/>
        <files mask="FreeRTOS_POSIX_pthread_cond.c"/>
        <files mask="FreeRTOS_POSIX_pthread_mutex.c"/>
        <files mask="FreeRTOS_POSIX_sched.c"/>
        <files mask="FreeRTOS_POSIX_semaphore.c"/>
        <files mask="FreeRTOS_POSIX_timer.c"/>
        <files mask="FreeRTOS_POSIX_unistd.c"/>
        <files mask="FreeRTOS_POSIX_utils.c"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_posix/test" type="src">
        <files mask="iot_test_posix_clock.c"/>
        <files mask="iot_test_posix_mqueue.c"/>
        <files mask="iot_test_posix_pthread.c"/>
        <files mask="iot_test_posix_semaphore.c"/>
        <files mask="iot_test_posix_stress.c"/>
        <files mask="iot_test_posix_timer.c"/>
        <files mask="iot_test_posix_unistd.c"/>
        <files mask="iot_test_posix_utils.c"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/freertos_plus/standard/freertos_plus_posix/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.freertos_plus.standard.freertos_plus_tcp_unused.MIMXRT1024" name="AWS IoT freertos plus TCP" brief="AWS IoT freertos plus TCP" version="202007.00.0" full_name="AWS IoT freertos plus TCP" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_tcp" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/include" type="c_include">
        <files mask="FreeRTOS_ARP.h"/>
        <files mask="FreeRTOS_DHCP.h"/>
        <files mask="FreeRTOS_DNS.h"/>
        <files mask="FreeRTOS_errno_TCP.h"/>
        <files mask="FreeRTOS_IP.h"/>
        <files mask="FreeRTOS_IP_Private.h"/>
        <files mask="FreeRTOS_Sockets.h"/>
        <files mask="FreeRTOS_Stream_Buffer.h"/>
        <files mask="FreeRTOS_TCP_IP.h"/>
        <files mask="FreeRTOS_TCP_WIN.h"/>
        <files mask="FreeRTOS_UDP_IP.h"/>
        <files mask="FreeRTOSIPConfigDefaults.h"/>
        <files mask="IPTraceMacroDefaults.h"/>
        <files mask="NetworkBufferManagement.h"/>
        <files mask="NetworkInterface.h"/>
        <files mask="tcp_dump_packets.h"/>
        <files mask="tcp_mem_stats.h"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/source" type="src">
        <files mask="FreeRTOS_ARP.c"/>
        <files mask="FreeRTOS_DHCP.c"/>
        <files mask="FreeRTOS_DNS.c"/>
        <files mask="FreeRTOS_IP.c"/>
        <files mask="FreeRTOS_Sockets.c"/>
        <files mask="FreeRTOS_Stream_Buffer.c"/>
        <files mask="FreeRTOS_TCP_IP.c"/>
        <files mask="FreeRTOS_TCP_WIN.c"/>
        <files mask="FreeRTOS_UDP_IP.c"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/source" type="doc">
        <files mask="History.txt"/>
        <files mask="readme.txt"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/BufferManagement" type="src">
        <files mask="BufferAllocation_1.c"/>
        <files mask="BufferAllocation_2.c"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/Compiler/CompilerName" type="c_include">
        <files mask="pack_struct_end.h"/>
        <files mask="pack_struct_start.h"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/Compiler/CompilerName" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/Compiler/GCC" type="c_include">
        <files mask="pack_struct_end.h"/>
        <files mask="pack_struct_start.h"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/Compiler/IAR" type="c_include">
        <files mask="pack_struct_end.h"/>
        <files mask="pack_struct_start.h"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/Compiler/Keil" type="c_include">
        <files mask="pack_struct_end.h"/>
        <files mask="pack_struct_start.h"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/NetworkInterface/board_family" type="src">
        <files mask="NetworkInterface.c"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/NetworkInterface/board_family" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/NetworkInterface/Common" type="src">
        <files mask="phyHandling.c"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/NetworkInterface/include" type="c_include">
        <files mask="phyHandling.h"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/NetworkInterface/LPC17xx" type="src">
        <files mask="NetworkInterface.c"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/NetworkInterface/LPC18xx" type="src">
        <files mask="NetworkInterface.c"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/NetworkInterface/LPC18xx" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/NetworkInterface" type="doc">
        <files mask="README_DRIVER_DISCLAIMER.txt"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/source" type="other">
        <files mask="ReadMe.url"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/test" type="c_include">
        <files mask="iot_freertos_tcp_test_access_declare.h"/>
        <files mask="iot_freertos_tcp_test_access_dns_define.h"/>
        <files mask="iot_freertos_tcp_test_access_tcp_define.h"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/test" type="src">
        <files mask="iot_test_freertos_tcp.c"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/freertos_plus_tcp" type="other">
        <files mask="uncrustify.cfg"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/include" type="c_include"/>
        <include_path relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/Compiler/CompilerName" type="c_include"/>
        <include_path relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/Compiler/GCC" type="c_include"/>
        <include_path relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/Compiler/IAR" type="c_include"/>
        <include_path relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/Compiler/Keil" type="c_include"/>
        <include_path relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/source/portable/NetworkInterface/include" type="c_include"/>
        <include_path relative_path="libraries/freertos_plus/standard/freertos_plus_tcp/test" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.freertos_plus.standard.pkcs11.MIMXRT1024" name="AWS IoT freertos plus pkcs11" brief="AWS IoT freertos plus pkcs11" version="202007.00.0" full_name="AWS IoT freertos plus pkcs11" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-aws_iot.libraries.3rdparty.pkcs11.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.template.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="libraries/freertos_plus/standard/pkcs11/include" type="c_include">
        <files mask="iot_pkcs11.h"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/pkcs11/src" type="src">
        <files mask="iot_pkcs11.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_freertos-aws_iot_libraries_freertos_plus_standard_pkcs11_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/freertos_plus/standard/pkcs11/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.freertos_plus.standard.pkcs11_unused.MIMXRT1024" name="AWS IoT freertos plus pkcs11 unused" brief="AWS IoT freertos plus pkcs11 unused" version="202007.00.0" full_name="AWS IoT freertos plus pkcs11 unused" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/freertos_plus/standard/pkcs11/utest" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/pkcs11/utest" type="src">
        <files mask="iot_pkcs11_utest.c"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.freertos_plus.standard.tls.MIMXRT1024" name="AWS IoT freertos plus TLS" brief="AWS IoT Transport Layer Security layer." version="202007.00.0" full_name="AWS IoT freertos plus TLS" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-aws_iot.common.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.3rdparty.mbedtls_utils.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.freertos_plus.standard.crypto.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.freertos_plus.standard.pkcs11.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.freertos_plus.standard.utils.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.template.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1024"/>
          <component_dependency value="middleware.mbedtls.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="libraries/freertos_plus/standard/tls/include" type="c_include">
        <files mask="iot_tls.h"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/tls/src" type="src">
        <files mask="iot_tls.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_freertos-aws_iot_libraries_freertos_plus_standard_tls_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/freertos_plus/standard/tls/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.freertos_plus.standard.utils.MIMXRT1024" name="AWS IoT utils" brief="AWS IoT utils" version="202007.00.0" full_name="AWS IoT utils" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.freertos_plus.standard.crypto.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.abstractions.secure_sockets.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="libraries/freertos_plus/standard/utils/include" type="c_include">
        <files mask="iot_pki_utils.h"/>
        <files mask="iot_system_init.h"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/utils/src" type="src">
        <files mask="iot_pki_utils.c"/>
        <files mask="iot_system_init.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_freertos-aws_iot_libraries_freertos_plus_standard_utils_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/freertos_plus/standard/utils/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.libraries.freertos_plus.standard.utils_unused.MIMXRT1024" name="AWS IoT utils unused" brief="AWS IoT utils unused" version="202007.00.0" full_name="AWS IoT utils unused" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/freertos_plus/standard/utils/utest" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/utils/utest" type="src">
        <files mask="iot_pki_utils_utest.c"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.mqtt.MIMXRT1024" name="AWS IoT mqtt" brief="AWS IoT mqtt" version="202007.00.0" full_name="AWS IoT mqtt" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-aws_iot.common.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.abstractions.platform.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.template.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="libraries/c_sdk/standard/mqtt/include" type="c_include">
        <files mask="iot_mqtt.h"/>
        <files mask="iot_mqtt_agent.h"/>
        <files mask="iot_mqtt_agent_config_defaults.h"/>
        <files mask="iot_mqtt_config_defaults.h"/>
        <files mask="iot_mqtt_lib.h"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/mqtt/include/types" type="src">
        <files mask="iot_mqtt_types.h"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/mqtt/src" type="src">
        <files mask="iot_mqtt_agent.c"/>
        <files mask="iot_mqtt_api.c"/>
        <files mask="iot_mqtt_network.c"/>
        <files mask="iot_mqtt_operation.c"/>
        <files mask="iot_mqtt_serialize.c"/>
        <files mask="iot_mqtt_static_memory.c"/>
        <files mask="iot_mqtt_subscription.c"/>
        <files mask="iot_mqtt_validate.c"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/mqtt/src/private" type="src">
        <files mask="iot_mqtt_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_freertos-aws_iot_mqtt_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/c_sdk/standard/mqtt/include" type="c_include"/>
        <include_path relative_path="libraries/c_sdk/standard/mqtt/include/types" type="c_include"/>
        <include_path relative_path="libraries/c_sdk/standard/mqtt/src/private" type="c_include"/>
        <include_path relative_path="libraries/c_sdk/standard/mqtt/src" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.network_manager.MIMXRT1024" name="AWS IoT network manager" brief="AWS IoT network manager" version="202007.00.0" full_name="AWS IoT network manager" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-aws_iot.common.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.demos.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.abstractions.platform.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.abstractions.wifi.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.template.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="demos/include" type="c_include">
        <files mask="aws_wifi_connect_task.h"/>
        <files mask="iot_ble_numericComparison.h"/>
      </source>
      <source relative_path="demos/network_manager" type="src">
        <files mask="aws_iot_network_manager.c"/>
      </source>
      <source relative_path="demos/network_manager" type="c_include">
        <files mask="iot_network_manager_private.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_freertos-aws_iot_network_manager_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="demos/include" type="c_include"/>
        <include_path relative_path="demos/network_manager" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.projects.vendor.MIMXRT1024" name="AWS IoT vendor project template" brief="AWS IoT vendor project template" version="202007.00.0" full_name="AWS IoT vendor project template" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="projects/vendor/board/ide/aws_demos" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <source relative_path="projects/vendor/board/ide/aws_tests" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <source relative_path="projects/vendor/board/visual_studio/aws_demos" type="other">
        <files mask="aws_demos.sln"/>
        <files mask="aws_demos.vcxproj"/>
        <files mask="aws_demos.vcxproj.filters"/>
      </source>
      <source relative_path="projects/vendor/board/visual_studio/aws_tests" type="other">
        <files mask="aws_tests.sln"/>
        <files mask="aws_tests.vcxproj"/>
        <files mask="aws_tests.vcxproj.filters"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.template.MIMXRT1024" name="FreeRTOS AWS IoT configuration template" brief="Template configuration file to be edited by user." version="202007.00.0" full_name="FreeRTOS AWS IoT configuration template" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="project_template" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="template/aws" type="c_include">
        <files mask="aws_bufferpool_config.h"/>
        <files mask="aws_clientcredential.h"/>
        <files mask="aws_clientcredential_keys.h"/>
        <files mask="aws_demo_config.h"/>
        <files mask="aws_ggd_config.h"/>
        <files mask="aws_iot_network_config.h"/>
        <files mask="aws_mqtt_config.h"/>
        <files mask="aws_ota_agent_config.h"/>
        <files mask="aws_secure_sockets_config.h"/>
        <files mask="aws_shadow_config.h"/>
        <files mask="aws_wifi_config.h"/>
        <files mask="FreeRTOSIPConfig.h"/>
        <files mask="iot_config.h"/>
        <files mask="iot_mqtt_agent_config.h"/>
        <files mask="iot_pkcs11_config.h"/>
        <files mask="iot_config_common.h"/>
      </source>
      <include_paths>
        <include_path relative_path="template/aws" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.tests.MIMXRT1024" name="AWS IoT tests" brief="AWS IoT tests" version="202007.00.0" full_name="AWS IoT tests" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/3rdparty/unity/extras/fixture/src" type="src">
        <files mask="unity_fixture.c"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/extras/fixture/src" type="c_include">
        <files mask="unity_fixture.h"/>
        <files mask="unity_fixture_internals.h"/>
        <files mask="unity_fixture_malloc_overrides.h"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/src" type="src">
        <files mask="unity.c"/>
      </source>
      <source relative_path="libraries/3rdparty/unity/src" type="c_include">
        <files mask="unity.h"/>
        <files mask="unity_internals.h"/>
      </source>
      <source relative_path="libraries/abstractions/pkcs11/test" type="src">
        <files mask="iot_test_pkcs11.c"/>
      </source>
      <source relative_path="libraries/abstractions/pkcs11/test" type="c_include">
        <files mask="iot_test_pkcs11_globals.h"/>
      </source>
      <source relative_path="libraries/abstractions/secure_sockets/test" type="src">
        <files mask="iot_test_tcp.c"/>
      </source>
      <source relative_path="libraries/abstractions/wifi/test" type="src">
        <files mask="iot_test_wifi.c"/>
      </source>
      <source relative_path="libraries/abstractions/wifi/test" type="c_include">
        <files mask="iot_test_wifi.h"/>
      </source>
      <source relative_path="libraries/c_sdk/aws/shadow/test" type="src">
        <files mask="aws_test_shadow.c"/>
      </source>
      <source relative_path="libraries/c_sdk/aws/shadow/test/system" type="src">
        <files mask="aws_iot_tests_shadow_system.c"/>
      </source>
      <source relative_path="libraries/c_sdk/aws/shadow/test/unit" type="src">
        <files mask="aws_iot_tests_shadow_api.c"/>
        <files mask="aws_iot_tests_shadow_parser.c"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/common/test" type="src">
        <files mask="iot_memory_leak.c"/>
        <files mask="iot_tests_taskpool.c"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/mqtt/test" type="src">
        <files mask="iot_test_mqtt_agent.c"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/mqtt/test/access" type="c_include">
        <files mask="iot_test_access_mqtt.h"/>
      </source>
      <source exclude="true" relative_path="libraries/c_sdk/standard/mqtt/test/access" type="src">
        <files mask="iot_test_access_mqtt_api.c"/>
        <files mask="iot_test_access_mqtt_subscription.c"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/mqtt/test/mock" type="src">
        <files mask="iot_tests_mqtt_mock.c"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/mqtt/test/mock" type="c_include">
        <files mask="iot_tests_mqtt_mock.h"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/mqtt/test/system" type="src">
        <files mask="iot_tests_mqtt_system.c"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/mqtt/test/unit" type="src">
        <files mask="iot_tests_mqtt_api.c"/>
        <files mask="iot_tests_mqtt_metrics.c"/>
        <files mask="iot_tests_mqtt_receive.c"/>
        <files mask="iot_tests_mqtt_subscription.c"/>
        <files mask="iot_tests_mqtt_validate.c"/>
      </source>
      <source relative_path="libraries/freertos_plus/aws/greengrass/test" type="c_include">
        <files mask="aws_greengrass_discovery_test_access_declare.h"/>
        <files mask="aws_greengrass_discovery_test_access_define.h"/>
      </source>
      <source relative_path="libraries/freertos_plus/aws/greengrass/test" type="src">
        <files mask="aws_test_helper_secure_connect.c"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/crypto/test" type="src">
        <files mask="iot_test_crypto.c"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/tls/test" type="src">
        <files mask="iot_test_tls.c"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/tls/test" type="c_include">
        <files mask="iot_test_tls.h"/>
      </source>
      <source relative_path="tests/common" type="src">
        <files mask="aws_test.c"/>
        <files mask="aws_test_framework.c"/>
        <files mask="aws_test_runner.c"/>
        <files mask="iot_test_freertos.c"/>
        <files mask="iot_tests_network.c"/>
      </source>
      <source relative_path="tests/include" type="c_include">
        <files mask="aws_application_version.h"/>
        <files mask="aws_clientcredential.h"/>
        <files mask="aws_clientcredential_keys.h"/>
        <files mask="aws_test_framework.h"/>
        <files mask="aws_test_runner.h"/>
        <files mask="aws_test_tcp.h"/>
        <files mask="aws_test_utils.h"/>
        <files mask="aws_unity_config.h"/>
        <files mask="iot_config_common.h"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/3rdparty/unity/extras/fixture/src" type="c_include"/>
        <include_path relative_path="libraries/3rdparty/unity/src" type="c_include"/>
        <include_path relative_path="libraries/abstractions/pkcs11/test" type="c_include"/>
        <include_path relative_path="libraries/abstractions/wifi/test" type="c_include"/>
        <include_path relative_path="libraries/c_sdk/standard/mqtt/test/access" type="c_include"/>
        <include_path relative_path="libraries/c_sdk/standard/mqtt/test/mock" type="c_include"/>
        <include_path relative_path="libraries/freertos_plus/aws/greengrass/test" type="c_include"/>
        <include_path relative_path="libraries/freertos_plus/standard/tls/test" type="c_include"/>
        <include_path relative_path="tests/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.tests.bleTestsScripts.MIMXRT1024" name="AWS IoT bleTestsScripts" brief="AWS IoT bleTestsScripts" version="202007.00.0" full_name="AWS IoT bleTestsScripts" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/abstractions/ble_hal/test/ble_test_scipts" type="script">
        <files mask="attributesCommon.py"/>
        <files mask="bleAdapter.py"/>
        <files mask="gattClient.py"/>
        <files mask="runPI.sh"/>
        <files mask="securityAgent.py"/>
        <files mask="startTests_afqp.py"/>
        <files mask="startTests_integration.py"/>
        <files mask="startTests_kpi.py"/>
        <files mask="startTests_stress.py"/>
        <files mask="test1.py"/>
        <files mask="testClass.py"/>
        <files mask="testutils.py"/>
      </source>
      <source relative_path="libraries/abstractions/ble_hal/test/include" type="c_include">
        <files mask="iot_test_ble_hal_afqp.h"/>
        <files mask="iot_test_ble_hal_common.h"/>
        <files mask="iot_test_ble_hal_config_defaults.h"/>
        <files mask="iot_test_ble_hal_integration.h"/>
        <files mask="iot_test_ble_hal_kpi.h"/>
        <files mask="iot_test_ble_hal_stress_test.h"/>
      </source>
      <source relative_path="libraries/abstractions/ble_hal/test/src" type="src">
        <files mask="iot_test_ble_hal_afqp.c"/>
        <files mask="iot_test_ble_hal_common.c"/>
        <files mask="iot_test_ble_hal_integration.c"/>
        <files mask="iot_test_ble_hal_kpi.c"/>
        <files mask="iot_test_ble_hal_stress_test.c"/>
      </source>
      <include_paths>
        <include_path relative_path="libraries/abstractions/ble_hal/test/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.tests_unused.MIMXRT1024" name="AWS IoT tests unused" brief="AWS IoT tests unused" version="202007.00.0" full_name="AWS IoT tests unused" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="tests/unit_test/linux" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="tests/unit_test/linux" type="other">
        <files mask="README.md"/>
      </source>
      <source relative_path="tests/unit_test/linux/config_files" type="c_include">
        <files mask="aws_secure_sockets_config.h"/>
        <files mask="aws_wifi_config.h"/>
        <files mask="config.h"/>
        <files mask="FreeRTOSConfig.h"/>
        <files mask="iot_ble_config.h"/>
        <files mask="iot_config.h"/>
        <files mask="iot_config_common.h"/>
        <files mask="iot_pkcs11_config.h"/>
        <files mask="portableDefs.h"/>
        <files mask="portmacro.h"/>
        <files mask="trcConfig.h"/>
        <files mask="trcSnapshotConfig.h"/>
      </source>
      <source relative_path="tests/unit_test/linux/utils" type="c_include">
        <files mask="iot_atomic.h"/>
        <files mask="task_control.h"/>
        <files mask="wait_for_event.h"/>
      </source>
      <source relative_path="tests/unit_test/linux/utils" type="src">
        <files mask="task_control.c"/>
        <files mask="wait_for_event.c"/>
      </source>
      <include_paths>
        <include_path relative_path="tests/unit_test/linux/config_files" type="c_include"/>
        <include_path relative_path="tests/unit_test/linux/utils" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.tools.MIMXRT1024" name="AWS IoT tools" brief="AWS IoT tools" version="202007.00.0" full_name="AWS IoT tools" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="tools" type="other">
        <files mask="uncrustify.cfg"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.tools.aws_config_quick_start.MIMXRT1024" name="AWS IoT aws_config_quick_start" brief="AWS IoT aws_config_quick_start" version="202007.00.0" full_name="AWS IoT aws_config_quick_start" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="tools/aws_config_quick_start" type="other">
        <files mask="aws_clientcredential.templ"/>
        <files mask="aws_clientcredential_keys.templ"/>
        <files mask="configure.json"/>
        <files mask="policy_document.templ"/>
        <files mask="README.md"/>
      </source>
      <source relative_path="tools/aws_config_quick_start" type="script">
        <files mask="certs.py"/>
        <files mask="misc.py"/>
        <files mask="policy.py"/>
        <files mask="SetupAWS.py"/>
        <files mask="thing.py"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.tools.certificate_configuration.MIMXRT1024" name="AWS IoT certificate configuration" brief="AWS IoT certificate configuration" version="202007.00.0" full_name="AWS IoT certificate configuration" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="tools/certificate_configuration" type="doc">
        <files mask="CertificateConfigurator.html"/>
        <files mask="PEMfileToCString.html"/>
      </source>
      <source relative_path="tools/certificate_configuration/js" type="script">
        <files mask="generator.js"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.tools.checks.afqp.MIMXRT1024" name="AWS IoT afqp" brief="AWS IoT afqp" version="202007.00.0" full_name="AWS IoT afqp" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="tools/checks/afqp/afqp_check" type="other">
        <files mask="license.templ"/>
        <files mask="README.md"/>
        <files mask="rules.json"/>
        <files mask="setup.cfg"/>
      </source>
      <source relative_path="tools/checks/afqp/afqp_check/src" type="script">
        <files mask="__init__.py"/>
        <files mask="afqp_check.py"/>
      </source>
      <source relative_path="tools/checks/afqp/afqp_check/tst" type="other">
        <files mask=".cproject_compliant"/>
        <files mask=".cproject_four_different_roots"/>
        <files mask=".project_compliant"/>
        <files mask=".project_invalid_project_name"/>
        <files mask=".project_multiple_roots"/>
        <files mask=".project_seven_missing_locationURI"/>
      </source>
      <source relative_path="tools/checks/afqp/afqp_check/tst" type="c_include">
        <files mask="license_test_0.h"/>
        <files mask="license_test_1.h"/>
        <files mask="license_test_unmatching.h"/>
        <files mask="missing_platform_name.h"/>
      </source>
      <source relative_path="tools/checks/afqp/afqp_check/tst" type="script">
        <files mask="test_afqp_check.py"/>
      </source>
      <include_paths>
        <include_path relative_path="tools/checks/afqp/afqp_check/tst" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-aws_iot.tools.checks.style.MIMXRT1024" name="AWS IoT check style" brief="AWS IoT check style" version="202007.00.0" full_name="AWS IoT check style" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="tools/checks/style/hn_check" type="other">
        <files mask="readme.md"/>
        <files mask="setup.cfg"/>
      </source>
      <source relative_path="tools/checks/style/hn_check/src" type="script">
        <files mask="__init__.py"/>
        <files mask="hn_check.py"/>
      </source>
      <source relative_path="tools/checks/style/hn_check/test" type="src">
        <files mask="source_file.c"/>
      </source>
      <source relative_path="tools/checks/style/hn_check/test" type="script">
        <files mask="test_hn_check.py"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.tools.cmake.MIMXRT1024" name="AWS IoT cmake" brief="AWS IoT cmake" version="202007.00.0" full_name="AWS IoT cmake" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="tools/cmake" type="script">
        <files mask="cbmc_recipes.cmake"/>
        <files mask="afr.cmake"/>
        <files mask="afr_board_paths.cmake"/>
        <files mask="afr_metadata.cmake"/>
        <files mask="afr_module.cmake"/>
        <files mask="afr_utils.cmake"/>
      </source>
      <source relative_path="tools/cmake/doc/img" type="image">
        <files mask="cmake-1.png"/>
        <files mask="cmake-2.png"/>
        <files mask="cmake-3.png"/>
      </source>
      <source relative_path="tools/cmake/doc" type="other">
        <files mask="porting_guide.md"/>
      </source>
      <source relative_path="tools/cmake" type="other">
        <files mask="README.md"/>
      </source>
      <source relative_path="tools/cmake/toolchains" type="script">
        <files mask="cbmc.cmake"/>
        <files mask="linux-gcc.cmake"/>
        <files mask="arm-armclang.cmake"/>
        <files mask="arm-gcc.cmake"/>
        <files mask="arm-iar.cmake"/>
        <files mask="arm-keil.cmake"/>
        <files mask="arm-segger.cmake"/>
        <files mask="arm-ti.cmake"/>
        <files mask="cc-rx.cmake"/>
        <files mask="find_compiler.cmake"/>
        <files mask="msvc.cmake"/>
        <files mask="xc32.cmake"/>
        <files mask="xtensa-esp32.cmake"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.tools.echo_server.MIMXRT1024" name="AWS IoT echo server" brief="AWS IoT echo server" version="202007.00.0" full_name="AWS IoT echo server" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="tools/echo_server" type="other">
        <files mask="config.json"/>
        <files mask="readme.md"/>
        <files mask="echo_server.go"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.tools.git.MIMXRT1024" name="AWS IoT git hooks" brief="AWS IoT git hooks" version="202007.00.0" full_name="AWS IoT git hooks" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="tools/git/hooks" type="other">
        <files mask="install_hooks.ps1"/>
        <files mask="README.md"/>
        <files mask="setup.cfg"/>
      </source>
      <source relative_path="tools/git/hooks" type="script">
        <files mask="install_hooks.sh"/>
      </source>
      <source relative_path="tools/git/hooks/src" type="script">
        <files mask="__init__.py"/>
        <files mask="commit_msg.py"/>
        <files mask="pre_commit.py"/>
      </source>
      <source relative_path="tools/git/hooks/test" type="other">
        <files mask="bad_label.md"/>
        <files mask="long_body_line.md"/>
        <files mask="long_subject.md"/>
        <files mask="merge_commit.md"/>
        <files mask="no_sep.md"/>
        <files mask="valid_commit.md"/>
      </source>
      <source relative_path="tools/git/hooks/test" type="src">
        <files mask="clean.c"/>
        <files mask="unformatted.c"/>
      </source>
      <source relative_path="tools/git/hooks/test" type="script">
        <files mask="test_commit_msg.py"/>
        <files mask="test_pre_commit.py"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.tools.ota_e2e_tests.MIMXRT1024" name="AWS IoT ota e2e tests" brief="AWS IoT ota e2e tests" version="202007.00.0" full_name="AWS IoT ota e2e tests" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="tools/ota_e2e_tests/aws_ota_test" type="script">
        <files mask="__init__.py"/>
        <files mask="aws_flash_serial_comm.py"/>
        <files mask="aws_ota_aws_agent.py"/>
        <files mask="aws_ota_project.py"/>
        <files mask="aws_ota_test_case.py"/>
        <files mask="aws_ota_test_case_2_updates_cancel_1st.py"/>
        <files mask="aws_ota_test_case_back_to_back_downloads.py"/>
        <files mask="aws_ota_test_case_back_to_back_switch_protocol.py"/>
        <files mask="aws_ota_test_case_cancel_then_update.py"/>
        <files mask="aws_ota_test_case_default_data_protocol.py"/>
        <files mask="aws_ota_test_case_disconnect_cancel_update.py"/>
        <files mask="aws_ota_test_case_disconnect_resume.py"/>
        <files mask="aws_ota_test_case_dummy_test.py"/>
        <files mask="aws_ota_test_case_factory.py"/>
        <files mask="aws_ota_test_case_greater_version.py"/>
        <files mask="aws_ota_test_case_greater_version_max_block_config.py"/>
        <files mask="aws_ota_test_case_greater_version_min_block_config.py"/>
        <files mask="aws_ota_test_case_incorrect_platform.py"/>
        <files mask="aws_ota_test_case_missing_filename.py"/>
        <files mask="aws_ota_test_case_presigned_url_expired.py"/>
        <files mask="aws_ota_test_case_previous_version.py"/>
        <files mask="aws_ota_test_case_rollback_if_unable_to_connect_after_update.py"/>
        <files mask="aws_ota_test_case_same_version.py"/>
        <files mask="aws_ota_test_case_single_byte_image.py"/>
        <files mask="aws_ota_test_case_unsigned_image.py"/>
        <files mask="aws_ota_test_case_untrusted_certificate.py"/>
        <files mask="aws_ota_test_main.py"/>
        <files mask="aws_ota_test_result.py"/>
        <files mask="aws_ota_test_runner.py"/>
      </source>
      <source relative_path="tools/ota_e2e_tests" type="other">
        <files mask="board.json"/>
        <files mask="poetry.lock"/>
        <files mask="pyproject.toml"/>
        <files mask="README.md"/>
      </source>
      <source relative_path="tools/ota_e2e_tests/credentials" type="other">
        <files mask="untrusted-ecdsa-sha256-signer.crt.pem"/>
        <files mask="untrusted-ecdsa-sha256-signer.key.pem"/>
        <files mask="untrusted-rsa-sha256-signer.crt.pem"/>
        <files mask="untrusted-rsa-sha256-signer.key.pem"/>
      </source>
      <source relative_path="tools/ota_e2e_tests" type="script">
        <files mask="ota_e2e.py"/>
      </source>
      <source relative_path="tools/ota_e2e_tests" type="doc">
        <files mask="requirements.txt"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.unused.MIMXRT1024" name="AWS IoT unused" brief="AWS IoT unused" version="1.0.0" full_name="AWS IoT unused" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="libraries/3rdparty" type="other">
        <files mask=".clang-format"/>
      </source>
      <source relative_path="libraries/3rdparty" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/abstractions/pkcs11" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/abstractions/pkcs11" type="other">
        <files mask="ReadMe.md"/>
      </source>
      <source relative_path="libraries/abstractions/platform" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/abstractions/platform/test" type="src">
        <files mask="iot_test_platform_clock.c"/>
        <files mask="iot_test_platform_threads.c"/>
      </source>
      <source relative_path="libraries/abstractions/secure_sockets" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/abstractions/secure_sockets/freertos_plus_tcp" type="src">
        <files mask="iot_secure_sockets.c"/>
      </source>
      <source relative_path="libraries/abstractions/secure_sockets/lwip" type="src">
        <files mask="iot_secure_sockets.c"/>
      </source>
      <source relative_path="libraries/abstractions/wifi" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/c_sdk/aws/shadow" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/common" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/mqtt" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/mqtt/src" type="src">
        <files mask="iot_ble_mqtt_serialize.c"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/mqtt/test/unit" type="src">
        <files mask="iot_tests_mqtt_serialize_ble.c"/>
      </source>
      <source relative_path="libraries/c_sdk/standard/serializer" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/freertos_plus/aws/greengrass" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/crypto" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/pkcs11" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/tls" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="libraries/freertos_plus/standard/utils" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="tests" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="vendors" type="doc">
        <files mask="directories.txt"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.vendor.nxp.ota.evkmimxrt1060.MIMXRT1024" name="OTA PAL for EVKMIMXRT1060" brief="OTA PAL for EVKMIMXRT1060" version="202007.00.0" full_name="OTA PAL for EVKMIMXRT1060" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-aws_iot.libraries.freertos_plus.aws.ota.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.freertos_plus.standard.crypto.MIMXRT1024"/>
          <component_dependency value="component.mflash_file.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.demos.MIMXRT1024"/>
          <component_dependency value="platform.drivers.common.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="vendors/nxp/ota/evkmimxrt1060" type="src">
        <files mask="aws_ota_pal.c"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.vendor.nxp.ota.evkmimxrt685.MIMXRT1024" name="OTA PAL for EVKMIMXRT685" brief="OTA PAL for EVKMIMXRT685" version="202007.00.0" full_name="OTA PAL for EVKMIMXRT685" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-aws_iot.libraries.freertos_plus.aws.ota.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.freertos_plus.standard.crypto.MIMXRT1024"/>
          <component_dependency value="component.mflash_file.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.demos.MIMXRT1024"/>
          <component_dependency value="platform.drivers.common.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="vendors/nxp/ota/evkmimxrt685" type="src">
        <files mask="aws_ota_pal.c"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.vendor.nxp.pkcs11.MIMXRT1024" name="AWS IoT pkcs11 PAL" brief="AWS IoT pkcs11 PAL" version="1.0.0" full_name="AWS IoT pkcs11 PAL" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="AWS IoT/AWS porting layer - key storage" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-aws_iot.template.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.freertos_plus.standard.crypto.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.freertos_plus.standard.pkcs11.MIMXRT1024"/>
          <component_dependency value="component.mflash_file.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="vendors/nxp/pkcs11/common" type="src">
        <files mask="iot_pkcs11_pal.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_freertos-aws_iot_vendor_nxp_pkcs11_MIMXRT1024.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.vendor.nxp.secure_sockets.lwip.MIMXRT1024" name="AWS IoT secure sockets lwip" brief="AWS IoT secure sockets lwip" version="1.0.0" full_name="AWS IoT secure sockets lwip" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="AWS IoT/AWS porting layer - secure sockets" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-aws_iot.libraries.abstractions.secure_sockets.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-aws_iot.libraries.freertos_plus.standard.tls.MIMXRT1024"/>
          <component_dependency value="middleware.lwip.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="vendors/nxp/secure_sockets/lwip" type="src">
        <files mask="iot_secure_sockets.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_freertos-aws_iot_vendor_nxp_secure_sockets_lwip_MIMXRT1024.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.vendor.nxp.wifi.wiced.MIMXRT1024" name="AWS IoT Wi-Fi WICED" brief="AWS IoT Wi-Fi over WICED (modul Wireless Internet Connectivity for Embedded Devices)" version="1.0.0" full_name="AWS IoT Wi-Fi WICED" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="AWS IoT/AWS porting layer - wifi" user_visible="true" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-aws_iot.libraries.abstractions.wifi.MIMXRT1024"/>
          <component_dependency value="middleware.wifi_wiced.MIMXRT1024"/>
          <component_dependency value="middleware.lwip.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="vendors/nxp/wifi/wiced" type="src">
        <files mask="iot_wifi.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_freertos-aws_iot_vendor_nxp_wifi_wiced_MIMXRT1024.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-aws_iot.vendors.vendor.MIMXRT1024" name="AWS IoT vendor board template" brief="AWS IoT vendor board template" version="202007.00.0" full_name="AWS IoT vendor board template" devices="MIMXRT1024xxxxx" category="AWS IoT/AWS common libraries" user_visible="false" type="middleware" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="vendors/vendor/boards/board/aws_demos/application_code" type="src">
        <files mask="main.c"/>
      </source>
      <source relative_path="vendors/vendor/boards/board/aws_demos/application_code/vendor_code" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <source relative_path="vendors/vendor/boards/board/aws_demos/config_files" type="c_include">
        <files mask="aws_bufferpool_config.h"/>
        <files mask="aws_demo_config.h"/>
        <files mask="aws_ggd_config.h"/>
        <files mask="aws_mqtt_config.h"/>
        <files mask="aws_ota_agent_config.h"/>
        <files mask="aws_secure_sockets_config.h"/>
        <files mask="aws_shadow_config.h"/>
        <files mask="aws_wifi_config.h"/>
        <files mask="FreeRTOSConfig.h"/>
        <files mask="FreeRTOSIPConfig.h"/>
        <files mask="iot_mqtt_agent_config.h"/>
        <files mask="iot_pkcs11_config.h"/>
        <files mask="trcConfig.h"/>
        <files mask="trcSnapshotConfig.h"/>
      </source>
      <source relative_path="vendors/vendor/boards/board/aws_tests/application_code" type="src">
        <files mask="main.c"/>
      </source>
      <source relative_path="vendors/vendor/boards/board/aws_tests/application_code/vendor_code" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <source relative_path="vendors/vendor/boards/board/aws_tests/config_files" type="c_include">
        <files mask="aws_bufferpool_config.h"/>
        <files mask="aws_ggd_config.h"/>
        <files mask="aws_mqtt_config.h"/>
        <files mask="aws_ota_agent_config.h"/>
        <files mask="aws_secure_sockets_config.h"/>
        <files mask="aws_shadow_config.h"/>
        <files mask="aws_test_ota_config.h"/>
        <files mask="aws_test_runner_config.h"/>
        <files mask="aws_test_tcp_config.h"/>
        <files mask="aws_test_wifi_config.h"/>
        <files mask="aws_wifi_config.h"/>
        <files mask="FreeRTOSConfig.h"/>
        <files mask="FreeRTOSIPConfig.h"/>
        <files mask="iot_mqtt_agent_config.h"/>
        <files mask="iot_pkcs11_config.h"/>
        <files mask="iot_test_pkcs11_config.h"/>
        <files mask="trcConfig.h"/>
        <files mask="trcSnapshotConfig.h"/>
        <files mask="unity_config.h"/>
      </source>
      <source relative_path="vendors/vendor/boards/board" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="vendors/vendor/boards/board/ports/ota" type="src">
        <files mask="aws_ota_pal.c"/>
      </source>
      <source relative_path="vendors/vendor/boards/board/ports/pkcs11" type="src">
        <files mask="iot_pkcs11_pal.c"/>
      </source>
      <source relative_path="vendors/vendor/boards/board/ports/secure_sockets" type="src">
        <files mask="iot_secure_sockets.c"/>
      </source>
      <source relative_path="vendors/vendor/boards/board/ports/wifi" type="src">
        <files mask="iot_wifi.c"/>
      </source>
      <source relative_path="vendors/vendor/driver_library/driver_library_version" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <source relative_path="vendors/vendor" type="script">
        <files mask="manifest.cmake"/>
      </source>
      <include_paths>
        <include_path relative_path="vendors/vendor/boards/board/aws_demos/config_files" type="c_include"/>
        <include_path relative_path="vendors/vendor/boards/board/aws_tests/config_files" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.MIMXRT1024" name="FreeRTOS kernel" brief="FreeRTOS kernel" version="202007.00.0" full_name="FreeRTOS kernel" devices="MIMXRT1024xxxxx" user_visible="true" type="OS" package_base_path="rtos/freertos" project_base_path="freertos">
      <defines>
        <define name="FSL_RTOS_FREE_RTOS" value=""/>
        <define name="SDK_OS_FREE_RTOS" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.extension.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-kernel.template.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="freertos_kernel" type="src">
        <files mask="event_groups.c"/>
        <files mask="croutine.c"/>
        <files mask="list.c"/>
        <files mask="queue.c"/>
        <files mask="stream_buffer.c"/>
        <files mask="tasks.c"/>
        <files mask="timers.c"/>
      </source>
      <source relative_path="freertos_kernel/include" type="c_include">
        <files mask="croutine.h"/>
        <files mask="StackMacros.h"/>
        <files mask="atomic.h"/>
        <files mask="deprecated_definitions.h"/>
        <files mask="event_groups.h"/>
        <files mask="FreeRTOS.h"/>
        <files mask="list.h"/>
        <files mask="message_buffer.h"/>
        <files mask="mpu_prototypes.h"/>
        <files mask="mpu_wrappers.h"/>
        <files mask="portable.h"/>
        <files mask="projdefs.h"/>
        <files mask="queue.h"/>
        <files mask="semphr.h"/>
        <files mask="stack_macros.h"/>
        <files mask="stream_buffer.h"/>
        <files mask="task.h"/>
        <files mask="timers.h"/>
      </source>
      <source toolchain="armgcc mcuxpresso mdk" compiler="compiler_armclang compiler_gcc" relative_path="freertos_kernel/portable/GCC/ARM_CM4F" type="src" device_cores="core0_MIMXRT1024xxxxx">
        <files mask="port.c"/>
      </source>
      <source toolchain="armgcc mcuxpresso mdk" compiler="compiler_armclang compiler_gcc" relative_path="freertos_kernel/portable/GCC/ARM_CM4F" type="c_include" device_cores="core0_MIMXRT1024xxxxx">
        <files mask="portmacro.h"/>
      </source>
      <source toolchain="iar" relative_path="freertos_kernel/portable/IAR/ARM_CM4F" type="src" device_cores="core0_MIMXRT1024xxxxx">
        <files mask="port.c"/>
      </source>
      <source toolchain="iar" relative_path="freertos_kernel/portable/IAR/ARM_CM4F" type="asm_include" device_cores="core0_MIMXRT1024xxxxx">
        <files mask="portasm.s"/>
      </source>
      <source toolchain="iar" relative_path="freertos_kernel/portable/IAR/ARM_CM4F" type="c_include" device_cores="core0_MIMXRT1024xxxxx">
        <files mask="portmacro.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/MemMang" type="other">
        <files mask="ReadMe.url"/>
      </source>
      <source relative_path="freertos_kernel/portable" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_freertos-kernel_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="freertos_kernel/include" type="c_include"/>
        <include_path relative_path="freertos_kernel/portable/GCC/ARM_CM4F" toolchain="armgcc mcuxpresso mdk" type="c_include" device_cores="core0_MIMXRT1024xxxxx"/>
        <include_path relative_path="freertos_kernel/portable/IAR/ARM_CM4F" toolchain="iar" type="c_include" device_cores="core0_MIMXRT1024xxxxx"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.armv8m.MIMXRT1024" name="FreeRTOS port ARMv8M" brief="FreeRTOS port ARMv8M" version="202007.00.0" full_name="FreeRTOS port ARMv8M" devices="MIMXRT1024xxxxx" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MIMXRT1024"/>
      </dependencies>
      <source relative_path="freertos_kernel/portable/ARMv8M" type="script">
        <files mask="copy_files.py"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure" type="src">
        <files mask="port.c"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/GCC/ARM_CM33" type="src">
        <files mask="portasm.c"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/GCC/ARM_CM33" type="c_include">
        <files mask="portmacro.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/GCC/ARM_CM33_NTZ" type="src">
        <files mask="portasm.c"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/GCC/ARM_CM33_NTZ" type="c_include">
        <files mask="portmacro.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/IAR/ARM_CM33" type="asm_include">
        <files mask="portasm.s"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/IAR/ARM_CM33" type="c_include">
        <files mask="portmacro.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/IAR/ARM_CM33_NTZ" type="asm_include">
        <files mask="portasm.s"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/IAR/ARM_CM33_NTZ" type="c_include">
        <files mask="portmacro.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure" type="c_include">
        <files mask="portasm.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/non_secure" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/context/portable/GCC/ARM_CM33" type="src">
        <files mask="secure_context_port.c"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/context/portable/IAR/ARM_CM33" type="src">
        <files mask="secure_context_port.c"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/context/portable/IAR/ARM_CM33" type="asm_include">
        <files mask="secure_context_port_asm.s"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/context" type="src">
        <files mask="secure_context.c"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/context" type="c_include">
        <files mask="secure_context.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/heap" type="src">
        <files mask="secure_heap.c"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/heap" type="c_include">
        <files mask="secure_heap.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/init" type="src">
        <files mask="secure_init.c"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/init" type="c_include">
        <files mask="secure_init.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure/macros" type="c_include">
        <files mask="secure_port_macros.h"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMv8M/secure" type="doc">
        <files mask="ReadMe.txt"/>
      </source>
      <include_paths>
        <include_path relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/GCC/ARM_CM33" type="c_include"/>
        <include_path relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/GCC/ARM_CM33_NTZ" type="c_include"/>
        <include_path relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/IAR/ARM_CM33" type="c_include"/>
        <include_path relative_path="freertos_kernel/portable/ARMv8M/non_secure/portable/IAR/ARM_CM33_NTZ" type="c_include"/>
        <include_path relative_path="freertos_kernel/portable/ARMv8M/non_secure" type="c_include"/>
        <include_path relative_path="freertos_kernel/portable/ARMv8M/secure/context" type="c_include"/>
        <include_path relative_path="freertos_kernel/portable/ARMv8M/secure/heap" type="c_include"/>
        <include_path relative_path="freertos_kernel/portable/ARMv8M/secure/init" type="c_include"/>
        <include_path relative_path="freertos_kernel/portable/ARMv8M/secure/macros" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.doc.MIMXRT1024" name="FreeRTOS doc" brief="FreeRTOS doc" version="202007.00.0" full_name="FreeRTOS doc" devices="MIMXRT1024xxxxx" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="doc" type="doc">
        <files mask="AFQ Developer Guide - Board Qualification Errata.pdf"/>
        <files mask="Amazon FreeRTOS Qualification Developer Guide.pdf"/>
        <files mask="mainpage.txt"/>
      </source>
      <source relative_path="doc/config" type="other">
        <files mask="ble"/>
        <files mask="common"/>
        <files mask="https"/>
        <files mask="main"/>
        <files mask="ota"/>
        <files mask="platform"/>
        <files mask="posix"/>
        <files mask="pkcs11"/>
        <files mask="secure_sockets"/>
        <files mask="wifi"/>
      </source>
      <source relative_path="doc/config/html" type="doc">
        <files mask="footer.html"/>
        <files mask="header.html"/>
        <files mask="style.css"/>
      </source>
      <source relative_path="doc/config" type="xml">
        <files mask="layout_library.xml"/>
        <files mask="layout_main.xml"/>
      </source>
      <source relative_path="doc/freertos_port_qual" type="doc">
        <files mask="FreeRTOS_Porting_Guide.pdf"/>
        <files mask="FreeRTOS_Qualification_Guide.pdf"/>
      </source>
      <source relative_path="doc" type="other">
        <files mask="guidance.md"/>
        <files mask="README.md"/>
      </source>
      <source relative_path="doc/guide" type="doc">
        <files mask="building.txt"/>
        <files mask="developer.txt"/>
        <files mask="style.txt"/>
      </source>
      <source relative_path="doc/lib" type="doc">
        <files mask="ble.txt"/>
        <files mask="https.txt"/>
        <files mask="platform.txt"/>
        <files mask="pkcs11.txt"/>
        <files mask="secure_sockets.txt"/>
        <files mask="wifi.txt"/>
        <files mask="posix.txt"/>
      </source>
      <source relative_path="doc/plantuml/images" type="image">
        <files mask="BLE-architecture.png"/>
        <files mask="blediagram.png"/>
        <files mask="mqtt_demo.png"/>
        <files mask="mqtt_design_typicaloperation.png"/>
        <files mask="RecyclableJobStatus.png"/>
        <files mask="StaticJobStatus.png"/>
        <files mask="taskpool_design_typicaloperation.png"/>
        <files mask="https_client_async_callback_order.png"/>
        <files mask="https_client_async_workflow.png"/>
        <files mask="https_client_sync_workflow.png"/>
        <files mask="shadow_demo.png"/>
      </source>
      <source relative_path="doc/plantuml" type="other">
        <files mask="RecyclableJobStatus.pu"/>
        <files mask="StaticJobStatus.pu"/>
        <files mask="taskpool_design_typicaloperation.pu"/>
        <files mask="https_client_async_callback_order.pu"/>
      </source>
      <source relative_path="doc/plantuml" type="xml">
        <files mask="https_client_async_workflow.xml"/>
        <files mask="https_client_sync_workflow.xml"/>
      </source>
      <source relative_path="doc/user_guide" type="doc">
        <files mask="global_config.txt"/>
      </source>
      <source relative_path="doc/extra_files/https" type="doc">
        <files mask="gettysburg.txt"/>
      </source>
      <source relative_path="doc" type="script">
        <files mask="generate_doc.sh"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.extension.MIMXRT1024" name="FreeRTOS NXP extension" brief="FreeRTOS NXP extension" version="202007.00.0" full_name="FreeRTOS NXP extension" devices="MIMXRT1024xxxxx" category="Operating System/FreeRTOS kernel extensions" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="freertos_kernel/include" type="c_include">
        <files mask="freertos_tasks_c_additions.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_freertos-kernel_extension_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="freertos_kernel/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.heap_1.MIMXRT1024" name="FreeRTOS heap 1" brief="FreeRTOS heap 1" version="202007.00.0" full_name="FreeRTOS heap 1" devices="MIMXRT1024xxxxx" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MIMXRT1024"/>
      </dependencies>
      <source relative_path="freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_1.c"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_2.MIMXRT1024" name="FreeRTOS heap 2" brief="FreeRTOS heap 2" version="202007.00.0" full_name="FreeRTOS heap 2" devices="MIMXRT1024xxxxx" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MIMXRT1024"/>
      </dependencies>
      <source relative_path="freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_2.c"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_3.MIMXRT1024" name="FreeRTOS heap 3" brief="FreeRTOS heap 3" version="202007.00.0" full_name="FreeRTOS heap_3" devices="MIMXRT1024xxxxx" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MIMXRT1024"/>
      </dependencies>
      <source relative_path="freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_3.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_freertos-kernel_heap_3_MIMXRT1024.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_4.MIMXRT1024" name="FreeRTOS heap 4" brief="FreeRTOS heap 4" version="202007.00.0" full_name="FreeRTOS heap 4" devices="MIMXRT1024xxxxx" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MIMXRT1024"/>
      </dependencies>
      <source relative_path="freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_4.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_freertos-kernel_heap_4_MIMXRT1024.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_5.MIMXRT1024" name="FreeRTOS heap 5" brief="FreeRTOS heap 5" version="202007.00.0" full_name="FreeRTOS heap 5" devices="MIMXRT1024xxxxx" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MIMXRT1024"/>
      </dependencies>
      <source relative_path="freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_5.c"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_newlib.MIMXRT1024" name="FreeRTOS heap newlib" brief="FreeRTOS heap newlib" version="202007.00.0" full_name="FreeRTOS heap newlib" devices="MIMXRT1024xxxxx" category="Operating System/FreeRTOS kernel extensions" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MIMXRT1024"/>
      </dependencies>
      <source relative_path="freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_useNewlib.c"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.mpu_wrappers.MIMXRT1024" name="FreeRTOS MPU wrappers" brief="FreeRTOS MPU wrappers" version="202007.00.0" full_name="FreeRTOS MPU wrappers" devices="MIMXRT1024xxxxx" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <dependencies>
        <component_dependency value="middleware.freertos-kernel.MIMXRT1024"/>
      </dependencies>
      <source relative_path="freertos_kernel/portable/Common" type="src">
        <files mask="mpu_wrappers.c"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.root_doc.MIMXRT1024" name="Root FreeRTOS documents." brief="FreeRTOS root documents" version="202007.00.0" full_name="FreeRTOS root documents" devices="MIMXRT1024xxxxx" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="./" type="other">
        <files mask="CHANGELOG.md"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="directories.txt"/>
        <files mask="ChangeLogKSDK.txt"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.template.MIMXRT1024" name="FreeRTOS configuration template" brief="Template configuration file to be edited by user. Provides also memory allocator (heap_x), change variant if needed." version="202007.00.0" full_name="FreeRTOS configuration template" devices="MIMXRT1024xxxxx" category="Operating System/FreeRTOS kernel" user_visible="false" type="project_template" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="template/ARM_CM4F" type="c_include" device_cores="core0_MIMXRT1024xxxxx">
        <files mask="FreeRTOSConfig.h"/>
      </source>
      <source exclude="true" relative_path="freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_1.c"/>
        <files mask="heap_2.c"/>
        <files mask="heap_3.c"/>
        <files mask="heap_5.c"/>
        <files mask="heap_useNewlib.c"/>
      </source>
      <source relative_path="freertos_kernel/portable/MemMang" type="src">
        <files mask="heap_4.c"/>
      </source>
      <include_paths>
        <include_path relative_path="template/ARM_CM4F" type="c_include" device_cores="core0_MIMXRT1024xxxxx"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.unused.MIMXRT1024" name="FreeRTOS unused" brief="FreeRTOS unused" version="202007.00.0" full_name="FreeRTOS unused" devices="MIMXRT1024xxxxx" category="Operating System/FreeRTOS kernel" user_visible="false" type="other" package_base_path="rtos/freertos" project_base_path="freertos">
      <source relative_path="./" type="other">
        <files mask="LICENSE"/>
        <files mask="README.md"/>
      </source>
      <source relative_path="./" type="script">
        <files mask="PreLoad.cmake"/>
      </source>
      <source relative_path="freertos_kernel" type="doc">
        <files mask="History.txt"/>
        <files mask="readme.txt"/>
      </source>
      <source relative_path="freertos_kernel" type="other">
        <files mask="Quick_Start_Guide.url"/>
      </source>
      <source relative_path="freertos_kernel/include" type="doc">
        <files mask="stdint.readme"/>
      </source>
      <source relative_path="freertos_kernel/License" type="doc">
        <files mask="license.txt"/>
      </source>
      <source relative_path="freertos_kernel/portable/ARMClang" type="doc">
        <files mask="Use-the-GCC-ports.txt"/>
      </source>
    </component>
    <component id="middleware.issdk.drivers.gpio_imx.MIMXRT1024" name="gpio_imx" brief="ISSDK GPIO Driver for i.MXRT10xx" version="1.7.0" full_name="Middleware issdk drivers gpio_imx" devices="MIMXRT1024xxxxx" user_visible="false" type="middleware" package_base_path="middleware/issdk" project_base_path="gpio_driver">
      <source relative_path="drivers/gpio/i.mx" project_relative_path="./" type="src">
        <files mask="gpio_driver_irq.c"/>
        <files mask="gpio_driver.c"/>
      </source>
      <source relative_path="drivers/gpio/i.mx" project_relative_path="./" type="c_include">
        <files mask="gpio_driver.h"/>
      </source>
      <source relative_path="drivers/gpio" project_relative_path="./" type="c_include">
        <files mask="Driver_GPIO.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_issdk_drivers_gpio_imx_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="drivers/gpio/i.mx" project_relative_path="./" type="c_include"/>
        <include_path relative_path="drivers/gpio" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.drivers.gpio_imx8.MIMXRT1024" name="gpio_imx" brief="ISSDK GPIO Driver for i.MX8xx" version="1.7.0" full_name="Middleware issdk drivers gpio_imx8" devices="MIMXRT1024xxxxx" user_visible="false" type="middleware" package_base_path="middleware/issdk" project_base_path="gpio_driver">
      <source relative_path="drivers/gpio/i.mx" project_relative_path="./" type="src">
        <files mask="gpio_driver.c"/>
      </source>
      <source relative_path="drivers/gpio/i.mx" project_relative_path="./" type="c_include">
        <files mask="gpio_driver.h"/>
      </source>
      <source relative_path="drivers/gpio" project_relative_path="./" type="c_include">
        <files mask="Driver_GPIO.h"/>
      </source>
      <include_paths>
        <include_path relative_path="drivers/gpio/i.mx" project_relative_path="./" type="c_include"/>
        <include_path relative_path="drivers/gpio" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.drivers.gpio_imxrt.MIMXRT1024" name="gpio_imxrt" brief="ISSDK GPIO Driver for i.MXRT" version="1.7.0" full_name="Middleware issdk drivers gpio_imxrt" devices="MIMXRT1024xxxxx" user_visible="false" type="middleware" package_base_path="middleware/issdk" project_base_path="gpio_driver">
      <source relative_path="drivers/gpio/i.mx" project_relative_path="./" type="src">
        <files mask="gpio_driver.c"/>
      </source>
      <source relative_path="drivers/gpio/i.mx" project_relative_path="./" type="c_include">
        <files mask="gpio_driver.h"/>
      </source>
      <source relative_path="drivers/gpio" project_relative_path="./" type="c_include">
        <files mask="Driver_GPIO.h"/>
      </source>
      <include_paths>
        <include_path relative_path="drivers/gpio/i.mx" project_relative_path="./" type="c_include"/>
        <include_path relative_path="drivers/gpio" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.drivers.gpio_imxrt600.MIMXRT1024" name="gpio_imx" brief="ISSDK GPIO Driver for i.MXRT685" version="1.7.0" full_name="Middleware issdk drivers gpio_imxrt600" devices="MIMXRT1024xxxxx" user_visible="false" type="middleware" package_base_path="middleware/issdk" project_base_path="gpio_driver">
      <source relative_path="drivers/gpio/i.mx/i.mxrt600" project_relative_path="./" type="src">
        <files mask="gpio_driver.c"/>
      </source>
      <source relative_path="drivers/gpio/i.mx/i.mxrt600" project_relative_path="./" type="c_include">
        <files mask="gpio_driver.h"/>
      </source>
      <source relative_path="drivers/gpio" project_relative_path="./" type="c_include">
        <files mask="Driver_GPIO.h"/>
      </source>
      <include_paths>
        <include_path relative_path="drivers/gpio/i.mx/i.mxrt600" project_relative_path="./" type="c_include"/>
        <include_path relative_path="drivers/gpio" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.drivers.host.MIMXRT1024" name="issdk_host" brief="ISSDK Host Interface Service" version="1.7.0" full_name="Middleware issdk drivers host" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="host">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="host_io_uart.c"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="host_io_uart.h"/>
      </source>
      <source relative_path="drivers/host" project_relative_path="./" type="src">
        <files mask="comm_if_uart.c"/>
        <files mask="data_format_hdlc.c"/>
        <files mask="data_format_json.c"/>
        <files mask="host_interface_service.c"/>
      </source>
      <source relative_path="drivers/host" project_relative_path="./" type="c_include">
        <files mask="comm_interface.h"/>
        <files mask="data_format_hdlc.h"/>
        <files mask="data_format_json.h"/>
        <files mask="data_format_service.h"/>
        <files mask="host_interface_service.h"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
        <include_path relative_path="drivers/host" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.drivers.systick_utils.MIMXRT1024" name="systick_utils" brief="ISSDK Utils" version="1.7.0" full_name="Middleware issdk drivers systick_utils" devices="MIMXRT1024xxxxx" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="utilities">
      <source relative_path="drivers/systick" project_relative_path="./" type="src">
        <files mask="systick_utils.c"/>
      </source>
      <source relative_path="drivers/systick" project_relative_path="./" type="c_include">
        <files mask="systick_utils.h"/>
      </source>
      <include_paths>
        <include_path relative_path="drivers/systick" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.drivers.systick_utils.evkmimxrt1024.MIMXRT1024" name="systick_utils" brief="ISSDK Utils" version="1.7.0" full_name="Middleware issdk drivers systick_utils evkmimxrt1024" devices="MIMXRT1024xxxxx" user_visible="false" type="middleware" package_base_path="middleware/issdk" project_base_path="utilities">
      <source relative_path="drivers/systick" project_relative_path="./" type="src">
        <files mask="systick_utils.c"/>
      </source>
      <source relative_path="drivers/systick" project_relative_path="./" type="c_include">
        <files mask="systick_utils.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_issdk_drivers_systick_utils_evkmimxrt1024_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="drivers/systick" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.allregdefs.MIMXRT1024" name="issdk_allregdefs" brief="ISSDK Sensors RegDefs" version="1.7.0" full_name="Middleware issdk sensor allregdefs" devices="MIMXRT1024xxxxx" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="sensors">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT1024"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="fxas21002.h"/>
        <files mask="fxos8700.h"/>
        <files mask="mpl3115.h"/>
        <files mask="fxlc95000.h"/>
        <files mask="fxls8471q.h"/>
        <files mask="fxls8962.h"/>
        <files mask="fxpq3115.h"/>
        <files mask="mag3110.h"/>
        <files mask="mma845x.h"/>
        <files mask="mma865x.h"/>
        <files mask="mma8491q.h"/>
        <files mask="mma9553.h"/>
        <files mask="diff_p.h"/>
        <files mask="dbap.h"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.boardkit.evkmimxrt1024.MIMXRT1024" name="evkmimxrt1024" brief="Middleware issdk sensor boardkit evkmimxrt1024" version="1.7.0" full_name="Middleware issdk sensor boardkit evkmimxrt1024" devices="MIMXRT1024xxxxx" user_visible="false" type="other" package_base_path="middleware/issdk" project_base_path="issdk_boardkit">
      <source relative_path="boardkit/evk-mimxrt1024" project_relative_path="./" type="c_include">
        <files mask="pin_mux.h"/>
        <files mask="clock_config.h"/>
        <files mask="board.h"/>
        <files mask="RTE_Device.h"/>
        <files mask="evkmimxrt1024.h"/>
      </source>
      <source relative_path="boardkit/evk-mimxrt1024" project_relative_path="./" type="src">
        <files mask="evkmimxrt1024.c"/>
        <files mask="pin_mux.c"/>
        <files mask="clock_config.c"/>
        <files mask="board.c"/>
      </source>
      <source relative_path="boardkit/evk-mimxrt1024/frdm-stbc-agm01" project_relative_path="./" type="c_include">
        <files mask="frdm_stbc_agm01_shield.h"/>
        <files mask="issdk_hal.h"/>
      </source>
    </component>
    <component id="middleware.issdk.sensor.fxas21002.MIMXRT1024" name="issdk_fxas21002" brief="ISSDK FXAS21002 Sensor Driver Files" version="1.7.0" full_name="Middleware issdk sensor fxas21002" devices="MIMXRT1024xxxxx" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="sensors">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT1024"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="fxas21002.h"/>
        <files mask="fxas21002_drv.h"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="fxas21002_drv.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_issdk_sensor_fxas21002_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.fxlc95000.MIMXRT1024" name="issdk_fxlc95000" brief="ISSDK FXLC95000 Sensor Driver Files" version="1.7.0" full_name="Middleware issdk sensor fxlc95000" devices="MIMXRT1024xxxxx" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="sensors">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT1024"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="fxlc95000.h"/>
        <files mask="fxlc95000_drv.h"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="fxlc95000_drv.c"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.fxls8471q.MIMXRT1024" name="issdk_fxls8471q" brief="ISSDK FXLS8471 Sensor Driver Files" version="1.7.0" full_name="Middleware issdk sensor fxls8471q" devices="MIMXRT1024xxxxx" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="sensors">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT1024"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="fxls8471q.h"/>
        <files mask="fxls8471q_drv.h"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="fxls8471q_drv.c"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.fxls8962.MIMXRT1024" name="issdk_fxls8962" brief="ISSDK FXLS8962 Sensor Driver Files" version="1.7.0" full_name="Middleware issdk sensor fxls8962" devices="MIMXRT1024xxxxx" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="sensors">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT1024"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="fxls8962.h"/>
        <files mask="fxls8962_drv.h"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="fxls8962_drv.c"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.fxos8700.MIMXRT1024" name="issdk_fxos8700" brief="ISSDK FXOS8700 Sensor Driver Files" version="1.7.0" full_name="Middleware issdk sensor fxos8700" devices="MIMXRT1024xxxxx" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="sensors">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT1024"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="fxos8700.h"/>
        <files mask="fxos8700_drv.h"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="fxos8700_drv.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_issdk_sensor_fxos8700_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.fxpq3115.MIMXRT1024" name="issdk_fxpq3115" brief="ISSDK FXPQ3115 Sensor Driver Files" version="1.7.0" full_name="Middleware issdk sensor fxpq3115" devices="MIMXRT1024xxxxx" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="sensors">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT1024"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="fxpq3115.h"/>
        <files mask="fxpq3115_drv.h"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="fxpq3115_drv.c"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.fxps7250d4.MIMXRT1024" name="issdk_fxps7250d4" brief="ISSDK fxps7250d4 Sensor Driver Files" version="1.7.0" full_name="Middleware issdk sensor fxps7250d4" devices="MIMXRT1024xxxxx" user_visible="false" type="middleware" package_base_path="middleware/issdk" project_base_path="sensors">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT1024"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="dbap.h"/>
        <files mask="dbap_drv.h"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="dbap_drv.c"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.interface.common.MIMXRT1024" name="issdk_interfaces" brief="ISSDK Sensor Interface Common" version="1.7.0" full_name="Middleware issdk sensor interface common" devices="MIMXRT1024xxxxx" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="interfaces">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT1024"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="register_io_i2c.c"/>
        <files mask="register_io_spi.c"/>
        <files mask="sensor_io_spi.c"/>
        <files mask="sensor_io_i2c.c"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="register_io_i2c.h"/>
        <files mask="register_io_spi.h"/>
        <files mask="sensor_io_spi.h"/>
        <files mask="sensor_io_i2c.h"/>
        <files mask="sensor_drv.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_issdk_sensor_interface_common_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.isl29023.MIMXRT1024" name="issdk_isl29023" brief="ISSDK ISL29023 Sensor Driver Files" version="1.7.0" full_name="Middleware issdk sensor isl29023" devices="MIMXRT1024xxxxx" user_visible="false" type="middleware" package_base_path="middleware/issdk" project_base_path="sensors">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT1024"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="isl29023.h"/>
        <files mask="isl29023_drv.h"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="isl29023_drv.c"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.mag3110.MIMXRT1024" name="issdk_mag3110" brief="ISSDK MAG3110 Sensor Driver Files" version="1.7.0" full_name="Middleware issdk sensor mag3110" devices="MIMXRT1024xxxxx" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="sensors">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT1024"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="mag3110.h"/>
        <files mask="mag3110_drv.h"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="mag3110_drv.c"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.mma845x.MIMXRT1024" name="issdk_mma845x" brief="ISSDK MMA845x Sensor Driver Files" version="1.7.0" full_name="Middleware issdk sensor mma845x" devices="MIMXRT1024xxxxx" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="sensors">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT1024"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="mma845x.h"/>
        <files mask="mma845x_drv.h"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="mma845x_drv.c"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.mma8491q.MIMXRT1024" name="issdk_mma8491q" brief="ISSDK MMA8491 Sensor Driver Files" version="1.7.0" full_name="Middleware issdk sensor mma8491q" devices="MIMXRT1024xxxxx" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="sensors">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT1024"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="mma8491q.h"/>
        <files mask="mma8491q_drv.h"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="mma8491q_drv.c"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.mma865x.MIMXRT1024" name="issdk_mma865x" brief="ISSDK MMA865x Sensor Driver Files" version="1.7.0" full_name="Middleware issdk sensor mma865x" devices="MIMXRT1024xxxxx" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="sensors">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT1024"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="mma865x.h"/>
        <files mask="mma865x_drv.h"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="mma865x_drv.c"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.mma9553.MIMXRT1024" name="issdk_mma9553" brief="ISSDK MMA9553 Sensor Driver Files" version="1.7.0" full_name="Middleware issdk sensor mma9553" devices="MIMXRT1024xxxxx" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="sensors">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT1024"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="mma9553.h"/>
        <files mask="mma9553_drv.h"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="mma9553_drv.c"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.mpl3115.MIMXRT1024" name="issdk_mpl3115" brief="ISSDK MPL3115 Sensor Driver Files" version="1.7.0" full_name="Middleware issdk sensor mpl3115" devices="MIMXRT1024xxxxx" user_visible="true" type="middleware" package_base_path="middleware/issdk" project_base_path="sensors">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT1024"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="mpl3115.h"/>
        <files mask="mpl3115_drv.h"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="mpl3115_drv.c"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.nps300x.MIMXRT1024" name="issdk_nps300x" brief="ISSDK nps300x Sensor Driver Files" version="1.7.0" full_name="Middleware issdk sensor nps300x" devices="MIMXRT1024xxxxx" user_visible="false" type="middleware" package_base_path="middleware/issdk" project_base_path="sensors">
      <dependencies>
        <all>
          <component_dependency value="platform.CMSIS_Driver_Include.I2C_CMSISInclude.MIMXRT1024"/>
          <component_dependency value="platform.CMSIS_Driver_Include.SPI_CMSISInclude.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="sensors" project_relative_path="./" type="c_include">
        <files mask="diff_p.h"/>
        <files mask="diff_p_drv.h"/>
      </source>
      <source relative_path="sensors" project_relative_path="./" type="src">
        <files mask="diff_p_drv.c"/>
      </source>
      <include_paths>
        <include_path relative_path="sensors" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.issdk.sensor.tools.MIMXRT1024" name="issdk_tools" brief="ISSDK Serial to MQTT bridge application" version="1.7.0" full_name="Middleware issdk sensor tools" devices="MIMXRT1024xxxxx" user_visible="false" type="other" package_base_path="middleware/issdk" project_base_path="issdk_senor">
      <source relative_path="tools/Serial_To_MQTT" project_relative_path="./" type="script">
        <files mask="CloudBridgeNXPDemo.py"/>
      </source>
    </component>
    <component id="middleware.littlevgl.MIMXRT1024" name="littlevgl" brief="littlevgl library" version="7.4.0" full_name="Middleware littlevgl" devices="MIMXRT1024xxxxx" user_visible="false" type="middleware" package_base_path="middleware/littlevgl" project_base_path="littlevgl">
      <source relative_path="lvgl" project_relative_path="./lvgl" type="c_include">
        <files mask="lvgl.h"/>
      </source>
      <source relative_path="lvgl/src" project_relative_path="./lvgl/src" type="c_include">
        <files mask="lv_api_map.h"/>
        <files mask="lv_conf_internal.h"/>
      </source>
      <source relative_path="lvgl/src/lv_core" project_relative_path="./lvgl/src/lv_core" type="src">
        <files mask="lv_disp.c"/>
        <files mask="lv_group.c"/>
        <files mask="lv_indev.c"/>
        <files mask="lv_obj.c"/>
        <files mask="lv_refr.c"/>
        <files mask="lv_style.c"/>
      </source>
      <source relative_path="lvgl/src/lv_core" project_relative_path="./lvgl/src/lv_core" type="c_include">
        <files mask="lv_disp.h"/>
        <files mask="lv_group.h"/>
        <files mask="lv_indev.h"/>
        <files mask="lv_obj.h"/>
        <files mask="lv_obj_style_dec.h"/>
        <files mask="lv_refr.h"/>
        <files mask="lv_style.h"/>
      </source>
      <source relative_path="lvgl/src/lv_draw" project_relative_path="./lvgl/src/lv_draw" type="c_include">
        <files mask="lv_draw.h"/>
        <files mask="lv_draw_arc.h"/>
        <files mask="lv_draw_blend.h"/>
        <files mask="lv_draw_img.h"/>
        <files mask="lv_draw_label.h"/>
        <files mask="lv_draw_line.h"/>
        <files mask="lv_draw_mask.h"/>
        <files mask="lv_draw_rect.h"/>
        <files mask="lv_draw_triangle.h"/>
        <files mask="lv_img_buf.h"/>
        <files mask="lv_img_cache.h"/>
        <files mask="lv_img_decoder.h"/>
      </source>
      <source relative_path="lvgl/src/lv_draw" project_relative_path="./lvgl/src/lv_draw" type="src">
        <files mask="lv_draw_arc.c"/>
        <files mask="lv_draw_blend.c"/>
        <files mask="lv_draw_img.c"/>
        <files mask="lv_draw_label.c"/>
        <files mask="lv_draw_line.c"/>
        <files mask="lv_draw_mask.c"/>
        <files mask="lv_draw_rect.c"/>
        <files mask="lv_draw_triangle.c"/>
        <files mask="lv_img_buf.c"/>
        <files mask="lv_img_cache.c"/>
        <files mask="lv_img_decoder.c"/>
      </source>
      <source relative_path="lvgl/src/lv_font" project_relative_path="./lvgl/src/lv_font" type="src">
        <files mask="lv_font.c"/>
        <files mask="lv_font_dejavu_16_persian_hebrew.c"/>
        <files mask="lv_font_fmt_txt.c"/>
        <files mask="lv_font_loader.c"/>
        <files mask="lv_font_montserrat_12.c"/>
        <files mask="lv_font_montserrat_12_subpx.c"/>
        <files mask="lv_font_montserrat_14.c"/>
        <files mask="lv_font_montserrat_16.c"/>
        <files mask="lv_font_montserrat_18.c"/>
        <files mask="lv_font_montserrat_20.c"/>
        <files mask="lv_font_montserrat_22.c"/>
        <files mask="lv_font_montserrat_24.c"/>
        <files mask="lv_font_montserrat_26.c"/>
        <files mask="lv_font_montserrat_28.c"/>
        <files mask="lv_font_montserrat_28_compressed.c"/>
        <files mask="lv_font_montserrat_30.c"/>
        <files mask="lv_font_montserrat_32.c"/>
        <files mask="lv_font_montserrat_34.c"/>
        <files mask="lv_font_montserrat_36.c"/>
        <files mask="lv_font_montserrat_38.c"/>
        <files mask="lv_font_montserrat_40.c"/>
        <files mask="lv_font_montserrat_42.c"/>
        <files mask="lv_font_montserrat_44.c"/>
        <files mask="lv_font_montserrat_46.c"/>
        <files mask="lv_font_montserrat_48.c"/>
        <files mask="lv_font_simsun_16_cjk.c"/>
        <files mask="lv_font_unscii_8.c"/>
      </source>
      <source relative_path="lvgl/src/lv_font" project_relative_path="./lvgl/src/lv_font" type="c_include">
        <files mask="lv_font.h"/>
        <files mask="lv_font_fmt_txt.h"/>
        <files mask="lv_font_loader.h"/>
        <files mask="lv_symbol_def.h"/>
      </source>
      <source relative_path="lvgl/src/lv_gpu" project_relative_path="./lvgl/src/lv_gpu" type="c_include">
        <files mask="lv_gpu_stm32_dma2d.h"/>
        <files mask="lv_gpu_nxp_pxp.h"/>
        <files mask="lv_gpu_nxp_pxp_osa.h"/>
      </source>
      <source relative_path="lvgl/src/lv_gpu" project_relative_path="./lvgl/src/lv_gpu" type="src">
        <files mask="lv_gpu_nxp_pxp.c"/>
        <files mask="lv_gpu_nxp_pxp_osa.c"/>
      </source>
      <source relative_path="lvgl/src/lv_hal" project_relative_path="./lvgl/src/lv_hal" type="c_include">
        <files mask="lv_hal.h"/>
        <files mask="lv_hal_disp.h"/>
        <files mask="lv_hal_indev.h"/>
        <files mask="lv_hal_tick.h"/>
      </source>
      <source relative_path="lvgl/src/lv_hal" project_relative_path="./lvgl/src/lv_hal" type="src">
        <files mask="lv_hal_disp.c"/>
        <files mask="lv_hal_indev.c"/>
        <files mask="lv_hal_tick.c"/>
      </source>
      <source relative_path="lvgl/src/lv_misc" project_relative_path="./lvgl/src/lv_misc" type="src">
        <files mask="lv_anim.c"/>
        <files mask="lv_area.c"/>
        <files mask="lv_async.c"/>
        <files mask="lv_bidi.c"/>
        <files mask="lv_color.c"/>
        <files mask="lv_debug.c"/>
        <files mask="lv_fs.c"/>
        <files mask="lv_gc.c"/>
        <files mask="lv_ll.c"/>
        <files mask="lv_log.c"/>
        <files mask="lv_math.c"/>
        <files mask="lv_mem.c"/>
        <files mask="lv_printf.c"/>
        <files mask="lv_task.c"/>
        <files mask="lv_templ.c"/>
        <files mask="lv_txt.c"/>
        <files mask="lv_txt_ap.c"/>
        <files mask="lv_utils.c"/>
      </source>
      <source relative_path="lvgl/src/lv_misc" project_relative_path="./lvgl/src/lv_misc" type="c_include">
        <files mask="lv_anim.h"/>
        <files mask="lv_area.h"/>
        <files mask="lv_async.h"/>
        <files mask="lv_bidi.h"/>
        <files mask="lv_color.h"/>
        <files mask="lv_debug.h"/>
        <files mask="lv_fs.h"/>
        <files mask="lv_gc.h"/>
        <files mask="lv_ll.h"/>
        <files mask="lv_log.h"/>
        <files mask="lv_math.h"/>
        <files mask="lv_mem.h"/>
        <files mask="lv_printf.h"/>
        <files mask="lv_task.h"/>
        <files mask="lv_templ.h"/>
        <files mask="lv_txt.h"/>
        <files mask="lv_txt_ap.h"/>
        <files mask="lv_types.h"/>
        <files mask="lv_utils.h"/>
      </source>
      <source relative_path="lvgl/src/lv_themes" project_relative_path="./lvgl/src/lv_themes" type="src">
        <files mask="lv_theme.c"/>
        <files mask="lv_theme_empty.c"/>
        <files mask="lv_theme_material.c"/>
        <files mask="lv_theme_mono.c"/>
        <files mask="lv_theme_template.c"/>
      </source>
      <source relative_path="lvgl/src/lv_themes" project_relative_path="./lvgl/src/lv_themes" type="c_include">
        <files mask="lv_theme.h"/>
        <files mask="lv_theme_empty.h"/>
        <files mask="lv_theme_material.h"/>
        <files mask="lv_theme_mono.h"/>
        <files mask="lv_theme_template.h"/>
      </source>
      <source relative_path="lvgl/src/lv_widgets" project_relative_path="./lvgl/src/lv_widgets" type="src">
        <files mask="lv_anim_img.c"/>
        <files mask="lv_arc.c"/>
        <files mask="lv_bar.c"/>
        <files mask="lv_btn.c"/>
        <files mask="lv_btnmatrix.c"/>
        <files mask="lv_calendar.c"/>
        <files mask="lv_canvas.c"/>
        <files mask="lv_chart.c"/>
        <files mask="lv_checkbox.c"/>
        <files mask="lv_cont.c"/>
        <files mask="lv_cpicker.c"/>
        <files mask="lv_dropdown.c"/>
        <files mask="lv_gauge.c"/>
        <files mask="lv_img.c"/>
        <files mask="lv_imgbtn.c"/>
        <files mask="lv_keyboard.c"/>
        <files mask="lv_label.c"/>
        <files mask="lv_led.c"/>
        <files mask="lv_line.c"/>
        <files mask="lv_linemeter.c"/>
        <files mask="lv_list.c"/>
        <files mask="lv_msgbox.c"/>
        <files mask="lv_objmask.c"/>
        <files mask="lv_objx_templ.c"/>
        <files mask="lv_page.c"/>
        <files mask="lv_roller.c"/>
        <files mask="lv_slider.c"/>
        <files mask="lv_spinbox.c"/>
        <files mask="lv_spinner.c"/>
        <files mask="lv_switch.c"/>
        <files mask="lv_table.c"/>
        <files mask="lv_tabview.c"/>
        <files mask="lv_textarea.c"/>
        <files mask="lv_tileview.c"/>
        <files mask="lv_win.c"/>
      </source>
      <source relative_path="lvgl/src/lv_widgets" project_relative_path="./lvgl/src/lv_widgets" type="c_include">
        <files mask="lv_anim_img.h"/>
        <files mask="lv_arc.h"/>
        <files mask="lv_bar.h"/>
        <files mask="lv_btn.h"/>
        <files mask="lv_btnmatrix.h"/>
        <files mask="lv_calendar.h"/>
        <files mask="lv_canvas.h"/>
        <files mask="lv_chart.h"/>
        <files mask="lv_checkbox.h"/>
        <files mask="lv_cont.h"/>
        <files mask="lv_cpicker.h"/>
        <files mask="lv_dropdown.h"/>
        <files mask="lv_gauge.h"/>
        <files mask="lv_img.h"/>
        <files mask="lv_imgbtn.h"/>
        <files mask="lv_keyboard.h"/>
        <files mask="lv_label.h"/>
        <files mask="lv_led.h"/>
        <files mask="lv_line.h"/>
        <files mask="lv_linemeter.h"/>
        <files mask="lv_list.h"/>
        <files mask="lv_msgbox.h"/>
        <files mask="lv_objmask.h"/>
        <files mask="lv_objx_templ.h"/>
        <files mask="lv_page.h"/>
        <files mask="lv_roller.h"/>
        <files mask="lv_slider.h"/>
        <files mask="lv_spinbox.h"/>
        <files mask="lv_spinner.h"/>
        <files mask="lv_switch.h"/>
        <files mask="lv_table.h"/>
        <files mask="lv_tabview.h"/>
        <files mask="lv_textarea.h"/>
        <files mask="lv_tileview.h"/>
        <files mask="lv_win.h"/>
      </source>
      <source exclude="true" relative_path="lvgl/examples/porting" project_relative_path="./lvgl/examples/porting" type="src">
        <files mask="lv_port_disp_template.c" hidden="true"/>
        <files mask="lv_port_fs_template.c" hidden="true"/>
        <files mask="lv_port_indev_template.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="lvgl/examples/porting" project_relative_path="./lvgl/examples/porting" type="c_include">
        <files mask="lv_port_disp_template.h" hidden="true"/>
        <files mask="lv_port_fs_template.h" hidden="true"/>
        <files mask="lv_port_indev_template.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="lvgl" project_relative_path="./lvgl" type="doc">
        <files mask="LICENCE.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="lvgl/docs" project_relative_path="./lvgl/docs" type="other">
        <files mask="ROADMAP.md" hidden="true"/>
        <files mask="CODING_STYLE.md" hidden="true"/>
        <files mask="CONTRIBUTING.md" hidden="true"/>
      </source>
      <source exclude="true" relative_path="lvgl" project_relative_path="./lvgl" type="other">
        <files mask="README.md" hidden="true"/>
      </source>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="ChangeLogKSDK.txt" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_littlevgl_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="lvgl" type="c_include"/>
        <include_path relative_path="lvgl/src" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.MIMXRT1024" name="lwIP" brief="lwIP - A Lightweight TCP/IP Stack" version="2.2.0" revision="3" full_name="lwIP" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.template.MIMXRT1024"/>
          <component_dependency value="utility.debug_console.MIMXRT1024"/>
          <any_of>
            <component_dependency value="middleware.lwip.empty_ethernetif.MIMXRT1024"/>
            <component_dependency value="middleware.wifi_wiced.AW_NM372SM.MIMXRT1024"/>
            <component_dependency value="middleware.wifi_wiced.MURATA_TYPE1DX.MIMXRT1024"/>
            <component_dependency value="middleware.wifi_wiced.MURATA_TYPE1LV.MIMXRT1024"/>
            <component_dependency value="middleware.lwip.enet_ethernetif.MIMXRT1024"/>
            <component_dependency value="middleware.lwip.usb_ethernetif.MIMXRT1024"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="README" hidden="true"/>
        <files mask="FEATURES" hidden="true"/>
        <files mask="CHANGELOG" hidden="true"/>
        <files mask="BUILDING" hidden="true"/>
        <files mask="COPYING" hidden="true"/>
        <files mask="FILES" hidden="true"/>
        <files mask="UPGRADING" hidden="true"/>
        <files mask="ChangeLogKSDK.txt" hidden="true"/>
      </source>
      <source relative_path="doc" type="doc">
        <files mask="mqtt_client.txt" hidden="true"/>
        <files mask="savannah.txt" hidden="true"/>
        <files mask="contrib.txt" hidden="true"/>
        <files mask="mdns.txt" hidden="true"/>
        <files mask="ppp.txt" hidden="true"/>
        <files mask="FILES" hidden="true"/>
      </source>
      <source exclude="true" relative_path="doc" type="doc">
        <files mask="ZeroCopyRx.c" hidden="true"/>
        <files mask="NO_SYS_SampleCode.c" hidden="true"/>
      </source>
      <source relative_path="doc/doxygen" type="doc">
        <files mask="lwip.Doxyfile.cmake.in" hidden="true"/>
        <files mask="generate.bat" hidden="true"/>
        <files mask="main_page.h" hidden="true"/>
        <files mask="lwip.Doxyfile" hidden="true"/>
        <files mask="generate.sh" hidden="true"/>
      </source>
      <source relative_path="doc/doxygen/output" type="doc">
        <files mask="index.html" hidden="true"/>
      </source>
      <source relative_path="port" type="src">
        <files mask="sys_arch.c"/>
      </source>
      <source relative_path="port/arch" type="c_include">
        <files mask="cc.h"/>
        <files mask="perf.h"/>
        <files mask="sys_arch.h"/>
      </source>
      <source relative_path="src" type="doc">
        <files mask="FILES" hidden="true"/>
      </source>
      <source relative_path="src/api" type="src">
        <files mask="api_lib.c"/>
        <files mask="tcpip.c"/>
        <files mask="netdb.c"/>
        <files mask="sockets.c"/>
        <files mask="if_api.c"/>
        <files mask="netbuf.c"/>
        <files mask="netifapi.c"/>
        <files mask="api_msg.c"/>
        <files mask="err.c"/>
      </source>
      <source relative_path="src/core" type="src">
        <files mask="altcp.c"/>
        <files mask="sys.c"/>
        <files mask="stats.c"/>
        <files mask="def.c"/>
        <files mask="ip.c"/>
        <files mask="netif.c"/>
        <files mask="dns.c"/>
        <files mask="tcp_out.c"/>
        <files mask="pbuf.c"/>
        <files mask="timeouts.c"/>
        <files mask="init.c"/>
        <files mask="tcp_in.c"/>
        <files mask="altcp_tcp.c"/>
        <files mask="raw.c"/>
        <files mask="tcp.c"/>
        <files mask="udp.c"/>
        <files mask="altcp_alloc.c"/>
        <files mask="mem.c"/>
        <files mask="inet_chksum.c"/>
        <files mask="memp.c"/>
      </source>
      <source relative_path="src/core/ipv6" type="src">
        <files mask="icmp6.c"/>
        <files mask="ethip6.c"/>
        <files mask="nd6.c"/>
        <files mask="ip6_frag.c"/>
        <files mask="inet6.c"/>
        <files mask="ip6.c"/>
        <files mask="dhcp6.c"/>
        <files mask="mld6.c"/>
        <files mask="ip6_addr.c"/>
      </source>
      <source relative_path="src/core/ipv4" type="src">
        <files mask="igmp.c"/>
        <files mask="ip4.c"/>
        <files mask="dhcp.c"/>
        <files mask="etharp.c"/>
        <files mask="ip4_frag.c"/>
        <files mask="icmp.c"/>
        <files mask="autoip.c"/>
        <files mask="acd.c"/>
        <files mask="ip4_addr.c"/>
      </source>
      <source relative_path="src/include/compat/stdc" type="c_include">
        <files mask="errno.h"/>
      </source>
      <source relative_path="src/include/compat/posix" type="c_include">
        <files mask="netdb.h"/>
      </source>
      <source relative_path="src/include/compat/posix/sys" type="c_include">
        <files mask="socket.h"/>
      </source>
      <source relative_path="src/include/compat/posix/arpa" type="c_include">
        <files mask="inet.h"/>
      </source>
      <source relative_path="src/include/compat/posix/net" type="c_include">
        <files mask="if.h"/>
      </source>
      <source relative_path="src/include/lwip" type="c_include">
        <files mask="err.h"/>
        <files mask="sio.h"/>
        <files mask="ip6.h"/>
        <files mask="netdb.h"/>
        <files mask="altcp_tcp.h"/>
        <files mask="arch.h"/>
        <files mask="debug.h"/>
        <files mask="ip6_addr.h"/>
        <files mask="sockets.h"/>
        <files mask="if_api.h"/>
        <files mask="init.h"/>
        <files mask="tcpbase.h"/>
        <files mask="tcpip.h"/>
        <files mask="def.h"/>
        <files mask="inet_chksum.h"/>
        <files mask="snmp.h"/>
        <files mask="api.h"/>
        <files mask="ip4.h"/>
        <files mask="inet.h"/>
        <files mask="igmp.h"/>
        <files mask="altcp_tls.h"/>
        <files mask="netif.h"/>
        <files mask="opt.h"/>
        <files mask="ip.h"/>
        <files mask="acd.h"/>
        <files mask="tcp.h"/>
        <files mask="ip6_frag.h"/>
        <files mask="altcp.h"/>
        <files mask="ip4_addr.h"/>
        <files mask="ip4_frag.h"/>
        <files mask="netbuf.h"/>
        <files mask="autoip.h"/>
        <files mask="dns.h"/>
        <files mask="sys.h"/>
        <files mask="dhcp.h"/>
        <files mask="ip_addr.h"/>
        <files mask="icmp6.h"/>
        <files mask="mem.h"/>
        <files mask="raw.h"/>
        <files mask="ip6_zone.h"/>
        <files mask="stats.h"/>
        <files mask="ethip6.h"/>
        <files mask="icmp.h"/>
        <files mask="pbuf.h"/>
        <files mask="netifapi.h"/>
        <files mask="nd6.h"/>
        <files mask="etharp.h"/>
        <files mask="errno.h"/>
        <files mask="mld6.h"/>
        <files mask="timeouts.h"/>
        <files mask="dhcp6.h"/>
        <files mask="udp.h"/>
        <files mask="memp.h"/>
      </source>
      <source relative_path="src/include/lwip/priv" type="c_include">
        <files mask="api_msg.h"/>
        <files mask="tcpip_priv.h"/>
        <files mask="mem_priv.h"/>
        <files mask="altcp_priv.h"/>
        <files mask="nd6_priv.h"/>
        <files mask="tcp_priv.h"/>
        <files mask="memp_std.h"/>
        <files mask="sockets_priv.h"/>
        <files mask="raw_priv.h"/>
        <files mask="memp_priv.h"/>
      </source>
      <source relative_path="src/include/lwip/prot" type="c_include">
        <files mask="ip6.h"/>
        <files mask="ethernet.h"/>
        <files mask="ip4.h"/>
        <files mask="igmp.h"/>
        <files mask="ip.h"/>
        <files mask="acd.h"/>
        <files mask="tcp.h"/>
        <files mask="ieee.h"/>
        <files mask="iana.h"/>
        <files mask="autoip.h"/>
        <files mask="dns.h"/>
        <files mask="dhcp.h"/>
        <files mask="icmp6.h"/>
        <files mask="icmp.h"/>
        <files mask="nd6.h"/>
        <files mask="etharp.h"/>
        <files mask="mld6.h"/>
        <files mask="dhcp6.h"/>
        <files mask="udp.h"/>
      </source>
      <source relative_path="src/include/netif" type="c_include">
        <files mask="bridgeif_opts.h"/>
        <files mask="ethernet.h"/>
        <files mask="zepif.h"/>
        <files mask="ieee802154.h"/>
        <files mask="lowpan6.h"/>
        <files mask="lowpan6_common.h"/>
        <files mask="lowpan6_ble.h"/>
        <files mask="lowpan6_opts.h"/>
        <files mask="bridgeif.h"/>
        <files mask="slipif.h"/>
        <files mask="etharp.h"/>
      </source>
      <source relative_path="src/include/netif/ppp" type="c_include">
        <files mask="eap.h"/>
        <files mask="pppol2tp.h"/>
        <files mask="chap-md5.h"/>
        <files mask="pppcrypt.h"/>
        <files mask="ppp.h"/>
        <files mask="upap.h"/>
        <files mask="pppapi.h"/>
        <files mask="ipv6cp.h"/>
        <files mask="pppdebug.h"/>
        <files mask="pppoe.h"/>
        <files mask="mppe.h"/>
        <files mask="pppos.h"/>
        <files mask="ppp_opts.h"/>
        <files mask="chap-new.h"/>
        <files mask="ipcp.h"/>
        <files mask="lcp.h"/>
        <files mask="ccp.h"/>
        <files mask="ppp_impl.h"/>
        <files mask="eui64.h"/>
        <files mask="vj.h"/>
        <files mask="ecp.h"/>
        <files mask="magic.h"/>
        <files mask="fsm.h"/>
        <files mask="chap_ms.h"/>
      </source>
      <source relative_path="src/include/netif/ppp/polarssl" type="c_include">
        <files mask="sha1.h"/>
        <files mask="md5.h"/>
        <files mask="arc4.h"/>
        <files mask="md4.h"/>
        <files mask="des.h"/>
      </source>
      <source relative_path="src/netif" type="src">
        <files mask="lowpan6.c"/>
        <files mask="lowpan6_ble.c"/>
        <files mask="ethernet.c"/>
        <files mask="lowpan6_common.c"/>
        <files mask="slipif.c"/>
        <files mask="bridgeif.c"/>
        <files mask="bridgeif_fdb.c"/>
        <files mask="zepif.c"/>
      </source>
      <source relative_path="src/netif" type="doc">
        <files mask="FILES" hidden="true"/>
      </source>
      <source relative_path="src/netif/ppp" type="src">
        <files mask="utils.c"/>
        <files mask="pppol2tp.c"/>
        <files mask="chap_ms.c"/>
        <files mask="vj.c"/>
        <files mask="pppos.c"/>
        <files mask="lwip_ecp.c"/>
        <files mask="magic.c"/>
        <files mask="eui64.c"/>
        <files mask="chap-md5.c"/>
        <files mask="auth.c"/>
        <files mask="ppp.c"/>
        <files mask="ccp.c"/>
        <files mask="pppapi.c"/>
        <files mask="eap.c"/>
        <files mask="mppe.c"/>
        <files mask="ipv6cp.c"/>
        <files mask="ipcp.c"/>
        <files mask="lcp.c"/>
        <files mask="pppcrypt.c"/>
        <files mask="pppoe.c"/>
        <files mask="chap-new.c"/>
        <files mask="demand.c"/>
        <files mask="upap.c"/>
        <files mask="multilink.c"/>
        <files mask="fsm.c"/>
      </source>
      <source relative_path="src/netif/ppp" type="doc">
        <files mask="PPPD_FOLLOWUP" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/netif/ppp/polarssl" type="src">
        <files mask="md5.c" hidden="true"/>
        <files mask="des.c" hidden="true"/>
        <files mask="arc4.c" hidden="true"/>
        <files mask="sha1.c" hidden="true"/>
        <files mask="md4.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/netif/ppp/polarssl" type="doc">
        <files mask="README" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_lwip_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="src" type="c_include"/>
        <include_path relative_path="src/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.httpd.MIMXRT1024" name="lwIP_HTTPD" brief="lwIP HTTP Daemon" version="2.2.0" revision="3" full_name="lwIP HTTP Daemon" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1024"/>
          <component_dependency value="middleware.lwip.apps.httpd.support.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="src/apps/http" type="src">
        <files mask="httpd.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_lwip_apps_httpd_MIMXRT1024.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.lwip.apps.httpd.support.MIMXRT1024" name="lwIP_HTTPD_support" brief="lwIP HTTP Daemon Implementation Support Files" version="2.2.0" revision="3" full_name="lwIP HTTP Daemon Implementation Support Files" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <component_dependency value="middleware.lwip.MIMXRT1024"/>
      </dependencies>
      <source relative_path="src/apps/http" type="src">
        <files mask="fs.c"/>
      </source>
      <source relative_path="src/apps/http" type="c_include">
        <files mask="fsdata.h"/>
        <files mask="httpd_structs.h"/>
      </source>
      <source exclude="true" relative_path="src/apps/http" type="src">
        <files mask="fsdata.c" hidden="true"/>
      </source>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="fs.h"/>
        <files mask="httpd.h"/>
        <files mask="httpd_opts.h"/>
      </source>
      <source relative_path="src/apps/http/fs/img" type="other">
        <files mask="sics.gif" hidden="true"/>
      </source>
      <source relative_path="src/apps/http/fs" type="other">
        <files mask="index.html" hidden="true"/>
        <files mask="404.html" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/http/makefsdata" type="c_include">
        <files mask="tinydir.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/http/makefsdata" type="src">
        <files mask="makefsdata.c" hidden="true"/>
      </source>
      <source relative_path="src/apps/http/makefsdata" type="doc">
        <files mask="readme.txt" hidden="true"/>
      </source>
      <source relative_path="src/apps/http/makefsdata" type="other">
        <files mask="makefsdata" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_lwip_apps_httpd_support_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/apps/http" type="c_include"/>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.httpsrv.MIMXRT1024" name="lwIP_HTTP_srv" brief="lwIP HTTP Server Implementation" version="2.2.0" revision="3" full_name="lwIP HTTP Server" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1024"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="src/apps/httpsrv" type="src">
        <files mask="httpsrv.c"/>
        <files mask="httpsrv_base64.c"/>
        <files mask="httpsrv_fs.c"/>
        <files mask="httpsrv_script.c"/>
        <files mask="httpsrv_sha1.c"/>
        <files mask="httpsrv_supp.c"/>
        <files mask="httpsrv_task.c"/>
        <files mask="httpsrv_tls.c"/>
        <files mask="httpsrv_utf8.c"/>
        <files mask="httpsrv_ws.c"/>
        <files mask="httpsrv_ws_api.c"/>
      </source>
      <source relative_path="src/apps/httpsrv" type="c_include">
        <files mask="httpsrv.h"/>
        <files mask="httpsrv_base64.h"/>
        <files mask="httpsrv_config.h"/>
        <files mask="httpsrv_fs.h"/>
        <files mask="httpsrv_port.h"/>
        <files mask="httpsrv_prv.h"/>
        <files mask="httpsrv_script.h"/>
        <files mask="httpsrv_sha1.h"/>
        <files mask="httpsrv_supp.h"/>
        <files mask="httpsrv_tls.h"/>
        <files mask="httpsrv_utf8.h"/>
        <files mask="httpsrv_ws.h"/>
        <files mask="httpsrv_ws_prv.h"/>
      </source>
      <source relative_path="src/apps/httpsrv/mkfs" type="other">
        <files mask="mkfs.pl" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_lwip_apps_httpsrv_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/apps/httpsrv" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.httpssrv.MIMXRT1024" name="lwIP_HTTPS_srv" brief="lwIP HTTPS Server Implementation" version="2.2.0" revision="3" full_name="lwIP HTTPS Server" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.apps.httpsrv.MIMXRT1024"/>
          <component_dependency value="middleware.mbedtls.MIMXRT1024"/>
        </all>
      </dependencies>
      <include_paths>
        <include_path relative_path="src/apps/httpsrv" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.lwiperf.MIMXRT1024" name="lwIP_IPERF" brief="lwIP IPERF Implementation" version="2.2.0" revision="3" full_name="lwIP IPERF" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1024"/>
          <any_of>
            <component_dependency value="middleware.freertos-kernel.MIMXRT1024"/>
            <component_dependency value="middleware.baremetal.MIMXRT1024"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="src/apps/lwiperf" type="src">
        <files mask="lwiperf.c"/>
      </source>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="lwiperf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_lwip_apps_lwiperf_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.mdns.MIMXRT1024" name="lwIP_MDNS" brief="lwIP mDNS Implementation" version="2.2.0" revision="3" full_name="lwIP mDNS" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <component_dependency value="middleware.lwip.MIMXRT1024"/>
      </dependencies>
      <source relative_path="src/apps/mdns" type="src">
        <files mask="mdns.c"/>
        <files mask="mdns_domain.c"/>
        <files mask="mdns_out.c"/>
      </source>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="mdns.h"/>
        <files mask="mdns_domain.h"/>
        <files mask="mdns_priv.h"/>
        <files mask="mdns_opts.h"/>
        <files mask="mdns_out.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_lwip_apps_mdns_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.mqtt.MIMXRT1024" name="lwIP_MQTT" brief="lwIP MQTT Client" version="2.2.0" revision="3" full_name="lwIP MQTT Client" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <component_dependency value="middleware.lwip.MIMXRT1024"/>
      </dependencies>
      <source relative_path="src/apps/mqtt" type="src">
        <files mask="mqtt.c"/>
      </source>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="mqtt.h"/>
        <files mask="mqtt_opts.h"/>
        <files mask="mqtt_priv.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_lwip_apps_mqtt_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.sntp.MIMXRT1024" name="lwIP_SNTP" brief="lwIP SNTP" version="2.2.0" revision="3" full_name="lwIP SNTP" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <component_dependency value="middleware.lwip.MIMXRT1024"/>
      </dependencies>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="sntp.h"/>
        <files mask="sntp_opts.h"/>
      </source>
      <source relative_path="src/apps/sntp" type="src">
        <files mask="sntp.c"/>
      </source>
      <include_paths>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.ping.MIMXRT1024" name="lwIP_ping" brief="lwIP Ping Sender contrib" version="2.2.0" revision="3" full_name="lwIP Ping Sender" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <component_dependency value="middleware.lwip.MIMXRT1024"/>
      </dependencies>
      <source relative_path="contrib/apps/ping" type="src">
        <files mask="ping.c"/>
      </source>
      <source relative_path="contrib/apps/ping" type="c_include">
        <files mask="ping.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_lwip_contrib_ping_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/ping" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.tcpecho.MIMXRT1024" name="lwIP_tcpecho" brief="lwIP TCP Echo contrib" version="2.2.0" revision="3" full_name="lwIP TCP Echo" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <component_dependency value="middleware.lwip.MIMXRT1024"/>
      </dependencies>
      <source relative_path="contrib/apps/tcpecho" type="c_include">
        <files mask="tcpecho.h"/>
      </source>
      <source relative_path="contrib/apps/tcpecho" type="src">
        <files mask="tcpecho.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_lwip_contrib_tcpecho_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/tcpecho" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.tcpecho_raw.MIMXRT1024" name="lwIP_tcpecho_raw" brief="lwIP TCP Echo Raw API contrib" version="2.2.0" revision="3" full_name="lwIP TCP Echo Raw API" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <component_dependency value="middleware.lwip.MIMXRT1024"/>
      </dependencies>
      <source relative_path="contrib/apps/tcpecho_raw" type="c_include">
        <files mask="tcpecho_raw.h"/>
      </source>
      <source relative_path="contrib/apps/tcpecho_raw" type="src">
        <files mask="tcpecho_raw.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_lwip_contrib_tcpecho_raw_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/tcpecho_raw" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.udpecho.MIMXRT1024" name="lwIP_udpecho" brief="lwIP UDP Echo contrib" version="2.2.0" revision="3" full_name="lwIP UDP Echo" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <component_dependency value="middleware.lwip.MIMXRT1024"/>
      </dependencies>
      <source relative_path="contrib/apps/udpecho" type="c_include">
        <files mask="udpecho.h"/>
      </source>
      <source relative_path="contrib/apps/udpecho" type="src">
        <files mask="udpecho.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_lwip_contrib_udpecho_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/udpecho" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.udpecho_raw.MIMXRT1024" name="lwIP_udpecho_raw" brief="lwIP UDP Echo Raw API contrib" version="2.2.0" revision="3" full_name="lwIP UDP Echo Raw API" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <component_dependency value="middleware.lwip.MIMXRT1024"/>
      </dependencies>
      <source relative_path="contrib/apps/udpecho_raw" type="src">
        <files mask="udpecho_raw.c"/>
      </source>
      <source relative_path="contrib/apps/udpecho_raw" type="c_include">
        <files mask="udpecho_raw.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_lwip_contrib_udpecho_raw_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/udpecho_raw" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.empty_ethernetif.MIMXRT1024" name="lwIP_empty_ethernetif" brief="lwIP Empty Ethernet Layer (do not use)" version="2.2.0" revision="3" full_name="lwIP Empty Ethernet Layer (do not use)" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1024"/>
          <component_dependency value="middleware.lwip.template.MIMXRT1024"/>
        </all>
      </dependencies>
    </component>
    <component id="middleware.lwip.enet_ethernetif.MIMXRT1024" name="Enet ethernet interface" brief="Enet ethernet interface" version="2.2.0" revision="3" full_name="Enet ethernet interface" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1024"/>
          <component_dependency value="middleware.lwip.template.MIMXRT1024"/>
          <component_dependency value="driver.phy-common.MIMXRT1024"/>
          <component_dependency value="platform.drivers.enet.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="port" type="src">
        <files mask="enet_ethernetif.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="enet_ethernetif.h"/>
        <files mask="enet_ethernetif_priv.h"/>
      </source>
      <source condition="platform.drivers.enet.MIMXRT1024" relative_path="port" type="src">
        <files mask="enet_ethernetif_kinetis.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_lwip_enet_ethernetif_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.template.MIMXRT1024" name="lwIP_template" brief="lwIP Template" version="2.2.0" revision="3" full_name="lwIP Template Application" devices="MIMXRT1024xxxxx" user_visible="false" type="project_template" package_base_path="middleware/lwip" project_base_path="lwip">
      <source relative_path="template" type="c_include">
        <files mask="lwipopts.h"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.unused_files.MIMXRT1024" name="lwIP_unused_files" brief="lwIP files unused by projects" version="2.2.0" revision="3" full_name="lwIP - Files Unused by Projects" devices="MIMXRT1024xxxxx" user_visible="false" type="other" package_base_path="middleware/lwip" project_base_path="lwip">
      <source exclude="true" relative_path="./" type="other">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src" type="other">
        <files mask="Filelists.cmake" hidden="true"/>
        <files mask="Filelists.mk" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/core" type="src">
        <files mask="test_pbuf.c" hidden="true"/>
        <files mask="test_netif.c" hidden="true"/>
        <files mask="test_def.c" hidden="true"/>
        <files mask="test_timers.c" hidden="true"/>
        <files mask="test_dns.c" hidden="true"/>
        <files mask="test_mem.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/core" type="c_include">
        <files mask="test_pbuf.h" hidden="true"/>
        <files mask="test_def.h" hidden="true"/>
        <files mask="test_mem.h" hidden="true"/>
        <files mask="test_timers.h" hidden="true"/>
        <files mask="test_netif.h" hidden="true"/>
        <files mask="test_dns.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/ip4" type="src">
        <files mask="test_ip4.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/ip4" type="c_include">
        <files mask="test_ip4.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/mdns" type="src">
        <files mask="test_mdns.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/mdns" type="c_include">
        <files mask="test_mdns.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/dhcp" type="src">
        <files mask="test_dhcp.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/dhcp" type="c_include">
        <files mask="test_dhcp.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit" type="src">
        <files mask="lwip_unittests.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/udp" type="src">
        <files mask="test_udp.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/udp" type="c_include">
        <files mask="test_udp.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit" type="c_include">
        <files mask="lwip_check.h" hidden="true"/>
        <files mask="lwipopts.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/etharp" type="c_include">
        <files mask="test_etharp.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/etharp" type="src">
        <files mask="test_etharp.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit" type="script">
        <files mask="Filelists.cmake" hidden="true"/>
        <files mask="Filelists.mk" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/mqtt" type="c_include">
        <files mask="test_mqtt.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/mqtt" type="src">
        <files mask="test_mqtt.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/arch" type="c_include">
        <files mask="sys_arch.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/arch" type="src">
        <files mask="sys_arch.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/ip6" type="src">
        <files mask="test_ip6.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/ip6" type="c_include">
        <files mask="test_ip6.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/tcp" type="c_include">
        <files mask="test_tcp_oos.h" hidden="true"/>
        <files mask="tcp_helper.h" hidden="true"/>
        <files mask="test_tcp.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/tcp" type="src">
        <files mask="tcp_helper.c" hidden="true"/>
        <files mask="test_tcp_oos.c" hidden="true"/>
        <files mask="test_tcp.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/api" type="src">
        <files mask="test_sockets.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/unit/api" type="c_include">
        <files mask="test_sockets.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/fuzz" type="c_include">
        <files mask="config.h" hidden="true"/>
        <files mask="fuzz_common.h" hidden="true"/>
        <files mask="lwipopts.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/fuzz/inputs/udp" type="binary">
        <files mask="udp_port_5000.bin" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/fuzz/inputs/icmp" type="binary">
        <files mask="icmp_ping.bin" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/fuzz/inputs/ipv6" type="binary">
        <files mask="neighbor_solicitation.bin" hidden="true"/>
        <files mask="router_adv.bin" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/fuzz/inputs/tcp" type="binary">
        <files mask="tcp_syn.bin" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/fuzz/inputs/arp" type="binary">
        <files mask="arp_req.bin" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/fuzz" type="other">
        <files mask="README" hidden="true"/>
        <files mask="Makefile" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/fuzz" type="src">
        <files mask="fuzz.c" hidden="true"/>
        <files mask="fuzz2.c" hidden="true"/>
        <files mask="fuzz3.c" hidden="true"/>
        <files mask="fuzz_common.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/fuzz" type="script">
        <files mask="output_to_pcap.sh" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/sockets" type="c_include">
        <files mask="sockets_stresstest.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="test/sockets" type="src">
        <files mask="sockets_stresstest.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib" type="script">
        <files mask="Filelists.cmake" hidden="true"/>
        <files mask="Filelists.mk" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/addons/tcp_md5" type="other">
        <files mask="README" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/addons/tcp_md5" type="c_include">
        <files mask="tcp_md5.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/addons/tcp_md5" type="src">
        <files mask="tcp_md5.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/addons/netconn/external_resolve" type="src">
        <files mask="dnssd.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/addons/netconn/external_resolve" type="c_include">
        <files mask="dnssd.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/addons/tcp_isn" type="src">
        <files mask="tcp_isn.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/addons/tcp_isn" type="c_include">
        <files mask="tcp_isn.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/addons/ipv6_static_routing" type="other">
        <files mask="README" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/addons/ipv6_static_routing" type="c_include">
        <files mask="ip6_route_table.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/addons/ipv6_static_routing" type="src">
        <files mask="ip6_route_table.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/apps/chargen" type="c_include">
        <files mask="chargen.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/apps/chargen" type="other">
        <files mask="README" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/apps/chargen" type="src">
        <files mask="chargen.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/apps/httpserver" type="other">
        <files mask="README" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/apps/httpserver" type="src">
        <files mask="httpserver-netconn.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/apps/httpserver" type="c_include">
        <files mask="httpserver-netconn.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/apps/netio" type="src">
        <files mask="netio.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/apps/netio" type="c_include">
        <files mask="netio.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/apps/rtp" type="c_include">
        <files mask="rtpdata.h" hidden="true"/>
        <files mask="rtp.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/apps/rtp" type="src">
        <files mask="rtp.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/apps/shell" type="src">
        <files mask="shell.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/apps/shell" type="c_include">
        <files mask="shell.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/apps/socket_examples" type="c_include">
        <files mask="socket_examples.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/apps/socket_examples" type="src">
        <files mask="socket_examples.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/Coverity" type="src">
        <files mask="coverity.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/snmp/snmp_private_mib" type="src">
        <files mask="lwip_prvmib.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/snmp/snmp_private_mib" type="c_include">
        <files mask="private_mib.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/snmp" type="c_include">
        <files mask="snmp_example.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/snmp" type="src">
        <files mask="snmp_example.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/snmp/snmp_v3" type="c_include">
        <files mask="snmpv3_dummy.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/snmp/snmp_v3" type="src">
        <files mask="snmpv3_dummy.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/mdns" type="c_include">
        <files mask="mdns_example.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/mdns" type="src">
        <files mask="mdns_example.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/httpd/post_example" type="src">
        <files mask="post_example.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/httpd/ssi_example" type="src">
        <files mask="ssi_example.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/httpd/ssi_example" type="c_include">
        <files mask="ssi_example.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/httpd/examples_fs/img" type="image">
        <files mask="sics.gif" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/httpd/examples_fs" type="doc">
        <files mask="session.html" hidden="true"/>
        <files mask="index.html" hidden="true"/>
        <files mask="404.html" hidden="true"/>
        <files mask="login.html" hidden="true"/>
        <files mask="loginfail.html" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/httpd/examples_fs" type="other">
        <files mask="ssi.shtml" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/httpd/genfiles_example" type="src">
        <files mask="genfiles_example.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/httpd/genfiles_example" type="c_include">
        <files mask="genfiles_example.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/httpd/https_example" type="c_include">
        <files mask="https_example.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/httpd/https_example" type="src">
        <files mask="https_example.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/httpd/fs_example" type="c_include">
        <files mask="fs_example.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/httpd/fs_example" type="src">
        <files mask="fs_example.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/httpd/cgi_example" type="src">
        <files mask="cgi_example.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/httpd/cgi_example" type="c_include">
        <files mask="cgi_example.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/httpd" type="src">
        <files mask="examples_fsdata.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/mqtt" type="src">
        <files mask="mqtt_example.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/mqtt" type="c_include">
        <files mask="mqtt_example.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/lwiperf" type="src">
        <files mask="lwiperf_example.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/lwiperf" type="c_include">
        <files mask="lwiperf_example.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/sntp" type="c_include">
        <files mask="sntp_example.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/sntp" type="src">
        <files mask="sntp_example.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/tftp" type="src">
        <files mask="tftp_example.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/tftp" type="c_include">
        <files mask="tftp_example.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/ethernetif" type="src">
        <files mask="ethernetif.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/example_app" type="other">
        <files mask="lwipcfg.h.travis" hidden="true"/>
        <files mask="lwipcfg.h.example" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/example_app" type="c_include">
        <files mask="ppp_settings.h" hidden="true"/>
        <files mask="lwippools.h" hidden="true"/>
        <files mask="lwipopts.h" hidden="true"/>
        <files mask="default_netif.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/example_app/test_configs" type="c_include">
        <files mask="opt_nosys_ipv4.h" hidden="true"/>
        <files mask="opt_no_tcp_dualstack.h" hidden="true"/>
        <files mask="opt_ipv4only.h" hidden="true"/>
        <files mask="opt_default.h" hidden="true"/>
        <files mask="opt_nosys_ipv6.h" hidden="true"/>
        <files mask="opt_none.h" hidden="true"/>
        <files mask="opt_dualstack.h" hidden="true"/>
        <files mask="opt_no_udp_ipv4only.h" hidden="true"/>
        <files mask="opt_no_tcp_ipv4only.h" hidden="true"/>
        <files mask="opt_ipv6only.h" hidden="true"/>
        <files mask="opt_no_tcp_ipv6only.h" hidden="true"/>
        <files mask="opt_no_udp_dualstack.h" hidden="true"/>
        <files mask="opt_no_udp_ipv6only.h" hidden="true"/>
        <files mask="opt_nosys_dual.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/example_app" type="src">
        <files mask="test.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/ppp" type="c_include">
        <files mask="pppos_example.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/examples/ppp" type="src">
        <files mask="pppos_example.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/freertos/include/arch" type="c_include">
        <files mask="sys_arch.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/freertos" type="src">
        <files mask="sys_arch.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/unix" type="script">
        <files mask="Common.mk" hidden="true"/>
        <files mask="Filelists.cmake" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/unix" type="other">
        <files mask="README" hidden="true"/>
        <files mask="setup-tapif" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/unix/port" type="src">
        <files mask="perf.c" hidden="true"/>
        <files mask="sys_arch.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/unix/port/include/netif" type="c_include">
        <files mask="sio.h" hidden="true"/>
        <files mask="fifo.h" hidden="true"/>
        <files mask="list.h" hidden="true"/>
        <files mask="pcapif.h" hidden="true"/>
        <files mask="tapif.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/unix/port/include/arch" type="c_include">
        <files mask="sys_arch.h" hidden="true"/>
        <files mask="cc.h" hidden="true"/>
        <files mask="perf.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/unix/port/netif" type="src">
        <files mask="sio.c" hidden="true"/>
        <files mask="fifo.c" hidden="true"/>
        <files mask="pcapif.c" hidden="true"/>
        <files mask="list.c" hidden="true"/>
        <files mask="tapif.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/unix/check" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/unix/check" type="c_include">
        <files mask="config.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/unix/check" type="other">
        <files mask="README" hidden="true"/>
        <files mask="Makefile" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/unix/example_app" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/unix/example_app" type="src">
        <files mask="default_netif.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/unix/example_app" type="script">
        <files mask="iteropts.sh" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/unix/example_app" type="other">
        <files mask="Makefile" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/unix/lib" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/unix/lib" type="other">
        <files mask="README" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/unix/lib" type="c_include">
        <files mask="lwipopts.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports" type="script">
        <files mask="CMakeCommon.cmake" hidden="true"/>
        <files mask="Common.allports.mk" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/win32" type="script">
        <files mask="Common.mk" hidden="true"/>
        <files mask="Filelists.cmake" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/win32/include/arch" type="c_include">
        <files mask="sys_arch.h" hidden="true"/>
        <files mask="cc.h" hidden="true"/>
        <files mask="perf.h" hidden="true"/>
        <files mask="bpstruct.h" hidden="true"/>
        <files mask="epstruct.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/win32" type="doc">
        <files mask="readme.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/win32" type="src">
        <files mask="sio.c" hidden="true"/>
        <files mask="sys_arch.c" hidden="true"/>
        <files mask="pcapif.c" hidden="true"/>
        <files mask="pcapif_helper.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/win32/msvc" type="other">
        <files mask="lwip_unittests.vcxproj" hidden="true"/>
        <files mask="libcheck.vcxproj" hidden="true"/>
        <files mask="lwIP_pcapif.vcxproj.filters" hidden="true"/>
        <files mask="lwIP_Test.sln" hidden="true"/>
        <files mask="lwip_unittests.vcxproj.filters" hidden="true"/>
        <files mask="lwIP_pcapif.vcxproj" hidden="true"/>
        <files mask="lwIP_Test.vcxproj.filters" hidden="true"/>
        <files mask="lwIP.vcxproj" hidden="true"/>
        <files mask="libcheck.vcxproj.filters" hidden="true"/>
        <files mask="makefsdata.vcxproj.filters" hidden="true"/>
        <files mask="makefsdata.vcxproj" hidden="true"/>
        <files mask="lwIP_unittests.sln" hidden="true"/>
        <files mask="lwIP_Test.vcxproj" hidden="true"/>
        <files mask="lwIP.vcxproj.filters" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/win32/msvc" type="script">
        <files mask="build_coverity.cmd" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/win32/check" type="c_include">
        <files mask="stdbool.h" hidden="true"/>
        <files mask="config.h" hidden="true"/>
        <files mask="unistd.h" hidden="true"/>
        <files mask="check_stdint.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/win32/check/sys" type="c_include">
        <files mask="time.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/win32/check" type="src">
        <files mask="time.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/win32/example_app" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/win32/example_app" type="src">
        <files mask="default_netif.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/win32/example_app" type="other">
        <files mask="Makefile" hidden="true"/>
      </source>
      <source exclude="true" relative_path="contrib/ports/win32" type="c_include">
        <files mask="pcapif.h" hidden="true"/>
        <files mask="pcapif_helper.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/altcp_tls" type="src">
        <files mask="altcp_tls_mbedtls_mem.c" hidden="true"/>
        <files mask="altcp_tls_mbedtls.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/altcp_tls" type="c_include">
        <files mask="altcp_tls_mbedtls_structs.h" hidden="true"/>
        <files mask="altcp_tls_mbedtls_mem.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/http" type="src">
        <files mask="altcp_proxyconnect.c" hidden="true"/>
        <files mask="http_client.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/netbiosns" type="src">
        <files mask="netbiosns.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/smtp" type="src">
        <files mask="smtp.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/snmp" type="c_include">
        <files mask="snmp_msg.h" hidden="true"/>
        <files mask="snmp_asn1.h" hidden="true"/>
        <files mask="snmp_core_priv.h" hidden="true"/>
        <files mask="snmpv3_priv.h" hidden="true"/>
        <files mask="snmp_pbuf_stream.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/snmp" type="src">
        <files mask="snmp_pbuf_stream.c" hidden="true"/>
        <files mask="snmp_table.c" hidden="true"/>
        <files mask="snmp_core.c" hidden="true"/>
        <files mask="snmp_mib2_udp.c" hidden="true"/>
        <files mask="snmp_snmpv2_usm.c" hidden="true"/>
        <files mask="snmp_mib2_interfaces.c" hidden="true"/>
        <files mask="snmp_snmpv2_framework.c" hidden="true"/>
        <files mask="snmp_mib2_system.c" hidden="true"/>
        <files mask="snmpv3.c" hidden="true"/>
        <files mask="snmp_mib2_ip.c" hidden="true"/>
        <files mask="snmp_mib2_snmp.c" hidden="true"/>
        <files mask="snmp_netconn.c" hidden="true"/>
        <files mask="snmp_mib2.c" hidden="true"/>
        <files mask="snmp_scalar.c" hidden="true"/>
        <files mask="snmp_traps.c" hidden="true"/>
        <files mask="snmp_mib2_tcp.c" hidden="true"/>
        <files mask="snmp_raw.c" hidden="true"/>
        <files mask="snmp_threadsync.c" hidden="true"/>
        <files mask="snmp_asn1.c" hidden="true"/>
        <files mask="snmp_msg.c" hidden="true"/>
        <files mask="snmp_mib2_icmp.c" hidden="true"/>
        <files mask="snmpv3_mbedtls.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/tftp" type="src">
        <files mask="tftp.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/include/lwip" type="other">
        <files mask="init.h.cmake.in" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/include/lwip/apps" type="c_include">
        <files mask="altcp_proxyconnect.h" hidden="true"/>
        <files mask="altcp_tls_mbedtls_opts.h" hidden="true"/>
        <files mask="http_client.h" hidden="true"/>
        <files mask="netbiosns.h" hidden="true"/>
        <files mask="netbiosns_opts.h" hidden="true"/>
        <files mask="smtp.h" hidden="true"/>
        <files mask="smtp_opts.h" hidden="true"/>
        <files mask="snmp.h" hidden="true"/>
        <files mask="snmpv3.h" hidden="true"/>
        <files mask="snmp_core.h" hidden="true"/>
        <files mask="snmp_mib2.h" hidden="true"/>
        <files mask="snmp_opts.h" hidden="true"/>
        <files mask="snmp_scalar.h" hidden="true"/>
        <files mask="snmp_snmpv2_framework.h" hidden="true"/>
        <files mask="snmp_snmpv2_usm.h" hidden="true"/>
        <files mask="snmp_table.h" hidden="true"/>
        <files mask="snmp_threadsync.h" hidden="true"/>
        <files mask="tftp_client.h" hidden="true"/>
        <files mask="tftp_common.h" hidden="true"/>
        <files mask="tftp_opts.h" hidden="true"/>
        <files mask="tftp_server.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/include/lwip/apps" type="other">
        <files mask="FILES" hidden="true"/>
      </source>
    </component>
    <component id="middleware.lwip.usb_ethernetif.MIMXRT1024" name="lwIP_usb_ethernetif" brief="USB network layer" version="2.2.0" revision="3" full_name="lwIP Adaptation for USB Network Layer" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1024"/>
          <component_dependency value="middleware.usb.host_cdc.MIMXRT1024"/>
          <component_dependency value="middleware.usb.host_cdc_rndis.MIMXRT1024"/>
          <component_dependency value="middleware.usb.host_controller_ehci.MIMXRT1024"/>
        </all>
      </dependencies>
      <source condition="middleware.baremetal.MIMXRT1024" relative_path="port" type="src">
        <files mask="usb_ethernetif_bm.c"/>
      </source>
      <source condition="middleware.freertos-kernel.MIMXRT1024" relative_path="port" type="src">
        <files mask="usb_ethernetif_freertos.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="usb_ethernetif.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_lwip_usb_ethernetif_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls.MIMXRT1024" name="mbedtls" brief="mbedTLS library" version="2.16.6" full_name="MbedTLS open source SSL library" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="Security/mbedTLS library" user_visible="true" type="middleware" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <dependencies>
        <all>
          <component_dependency value="middleware.mbedtls.template.MIMXRT1024"/>
          <component_dependency value="utility.debug_console.MIMXRT1024"/>
          <any_of>
            <component_dependency value="middleware.mbedtls.port.ksdk.MIMXRT1024"/>
            <component_dependency value="middleware.mbedtls.port.sssapi.MIMXRT1024"/>
          </any_of>
        </all>
      </dependencies>
      <source relative_path="include/mbedtls" type="c_include">
        <files mask="aes.h"/>
        <files mask="aesni.h"/>
        <files mask="arc4.h"/>
        <files mask="aria.h"/>
        <files mask="asn1.h"/>
        <files mask="asn1write.h"/>
        <files mask="base64.h"/>
        <files mask="bignum.h"/>
        <files mask="blowfish.h"/>
        <files mask="bn_mul.h"/>
        <files mask="camellia.h"/>
        <files mask="ccm.h"/>
        <files mask="certs.h"/>
        <files mask="chacha20.h"/>
        <files mask="chachapoly.h"/>
        <files mask="check_config.h"/>
        <files mask="cipher.h"/>
        <files mask="cipher_internal.h"/>
        <files mask="cmac.h"/>
        <files mask="compat-1.3.h"/>
        <files mask="config.h"/>
        <files mask="ctr_drbg.h"/>
        <files mask="debug.h"/>
        <files mask="des.h"/>
        <files mask="dhm.h"/>
        <files mask="ecdh.h"/>
        <files mask="ecdsa.h"/>
        <files mask="ecjpake.h"/>
        <files mask="ecp.h"/>
        <files mask="ecp_internal.h"/>
        <files mask="entropy.h"/>
        <files mask="entropy_poll.h"/>
        <files mask="error.h"/>
        <files mask="gcm.h"/>
        <files mask="havege.h"/>
        <files mask="hkdf.h"/>
        <files mask="hmac_drbg.h"/>
        <files mask="md.h"/>
        <files mask="md_internal.h"/>
        <files mask="md2.h"/>
        <files mask="md4.h"/>
        <files mask="md5.h"/>
        <files mask="memory_buffer_alloc.h"/>
        <files mask="net.h"/>
        <files mask="net_sockets.h"/>
        <files mask="nist_kw.h"/>
        <files mask="oid.h"/>
        <files mask="padlock.h"/>
        <files mask="pem.h"/>
        <files mask="pk.h"/>
        <files mask="pk_internal.h"/>
        <files mask="pkcs5.h"/>
        <files mask="pkcs11.h"/>
        <files mask="pkcs12.h"/>
        <files mask="platform.h"/>
        <files mask="platform_time.h"/>
        <files mask="platform_util.h"/>
        <files mask="poly1305.h"/>
        <files mask="ripemd160.h"/>
        <files mask="rsa.h"/>
        <files mask="rsa_internal.h"/>
        <files mask="sha1.h"/>
        <files mask="sha256.h"/>
        <files mask="sha512.h"/>
        <files mask="ssl.h"/>
        <files mask="ssl_cache.h"/>
        <files mask="ssl_ciphersuites.h"/>
        <files mask="ssl_cookie.h"/>
        <files mask="ssl_internal.h"/>
        <files mask="ssl_ticket.h"/>
        <files mask="threading.h"/>
        <files mask="timing.h"/>
        <files mask="version.h"/>
        <files mask="x509.h"/>
        <files mask="x509_crl.h"/>
        <files mask="x509_crt.h"/>
        <files mask="x509_csr.h"/>
        <files mask="xtea.h"/>
      </source>
      <source relative_path="library" type="src">
        <files mask="aes.c"/>
        <files mask="aesni.c"/>
        <files mask="arc4.c"/>
        <files mask="aria.c"/>
        <files mask="asn1parse.c"/>
        <files mask="asn1write.c"/>
        <files mask="base64.c"/>
        <files mask="bignum.c"/>
        <files mask="blowfish.c"/>
        <files mask="camellia.c"/>
        <files mask="ccm.c"/>
        <files mask="certs.c"/>
        <files mask="cipher.c"/>
        <files mask="cipher_wrap.c"/>
        <files mask="chacha20.c"/>
        <files mask="chachapoly.c"/>
        <files mask="cmac.c"/>
        <files mask="ctr_drbg.c"/>
        <files mask="debug.c"/>
        <files mask="des.c"/>
        <files mask="dhm.c"/>
        <files mask="ecdh.c"/>
        <files mask="ecdsa.c"/>
        <files mask="ecjpake.c"/>
        <files mask="ecp.c"/>
        <files mask="ecp_curves.c"/>
        <files mask="entropy.c"/>
        <files mask="entropy_poll.c"/>
        <files mask="error.c"/>
        <files mask="gcm.c"/>
        <files mask="havege.c"/>
        <files mask="hkdf.c"/>
        <files mask="hmac_drbg.c"/>
        <files mask="md.c"/>
        <files mask="md_wrap.c"/>
        <files mask="md2.c"/>
        <files mask="md4.c"/>
        <files mask="md5.c"/>
        <files mask="memory_buffer_alloc.c"/>
        <files mask="net_sockets.c"/>
        <files mask="nist_kw.c"/>
        <files mask="oid.c"/>
        <files mask="padlock.c"/>
        <files mask="pem.c"/>
        <files mask="pk.c"/>
        <files mask="pk_wrap.c"/>
        <files mask="pkcs5.c"/>
        <files mask="pkcs11.c"/>
        <files mask="pkcs12.c"/>
        <files mask="pkparse.c"/>
        <files mask="pkwrite.c"/>
        <files mask="platform.c"/>
        <files mask="platform_util.c"/>
        <files mask="poly1305.c"/>
        <files mask="ripemd160.c"/>
        <files mask="rsa.c"/>
        <files mask="rsa_internal.c"/>
        <files mask="sha1.c"/>
        <files mask="sha256.c"/>
        <files mask="sha512.c"/>
        <files mask="ssl_cache.c"/>
        <files mask="ssl_ciphersuites.c"/>
        <files mask="ssl_cli.c"/>
        <files mask="ssl_cookie.c"/>
        <files mask="ssl_srv.c"/>
        <files mask="ssl_ticket.c"/>
        <files mask="ssl_tls.c"/>
        <files mask="threading.c"/>
        <files mask="timing.c"/>
        <files mask="version.c"/>
        <files mask="version_features.c"/>
        <files mask="x509.c"/>
        <files mask="x509_create.c"/>
        <files mask="x509_crl.c"/>
        <files mask="x509_crt.c"/>
        <files mask="x509_csr.c"/>
        <files mask="x509write_crt.c"/>
        <files mask="x509write_csr.c"/>
        <files mask="xtea.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_mbedtls_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="library" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls.port.ksdk.MIMXRT1024" name="mbedtls_ksdk" brief="mbedTLS port library for KPSDK" version="2.16.6" full_name="MbedTLS MCUX SDK port layer" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="Security/mbedTLS library" user_visible="true" type="middleware" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <dependencies>
        <component_dependency value="middleware.mbedtls.rt.MIMXRT1024"/>
      </dependencies>
      <source relative_path="port/ksdk" type="src">
        <files mask="ksdk_mbedtls.c"/>
        <files mask="des_alt.c"/>
        <files mask="aes_alt.c"/>
        <files mask="ecp_alt.c"/>
        <files mask="ecp_curves_alt.c"/>
        <files mask="ecp_alt_ksdk.c"/>
      </source>
      <source relative_path="port/ksdk" type="c_include">
        <files mask="ksdk_mbedtls.h"/>
        <files mask="ksdk_mbedtls_config.h"/>
        <files mask="sha1_alt.h"/>
        <files mask="sha256_alt.h"/>
        <files mask="des_alt.h"/>
        <files mask="aes_alt.h"/>
        <files mask="ecp_alt.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_mbedtls_port_ksdk_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/ksdk" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls.port.sssapi.MIMXRT1024" name="mbedtls_sssapi" brief="mbedTLS port library for SSSAPI" version="2.16.6" full_name="MbedTLS MCUX SDK port layer via SSSAPI" devices="MIMXRT1024xxxxx" category="Security/mbedTLS library" user_visible="true" type="middleware" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <source relative_path="port/sssapi" type="src">
        <files mask="sssapi_mbedtls.c"/>
        <files mask="ccm_alt.c"/>
        <files mask="cmac_alt.c"/>
        <files mask="sha256_alt.c"/>
        <files mask="sha512_alt.c"/>
        <files mask="ecdh_alt.c"/>
        <files mask="ecdsa_alt.c"/>
        <files mask="entropy_poll_alt.c"/>
      </source>
      <source relative_path="port/sssapi" type="c_include">
        <files mask="sssapi_mbedtls.h"/>
        <files mask="sssapi_mbedtls_config.h"/>
        <files mask="ccm_alt.h"/>
        <files mask="cmac_alt.h"/>
        <files mask="sha256_alt.h"/>
        <files mask="sha512_alt.h"/>
        <files mask="ecdh_alt.h"/>
        <files mask="ecdsa_alt.h"/>
      </source>
      <include_paths>
        <include_path relative_path="port/sssapi" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls.rt.MIMXRT1024" name="mbedtls_lpc" brief="On-chip RT Crypto accelerator" version="2.16.6" full_name="MbedTLS Adaptation for On-chip RT Crypto accelerator." devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="Security/mbedTLS library" user_visible="true" type="middleware" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <dependencies>
        <all>
          <component_dependency value="middleware.mbedtls.MIMXRT1024"/>
          <component_dependency value="middleware.mbedtls.port.ksdk.MIMXRT1024"/>
          <component_dependency value="platform.drivers.dcp.MIMXRT1024"/>
          <component_dependency value="platform.drivers.trng.MIMXRT1024"/>
          <component_dependency value="platform.drivers.cache_armv7_m7.MIMXRT1024"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_mbedtls_rt_MIMXRT1024.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.mbedtls.template.MIMXRT1024" name="mbedtls_template" brief="mbedTLS Template" version="2.16.6" full_name="mbedTLS Template" devices="MIMXRT1024xxxxx" user_visible="false" type="project_template" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <defines>
        <define name="MBEDTLS_CONFIG_FILE" value="'&quot;ksdk_mbedtls_config.h&quot;'"/>
      </defines>
      <source relative_path="port/ksdk" type="c_include">
        <files mask="ksdk_mbedtls_config.h"/>
      </source>
      <include_paths>
        <include_path relative_path="port/ksdk" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls.unused_files.MIMXRT1024" name="unused_files" brief="mbedTLS files unused by projects" version="2.16.6" full_name="MbedTLS unused files" devices="MIMXRT1024xxxxx" user_visible="false" type="other" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <source exclude="true" relative_path="configs" type="c_include">
        <files mask="config-mini-tls1_1.h" hidden="true"/>
        <files mask="config-ccm-psk-tls1_2.h" hidden="true"/>
        <files mask="config-no-entropy.h" hidden="true"/>
        <files mask="config-suite-b.h" hidden="true"/>
        <files mask="config-thread.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="configs" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="doxygen" type="other">
        <files mask="mbedtls.doxyfile" hidden="true"/>
      </source>
      <source exclude="true" relative_path="doxygen/input" type="c_include">
        <files mask="doc_rng.h" hidden="true"/>
        <files mask="doc_hashing.h" hidden="true"/>
        <files mask="doc_mainpage.h" hidden="true"/>
        <files mask="doc_x509.h" hidden="true"/>
        <files mask="doc_tcpip.h" hidden="true"/>
        <files mask="doc_ssltls.h" hidden="true"/>
        <files mask="doc_encdec.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="include" type="other">
        <files mask=".gitignore" hidden="true"/>
      </source>
      <source exclude="true" relative_path="include" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="library" type="other">
        <files mask=".gitignore" hidden="true"/>
        <files mask="Makefile" hidden="true"/>
      </source>
      <source exclude="true" relative_path="library" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs" type="other">
        <files mask="Makefile" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/aes" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/aes" type="src">
        <files mask="aescrypt2.c" hidden="true"/>
        <files mask="crypt_and_hash.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/hash" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/hash" type="src">
        <files mask="generic_sum.c" hidden="true"/>
        <files mask="hello.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/pkey" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
        <files mask="dh_prime.txt" hidden="true"/>
        <files mask="rsa_priv.txt" hidden="true"/>
        <files mask="rsa_pub.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/pkey" type="src">
        <files mask="pk_sign.c" hidden="true"/>
        <files mask="ecdh_curve25519.c" hidden="true"/>
        <files mask="rsa_genkey.c" hidden="true"/>
        <files mask="mpi_demo.c" hidden="true"/>
        <files mask="dh_server.c" hidden="true"/>
        <files mask="pk_decrypt.c" hidden="true"/>
        <files mask="rsa_verify.c" hidden="true"/>
        <files mask="gen_key.c" hidden="true"/>
        <files mask="rsa_verify_pss.c" hidden="true"/>
        <files mask="dh_client.c" hidden="true"/>
        <files mask="rsa_sign.c" hidden="true"/>
        <files mask="pk_encrypt.c" hidden="true"/>
        <files mask="rsa_decrypt.c" hidden="true"/>
        <files mask="ecdsa.c" hidden="true"/>
        <files mask="key_app.c" hidden="true"/>
        <files mask="pk_verify.c" hidden="true"/>
        <files mask="dh_genprime.c" hidden="true"/>
        <files mask="rsa_encrypt.c" hidden="true"/>
        <files mask="key_app_writer.c" hidden="true"/>
        <files mask="rsa_sign_pss.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/random" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/random" type="src">
        <files mask="gen_random_ctr_drbg.c" hidden="true"/>
        <files mask="gen_entropy.c" hidden="true"/>
        <files mask="gen_random_havege.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/ssl" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/ssl" type="src">
        <files mask="ssl_client1.c" hidden="true"/>
        <files mask="ssl_server.c" hidden="true"/>
        <files mask="ssl_pthread_server.c" hidden="true"/>
        <files mask="ssl_server2.c" hidden="true"/>
        <files mask="ssl_fork_server.c" hidden="true"/>
        <files mask="ssl_mail_client.c" hidden="true"/>
        <files mask="dtls_server.c" hidden="true"/>
        <files mask="query_config.c" hidden="true"/>
        <files mask="mini_client.c" hidden="true"/>
        <files mask="dtls_client.c" hidden="true"/>
        <files mask="ssl_client2.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/test" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/test" type="src">
        <files mask="selftest.c" hidden="true"/>
        <files mask="udp_proxy.c" hidden="true"/>
        <files mask="benchmark.c" hidden="true"/>
        <files mask="cpp_dummy_build.cpp" hidden="true"/>
        <files mask="query_compile_time_config.c" hidden="true"/>
        <files mask="zeroize.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/test" type="script">
        <files mask="udp_proxy_wrapper.sh" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/util" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/util" type="src">
        <files mask="strerror.c" hidden="true"/>
        <files mask="pem2der.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/x509" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="programs/x509" type="src">
        <files mask="crl_app.c" hidden="true"/>
        <files mask="cert_req.c" hidden="true"/>
        <files mask="cert_app.c" hidden="true"/>
        <files mask="req_app.c" hidden="true"/>
        <files mask="cert_write.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="scripts" type="other">
        <files mask="generate_features.pl" hidden="true"/>
        <files mask="find-mem-leak.cocci" hidden="true"/>
        <files mask="rm-calloc-cast.cocci" hidden="true"/>
        <files mask="generate_query_config.pl" hidden="true"/>
        <files mask="generate_errors.pl" hidden="true"/>
        <files mask="generate_visualc_files.pl" hidden="true"/>
        <files mask="rename.pl" hidden="true"/>
        <files mask="config.pl" hidden="true"/>
        <files mask="massif_max.pl" hidden="true"/>
      </source>
      <source exclude="true" relative_path="scripts" type="script">
        <files mask="memory.sh" hidden="true"/>
        <files mask="apidoc_full.sh" hidden="true"/>
        <files mask="output_env.sh" hidden="true"/>
        <files mask="tmp_ignore_makefiles.sh" hidden="true"/>
        <files mask="abi_check.py" hidden="true"/>
        <files mask="footprint.sh" hidden="true"/>
        <files mask="bump_version.sh" hidden="true"/>
        <files mask="ecc-heap.sh" hidden="true"/>
      </source>
      <source exclude="true" relative_path="scripts/data_files" type="other">
        <files mask="vs2010-sln-template.sln" hidden="true"/>
        <files mask="version_features.fmt" hidden="true"/>
        <files mask="vs2010-main-template.vcxproj" hidden="true"/>
        <files mask="query_config.fmt" hidden="true"/>
        <files mask="vs2010-app-template.vcxproj" hidden="true"/>
        <files mask="error.fmt" hidden="true"/>
        <files mask="vs6-workspace-template.dsw" hidden="true"/>
        <files mask="vs6-app-template.dsp" hidden="true"/>
        <files mask="vs6-main-template.dsp" hidden="true"/>
      </source>
      <source exclude="true" relative_path="scripts/data_files" type="doc">
        <files mask="rename-1.3-2.0.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tests" type="other">
        <files mask="Makefile" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tests/data_files" type="other">
        <files mask="hash_file_2" hidden="true"/>
        <files mask="hash_file_5" hidden="true"/>
        <files mask="mpi_too_big" hidden="true"/>
        <files mask="hash_file_4" hidden="true"/>
        <files mask="hash_file_1" hidden="true"/>
        <files mask="hash_file_3" hidden="true"/>
        <files mask="mpi_10" hidden="true"/>
        <files mask="Makefile" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tests/data_files/dir3" type="other">
        <files mask="Readme" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tests/data_files/dir4" type="other">
        <files mask="Readme" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tests/scripts" type="other">
        <files mask="gen_gcm_encrypt.pl" hidden="true"/>
        <files mask="run-test-suites.pl" hidden="true"/>
        <files mask="curves.pl" hidden="true"/>
        <files mask="gen_pkcs1_v21_sign_verify.pl" hidden="true"/>
        <files mask="tcp_client.pl" hidden="true"/>
        <files mask="key-exchanges.pl" hidden="true"/>
        <files mask="test_zeroize.gdb" hidden="true"/>
        <files mask="recursion.pl" hidden="true"/>
        <files mask="depends-pkalgs.pl" hidden="true"/>
        <files mask="test-ref-configs.pl" hidden="true"/>
        <files mask="gen_gcm_decrypt.pl" hidden="true"/>
        <files mask="depends-hashes.pl" hidden="true"/>
        <files mask="gen_ctr_drbg.pl" hidden="true"/>
        <files mask="list-enum-consts.pl" hidden="true"/>
        <files mask="check-doxy-blocks.pl" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tests/scripts" type="script">
        <files mask="travis-log-failure.sh" hidden="true"/>
        <files mask="generate_test_code.py" hidden="true"/>
        <files mask="check-python-files.sh" hidden="true"/>
        <files mask="generate-afl-tests.sh" hidden="true"/>
        <files mask="test_generate_test_code.py" hidden="true"/>
        <files mask="list-macros.sh" hidden="true"/>
        <files mask="doxygen.sh" hidden="true"/>
        <files mask="all.sh" hidden="true"/>
        <files mask="list-symbols.sh" hidden="true"/>
        <files mask="list-identifiers.sh" hidden="true"/>
        <files mask="check-generated-files.sh" hidden="true"/>
        <files mask="check-names.sh" hidden="true"/>
        <files mask="check-files.py" hidden="true"/>
        <files mask="mbedtls_test.py" hidden="true"/>
        <files mask="basic-build-test.sh" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tests/suites" type="other">
        <files mask="test_suite_cipher.padding.data" hidden="true"/>
        <files mask="test_suite_aes.cbc.data" hidden="true"/>
        <files mask="test_suite_gcm.camellia.data" hidden="true"/>
        <files mask="test_suite_error.data" hidden="true"/>
        <files mask="test_suite_chachapoly.function" hidden="true"/>
        <files mask="test_suite_gcm.function" hidden="true"/>
        <files mask="test_suite_cipher.function" hidden="true"/>
        <files mask="test_suite_cipher.ccm.data" hidden="true"/>
        <files mask="test_suite_pkcs1_v15.function" hidden="true"/>
        <files mask="test_suite_des.data" hidden="true"/>
        <files mask="test_suite_ccm.function" hidden="true"/>
        <files mask="host_test.function" hidden="true"/>
        <files mask="test_suite_aes.function" hidden="true"/>
        <files mask="test_suite_dhm.function" hidden="true"/>
        <files mask="test_suite_pkcs5.function" hidden="true"/>
        <files mask="test_suite_md.data" hidden="true"/>
        <files mask="test_suite_mdx.data" hidden="true"/>
        <files mask="test_suite_timing.function" hidden="true"/>
        <files mask="test_suite_ccm.data" hidden="true"/>
        <files mask="test_suite_aria.data" hidden="true"/>
        <files mask="test_suite_cipher.gcm.data" hidden="true"/>
        <files mask="test_suite_asn1write.function" hidden="true"/>
        <files mask="test_suite_md.function" hidden="true"/>
        <files mask="test_suite_pk.function" hidden="true"/>
        <files mask="test_suite_ecp.data" hidden="true"/>
        <files mask="test_suite_mdx.function" hidden="true"/>
        <files mask="test_suite_all.function" hidden="true"/>
        <files mask="test_suite_hmac_drbg.no_reseed.data" hidden="true"/>
        <files mask="test_suite_debug.data" hidden="true"/>
        <files mask="test_suite_version.data" hidden="true"/>
        <files mask="test_suite_cipher.blowfish.data" hidden="true"/>
        <files mask="test_suite_hmac_drbg.function" hidden="true"/>
        <files mask="test_suite_cipher.arc4.data" hidden="true"/>
        <files mask="target_test.function" hidden="true"/>
        <files mask="test_suite_blowfish.data" hidden="true"/>
        <files mask="test_suite_x509parse.data" hidden="true"/>
        <files mask="test_suite_x509parse.function" hidden="true"/>
        <files mask="test_suite_aes.ofb.data" hidden="true"/>
        <files mask="test_suite_gcm.aes256_de.data" hidden="true"/>
        <files mask="test_suite_gcm.aes128_en.data" hidden="true"/>
        <files mask="test_suite_nist_kw.data" hidden="true"/>
        <files mask="test_suite_entropy.data" hidden="true"/>
        <files mask="test_suite_chacha20.data" hidden="true"/>
        <files mask="test_suite_ctr_drbg.function" hidden="true"/>
        <files mask="test_suite_base64.function" hidden="true"/>
        <files mask="test_suite_pkwrite.data" hidden="true"/>
        <files mask="test_suite_all.data" hidden="true"/>
        <files mask="test_suite_cipher.des.data" hidden="true"/>
        <files mask="test_suite_pk.data" hidden="true"/>
        <files mask="test_suite_camellia.data" hidden="true"/>
        <files mask="test_suite_shax.data" hidden="true"/>
        <files mask="test_suite_ecjpake.data" hidden="true"/>
        <files mask="test_suite_chacha20.function" hidden="true"/>
        <files mask="test_suite_hmac_drbg.misc.data" hidden="true"/>
        <files mask="test_suite_pkcs1_v21.function" hidden="true"/>
        <files mask="test_suite_rsa.data" hidden="true"/>
        <files mask="test_suite_pkwrite.function" hidden="true"/>
        <files mask="test_suite_ecdh.function" hidden="true"/>
        <files mask="test_suite_pkcs5.data" hidden="true"/>
        <files mask="test_suite_pem.function" hidden="true"/>
        <files mask="test_suite_gcm.aes192_en.data" hidden="true"/>
        <files mask="test_suite_base64.data" hidden="true"/>
        <files mask="test_suite_chachapoly.data" hidden="true"/>
        <files mask="test_suite_aria.function" hidden="true"/>
        <files mask="test_suite_x509write.data" hidden="true"/>
        <files mask="test_suite_shax.function" hidden="true"/>
        <files mask="test_suite_aes.cfb.data" hidden="true"/>
        <files mask="test_suite_nist_kw.function" hidden="true"/>
        <files mask="test_suite_cmac.function" hidden="true"/>
        <files mask="test_suite_ecp.function" hidden="true"/>
        <files mask="test_suite_gcm.aes192_de.data" hidden="true"/>
        <files mask="test_suite_arc4.function" hidden="true"/>
        <files mask="test_suite_mpi.function" hidden="true"/>
        <files mask="test_suite_gcm.aes256_en.data" hidden="true"/>
        <files mask="test_suite_entropy.function" hidden="true"/>
        <files mask="test_suite_ecdsa.function" hidden="true"/>
        <files mask="test_suite_aes.xts.data" hidden="true"/>
        <files mask="test_suite_aes.rest.data" hidden="true"/>
        <files mask="test_suite_gcm.aes128_de.data" hidden="true"/>
        <files mask="test_suite_gcm.misc.data" hidden="true"/>
        <files mask="test_suite_xtea.data" hidden="true"/>
        <files mask="test_suite_hkdf.data" hidden="true"/>
        <files mask="test_suite_pkparse.function" hidden="true"/>
        <files mask="test_suite_cipher.camellia.data" hidden="true"/>
        <files mask="test_suite_ctr_drbg.data" hidden="true"/>
        <files mask="test_suite_hkdf.function" hidden="true"/>
        <files mask="test_suite_timing.data" hidden="true"/>
        <files mask="test_suite_ecjpake.function" hidden="true"/>
        <files mask="test_suite_pkcs1_v15.data" hidden="true"/>
        <files mask="test_suite_pkcs1_v21.data" hidden="true"/>
        <files mask="test_suite_cipher.null.data" hidden="true"/>
        <files mask="main_test.function" hidden="true"/>
        <files mask="test_suite_des.function" hidden="true"/>
        <files mask="test_suite_cipher.chachapoly.data" hidden="true"/>
        <files mask="helpers.function" hidden="true"/>
        <files mask="test_suite_aes.ecb.data" hidden="true"/>
        <files mask="test_suite_poly1305.data" hidden="true"/>
        <files mask="test_suite_poly1305.function" hidden="true"/>
        <files mask="test_suite_cipher.aes.data" hidden="true"/>
        <files mask="test_suite_cmac.data" hidden="true"/>
        <files mask="test_suite_pem.data" hidden="true"/>
        <files mask="test_suite_ssl.data" hidden="true"/>
        <files mask="test_suite_xtea.function" hidden="true"/>
        <files mask="test_suite_mpi.data" hidden="true"/>
        <files mask="test_suite_blowfish.function" hidden="true"/>
        <files mask="test_suite_camellia.function" hidden="true"/>
        <files mask="test_suite_memory_buffer_alloc.function" hidden="true"/>
        <files mask="test_suite_hmac_drbg.nopr.data" hidden="true"/>
        <files mask="test_suite_hmac_drbg.pr.data" hidden="true"/>
        <files mask="test_suite_asn1write.data" hidden="true"/>
        <files mask="test_suite_arc4.data" hidden="true"/>
        <files mask="test_suite_error.function" hidden="true"/>
        <files mask="test_suite_dhm.data" hidden="true"/>
        <files mask="test_suite_version.function" hidden="true"/>
        <files mask="test_suite_pkparse.data" hidden="true"/>
        <files mask="test_suite_cipher.misc.data" hidden="true"/>
        <files mask="test_suite_debug.function" hidden="true"/>
        <files mask="test_suite_ssl.function" hidden="true"/>
        <files mask="test_suite_rsa.function" hidden="true"/>
        <files mask="test_suite_memory_buffer_alloc.data" hidden="true"/>
        <files mask="test_suite_ecdh.data" hidden="true"/>
        <files mask="test_suite_ecdsa.data" hidden="true"/>
        <files mask="test_suite_x509write.function" hidden="true"/>
        <files mask="test_suite_cipher.chacha20.data" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tests/git-scripts" type="other">
        <files mask="README.md" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tests/git-scripts" type="script">
        <files mask="pre-push.sh" hidden="true"/>
      </source>
      <source exclude="true" relative_path="visualc/VS2010" type="other">
        <files mask="gen_random_havege.vcxproj" hidden="true"/>
        <files mask="dh_genprime.vcxproj" hidden="true"/>
        <files mask="cert_app.vcxproj" hidden="true"/>
        <files mask="dh_server.vcxproj" hidden="true"/>
        <files mask="generic_sum.vcxproj" hidden="true"/>
        <files mask="ssl_mail_client.vcxproj" hidden="true"/>
        <files mask="pk_encrypt.vcxproj" hidden="true"/>
        <files mask="cert_write.vcxproj" hidden="true"/>
        <files mask="ecdh_curve25519.vcxproj" hidden="true"/>
        <files mask="cert_req.vcxproj" hidden="true"/>
        <files mask="gen_key.vcxproj" hidden="true"/>
        <files mask="rsa_encrypt.vcxproj" hidden="true"/>
        <files mask="key_app.vcxproj" hidden="true"/>
        <files mask="key_app_writer.vcxproj" hidden="true"/>
        <files mask="ssl_server2.vcxproj" hidden="true"/>
        <files mask="rsa_verify_pss.vcxproj" hidden="true"/>
        <files mask="udp_proxy.vcxproj" hidden="true"/>
        <files mask="rsa_sign.vcxproj" hidden="true"/>
        <files mask="strerror.vcxproj" hidden="true"/>
        <files mask="zeroize.vcxproj" hidden="true"/>
        <files mask="dh_client.vcxproj" hidden="true"/>
        <files mask="mbedTLS.sln" hidden="true"/>
        <files mask="ssl_client1.vcxproj" hidden="true"/>
        <files mask="pem2der.vcxproj" hidden="true"/>
        <files mask="selftest.vcxproj" hidden="true"/>
        <files mask="req_app.vcxproj" hidden="true"/>
        <files mask="query_compile_time_config.vcxproj" hidden="true"/>
        <files mask="ssl_client2.vcxproj" hidden="true"/>
        <files mask="rsa_genkey.vcxproj" hidden="true"/>
        <files mask="hello.vcxproj" hidden="true"/>
        <files mask="benchmark.vcxproj" hidden="true"/>
        <files mask="pk_verify.vcxproj" hidden="true"/>
        <files mask="mbedTLS.vcxproj" hidden="true"/>
        <files mask="rsa_verify.vcxproj" hidden="true"/>
        <files mask="rsa_decrypt.vcxproj" hidden="true"/>
        <files mask="mini_client.vcxproj" hidden="true"/>
        <files mask="ssl_server.vcxproj" hidden="true"/>
        <files mask="mpi_demo.vcxproj" hidden="true"/>
        <files mask="ecdsa.vcxproj" hidden="true"/>
        <files mask="dtls_client.vcxproj" hidden="true"/>
        <files mask="rsa_sign_pss.vcxproj" hidden="true"/>
        <files mask="ssl_fork_server.vcxproj" hidden="true"/>
        <files mask="aescrypt2.vcxproj" hidden="true"/>
        <files mask="gen_random_ctr_drbg.vcxproj" hidden="true"/>
        <files mask="gen_entropy.vcxproj" hidden="true"/>
        <files mask="dtls_server.vcxproj" hidden="true"/>
        <files mask="crypt_and_hash.vcxproj" hidden="true"/>
        <files mask="pk_decrypt.vcxproj" hidden="true"/>
        <files mask="pk_sign.vcxproj" hidden="true"/>
        <files mask="crl_app.vcxproj" hidden="true"/>
      </source>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="CMakeLists.txt" hidden="true"/>
        <files mask="apache-2.0.txt" hidden="true"/>
        <files mask="mbeTLS_for_Kinetis_SDK_v2.0_readme.txt" hidden="true"/>
        <files mask="dco.txt" hidden="true"/>
        <files mask="ChangeLogKSDK.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="./" type="other">
        <files mask="CONTRIBUTING.md" hidden="true"/>
        <files mask="DartConfiguration.tcl" hidden="true"/>
        <files mask="README.md" hidden="true"/>
        <files mask=".globalrc" hidden="true"/>
        <files mask=".travis.yml" hidden="true"/>
        <files mask=".gitignore" hidden="true"/>
        <files mask=".pylintrc" hidden="true"/>
        <files mask="mbeTLS_for_Kinetis_SDK_v2.0_readme.meta" hidden="true"/>
        <files mask="LICENSE" hidden="true"/>
        <files mask="ChangeLog" hidden="true"/>
        <files mask="Makefile" hidden="true"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.CMSIS_cm7_headers.MIMXRT1024" name="CMSIS_cm7_headers" brief="CMSIS cm7 headers" version="2.8.0" full_name="Middleware mcu-boot cmsis_cm7_headers" devices="MIMXRT1024xxxxx" user_visible="false" type="middleware" package_base_path="CMSIS/Include" project_base_path="CMSIS">
      <source toolchain="mcuxpresso" relative_path="./" type="c_include">
        <files mask="mpu_armv7.h"/>
        <files mask="core_cm7.h"/>
        <files mask="cmsis_version.h"/>
        <files mask="cmsis_gcc.h"/>
        <files mask="cmsis_compiler.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" toolchain="mcuxpresso" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcu-boot.MIMXRT1024_sources.MIMXRT1024" name="MCUBOOT_MIMXRT1024_sources" brief="MCUBOOT MIMXRT1024 sources" version="1.0.0" full_name="Middleware mcu-boot MIMXRT1024_sources" devices="MIMXRT1024xxxxx" user_visible="false" type="middleware" package_base_path="middleware/mcu-boot" project_base_path="MIMXRT1024">
      <source relative_path="targets/MIMXRT1024/src" project_relative_path="./" type="src">
        <files mask="bl_api.c"/>
        <files mask="bl_clock_config_MIMXRT1024.c"/>
        <files mask="hardware_init_MIMXRT1024.c"/>
        <files mask="memory_map_MIMXRT1024.c"/>
        <files mask="external_memory_property_map_MIMXRT1024.c"/>
        <files mask="flexspi_nor_config_MIMXRT1024.c"/>
        <files mask="bl_peripherals_MIMXRT1024.c"/>
        <files mask="bl_lpuart_irq_config_MIMXRT1024.c"/>
      </source>
      <source relative_path="targets/MIMXRT1024/src" project_relative_path="./" type="c_include">
        <files mask="bl_api.h"/>
        <files mask="bootloader_config.h"/>
        <files mask="peripherals_pinmux.h"/>
        <files mask="target_config.h"/>
        <files mask="fusemap.h"/>
      </source>
      <source relative_path="targets/common/src" project_relative_path="./" type="src">
        <files mask="pinmux_utility_imxrt_series.c"/>
      </source>
      <source relative_path="targets/MIMXRT1024/src" project_relative_path="../source/usb/bm_composite" type="c_include">
        <files mask="usb_device_config.h"/>
      </source>
      <source relative_path="targets/MIMXRT1024/src" project_relative_path="../source/memory/src" type="src">
        <files mask="sram_init_MIMXRT1024.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_mcu-boot_MIMXRT1024_sources_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="targets/MIMXRT1024/src" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcu-boot.MIMXRT1024_startup.MIMXRT1024" name="MCUBOOT_MIMXRT1024_startup" brief="MCUBOOT MIMXRT1024 startup sources" version="1.0.0" full_name="Middleware mcu-boot MIMXRT1024_startup" devices="MIMXRT1024xxxxx" user_visible="false" type="middleware" package_base_path="middleware/mcu-boot" project_base_path="mcu-boot">
      <source relative_path="../../devices/MIMXRT1024" project_relative_path="../device" type="c_include">
        <files mask="system_MIMXRT1024.h"/>
      </source>
      <source relative_path="targets/MIMXRT1024/src/startup" project_relative_path="../device" type="src">
        <files mask="system_MIMXRT1024.c"/>
      </source>
      <source toolchain="iar" relative_path="targets/MIMXRT1024/src/startup/iar" project_relative_path="../startup" type="asm_include">
        <files mask="startup_MIMXRT1024.s"/>
      </source>
      <source toolchain="mcuxpresso armgcc" relative_path="targets/MIMXRT1024/src/startup/gcc" project_relative_path="../startup" type="asm_include">
        <files mask="startup_MIMXRT1024.S"/>
      </source>
      <source toolchain="mcuxpresso armgcc" relative_path="src/startup" project_relative_path="../startup" type="asm_include">
        <files mask="crt0_gcc.S"/>
      </source>
      <source toolchain="mdk" relative_path="targets/MIMXRT1024/src/startup/arm" project_relative_path="../startup" type="asm_include">
        <files mask="startup_MIMXRT1024.S"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_mcu-boot_MIMXRT1024_startup_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="../../devices/MIMXRT1024" project_relative_path="../device" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcu-boot.bootsources.MIMXRT1024" name="MCUBOOT_common_sources" brief="Bootloader common sources" version="2.7.0" full_name="Middleware mcu-boot bootsources" devices="MIMXRT1024xxxxx" user_visible="false" type="middleware" package_base_path="middleware/mcu-boot" project_base_path="source">
      <source relative_path="src/autobaud" project_relative_path="autobaud" type="c_include">
        <files mask="autobaud.h"/>
      </source>
      <source relative_path="src/autobaud/src" project_relative_path="autobaud" type="src">
        <files mask="autobaud_irq.c"/>
      </source>
      <source relative_path="src/bootloader" project_relative_path="bootloader" type="c_include">
        <files mask="bl_peripheral_interface.h"/>
        <files mask="bl_user_entry.h"/>
        <files mask="bl_version.h"/>
        <files mask="bootloader.h"/>
        <files mask="bl_command.h"/>
        <files mask="bl_context.h"/>
        <files mask="bl_peripheral.h"/>
        <files mask="bl_shutdown_cleanup.h"/>
        <files mask="bl_irq_common.h"/>
        <files mask="bl_app_crc_check.h"/>
      </source>
      <source relative_path="src/bootloader/src" project_relative_path="bootloader/src" type="src">
        <files mask="bl_user_entry.c"/>
        <files mask="bl_main.c"/>
        <files mask="bl_context.c"/>
        <files mask="bl_exception_handler.c"/>
        <files mask="bl_tree_root.c"/>
        <files mask="bl_command.c"/>
        <files mask="bl_shutdown_cleanup.c"/>
        <files mask="bl_app_crc_check.c"/>
        <files mask="bl_misc.c"/>
      </source>
      <source relative_path="src/crc" project_relative_path="crc" type="c_include">
        <files mask="crc16.h"/>
        <files mask="crc32.h"/>
      </source>
      <source relative_path="src/crc/src" project_relative_path="crc" type="src">
        <files mask="crc16.c"/>
        <files mask="crc32.c"/>
      </source>
      <source relative_path="src/include" project_relative_path="include" type="c_include">
        <files mask="bootloader_common.h"/>
      </source>
      <source relative_path="src/memory" project_relative_path="memory" type="c_include">
        <files mask="memory.h"/>
      </source>
      <source relative_path="src/memory/src" project_relative_path="memory/src" type="c_include">
        <files mask="sram_init.h"/>
        <files mask="normal_memory.h"/>
        <files mask="pattern_fill.h"/>
      </source>
      <source relative_path="src/memory/src" project_relative_path="memory/src" type="src">
        <files mask="memory.c"/>
        <files mask="normal_memory.c"/>
      </source>
      <source toolchain="iar" relative_path="src/memory/src" project_relative_path="memory/src" type="asm_include">
        <files mask="pattern_fill.s"/>
      </source>
      <source toolchain="mcuxpresso armgcc" relative_path="src/memory/src" project_relative_path="memory/src" type="asm_include">
        <files mask="pattern_fill_gcc.S"/>
      </source>
      <source toolchain="mdk" relative_path="src/memory/src" project_relative_path="memory/src" type="asm_include">
        <files mask="pattern_fill_mdk.s"/>
      </source>
      <source relative_path="src/startup" project_relative_path="../startup" type="c_include">
        <files mask="ar_asm_macros.h"/>
      </source>
      <source relative_path="src/packet" project_relative_path="packet" type="c_include">
        <files mask="command_packet.h"/>
        <files mask="serial_packet.h"/>
      </source>
      <source relative_path="src/packet/src" project_relative_path="packet/src" type="src">
        <files mask="serial_packet.c"/>
      </source>
      <source relative_path="src/property" project_relative_path="property" type="c_include">
        <files mask="property.h"/>
      </source>
      <source relative_path="src/sbloader" project_relative_path="sbloader" type="c_include">
        <files mask="sbloader.h"/>
        <files mask="sb_file_format.h"/>
      </source>
      <source relative_path="src/sbloader/src" project_relative_path="sbloader/src" type="src">
        <files mask="sbloader.c"/>
      </source>
      <source relative_path="src/utilities" project_relative_path="utilities" type="c_include">
        <files mask="fsl_rtos_abstraction.h"/>
        <files mask="fsl_assert.h"/>
        <files mask="vector_table_info.h"/>
      </source>
      <source relative_path="src/utilities/src" project_relative_path="utilities/src" type="src">
        <files mask="fsl_assert.c"/>
        <files mask="fsl_rtos_abstraction.c"/>
        <files mask="debug_util.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_mcu-boot_bootsources_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/autobaud" project_relative_path="autobaud" type="c_include"/>
        <include_path relative_path="src/bootloader" project_relative_path="bootloader" type="c_include"/>
        <include_path relative_path="src/crc" project_relative_path="crc" type="c_include"/>
        <include_path relative_path="src/include" project_relative_path="include" type="c_include"/>
        <include_path relative_path="src/memory" project_relative_path="memory" type="c_include"/>
        <include_path relative_path="src/memory/src" project_relative_path="memory/src" type="c_include"/>
        <include_path relative_path="src/startup" project_relative_path="../startup" type="c_include"/>
        <include_path relative_path="src/packet" project_relative_path="packet" type="c_include"/>
        <include_path relative_path="src/property" project_relative_path="property" type="c_include"/>
        <include_path relative_path="src/sbloader" project_relative_path="sbloader" type="c_include"/>
        <include_path relative_path="src/utilities" project_relative_path="utilities" type="c_include"/>
        <include_path relative_path="src/startup" project_relative_path="../startup" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcu-boot.bootsources_imxrt.MIMXRT1024" name="MCUBOOT_imxrt_sources" brief="Bootloader sources for i.MXRT devices" version="2.7.0" full_name="Middleware mcu-boot bootsources_imxrt" devices="MIMXRT1024xxxxx" user_visible="false" type="middleware" package_base_path="middleware/mcu-boot" project_base_path="source">
      <source relative_path="src/drivers/smc" project_relative_path="drivers" type="c_include">
        <files mask="smc.h"/>
      </source>
      <source relative_path="src/drivers/dcp" project_relative_path="drivers/dcp" type="src">
        <files mask="bl_dcp.c"/>
      </source>
      <source relative_path="src/drivers/dcp" project_relative_path="drivers/dcp" type="c_include">
        <files mask="bl_dcp.h"/>
      </source>
      <source relative_path="src/drivers/trng" project_relative_path="drivers/trng" type="src">
        <files mask="bl_trng.c"/>
      </source>
      <source relative_path="src/drivers/trng" project_relative_path="drivers/trng" type="c_include">
        <files mask="bl_trng.h"/>
      </source>
      <source relative_path="src/bootloader/src" project_relative_path="bootloader/src" type="src">
        <files mask="lpuart_peripheral_interface.c"/>
        <files mask="usb_hid_msc_peripheral_interface.c"/>
        <files mask="bl_nor_encrypt_bee.c"/>
        <files mask="bl_keyblob.c"/>
        <files mask="bl_keyblob_dcp.c"/>
      </source>
      <source relative_path="src/bootloader" project_relative_path="bootloader" type="c_include">
        <files mask="bl_nor_encrypt.h"/>
        <files mask="bl_keyblob.h"/>
      </source>
      <source relative_path="src/property/src" project_relative_path="property/src" type="src">
        <files mask="property_imx.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_mcu-boot_bootsources_imxrt_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/drivers/smc" project_relative_path="drivers" type="c_include"/>
        <include_path relative_path="src/drivers/dcp" project_relative_path="drivers/dcp" type="c_include"/>
        <include_path relative_path="src/drivers/trng" project_relative_path="drivers/trng" type="c_include"/>
        <include_path relative_path="src/bootloader" project_relative_path="bootloader" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcu-boot.drv_flexspi_nand.MIMXRT1024" name="MCUBOOT_flexspi_nand" brief="MCUBOOT flexspi nand driver" version="1.0.0" full_name="Middleware mcu-boot drv_flexspi_nand" devices="MIMXRT1024xxxxx" user_visible="false" type="middleware" package_base_path="middleware/mcu-boot" project_base_path="source">
      <source relative_path="src/drivers/flexspi" project_relative_path="drivers/flexspi" type="src">
        <files mask="bl_flexspi.c"/>
      </source>
      <source relative_path="src/drivers/flexspi" project_relative_path="drivers/flexspi" type="c_include">
        <files mask="bl_flexspi.h"/>
      </source>
      <source relative_path="src/drivers/flexspi_nand" project_relative_path="drivers/flexspi_nand" type="src">
        <files mask="flexspi_nand_flash.c"/>
      </source>
      <source relative_path="src/drivers/flexspi_nand" project_relative_path="drivers/flexspi_nand" type="c_include">
        <files mask="flexspi_nand_flash.h"/>
      </source>
      <include_paths>
        <include_path relative_path="src/drivers/flexspi" project_relative_path="drivers/flexspi" type="c_include"/>
        <include_path relative_path="src/drivers/flexspi_nand" project_relative_path="drivers/flexspi_nand" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcu-boot.drv_flexspi_nor.MIMXRT1024" name="MCUBOOT_flexspi_nor" brief="MCUBOOT flexspi nor driver" version="1.0.0" full_name="Middleware mcu-boot drv_flexspi_nor" devices="MIMXRT1024xxxxx" user_visible="false" type="middleware" package_base_path="middleware/mcu-boot" project_base_path="source">
      <source relative_path="src/drivers/flexspi" project_relative_path="drivers/flexspi" type="src">
        <files mask="bl_flexspi.c"/>
      </source>
      <source relative_path="src/drivers/flexspi" project_relative_path="drivers/flexspi" type="c_include">
        <files mask="bl_flexspi.h"/>
      </source>
      <source relative_path="src/drivers/flexspi_nor" project_relative_path="drivers/flexspi_nor" type="src">
        <files mask="flexspi_nor_flash.c"/>
      </source>
      <source relative_path="src/drivers/flexspi_nor" project_relative_path="drivers/flexspi_nor" type="c_include">
        <files mask="flexspi_nor_flash.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_mcu-boot_drv_flexspi_nor_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/drivers/flexspi" project_relative_path="drivers/flexspi" type="c_include"/>
        <include_path relative_path="src/drivers/flexspi_nor" project_relative_path="drivers/flexspi_nor" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcu-boot.drv_microseconds.MIMXRT1024" name="MCUBOOT_microseconds_sysclk" brief="MCUBOOT microseconds sysclk" version="1.0.0" full_name="Middleware mcu-boot drv_microseconds" devices="MIMXRT1024xxxxx" user_visible="false" type="middleware" package_base_path="middleware/mcu-boot" project_base_path="source">
      <source relative_path="src/drivers/microseconds" project_relative_path="drivers/microseconds" type="c_include">
        <files mask="microseconds.h"/>
      </source>
      <source relative_path="src/drivers/microseconds/src" project_relative_path="drivers/microseconds" type="src">
        <files mask="microseconds_sysclk.c"/>
      </source>
      <include_paths>
        <include_path relative_path="src/drivers/microseconds" project_relative_path="drivers/microseconds" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcu-boot.drv_microseconds_pit.MIMXRT1024" name="MCUBOOT_microseconds_pit" brief="MCUBOOT microseconds pit" version="1.0.0" full_name="Middleware mcu-boot drv_microseconds_pit" devices="MIMXRT1024xxxxx" user_visible="false" type="middleware" package_base_path="middleware/mcu-boot" project_base_path="source">
      <source relative_path="src/drivers/microseconds" project_relative_path="drivers/microseconds" type="c_include">
        <files mask="microseconds.h"/>
      </source>
      <source relative_path="src/drivers/microseconds/src" project_relative_path="drivers/microseconds" type="src">
        <files mask="microseconds_pit.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_mcu-boot_drv_microseconds_pit_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/drivers/microseconds" project_relative_path="drivers/microseconds" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcu-boot.drv_ocotp.MIMXRT1024" name="MCUBOOT_ocotp" brief="MCUBOOT ocotp driver" version="1.0.0" full_name="Middleware mcu-boot drv_ocotp" devices="MIMXRT1024xxxxx" user_visible="false" type="middleware" package_base_path="middleware/mcu-boot" project_base_path="source">
      <source relative_path="src/drivers/ocotp" project_relative_path="drivers/ocotp" type="src">
        <files mask="bl_ocotp.c"/>
      </source>
      <source relative_path="src/drivers/ocotp" project_relative_path="drivers/ocotp" type="c_include">
        <files mask="bl_ocotp.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_mcu-boot_drv_ocotp_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/drivers/ocotp" project_relative_path="drivers/ocotp" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcu-boot.imxrt102x_files.MIMXRT1024" name="imxrt102x_files" brief="imxrt102x files" version="2.7.0" full_name="Middleware mcu-boot imxrt102x_files" devices="MIMXRT1024xxxxx" user_visible="false" type="other" package_base_path="middleware/mcu-boot" project_base_path="middleware">
      <source exclude="true" relative_path="bin/Tools/mfgtools-rel/Profiles/MXRT102X/OS Firmware" project_relative_path="mcu-boot" type="xml">
        <files mask="ucl2.xml" hidden="true"/>
      </source>
      <source exclude="true" relative_path="bin/Tools/mfgtools-rel" project_relative_path="mcu-boot" type="configuration">
        <files mask="cfg_MXRT102X.ini" hidden="true"/>
      </source>
      <source exclude="true" relative_path="bin/Tools/mfgtools-rel" project_relative_path="mcu-boot" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="bin/Tools/bd_file/imxrt102x" project_relative_path="mcu-boot" type="other">
        <files mask="program_flexspinor_image_hyperflash_3v0.bd" hidden="true"/>
        <files mask="enable_hab.bd" hidden="true"/>
        <files mask="imx-itcm-signed.bd" hidden="true"/>
        <files mask="program_flexspinor_image_qspinor_status_reg2_bit7.bd" hidden="true"/>
        <files mask="program_flexspinor_image_mxic_mx25um51245g.bd" hidden="true"/>
        <files mask="imx-itcm-encrypted.bd" hidden="true"/>
        <files mask="imx-flexspinor-normal-unsigned.bd" hidden="true"/>
        <files mask="imx-dtcm-signed.bd" hidden="true"/>
        <files mask="imx-ocram-unsigned.bd" hidden="true"/>
        <files mask="imx-flexspinor-plugin-signed.bd" hidden="true"/>
        <files mask="program_flexspinor_image_qspinor_status_reg2_bit1.bd" hidden="true"/>
        <files mask="imx-itcm-unsigned.bd" hidden="true"/>
        <files mask="imx-dtcm-unsigned.bd" hidden="true"/>
        <files mask="imx-flexspinor-normal-signed.bd" hidden="true"/>
        <files mask="program_flexspinor_image_qspinor_status_reg1_bit6.bd" hidden="true"/>
        <files mask="program_flexspinor_image_mxic_mx25um51345g.bd" hidden="true"/>
        <files mask="imx-flexspinor-plugin-unsigned.bd" hidden="true"/>
        <files mask="program_flexspinor_image_qspinor_status_reg2_0x31.bd" hidden="true"/>
        <files mask="program_flexspinor_image_hyperflash_encrypt.bd" hidden="true"/>
        <files mask="program_flexspinor_image_qspinor.bd" hidden="true"/>
        <files mask="imx-dtcm-encrypted.bd" hidden="true"/>
        <files mask="program_sdcard_encrypt_image_keyblob.bd" hidden="true"/>
        <files mask="program_sdcard_image.bd" hidden="true"/>
        <files mask="program_flexspinor_image_micron_mt35x.bd" hidden="true"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.imxrt_files.MIMXRT1024" name="imxrt_files" brief="imxrt files" version="2.7.0" full_name="Middleware mcu-boot imxrt_files" devices="MIMXRT1024xxxxx" user_visible="false" type="other" package_base_path="middleware/mcu-boot" project_base_path="middleware">
      <source exclude="true" relative_path="bin/Tools/mfgtools-rel" project_relative_path="mcu-boot" type="other">
        <files mask="MfgTool2.exe" hidden="true"/>
        <files mask="MfgToolLib.dll" hidden="true"/>
      </source>
      <source exclude="true" relative_path="bin/Tools/mfgtools-rel" project_relative_path="mcu-boot" type="configuration">
        <files mask="UICfg.ini" hidden="true"/>
      </source>
      <source exclude="true" relative_path="bin/Tools/sdphost/win" project_relative_path="mcu-boot" type="other">
        <files mask="sdphost.exe" hidden="true"/>
      </source>
      <source relative_path="tools/tools/sdphost/sdphost" project_relative_path="mcu-boot" type="src">
        <files mask="sdphost.cpp" hidden="true"/>
        <files mask="stdafx.cpp" hidden="true"/>
      </source>
      <source relative_path="tools/tools/sdphost/sdphost" project_relative_path="mcu-boot" type="c_include">
        <files mask="stdafx.h" hidden="true"/>
        <files mask="targetver.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tools/tools/sdphost/sdphost" project_relative_path="mcu-boot" type="other">
        <files mask="sdphost.vcxproj" hidden="true"/>
        <files mask="sdphost.vcxproj.filters" hidden="true"/>
        <files mask="sdphost.vcxproj.user" hidden="true"/>
      </source>
      <source exclude="true" relative_path="tools/tools/sdphost" project_relative_path="mcu-boot" type="other">
        <files mask="sdphost.sln" hidden="true"/>
      </source>
    </component>
    <component id="middleware.mcu-boot.mem_flexspi_nor.MIMXRT1024" name="MCUBOOT_mem_flexspi_nor" brief="MCUBOOT flexspi nor memory interface" version="1.0.0" full_name="Middleware mcu-boot mem_flexspi_nor" devices="MIMXRT1024xxxxx" user_visible="false" type="middleware" package_base_path="middleware/mcu-boot" project_base_path="source">
      <dependencies>
        <component_dependency value="middleware.mcu-boot.drv_flexspi_nor.MIMXRT1024"/>
      </dependencies>
      <source relative_path="src/memory/src" project_relative_path="memory/src" type="src">
        <files mask="flexspi_nor_memory.c"/>
      </source>
      <source relative_path="src/memory/src" project_relative_path="memory/src" type="c_include">
        <files mask="flexspi_nor_memory.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_mcu-boot_mem_flexspi_nor_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/memory/src" project_relative_path="memory/src" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcu-boot.mem_spi_nand.MIMXRT1024" name="MCUBOOT_mem_spi_nand" brief="MCUBOOT spi nand memory interface" version="1.0.0" full_name="Middleware mcu-boot mem_spi_nand" devices="MIMXRT1024xxxxx" user_visible="false" type="middleware" package_base_path="middleware/mcu-boot" project_base_path="source">
      <source relative_path="src/memory/src" project_relative_path="memory/src" type="src">
        <files mask="spinand_memory.c"/>
      </source>
      <source relative_path="src/memory/src" project_relative_path="memory/src" type="c_include">
        <files mask="spinand_memory.h"/>
      </source>
      <include_paths>
        <include_path relative_path="src/memory/src" project_relative_path="memory/src" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcu-boot.src_bm_usb_hid.MIMXRT1024" name="MCUBOOT_bm_usb_sources" brief="Bootloader bm usb sources" version="1.0.0" full_name="Middleware mcu-boot src_bm_usb_hid" devices="MIMXRT1024xxxxx" user_visible="false" type="middleware" package_base_path="middleware/mcu-boot" project_base_path="source">
      <source relative_path="src/bm_usb" project_relative_path="usb/bm_composite" type="c_include">
        <files mask="bootloader_hid_report_ids.h"/>
        <files mask="fat_directory_entry.h"/>
        <files mask="composite.h"/>
        <files mask="hid_bootloader.h"/>
        <files mask="usb_descriptor.h"/>
      </source>
      <source relative_path="src/bm_usb" project_relative_path="usb/bm_composite" type="src">
        <files mask="composite.c"/>
        <files mask="hid_bootloader.c"/>
        <files mask="usb_descriptor.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_mcu-boot_src_bm_usb_hid_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/bm_usb" project_relative_path="usb/bm_composite" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcu-boot.src_startup.MIMXRT1024" name="MCUBOOT_startup_sources" brief="Bootloader startup sources" version="1.0.0" full_name="Middleware mcu-boot src_startup" devices="MIMXRT1024xxxxx" user_visible="false" type="middleware" package_base_path="middleware/mcu-boot" project_base_path="source">
      <source relative_path="src/startup" project_relative_path="../startup" type="src">
        <files mask="startup.c"/>
      </source>
      <source relative_path="src/include" project_relative_path="include" type="c_include">
        <files mask="bootloader_core.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_mcu-boot_src_startup_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/include" project_relative_path="include" type="c_include"/>
        <include_path relative_path="src/startup" project_relative_path="../startup" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.motor_control.acim.MIMXRT1024" name="mc_acim" brief="Motor control ACIM files" version="1.0.0" full_name="Middleware motor_control-acim" devices="MIMXRT1024xxxxx" user_visible="true" type="other" package_base_path="middleware/motor_control" project_base_path="motor_control">
      <source relative_path="acim/mc_algorithms" type="src">
        <files mask="acim_control.c"/>
      </source>
      <source relative_path="acim/mc_algorithms" type="c_include">
        <files mask="acim_control.h"/>
      </source>
      <source relative_path="acim/mc_state_machine" type="src">
        <files mask="m1_sm_ref_sol.c"/>
      </source>
      <source relative_path="acim/mc_state_machine" type="c_include">
        <files mask="m1_sm_ref_sol.h"/>
      </source>
      <source relative_path="acim/state_machine" type="src">
        <files mask="state_machine.c"/>
      </source>
      <source relative_path="acim/state_machine" type="c_include">
        <files mask="state_machine.h"/>
      </source>
      <source relative_path="acim/mc_identification/src_common" type="c_include">
        <files mask="mid_def.h"/>
        <files mask="mid_sm_ctrl.h"/>
        <files mask="mid_sm_states.h"/>
      </source>
      <source relative_path="acim/mc_identification/src_common" type="src">
        <files mask="mid_sm_ctrl.c"/>
        <files mask="mid_sm_states.c"/>
      </source>
      <source relative_path="acim/mc_identification/src_routines" type="c_include">
        <files mask="blocked_test.h"/>
        <files mask="calc_acim.h"/>
        <files mask="calc_power.h"/>
        <files mask="mech_measure.h"/>
        <files mask="noload_test.h"/>
        <files mask="pwrstg_characteristic.h"/>
        <files mask="rs_measure.h"/>
      </source>
      <source relative_path="acim/mc_identification/src_routines" type="src">
        <files mask="blocked_test.c"/>
        <files mask="calc_acim.c"/>
        <files mask="calc_power.c"/>
        <files mask="mech_measure.c"/>
        <files mask="noload_test.c"/>
        <files mask="pwrstg_characteristic.c"/>
        <files mask="rs_measure.c"/>
      </source>
      <source relative_path="acim" type="c_include">
        <files mask="fm_tsa_acim.h"/>
      </source>
      <source relative_path="acim" type="src">
        <files mask="fm_tsa_acim.c"/>
      </source>
      <include_paths>
        <include_path relative_path="acim/mc_algorithms" type="c_include"/>
        <include_path relative_path="acim/mc_state_machine" type="c_include"/>
        <include_path relative_path="acim/state_machine" type="c_include"/>
        <include_path relative_path="acim/mc_identification/src_common" type="c_include"/>
        <include_path relative_path="acim/mc_identification/src_routines" type="c_include"/>
        <include_path relative_path="acim" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.motor_control.bldc.MIMXRT1024" name="mc_bldc" brief="Motor control BLDC files" version="1.0.0" full_name="Middleware motor_control-bldc" devices="MIMXRT1024xxxxx" user_visible="true" type="other" package_base_path="middleware/motor_control" project_base_path="motor_control">
      <source relative_path="bldc/mc_algorithms" type="src">
        <files mask="bldc_control.c"/>
      </source>
      <source relative_path="bldc/mc_algorithms" type="c_include">
        <files mask="bldc_control.h"/>
      </source>
      <source relative_path="bldc/mc_state_machine" type="src">
        <files mask="m1_sm_ref_sol.c"/>
      </source>
      <source relative_path="bldc/mc_state_machine" type="c_include">
        <files mask="m1_sm_ref_sol.h"/>
      </source>
      <source relative_path="bldc/state_machine" type="src">
        <files mask="state_machine.c"/>
      </source>
      <source relative_path="bldc/state_machine" type="c_include">
        <files mask="state_machine.h"/>
      </source>
      <source relative_path="bldc" type="c_include">
        <files mask="fm_tsa_bldc.h"/>
      </source>
      <source relative_path="bldc" type="src">
        <files mask="fm_tsa_bldc.c"/>
      </source>
      <include_paths>
        <include_path relative_path="bldc/mc_algorithms" type="c_include"/>
        <include_path relative_path="bldc/mc_state_machine" type="c_include"/>
        <include_path relative_path="bldc/state_machine" type="c_include"/>
        <include_path relative_path="bldc" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.motor_control.pmsm.MIMXRT1024" name="mc_pmsm" brief="Motor control PMSM files" version="1.0.0" full_name="Middleware motor_control-pmsm" devices="MIMXRT1024xxxxx" user_visible="true" type="other" package_base_path="middleware/motor_control" project_base_path="motor_control">
      <source relative_path="pmsm/pmsm_float/mc_identification" type="src">
        <files mask="hall_calib.c"/>
        <files mask="ke_measure.c"/>
        <files mask="ls_measure.c"/>
        <files mask="mech_measure.c"/>
        <files mask="mid_auxiliary.c"/>
        <files mask="mid_sm_ctrl.c"/>
        <files mask="mid_sm_states.c"/>
        <files mask="pp_measure.c"/>
        <files mask="pwrstg_characteristic.c"/>
        <files mask="rs_measure.c"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_identification" type="c_include">
        <files mask="hall_calib.h"/>
        <files mask="ke_measure.h"/>
        <files mask="ls_measure.h"/>
        <files mask="mech_measure.h"/>
        <files mask="mid_auxiliary.h"/>
        <files mask="mid_def.h"/>
        <files mask="mid_sm_ctrl.h"/>
        <files mask="mid_sm_states.h"/>
        <files mask="pp_measure.h"/>
        <files mask="pwrstg_characteristic.h"/>
        <files mask="rs_measure.h"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_algorithms" type="src">
        <files mask="pmsm_control.c"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_algorithms" type="c_include">
        <files mask="pmsm_control.h"/>
      </source>
      <source relative_path="pmsm/pmsm_float/state_machine" type="src">
        <files mask="state_machine.c"/>
      </source>
      <source relative_path="pmsm/pmsm_float/state_machine" type="c_include">
        <files mask="state_machine.h"/>
      </source>
      <source relative_path="pmsm/pmsm_float" type="c_include">
        <files mask="fm_tsa_pmsm.h"/>
      </source>
      <source relative_path="pmsm/pmsm_float" type="src">
        <files mask="fm_tsa_pmsm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_motor_control-pmsm_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="pmsm/pmsm_float/mc_identification" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_algorithms" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float/state_machine" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.motor_control.pmsm_frac.MIMXRT1024" name="mc_pmsm" brief="Motor control PMSM files" version="1.0.0" full_name="Middleware motor_control-pmsm frac" devices="MIMXRT1024xxxxx" user_visible="true" type="other" package_base_path="middleware/motor_control" project_base_path="motor_control">
      <source relative_path="pmsm/pmsm_frac/mc_identification" type="src">
        <files mask="ke_measure.c"/>
        <files mask="ls_measure.c"/>
        <files mask="mid_auxiliary.c"/>
        <files mask="mid_sm_ctrl.c"/>
        <files mask="mid_sm_states.c"/>
        <files mask="pp_measure.c"/>
        <files mask="pwrstg_characteristic.c"/>
        <files mask="rs_measure.c"/>
      </source>
      <source relative_path="pmsm/pmsm_frac/mc_identification" type="c_include">
        <files mask="ke_measure.h"/>
        <files mask="ls_measure.h"/>
        <files mask="mid_auxiliary.h"/>
        <files mask="mid_def.h"/>
        <files mask="mid_sm_ctrl.h"/>
        <files mask="mid_sm_states.h"/>
        <files mask="pp_measure.h"/>
        <files mask="pwrstg_characteristic.h"/>
        <files mask="rs_measure.h"/>
      </source>
      <source relative_path="pmsm/pmsm_frac/mc_algorithms" type="src">
        <files mask="pmsm_control.c"/>
      </source>
      <source relative_path="pmsm/pmsm_frac/mc_algorithms" type="c_include">
        <files mask="pmsm_control.h"/>
      </source>
      <source relative_path="pmsm/pmsm_frac/state_machine" type="src">
        <files mask="state_machine.c"/>
      </source>
      <source relative_path="pmsm/pmsm_frac/state_machine" type="c_include">
        <files mask="state_machine.h"/>
      </source>
      <source relative_path="pmsm/pmsm_frac" type="c_include">
        <files mask="fm_tsa_pmsm.h"/>
      </source>
      <source relative_path="pmsm/pmsm_frac" type="src">
        <files mask="fm_tsa_pmsm.c"/>
      </source>
      <include_paths>
        <include_path relative_path="pmsm/pmsm_frac/mc_identification" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_frac/mc_algorithms" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_frac/state_machine" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_frac" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.rtcesl.cm7f.MIMXRT1024" name="rtcesl" brief="Real Time Control Embedded Software Library for CM7 core" version="1.1.0" full_name="Middleware rtcesl cm7f" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="middleware" package_base_path="middleware/rtcesl" project_base_path="rtcesl">
      <source toolchain="iar" relative_path="CM7F_RTCESL_4.6_IAR/AMCLIB/Include" type="c_include">
        <files mask="amclib.h"/>
        <files mask="AMCLIB_ACIMCtrlMTPA_FLT.h"/>
        <files mask="AMCLIB_ACIMRotFluxObsrv_FLT.h"/>
        <files mask="AMCLIB_ACIMSpeedMRAS_FLT.h"/>
        <files mask="AMCLIB_AngleTrackObsrv_F32.h"/>
        <files mask="AMCLIB_AngleTrackObsrv_FLT.h"/>
        <files mask="AMCLIB_CtrlFluxWkng_A32.h"/>
        <files mask="AMCLIB_CtrlFluxWkng_FLT.h"/>
        <files mask="amclib_FP.h"/>
        <files mask="AMCLIB_PMSMBemfObsrvAB_A32.h"/>
        <files mask="AMCLIB_PMSMBemfObsrvAB_FLT.h"/>
        <files mask="AMCLIB_PMSMBemfObsrvDQ_A32.h"/>
        <files mask="AMCLIB_PMSMBemfObsrvDQ_FLT.h"/>
        <files mask="AMCLIB_TrackObsrv_F32.h"/>
        <files mask="AMCLIB_TrackObsrv_FLT.h"/>
        <files mask="amclib_types.h"/>
      </source>
      <source toolchain="iar" relative_path="CM7F_RTCESL_4.6_IAR/GDFLIB/Include" type="c_include">
        <files mask="gdflib.h"/>
        <files mask="GDFLIB_FilterExp_F32.h"/>
        <files mask="GDFLIB_FilterExp_FLT.h"/>
        <files mask="GDFLIB_FilterIIR1_F32.h"/>
        <files mask="GDFLIB_FilterIIR1_F32_Asmi.h"/>
        <files mask="GDFLIB_FilterIIR1_FLT.h"/>
        <files mask="GDFLIB_FilterIIR2_F32.h"/>
        <files mask="GDFLIB_FilterIIR2_FLT.h"/>
        <files mask="GDFLIB_FilterIIR3_F32.h"/>
        <files mask="GDFLIB_FilterIIR3_FLT.h"/>
        <files mask="GDFLIB_FilterIIR4_F32.h"/>
        <files mask="GDFLIB_FilterIIR4_FLT.h"/>
        <files mask="GDFLIB_FilterMA_A32.h"/>
        <files mask="GDFLIB_FilterMA_FLT.h"/>
        <files mask="gdflib_FP.h"/>
        <files mask="gdflib_types.h"/>
      </source>
      <source toolchain="iar" relative_path="CM7F_RTCESL_4.6_IAR/GFLIB/Include" type="c_include">
        <files mask="gflib.h"/>
        <files mask="GFLIB_Acos_F16.h"/>
        <files mask="GFLIB_Acos_FLT.h"/>
        <files mask="GFLIB_Asin_F16.h"/>
        <files mask="GFLIB_Asin_FLT.h"/>
        <files mask="GFLIB_Atan_F32.h"/>
        <files mask="GFLIB_Atan_FLT.h"/>
        <files mask="GFLIB_AtanYX_F16.h"/>
        <files mask="GFLIB_AtanYX_FLT.h"/>
        <files mask="GFLIB_CtrlBetaIPDp_A32.h"/>
        <files mask="GFLIB_CtrlBetaIPDp_FLT.h"/>
        <files mask="GFLIB_CtrlBetaIPp_A32.h"/>
        <files mask="GFLIB_CtrlBetaIPp_FLT.h"/>
        <files mask="GFLIB_CtrlPIDp_A32.h"/>
        <files mask="GFLIB_CtrlPIDp_FLT.h"/>
        <files mask="GFLIB_CtrlPIp_A32.h"/>
        <files mask="GFLIB_CtrlPIp_FLT.h"/>
        <files mask="GFLIB_DFlexRamp_A32.h"/>
        <files mask="GFLIB_DFlexRamp_FLT.h"/>
        <files mask="GFLIB_DRamp_F16.h"/>
        <files mask="GFLIB_DRamp_F32.h"/>
        <files mask="GFLIB_DRamp_FLT.h"/>
        <files mask="GFLIB_FlexRamp_A32.h"/>
        <files mask="GFLIB_FlexRamp_FLT.h"/>
        <files mask="GFLIB_FlexSRamp_A32.h"/>
        <files mask="GFLIB_FlexSRamp_FLT.h"/>
        <files mask="gflib_FP.h"/>
        <files mask="GFLIB_Hyst_F16_Asmi.h"/>
        <files mask="GFLIB_Hyst_FLT.h"/>
        <files mask="GFLIB_Integrator_A32.h"/>
        <files mask="GFLIB_Integrator_FLT.h"/>
        <files mask="GFLIB_Limit_F16.h"/>
        <files mask="GFLIB_Limit_F32.h"/>
        <files mask="GFLIB_Limit_FLT.h"/>
        <files mask="GFLIB_LowerLimit_F16.h"/>
        <files mask="GFLIB_LowerLimit_F32.h"/>
        <files mask="GFLIB_LowerLimit_FLT.h"/>
        <files mask="GFLIB_Lut_F16_Asmi.h"/>
        <files mask="GFLIB_Lut_F32.h"/>
        <files mask="GFLIB_Lut_FLT.h"/>
        <files mask="GFLIB_LutPer_F16_Asmi.h"/>
        <files mask="GFLIB_LutPer_F32.h"/>
        <files mask="GFLIB_LutPer_FLT.h"/>
        <files mask="GFLIB_Ramp_F16.h"/>
        <files mask="GFLIB_Ramp_F32.h"/>
        <files mask="GFLIB_Ramp_FLT.h"/>
        <files mask="GFLIB_SinCos_F32.h"/>
        <files mask="GFLIB_SinCos_FLT.h"/>
        <files mask="GFLIB_Sqrt_F16.h"/>
        <files mask="GFLIB_Sqrt_F32.h"/>
        <files mask="GFLIB_Sqrt_FLT_Asmi.h"/>
        <files mask="GFLIB_Tan_F32.h"/>
        <files mask="GFLIB_Tan_FLT.h"/>
        <files mask="gflib_types.h"/>
        <files mask="GFLIB_UpperLimit_F16.h"/>
        <files mask="GFLIB_UpperLimit_F32.h"/>
        <files mask="GFLIB_UpperLimit_FLT.h"/>
        <files mask="GFLIB_VectorLimit_F16.h"/>
        <files mask="GFLIB_VectorLimit_FLT.h"/>
      </source>
      <source toolchain="iar" relative_path="CM7F_RTCESL_4.6_IAR/GMCLIB/Include" type="c_include">
        <files mask="gmclib.h"/>
        <files mask="GMCLIB_Clark_F16_Asmi.h"/>
        <files mask="GMCLIB_Clark_FLT.h"/>
        <files mask="GMCLIB_Decoupling_A32.h"/>
        <files mask="GMCLIB_Decoupling_FLT.h"/>
        <files mask="GMCLIB_ElimDcBusRip_A32_Asmi.h"/>
        <files mask="GMCLIB_ElimDcBusRip_F16_Asmi.h"/>
        <files mask="GMCLIB_ElimDcBusRip_FLT.h"/>
        <files mask="gmclib_FP.h"/>
        <files mask="GMCLIB_Park_F16_Asmi.h"/>
        <files mask="GMCLIB_Park_FLT.h"/>
        <files mask="GMCLIB_Svm_F16.h"/>
        <files mask="gmclib_types.h"/>
      </source>
      <source toolchain="iar" relative_path="CM7F_RTCESL_4.6_IAR/MLIB/Include" type="c_include">
        <files mask="asm_mac.h"/>
        <files mask="mlib.h"/>
        <files mask="MLIB_Abs_F16.h"/>
        <files mask="MLIB_Abs_F16_Asmi.h"/>
        <files mask="MLIB_Abs_F32.h"/>
        <files mask="MLIB_Abs_F32_Asmi.h"/>
        <files mask="MLIB_Abs_FLT.h"/>
        <files mask="MLIB_Abs_FLT_Asmi.h"/>
        <files mask="MLIB_Add_A32.h"/>
        <files mask="MLIB_Add_F16.h"/>
        <files mask="MLIB_Add_F16_Asmi.h"/>
        <files mask="MLIB_Add_F32.h"/>
        <files mask="MLIB_Add_F32_Asmi.h"/>
        <files mask="MLIB_Add_FLT.h"/>
        <files mask="MLIB_Add4_F16_Asmi.h"/>
        <files mask="MLIB_Add4_F32_Asmi.h"/>
        <files mask="MLIB_Add4_FLT.h"/>
        <files mask="MLIB_BiShift_F16.h"/>
        <files mask="MLIB_BiShift_F32.h"/>
        <files mask="MLIB_Clb_F16.h"/>
        <files mask="MLIB_Clb_F32.h"/>
        <files mask="MLIB_Conv_F32.h"/>
        <files mask="MLIB_Conv_FLT_Asmi.h"/>
        <files mask="MLIB_ConvSc_FLT_Asmi.h"/>
        <files mask="MLIB_Div_A32.h"/>
        <files mask="MLIB_Div_F16.h"/>
        <files mask="MLIB_Div_F32.h"/>
        <files mask="MLIB_Div_FLT.h"/>
        <files mask="MLIB_Div1Q_A32.h"/>
        <files mask="MLIB_Div1Q_F16.h"/>
        <files mask="MLIB_Div1Q_F32.h"/>
        <files mask="mlib_FP.h"/>
        <files mask="MLIB_Log2_U16.h"/>
        <files mask="MLIB_Mac_A32.h"/>
        <files mask="MLIB_Mac_F16_Asmi.h"/>
        <files mask="MLIB_Mac_F32.h"/>
        <files mask="MLIB_Mac_F32_Asmi.h"/>
        <files mask="MLIB_Mac_FLT.h"/>
        <files mask="MLIB_Mac4_F32.h"/>
        <files mask="MLIB_Mac4_F32_Asmi.h"/>
        <files mask="MLIB_Mac4_FLT.h"/>
        <files mask="MLIB_Mac4Rnd_F16_Asmi.h"/>
        <files mask="MLIB_Mac4Rnd_F32.h"/>
        <files mask="MLIB_Mac4Rnd_F32_Asmi.h"/>
        <files mask="MLIB_MacRnd_A32.h"/>
        <files mask="MLIB_MacRnd_F16_Asmi.h"/>
        <files mask="MLIB_MacRnd_F32.h"/>
        <files mask="MLIB_MacRnd_F32_Asmi.h"/>
        <files mask="MLIB_Mnac_A32.h"/>
        <files mask="MLIB_Mnac_F16_Asmi.h"/>
        <files mask="MLIB_Mnac_F32.h"/>
        <files mask="MLIB_Mnac_F32_Asmi.h"/>
        <files mask="MLIB_Mnac_FLT.h"/>
        <files mask="MLIB_MnacRnd_A32.h"/>
        <files mask="MLIB_MnacRnd_F16_Asmi.h"/>
        <files mask="MLIB_MnacRnd_F32.h"/>
        <files mask="MLIB_MnacRnd_F32_Asmi.h"/>
        <files mask="MLIB_Msu_A32.h"/>
        <files mask="MLIB_Msu_F16_Asmi.h"/>
        <files mask="MLIB_Msu_F32_Asmi.h"/>
        <files mask="MLIB_Msu_FLT.h"/>
        <files mask="MLIB_Msu4_F32.h"/>
        <files mask="MLIB_Msu4_F32_Asmi.h"/>
        <files mask="MLIB_Msu4_FLT.h"/>
        <files mask="MLIB_Msu4Rnd_F16.h"/>
        <files mask="MLIB_Msu4Rnd_F16_Asmi.h"/>
        <files mask="MLIB_Msu4Rnd_F32.h"/>
        <files mask="MLIB_Msu4Rnd_F32_Asmi.h"/>
        <files mask="MLIB_MsuRnd_A32.h"/>
        <files mask="MLIB_MsuRnd_F16_Asmi.h"/>
        <files mask="MLIB_MsuRnd_F32.h"/>
        <files mask="MLIB_MsuRnd_F32_Asmi.h"/>
        <files mask="MLIB_Mul_A32.h"/>
        <files mask="MLIB_Mul_A32_Asmi.h"/>
        <files mask="MLIB_Mul_F16.h"/>
        <files mask="MLIB_Mul_F16_Asmi.h"/>
        <files mask="MLIB_Mul_F32.h"/>
        <files mask="MLIB_Mul_F32_Asmi.h"/>
        <files mask="MLIB_Mul_FLT.h"/>
        <files mask="MLIB_MulRnd_A32.h"/>
        <files mask="MLIB_MulRnd_A32_Asmi.h"/>
        <files mask="MLIB_MulRnd_F16.h"/>
        <files mask="MLIB_MulRnd_F16_Asmi.h"/>
        <files mask="MLIB_MulRnd_F32.h"/>
        <files mask="MLIB_MulRnd_F32_Asmi.h"/>
        <files mask="MLIB_Neg_F16.h"/>
        <files mask="MLIB_Neg_F16_Asmi.h"/>
        <files mask="MLIB_Neg_F32.h"/>
        <files mask="MLIB_Neg_F32_Asmi.h"/>
        <files mask="MLIB_Neg_FLT.h"/>
        <files mask="MLIB_Rcp_A32.h"/>
        <files mask="MLIB_Rcp1Q_A32.h"/>
        <files mask="MLIB_Rnd_F32.h"/>
        <files mask="MLIB_Rnd_F32_Asmi.h"/>
        <files mask="MLIB_Sat_A32_Asmi.h"/>
        <files mask="MLIB_Shift_F16.h"/>
        <files mask="MLIB_Shift_F16_Asmi.h"/>
        <files mask="MLIB_Shift_F32.h"/>
        <files mask="MLIB_Shift_F32_Asmi.h"/>
        <files mask="MLIB_Sign_F16_Asmi.h"/>
        <files mask="MLIB_Sign_F32_Asmi.h"/>
        <files mask="MLIB_Sign_FLT_Asmi.h"/>
        <files mask="MLIB_Sub_A32.h"/>
        <files mask="MLIB_Sub_F16.h"/>
        <files mask="MLIB_Sub_F16_Asmi.h"/>
        <files mask="MLIB_Sub_F32.h"/>
        <files mask="MLIB_Sub_F32_Asmi.h"/>
        <files mask="MLIB_Sub_F64.h"/>
        <files mask="MLIB_Sub_FLT.h"/>
        <files mask="MLIB_Sub4_F16_Asmi.h"/>
        <files mask="MLIB_Sub4_F32_Asmi.h"/>
        <files mask="MLIB_Sub4_FLT.h"/>
        <files mask="mlib_types.h"/>
        <files mask="RTCESL_cfg.h"/>
      </source>
      <source toolchain="mdk" relative_path="CM7F_RTCESL_4.6_KEIL/AMCLIB/Include" type="c_include">
        <files mask="amclib.h"/>
        <files mask="AMCLIB_ACIMCtrlMTPA_FLT.h"/>
        <files mask="AMCLIB_ACIMRotFluxObsrv_FLT.h"/>
        <files mask="AMCLIB_ACIMSpeedMRAS_FLT.h"/>
        <files mask="AMCLIB_AngleTrackObsrv_F32.h"/>
        <files mask="AMCLIB_AngleTrackObsrv_FLT.h"/>
        <files mask="AMCLIB_CtrlFluxWkng_A32.h"/>
        <files mask="AMCLIB_CtrlFluxWkng_FLT.h"/>
        <files mask="amclib_FP.h"/>
        <files mask="AMCLIB_PMSMBemfObsrvAB_A32.h"/>
        <files mask="AMCLIB_PMSMBemfObsrvAB_FLT.h"/>
        <files mask="AMCLIB_PMSMBemfObsrvDQ_A32.h"/>
        <files mask="AMCLIB_PMSMBemfObsrvDQ_FLT.h"/>
        <files mask="AMCLIB_TrackObsrv_F32.h"/>
        <files mask="AMCLIB_TrackObsrv_FLT.h"/>
        <files mask="amclib_types.h"/>
      </source>
      <source toolchain="mdk" relative_path="CM7F_RTCESL_4.6_KEIL/GDFLIB/Include" type="c_include">
        <files mask="gdflib.h"/>
        <files mask="GDFLIB_FilterExp_F32.h"/>
        <files mask="GDFLIB_FilterExp_FLT.h"/>
        <files mask="GDFLIB_FilterIIR1_F32.h"/>
        <files mask="GDFLIB_FilterIIR1_F32_Asmi.h"/>
        <files mask="GDFLIB_FilterIIR1_FLT.h"/>
        <files mask="GDFLIB_FilterIIR2_F32.h"/>
        <files mask="GDFLIB_FilterIIR2_FLT.h"/>
        <files mask="GDFLIB_FilterIIR3_F32.h"/>
        <files mask="GDFLIB_FilterIIR3_FLT.h"/>
        <files mask="GDFLIB_FilterIIR4_F32.h"/>
        <files mask="GDFLIB_FilterIIR4_FLT.h"/>
        <files mask="GDFLIB_FilterMA_A32.h"/>
        <files mask="GDFLIB_FilterMA_FLT.h"/>
        <files mask="gdflib_FP.h"/>
        <files mask="gdflib_types.h"/>
      </source>
      <source toolchain="mdk" relative_path="CM7F_RTCESL_4.6_KEIL/GFLIB/Include" type="c_include">
        <files mask="gflib.h"/>
        <files mask="GFLIB_Acos_F16.h"/>
        <files mask="GFLIB_Acos_FLT.h"/>
        <files mask="GFLIB_Asin_F16.h"/>
        <files mask="GFLIB_Asin_FLT.h"/>
        <files mask="GFLIB_Atan_F32.h"/>
        <files mask="GFLIB_Atan_FLT.h"/>
        <files mask="GFLIB_AtanYX_F16.h"/>
        <files mask="GFLIB_AtanYX_FLT.h"/>
        <files mask="GFLIB_CtrlBetaIPDp_A32.h"/>
        <files mask="GFLIB_CtrlBetaIPDp_FLT.h"/>
        <files mask="GFLIB_CtrlBetaIPp_A32.h"/>
        <files mask="GFLIB_CtrlBetaIPp_FLT.h"/>
        <files mask="GFLIB_CtrlPIDp_A32.h"/>
        <files mask="GFLIB_CtrlPIDp_FLT.h"/>
        <files mask="GFLIB_CtrlPIp_A32.h"/>
        <files mask="GFLIB_CtrlPIp_FLT.h"/>
        <files mask="GFLIB_DFlexRamp_A32.h"/>
        <files mask="GFLIB_DFlexRamp_FLT.h"/>
        <files mask="GFLIB_DRamp_F16.h"/>
        <files mask="GFLIB_DRamp_F32.h"/>
        <files mask="GFLIB_DRamp_FLT.h"/>
        <files mask="GFLIB_FlexRamp_A32.h"/>
        <files mask="GFLIB_FlexRamp_FLT.h"/>
        <files mask="GFLIB_FlexSRamp_A32.h"/>
        <files mask="GFLIB_FlexSRamp_FLT.h"/>
        <files mask="gflib_FP.h"/>
        <files mask="GFLIB_Hyst_F16_Asmi.h"/>
        <files mask="GFLIB_Hyst_FLT.h"/>
        <files mask="GFLIB_Integrator_A32.h"/>
        <files mask="GFLIB_Integrator_FLT.h"/>
        <files mask="GFLIB_Limit_F16.h"/>
        <files mask="GFLIB_Limit_F32.h"/>
        <files mask="GFLIB_Limit_FLT.h"/>
        <files mask="GFLIB_LowerLimit_F16.h"/>
        <files mask="GFLIB_LowerLimit_F32.h"/>
        <files mask="GFLIB_LowerLimit_FLT.h"/>
        <files mask="GFLIB_Lut_F16_Asmi.h"/>
        <files mask="GFLIB_Lut_F32.h"/>
        <files mask="GFLIB_Lut_FLT.h"/>
        <files mask="GFLIB_LutPer_F16_Asmi.h"/>
        <files mask="GFLIB_LutPer_F32.h"/>
        <files mask="GFLIB_LutPer_FLT.h"/>
        <files mask="GFLIB_Ramp_F16.h"/>
        <files mask="GFLIB_Ramp_F32.h"/>
        <files mask="GFLIB_Ramp_FLT.h"/>
        <files mask="GFLIB_SinCos_F32.h"/>
        <files mask="GFLIB_SinCos_FLT.h"/>
        <files mask="GFLIB_Sqrt_F16.h"/>
        <files mask="GFLIB_Sqrt_F32.h"/>
        <files mask="GFLIB_Sqrt_FLT_Asmi.h"/>
        <files mask="GFLIB_Tan_F32.h"/>
        <files mask="GFLIB_Tan_FLT.h"/>
        <files mask="gflib_types.h"/>
        <files mask="GFLIB_UpperLimit_F16.h"/>
        <files mask="GFLIB_UpperLimit_F32.h"/>
        <files mask="GFLIB_UpperLimit_FLT.h"/>
        <files mask="GFLIB_VectorLimit_F16.h"/>
        <files mask="GFLIB_VectorLimit_FLT.h"/>
      </source>
      <source toolchain="mdk" relative_path="CM7F_RTCESL_4.6_KEIL/GMCLIB/Include" type="c_include">
        <files mask="gmclib.h"/>
        <files mask="GMCLIB_Clark_F16_Asmi.h"/>
        <files mask="GMCLIB_Clark_FLT.h"/>
        <files mask="GMCLIB_Decoupling_A32.h"/>
        <files mask="GMCLIB_Decoupling_FLT.h"/>
        <files mask="GMCLIB_ElimDcBusRip_A32_Asmi.h"/>
        <files mask="GMCLIB_ElimDcBusRip_F16_Asmi.h"/>
        <files mask="GMCLIB_ElimDcBusRip_FLT.h"/>
        <files mask="gmclib_FP.h"/>
        <files mask="GMCLIB_Park_F16_Asmi.h"/>
        <files mask="GMCLIB_Park_FLT.h"/>
        <files mask="GMCLIB_Svm_F16.h"/>
        <files mask="gmclib_types.h"/>
      </source>
      <source toolchain="mdk" relative_path="CM7F_RTCESL_4.6_KEIL/MLIB/Include" type="c_include">
        <files mask="asm_mac.h"/>
        <files mask="mlib.h"/>
        <files mask="MLIB_Abs_F16.h"/>
        <files mask="MLIB_Abs_F16_Asmi.h"/>
        <files mask="MLIB_Abs_F32.h"/>
        <files mask="MLIB_Abs_F32_Asmi.h"/>
        <files mask="MLIB_Abs_FLT.h"/>
        <files mask="MLIB_Abs_FLT_Asmi.h"/>
        <files mask="MLIB_Add_A32.h"/>
        <files mask="MLIB_Add_F16.h"/>
        <files mask="MLIB_Add_F16_Asmi.h"/>
        <files mask="MLIB_Add_F32.h"/>
        <files mask="MLIB_Add_F32_Asmi.h"/>
        <files mask="MLIB_Add_FLT.h"/>
        <files mask="MLIB_Add4_F16_Asmi.h"/>
        <files mask="MLIB_Add4_F32_Asmi.h"/>
        <files mask="MLIB_Add4_FLT.h"/>
        <files mask="MLIB_BiShift_F16.h"/>
        <files mask="MLIB_BiShift_F32.h"/>
        <files mask="MLIB_Clb_F16.h"/>
        <files mask="MLIB_Clb_F32.h"/>
        <files mask="MLIB_Conv_F32.h"/>
        <files mask="MLIB_Conv_FLT_Asmi.h"/>
        <files mask="MLIB_ConvSc_FLT_Asmi.h"/>
        <files mask="MLIB_Div_A32.h"/>
        <files mask="MLIB_Div_F16.h"/>
        <files mask="MLIB_Div_F32.h"/>
        <files mask="MLIB_Div_FLT.h"/>
        <files mask="MLIB_Div1Q_A32.h"/>
        <files mask="MLIB_Div1Q_F16.h"/>
        <files mask="MLIB_Div1Q_F32.h"/>
        <files mask="mlib_FP.h"/>
        <files mask="MLIB_Log2_U16.h"/>
        <files mask="MLIB_Mac_A32.h"/>
        <files mask="MLIB_Mac_F16_Asmi.h"/>
        <files mask="MLIB_Mac_F32.h"/>
        <files mask="MLIB_Mac_F32_Asmi.h"/>
        <files mask="MLIB_Mac_FLT.h"/>
        <files mask="MLIB_Mac4_F32.h"/>
        <files mask="MLIB_Mac4_F32_Asmi.h"/>
        <files mask="MLIB_Mac4_FLT.h"/>
        <files mask="MLIB_Mac4Rnd_F16_Asmi.h"/>
        <files mask="MLIB_Mac4Rnd_F32.h"/>
        <files mask="MLIB_Mac4Rnd_F32_Asmi.h"/>
        <files mask="MLIB_MacRnd_A32.h"/>
        <files mask="MLIB_MacRnd_F16_Asmi.h"/>
        <files mask="MLIB_MacRnd_F32.h"/>
        <files mask="MLIB_MacRnd_F32_Asmi.h"/>
        <files mask="MLIB_Mnac_A32.h"/>
        <files mask="MLIB_Mnac_F16_Asmi.h"/>
        <files mask="MLIB_Mnac_F32.h"/>
        <files mask="MLIB_Mnac_F32_Asmi.h"/>
        <files mask="MLIB_Mnac_FLT.h"/>
        <files mask="MLIB_MnacRnd_A32.h"/>
        <files mask="MLIB_MnacRnd_F16_Asmi.h"/>
        <files mask="MLIB_MnacRnd_F32.h"/>
        <files mask="MLIB_MnacRnd_F32_Asmi.h"/>
        <files mask="MLIB_Msu_A32.h"/>
        <files mask="MLIB_Msu_F16_Asmi.h"/>
        <files mask="MLIB_Msu_F32_Asmi.h"/>
        <files mask="MLIB_Msu_FLT.h"/>
        <files mask="MLIB_Msu4_F32.h"/>
        <files mask="MLIB_Msu4_F32_Asmi.h"/>
        <files mask="MLIB_Msu4_FLT.h"/>
        <files mask="MLIB_Msu4Rnd_F16.h"/>
        <files mask="MLIB_Msu4Rnd_F16_Asmi.h"/>
        <files mask="MLIB_Msu4Rnd_F32.h"/>
        <files mask="MLIB_Msu4Rnd_F32_Asmi.h"/>
        <files mask="MLIB_MsuRnd_A32.h"/>
        <files mask="MLIB_MsuRnd_F16_Asmi.h"/>
        <files mask="MLIB_MsuRnd_F32.h"/>
        <files mask="MLIB_MsuRnd_F32_Asmi.h"/>
        <files mask="MLIB_Mul_A32.h"/>
        <files mask="MLIB_Mul_A32_Asmi.h"/>
        <files mask="MLIB_Mul_F16.h"/>
        <files mask="MLIB_Mul_F16_Asmi.h"/>
        <files mask="MLIB_Mul_F32.h"/>
        <files mask="MLIB_Mul_F32_Asmi.h"/>
        <files mask="MLIB_Mul_FLT.h"/>
        <files mask="MLIB_MulRnd_A32.h"/>
        <files mask="MLIB_MulRnd_A32_Asmi.h"/>
        <files mask="MLIB_MulRnd_F16.h"/>
        <files mask="MLIB_MulRnd_F16_Asmi.h"/>
        <files mask="MLIB_MulRnd_F32.h"/>
        <files mask="MLIB_MulRnd_F32_Asmi.h"/>
        <files mask="MLIB_Neg_F16.h"/>
        <files mask="MLIB_Neg_F16_Asmi.h"/>
        <files mask="MLIB_Neg_F32.h"/>
        <files mask="MLIB_Neg_F32_Asmi.h"/>
        <files mask="MLIB_Neg_FLT.h"/>
        <files mask="MLIB_Rcp_A32.h"/>
        <files mask="MLIB_Rcp1Q_A32.h"/>
        <files mask="MLIB_Rnd_F32.h"/>
        <files mask="MLIB_Rnd_F32_Asmi.h"/>
        <files mask="MLIB_Sat_A32_Asmi.h"/>
        <files mask="MLIB_Shift_F16.h"/>
        <files mask="MLIB_Shift_F16_Asmi.h"/>
        <files mask="MLIB_Shift_F32.h"/>
        <files mask="MLIB_Shift_F32_Asmi.h"/>
        <files mask="MLIB_Sign_F16_Asmi.h"/>
        <files mask="MLIB_Sign_F32_Asmi.h"/>
        <files mask="MLIB_Sign_FLT_Asmi.h"/>
        <files mask="MLIB_Sub_A32.h"/>
        <files mask="MLIB_Sub_F16.h"/>
        <files mask="MLIB_Sub_F16_Asmi.h"/>
        <files mask="MLIB_Sub_F32.h"/>
        <files mask="MLIB_Sub_F32_Asmi.h"/>
        <files mask="MLIB_Sub_F64.h"/>
        <files mask="MLIB_Sub_FLT.h"/>
        <files mask="MLIB_Sub4_F16_Asmi.h"/>
        <files mask="MLIB_Sub4_F32_Asmi.h"/>
        <files mask="MLIB_Sub4_FLT.h"/>
        <files mask="mlib_types.h"/>
        <files mask="RTCESL_cfg.h"/>
      </source>
      <source toolchain="mcuxpresso armgcc" relative_path="CM7F_RTCESL_4.6_MCUX/AMCLIB/Include" type="c_include">
        <files mask="amclib.h"/>
        <files mask="AMCLIB_ACIMCtrlMTPA_FLT.h"/>
        <files mask="AMCLIB_ACIMRotFluxObsrv_FLT.h"/>
        <files mask="AMCLIB_ACIMSpeedMRAS_FLT.h"/>
        <files mask="AMCLIB_AngleTrackObsrv_F32.h"/>
        <files mask="AMCLIB_AngleTrackObsrv_FLT.h"/>
        <files mask="AMCLIB_CtrlFluxWkng_A32.h"/>
        <files mask="AMCLIB_CtrlFluxWkng_FLT.h"/>
        <files mask="amclib_FP.h"/>
        <files mask="AMCLIB_PMSMBemfObsrvAB_A32.h"/>
        <files mask="AMCLIB_PMSMBemfObsrvAB_FLT.h"/>
        <files mask="AMCLIB_PMSMBemfObsrvDQ_A32.h"/>
        <files mask="AMCLIB_PMSMBemfObsrvDQ_FLT.h"/>
        <files mask="AMCLIB_TrackObsrv_F32.h"/>
        <files mask="AMCLIB_TrackObsrv_FLT.h"/>
        <files mask="amclib_types.h"/>
      </source>
      <source toolchain="mcuxpresso armgcc" relative_path="CM7F_RTCESL_4.6_MCUX/GDFLIB/Include" type="c_include">
        <files mask="gdflib.h"/>
        <files mask="GDFLIB_FilterExp_F32.h"/>
        <files mask="GDFLIB_FilterExp_FLT.h"/>
        <files mask="GDFLIB_FilterIIR1_F32.h"/>
        <files mask="GDFLIB_FilterIIR1_F32_Asmi.h"/>
        <files mask="GDFLIB_FilterIIR1_FLT.h"/>
        <files mask="GDFLIB_FilterIIR2_F32.h"/>
        <files mask="GDFLIB_FilterIIR2_FLT.h"/>
        <files mask="GDFLIB_FilterIIR3_F32.h"/>
        <files mask="GDFLIB_FilterIIR3_FLT.h"/>
        <files mask="GDFLIB_FilterIIR4_F32.h"/>
        <files mask="GDFLIB_FilterIIR4_FLT.h"/>
        <files mask="GDFLIB_FilterMA_A32.h"/>
        <files mask="GDFLIB_FilterMA_FLT.h"/>
        <files mask="gdflib_FP.h"/>
        <files mask="gdflib_types.h"/>
      </source>
      <source toolchain="mcuxpresso armgcc" relative_path="CM7F_RTCESL_4.6_MCUX/GFLIB/Include" type="c_include">
        <files mask="gflib.h"/>
        <files mask="GFLIB_Acos_F16.h"/>
        <files mask="GFLIB_Acos_FLT.h"/>
        <files mask="GFLIB_Asin_F16.h"/>
        <files mask="GFLIB_Asin_FLT.h"/>
        <files mask="GFLIB_Atan_F32.h"/>
        <files mask="GFLIB_Atan_FLT.h"/>
        <files mask="GFLIB_AtanYX_F16.h"/>
        <files mask="GFLIB_AtanYX_FLT.h"/>
        <files mask="GFLIB_CtrlBetaIPDp_A32.h"/>
        <files mask="GFLIB_CtrlBetaIPDp_FLT.h"/>
        <files mask="GFLIB_CtrlBetaIPp_A32.h"/>
        <files mask="GFLIB_CtrlBetaIPp_FLT.h"/>
        <files mask="GFLIB_CtrlPIDp_A32.h"/>
        <files mask="GFLIB_CtrlPIDp_FLT.h"/>
        <files mask="GFLIB_CtrlPIp_A32.h"/>
        <files mask="GFLIB_CtrlPIp_FLT.h"/>
        <files mask="GFLIB_DFlexRamp_A32.h"/>
        <files mask="GFLIB_DFlexRamp_FLT.h"/>
        <files mask="GFLIB_DRamp_F16.h"/>
        <files mask="GFLIB_DRamp_F32.h"/>
        <files mask="GFLIB_DRamp_FLT.h"/>
        <files mask="GFLIB_FlexRamp_A32.h"/>
        <files mask="GFLIB_FlexRamp_FLT.h"/>
        <files mask="GFLIB_FlexSRamp_A32.h"/>
        <files mask="GFLIB_FlexSRamp_FLT.h"/>
        <files mask="gflib_FP.h"/>
        <files mask="GFLIB_Hyst_F16_Asmi.h"/>
        <files mask="GFLIB_Hyst_FLT.h"/>
        <files mask="GFLIB_Integrator_A32.h"/>
        <files mask="GFLIB_Integrator_FLT.h"/>
        <files mask="GFLIB_Limit_F16.h"/>
        <files mask="GFLIB_Limit_F32.h"/>
        <files mask="GFLIB_Limit_FLT.h"/>
        <files mask="GFLIB_LowerLimit_F16.h"/>
        <files mask="GFLIB_LowerLimit_F32.h"/>
        <files mask="GFLIB_LowerLimit_FLT.h"/>
        <files mask="GFLIB_Lut_F16_Asmi.h"/>
        <files mask="GFLIB_Lut_F32.h"/>
        <files mask="GFLIB_Lut_FLT.h"/>
        <files mask="GFLIB_LutPer_F16_Asmi.h"/>
        <files mask="GFLIB_LutPer_F32.h"/>
        <files mask="GFLIB_LutPer_FLT.h"/>
        <files mask="GFLIB_Ramp_F16.h"/>
        <files mask="GFLIB_Ramp_F32.h"/>
        <files mask="GFLIB_Ramp_FLT.h"/>
        <files mask="GFLIB_SinCos_F32.h"/>
        <files mask="GFLIB_SinCos_FLT.h"/>
        <files mask="GFLIB_Sqrt_F16.h"/>
        <files mask="GFLIB_Sqrt_F32.h"/>
        <files mask="GFLIB_Sqrt_FLT_Asmi.h"/>
        <files mask="GFLIB_Tan_F32.h"/>
        <files mask="GFLIB_Tan_FLT.h"/>
        <files mask="gflib_types.h"/>
        <files mask="GFLIB_UpperLimit_F16.h"/>
        <files mask="GFLIB_UpperLimit_F32.h"/>
        <files mask="GFLIB_UpperLimit_FLT.h"/>
        <files mask="GFLIB_VectorLimit_F16.h"/>
        <files mask="GFLIB_VectorLimit_FLT.h"/>
      </source>
      <source toolchain="mcuxpresso armgcc" relative_path="CM7F_RTCESL_4.6_MCUX/GMCLIB/Include" type="c_include">
        <files mask="gmclib.h"/>
        <files mask="GMCLIB_Clark_F16_Asmi.h"/>
        <files mask="GMCLIB_Clark_FLT.h"/>
        <files mask="GMCLIB_Decoupling_A32.h"/>
        <files mask="GMCLIB_Decoupling_FLT.h"/>
        <files mask="GMCLIB_ElimDcBusRip_A32_Asmi.h"/>
        <files mask="GMCLIB_ElimDcBusRip_F16_Asmi.h"/>
        <files mask="GMCLIB_ElimDcBusRip_FLT.h"/>
        <files mask="gmclib_FP.h"/>
        <files mask="GMCLIB_Park_F16_Asmi.h"/>
        <files mask="GMCLIB_Park_FLT.h"/>
        <files mask="GMCLIB_Svm_F16.h"/>
        <files mask="gmclib_types.h"/>
      </source>
      <source toolchain="mcuxpresso armgcc" relative_path="CM7F_RTCESL_4.6_MCUX/MLIB/Include" type="c_include">
        <files mask="asm_mac.h"/>
        <files mask="mlib.h"/>
        <files mask="MLIB_Abs_F16.h"/>
        <files mask="MLIB_Abs_F16_Asmi.h"/>
        <files mask="MLIB_Abs_F32.h"/>
        <files mask="MLIB_Abs_F32_Asmi.h"/>
        <files mask="MLIB_Abs_FLT.h"/>
        <files mask="MLIB_Abs_FLT_Asmi.h"/>
        <files mask="MLIB_Add_A32.h"/>
        <files mask="MLIB_Add_F16.h"/>
        <files mask="MLIB_Add_F16_Asmi.h"/>
        <files mask="MLIB_Add_F32.h"/>
        <files mask="MLIB_Add_F32_Asmi.h"/>
        <files mask="MLIB_Add_FLT.h"/>
        <files mask="MLIB_Add4_F16_Asmi.h"/>
        <files mask="MLIB_Add4_F32_Asmi.h"/>
        <files mask="MLIB_Add4_FLT.h"/>
        <files mask="MLIB_BiShift_F16.h"/>
        <files mask="MLIB_BiShift_F32.h"/>
        <files mask="MLIB_Clb_F16.h"/>
        <files mask="MLIB_Clb_F32.h"/>
        <files mask="MLIB_Conv_F32.h"/>
        <files mask="MLIB_Conv_FLT_Asmi.h"/>
        <files mask="MLIB_ConvSc_FLT_Asmi.h"/>
        <files mask="MLIB_Div_A32.h"/>
        <files mask="MLIB_Div_F16.h"/>
        <files mask="MLIB_Div_F32.h"/>
        <files mask="MLIB_Div_FLT.h"/>
        <files mask="MLIB_Div1Q_A32.h"/>
        <files mask="MLIB_Div1Q_F16.h"/>
        <files mask="MLIB_Div1Q_F32.h"/>
        <files mask="mlib_FP.h"/>
        <files mask="MLIB_Log2_U16.h"/>
        <files mask="MLIB_Mac_A32.h"/>
        <files mask="MLIB_Mac_F16_Asmi.h"/>
        <files mask="MLIB_Mac_F32.h"/>
        <files mask="MLIB_Mac_F32_Asmi.h"/>
        <files mask="MLIB_Mac_FLT.h"/>
        <files mask="MLIB_Mac4_F32.h"/>
        <files mask="MLIB_Mac4_F32_Asmi.h"/>
        <files mask="MLIB_Mac4_FLT.h"/>
        <files mask="MLIB_Mac4Rnd_F16_Asmi.h"/>
        <files mask="MLIB_Mac4Rnd_F32.h"/>
        <files mask="MLIB_Mac4Rnd_F32_Asmi.h"/>
        <files mask="MLIB_MacRnd_A32.h"/>
        <files mask="MLIB_MacRnd_F16_Asmi.h"/>
        <files mask="MLIB_MacRnd_F32.h"/>
        <files mask="MLIB_MacRnd_F32_Asmi.h"/>
        <files mask="MLIB_Mnac_A32.h"/>
        <files mask="MLIB_Mnac_F16_Asmi.h"/>
        <files mask="MLIB_Mnac_F32.h"/>
        <files mask="MLIB_Mnac_F32_Asmi.h"/>
        <files mask="MLIB_Mnac_FLT.h"/>
        <files mask="MLIB_MnacRnd_A32.h"/>
        <files mask="MLIB_MnacRnd_F16_Asmi.h"/>
        <files mask="MLIB_MnacRnd_F32.h"/>
        <files mask="MLIB_MnacRnd_F32_Asmi.h"/>
        <files mask="MLIB_Msu_A32.h"/>
        <files mask="MLIB_Msu_F16_Asmi.h"/>
        <files mask="MLIB_Msu_F32_Asmi.h"/>
        <files mask="MLIB_Msu_FLT.h"/>
        <files mask="MLIB_Msu4_F32.h"/>
        <files mask="MLIB_Msu4_F32_Asmi.h"/>
        <files mask="MLIB_Msu4_FLT.h"/>
        <files mask="MLIB_Msu4Rnd_F16.h"/>
        <files mask="MLIB_Msu4Rnd_F16_Asmi.h"/>
        <files mask="MLIB_Msu4Rnd_F32.h"/>
        <files mask="MLIB_Msu4Rnd_F32_Asmi.h"/>
        <files mask="MLIB_MsuRnd_A32.h"/>
        <files mask="MLIB_MsuRnd_F16_Asmi.h"/>
        <files mask="MLIB_MsuRnd_F32.h"/>
        <files mask="MLIB_MsuRnd_F32_Asmi.h"/>
        <files mask="MLIB_Mul_A32.h"/>
        <files mask="MLIB_Mul_A32_Asmi.h"/>
        <files mask="MLIB_Mul_F16.h"/>
        <files mask="MLIB_Mul_F16_Asmi.h"/>
        <files mask="MLIB_Mul_F32.h"/>
        <files mask="MLIB_Mul_F32_Asmi.h"/>
        <files mask="MLIB_Mul_FLT.h"/>
        <files mask="MLIB_MulRnd_A32.h"/>
        <files mask="MLIB_MulRnd_A32_Asmi.h"/>
        <files mask="MLIB_MulRnd_F16.h"/>
        <files mask="MLIB_MulRnd_F16_Asmi.h"/>
        <files mask="MLIB_MulRnd_F32.h"/>
        <files mask="MLIB_MulRnd_F32_Asmi.h"/>
        <files mask="MLIB_Neg_F16.h"/>
        <files mask="MLIB_Neg_F16_Asmi.h"/>
        <files mask="MLIB_Neg_F32.h"/>
        <files mask="MLIB_Neg_F32_Asmi.h"/>
        <files mask="MLIB_Neg_FLT.h"/>
        <files mask="MLIB_Rcp_A32.h"/>
        <files mask="MLIB_Rcp1Q_A32.h"/>
        <files mask="MLIB_Rnd_F32.h"/>
        <files mask="MLIB_Rnd_F32_Asmi.h"/>
        <files mask="MLIB_Sat_A32_Asmi.h"/>
        <files mask="MLIB_Shift_F16.h"/>
        <files mask="MLIB_Shift_F16_Asmi.h"/>
        <files mask="MLIB_Shift_F32.h"/>
        <files mask="MLIB_Shift_F32_Asmi.h"/>
        <files mask="MLIB_Sign_F16_Asmi.h"/>
        <files mask="MLIB_Sign_F32_Asmi.h"/>
        <files mask="MLIB_Sign_FLT_Asmi.h"/>
        <files mask="MLIB_Sub_A32.h"/>
        <files mask="MLIB_Sub_F16.h"/>
        <files mask="MLIB_Sub_F16_Asmi.h"/>
        <files mask="MLIB_Sub_F32.h"/>
        <files mask="MLIB_Sub_F32_Asmi.h"/>
        <files mask="MLIB_Sub_F64.h"/>
        <files mask="MLIB_Sub_FLT.h"/>
        <files mask="MLIB_Sub4_F16_Asmi.h"/>
        <files mask="MLIB_Sub4_F32_Asmi.h"/>
        <files mask="MLIB_Sub4_FLT.h"/>
        <files mask="mlib_types.h"/>
        <files mask="RTCESL_cfg.h"/>
      </source>
      <source toolchain="iar" relative_path="CM7F_RTCESL_4.6_IAR/AMCLIB" type="lib">
        <files mask="AMCLIB.a"/>
      </source>
      <source toolchain="iar" relative_path="CM7F_RTCESL_4.6_IAR/GFLIB" type="lib">
        <files mask="GFLIB.a"/>
      </source>
      <source toolchain="iar" relative_path="CM7F_RTCESL_4.6_IAR/GDFLIB" type="lib">
        <files mask="GDFLIB.a"/>
      </source>
      <source toolchain="iar" relative_path="CM7F_RTCESL_4.6_IAR/GMCLIB" type="lib">
        <files mask="GMCLIB.a"/>
      </source>
      <source toolchain="iar" relative_path="CM7F_RTCESL_4.6_IAR/MLIB" type="lib">
        <files mask="MLIB.a"/>
      </source>
      <source toolchain="mdk" relative_path="CM7F_RTCESL_4.6_KEIL/AMCLIB" type="lib">
        <files mask="AMCLIB.lib"/>
      </source>
      <source toolchain="mdk" relative_path="CM7F_RTCESL_4.6_KEIL/GFLIB" type="lib">
        <files mask="GFLIB.lib"/>
      </source>
      <source toolchain="mdk" relative_path="CM7F_RTCESL_4.6_KEIL/GDFLIB" type="lib">
        <files mask="GDFLIB.lib"/>
      </source>
      <source toolchain="mdk" relative_path="CM7F_RTCESL_4.6_KEIL/GMCLIB" type="lib">
        <files mask="GMCLIB.lib"/>
      </source>
      <source toolchain="mdk" relative_path="CM7F_RTCESL_4.6_KEIL/MLIB" type="lib">
        <files mask="MLIB.lib"/>
      </source>
      <source toolchain="mcuxpresso armgcc" relative_path="CM7F_RTCESL_4.6_MCUX/AMCLIB" type="lib">
        <files mask="libAMCLIB.a"/>
      </source>
      <source toolchain="mcuxpresso armgcc" relative_path="CM7F_RTCESL_4.6_MCUX/GFLIB" type="lib">
        <files mask="libGFLIB.a"/>
      </source>
      <source toolchain="mcuxpresso armgcc" relative_path="CM7F_RTCESL_4.6_MCUX/GDFLIB" type="lib">
        <files mask="libGDFLIB.a"/>
      </source>
      <source toolchain="mcuxpresso armgcc" relative_path="CM7F_RTCESL_4.6_MCUX/GMCLIB" type="lib">
        <files mask="libGMCLIB.a"/>
      </source>
      <source toolchain="mcuxpresso armgcc" relative_path="CM7F_RTCESL_4.6_MCUX/MLIB" type="lib">
        <files mask="libMLIB.a"/>
      </source>
      <source relative_path="CM7F_RTCESL_4.6_doc" type="doc">
        <files mask="CM7FGFLIBUG.pdf" hidden="true"/>
        <files mask="CM7FGDFLIBUG.pdf" hidden="true"/>
        <files mask="CM7FGMCLIBUG.pdf" hidden="true"/>
        <files mask="CM7FMLIBUG.pdf" hidden="true"/>
        <files mask="CM7FAMCLIBUG.pdf" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_rtcesl_cm7f_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="CM7F_RTCESL_4.6_IAR/AMCLIB/Include" toolchain="iar" type="c_include"/>
        <include_path relative_path="CM7F_RTCESL_4.6_IAR/GDFLIB/Include" toolchain="iar" type="c_include"/>
        <include_path relative_path="CM7F_RTCESL_4.6_IAR/GFLIB/Include" toolchain="iar" type="c_include"/>
        <include_path relative_path="CM7F_RTCESL_4.6_IAR/GMCLIB/Include" toolchain="iar" type="c_include"/>
        <include_path relative_path="CM7F_RTCESL_4.6_IAR/MLIB/Include" toolchain="iar" type="c_include"/>
        <include_path relative_path="CM7F_RTCESL_4.6_KEIL/AMCLIB/Include" toolchain="mdk" type="c_include"/>
        <include_path relative_path="CM7F_RTCESL_4.6_KEIL/GDFLIB/Include" toolchain="mdk" type="c_include"/>
        <include_path relative_path="CM7F_RTCESL_4.6_KEIL/GFLIB/Include" toolchain="mdk" type="c_include"/>
        <include_path relative_path="CM7F_RTCESL_4.6_KEIL/GMCLIB/Include" toolchain="mdk" type="c_include"/>
        <include_path relative_path="CM7F_RTCESL_4.6_KEIL/MLIB/Include" toolchain="mdk" type="c_include"/>
        <include_path relative_path="CM7F_RTCESL_4.6_MCUX/AMCLIB/Include" toolchain="mcuxpresso armgcc" type="c_include"/>
        <include_path relative_path="CM7F_RTCESL_4.6_MCUX/GDFLIB/Include" toolchain="mcuxpresso armgcc" type="c_include"/>
        <include_path relative_path="CM7F_RTCESL_4.6_MCUX/GFLIB/Include" toolchain="mcuxpresso armgcc" type="c_include"/>
        <include_path relative_path="CM7F_RTCESL_4.6_MCUX/GMCLIB/Include" toolchain="mcuxpresso armgcc" type="c_include"/>
        <include_path relative_path="CM7F_RTCESL_4.6_MCUX/MLIB/Include" toolchain="mcuxpresso armgcc" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.safety.MIMXRT1024" name="safety" brief="NXP Safety IEC60730B Library" version="1.0.0" full_name="Middleware safety" devices="MIMXRT1024xxxxx" user_visible="true" type="other" package_base_path="./" project_base_path="./">
      <source relative_path="middleware/safety_iec60730b/safety/v4_1/core_test/cm4_cm7/register" project_relative_path="safety/v4_1/register" type="c_include" device_cores="core0_MIMXRT1024xxxxx">
        <files mask="iec60730b_cm4_cm7_reg.h"/>
      </source>
      <source relative_path="middleware/safety_iec60730b/safety/v4_1/core_test/cm4_cm7/ram" project_relative_path="safety/v4_1/ram" type="c_include" device_cores="core0_MIMXRT1024xxxxx">
        <files mask="iec60730b_cm4_cm7_ram.h"/>
      </source>
      <source relative_path="middleware/safety_iec60730b/safety/v4_1/core_test/cm4_cm7/flash" project_relative_path="safety/v4_1/flash" type="c_include" device_cores="core0_MIMXRT1024xxxxx">
        <files mask="iec60730b_cm4_cm7_flash.h"/>
      </source>
      <source relative_path="middleware/safety_iec60730b/safety/v4_1/core_test/cm4_cm7/stack" project_relative_path="safety/v4_1/stack" type="c_include" device_cores="core0_MIMXRT1024xxxxx">
        <files mask="iec60730b_cm4_cm7_stack.h"/>
      </source>
      <source relative_path="middleware/safety_iec60730b/safety/v4_1/core_test/cm4_cm7/programCounter" project_relative_path="safety/v4_1/programCounter" type="c_include" device_cores="core0_MIMXRT1024xxxxx">
        <files mask="iec60730b_cm4_cm7_pc.h"/>
      </source>
      <source relative_path="middleware/safety_iec60730b/safety/v4_1/core_test/cm4_cm7/programCounter" project_relative_path="safety/v4_1/programCounter" type="asm_include" device_cores="core0_MIMXRT1024xxxxx">
        <files mask="iec60730b_cm4_cm7_pc_object.S"/>
      </source>
      <source relative_path="middleware/safety_iec60730b/safety/v4_1/core_test/cm4_cm7" project_relative_path="safety/v4_1/" type="c_include" device_cores="core0_MIMXRT1024xxxxx">
        <files mask="iec60730b_core.h"/>
      </source>
      <source relative_path="middleware/safety_iec60730b/safety/v4_1" project_relative_path="safety/v4_1" type="c_include">
        <files mask="iec60730b.h"/>
        <files mask="iec60730b_types.h"/>
      </source>
      <source relative_path="middleware/safety_iec60730b/safety/v4_1/compiler" project_relative_path="safety/v4_1/compiler" type="c_include">
        <files mask="asm_mac_common.h"/>
      </source>
      <source relative_path="middleware/safety_iec60730b/safety/v4_1/common_test/wdog" project_relative_path="safety/v4_1/wdog" type="src">
        <files mask="iec60730b_wdog.c"/>
      </source>
      <source relative_path="middleware/safety_iec60730b/safety/v4_1/common_test/wdog" project_relative_path="safety/v4_1/wdog" type="c_include">
        <files mask="iec60730b_wdog.h"/>
      </source>
      <source relative_path="middleware/safety_iec60730b/safety/v4_1/common_test/tsi" project_relative_path="safety/v4_1/tsi" type="c_include">
        <files mask="iec60730b_tsi.h"/>
      </source>
      <source relative_path="middleware/safety_iec60730b/safety/v4_1/common_test/dio" project_relative_path="safety/v4_1/dio" type="c_include">
        <files mask="iec60730b_dio_ext.h"/>
        <files mask="iec60730b_dio.h"/>
      </source>
      <source relative_path="middleware/safety_iec60730b/safety/v4_1/common_test/clock" project_relative_path="safety/v4_1/clock" type="c_include">
        <files mask="iec60730b_clock.h"/>
      </source>
      <source relative_path="middleware/safety_iec60730b/safety/v4_1/common_test/aio" project_relative_path="safety/v4_1/aio" type="c_include">
        <files mask="iec60730b_aio.h"/>
      </source>
      <source toolchain="iar" relative_path="middleware/safety_iec60730b/safety/v4_1" project_relative_path="safety/v4_1" type="lib" device_cores="core0_MIMXRT1024xxxxx">
        <files mask="IEC60730B_M4_M7_IAR_v4_1.a"/>
      </source>
      <source toolchain="iar" relative_path="middleware/safety_iec60730b/safety/v4_1" project_relative_path="safety/v4_1" type="lib" device_cores="core0_MIMXRT1024xxxxx">
        <files mask="IEC60730B_M4_M7_COM_IAR_v4_1.a"/>
      </source>
      <source toolchain="mdk" relative_path="middleware/safety_iec60730b/safety/v4_1" project_relative_path="safety/v4_1" type="lib" device_cores="core0_MIMXRT1024xxxxx">
        <files mask="IEC60730B_M4_M7_KEIL_v4_1.lib"/>
      </source>
      <source toolchain="mdk" relative_path="middleware/safety_iec60730b/safety/v4_1" project_relative_path="safety/v4_1" type="lib" device_cores="core0_MIMXRT1024xxxxx">
        <files mask="IEC60730B_M4_M7_COM_KEIL_v4_1.lib"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="middleware/safety_iec60730b/safety/v4_1" project_relative_path="safety/v4_1" type="lib" device_cores="core0_MIMXRT1024xxxxx">
        <files mask="libIEC60730B_M4_M7_MCUX_v4_1.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="middleware/safety_iec60730b/safety/v4_1" project_relative_path="safety/v4_1" type="lib" device_cores="core0_MIMXRT1024xxxxx">
        <files mask="libIEC60730B_M4_M7_COM_MCUX_v4_1.a"/>
      </source>
      <source relative_path="devices/MIMXRT1024" project_relative_path="MIMXRT1024" type="src">
        <files mask="system_MIMXRT1024.c"/>
      </source>
      <source relative_path="devices/MIMXRT1024" project_relative_path="MIMXRT1024" type="c_include">
        <files mask="system_MIMXRT1024.h"/>
      </source>
      <include_paths>
        <include_path relative_path="middleware/safety_iec60730b/safety/v4_1/core_test/cm4_cm7/register" project_relative_path="safety/v4_1/register" type="c_include" device_cores="core0_MIMXRT1024xxxxx"/>
        <include_path relative_path="middleware/safety_iec60730b/safety/v4_1/core_test/cm4_cm7/ram" project_relative_path="safety/v4_1/ram" type="c_include" device_cores="core0_MIMXRT1024xxxxx"/>
        <include_path relative_path="middleware/safety_iec60730b/safety/v4_1/core_test/cm4_cm7/flash" project_relative_path="safety/v4_1/flash" type="c_include" device_cores="core0_MIMXRT1024xxxxx"/>
        <include_path relative_path="middleware/safety_iec60730b/safety/v4_1/core_test/cm4_cm7/stack" project_relative_path="safety/v4_1/stack" type="c_include" device_cores="core0_MIMXRT1024xxxxx"/>
        <include_path relative_path="middleware/safety_iec60730b/safety/v4_1/core_test/cm4_cm7/programCounter" project_relative_path="safety/v4_1/programCounter" type="c_include" device_cores="core0_MIMXRT1024xxxxx"/>
        <include_path relative_path="middleware/safety_iec60730b/safety/v4_1/core_test/cm4_cm7" project_relative_path="safety/v4_1/" type="c_include" device_cores="core0_MIMXRT1024xxxxx"/>
        <include_path relative_path="middleware/safety_iec60730b/safety/v4_1" project_relative_path="safety/v4_1/" type="c_include"/>
        <include_path relative_path="middleware/safety_iec60730b/safety/v4_1/compiler" project_relative_path="safety/v4_1/compiler" type="c_include"/>
        <include_path relative_path="middleware/safety_iec60730b/safety/v4_1/common_test/wdog" project_relative_path="safety/v4_1/wdog" type="c_include"/>
        <include_path relative_path="middleware/safety_iec60730b/safety/v4_1/common_test/tsi" project_relative_path="safety/v4_1/tsi" type="c_include"/>
        <include_path relative_path="middleware/safety_iec60730b/safety/v4_1/common_test/dio" project_relative_path="safety/v4_1/dio" type="c_include"/>
        <include_path relative_path="middleware/safety_iec60730b/safety/v4_1/common_test/clock" project_relative_path="safety/v4_1/clock" type="c_include"/>
        <include_path relative_path="middleware/safety_iec60730b/safety/v4_1/common_test/aio" project_relative_path="safety/v4_1/aio" type="c_include"/>
        <include_path relative_path="devices/MIMXRT1024" project_relative_path="MIMXRT1024" type="c_include"/>
        <include_path relative_path="middleware/safety_iec60730b/safety/v4_1/core_test/cm4_cm7/register" project_relative_path="safety/v4_1/register" type="asm_include" device_cores="core0_MIMXRT1024xxxxx"/>
        <include_path relative_path="middleware/safety_iec60730b/safety/v4_1/core_test/cm4_cm7/ram" project_relative_path="safety/v4_1/ram" type="asm_include" device_cores="core0_MIMXRT1024xxxxx"/>
        <include_path relative_path="middleware/safety_iec60730b/safety/v4_1/core_test/cm4_cm7/flash" project_relative_path="safety/v4_1/flash" type="asm_include" device_cores="core0_MIMXRT1024xxxxx"/>
        <include_path relative_path="middleware/safety_iec60730b/safety/v4_1/core_test/cm4_cm7/stack" project_relative_path="safety/v4_1/stack" type="asm_include" device_cores="core0_MIMXRT1024xxxxx"/>
        <include_path relative_path="middleware/safety_iec60730b/safety/v4_1/core_test/cm4_cm7/programCounter" project_relative_path="safety/v4_1/programCounter" type="asm_include" device_cores="core0_MIMXRT1024xxxxx"/>
        <include_path relative_path="middleware/safety_iec60730b/safety/v4_1/core_test/cm4_cm7" project_relative_path="safety/v4_1/" type="asm_include" device_cores="core0_MIMXRT1024xxxxx"/>
        <include_path relative_path="middleware/safety_iec60730b/safety/v4_1" project_relative_path="safety/v4_1/" type="asm_include"/>
        <include_path relative_path="middleware/safety_iec60730b/safety/v4_1/compiler" project_relative_path="safety/v4_1/compiler" type="asm_include"/>
        <include_path relative_path="middleware/safety_iec60730b/safety/v4_1/common_test/wdog" project_relative_path="safety/v4_1/wdog" type="asm_include"/>
        <include_path relative_path="middleware/safety_iec60730b/safety/v4_1/common_test/tsi" project_relative_path="safety/v4_1/tsi" type="asm_include"/>
        <include_path relative_path="middleware/safety_iec60730b/safety/v4_1/common_test/dio" project_relative_path="safety/v4_1/dio" type="asm_include"/>
        <include_path relative_path="middleware/safety_iec60730b/safety/v4_1/common_test/clock" project_relative_path="safety/v4_1/clock" type="asm_include"/>
        <include_path relative_path="middleware/safety_iec60730b/safety/v4_1/common_test/aio" project_relative_path="safety/v4_1/aio" type="asm_include"/>
        <include_path relative_path="devices/MIMXRT1024" project_relative_path="MIMXRT1024" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.common.MIMXRT1024" name="sdmmc_common" brief="Middleware sdmmc common" version="2.3.0" full_name="SDMMC common stack" devices="MIMXRT1024xxxxx" category="Memories/SDMMC Stack" user_visible="false" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <source relative_path="common" project_relative_path="inc" type="c_include">
        <files mask="fsl_sdmmc_spec.h"/>
        <files mask="fsl_sdmmc_common.h"/>
      </source>
      <source relative_path="common" project_relative_path="src" type="src">
        <files mask="fsl_sdmmc_common.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_sdmmc_common_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="common" project_relative_path="inc" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.host.usdhc.MIMXRT1024" name="sdmmc_host_usdhc" brief="Middleware sdmmc host usdhc" version="2.5.0" full_name="Middleware sdmmc host usdhc" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <any_of>
          <component_dependency value="middleware.sdmmc.host.usdhc.interrupt.MIMXRT1024"/>
          <component_dependency value="middleware.sdmmc.host.usdhc.polling.MIMXRT1024"/>
          <component_dependency value="middleware.sdmmc.host.usdhc.freertos.MIMXRT1024"/>
        </any_of>
      </dependencies>
      <source relative_path="host/usdhc" project_relative_path="host" type="c_include">
        <files mask="fsl_sdmmc_host.h"/>
      </source>
      <source relative_path="host/usdhc" project_relative_path="host" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_sdmmc_host_usdhc_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/usdhc" project_relative_path="host" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.host.usdhc.freertos.MIMXRT1024" name="sdmmc_host_usdhc_freertos" brief="Middleware sdmmc host usdhc freertos" version="2.5.0" full_name="Middleware sdmmc host usdhc freertos" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.common.MIMXRT1024"/>
          <component_dependency value="middleware.sdmmc.osa.freertos.MIMXRT1024"/>
          <component_dependency value="platform.drivers.usdhc.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="host/usdhc/non_blocking" project_relative_path="host" type="src">
        <files mask="fsl_sdmmc_host.c"/>
      </source>
      <source relative_path="host/usdhc" project_relative_path="host" type="c_include">
        <files mask="fsl_sdmmc_host.h"/>
      </source>
      <source relative_path="host/usdhc" project_relative_path="host" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_sdmmc_host_usdhc_freertos_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/usdhc" project_relative_path="host" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.host.usdhc.interrupt.MIMXRT1024" name="sdmmc_host_usdhc_interrupt" brief="Middleware sdmmc host usdhc interrupt" version="2.5.0" full_name="Middleware sdmmc host usdhc interrupt" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.common.MIMXRT1024"/>
          <component_dependency value="middleware.sdmmc.osa.bm.MIMXRT1024"/>
          <component_dependency value="platform.drivers.usdhc.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="host/usdhc/non_blocking" project_relative_path="host" type="src">
        <files mask="fsl_sdmmc_host.c"/>
      </source>
      <source relative_path="host/usdhc" project_relative_path="host" type="c_include">
        <files mask="fsl_sdmmc_host.h"/>
      </source>
      <source relative_path="host/usdhc" project_relative_path="host" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_sdmmc_host_usdhc_interrupt_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/usdhc" project_relative_path="host" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.host.usdhc.polling.MIMXRT1024" name="sdmmc_host_usdhc_polling" brief="Middleware sdmmc host usdhc polling" version="2.5.0" full_name="Middleware sdmmc host usdhc polling" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.common.MIMXRT1024"/>
          <component_dependency value="middleware.sdmmc.osa.bm.MIMXRT1024"/>
          <component_dependency value="platform.drivers.usdhc.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="host/usdhc/blocking" project_relative_path="host" type="src">
        <files mask="fsl_sdmmc_host.c"/>
      </source>
      <source relative_path="host/usdhc" project_relative_path="host" type="c_include">
        <files mask="fsl_sdmmc_host.h"/>
      </source>
      <source relative_path="host/usdhc" project_relative_path="host" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_sdmmc_host_usdhc_polling_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/usdhc" project_relative_path="host" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.mmc.MIMXRT1024" name="mmc" brief="Middleware sdmmc mmc" version="2.4.1" full_name="SDMMC mmc stack" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.common.MIMXRT1024"/>
          <component_dependency value="middleware.sdmmc.host.usdhc.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="mmc" project_relative_path="src" type="src">
        <files mask="fsl_mmc.c"/>
      </source>
      <source relative_path="mmc" project_relative_path="inc" type="c_include">
        <files mask="fsl_mmc.h"/>
      </source>
      <source relative_path="mmc" project_relative_path="./mmc" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_sdmmc_mmc_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="mmc" project_relative_path="inc" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.osa.bm.MIMXRT1024" name="sdmmc_osa_bm" brief="Middleware sdmmc osa_bm" version="2.3.0" full_name="SDMMC common stack" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <component_dependency value="component.osa_bm.MIMXRT1024"/>
      </dependencies>
      <source relative_path="osa" type="c_include">
        <files mask="fsl_sdmmc_osa.h"/>
      </source>
      <source relative_path="osa" type="src">
        <files mask="fsl_sdmmc_osa.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_sdmmc_osa_bm_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="osa" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.osa.freertos.MIMXRT1024" name="sdmmc_osa_freertos" brief="Middleware sdmmc osa_freertos" version="2.3.0" full_name="SDMMC common stack" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <component_dependency value="component.osa_free_rtos.MIMXRT1024"/>
      </dependencies>
      <source relative_path="osa" type="c_include">
        <files mask="fsl_sdmmc_osa.h"/>
      </source>
      <source relative_path="osa" type="src">
        <files mask="fsl_sdmmc_osa.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_sdmmc_osa_freertos_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="osa" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.sd.MIMXRT1024" name="sd" brief="Middleware sdmmc sd" version="2.3.3" full_name="SDMMC sd stack" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.common.MIMXRT1024"/>
          <component_dependency value="middleware.sdmmc.host.usdhc.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="sd" project_relative_path="src" type="src">
        <files mask="fsl_sd.c"/>
      </source>
      <source relative_path="sd" project_relative_path="inc" type="c_include">
        <files mask="fsl_sd.h"/>
      </source>
      <source relative_path="sd" project_relative_path="./sd" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_sdmmc_sd_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="sd" project_relative_path="inc" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.sdio.MIMXRT1024" name="sdio" brief="Middleware sdmmc sdio" version="2.3.2" full_name="SDMMC sdio stack" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.common.MIMXRT1024"/>
          <component_dependency value="middleware.sdmmc.host.usdhc.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="sdio" project_relative_path="src" type="src">
        <files mask="fsl_sdio.c"/>
      </source>
      <source relative_path="sdio" project_relative_path="inc" type="c_include">
        <files mask="fsl_sdio.h"/>
      </source>
      <source relative_path="sdio" project_relative_path="./sdio" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_sdmmc_sdio_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="sdio" project_relative_path="inc" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.common_header.MIMXRT1024" name="USB Common Header" brief="Middleware usb common_header" version="2.7.0" full_name="USB Common Header" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="USB/USB Common Header" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <component_dependency value="component.osa.MIMXRT1024"/>
      </dependencies>
      <source relative_path="include" type="c_include">
        <files mask="usb.h"/>
        <files mask="usb_misc.h"/>
        <files mask="usb_spec.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_usb_common_header_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.audio.external.MIMXRT1024" name="USB Device Audio" brief="Middleware usb device audio external" version="2.7.0" full_name="USB Device Audio" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <component_dependency value="middleware.usb.device.stack.external.MIMXRT1024"/>
      </dependencies>
      <source relative_path="output/source/device/class" project_relative_path="device/class/audio" type="src">
        <files mask="usb_device_audio.c"/>
      </source>
      <source relative_path="output/source/device/class" project_relative_path="device/class/audio" type="c_include">
        <files mask="usb_device_audio.h"/>
      </source>
      <include_paths>
        <include_path relative_path="output/source/device/class" project_relative_path="device/class/audio" type="c_include"/>
        <include_path relative_path="output/source/device/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.ccid.external.MIMXRT1024" name="USB Device CCID" brief="Middleware usb device ccid external" version="2.7.0" full_name="USB Device CCID" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <component_dependency value="middleware.usb.device.stack.external.MIMXRT1024"/>
      </dependencies>
      <source relative_path="output/source/device/class" project_relative_path="device/class/ccid" type="src">
        <files mask="usb_device_ccid.c"/>
      </source>
      <source relative_path="output/source/device/class" project_relative_path="device/class/ccid" type="c_include">
        <files mask="usb_device_ccid.h"/>
      </source>
      <include_paths>
        <include_path relative_path="output/source/device/class" project_relative_path="device/class/ccid" type="c_include"/>
        <include_path relative_path="output/source/device/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.cdc.external.MIMXRT1024" name="USB Device CDC" brief="Middleware usb device cdc external" version="2.7.0" full_name="USB Device CDC" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <component_dependency value="middleware.usb.device.stack.external.MIMXRT1024"/>
      </dependencies>
      <source relative_path="output/source/device/class" project_relative_path="device/class/cdc" type="src">
        <files mask="usb_device_cdc_acm.c"/>
      </source>
      <source relative_path="output/source/device/class" project_relative_path="device/class/cdc" type="c_include">
        <files mask="usb_device_cdc_acm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_usb_device_cdc_external_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="output/source/device/class" project_relative_path="device/class/cdc" type="c_include"/>
        <include_path relative_path="output/source/device/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.cdc.rndis.external.MIMXRT1024" name="USB Device CDC RNDIS" brief="Middleware usb device cdc rndis external" version="2.7.0" full_name="USB Device CDC RNDIS" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.device.stack.external.MIMXRT1024"/>
          <component_dependency value="middleware.usb.device.cdc.external.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="output/source/device/class" project_relative_path="device/class/cdc_rndis" type="src">
        <files mask="usb_device_cdc_rndis.c"/>
      </source>
      <source relative_path="output/source/device/class" project_relative_path="device/class/cdc_rndis" type="c_include">
        <files mask="usb_device_cdc_rndis.h"/>
      </source>
      <include_paths>
        <include_path relative_path="output/source/device/class" project_relative_path="device/class/cdc_rndis" type="c_include"/>
        <include_path relative_path="output/source/device/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.common_header.MIMXRT1024" name="USB Device Common Header" brief="Middleware usb device common_header" version="2.7.0" full_name="USB Device Common Header" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMXRT1024"/>
          <component_dependency value="middleware.usb.common_header.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="device" project_relative_path="device/include" type="c_include">
        <files mask="usb_device.h"/>
      </source>
      <source relative_path="device" project_relative_path="device/source" type="c_include">
        <files mask="usb_device_dci.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_usb_device_common_header_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device" project_relative_path="device/include" type="c_include"/>
        <include_path relative_path="device" project_relative_path="device/source" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.controller.driver.MIMXRT1024" name="USB Device Common Controller" brief="Middleware usb device controller driver" version="2.7.0" full_name="USB Device Common Controller" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMXRT1024"/>
          <component_dependency value="middleware.usb.device_controller_ehci.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="device" project_relative_path="device/include" type="c_include">
        <files mask="usb_device.h"/>
      </source>
      <source relative_path="device" project_relative_path="device/source" type="src">
        <files mask="usb_device_dci.c"/>
      </source>
      <source relative_path="device" project_relative_path="device/source" type="c_include">
        <files mask="usb_device_dci.h"/>
      </source>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="ChangeLogKSDK.txt" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_usb_device_controller_driver_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device" project_relative_path="device/include" type="c_include"/>
        <include_path relative_path="device" project_relative_path="device/source" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.dfu.external.MIMXRT1024" name="USB Device DFU" brief="Middleware usb device dfu external" version="2.7.0" full_name="USB Device DFU" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <component_dependency value="middleware.usb.device.stack.external.MIMXRT1024"/>
      </dependencies>
      <source relative_path="output/source/device/class" project_relative_path="device/class/dfu" type="src">
        <files mask="usb_device_dfu.c"/>
      </source>
      <source relative_path="output/source/device/class" project_relative_path="device/class/dfu" type="c_include">
        <files mask="usb_device_dfu.h"/>
      </source>
      <include_paths>
        <include_path relative_path="output/source/device/class" project_relative_path="device/class/dfu" type="c_include"/>
        <include_path relative_path="output/source/device/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device_controller_ehci.MIMXRT1024" name="USB Device EHCI Controller Driver(HS)" brief="Middleware usb device ehci" version="2.7.0" full_name="USB Device EHCI Controller Driver(HS)" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.phy.MIMXRT1024"/>
          <component_dependency value="middleware.usb.device.ehci_config_header.MIMXRT1024"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="device" project_relative_path="device/source/ehci" type="src">
        <files mask="usb_device_ehci.c"/>
      </source>
      <source relative_path="device" project_relative_path="device/source/ehci" type="c_include">
        <files mask="usb_device_ehci.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_usb_device_ehci_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device" project_relative_path="device/source/ehci" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.ehci_config_header.MIMXRT1024" name="USB device ehci config header" brief="USB device ehci config header" version="2.7.0" full_name="USB device ehci config header" devices="MIMXRT1024xxxxx" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <source relative_path="output/npw/device_config/ehci" project_relative_path="generated" type="c_include">
        <files mask="usb_device_config.h"/>
      </source>
      <include_paths>
        <include_path relative_path="output/npw/device_config/ehci" project_relative_path="generated" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.hid.external.MIMXRT1024" name="USB Device HID" brief="Middleware usb device hid external" version="2.7.0" full_name="USB Device HID" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <component_dependency value="middleware.usb.device.stack.external.MIMXRT1024"/>
      </dependencies>
      <source relative_path="output/source/device/class" project_relative_path="device/class/hid" type="src">
        <files mask="usb_device_hid.c"/>
      </source>
      <source relative_path="output/source/device/class" project_relative_path="device/class/hid" type="c_include">
        <files mask="usb_device_hid.h"/>
      </source>
      <include_paths>
        <include_path relative_path="output/source/device/class" project_relative_path="device/class/hid" type="c_include"/>
        <include_path relative_path="output/source/device/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.msd.external.MIMXRT1024" name="USB Device MSD" brief="Middleware usb device msd external" version="2.7.0" full_name="USB Device MSD" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <component_dependency value="middleware.usb.device.stack.external.MIMXRT1024"/>
      </dependencies>
      <source relative_path="output/source/device/class" project_relative_path="device/class/msc" type="src">
        <files mask="usb_device_msc.c"/>
        <files mask="usb_device_msc_ufi.c"/>
      </source>
      <source relative_path="output/source/device/class" project_relative_path="device/class/msc" type="c_include">
        <files mask="usb_device_msc.h"/>
        <files mask="usb_device_msc_ufi.h"/>
      </source>
      <include_paths>
        <include_path relative_path="output/source/device/class" project_relative_path="device/class/msc" type="c_include"/>
        <include_path relative_path="output/source/device/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.phdc.external.MIMXRT1024" name="USB Device PHDC" brief="Middleware usb device phdc external" version="2.7.0" full_name="USB Device PHDC" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <component_dependency value="middleware.usb.device.stack.external.MIMXRT1024"/>
      </dependencies>
      <source relative_path="output/source/device/class" project_relative_path="device/class/phdc" type="src">
        <files mask="usb_device_phdc.c"/>
      </source>
      <source relative_path="output/source/device/class" project_relative_path="device/class/phdc" type="c_include">
        <files mask="usb_device_phdc.h"/>
      </source>
      <include_paths>
        <include_path relative_path="output/source/device/class" project_relative_path="device/class/phdc" type="c_include"/>
        <include_path relative_path="output/source/device/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.printer.external.MIMXRT1024" name="USB Device Printer" brief="Middleware usb device printer external" version="2.7.0" full_name="USB Device Printer" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <component_dependency value="middleware.usb.device.stack.external.MIMXRT1024"/>
      </dependencies>
      <source relative_path="output/source/device/class" project_relative_path="device/class/printer" type="src">
        <files mask="usb_device_printer.c"/>
      </source>
      <source relative_path="output/source/device/class" project_relative_path="device/class/printer" type="c_include">
        <files mask="usb_device_printer.h"/>
      </source>
      <include_paths>
        <include_path relative_path="output/source/device/class" project_relative_path="device/class/printer" type="c_include"/>
        <include_path relative_path="output/source/device/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.stack.external.MIMXRT1024" name="USB Device Stack" brief="Middleware usb device stack external" version="2.7.0" full_name="USB Device Stack" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMXRT1024"/>
          <component_dependency value="middleware.usb.device.controller.driver.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="output/source/device/class" project_relative_path="device/class" type="src">
        <files mask="usb_device_class.c"/>
      </source>
      <source relative_path="output/source/device/class" project_relative_path="device/class" type="c_include">
        <files mask="usb_device_class.h"/>
      </source>
      <source relative_path="output/source/device" project_relative_path="device/source" type="src">
        <files mask="usb_device_ch9.c"/>
      </source>
      <source relative_path="output/source/device" project_relative_path="device/source" type="c_include">
        <files mask="usb_device_ch9.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_usb_device_stack_external_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="output/source/device/class" project_relative_path="device/class" type="c_include"/>
        <include_path relative_path="output/source/device" project_relative_path="device/source" type="c_include"/>
        <include_path relative_path="output/source/device/class" type="c_include"/>
        <include_path relative_path="output/source/device" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.video.external.MIMXRT1024" name="USB Device Video" brief="Middleware usb device video external" version="2.7.0" full_name="USB Device Video" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <component_dependency value="middleware.usb.device.stack.external.MIMXRT1024"/>
      </dependencies>
      <source relative_path="output/source/device/class" project_relative_path="device/class/video" type="src">
        <files mask="usb_device_video.c"/>
      </source>
      <source relative_path="output/source/device/class" project_relative_path="device/class/video" type="c_include">
        <files mask="usb_device_video.h"/>
      </source>
      <include_paths>
        <include_path relative_path="output/source/device/class" project_relative_path="device/class/video" type="c_include"/>
        <include_path relative_path="output/source/device/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_audio.MIMXRT1024" name="USB Host Audio" brief="Middleware usb host audio" version="2.7.0" full_name="USB Host Audio" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <component_dependency value="middleware.usb.host.stack.MIMXRT1024"/>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_audio.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_audio.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_usb_host_audio_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_cdc.MIMXRT1024" name="USB Host CDC" brief="Middleware usb host cdc" version="2.7.0" full_name="USB Host CDC" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <component_dependency value="middleware.usb.host.stack.MIMXRT1024"/>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_cdc.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_cdc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_usb_host_cdc_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_cdc_rndis.MIMXRT1024" name="USB Host CDC RNDIS" brief="Middleware usb host cdc_rndis" version="2.7.0" full_name="USB Host CDC RNDIS" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.host.stack.MIMXRT1024"/>
          <component_dependency value="middleware.usb.host_cdc.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_cdc_rndis.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_cdc_rndis.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_usb_host_cdc_rndis_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host.common_header.MIMXRT1024" name="USB Host Common Header" brief="Middleware usb host common_header" version="2.7.0" full_name="USB Host Common Header" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMXRT1024"/>
          <component_dependency value="middleware.usb.common_header.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="host" type="c_include">
        <files mask="usb_host.h"/>
        <files mask="usb_host_hci.h"/>
        <files mask="usb_host_devices.h"/>
        <files mask="usb_host_framework.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_usb_host_common_header_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_controller_ehci.MIMXRT1024" name="USB Host EHCI Controller Driver(HS)" brief="Middleware usb host ehci" version="2.7.0" full_name="USB Host EHCI Controller Driver(HS)" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.phy.MIMXRT1024"/>
          <component_dependency value="middleware.usb.host.ehci_config_header.MIMXRT1024"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="host" type="src">
        <files mask="usb_host_ehci.c"/>
      </source>
      <source relative_path="host" type="c_include">
        <files mask="usb_host_ehci.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_usb_host_ehci_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host.ehci_config_header.MIMXRT1024" name="USB host ehci config header" brief="USB host ehci config header" version="2.7.0" full_name="USB host ehci config header" devices="MIMXRT1024xxxxx" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <source relative_path="output/npw/host_config/ehci" project_relative_path="generated" type="c_include">
        <files mask="usb_host_config.h"/>
      </source>
      <include_paths>
        <include_path relative_path="output/npw/host_config/ehci" project_relative_path="generated" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_hid.MIMXRT1024" name="USB Host HID" brief="Middleware usb host hid" version="2.7.0" full_name="USB Host HID" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <component_dependency value="middleware.usb.host.stack.MIMXRT1024"/>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_hid.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_hid.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_usb_host_hid_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_msd.MIMXRT1024" name="USB Host MSD" brief="Middleware usb host msd" version="2.7.0" full_name="USB Host MSD" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <component_dependency value="middleware.usb.host.stack.MIMXRT1024"/>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_msd.c"/>
        <files mask="usb_host_msd_ufi.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_msd.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_usb_host_msd_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_phdc.MIMXRT1024" name="USB Host PHDC" brief="Middleware usb host phdc" version="2.7.0" full_name="USB Host PHDC" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <component_dependency value="middleware.usb.host.stack.MIMXRT1024"/>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_phdc.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_phdc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_usb_host_phdc_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_printer.MIMXRT1024" name="USB Host Printer" brief="Middleware usb host printer" version="2.7.0" full_name="USB Host Printer" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <component_dependency value="middleware.usb.host.stack.MIMXRT1024"/>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_printer.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_printer.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_usb_host_printer_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host.stack.MIMXRT1024" name="USB Host Stack" brief="Middleware usb host stack" version="2.7.0" full_name="USB Host Stack" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMXRT1024"/>
          <component_dependency value="middleware.usb.host_controller_ehci.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="host" type="c_include">
        <files mask="usb_host.h"/>
        <files mask="usb_host_hci.h"/>
        <files mask="usb_host_devices.h"/>
        <files mask="usb_host_framework.h"/>
      </source>
      <source relative_path="host" type="src">
        <files mask="usb_host_hci.c"/>
        <files mask="usb_host_devices.c"/>
        <files mask="usb_host_framework.c"/>
      </source>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_hub.c"/>
        <files mask="usb_host_hub_app.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_hub.h"/>
        <files mask="usb_host_hub_app.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_usb_host_stack_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host" type="c_include"/>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_video.MIMXRT1024" name="USB Host Video" brief="Middleware usb host video" version="2.7.0" full_name="USB Host Video" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <component_dependency value="middleware.usb.host.stack.MIMXRT1024"/>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_video.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_video.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_usb_host_video_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.phy.MIMXRT1024" name="USB PHY" brief="Middleware usb phy" version="2.7.0" full_name="USB PHY" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="USB/USB PHY" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <component_dependency value="middleware.usb.common_header.MIMXRT1024"/>
      </dependencies>
      <source relative_path="phy" type="src">
        <files mask="usb_phy.c"/>
      </source>
      <source relative_path="phy" type="c_include">
        <files mask="usb_phy.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_usb_phy_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="phy" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi_wiced.MIMXRT1024" name="wifi_wiced" brief="Cypress WICED framework for MCUXpresso SDK" version="6.1.0" full_name="Cypress WICED framework" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="Wireless/Cypress WiFi" user_visible="true" type="middleware" package_base_path="middleware/wiced" project_base_path="wiced">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1024"/>
          <component_dependency value="middleware.sdmmc.sdio.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="43xxx_Wi-Fi/include" type="c_include">
        <files mask="wiced_resource.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/internal" type="src">
        <files mask="wifi.c"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/network/LwIP/WWD" type="src">
        <files mask="wwd_buffer.c"/>
        <files mask="wwd_network.c"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/network/LwIP/WWD" type="c_include">
        <files mask="wwd_buffer.h"/>
        <files mask="wwd_network.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/platform/include" type="c_include">
        <files mask="platform_cache_def.h"/>
        <files mask="platform_peripheral.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/platform/MCU" type="c_include">
        <files mask="wwd_platform_common.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/platform/MCU" type="src">
        <files mask="wwd_platform_separate_mcu.c"/>
        <files mask="wwd_resources.c"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/platform/MCU/LPC" type="c_include">
        <files mask="platform_mcu_peripheral.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/platform/MCU/LPC/WWD" type="src">
        <files mask="wwd_platform.c"/>
        <files mask="wwd_SDIO.c"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/platform" type="c_include">
        <files mask="platform_toolchain.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/RTOS/FreeRTOS/WWD" type="c_include">
        <files mask="wwd_FreeRTOS_systick.h"/>
        <files mask="wwd_rtos.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/RTOS/FreeRTOS/WWD" type="src">
        <files mask="wwd_rtos.c"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/WWD/include/network" type="c_include">
        <files mask="wwd_buffer_interface.h"/>
        <files mask="wwd_network_constants.h"/>
        <files mask="wwd_network_interface.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/WWD/include/platform" type="c_include">
        <files mask="wwd_bus_interface.h"/>
        <files mask="wwd_platform_interface.h"/>
        <files mask="wwd_resource_interface.h"/>
        <files mask="wwd_sdio_interface.h"/>
        <files mask="wwd_spi_interface.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/WWD/include/RTOS" type="c_include">
        <files mask="wwd_rtos_interface.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/WWD/include" type="c_include">
        <files mask="wwd_assert.h"/>
        <files mask="wwd_constants.h"/>
        <files mask="wwd_debug.h"/>
        <files mask="wwd_eapol.h"/>
        <files mask="wwd_events.h"/>
        <files mask="wwd_management.h"/>
        <files mask="wwd_poll.h"/>
        <files mask="wwd_structures.h"/>
        <files mask="wwd_wifi.h"/>
        <files mask="wwd_wifi_sleep.h"/>
        <files mask="wwd_wlioctl.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/WWD/internal/bus_protocols/SDIO" type="src">
        <files mask="wwd_bus_protocol.c"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/WWD/internal/bus_protocols/SDIO" type="c_include">
        <files mask="wwd_bus_protocol.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/WWD/internal/bus_protocols" type="src">
        <files mask="wwd_bus_common.c"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/WWD/internal/bus_protocols" type="c_include">
        <files mask="wwd_bus_protocol_interface.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/WWD/internal" type="src">
        <files mask="tlv.c"/>
        <files mask="wwd_ap_common.c"/>
        <files mask="wwd_clm.c"/>
        <files mask="wwd_debug.c"/>
        <files mask="wwd_eapol.c"/>
        <files mask="wwd_internal.c"/>
        <files mask="wwd_management.c"/>
        <files mask="wwd_rtos_interface.c"/>
        <files mask="wwd_sdpcm.c"/>
        <files mask="wwd_thread.c"/>
        <files mask="wwd_thread_internal.c"/>
        <files mask="wwd_wifi.c"/>
        <files mask="wwd_wifi_chip_common.c"/>
        <files mask="wwd_wifi_sleep.c"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/WWD/internal" type="c_include">
        <files mask="tlv.h"/>
        <files mask="wwd_ap.h"/>
        <files mask="wwd_ap_common.h"/>
        <files mask="wwd_bcmendian.h"/>
        <files mask="wwd_clm.h"/>
        <files mask="wwd_internal.h"/>
        <files mask="wwd_logging.h"/>
        <files mask="wwd_sdpcm.h"/>
        <files mask="wwd_thread.h"/>
        <files mask="wwd_thread_internal.h"/>
        <files mask="wwd_wifi_chip_common.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/WWD" type="c_include">
        <files mask="wwd.h"/>
        <files mask="wwd_wiced.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi" type="src">
        <files mask="generated_mac_address.txt"/>
      </source>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="ChangeLogKSDK.txt" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_wifi_wiced_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="43xxx_Wi-Fi/include" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/WICED/network/LwIP/WWD" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/WICED/platform/include" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/WICED/platform/MCU" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/WICED/platform/MCU/LPC" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/WICED/platform" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/WICED/RTOS/FreeRTOS/WWD" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/WICED/WWD/include/network" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/WICED/WWD/include/platform" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/WICED/WWD/include/RTOS" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/WICED/WWD/include" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/WICED/WWD/internal/bus_protocols/SDIO" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/WICED/WWD/internal/bus_protocols" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/WICED/WWD/internal" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/WICED/WWD" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/WICED/platform/MCU/LPC/WWD" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi_wiced.43012.MIMXRT1024" name="wifi_wiced_43012" brief="Cypress WICED support for 43012 chip" version="6.1.0" full_name="Cypress WICED support for 43012 chip" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="Wireless/Cypress WiFi" user_visible="true" type="middleware" package_base_path="middleware/wiced" project_base_path="wiced">
      <dependencies>
        <component_dependency value="middleware.wifi_wiced.MIMXRT1024"/>
      </dependencies>
      <source relative_path="43xxx_Wi-Fi/WICED/WWD/internal/chips/43012" type="c_include">
        <files mask="43012.h"/>
        <files mask="43012_clm.h"/>
        <files mask="43012_mfg.h"/>
        <files mask="43012_mfg_clm.h"/>
        <files mask="chip_constants.h"/>
        <files mask="resources.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/WWD/internal/chips/43012" type="src">
        <files mask="resources.c"/>
        <files mask="wwd_ap.c"/>
        <files mask="wwd_chip_specific_functions.c"/>
      </source>
      <include_paths>
        <include_path relative_path="43xxx_Wi-Fi/WICED/WWD/internal/chips/43012" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi_wiced.4343W.MIMXRT1024" name="wifi_wiced_4343W" brief="Cypress WICED support for 4343W chip" version="6.1.0" full_name="Cypress WICED support for 4343W chip" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="Wireless/Cypress WiFi" user_visible="true" type="middleware" package_base_path="middleware/wiced" project_base_path="wiced">
      <dependencies>
        <component_dependency value="middleware.wifi_wiced.MIMXRT1024"/>
      </dependencies>
      <source relative_path="43xxx_Wi-Fi/WICED/WWD/internal/chips/4343W" type="c_include">
        <files mask="4343WA1.h"/>
        <files mask="4343WA1_clm.h"/>
        <files mask="4343WA1_mfg.h"/>
        <files mask="4343WA1_clm_mfg.h"/>
        <files mask="chip_constants.h"/>
        <files mask="resources.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/WWD/internal/chips/4343W" type="src">
        <files mask="resources.c"/>
        <files mask="wwd_ap.c"/>
        <files mask="wwd_chip_specific_functions.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_wifi_wiced_4343W_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="43xxx_Wi-Fi/WICED/WWD/internal/chips/4343W" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi_wiced.43455.MIMXRT1024" name="wifi_wiced_43455" brief="Cypress WICED support for 43455 chip" version="6.1.0" full_name="Cypress WICED support for 43455 chip" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="Wireless/Cypress WiFi" user_visible="true" type="middleware" package_base_path="middleware/wiced" project_base_path="wiced">
      <dependencies>
        <component_dependency value="middleware.wifi_wiced.MIMXRT1024"/>
      </dependencies>
      <source relative_path="43xxx_Wi-Fi/WICED/WWD/internal/chips/43455" type="c_include">
        <files mask="43455.h"/>
        <files mask="43455_clm.h"/>
        <files mask="43455_mfg.h"/>
        <files mask="43455_mfg_clm.h"/>
        <files mask="chip_constants.h"/>
        <files mask="resources.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/WICED/WWD/internal/chips/43455" type="src">
        <files mask="resources.c"/>
        <files mask="wwd_ap.c"/>
        <files mask="wwd_chip_specific_functions.c"/>
      </source>
      <include_paths>
        <include_path relative_path="43xxx_Wi-Fi/WICED/WWD/internal/chips/43455" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi_wiced.AW_NM372SM.MIMXRT1024" name="wifi_wiced_AW_NM372SM" brief="Cypress WICED support for AW_NM372SM platform" version="6.1.0" full_name="Cypress WICED support for AW_NM372SM platform" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="middleware" package_base_path="middleware/wiced" project_base_path="wiced">
      <dependencies>
        <component_dependency value="middleware.wifi_wiced.4343W.MIMXRT1024"/>
      </dependencies>
      <source relative_path="43xxx_Wi-Fi/platforms/AW_NM372SM" type="c_include">
        <files mask="wifi_nvram_image.h"/>
      </source>
      <include_paths>
        <include_path relative_path="43xxx_Wi-Fi/platforms/AW_NM372SM" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi_wiced.MURATA_TYPE1DX.MIMXRT1024" name="wifi_wiced_MURATA_TYPE1DX" brief="Cypress WICED support for MURATA_TYPE1DX platform" version="6.1.0" full_name="Cypress WICED support for MURATA_TYPE1DX platform" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="Wireless/Cypress WiFi" user_visible="true" type="middleware" package_base_path="middleware/wiced" project_base_path="wiced">
      <dependencies>
        <component_dependency value="middleware.wifi_wiced.4343W.MIMXRT1024"/>
      </dependencies>
      <source relative_path="43xxx_Wi-Fi/platforms/MURATA_TYPE1DX" type="c_include">
        <files mask="wifi_nvram_image.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_wifi_wiced_MURATA_TYPE1DX_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="43xxx_Wi-Fi/platforms/MURATA_TYPE1DX" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi_wiced.MURATA_TYPE1LV.MIMXRT1024" name="wifi_wiced_MURATA_TYPE1LV" brief="Cypress WICED support for MURATA_TYPE1LV platform" version="6.1.0" full_name="Cypress WICED support for MURATA_TYPE1LV platform" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="Wireless/Cypress WiFi" user_visible="true" type="middleware" package_base_path="middleware/wiced" project_base_path="wiced">
      <dependencies>
        <component_dependency value="middleware.wifi_wiced.43012.MIMXRT1024"/>
      </dependencies>
      <source relative_path="43xxx_Wi-Fi/platforms/MURATA_TYPE1LV" type="c_include">
        <files mask="wifi_nvram_image.h"/>
      </source>
      <include_paths>
        <include_path relative_path="43xxx_Wi-Fi/platforms/MURATA_TYPE1LV" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi_wiced.MURATA_TYPE1MW.MIMXRT1024" name="wifi_wiced_MURATA_TYPE1MW" brief="Cypress WICED support for MURATA_TYPE1MW platform" version="6.1.0" full_name="Cypress WICED support for MURATA_TYPE1MW platform" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="Wireless/Cypress WiFi" user_visible="true" type="middleware" package_base_path="middleware/wiced" project_base_path="wiced">
      <dependencies>
        <component_dependency value="middleware.wifi_wiced.43455.MIMXRT1024"/>
      </dependencies>
      <source relative_path="43xxx_Wi-Fi/platforms/MURATA_TYPE1MW" type="c_include">
        <files mask="wifi_nvram_image.h"/>
      </source>
      <include_paths>
        <include_path relative_path="43xxx_Wi-Fi/platforms/MURATA_TYPE1MW" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi_wiced.app.MIMXRT1024" name="wifi_wiced_app" brief="Cypress WICED application code" version="6.1.0" full_name="Cypress WICED application code" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="Wireless/Cypress WiFi" user_visible="false" type="middleware" package_base_path="middleware/wiced" project_base_path="wiced">
      <dependencies>
        <component_dependency value="middleware.wifi_wiced.MIMXRT1024"/>
      </dependencies>
      <source relative_path="43xxx_Wi-Fi/app" type="src">
        <files mask="dhcp_server.c"/>
        <files mask="test_apsta.c"/>
        <files mask="test_scan.c"/>
        <files mask="wlanif_add.c"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/app" type="c_include">
        <files mask="dhcp_server.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_wifi_wiced_app_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="43xxx_Wi-Fi/app" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi_wiced.wl_tool.MIMXRT1024" name="wifi_wiced_wl_tool" brief="Cypress WICED wl_tool for 4343WA1" version="6.1.0" full_name="Cypress WICED wl_tool for 4343WA1" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" category="Wireless/Cypress WiFi" user_visible="false" type="middleware" package_base_path="middleware/wiced" project_base_path="wiced">
      <dependencies>
        <component_dependency value="middleware.wifi_wiced.MIMXRT1024"/>
      </dependencies>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/4343WA1/common/include/devctrl_if" type="c_include">
        <files mask="phyioctl_defs.h"/>
        <files mask="wlioctl_defs.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/4343WA1/common/include/proto" type="c_include">
        <files mask="802.11.h"/>
        <files mask="802.11e.h"/>
        <files mask="802.1d.h"/>
        <files mask="bcmeth.h"/>
        <files mask="bcmevent.h"/>
        <files mask="bcmip.h"/>
        <files mask="bcmipv6.h"/>
        <files mask="ethernet.h"/>
        <files mask="vlan.h"/>
        <files mask="wpa.h"/>
        <files mask="wps.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/4343WA1/include" type="c_include">
        <files mask="bcm_cfg.h"/>
        <files mask="bcm_mpool_pub.h"/>
        <files mask="bcmcdc.h"/>
        <files mask="bcmdefs.h"/>
        <files mask="bcmdevs.h"/>
        <files mask="bcmendian.h"/>
        <files mask="bcmnvram.h"/>
        <files mask="bcmsrom_fmt.h"/>
        <files mask="bcmsrom_tbl.h"/>
        <files mask="bcmstdlib.h"/>
        <files mask="bcmutils.h"/>
        <files mask="dhdioctl.h"/>
        <files mask="epictrl.h"/>
        <files mask="epiioctl.h"/>
        <files mask="epivers.h"/>
        <files mask="irelay.h"/>
        <files mask="miniopt.h"/>
        <files mask="packed_section_end.h"/>
        <files mask="packed_section_start.h"/>
        <files mask="sbpcmcia.h"/>
        <files mask="trxhdr.h"/>
        <files mask="typedefs.h"/>
        <files mask="usbrdl.h"/>
        <files mask="wl_drv.h"/>
        <files mask="wlioctl.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/4343WA1/shared/bcmwifi/include" type="c_include">
        <files mask="bcmwifi_channels.h"/>
        <files mask="bcmwifi_rates.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/4343WA1/wl/exe" type="c_include">
        <files mask="wlu.h"/>
        <files mask="wlu_client_shared.h"/>
        <files mask="wlu_cmd.h"/>
        <files mask="wlu_common.h"/>
        <files mask="wlu_pipe.h"/>
        <files mask="wlu_remote.h"/>
        <files mask="wlu_server_shared.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/4343WA1/wl/exe" type="src">
        <files mask="wlu_pipe.c"/>
        <files mask="wlu_server_shared.c"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/dummy/arpa" type="c_include">
        <files mask="inet.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/dummy/net" type="c_include">
        <files mask="if.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/dummy" type="c_include">
        <files mask="netdb.h"/>
        <files mask="ntddndis.h"/>
        <files mask="nuiouser.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/dummy/sys" type="c_include">
        <files mask="socket.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool" type="c_include">
        <files mask="wl_tool.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool" type="src">
        <files mask="wlu_server.c"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool" type="other">
        <files mask="wl4343WA1.exe" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="middleware_wifi_wiced_wl_tool_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/4343WA1/common/include/devctrl_if" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/4343WA1/common/include/proto" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/4343WA1/include" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/4343WA1/shared/bcmwifi/include" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/4343WA1/wl/exe" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/dummy/arpa" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/dummy/net" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/dummy" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/dummy/sys" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/libraries/test/wl_tool" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/4343WA1/common/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi_wiced.wl_tool.43012.MIMXRT1024" name="wifi_wiced_wl_tool_43012" brief="Cypress WICED wl_tool for 43012C0" version="6.1.0" full_name="Cypress WICED wl_tool for 43012C0" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="false" type="middleware" package_base_path="middleware/wiced" project_base_path="wiced">
      <dependencies>
        <component_dependency value="middleware.wifi_wiced.MIMXRT1024"/>
      </dependencies>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/43012C0/common/include/devctrl_if" type="c_include">
        <files mask="phyioctl_defs.h"/>
        <files mask="wlioctl.h"/>
        <files mask="wlioctl_defs.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/43012C0/common/include/proto" type="c_include">
        <files mask="802.11.h"/>
        <files mask="802.11e.h"/>
        <files mask="802.1d.h"/>
        <files mask="bcmeth.h"/>
        <files mask="bcmevent.h"/>
        <files mask="bcmip.h"/>
        <files mask="bcmipv6.h"/>
        <files mask="ethernet.h"/>
        <files mask="wpa.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/43012C0/include" type="c_include">
        <files mask="bcm_cfg.h"/>
        <files mask="bcm_mpool_pub.h"/>
        <files mask="bcmcdc.h"/>
        <files mask="bcmdefs.h"/>
        <files mask="bcmdevs.h"/>
        <files mask="bcmendian.h"/>
        <files mask="bcmnvram.h"/>
        <files mask="bcmsrom_fmt.h"/>
        <files mask="bcmsrom_tbl.h"/>
        <files mask="bcmstdlib.h"/>
        <files mask="bcmtlv.h"/>
        <files mask="bcmutils.h"/>
        <files mask="dhdioctl.h"/>
        <files mask="epictrl.h"/>
        <files mask="epitimers.h"/>
        <files mask="epivers.h"/>
        <files mask="event_log.h"/>
        <files mask="irelay.h"/>
        <files mask="miniopt.h"/>
        <files mask="packed_section_end.h"/>
        <files mask="packed_section_start.h"/>
        <files mask="rte_ioctl.h"/>
        <files mask="sbpcmcia.h"/>
        <files mask="sdiovar.h"/>
        <files mask="trxhdr.h"/>
        <files mask="typedefs.h"/>
        <files mask="usbrdl.h"/>
        <files mask="wl_drv.h"/>
        <files mask="wlioctl.h"/>
        <files mask="wlioctl_utils.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/43012C0/shared/bcmwifi/include" type="c_include">
        <files mask="bcmwifi_channels.h"/>
        <files mask="bcmwifi_monitor.h"/>
        <files mask="bcmwifi_radiotap.h"/>
        <files mask="bcmwifi_rates.h"/>
        <files mask="bcmwifi_rclass.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/43012C0/wl/exe" type="c_include">
        <files mask="wlu.h"/>
        <files mask="wlu_client_shared.h"/>
        <files mask="wlu_cmd.h"/>
        <files mask="wlu_common.h"/>
        <files mask="wlu_pipe.h"/>
        <files mask="wlu_remote.h"/>
        <files mask="wlu_server_shared.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/43012C0/wl/exe" type="src">
        <files mask="wlu_pipe.c"/>
        <files mask="wlu_server_shared.c"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/dummy/arpa" type="c_include">
        <files mask="inet.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/dummy/net" type="c_include">
        <files mask="if.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/dummy" type="c_include">
        <files mask="netdb.h"/>
        <files mask="ntddndis.h"/>
        <files mask="nuiouser.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/dummy/sys" type="c_include">
        <files mask="socket.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool" type="c_include">
        <files mask="wl_tool.h"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool" type="src">
        <files mask="wlu_server.c"/>
      </source>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool" type="other">
        <files mask="wl43012C0.exe" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/43012C0/common/include/devctrl_if" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/43012C0/common/include/proto" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/43012C0/include" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/43012C0/shared/bcmwifi/include" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/43012C0/wl/exe" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/dummy/arpa" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/dummy/net" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/dummy" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/dummy/sys" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/libraries/test/wl_tool" type="c_include"/>
        <include_path relative_path="43xxx_Wi-Fi/libraries/test/wl_tool/43012C0/common/include" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi_wiced.wl_tool.43455.MIMXRT1024" name="wifi_wiced_wl_tool_43455" brief="Cypress WICED wl_tool for 43455" version="6.1.0" full_name="Cypress WICED wl_tool for 43455" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="false" type="middleware" package_base_path="middleware/wiced" project_base_path="wiced">
      <dependencies>
        <component_dependency value="middleware.wifi_wiced.MIMXRT1024"/>
      </dependencies>
      <source relative_path="43xxx_Wi-Fi/libraries/test/wl_tool" type="other">
        <files mask="wl43455C0.exe" hidden="true"/>
      </source>
    </component>
    <component id="platform.utilities.misc_utilities.MIMXRT1024" name="misc_utilities" brief="Utilities which is needed for particular toolchain like the SBRK function required to address limitation between HEAP and STACK in GCC toolchain library." version="1.0.0" full_name="Utilities miscellaneous" devices="MIMXRT1024xxxxx" user_visible="true" type="utilities" package_base_path="devices/MIMXRT1024/utilities" project_base_path="utilities">
      <source toolchain="armgcc" relative_path="./" type="src">
        <files mask="fsl_sbrk.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="utilities_misc_utilities_MIMXRT1024.cmake" hidden="true"/>
      </source>
    </component>
    <component id="platform.utilities.assert.MIMXRT1024" name="assert" brief="Utility assert" version="1.0.0" full_name="Utility assert" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="utilities" package_base_path="devices/MIMXRT1024/utilities" project_base_path="utilities">
      <dependencies>
        <component_dependency value="utility.debug_console.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_assert.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="utility_assert_MIMXRT1024.cmake" hidden="true"/>
      </source>
    </component>
    <component id="platform.utilities.assert_lite.MIMXRT1024" name="assert_lite" brief="Utility assert_lite" version="1.0.0" full_name="Utility assert_lite" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="utilities" package_base_path="devices/MIMXRT1024/utilities/debug_console_lite" project_base_path="utilities">
      <dependencies>
        <component_dependency value="utility.debug_console_lite.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_assert.c"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="utility_assert_lite_MIMXRT1024.cmake" hidden="true"/>
      </source>
    </component>
    <component id="utility.debug_console.MIMXRT1024" name="debug_console" brief="Utility debug_console" version="1.0.0" full_name="Utility debug_console" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="utilities" package_base_path="devices/MIMXRT1024/utilities" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="component.serial_manager.MIMXRT1024"/>
          <component_dependency value="platform.drivers.common.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="str" project_relative_path="./" type="src">
        <files mask="fsl_str.c"/>
      </source>
      <source relative_path="str" project_relative_path="./" type="c_include">
        <files mask="fsl_str.h"/>
      </source>
      <source relative_path="debug_console" project_relative_path="./" type="src">
        <files mask="fsl_debug_console.c"/>
      </source>
      <source relative_path="debug_console" project_relative_path="./" type="c_include">
        <files mask="fsl_debug_console.h"/>
        <files mask="fsl_debug_console_conf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="utility_debug_console_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="str" project_relative_path="./" type="c_include"/>
        <include_path relative_path="debug_console" project_relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="utility.debug_console_lite.MIMXRT1024" name="debug_console_lite" brief="Utility debug_console_lite" version="1.0.0" full_name="Utility debug_console_lite" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="utilities" package_base_path="devices/MIMXRT1024/utilities/debug_console_lite" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="component.lpuart_adapter.MIMXRT1024"/>
          <component_dependency value="platform.drivers.common.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_debug_console.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_debug_console.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="utility_debug_console_lite_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.utilities.notifier.MIMXRT1024" name="notifier" brief="Utility notifier" version="1.0.0" full_name="Utility notifier" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="utilities" package_base_path="devices/MIMXRT1024/utilities" project_base_path="utilities/utilities">
      <dependencies>
        <component_dependency value="platform.drivers.common.MIMXRT1024"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_notifier.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_notifier.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="utility.shell.MIMXRT1024" name="shell" brief="Utility shell" version="1.0.0" full_name="Utility shell" devices="MIMXRT1024xxxxx" device_cores="core0_MIMXRT1024xxxxx" user_visible="true" type="utilities" package_base_path="devices/MIMXRT1024/utilities" project_base_path="utilities">
      <defines>
        <define name="DEBUG_CONSOLE_RX_ENABLE" value="0"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="utility.debug_console.MIMXRT1024"/>
          <component_dependency value="component.lists.MIMXRT1024"/>
          <component_dependency value="platform.drivers.common.MIMXRT1024"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_shell.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_shell.h"/>
      </source>
      <source toolchain="armgcc" relative_path="." type="workspace">
        <files mask="utility_shell_MIMXRT1024.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
  </components>
</ksdk:manifest>
