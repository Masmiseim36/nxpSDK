<?xml version="1.0" encoding="UTF-8"?>
<ksdk:manifest xmlns:ksdk="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="SDK_2.x_MIMXRT1173xxxxx" name="MIMXRT1173xxxxx" brief="This is SDK version 24.12.00 manifest file. It describes the content of the MIMXRT1173xxxxx and additional settings for tools that support SDK version 24.12.00" format_version="3.15" api_version="2.0.0" configuration="2c3233eb0dcb4fef467428eefd1bc760" xsi:schemaLocation="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd http://nxp.com/mcuxpresso/sdk/sdk_manifest_v3.15.xsd">
  <!--Timestamp (UTC): 2025-01-16 13:20:34.494658-->
  <!--This manifest is generated based on sdk repo commit: TODO-->
  <externalDefinitions>
    <definition extID="isi_qmc_dgc"/>
    <definition extID="evkmimxrt1170"/>
  </externalDefinitions>
  <ksdk id="MCUXpresso241200" name="MCUXpresso241200" version="24.12.00" revision="871 2025-01-14"/>
  <compilers>
    <compiler id="compiler_armclang" name="armclang" type="armclang"/>
    <compiler id="compiler_gcc" name="gcc" type="gcc"/>
    <compiler id="compiler_iar" name="iar" type="iar"/>
  </compilers>
  <core_slave_roles_definitions>
    <slave_role id="M4SLAVE" name="Cortex-M4 acts as slave by default"/>
    <slave_role id="M7SLAVE" name="Cortex-M7 acts as slave by default"/>
  </core_slave_roles_definitions>
  <toolchainSettings>
    <toolchainSetting id="com.nxp.mcuxpresso" name="mcuxpresso" version="24.12.00" full_name="MCUXpresso IDE" compiler="compiler_gcc" toolchain="mcuxpresso">
      <option id="gnu.cpp.compiler.option.optimization.flags" type="string" user_name="">
        <value>-fno-common</value>
      </option>
      <option id="gnu.c.compiler.option.optimization.flags" type="string" user_name="">
        <value>-fno-common</value>
      </option>
      <option id="gnu.cpp.link.option.nostdlibs" type="boolean" user_name="">
        <value>true</value>
      </option>
      <option id="com.crt.advproject.link.cpp.flashconfigenable" type="boolean" user_name="">
        <value>true</value>
      </option>
      <option id="com.crt.advproject.link.flashconfigenable" type="boolean" user_name="">
        <value>true</value>
      </option>
      <option id="gnu.c.link.option.nostdlibs" type="boolean" user_name="">
        <value>true</value>
      </option>
    </toolchainSetting>
  </toolchainSettings>
  <toolchains>
    <toolchain id="armgcc" name="GCC_ARM_Embedded_10-2021.10" version="13.2.1" full_name="GCC ARM Embedded 10-2021.10" compiler="compiler_gcc" type="armgcc" vendor="GCC ARM Embedded" vendor_url="http://launchpad.net/gcc-arm-embedded"/>
    <toolchain id="mdk" name="Keil_MDK" version="5.41" full_name="Keil MDK" compiler="compiler_armclang" type="mdk" vendor="ARM" vendor_url="http://www.arm.com"/>
    <toolchain id="iar" name="IAR_Embedded_Workbench_for_ARM" version="9.60.3" full_name="IAR Embedded Workbench for ARM" compiler="compiler_iar" type="iar" vendor="IAR Systems" vendor_url="http://www.iar.com"/>
    <toolchain id="mcuxpresso" name="MCUXpresso_IDE" version="24.12.00" full_name="MCUXpresso IDE" compiler="compiler_gcc" type="mcuxpresso" vendor="NXP Semiconductors" vendor_url="http://www.nxp.com">
      <debug>
        <debug_configuration id="com.crt.advproject.config.exe.release" name="Release Configuration" probe="LinkServer">
          <scripts>
            <script type="init" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>
set remotetimeout 60000
##target_extended_remote##
set mem inaccessible-by-default ${mem.access}
mon ondisconnect ${ondisconnect}
set arm force-mode thumb
${load}</script>
            </script>
            <script type="run" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>${run}</script>
            </script>
          </scripts>
          <params>
            <params id="vector.catch.release.mcuxpresso" name="vector.catch" value="false"/>
            <params id="internal.cache.release.mcuxpresso" name="internal.cache" value="Disable"/>
          </params>
        </debug_configuration>
        <debug_configuration id="com.crt.advproject.config.exe.debug" name="Debug Configuration" probe="LinkServer">
          <scripts>
            <script type="init" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>
set remotetimeout 60000
##target_extended_remote##
set mem inaccessible-by-default ${mem.access}
mon ondisconnect ${ondisconnect}
set arm force-mode thumb
${load}</script>
            </script>
            <script type="run" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>${run}</script>
            </script>
          </scripts>
          <params>
            <params id="vector.catch.debug.mcuxpresso" name="vector.catch" value="false"/>
            <params id="internal.cache.debug.mcuxpresso" name="internal.cache" value="Disable"/>
          </params>
        </debug_configuration>
        <debug_configuration id="com.nxp.mcuxpresso.core.debug.support.segger.debug" name="Debug Configuration" probe="Segger"/>
        <debug_configuration id="com.nxp.mcuxpresso.core.debug.support.segger.release" name="Release Configuration" probe="Segger"/>
      </debug>
    </toolchain>
  </toolchains>
  <boards>
    <board id="evkbmimxrt1170" name="MIMXRT1170-EVKB" version="1.0.0" package="MIMXRT1176DVMAA">
      <description>i.MX RT1170 Evaluation Kit</description>
      <image path="boards/evkbmimxrt1170" type="image">
        <files mask="evkbmimxrt1170.png"/>
      </image>
      <memory>
        <memoryBlock id="BOARD_FLASH_evkbmimxrt1170" name="BOARD_FLASH" addr="30000000" size="04000000" type="ExtFlash" access="RO"/>
        <memoryBlock id="BOARD_SDRAM_evkbmimxrt1170" name="BOARD_SDRAM" addr="80000000" size="03000000" type="RAM" access="RW"/>
        <memoryBlock id="NCACHE_REGION_evkbmimxrt1170" name="NCACHE_REGION" addr="83000000" size="01000000" type="RAM" access="RW"/>
      </memory>
      <total_memory flash_size_kb="65536" ram_size_kb="65536"/>
      <examples>
        <example id="evkbmimxrt1170_littlefs_shell_cm4" name="littlefs_shell_cm4" brief="Demonstrates littlefs functionality by commands executed from shell." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="littlefs_examples" path="boards/evkbmimxrt1170/littlefs_examples/littlefs_shell/cm4">
          <external path="boards/evkbmimxrt1170/littlefs_examples/littlefs_shell/cm4" type="xml">
            <files mask="littlefs_shell_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_a2dp_source_cm4" name="a2dp_source_cm4" brief="The Edgefast Bluetooth audio source with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/a2dp_source/cm4">
          <external path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/a2dp_source/cm4" type="xml">
            <files mask="a2dp_source_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lwip_ping_enet_qos_freertos_cm4" name="lwip_ping_enet_qos_freertos_cm4" brief="The lwip_ping demo application demonstrates a Ping Demo on the lwIP TCP/IP stack which using the ICMP protocol. Theapplication periodically sends the ICMP echo request to a PC and processes the PC reply. Type the &quot;ping $board_address&quot;in the PC command window to send an ICMP echo request to the board. The lwIP stack sends the ICMP echo reply back to thePC." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkbmimxrt1170/lwip_examples/lwip_ping_enet_qos/freertos/cm4">
          <external path="boards/evkbmimxrt1170/lwip_examples/lwip_ping_enet_qos/freertos/cm4" type="xml">
            <files mask="lwip_ping_enet_qos_freertos_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lwip_ping_enet_qos_bm_cm4" name="lwip_ping_enet_qos_bm_cm4" brief="The lwip_ping_enet_qos demo application demonstrates a Ping Demo on the lwIP TCP/IP stack, which uses the ICMP protocol. Theapplication periodically sends the ICMP echo request to a PC, and processes the PC reply. Type &quot;ping $board_address&quot;in the PC command window to send an ICMP echo request to the board. The lwIP stack sends the ICMP echo reply back to thePC." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkbmimxrt1170/lwip_examples/lwip_ping_enet_qos/bm/cm4">
          <external path="boards/evkbmimxrt1170/lwip_examples/lwip_ping_enet_qos/bm/cm4" type="xml">
            <files mask="lwip_ping_enet_qos_bm_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lwip_ping_freertos_cm4" name="lwip_ping_freertos_cm4" brief="The lwip_ping demo application demonstrates a Ping Demo on the lwIP TCP/IP stack which using the ICMP protocol. Theapplication periodically sends the ICMP echo request to a PC and processes the PC reply. Type the &quot;ping $board_address&quot;in the PC command window to send an ICMP echo request to the board. The lwIP stack sends the ICMP echo reply back to thePC." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkbmimxrt1170/lwip_examples/lwip_ping/freertos/cm4">
          <external path="boards/evkbmimxrt1170/lwip_examples/lwip_ping/freertos/cm4" type="xml">
            <files mask="lwip_ping_freertos_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lwip_ping_bm_cm4" name="lwip_ping_bm_cm4" brief="The lwip_ping demo application demonstrates a Ping Demo on the lwIP TCP/IP stack, which uses the ICMP protocol. Theapplication periodically sends the ICMP echo request to a PC, and processes the PC reply. Type &quot;ping $board_address&quot;in the PC command window to send an ICMP echo request to the board. The lwIP stack sends the ICMP echo reply back to thePC." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkbmimxrt1170/lwip_examples/lwip_ping/bm/cm4">
          <external path="boards/evkbmimxrt1170/lwip_examples/lwip_ping/bm/cm4" type="xml">
            <files mask="lwip_ping_bm_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lwip_mqtt_enet_qos_freertos_cm4" name="lwip_mqtt_enet_qos_freertos_cm4" brief="The lwip_mqtt demo application demonstrates MQTT client connecting to MQTT broker via unsecured socket. The application obtains IP and DNS addresses from DHCP and resolves broker's hostname if needed. Then it connects to the broker and subscribes to the &quot;lwip_topic/#&quot; and &quot;lwip_other/#&quot; topics. Further it publishes five messages to the &quot;lwip_topic/100&quot; which are also received back as the board is subscribed to the &quot;lwip_topic/#&quot;. Meanwhile it continues to receive messages published to the subscribed topics from other clients." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkbmimxrt1170/lwip_examples/lwip_mqtt_enet_qos/freertos/cm4">
          <external path="boards/evkbmimxrt1170/lwip_examples/lwip_mqtt_enet_qos/freertos/cm4" type="xml">
            <files mask="lwip_mqtt_enet_qos_freertos_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lwip_mqtt_freertos_cm4" name="lwip_mqtt_freertos_cm4" brief="The lwip_mqtt demo application demonstrates MQTT client connecting to MQTT broker via unsecured socket. The application obtains IP and DNS addresses from DHCP and resolves broker's hostname if needed. Then it connects to the broker and subscribes to the &quot;lwip_topic/#&quot; and &quot;lwip_other/#&quot; topics. Further it publishes five messages to the &quot;lwip_topic/100&quot; which are also received back as the board is subscribed to the &quot;lwip_topic/#&quot;. Meanwhile it continues to receive messages published to the subscribed topics from other clients." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkbmimxrt1170/lwip_examples/lwip_mqtt/freertos/cm4">
          <external path="boards/evkbmimxrt1170/lwip_examples/lwip_mqtt/freertos/cm4" type="xml">
            <files mask="lwip_mqtt_freertos_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lwip_ipv4_ipv6_echo_enet_qos_freertos_cm4" name="lwip_ipv4_ipv6_echo_enet_qos_freertos_cm4" brief="The lwip_ipv4_ipv6_echo demo application demonstrates a TCP or UDP echo demo on the lwIP TCP/IP stack with FreeRTOS. The demo uses the TCP or UDP protocol over both IPv4 and IPv6 and acts as an echo server. The application sends back the received TCP or UDP packets from the PC, which can be used to test whether a TCP or UDP is available." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkbmimxrt1170/lwip_examples/lwip_ipv4_ipv6_echo_enet_qos/freertos/cm4">
          <external path="boards/evkbmimxrt1170/lwip_examples/lwip_ipv4_ipv6_echo_enet_qos/freertos/cm4" type="xml">
            <files mask="lwip_ipv4_ipv6_echo_enet_qos_freertos_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lwip_ipv4_ipv6_echo_freertos_cm4" name="lwip_ipv4_ipv6_echo_freertos_cm4" brief="The lwip_ipv4_ipv6_echo demo application demonstrates a TCP or UDP echo demo on the lwIP TCP/IP stack with FreeRTOS. The demo uses the TCP or UDP protocol over both IPv4 and IPv6 and acts as an echo server. The application sends back the received TCP or UDP packets from the PC, which can be used to test whether a TCP or UDP is available." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkbmimxrt1170/lwip_examples/lwip_ipv4_ipv6_echo/freertos/cm4">
          <external path="boards/evkbmimxrt1170/lwip_examples/lwip_ipv4_ipv6_echo/freertos/cm4" type="xml">
            <files mask="lwip_ipv4_ipv6_echo_freertos_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lwip_iperf_enet_qos_bm_cm4" name="lwip_iperf_enet_qos_bm_cm4" brief="This is the IPerf server example to check your bandwidth using the network performance measurement IPerf application on a PC as a client.It is currently a minimal implementation providing an IPv4 TCP server only.Instead of the command line IPerf application, for more convenience, it is recommended to use the JPerf2 graphical tool, which can be downloaded here: https:/sourceforge.net/projects/iperf/files/jperf/jperf%202.0.0/jperf-2.0.0.zip/download" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkbmimxrt1170/lwip_examples/lwip_iperf_enet_qos/bm/cm4">
          <external path="boards/evkbmimxrt1170/lwip_examples/lwip_iperf_enet_qos/bm/cm4" type="xml">
            <files mask="lwip_iperf_enet_qos_bm_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lwip_iperf_bm_cm4" name="lwip_iperf_bm_cm4" brief="This is the IPerf server example to check your bandwidth using the network performance measurement IPerf application on a PC as a client.It is currently a minimal implementation providing an IPv4 TCP server only.Instead of the command line IPerf application, for more convenience, it is recommended to use the JPerf2 graphical tool, which can be downloaded here: https:/sourceforge.net/projects/iperf/files/jperf/jperf%202.0.0/jperf-2.0.0.zip/download" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkbmimxrt1170/lwip_examples/lwip_iperf/bm/cm4">
          <external path="boards/evkbmimxrt1170/lwip_examples/lwip_iperf/bm/cm4" type="xml">
            <files mask="lwip_iperf_bm_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lwip_httpssrv_mbedTLS_enet_qos_freertos_cm4" name="lwip_httpssrv_mbedTLS_enet_qos_freertos_cm4" brief="The lwip_httpsrv_mbedTLS demo application demonstrates an HTTPServer set up on lwIP TCP/IP and the MbedTLS stack withFreeRTOS. The user uses an Internet browser to send an https request for connection. The board acts as an HTTP serverand sends a Web page back to the PC." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkbmimxrt1170/lwip_examples/lwip_httpssrv_mbedTLS_enet_qos/freertos/cm4">
          <external path="boards/evkbmimxrt1170/lwip_examples/lwip_httpssrv_mbedTLS_enet_qos/freertos/cm4" type="xml">
            <files mask="lwip_httpssrv_mbedTLS_enet_qos_freertos_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lwip_httpssrv_mbedTLS_enet_qos_bm_cm4" name="lwip_httpssrv_mbedTLS_enet_qos_bm_cm4" brief="The lwip_httpsrv_mbedTSL_bm demo application demonstrates an HTTPS Serverset up on lwIP TCP/IP and the mbedTLS stack with bare metal. The useruses an Internet browser to send an https request for connection.The board acts as an HTTPS server and sends a Web page back to the PC." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkbmimxrt1170/lwip_examples/lwip_httpssrv_mbedTLS_enet_qos/bm/cm4">
          <external path="boards/evkbmimxrt1170/lwip_examples/lwip_httpssrv_mbedTLS_enet_qos/bm/cm4" type="xml">
            <files mask="lwip_httpssrv_mbedTLS_enet_qos_bm_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lwip_httpssrv_mbedTLS_freertos_cm4" name="lwip_httpssrv_mbedTLS_freertos_cm4" brief="The lwip_httpsrv_mbedTLS demo application demonstrates an HTTPServer set up on lwIP TCP/IP and the MbedTLS stack withFreeRTOS. The user uses an Internet browser to send an https request for connection. The board acts as an HTTP serverand sends a Web page back to the PC." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkbmimxrt1170/lwip_examples/lwip_httpssrv_mbedTLS/freertos/cm4">
          <external path="boards/evkbmimxrt1170/lwip_examples/lwip_httpssrv_mbedTLS/freertos/cm4" type="xml">
            <files mask="lwip_httpssrv_mbedTLS_freertos_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lwip_httpssrv_mbedTLS_bm_cm4" name="lwip_httpssrv_mbedTLS_bm_cm4" brief="The lwip_httpsrv_mbedTSL_bm demo application demonstrates an HTTPS Serverset up on lwIP TCP/IP and the mbedTLS stack with bare metal. The useruses an Internet browser to send an https request for connection.The board acts as an HTTPS server and sends a Web page back to the PC." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkbmimxrt1170/lwip_examples/lwip_httpssrv_mbedTLS/bm/cm4">
          <external path="boards/evkbmimxrt1170/lwip_examples/lwip_httpssrv_mbedTLS/bm/cm4" type="xml">
            <files mask="lwip_httpssrv_mbedTLS_bm_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lwip_httpsrv_enet_qos_freertos_cm4" name="lwip_httpsrv_enet_qos_freertos_cm4" brief="The lwip_httpsrv demo application demonstrates an HTTPServer on the lwIP TCP/IP stack with bare metal SDK or FreeRTOS.The user uses an Internet browser to send a request for connection. The board acts as an HTTP server and sends a Webpage back to the PC." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkbmimxrt1170/lwip_examples/lwip_httpsrv_enet_qos/freertos/cm4">
          <external path="boards/evkbmimxrt1170/lwip_examples/lwip_httpsrv_enet_qos/freertos/cm4" type="xml">
            <files mask="lwip_httpsrv_enet_qos_freertos_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lwip_httpsrv_enet_qos_bm_cm4" name="lwip_httpsrv_enet_qos_bm_cm4" brief="The lwip_httpsrv demo application demonstrates an HTTPServer on the lwIP TCP/IP stack with bare metal SDK or FreeRTOS.The user uses an Internet browser to send a request for connection. The board acts as an HTTP server and sends a Webpage back to the PC." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkbmimxrt1170/lwip_examples/lwip_httpsrv_enet_qos/bm/cm4">
          <external path="boards/evkbmimxrt1170/lwip_examples/lwip_httpsrv_enet_qos/bm/cm4" type="xml">
            <files mask="lwip_httpsrv_enet_qos_bm_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lwip_httpsrv_freertos_cm4" name="lwip_httpsrv_freertos_cm4" brief="The lwip_httpsrv demo application demonstrates an HTTPServer on the lwIP TCP/IP stack with bare metal SDK or FreeRTOS.The user uses an Internet browser to send a request for connection. The board acts as an HTTP server and sends a Webpage back to the PC." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkbmimxrt1170/lwip_examples/lwip_httpsrv/freertos/cm4">
          <external path="boards/evkbmimxrt1170/lwip_examples/lwip_httpsrv/freertos/cm4" type="xml">
            <files mask="lwip_httpsrv_freertos_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lwip_httpsrv_bm_cm4" name="lwip_httpsrv_bm_cm4" brief="The lwip_httpsrv demo application demonstrates an HTTPServer on the lwIP TCP/IP stack with bare metal SDK or FreeRTOS.The user uses an Internet browser to send a request for connection. The board acts as an HTTP server and sends a Webpage back to the PC." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkbmimxrt1170/lwip_examples/lwip_httpsrv/bm/cm4">
          <external path="boards/evkbmimxrt1170/lwip_examples/lwip_httpsrv/bm/cm4" type="xml">
            <files mask="lwip_httpsrv_bm_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lwip_dhcp_enet_qos_freertos_cm4" name="lwip_dhcp_enet_qos_freertos_cm4" brief="The lwip_dhcp demo application demonstrates a DHCP demo on the lwIP TCP/IP stack.The application acts as a DHCP client and prints the status as it is progressing.Once the interface is being bound to an IP address obtained from DHCP server, address information is printed." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkbmimxrt1170/lwip_examples/lwip_dhcp_enet_qos/freertos/cm4">
          <external path="boards/evkbmimxrt1170/lwip_examples/lwip_dhcp_enet_qos/freertos/cm4" type="xml">
            <files mask="lwip_dhcp_enet_qos_freertos_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lwip_dhcp_enet_qos_bm_cm4" name="lwip_dhcp_enet_qos_bm_cm4" brief="The lwip_dhcp demo application demonstrates a DHCP demo on the lwIP TCP/IP stack.The application acts as a DHCP client and prints the status as it is progressing.Once the interface is being bound to an IP address obtained from DHCP server, address information is printed." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkbmimxrt1170/lwip_examples/lwip_dhcp_enet_qos/bm/cm4">
          <external path="boards/evkbmimxrt1170/lwip_examples/lwip_dhcp_enet_qos/bm/cm4" type="xml">
            <files mask="lwip_dhcp_enet_qos_bm_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lwip_dhcp_freertos_cm4" name="lwip_dhcp_freertos_cm4" brief="The lwip_dhcp demo application demonstrates a DHCP demo on the lwIP TCP/IP stack.The application acts as a DHCP client and prints the status as it is progressing.Once the interface is being bound to an IP address obtained from DHCP server, address information is printed." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkbmimxrt1170/lwip_examples/lwip_dhcp/freertos/cm4">
          <external path="boards/evkbmimxrt1170/lwip_examples/lwip_dhcp/freertos/cm4" type="xml">
            <files mask="lwip_dhcp_freertos_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lwip_dhcp_bm_cm4" name="lwip_dhcp_bm_cm4" brief="The lwip_dhcp demo application demonstrates a DHCP demo on the lwIP TCP/IP stack.The application acts as a DHCP client and prints the status as it is progressing.Once the interface is being bound to an IP address obtained from DHCP server, address information is printed." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkbmimxrt1170/lwip_examples/lwip_dhcp/bm/cm4">
          <external path="boards/evkbmimxrt1170/lwip_examples/lwip_dhcp/bm/cm4" type="xml">
            <files mask="lwip_dhcp_bm_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_sdcard_polling_cm4" name="sdcard_polling_cm4" brief="The SDCARD Polling project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver andshow how to use polling based transfer API in SDHC driver in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/sdcard_polling" path="boards/evkbmimxrt1170/sdmmc_examples/sdcard_polling/cm4">
          <external path="boards/evkbmimxrt1170/sdmmc_examples/sdcard_polling/cm4" type="xml">
            <files mask="sdcard_polling_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_sdcard_interrupt_cm4" name="sdcard_interrupt_cm4" brief="The SDCARD Interrupt project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver andshow how to use interrupt based transfer API in SDHC driver in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/sdcard_interrupt" path="boards/evkbmimxrt1170/sdmmc_examples/sdcard_interrupt/cm4">
          <external path="boards/evkbmimxrt1170/sdmmc_examples/sdcard_interrupt/cm4" type="xml">
            <files mask="sdcard_interrupt_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_sdcard_freertos_cm4" name="sdcard_freertos_cm4" brief="The SDCARD FreeRTOS project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver with FreeRTOS in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/sdcard_freertos" path="boards/evkbmimxrt1170/sdmmc_examples/sdcard_freertos/cm4">
          <external path="boards/evkbmimxrt1170/sdmmc_examples/sdcard_freertos/cm4" type="xml">
            <files mask="sdcard_freertos_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_sdcard_fatfs_freertos_cm4" name="sdcard_fatfs_freertos_cm4" brief="The SDCARD FATFS FREERTOS project is a demonstration program that uses the SDK software. The purpose of this example is to show how to use SDCARD with fatfs and freertos." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/sdcard_fatfs_freertos" path="boards/evkbmimxrt1170/sdmmc_examples/sdcard_fatfs_freertos/cm4">
          <external path="boards/evkbmimxrt1170/sdmmc_examples/sdcard_fatfs_freertos/cm4" type="xml">
            <files mask="sdcard_fatfs_freertos_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_sdcard_fatfs_cm4" name="sdcard_fatfs_cm4" brief="The SDCARD FATFS project is a demonstration program that uses the SDK software. Tt mounts a file system based on a SD card then does &quot;creat directory/read directory/create file/write file/read file&quot;operation. The file sdhc_config.h has default SDHC configuration which can be adjusted to let carddriver has different performance. The purpose of this example is to show how to use SDCARD driver based FATFS disk in SDK software." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/sdcard_fatfs" path="boards/evkbmimxrt1170/sdmmc_examples/sdcard_fatfs/cm4">
          <external path="boards/evkbmimxrt1170/sdmmc_examples/sdcard_fatfs/cm4" type="xml">
            <files mask="sdcard_fatfs_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_rpmsg_lite_pingpong_rtos_secondary_core" name="rpmsg_lite_pingpong_rtos_secondary_core" brief="The Multicore RPMsg-Lite pingpong RTOS project is a simple demonstration program that uses theMCUXpresso SDK software and the RPMsg-Lite library and shows how to implement the inter-core communication between cores of the multicore system. The primary core releases the secondary core from the reset and then the inter-core communication is established. Once the RPMsg is initialized and endpoints are created the message exchange starts, incrementing a virtual counter that is part of the message payload. The message pingpong finishes when the counter reaches the value of 100. Then the RPMsg-Lite is deinitialized and the procedure of the data exchange is repeated again.&#10;Shared memory usage&#10;This multicore example uses the shared memory for data exchange. The shared memory region is defined and the size can be adjustable in the linker file. The shared memory region start address and the size have to be defined in linker file for each core equally. The shared memory start address is then exported from the linker to the application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" path="boards/evkbmimxrt1170/multicore_examples/rpmsg_lite_pingpong_rtos/cm4">
          <external path="boards/evkbmimxrt1170/multicore_examples/rpmsg_lite_pingpong_rtos/cm4" type="xml">
            <files mask="rpmsg_lite_pingpong_rtos_secondary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_rpmsg_lite_pingpong_secondary_core" name="rpmsg_lite_pingpong_secondary_core" brief="The Multicore RPMsg-Lite pingpong project is a simple demonstration program that uses theMCUXpresso SDK software and the RPMsg-Lite library and shows how to implement the inter-core communication between cores of the multicore system. The primary core releases the secondary core from the reset and then the inter-core communication is established. Once the RPMsg is initialized and endpoints are created the message exchange starts, incrementing a virtual counter that is part of the message payload. The message pingpong finishes when the counter reaches the value of 100.&#10;Then the RPMsg-Lite is deinitialized and the procedure of the data exchange is repeated again.&#10;Shared memory usage.&#10;This multicore example uses the shared memory for data exchange. The shared memory region is defined and the size can be adjustable in the linker file. The shared memory region start address and the size have to be defined in linker file for each core equally. The shared memory start address is then exported from the linker to the application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" path="boards/evkbmimxrt1170/multicore_examples/rpmsg_lite_pingpong/cm4">
          <external path="boards/evkbmimxrt1170/multicore_examples/rpmsg_lite_pingpong/cm4" type="xml">
            <files mask="rpmsg_lite_pingpong_secondary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_hello_world_secondary_core" name="hello_world_secondary_core" brief="The Multicore Hello World demo application demonstrates how to set up projects for individual cores on a multicore system. In this demo, the primary core prints the &quot;Hello World from the Primary Core!&quot;string to the terminal and then releases the secondary core from the reset. The secondary core toggles an on-board LED indicating that the secondary core is running." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" path="boards/evkbmimxrt1170/multicore_examples/hello_world/cm4">
          <external path="boards/evkbmimxrt1170/multicore_examples/hello_world/cm4" type="xml">
            <files mask="hello_world_secondary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_freertos_message_buffers_secondary_core" name="freertos_message_buffers_secondary_core" brief="The FreeRTOS Message Buffers multicore project is a simple demonstration program that uses the MCUXpresso SDK software and the Message Buffers component of FreeRTOS. It shows how to implement lightweight core to core communication using FreeRTOS Message Buffers, which are lockless circular buffers that can pass data packets of varying sizes from a single sender to a single receiver.&#10;The primary core releases the secondary core from the reset and then the inter-core communication is established.&#10;Once the Message Buffers are initialized on both cores the message exchange starts, incrementing a virtual counter, that is part of the message payload.&#10;The message pingpong finishes when the counter reaches the value of 100. The Message Buffer is deinitialized at the end.&#10;NXP Multicore Manager (MCMGR) component is used for several purposes in this example: - it releases the secondary core from the reset (starts the secondary code) - it registers and use the application event for init handshaking (the secondary core application signals to the primary core it is ready to communicate) - it registers and use the FreeRtosMessageBuffersEvent for inter-core interrupts triggering and interrupts handling.&#10;Shared memory usage:&#10;This multicore example uses the shared memory for data exchange. The shared memory region is defined and the size can be adjustable in the linker file. The shared memory region start address and the size have to be defined in linker file for each core equally. The shared memory start address is then exported from the linker to the application to allow placing FreeRTOS Message Buffers at a fixed location that is then known for both cores." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" path="boards/evkbmimxrt1170/multicore_examples/freertos_message_buffers/cm4">
          <external path="boards/evkbmimxrt1170/multicore_examples/freertos_message_buffers/cm4" type="xml">
            <files mask="freertos_message_buffers_secondary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_erpc_two_way_rpc_rpmsg_rtos_secondary_core" name="erpc_two_way_rpc_rpmsg_rtos_secondary_core" brief="The Multicore eRPC Two Way RPC RTOS project is a simple demonstration program that uses the MCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Call between cores of the multicore system. This multicore example shows how both the eRPC client and the eRPC server can be setup on one side/core (bidirectional communication) and how to handle callback functions in eRPC. The primary core (Core0) creates client and server tasks first. The client task releases the secondary core from the reset, initializes the RPMsg-Lite erpc transport and once the server task is running it configures the arbitrated client. Then the application logic is running. The secondary core (Core1) creates client and server tasks two. The client task initializes the RPMsg-Lite erpc transport and once the server task is running it configures the arbitrated client. Then the application logic is running. The client task logic of the Core1 is very simple, it repeatedly calls the increaseNumber() erpc function that is implemented on the Core0 and that increments the counter. The client task logic of the Core0 alternately issues either getNumberFromCore0() function implementation on the Core0 or getNumberFromCore1() function implementation on the Core1 (erpc call). Then, the nestedCallGetNumber() erpc function call is issued that alternately triggers either getNumberFromCore1() function implementation on the Core1 (normal erpc call) or it triggers the getNumberFromCore0() function implementation on the Core0 (nested erpc call, routed through the Core1 erpc server).&#10;Shared memory usage.&#10;This multicore example uses the shared memory for data exchange. The shared memory region is defined and the size can be adjustable in the linker file. The shared memory region start address and the size have to be defined in linker file for each core equally. The shared memory start address is then exported from the linker to the application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" path="boards/evkbmimxrt1170/multicore_examples/erpc_two_way_rpc_rpmsg_rtos/cm4">
          <external path="boards/evkbmimxrt1170/multicore_examples/erpc_two_way_rpc_rpmsg_rtos/cm4" type="xml">
            <files mask="erpc_two_way_rpc_rpmsg_rtos_secondary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_erpc_matrix_multiply_rpmsg_rtos_secondary_core" name="erpc_matrix_multiply_rpmsg_rtos_secondary_core" brief="The Multicore eRPC Matrix Multiply RTOS project is a simple demonstration program that uses the MCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Call between cores of the multicore system. The primary core (eRPC client) releases the secondary core (eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let the secondary core to perform the multiplication of two randomly generated matrices. The original matrices and the result matrix is printed out to the serial console by the primary core. The matrix multiplication can be issued repeatedly when pressing a SW board button. RPMsg-Lite erpc transport layer is used in this example application.&#10;Shared memory usage.&#10;This multicore example uses the shared memory for data exchange. The shared memory region is defined and the size can be adjustable in the linker file. The shared memory region start address and the size have to be defined in linker file for each core equally. The shared memory start address is then exported from the linker to the application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" path="boards/evkbmimxrt1170/multicore_examples/erpc_matrix_multiply_rpmsg_rtos/cm4">
          <external path="boards/evkbmimxrt1170/multicore_examples/erpc_matrix_multiply_rpmsg_rtos/cm4" type="xml">
            <files mask="erpc_matrix_multiply_rpmsg_rtos_secondary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_erpc_matrix_multiply_rpmsg_secondary_core" name="erpc_matrix_multiply_rpmsg_secondary_core" brief="The Multicore eRPC Matrix Multiply project is a simple demonstration program that uses the MCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Call between cores of the multicore system. The primary core (eRPC client) releases the secondary core (eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let the secondary core to perform the multiplication of two randomly generated matrices. The original matrices and the result matrix is printed out to the serial console by the primary core. The matrix multiplication can be issued repeatedly when pressing a SW board button. RPMsg-Lite erpc transport layer is used in this example application.&#10;Shared memory usage.&#10;This multicore example uses the shared memory for data exchange. The shared memory region is defined and the size can be adjustable in the linker file. The shared memory region start address and the size have to be defined in linker file for each core equally. The shared memory start address is then exported from the linker to the application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" path="boards/evkbmimxrt1170/multicore_examples/erpc_matrix_multiply_rpmsg/cm4">
          <external path="boards/evkbmimxrt1170/multicore_examples/erpc_matrix_multiply_rpmsg/cm4" type="xml">
            <files mask="erpc_matrix_multiply_rpmsg_secondary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_erpc_matrix_multiply_mu_rtos_secondary_core" name="erpc_matrix_multiply_mu_rtos_secondary_core" brief="The Multicore eRPC Matrix Multiply RTOS project is a simple demonstration program that uses the MCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Call between cores of the multicore system. The primary core (eRPC client) releases the secondary core (eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let the secondary core to perform the multiplication of two randomly generated matrices. The original matrices and the result matrix is printed out to the serial console by the primary core. The matrix multiplication can be issued repeatedly when pressing a SW board button. MU (Messaging Unit) erpc transport layer is used in this example application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" path="boards/evkbmimxrt1170/multicore_examples/erpc_matrix_multiply_mu_rtos/cm4">
          <external path="boards/evkbmimxrt1170/multicore_examples/erpc_matrix_multiply_mu_rtos/cm4" type="xml">
            <files mask="erpc_matrix_multiply_mu_rtos_secondary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_erpc_matrix_multiply_mu_secondary_core" name="erpc_matrix_multiply_mu_secondary_core" brief="The Multicore eRPC Matrix Multiply project is a simple demonstration program that uses the MCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Call between cores of the multicore system. The primary core (eRPC client) releases the secondary core (eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let the secondary core to perform the multiplication of two randomly generated matrices. The original matrices and the result matrix is printed out to the serial console by the primary core. The matrix multiplication can be issued repeatedly when pressing a SW board button. MU (Messaging Unit) erpc transport layer is used in this example application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" path="boards/evkbmimxrt1170/multicore_examples/erpc_matrix_multiply_mu/cm4">
          <external path="boards/evkbmimxrt1170/multicore_examples/erpc_matrix_multiply_mu/cm4" type="xml">
            <files mask="erpc_matrix_multiply_mu_secondary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_mmcau_cm4" name="mmcau_cm4" brief="Memory-Mapped Cryptographic Acceleration Unit (MMCAU)This project is a demonstration program that uses the KSDK software for encryption/decryption sampledata using AES-CBC, DES3-CBC and Hash algorithms MD5, SHA1 and SHA256." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="mmcau_examples" path="boards/evkbmimxrt1170/mmcau_examples/mmcau_api/cm4">
          <external path="boards/evkbmimxrt1170/mmcau_examples/mmcau_api/cm4" type="xml">
            <files mask="mmcau_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_mbedtls_selftest_cm4" name="mbedtls_selftest_cm4" brief="The mbedTLS SelfTest program performs cryptographic algorithm testing and prints results to the terminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="mbedtls_examples" path="boards/evkbmimxrt1170/mbedtls_examples/mbedtls_selftest/cm4">
          <external path="boards/evkbmimxrt1170/mbedtls_examples/mbedtls_selftest/cm4" type="xml">
            <files mask="mbedtls_selftest_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_mbedtls_benchmark_cm4" name="mbedtls_benchmark_cm4" brief="The mbedTLS Benchmark demo application performs cryptographic algorithm benchmarking and prints results to the terminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="mbedtls_examples" path="boards/evkbmimxrt1170/mbedtls_examples/mbedtls_benchmark/cm4">
          <external path="boards/evkbmimxrt1170/mbedtls_examples/mbedtls_benchmark/cm4" type="xml">
            <files mask="mbedtls_benchmark_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_freertos_tickless_cm4" name="freertos_tickless_cm4" brief="This document explains the freertos_tickless example. It shows the CPU enter at sleep mode and then it is waked up by expired time delay that using timer module." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="freertos_examples" path="boards/evkbmimxrt1170/freertos_examples/freertos_tickless/cm4">
          <external path="boards/evkbmimxrt1170/freertos_examples/freertos_tickless/cm4" type="xml">
            <files mask="freertos_tickless_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_freertos_swtimer_cm4" name="freertos_swtimer_cm4" brief="This document explains the freertos_swtimer example. It shows usage of software timer and itscallback.The example application creates one software timer SwTimer. The timer's callback SwTimerCallback isperiodically executed and text &quot;Tick.&quot; is printed to terminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="freertos_examples" path="boards/evkbmimxrt1170/freertos_examples/freertos_swtimer/cm4">
          <external path="boards/evkbmimxrt1170/freertos_examples/freertos_swtimer/cm4" type="xml">
            <files mask="freertos_swtimer_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_freertos_sem_static_cm4" name="freertos_sem_static_cm4" brief="This document explains the freertos_sem example, what to expect when running it and a briefintroduction to the API. The freertos_sem example code shows how semaphores works. Two differenttasks are synchronized in bilateral rendezvous model.The example uses four tasks. One producer_task and three consumer_tasks. The producer_task starts bycreating of two semaphores (xSemaphore_producer and xSemaphore_consumer). These semaphores controlaccess to virtual item. The synchronization is based on bilateral rendezvous pattern. Both ofconsumer and producer must be prepared to enable transaction." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="freertos_examples" path="boards/evkbmimxrt1170/freertos_examples/freertos_sem_static/cm4">
          <external path="boards/evkbmimxrt1170/freertos_examples/freertos_sem_static/cm4" type="xml">
            <files mask="freertos_sem_static_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_freertos_sem_cm4" name="freertos_sem_cm4" brief="This document explains the freertos_sem example, what to expect when running it and a briefintroduction to the API. The freertos_sem example code shows how semaphores works. Two different tasks are synchronized in bilateral rendezvous model.The example uses four tasks. One producer_task and three consumer_tasks. The producer_task starts bycreating of two semaphores (xSemaphore_producer and xSemaphore_consumer). These semaphores controlaccess to virtual item. The synchronization is based on bilateral rendezvous pattern. Both ofconsumer and producer must be prepared to enable transaction." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="freertos_examples" path="boards/evkbmimxrt1170/freertos_examples/freertos_sem/cm4">
          <external path="boards/evkbmimxrt1170/freertos_examples/freertos_sem/cm4" type="xml">
            <files mask="freertos_sem_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_freertos_queue_cm4" name="freertos_queue_cm4" brief="This document explains the freertos_queue example. This example introduce simple logging mechanismbased on message passing.Example could be devided in two parts. First part is logger. It contain three tasks:log_add().....Add new message into the log. Call xQueueSend function to pass new message into message queue.log_init()....Initialize logger (create logging task and message queue log_queue).log_task()....Task responsible for printing of log output.Second part is application of this simple logging mechanism. Each of two tasks write_task_1 andwrite_task_2 print 5 messages into log." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="freertos_examples" path="boards/evkbmimxrt1170/freertos_examples/freertos_queue/cm4">
          <external path="boards/evkbmimxrt1170/freertos_examples/freertos_queue/cm4" type="xml">
            <files mask="freertos_queue_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_freertos_mutex_cm4" name="freertos_mutex_cm4" brief="This document explains the freertos_mutex example. It shows how mutex manage access to commonresource (terminal output).The example application creates two identical instances of write_task. Each task will lock the mutexbefore printing and unlock it after printing to ensure that the outputs from tasks are not mixedtogether.The test_task accept output message during creation as function parameter. Output message have twoparts. If xMutex is unlocked, the write_task_1 acquire xMutex and print first part of message. Thenrescheduling is performed. In this moment scheduler check if some other task could run, but secondtask write_task+_2 is blocked because xMutex is already locked by first write task. The firstwrite_task_1 continue from last point by printing of second message part. Finaly the xMutex isunlocked and second instance of write_task_2 is executed." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="freertos_examples" path="boards/evkbmimxrt1170/freertos_examples/freertos_mutex/cm4">
          <external path="boards/evkbmimxrt1170/freertos_examples/freertos_mutex/cm4" type="xml">
            <files mask="freertos_mutex_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_freertos_hello_cm4" name="freertos_hello_cm4" brief="The Hello World project is a simple demonstration program that uses the SDK UART driver in combination with FreeRTOS. The purpose of this demo is to show how to use the debug console and to provide a simple project for debugging and further development.The example application creates one task called hello_task. This task print &quot;Hello world.&quot; message via debug console utility and suspend itself." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="freertos_examples" path="boards/evkbmimxrt1170/freertos_examples/freertos_hello/cm4">
          <external path="boards/evkbmimxrt1170/freertos_examples/freertos_hello/cm4" type="xml">
            <files mask="freertos_hello_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_freertos_generic_cm4" name="freertos_generic_cm4" brief="This document explains the freertos_generic example. It is based on code FreeRTOS documentation from http://www.freertos.org/Hardware-independent-RTOS-example.html. It shows combination of several tasks with queue, software timer, tick hook and semaphore.The example application creates three tasks. The prvQueueSendTask periodically sending data to xQueue queue. The prvQueueReceiveTask is waiting for incoming message and counting number of received messages. Task prvEventSemaphoreTask is waiting for xEventSemaphore semaphore given from vApplicationTickHook. Tick hook give semaphore every 500 ms.Other hook types used for RTOS and resource statistics are also demonstrated in example:* vApplicationIdleHook* vApplicationStackOverflowHook* vApplicationMallocFailedHook" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="freertos_examples" path="boards/evkbmimxrt1170/freertos_examples/freertos_generic/cm4">
          <external path="boards/evkbmimxrt1170/freertos_examples/freertos_generic/cm4" type="xml">
            <files mask="freertos_generic_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_freertos_event_cm4" name="freertos_event_cm4" brief="This document explains the freertos_event example. It shows how task waits for an event (defined setof bits in event group). This event can be set by any other process or interrupt in the system.The example application creates three tasks. Two write tasks write_task_1 and write_task_2continuously setting event bit 0 and bit 1.Read_task is waiting for any event bit and printing actual state on console. Event bits areautomatically cleared after read task is entered.Three possible states can occurre:Both bits are set.zBit B0 is set.Bit B1 is set." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="freertos_examples" path="boards/evkbmimxrt1170/freertos_examples/freertos_event/cm4">
          <external path="boards/evkbmimxrt1170/freertos_examples/freertos_event/cm4" type="xml">
            <files mask="freertos_event_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_emwin_gui_demo_cm4" name="emwin_gui_demo_cm4" brief="The example demonstrates graphical widgets of the emWin library." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="emwin_examples" path="boards/evkbmimxrt1170/emwin_examples/emwin_gui_demo/cm4">
          <external path="boards/evkbmimxrt1170/emwin_examples/emwin_gui_demo/cm4" type="xml">
            <files mask="emwin_gui_demo_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_mipi_dsi_compliant_test_cm4" name="mipi_dsi_compliant_test_cm4" brief="This project is used for MIPI DSI compliant test." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="display_examples" path="boards/evkbmimxrt1170/display_examples/mipi_dsi_compliant_test/cm4">
          <external path="boards/evkbmimxrt1170/display_examples/mipi_dsi_compliant_test/cm4" type="xml">
            <files mask="mipi_dsi_compliant_test_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_fbdev_freertos_cm4" name="fbdev_freertos_cm4" brief="This example shows how to use the fbdev component. The fbdev masks the difference of LCD controllers and provides a unified APIs for upper layers. At the same time, the frame buffers are managed by the FBDEV. When the example runs, you can see a rectangle moving in the screen, and its color changes when reached the border." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="display_examples" path="boards/evkbmimxrt1170/display_examples/fbdev_freertos/cm4">
          <external path="boards/evkbmimxrt1170/display_examples/fbdev_freertos/cm4" type="xml">
            <files mask="fbdev_freertos_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_flash_component_nand_semc_cm4" name="flash_component_nand_semc_cm4" brief="nand flash demo shows the use of nand flash component to erase, program, and read anexternal nand flash device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="component_examples/flash_component/semc_nand" path="boards/evkbmimxrt1170/component_examples/flash_component/semc_nand/cm4">
          <external path="boards/evkbmimxrt1170/component_examples/flash_component/semc_nand/cm4" type="xml">
            <files mask="flash_component_nand_semc_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_pf5020_cm4" name="pf5020_cm4" brief="The pf5020 driver example demonstrates the usage of pf5020 SDK component driver. The example shows the usage of pf5020 API to 1. Set regulator output voltages; 2. Set Internal high speed clock; 3. Set PF5020 to standby mode; 4. Dump PF5020 register content. To use this example, user need to pay attention the output voltage when update the regulator output and make sure the output voltage to set will not cause hardware damage." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="component_examples" path="boards/evkbmimxrt1170/component_examples/pf5020/cm4">
          <external path="boards/evkbmimxrt1170/component_examples/pf5020/cm4" type="xml">
            <files mask="pf5020_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_cmsis_lpuart_interrupt_transfer_cm4" name="cmsis_lpuart_interrupt_transfer_cm4" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http:/www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_interrupt_transfer example shows how to use uart cmsis driver in interrupt way:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpuart" path="boards/evkbmimxrt1170/cmsis_driver_examples/lpuart/interrupt_transfer/cm4">
          <external path="boards/evkbmimxrt1170/cmsis_driver_examples/lpuart/interrupt_transfer/cm4" type="xml">
            <files mask="cmsis_lpuart_interrupt_transfer_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_cmsis_lpuart_edma_transfer_cm4" name="cmsis_lpuart_edma_transfer_cm4" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http:/www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_edma_transfer example shows how to use uart cmsis  driver with EDMA:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpuart" path="boards/evkbmimxrt1170/cmsis_driver_examples/lpuart/edma_transfer/cm4">
          <external path="boards/evkbmimxrt1170/cmsis_driver_examples/lpuart/edma_transfer/cm4" type="xml">
            <files mask="cmsis_lpuart_edma_transfer_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_cmsis_lpspi_int_b2b_transfer_slave_cm4" name="cmsis_lpspi_int_b2b_transfer_slave_cm4" brief="The lpspi_int_b2b_transfer example shows how to use LPSPI CMSIS driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_int_b2b_transfer_slave.c' includes the LPSPI slave code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . " toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpspi" path="boards/evkbmimxrt1170/cmsis_driver_examples/lpspi/int_b2b_transfer/slave/cm4">
          <external path="boards/evkbmimxrt1170/cmsis_driver_examples/lpspi/int_b2b_transfer/slave/cm4" type="xml">
            <files mask="cmsis_lpspi_int_b2b_transfer_slave_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_cmsis_lpspi_int_b2b_transfer_master_cm4" name="cmsis_lpspi_int_b2b_transfer_master_cm4" brief="The cmsis_lpspi_int_b2b_transfer example shows how to use LPSPI CMSIS driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_int_b2b_transfer_master.c' includes the LPSPI master code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . " toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpspi" path="boards/evkbmimxrt1170/cmsis_driver_examples/lpspi/int_b2b_transfer/master/cm4">
          <external path="boards/evkbmimxrt1170/cmsis_driver_examples/lpspi/int_b2b_transfer/master/cm4" type="xml">
            <files mask="cmsis_lpspi_int_b2b_transfer_master_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_cmsis_lpspi_edma_b2b_transfer_slave_cm4" name="cmsis_lpspi_edma_b2b_transfer_slave_cm4" brief="The cmsis_lpspi_edma_b2b_transfer example shows how to use LPSPI CMSIS driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_edma_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in edma . " toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpspi" path="boards/evkbmimxrt1170/cmsis_driver_examples/lpspi/edma_b2b_transfer/slave/cm4">
          <external path="boards/evkbmimxrt1170/cmsis_driver_examples/lpspi/edma_b2b_transfer/slave/cm4" type="xml">
            <files mask="cmsis_lpspi_edma_b2b_transfer_slave_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_cmsis_lpspi_edma_b2b_transfer_master_cm4" name="cmsis_lpspi_edma_b2b_transfer_master_cm4" brief="The cmsis_lpspi_edma_b2b_transfer example shows how to use LPSPI CMSIS driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_edma_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in edma . " toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpspi" path="boards/evkbmimxrt1170/cmsis_driver_examples/lpspi/edma_b2b_transfer/master/cm4">
          <external path="boards/evkbmimxrt1170/cmsis_driver_examples/lpspi/edma_b2b_transfer/master/cm4" type="xml">
            <files mask="cmsis_lpspi_edma_b2b_transfer_master_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_cmsis_lpi2c_int_b2b_transfer_slave_cm4" name="cmsis_lpi2c_int_b2b_transfer_slave_cm4" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http:/www.keil.com/pack/doc/cmsis/Driver/html/index.html.The lpi2c_int_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpi2c" path="boards/evkbmimxrt1170/cmsis_driver_examples/lpi2c/int_b2b_transfer/slave/cm4">
          <external path="boards/evkbmimxrt1170/cmsis_driver_examples/lpi2c/int_b2b_transfer/slave/cm4" type="xml">
            <files mask="cmsis_lpi2c_int_b2b_transfer_slave_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_cmsis_lpi2c_int_b2b_transfer_master_cm4" name="cmsis_lpi2c_int_b2b_transfer_master_cm4" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http:/www.keil.com/pack/doc/cmsis/Driver/html/index.html.The lpi2c_int_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpi2c" path="boards/evkbmimxrt1170/cmsis_driver_examples/lpi2c/int_b2b_transfer/master/cm4">
          <external path="boards/evkbmimxrt1170/cmsis_driver_examples/lpi2c/int_b2b_transfer/master/cm4" type="xml">
            <files mask="cmsis_lpi2c_int_b2b_transfer_master_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_cmsis_lpi2c_edma_b2b_transfer_slave_cm4" name="cmsis_lpi2c_edma_b2b_transfer_slave_cm4" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http:/www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_edma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with EDMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpi2c" path="boards/evkbmimxrt1170/cmsis_driver_examples/lpi2c/edma_b2b_transfer/slave/cm4">
          <external path="boards/evkbmimxrt1170/cmsis_driver_examples/lpi2c/edma_b2b_transfer/slave/cm4" type="xml">
            <files mask="cmsis_lpi2c_edma_b2b_transfer_slave_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_cmsis_lpi2c_edma_b2b_transfer_master_cm4" name="cmsis_lpi2c_edma_b2b_transfer_master_cm4" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http:/www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_edma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with EDMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpi2c" path="boards/evkbmimxrt1170/cmsis_driver_examples/lpi2c/edma_b2b_transfer/master/cm4">
          <external path="boards/evkbmimxrt1170/cmsis_driver_examples/lpi2c/edma_b2b_transfer/master/cm4" type="xml">
            <files mask="cmsis_lpi2c_edma_b2b_transfer_master_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_cmsis_enet_txrx_transfer_cm4" name="cmsis_enet_txrx_transfer_cm4" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide &#10;range of supported microcontroller devices. The API connects microcontroller peripherals with middleware &#10;that implements for example communication stacks, file systems, or graphic user interfaces. &#10;More information and usage method please refer to http:/www.keil.com/pack/doc/cmsis/Driver/html/index.html.&#10;&#10;The cmsis_enet_transfer example shows how to use CMSIS ENET driver:&#10;&#10;In this example, the ENET transmits 20 number broadcast frames and will print the received frame.&#10;&#10;" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/enet" path="boards/evkbmimxrt1170/cmsis_driver_examples/enet/txrx_transfer/cm4">
          <external path="boards/evkbmimxrt1170/cmsis_driver_examples/enet/txrx_transfer/cm4" type="xml">
            <files mask="cmsis_enet_txrx_transfer_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_xrdc2_cm4" name="xrdc2_cm4" brief="The xrdc2 example shows how to control the memory and peripheral accesspolicy using XRDC.In this example, one peripheral and a memory region are set to unaccessible, thenthe hardfault occurs." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/xrdc2" path="boards/evkbmimxrt1170/driver_examples/xrdc2/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/xrdc2/cm4" type="xml">
            <files mask="xrdc2_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_semc_xecc_single_error_cm4" name="semc_xecc_single_error_cm4" brief="The XECC Single Error project is a simple demonstration program of the SDK XECC driver. It supports Single Error Correction ECC function to provide reliability for external memory ECC region access." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/xecc" path="boards/evkbmimxrt1170/driver_examples/xecc/semc/xecc_single_error/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/xecc/semc/xecc_single_error/cm4" type="xml">
            <files mask="semc_xecc_single_error_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_semc_xecc_multi_error_cm4" name="semc_xecc_multi_error_cm4" brief="The MECC Multi Error project is a simple demonstration program of the SDK MECC driver. It supports Double Error Detection(SECDED) ECC function to provide reliability for external memory ECC region access." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/xecc" path="boards/evkbmimxrt1170/driver_examples/xecc/semc/xecc_multi_error/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/xecc/semc/xecc_multi_error/cm4" type="xml">
            <files mask="semc_xecc_multi_error_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_flexspi_xecc_single_error_cm4" name="flexspi_xecc_single_error_cm4" brief="The XECC Single Error project is a simple demonstration program of the SDK XECC driver. It supports Single Error Correction ECC function to provide reliability for external memory ECC region access." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/xecc" path="boards/evkbmimxrt1170/driver_examples/xecc/flexspi/xecc_single_error/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/xecc/flexspi/xecc_single_error/cm4" type="xml">
            <files mask="flexspi_xecc_single_error_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_flexspi_xecc_multi_error_cm4" name="flexspi_xecc_multi_error_cm4" brief="The MECC Multi Error project is a simple demonstration program of the SDK MECC driver. It supports Double Error Detection(SECDED) ECC function to provide reliability for external memory ECC region access." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/xecc" path="boards/evkbmimxrt1170/driver_examples/xecc/flexspi/xecc_multi_error/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/xecc/flexspi/xecc_multi_error/cm4" type="xml">
            <files mask="flexspi_xecc_multi_error_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_xbara_cm4" name="xbara_cm4" brief="The Xbara project is a simple demonstration program of the SDK Xbara driver.The intended applicationof this module is to provide a flexible crossbar switch function that allows any input to beconnected to any output under user control.It sets up the Xbara hardware block to trigger a periodicinterrupt after every 1 second. When the Xbar interrupt is triggered a message a printed on the UARTterminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/xbara" path="boards/evkbmimxrt1170/driver_examples/xbara/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/xbara/cm4" type="xml">
            <files mask="xbara_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_tempsensor_cm4" name="tempsensor_cm4" brief="The TEMPSENSOR project is a simple demonstration program of the SDK TEMPSENSOR driver.The temperatue sensor (TEMPSENSOR) module features alarm functions that can raise independent interrupt signals if the temperature is above two high-temperature thresholds and below a low temperature threshold, the system can then use this module to monitor the on-die temperature and take appropriate actions such as throttling back the core frequency when a the high temperature interrupt is set." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/tempsensor" path="boards/evkbmimxrt1170/driver_examples/tempsensor/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/tempsensor/cm4" type="xml">
            <files mask="tempsensor_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_ssarc_software_trigger_cm4" name="ssarc_software_trigger_cm4" brief="The ssarc_software_trigger project is a simple demonstration program of the SDK SSARC driver. It save the memory contains and restore the memory contains based on software method." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/ssarc" path="boards/evkbmimxrt1170/driver_examples/ssarc/software_trigger/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/ssarc/software_trigger/cm4" type="xml">
            <files mask="ssarc_software_trigger_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_spdif_interrupt_transfer_cm4" name="spdif_interrupt_transfer_cm4" brief="The spdif_interrupt_transfer example shows how to use spdif driver with interrupt:In this example, one spdif instance playbacks the audio data recorded by the same spdif instance using interrupt.Notice: Please use 48KHz sample rate for PC playback and set SPDIF output device to 48KHz." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/spdif" path="boards/evkbmimxrt1170/driver_examples/spdif/interrupt_transfer/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/spdif/interrupt_transfer/cm4" type="xml">
            <files mask="spdif_interrupt_transfer_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_spdif_edma_transfer_cm4" name="spdif_edma_transfer_cm4" brief="The spdif_edma_transfer example shows how to use spdif driver with edma:In this example, one spdif instance playbacks the audio data recorded by same spdif instance using edma.Notice: Please use 48KHz sample rate for PC playback and set SPDIF output device to 48KHz." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/spdif" path="boards/evkbmimxrt1170/driver_examples/spdif/edma_transfer/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/spdif/edma_transfer/cm4" type="xml">
            <files mask="spdif_edma_transfer_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_snvs_sw_zmk_cm4" name="snvs_sw_zmk_cm4" brief="The SNVS SW ZMK project shows how to provision the zeroizable master key (ZMK) by software based on SDK SNVS driver. In this example, ZMK key value is set and ECC is enabled. When change the ZMK key value, violation detected and ZMK key is zeroized." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/snvs" path="boards/evkbmimxrt1170/driver_examples/snvs/snvs_sw_zmk/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/snvs/snvs_sw_zmk/cm4" type="xml">
            <files mask="snvs_sw_zmk_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_snvs_lp_tamper_cm4" name="snvs_lp_tamper_cm4" brief="The SNVS LP TAMPER project is a simple demonstration program of the SDK SNVS LP driver. The test will set up pasive and active tamper pins and also enables and test voltage, temperature and clock tampers." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/snvs" path="boards/evkbmimxrt1170/driver_examples/snvs/snvs_lp_tamper/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/snvs/snvs_lp_tamper/cm4" type="xml">
            <files mask="snvs_lp_tamper_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_snvs_lp_srtc_cm4" name="snvs_lp_srtc_cm4" brief="The SNVS LP SRTC project is a simple demonstration program of the SDK SNVS LP driver. The test will set up secure RTC (SRTC) date and time to a predefined value and starts the counter, then the SRTC counter value is synchronized with non secure RTC (RTC). RTC then triggers an alarm after a user specified time period. The alarm will be set with reference to this predefined dateand time." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/snvs" path="boards/evkbmimxrt1170/driver_examples/snvs/snvs_lp_srtc/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/snvs/snvs_lp_srtc/cm4" type="xml">
            <files mask="snvs_lp_srtc_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_snvs_lp_mc_cm4" name="snvs_lp_mc_cm4" brief="The SNVS LP MC project shows how to use the Monotonic Counter (MC) based on SDK SNVS LP driver. In this example, the MC value is increased and checked several times." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/snvs" path="boards/evkbmimxrt1170/driver_examples/snvs/snvs_lp_mc/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/snvs/snvs_lp_mc/cm4" type="xml">
            <files mask="snvs_lp_mc_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_snvs_hp_rtc_cm4" name="snvs_hp_rtc_cm4" brief="The SNVS HP RTC project is a simple demonstration program of the SDK SNVS HP driver. The test will set up RTC date and time to a predefined value and starts the counter. RTC then triggers an alarm after a user specified time period. The alarm will be set with reference to this predefined date and time." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/snvs" path="boards/evkbmimxrt1170/driver_examples/snvs/snvs_hp_rtc/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/snvs/snvs_hp_rtc/cm4" type="xml">
            <files mask="snvs_hp_rtc_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_snvs_hp_hac_cm4" name="snvs_hp_hac_cm4" brief="The SNVS HP HAC project shows how to use the High Assurance Counter (HAC) based on SDK SNVS HP driver. In this example, The HAC is enabled and set a initial value. Software fatal security violation is triggered, and the SSM switches to soft fail mode. In soft fail mode, software stops the HAC counter, and clear the HAC to make SSM switch to hard fail mode. The system resets when enters hard fail mode." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/snvs" path="boards/evkbmimxrt1170/driver_examples/snvs/snvs_hp_hac/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/snvs/snvs_hp_hac/cm4" type="xml">
            <files mask="snvs_hp_hac_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_smartcard_cm4" name="smartcard_cm4" brief="This example demonstrates the SDK Peripheral drivers working with different methods.This example demonstrates use of smartcard driver API to read GSM sim card ICC-ID (Integrated circuit card identifier,which should be placed on the card). Please be aware, that this example is just simple demonstration of smartcard driver API. It may not work with all typesof GSM sim cards." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/smartcard" path="boards/evkbmimxrt1170/driver_examples/smartcard/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/smartcard/cm4" type="xml">
            <files mask="smartcard_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_semc_cm4" name="semc_cm4" brief="The sdramc example shows how to use SEMC controller driver to initialize the external SDRAM chip." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/semc" path="boards/evkbmimxrt1170/driver_examples/semc/sdram/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/semc/sdram/cm4" type="xml">
            <files mask="semc_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_sema4_dualcore_secondary_core" name="sema4_dualcore_secondary_core" brief="This example shows how to use the SEMA4 gate lock and unlock, and the gate notify feature. In this example, core 0 sends command to core 1 through MU. According to the commands, core 1 locks and unlocks the specific SEMA4 gate at the proper time. If core 0 trys to lock a SEMA4 gate which has been locked by core 1, the opeartion fails, and core 0 is notified when the SEMA4 gate is unlocked by core 1. This example demonstrates this feature." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sema4" path="boards/evkbmimxrt1170/driver_examples/sema4/dualcore/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/sema4/dualcore/cm4" type="xml">
            <files mask="sema4_dualcore_secondary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_sema4_basic_cm4" name="sema4_basic_cm4" brief="The sema4 basic example shows how to use SEMA4 driver to do basic gate operaions, including lock, unlock, and reset." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sema4" path="boards/evkbmimxrt1170/driver_examples/sema4/basic/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/sema4/basic/cm4" type="xml">
            <files mask="sema4_basic_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_sai_interrupt_transfer_cm4" name="sai_interrupt_transfer_cm4" brief="The sai_interrupt_transfer example shows how to use sai driver with interrupt:In this example, one sai instance playbacks the audio data stored in flash/SRAM using interrupt." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sai" path="boards/evkbmimxrt1170/driver_examples/sai/interrupt_transfer/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/sai/interrupt_transfer/cm4" type="xml">
            <files mask="sai_interrupt_transfer_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_sai_interrupt_record_playback_cm4" name="sai_interrupt_record_playback_cm4" brief="The sai_interrupt_record_playback example shows how to use sai driver with record and playback features: In this example, one sai instance record the audio data from input and playbacks the audio data." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sai" path="boards/evkbmimxrt1170/driver_examples/sai/interrupt_record_playback/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/sai/interrupt_record_playback/cm4" type="xml">
            <files mask="sai_interrupt_record_playback_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_sai_interrupt_cm4" name="sai_interrupt_cm4" brief="The sai_interrupt example shows how to use sai functional API to implement interrupt playback:In this example, one sai instance playbacks the audio data stored in flash/SRAM using interrupt." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sai" path="boards/evkbmimxrt1170/driver_examples/sai/interrupt/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/sai/interrupt/cm4" type="xml">
            <files mask="sai_interrupt_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_sai_edma_transfer_cm4" name="sai_edma_transfer_cm4" brief="The sai_edma_transfer example shows how to use sai driver with EDMA:In this example, one sai instance playbacks the audio data stored in flash/SRAM using EDMA channel." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sai" path="boards/evkbmimxrt1170/driver_examples/sai/edma_transfer/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/sai/edma_transfer/cm4" type="xml">
            <files mask="sai_edma_transfer_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_sai_edma_tdm_record_playback_cm4" name="sai_edma_tdm_record_playback_cm4" brief="The sai_edma_tdm_record_plyback example shows how to use sai driver to generate TDM format with EDMA:In this example, one sai instance record and playbacks the audio data in TDM format." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sai" path="boards/evkbmimxrt1170/driver_examples/sai/edma_tdm_record_playback/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/sai/edma_tdm_record_playback/cm4" type="xml">
            <files mask="sai_edma_tdm_record_playback_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_sai_edma_tdm_cm4" name="sai_edma_tdm_cm4" brief="The sai_edma_tdm example shows how to use sai driver to generate TDM format with EDMA:In this example, one sai instance playbacks the audio data stored in sdcard." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sai" path="boards/evkbmimxrt1170/driver_examples/sai/edma_tdm/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/sai/edma_tdm/cm4" type="xml">
            <files mask="sai_edma_tdm_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_sai_edma_standalone_transfer_cm4" name="sai_edma_standalone_transfer_cm4" brief="The sai_edma_standalone_transfer example shows how to use sai driver with EDMA:In this example, one sai instance playbacks the audio data stored in flash/SRAM using EDMA channel." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sai" path="boards/evkbmimxrt1170/driver_examples/sai/edma_standalone_transfer/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/sai/edma_standalone_transfer/cm4" type="xml">
            <files mask="sai_edma_standalone_transfer_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_sai_edma_record_playback_cm4" name="sai_edma_record_playback_cm4" brief="The sai_edma_record_playback example shows how to use sai driver with EDMA: In this example, one sai instance record the audio data from input and playbacks the audio data." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sai" path="boards/evkbmimxrt1170/driver_examples/sai/edma_record_playback/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/sai/edma_record_playback/cm4" type="xml">
            <files mask="sai_edma_record_playback_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_sai_edma_ping_pong_buffer_half_interrupt_cm4" name="sai_edma_ping_pong_buffer_half_interrupt_cm4" brief="The sai_edma_ping_pong_buffer_half_interrupt example shows how to use sai driver with EDMA half interrupt feature: In this example, one sai instance playbacks the audio data stored in flash/SRAM using EDMA channel." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sai" path="boards/evkbmimxrt1170/driver_examples/sai/edma_ping_pong_buffer_half_interrupt/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/sai/edma_ping_pong_buffer_half_interrupt/cm4" type="xml">
            <files mask="sai_edma_ping_pong_buffer_half_interrupt_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_sai_edma_ping_pong_buffer_cm4" name="sai_edma_ping_pong_buffer_cm4" brief="The sai_edma_ping_pong_buffer example shows how to use sai driver with EDMA:In this example, one sai instance playbacks the audio data stored in flash/SRAM using EDMA channel." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sai" path="boards/evkbmimxrt1170/driver_examples/sai/edma_ping_pong_buffer/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/sai/edma_ping_pong_buffer/cm4" type="xml">
            <files mask="sai_edma_ping_pong_buffer_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_sai_edma_multi_channel_transfer_cm4" name="sai_edma_multi_channel_transfer_cm4" brief="The sai_edma_multi_channel_transfer example shows how to use sai driver with EDMA:In this example, one sai instance playbacks the audio data stored in flash/SRAM using EDMA channel." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sai" path="boards/evkbmimxrt1170/driver_examples/sai/edma_multi_channel_transfer/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/sai/edma_multi_channel_transfer/cm4" type="xml">
            <files mask="sai_edma_multi_channel_transfer_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_rdc_cm4" name="rdc_cm4" brief="The RDC example shows how to control the peripheral and memory regionasscess policy using RDC and RDC_SEMA42" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/rdc" path="boards/evkbmimxrt1170/driver_examples/rdc/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/rdc/cm4" type="xml">
            <files mask="rdc_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_qtmr_timer_cm4" name="qtmr_timer_cm4" brief="The QTMR project is a simple demonstration program of the SDK QTMR driver to use QTMR as a timer.The quad-timer module provides four timer channels with a variety of controls affecting both individualand multi-channel features. It sets up the QTMR hardware block to trigger an interrupt every 50 millisecond.When chaining the first channel and the second channel, Timer interrupt occur every 10 second.When the QTMR interrupt is triggered a message a printed on the UART terminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/qtmr" path="boards/evkbmimxrt1170/driver_examples/qtmr/timer/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/qtmr/timer/cm4" type="xml">
            <files mask="qtmr_timer_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_qtmr_inputcapture_outputpwm_dma_cm4" name="qtmr_inputcapture_outputpwm_dma_cm4" brief="The QTMR project is a demonstration program of the SDK QTMR driver's input capture and output pwm feature by DMA.The example sets up a QTMR channel for input capture. Once the input signal is received,this example will print the capture value.The example also sets up one QTMR channel to output pwm. The user should probe a 50Khz PWM signal output with50% dutycycle with a oscilloscope.The user can enter a value to update the Duty cycle." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/qtmr" path="boards/evkbmimxrt1170/driver_examples/qtmr/inputcapture_outputpwm_dma/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/qtmr/inputcapture_outputpwm_dma/cm4" type="xml">
            <files mask="qtmr_inputcapture_outputpwm_dma_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_qtmr_inputcapture_outputpwm_cm4" name="qtmr_inputcapture_outputpwm_cm4" brief="The QTMR project is a demonstration program of the SDK QTMR driver's input capture and output pwm feature.The example sets up a QTMR channel for input capture. Once the input signal is received,this example will enter interrupt and print the capture value.The example also sets up one QTMR channel to output pwm. The user should probe a 50Khz PWM signal output with50% dutycycle with a oscilloscope. " toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/qtmr" path="boards/evkbmimxrt1170/driver_examples/qtmr/inputcapture_outputpwm/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/qtmr/inputcapture_outputpwm/cm4" type="xml">
            <files mask="qtmr_inputcapture_outputpwm_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_pxp_scale_cm4" name="pxp_scale_cm4" brief="The PXP scale project shows how to use the PXP scale function. If this exampleruns correctly, you will see a square with three color(red, green and blue).The square size is changing." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pxp" path="boards/evkbmimxrt1170/driver_examples/pxp/scale/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/pxp/scale/cm4" type="xml">
            <files mask="pxp_scale_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_pxp_rotate_cm4" name="pxp_rotate_cm4" brief="The PXP rotate project shows how to use the PXP rotate function. If this exampleruns correctly, you will see a square with three color(red, green and blue).The rotate degree is changing." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pxp" path="boards/evkbmimxrt1170/driver_examples/pxp/rotate/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/pxp/rotate/cm4" type="xml">
            <files mask="pxp_rotate_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_pxp_queue_cm4" name="pxp_queue_cm4" brief="The PXP queue project shows how to use the PXP command queue. This exampleuse the command queue to rotate the process surface. If this exampleruns correctly, you will see a square with three color(red, green and blue).The rotate degree is changing." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pxp" path="boards/evkbmimxrt1170/driver_examples/pxp/queue/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/pxp/queue/cm4" type="xml">
            <files mask="pxp_queue_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_pxp_porter_duff_cm4" name="pxp_porter_duff_cm4" brief="This example shows how to use the PXP Porter Duff compositing. In this example, A blue rectangle is in the left up corner of the destination surface (also named PS surface, or s0 in reference mannal). A red rectangle is in the center of the source surface (also named AS surface, or s1 in reference mannal). When press any key in the terminal, the Porter Duff mode changes and the panel shows the result." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pxp" path="boards/evkbmimxrt1170/driver_examples/pxp/porter_duff/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/pxp/porter_duff/cm4" type="xml">
            <files mask="pxp_porter_duff_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_pxp_lcdif_handshake_cm4" name="pxp_lcdif_handshake_cm4" brief="The PXP LCDIF hand shake project shows how to enable the hand shake betweenPXP and LCDIF. If this example runs correctly, you will see two rectangles moving in thescreen. One rectangle is process surface output, and the other is alpha surfaceoutput, the overlay region color is OR'ed value of process surface and alpha surface.NOTE:This example must run continously to get the right result, breaking during debugwill results to handshake fail. Because the PXP must be started before every LCDframe, if system is halt, the PXP does not start correctly." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pxp" path="boards/evkbmimxrt1170/driver_examples/pxp/lcdif_handshake/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/pxp/lcdif_handshake/cm4" type="xml">
            <files mask="pxp_lcdif_handshake_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_pxp_flip_cm4" name="pxp_flip_cm4" brief="The PXP flip project shows how to use the PXP flip function. If this exampleruns correctly, you will see a square with three color(red, green and blue).The flip mode is changing." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pxp" path="boards/evkbmimxrt1170/driver_examples/pxp/flip/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/pxp/flip/cm4" type="xml">
            <files mask="pxp_flip_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_pxp_fill_rectangle_cm4" name="pxp_fill_rectangle_cm4" brief="The PXP fill rectangle project shows how to use the PXP to draw a solid rectangle with configured color. If this example runs correctly, you will see the panel filled with red, green and blue in a row." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pxp" path="boards/evkbmimxrt1170/driver_examples/pxp/fill_rectangle/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/pxp/fill_rectangle/cm4" type="xml">
            <files mask="pxp_fill_rectangle_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_pxp_copy_pic_cm4" name="pxp_copy_pic_cm4" brief="The PXP copy_pic project shows how to use the PXP to copy image from one buffer to another buffer." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pxp" path="boards/evkbmimxrt1170/driver_examples/pxp/copy_pic/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/pxp/copy_pic/cm4" type="xml">
            <files mask="pxp_copy_pic_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_pxp_color_key_cm4" name="pxp_color_key_cm4" brief="The PXP color key project shows how to use the AS color key together with the alpha blend. In this example, the AS pixel format is RGB565, the global alpha is used for alpha blend." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pxp" path="boards/evkbmimxrt1170/driver_examples/pxp/color_key/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/pxp/color_key/cm4" type="xml">
            <files mask="pxp_color_key_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_pxp_blend_cm4" name="pxp_blend_cm4" brief="The PXP blend project shows how to blend process surface and alpha surface usingPXP. If this example runs correctly, you will see two rectangles moving in thescreen. One rectangle is process surface output, and the other is alpha surfaceoutput, the overlay region color is OR'ed value of process surface and alpha surface." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pxp" path="boards/evkbmimxrt1170/driver_examples/pxp/blend/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/pxp/blend/cm4" type="xml">
            <files mask="pxp_blend_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_pwm_cm4" name="pwm_cm4" brief="The PWM project is a simple demonstration program of the SDK PWM driver.The pulse width modulator (PWM) module contains PWM submodules, each of which is set up to control a single half-bridge power stage.Fault channel support is provided. This PWM module can generate various switching patterns, including highly sophisticated waveforms.It can be used to control all known Switched Mode Power Supplies (SMPS) topologies." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pwm" path="boards/evkbmimxrt1170/driver_examples/pwm/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/pwm/cm4" type="xml">
            <files mask="pwm_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_pit_cm4" name="pit_cm4" brief="The PIT project is a simple demonstration program of the SDK PIT driver. It sets up the PIThardware block to trigger a periodic interrupt after every 1 second. When the PIT interrupt is triggereda message a printed on the UART terminal and an LED is toggled on the board." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pit" path="boards/evkbmimxrt1170/driver_examples/pit/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/pit/cm4" type="xml">
            <files mask="pit_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_pdm_sai_multi_channel_tdm_edma_cm4" name="pdm_sai_multi_channel_tdm_edma_cm4" brief="The pdm_sai_multi_channel_tdm_edma example shows how to use pdm edma driver to record multi channel data together with sai edma driver" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pdm" path="boards/evkbmimxrt1170/driver_examples/pdm/pdm_sai_multi_channel_tdm_edma/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/pdm/pdm_sai_multi_channel_tdm_edma/cm4" type="xml">
            <files mask="pdm_sai_multi_channel_tdm_edma_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_pdm_sai_multi_channel_edma_cm4" name="pdm_sai_multi_channel_edma_cm4" brief="The pdm_sai_multi_channel_edma example shows how to use pdm edma driver to record multi channel data together with sai edma driver" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pdm" path="boards/evkbmimxrt1170/driver_examples/pdm/pdm_sai_multi_channel_edma/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/pdm/pdm_sai_multi_channel_edma/cm4" type="xml">
            <files mask="pdm_sai_multi_channel_edma_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_pdm_sai_interrupt_transfer_cm4" name="pdm_sai_interrupt_transfer_cm4" brief="The pdm_sdma_transfer example shows how to use pdm driver with interrupt transaction api:In this example, one sai instance loopback the audio data that recieve from PDM." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pdm" path="boards/evkbmimxrt1170/driver_examples/pdm/pdm_sai_interrupt_transfer/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/pdm/pdm_sai_interrupt_transfer/cm4" type="xml">
            <files mask="pdm_sai_interrupt_transfer_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_pdm_sai_interrupt_cm4" name="pdm_sai_interrupt_cm4" brief="The pdm_sdma_transfer example shows how to use pdm driver with interrupt:In this example, one sai instance loopback the audio data that recieve from PDM." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pdm" path="boards/evkbmimxrt1170/driver_examples/pdm/pdm_sai_interrupt/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/pdm/pdm_sai_interrupt/cm4" type="xml">
            <files mask="pdm_sai_interrupt_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_pdm_sai_edma_cm4" name="pdm_sai_edma_cm4" brief="The pdm_sai_sdma example shows how to use pdm edma driver together with sai edma driver" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pdm" path="boards/evkbmimxrt1170/driver_examples/pdm/pdm_sai_edma/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/pdm/pdm_sai_edma/cm4" type="xml">
            <files mask="pdm_sai_edma_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_pdm_interrupt_cm4" name="pdm_interrupt_cm4" brief="The pdm_interrupt example shows how to use pdm driver with interrupt:In this example, one pdm instance playbacks the audio data stored in flash using interrupt." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pdm" path="boards/evkbmimxrt1170/driver_examples/pdm/pdm_interrupt/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/pdm/pdm_interrupt/cm4" type="xml">
            <files mask="pdm_interrupt_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_pdm_hwvad_cm4" name="pdm_hwvad_cm4" brief="The pdm_hwvad example shows how to use pdm driver with interrupt:In this example, one pdm instance playbacks the audio data stored in flash using interrupt." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pdm" path="boards/evkbmimxrt1170/driver_examples/pdm/pdm_hwvad/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/pdm/pdm_hwvad/cm4" type="xml">
            <files mask="pdm_hwvad_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_pdm_edma_transfer_cm4" name="pdm_edma_transfer_cm4" brief="pdm_edma_transfer" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pdm" path="boards/evkbmimxrt1170/driver_examples/pdm/pdm_edma_transfer/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/pdm/pdm_edma_transfer/cm4" type="xml">
            <files mask="pdm_edma_transfer_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_ocotp_example_cm4" name="ocotp_example_cm4" brief="The ocotp driver example shows how to operation the OCOTP register with driver API." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/ocotp" path="boards/evkbmimxrt1170/driver_examples/ocotp/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/ocotp/cm4" type="xml">
            <files mask="ocotp_example_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_mu_polling_secondary_core" name="mu_polling_secondary_core" brief="The mu_polling example shows how to use MU driver in polling way:In this example:1. Core 0 send message to Core 1 in polling mode via MU module.2. Core 1 send message back to Core 0 in polling mode.3. Core 0 receive message sent from Core 1 in polling mode." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/mu" path="boards/evkbmimxrt1170/driver_examples/mu/polling/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/mu/polling/cm4" type="xml">
            <files mask="mu_polling_secondary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_mu_interrupt_secondary_core" name="mu_interrupt_secondary_core" brief="The mu_interrupt example shows how to use MU driver in interrupt way:In this example:1. Core 0 send message to Core 1 in interrupt mode via MU module.2. Core 1 send message back to Core 0 in interrupt mode.3. Core 0 receive message sent from Core 1 in interrupt mode." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/mu" path="boards/evkbmimxrt1170/driver_examples/mu/interrupt/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/mu/interrupt/cm4" type="xml">
            <files mask="mu_interrupt_secondary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpuart_polling_seven_bits_cm4" name="lpuart_polling_seven_bits_cm4" brief="The lpuart_polling_seven_bits Example project is to demonstrate usage of the KSDK lpuart driver with seven data bits feature enabled.In the example, you can send characters to the console back and they will be printed out onto console instantly.NOTE: Please set com port format to &quot;7 data bits without parity bit&quot; in PC's com port tool" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/evkbmimxrt1170/driver_examples/lpuart/polling_seven_bits/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/lpuart/polling_seven_bits/cm4" type="xml">
            <files mask="lpuart_polling_seven_bits_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpuart_polling_cm4" name="lpuart_polling_cm4" brief="The lpuart_polling Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console instantly." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/evkbmimxrt1170/driver_examples/lpuart/polling/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/lpuart/polling/cm4" type="xml">
            <files mask="lpuart_polling_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpuart_interrupt_transfer_seven_bits_cm4" name="lpuart_interrupt_transfer_seven_bits_cm4" brief="The lpuart_interrupt_transfer_seven_bits Example project is to demonstrate usage of the KSDK lpuart driver with seven data bits feature enabled.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters.NOTE: Please set com port format to &quot;7 data bits without parity bit&quot; in PC's com port tool" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/evkbmimxrt1170/driver_examples/lpuart/interrupt_transfer_seven_bits/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/lpuart/interrupt_transfer_seven_bits/cm4" type="xml">
            <files mask="lpuart_interrupt_transfer_seven_bits_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpuart_interrupt_transfer_cm4" name="lpuart_interrupt_transfer_cm4" brief="The lpuart_interrupt Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/evkbmimxrt1170/driver_examples/lpuart/interrupt_transfer/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/lpuart/interrupt_transfer/cm4" type="xml">
            <files mask="lpuart_interrupt_transfer_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpuart_interrupt_rb_transfer_cm4" name="lpuart_interrupt_rb_transfer_cm4" brief="The lpuart_interrupt_ring_buffer Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/evkbmimxrt1170/driver_examples/lpuart/interrupt_rb_transfer/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/lpuart/interrupt_rb_transfer/cm4" type="xml">
            <files mask="lpuart_interrupt_rb_transfer_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpuart_interrupt_cm4" name="lpuart_interrupt_cm4" brief="The lpuart_functioncal_interrupt example shows how to use lpuart driver functionalAPI to receive data with interrupt method:In this example, one lpuart instance connect to PC, the board willsend back all characters that PC send to the board." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/evkbmimxrt1170/driver_examples/lpuart/interrupt/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/lpuart/interrupt/cm4" type="xml">
            <files mask="lpuart_interrupt_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpuart_edma_transfer_cm4" name="lpuart_edma_transfer_cm4" brief="The lpuart_edma Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/evkbmimxrt1170/driver_examples/lpuart/edma_transfer/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/lpuart/edma_transfer/cm4" type="xml">
            <files mask="lpuart_edma_transfer_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpuart_9bit_interrupt_transfer_cm4" name="lpuart_9bit_interrupt_transfer_cm4" brief="The lpuart_9bit_interrupt_transfer example shows how to use lpuart driver in 9-bit mode in multi-slave system. Master can send data to slave with certain address specifically, and slave can only receive data when it is addressed. In this example, one lpuart instance is used with address configured. Its TX and RX pins are connected together. First it sends a piece of data out, then addresses itself, after that sends the other piece of data. Only data sent after the address can be received by itself." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/evkbmimxrt1170/driver_examples/lpuart/9bit_interrupt_transfer/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/lpuart/9bit_interrupt_transfer/cm4" type="xml">
            <files mask="lpuart_9bit_interrupt_transfer_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpspi_polling_b2b_transfer_slave_cm4" name="lpspi_polling_b2b_transfer_slave_cm4" brief="The lpspi_polling_b2b_transfer example shows how to use LPSPI driver in polling way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_polling_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in polling . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/evkbmimxrt1170/driver_examples/lpspi/polling_b2b_transfer/slave/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/lpspi/polling_b2b_transfer/slave/cm4" type="xml">
            <files mask="lpspi_polling_b2b_transfer_slave_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpspi_polling_b2b_transfer_master_cm4" name="lpspi_polling_b2b_transfer_master_cm4" brief="The lpspi_polling_b2b_transfer example shows how to use LPSPI driver in polling way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_polling_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in polling . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/evkbmimxrt1170/driver_examples/lpspi/polling_b2b_transfer/master/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/lpspi/polling_b2b_transfer/master/cm4" type="xml">
            <files mask="lpspi_polling_b2b_transfer_master_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpspi_interrupt_b2b_slave_cm4" name="lpspi_interrupt_b2b_slave_cm4" brief="The lpspi_interrupt_b2b example shows how to use LPSPI driver in interrupt way:In this example , we need two boards , one board used as LPSPI master and another board used as LPSPI slave.The file 'dspi_interrupt_b2b_slave.c' includes the LPSPI slave code.This example does not use the transactional API in LPSPI driver. It's a demonstration that how to use the interrupt in KSDK driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/evkbmimxrt1170/driver_examples/lpspi/interrupt_b2b/slave/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/lpspi/interrupt_b2b/slave/cm4" type="xml">
            <files mask="lpspi_interrupt_b2b_slave_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpspi_interrupt_b2b_master_cm4" name="lpspi_interrupt_b2b_master_cm4" brief="The lpspi_interrupt_b2b example shows how to use LPSPI driver in interrupt way:In this example , we need two boards , one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_interrupt_b2b_master.c' includes the LPSPI master code.This example does not use the transactional API in LPSPI driver. It's a demonstration that how to use the interrupt in KSDK driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/evkbmimxrt1170/driver_examples/lpspi/interrupt_b2b/master/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/lpspi/interrupt_b2b/master/cm4" type="xml">
            <files mask="lpspi_interrupt_b2b_master_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpspi_edma_b2b_transfer_slave_cm4" name="lpspi_edma_b2b_transfer_slave_cm4" brief="The lpspi_edma_b2b_transfer example shows how to use LPSPI driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_edma_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in edma . (LPSPI Slave using edma to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/evkbmimxrt1170/driver_examples/lpspi/edma_b2b_transfer/slave/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/lpspi/edma_b2b_transfer/slave/cm4" type="xml">
            <files mask="lpspi_edma_b2b_transfer_slave_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpspi_edma_b2b_transfer_master_cm4" name="lpspi_edma_b2b_transfer_master_cm4" brief="The lpspi_edma_b2b_transfer example shows how to use LPSPI driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_edma_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in edma . (LPSPI Slave using edma to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/evkbmimxrt1170/driver_examples/lpspi/edma_b2b_transfer/master/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/lpspi/edma_b2b_transfer/master/cm4" type="xml">
            <files mask="lpspi_edma_b2b_transfer_master_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpi2c_polling_b2b_slave_cm4" name="lpi2c_polling_b2b_slave_cm4" brief="The lpi2c_polling_b2b_slave example shows how to use lpi2c driver as slave to do board to board transfer with a polling master:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/evkbmimxrt1170/driver_examples/lpi2c/polling_b2b/slave/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/lpi2c/polling_b2b/slave/cm4" type="xml">
            <files mask="lpi2c_polling_b2b_slave_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpi2c_polling_b2b_master_cm4" name="lpi2c_polling_b2b_master_cm4" brief="The lpi2c_polling_b2b_master example shows how to use lpi2c driver as master to do board to board transfer using polling method:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/evkbmimxrt1170/driver_examples/lpi2c/polling_b2b/master/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/lpi2c/polling_b2b/master/cm4" type="xml">
            <files mask="lpi2c_polling_b2b_master_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpi2c_interrupt_b2b_transfer_slave_cm4" name="lpi2c_interrupt_b2b_transfer_slave_cm4" brief="The lpi2c_interrupt_b2b_transfer_slave example shows how to use lpi2c driver as slave to do board to board transfer with interrupt:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/evkbmimxrt1170/driver_examples/lpi2c/interrupt_b2b_transfer/slave/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/lpi2c/interrupt_b2b_transfer/slave/cm4" type="xml">
            <files mask="lpi2c_interrupt_b2b_transfer_slave_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpi2c_interrupt_b2b_transfer_master_cm4" name="lpi2c_interrupt_b2b_transfer_master_cm4" brief="The lpi2c_interrupt_b2b_transfer_master example shows how to use lpi2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/evkbmimxrt1170/driver_examples/lpi2c/interrupt_b2b_transfer/master/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/lpi2c/interrupt_b2b_transfer/master/cm4" type="xml">
            <files mask="lpi2c_interrupt_b2b_transfer_master_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpi2c_interrupt_cm4" name="lpi2c_interrupt_cm4" brief="The lpi2c_functional_interrupt example shows how to use lpi2c functional driver to build a interrupt based application:In this example , one lpi2c instance used as lpi2c master and another lpi2c instance used as lpi2c slave .1. lpi2c master send data using interrupt to lpi2c slave in interrupt .2. lpi2c master read data using interrupt from lpi2c slave in interrupt .3. The example assumes that the connection is OK between master and slave, so there's NO error handling code." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/evkbmimxrt1170/driver_examples/lpi2c/interrupt/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/lpi2c/interrupt/cm4" type="xml">
            <files mask="lpi2c_interrupt_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpi2c_edma_b2b_transfer_slave_cm4" name="lpi2c_edma_b2b_transfer_slave_cm4" brief="The lpi2c_edma_b2b_transfer_slave example shows how to use lpi2c driver as slave to do board to board transfer with a EDMA master:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/evkbmimxrt1170/driver_examples/lpi2c/edma_b2b_transfer/slave/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/lpi2c/edma_b2b_transfer/slave/cm4" type="xml">
            <files mask="lpi2c_edma_b2b_transfer_slave_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpi2c_edma_b2b_transfer_master_cm4" name="lpi2c_edma_b2b_transfer_master_cm4" brief="The lpi2c_edma_b2b_transfer_master example shows how to use lpi2c driver as master to do board to board transfer with EDMA:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/evkbmimxrt1170/driver_examples/lpi2c/edma_b2b_transfer/master/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/lpi2c/edma_b2b_transfer/master/cm4" type="xml">
            <files mask="lpi2c_edma_b2b_transfer_master_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpadc_polling_cm4" name="lpadc_polling_cm4" brief="The lpadc_single_polling example shows the simplest way to use LPADC driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the LPADC'ssample input. When running the project, typing any key into debug console would trigger the conversion. The execution would check the FIFO valid flag in loop until the flag is asserted, which means the conversion is completed. Then read the conversion result value and print it to debug console.Note, the default setting of initialization for the ADC converter is just an available configuration. User can changethe configuration structure's setting in application to fit the special requirement." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpadc" path="boards/evkbmimxrt1170/driver_examples/lpadc/polling/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/lpadc/polling/cm4" type="xml">
            <files mask="lpadc_polling_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpadc_interrupt_cm4" name="lpadc_interrupt_cm4" brief="The lpdc_single_interrupt example shows how to use interrupt with LPADC driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the LPADC'ssample input. When running the project, typing any key into debug console would trigger the conversion. ADC watermark interrupt would be asserted once the number of datawords stored in the ADC Result FIFO is greater than watermark value.In ADC ISR, the watermark flag would be cleared by reading the conversion result value. Also, result information wouldbe printed when the execution return to the main function." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpadc" path="boards/evkbmimxrt1170/driver_examples/lpadc/interrupt/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/lpadc/interrupt/cm4" type="xml">
            <files mask="lpadc_interrupt_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lcdifv2_rgb565_cm4" name="lcdifv2_rgb565_cm4" brief="The RGB565 project shows how to drive the RGB interface LCD using LCDIF driver.If this example runs correctly, a rectangle is moving in the screen, and the colorchanges every time it reaches the edges of the screen.The rectangle moving speed might be different with Debug target and Release target,because these two targets spend different time to fill the frame buffer." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lcdifv2" path="boards/evkbmimxrt1170/driver_examples/lcdifv2/rgb565/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/lcdifv2/rgb565/cm4" type="xml">
            <files mask="lcdifv2_rgb565_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lcdifv2_porter_duff_cm4" name="lcdifv2_porter_duff_cm4" brief="This example demonstrates how to use the LCDIF v2 porter duff feature. In this example, two layers are enabled and blended. The blend mode changes and the panel shows the different blend result." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lcdifv2" path="boards/evkbmimxrt1170/driver_examples/lcdifv2/porter_duff/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/lcdifv2/porter_duff/cm4" type="xml">
            <files mask="lcdifv2_porter_duff_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lcdifv2_multi_layer_alpha_cm4" name="lcdifv2_multi_layer_alpha_cm4" brief="This example demonstrates how to use the LCDIF v2 API to get the global alpha based on desired blended alpha, for the multi-layer blend case." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lcdifv2" path="boards/evkbmimxrt1170/driver_examples/lcdifv2/multi_layer_alpha/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/lcdifv2/multi_layer_alpha/cm4" type="xml">
            <files mask="lcdifv2_multi_layer_alpha_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lcdifv2_lut_cm4" name="lcdifv2_lut_cm4" brief="This example demonstrates how to use the LCDIF v2 color palette (LUT). In this example the pixel format is 8-bit LUT index. Although the LUT supports 256 items in this example only items 0-7 are used, because the frame buffer content are restricted to 0-7. When the example runs, a rectangle is moving in the screen, and its color changes when touch border." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lcdifv2" path="boards/evkbmimxrt1170/driver_examples/lcdifv2/lut/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/lcdifv2/lut/cm4" type="xml">
            <files mask="lcdifv2_lut_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lcdifv2_embedded_alpha_cm4" name="lcdifv2_embedded_alpha_cm4" brief="This example demonstrates how to use the LCDIF v2 multiple layer blend using the alpha embedded in pixel." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lcdifv2" path="boards/evkbmimxrt1170/driver_examples/lcdifv2/embedded_alpha/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/lcdifv2/embedded_alpha/cm4" type="xml">
            <files mask="lcdifv2_embedded_alpha_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lcdifv2_csc_cm4" name="lcdifv2_csc_cm4" brief="This example demonstrates how to use the LCDIF v2 driver to do the YUV to RGB conversion. In this example, the frame buffer pixel format is YUV, the byte order in frame buffer is Y U Y V Y U Y V ... The LCDIV v2 converts the color internally and sends out RGB color to the panel." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lcdifv2" path="boards/evkbmimxrt1170/driver_examples/lcdifv2/csc/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/lcdifv2/csc/cm4" type="xml">
            <files mask="lcdifv2_csc_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lcdifv2_alpha_cm4" name="lcdifv2_alpha_cm4" brief="This example demonstrates how to use the LCDIF v2 layer blend feature. In this example, two layers are enabled. For each layer, a global alpha value 50% (128) is used. When the example runs, two rectangles are shown, one blue and one red, in the overlay region, the color is purple." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lcdifv2" path="boards/evkbmimxrt1170/driver_examples/lcdifv2/alpha/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/lcdifv2/alpha/cm4" type="xml">
            <files mask="lcdifv2_alpha_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_kpp_cm4" name="kpp_cm4" brief="The KPP Example project is a demonstration program that uses the KSDK software to manipulate the Keypad MATRIX.The example is use the continuous column and rows as 4*4 or 8*8 matrix to show the example." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/kpp" path="boards/evkbmimxrt1170/driver_examples/kpp/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/kpp/cm4" type="xml">
            <files mask="kpp_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_key_manager_cm4" name="key_manager_cm4" brief="The Key Manager example shows how to configure Key Manager to select PUF key as Master Key and locks this setting" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/key" path="boards/evkbmimxrt1170/driver_examples/key_manager/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/key_manager/cm4" type="xml">
            <files mask="key_manager_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_igpio_led_output_cm4" name="igpio_led_output_cm4" brief="The GPIO Example project is a demonstration program that uses the KSDK software to manipulate the general-purposeoutputs.The example is supported by the set, clear, and toggle write-only registers for each port output data register. The example take turns to shine the LED." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/gpio" path="boards/evkbmimxrt1170/driver_examples/gpio/led_output/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/gpio/led_output/cm4" type="xml">
            <files mask="igpio_led_output_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_igpio_input_interrupt_cm4" name="igpio_input_interrupt_cm4" brief="The GPIO Example project is a demonstration program that uses the KSDK software to manipulate the general-purposeoutputs.The example is supported by the set, clear registers for each GPIO pin output register. " toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/gpio" path="boards/evkbmimxrt1170/driver_examples/gpio/input_interrupt/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/gpio/input_interrupt/cm4" type="xml">
            <files mask="igpio_input_interrupt_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_gpt_timer_cm4" name="gpt_timer_cm4" brief="The gpt_timer project is a simple demonstration program of the SDK GPT driver. It sets up the GPThardware block to trigger a periodic interrupt after every 1 second. When the GPT interrupt is triggereda message a printed on the UART terminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/gpt" path="boards/evkbmimxrt1170/driver_examples/gpt/timer/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/gpt/timer/cm4" type="xml">
            <files mask="gpt_timer_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_gpt_compare_cm4" name="gpt_compare_cm4" brief="The gpt_compare project is a simple demonstration program of the SDK GPT driver's output compare feature. Once content of an OCRx matches the value in GPT_CNT, output compare timer pin is toggled." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/gpt" path="boards/evkbmimxrt1170/driver_examples/gpt/compare/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/gpt/compare/cm4" type="xml">
            <files mask="gpt_compare_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_fsl_romapi_cm4" name="fsl_romapi_cm4" brief="The fsl_romapi example shows how to use flexspi rom api In this example, rom api will send data and operate the external Nor flash connected with FLEXSPI. Some simple flash command willbe executed, such as Write Enable, Erase sector, Program page.Example will first erase the sector and program a page into the flash, at last check if the data in flash is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/fsl_romapi" path="boards/evkbmimxrt1170/driver_examples/fsl_romapi/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/fsl_romapi/cm4" type="xml">
            <files mask="fsl_romapi_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_flexspi_nor_polling_transfer_cm4" name="flexspi_nor_polling_transfer_cm4" brief="The flexspi_nor_polling_transfer example shows how to use flexspi driver with polling:In this example, flexspi will send data and operate the external Nor flash connected with FLEXSPI. Some simple flash command willbe executed, such as Write Enable, Erase sector, Program page.Example will first erase the sector and program a page into the flash, at last check if the data in flash is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexspi" path="boards/evkbmimxrt1170/driver_examples/flexspi/nor/polling_transfer/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/flexspi/nor/polling_transfer/cm4" type="xml">
            <files mask="flexspi_nor_polling_transfer_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_flexspi_nor_edma_transfer_cm4" name="flexspi_nor_edma_transfer_cm4" brief="The flexspi_nor_edma_transfer example shows how to use flexspi driver with dma:In this example, flexspi will send data and operate the external nor flash connected with FLEXSPI. Some simple flash command will be executed, such as Write Enable, Erase sector, Program page.Example will first erase the sector and program a page into the flash, at last check if the data in flash is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexspi" path="boards/evkbmimxrt1170/driver_examples/flexspi/nor/edma_transfer/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/flexspi/nor/edma_transfer/cm4" type="xml">
            <files mask="flexspi_nor_edma_transfer_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_flexio_uart_polling_transfer_cm4" name="flexio_uart_polling_transfer_cm4" brief="The flexio_uart_polling example shows how to use flexio uart driver in polling way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send backall characters that PC send to the board." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkbmimxrt1170/driver_examples/flexio/uart/polling_transfer/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/flexio/uart/polling_transfer/cm4" type="xml">
            <files mask="flexio_uart_polling_transfer_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_flexio_uart_interrupt_transfer_cm4" name="flexio_uart_interrupt_transfer_cm4" brief="The flexio_uart_interrupt example shows how to use flexio uart driver in interrupt way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send back all charactersthat PC send to the board. Note: two queued transfer in this example, so please input even number characters." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkbmimxrt1170/driver_examples/flexio/uart/interrupt_transfer/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/flexio/uart/interrupt_transfer/cm4" type="xml">
            <files mask="flexio_uart_interrupt_transfer_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_flexio_uart_int_rb_transfer_cm4" name="flexio_uart_int_rb_transfer_cm4" brief="The flexio_uart_interrupt_ring_buffer example shows how to use flexio uart driver in interrupt way withRX ring buffer enabled:In this example, a flexio simulated uart connect to PC through USB-Serial, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkbmimxrt1170/driver_examples/flexio/uart/int_rb_transfer/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/flexio/uart/int_rb_transfer/cm4" type="xml">
            <files mask="flexio_uart_int_rb_transfer_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_flexio_uart_edma_transfer_cm4" name="flexio_uart_edma_transfer_cm4" brief="The flexio_uart_edma example shows how to use flexio uart driver in edma way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send back all charactersthat PC send to the board." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkbmimxrt1170/driver_examples/flexio/uart/edma_transfer/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/flexio/uart/edma_transfer/cm4" type="xml">
            <files mask="flexio_uart_edma_transfer_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_flexio_spi_polling_lpspi_transfer_master_cm4" name="flexio_spi_polling_lpspi_transfer_master_cm4" brief="The flexio_spi_master_pooling_lpspi_slave example shows how to use flexio spi master driver in polling way. In this example, a flexio simulated master connect to a lpspi slave." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkbmimxrt1170/driver_examples/flexio/spi/polling_lpspi_transfer/master/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/flexio/spi/polling_lpspi_transfer/master/cm4" type="xml">
            <files mask="flexio_spi_polling_lpspi_transfer_master_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_flexio_spi_int_lpspi_transfer_slave_cm4" name="flexio_spi_int_lpspi_transfer_slave_cm4" brief="The flexio_spi_slave_interrupt_lpspi_master example shows how to use flexio spi slave driver in interrupt way. In this example, a flexio simulated slave connect to a lpspi master." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkbmimxrt1170/driver_examples/flexio/spi/int_lpspi_transfer/slave/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/flexio/spi/int_lpspi_transfer/slave/cm4" type="xml">
            <files mask="flexio_spi_int_lpspi_transfer_slave_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_flexio_spi_int_lpspi_transfer_master_cm4" name="flexio_spi_int_lpspi_transfer_master_cm4" brief="The flexio_spi_master_interrupt_lpspi_slave example shows how to use flexio spi master driver in interrupt way. In this example, a flexio simulated master connect to a lpspi slave ." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkbmimxrt1170/driver_examples/flexio/spi/int_lpspi_transfer/master/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/flexio/spi/int_lpspi_transfer/master/cm4" type="xml">
            <files mask="flexio_spi_int_lpspi_transfer_master_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_flexio_spi_edma_lpspi_transfer_slave_dynamic_cm4" name="flexio_spi_edma_lpspi_transfer_slave_dynamic_cm4" brief="The flexio_spi_slave_dynamic example shows how to use flexio spi slave driver in edma way, In this example, a flexio simulated slave connect to a lpspi master. The CS signal remains low during transfer, after master finishes the transfer and re-asserts the CS signal, interrupt is triggered to let user know." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkbmimxrt1170/driver_examples/flexio/spi/edma_lpspi_transfer/slave_dynamic/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/flexio/spi/edma_lpspi_transfer/slave_dynamic/cm4" type="xml">
            <files mask="flexio_spi_edma_lpspi_transfer_slave_dynamic_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_flexio_spi_edma_lpspi_transfer_slave_cm4" name="flexio_spi_edma_lpspi_transfer_slave_cm4" brief="The flexio_spi_slave_edma_lpspi_master example shows how to use flexio spi slave driver in edma way:In this example, a flexio simulated slave connect to a lpspi master." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkbmimxrt1170/driver_examples/flexio/spi/edma_lpspi_transfer/slave/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/flexio/spi/edma_lpspi_transfer/slave/cm4" type="xml">
            <files mask="flexio_spi_edma_lpspi_transfer_slave_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_flexio_spi_edma_lpspi_transfer_master_cm4" name="flexio_spi_edma_lpspi_transfer_master_cm4" brief="The flexio_spi_master_edma_lpspi_slave example shows how to use flexio spi master driver in edma way:In this example, a flexio simulated master connect to a lpspi slave ." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkbmimxrt1170/driver_examples/flexio/spi/edma_lpspi_transfer/master/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/flexio/spi/edma_lpspi_transfer/master/cm4" type="xml">
            <files mask="flexio_spi_edma_lpspi_transfer_master_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_flexio_pwm_cm4" name="flexio_pwm_cm4" brief="This demo describes how to use SDK drivers to implement the PWM feature by FLEXIO IP module. It outputs the PWM singal with fixed frequency defined by &quot;DEMO_FLEXIO_FREQUENCY&quot; in source code and dynamic duty from 99 to 1 to one of the FLEXIO pin." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkbmimxrt1170/driver_examples/flexio/pwm/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/flexio/pwm/cm4" type="xml">
            <files mask="flexio_pwm_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_flexio_i2s_interrupt_transfer_cm4" name="flexio_i2s_interrupt_transfer_cm4" brief="The flexio_i2s_interrupt example shows how to use flexio_i2s driver with interrupt:In this example, flexio acts as I2S module to record data from line-in line and playbacks the recorded data at the same time using interrupt." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkbmimxrt1170/driver_examples/flexio/i2s/interrupt_transfer/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/flexio/i2s/interrupt_transfer/cm4" type="xml">
            <files mask="flexio_i2s_interrupt_transfer_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_flexio_i2s_edma_transfer_cm4" name="flexio_i2s_edma_transfer_cm4" brief="The flexio_i2s_EDMA example shows how to use flexio_i2s driver with EDMA:In this example, flexio acts as I2S module to record data from line-in line and playbacks the recorded data at the same time using EDMA." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkbmimxrt1170/driver_examples/flexio/i2s/edma_transfer/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/flexio/i2s/edma_transfer/cm4" type="xml">
            <files mask="flexio_i2s_edma_transfer_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_flexio_i2c_interrupt_lpi2c_transfer_cm4" name="flexio_i2c_interrupt_lpi2c_transfer_cm4" brief="The flexio_lpi2c_interrupt example shows how to use flexio i2c master  driver in interrupt way:In this example, a flexio simulated i2c master connect to a LPI2C slave" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkbmimxrt1170/driver_examples/flexio/i2c/interrupt_lpi2c_transfer/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/flexio/i2c/interrupt_lpi2c_transfer/cm4" type="xml">
            <files mask="flexio_i2c_interrupt_lpi2c_transfer_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_flexcan_ping_pong_buffer_transfer_cm4" name="flexcan_ping_pong_buffer_transfer_cm4" brief="The flexcan_ping_pong_buffer_transfer example shows how to use the FlexCAN queue feature to create 2 simulate FIFOs that can receive CAN frames:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send CAN messages to Endpoint B(board B) when user input the number of CAN messages to be send in terminal. Endpoint B uses two receiving queues to receive messages in turn, and prints the message content and the receiving queue number to the terminal after any queue is full." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexcan" path="boards/evkbmimxrt1170/driver_examples/flexcan/ping_pong_buffer_transfer/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/flexcan/ping_pong_buffer_transfer/cm4" type="xml">
            <files mask="flexcan_ping_pong_buffer_transfer_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_flexcan_loopback_transfer_cm4" name="flexcan_loopback_transfer_cm4" brief="The flexcan_loopback example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrough internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexcan" path="boards/evkbmimxrt1170/driver_examples/flexcan/loopback_transfer/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/flexcan/loopback_transfer/cm4" type="xml">
            <files mask="flexcan_loopback_transfer_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_flexcan_loopback_cm4" name="flexcan_loopback_cm4" brief="The flexcan_loopback_functional example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrouth internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexcan" path="boards/evkbmimxrt1170/driver_examples/flexcan/loopback/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/flexcan/loopback/cm4" type="xml">
            <files mask="flexcan_loopback_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_flexcan_interrupt_transfer_cm4" name="flexcan_interrupt_transfer_cm4" brief="The flexcan_interrupt example shows how to use FlexCAN driver in none-blocking interrupt way:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send a CAN Message toEndpoint B(board B) when user press space key in terminal. Endpoint B receive the message, printthe message content to terminal and echo back the message. Endpoint A will increase the receivedmessage and waiting for the next transmission of the user initiated." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexcan" path="boards/evkbmimxrt1170/driver_examples/flexcan/interrupt_transfer/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/flexcan/interrupt_transfer/cm4" type="xml">
            <files mask="flexcan_interrupt_transfer_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_canfd_ping_pong_buffer_transfer_cm4" name="canfd_ping_pong_buffer_transfer_cm4" brief="The canfd_ping_pong_buffer_transfer example shows how to use the FlexCAN queue feature to create 2 simulate FIFOs that can receive CANFD frames:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send CANFD messages to Endpoint B(board B) when user input the number of CAN messages to be send in terminal. Endpoint B uses two receiving queues to receive messages in turn, and prints the message content and the receiving queue number to the terminal after any queue is full." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/canfd" path="boards/evkbmimxrt1170/driver_examples/canfd/ping_pong_buffer_transfer/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/canfd/ping_pong_buffer_transfer/cm4" type="xml">
            <files mask="canfd_ping_pong_buffer_transfer_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_canfd_loopback_transfer_cm4" name="canfd_loopback_transfer_cm4" brief="The canfd_loopback example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrough internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/canfd" path="boards/evkbmimxrt1170/driver_examples/canfd/loopback_transfer/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/canfd/loopback_transfer/cm4" type="xml">
            <files mask="canfd_loopback_transfer_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_canfd_loopback_cm4" name="canfd_loopback_cm4" brief="The canfd_loopback_functional example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrouth internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/canfd" path="boards/evkbmimxrt1170/driver_examples/canfd/loopback/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/canfd/loopback/cm4" type="xml">
            <files mask="canfd_loopback_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_canfd_interrupt_transfer_cm4" name="canfd_interrupt_transfer_cm4" brief="The canfd_interrupt example shows how to use FlexCAN driver in none-blocking interrupt way:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send a CAN Message toEndpoint B(board B) when user press space key in terminal. Endpoint B receive the message, printthe message content to terminal and echo back the message. Endpoint A will increase the receivedmessage and waiting for the next transmission of the user initiated." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/canfd" path="boards/evkbmimxrt1170/driver_examples/canfd/interrupt_transfer/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/canfd/interrupt_transfer/cm4" type="xml">
            <files mask="canfd_interrupt_transfer_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_ewm_cm4" name="ewm_cm4" brief="The EWM Example project is to demonstrate usage of the KSDK EWM driver.In the example, EWM counter is continuously refreshed until button is pressed.Once the button is pressed, EWM counter will expire and interrupt will be generated.After the first pressing, another interrupt can be triggered by pressing button again." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/ewm" path="boards/evkbmimxrt1170/driver_examples/ewm/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/ewm/cm4" type="xml">
            <files mask="ewm_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_enet_qos_txrx_ptp1588_transfer_cm4" name="enet_qos_txrx_ptp1588_transfer_cm4" brief="The example shows the way to use ENET QOS driver to receive and transmit frame in the 1588 feature required cases.1. This example shows how to initialize the ENET_QOS.2. How to get the time stamp of the PTP 1588 timer.3. How to use Get the ENET_QOS transmit and receive frame time stamp.The example transmits 20 number PTP event frame, shows the timestamp of the transmitted frame.The length, source MAC address and destination MAC address of the received frame will be print. The time stamp of the received timestamp will be print when the PTP message frame is received(the outside loopback cable can be used to see the right rx time-stamping log since we send the ptp message). " toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/enet_qos" path="boards/evkbmimxrt1170/driver_examples/enet_qos/txrx_ptp1588_transfer/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/enet_qos/txrx_ptp1588_transfer/cm4" type="xml">
            <files mask="enet_qos_txrx_ptp1588_transfer_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_enet_qos_txrx_multiring_transfer_cm4" name="enet_qos_txrx_multiring_transfer_cm4" brief="The example shows the way to use ENET QOS driver to receive and transmit frames supported multi-ring platforms. this example is only supported in multi-ring platform. 1. This example shows how to initialize the ENET MAC. 2. How to use ENET MAC to transmit frames in avb supported multiple-ring platforms. The example transmits 20 number frames. For simple demo, we create frames with some special definition. 1. Build transmission frames with broadcast mac address. 2. Build frames with unicast mac address 3. Send broadcast frames to ring 0 and unitcase frames to ring 1, then receive them back in associated rings." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/enet_qos" path="boards/evkbmimxrt1170/driver_examples/enet_qos/txrx_multiring_transfer/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/enet_qos/txrx_multiring_transfer/cm4" type="xml">
            <files mask="enet_qos_txrx_multiring_transfer_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_enet_1g_txrx_multiring_transfer_cm4" name="enet_1g_txrx_multiring_transfer_cm4" brief="The enet_1g_txrx_multiring_transfer example shows the way to use ENET_1G driver to receive and transmit avb frame in the avb feature supported multi-ring platforms. this example is only supported in multi-ring platform.1. This example shows how to initialize the ENET_1G MAC.2. How to use ENET_1G MAC to transmit frames in avb supported multiple-ring platforms.The example transmits 30 number frames. For simple demo, we create frames with some special definition.1. Build transmission frames with broadcast mac address.2. Build different frames for each ring: 10 normal ethernet frame, 10 similar IEC 61883-6 type frames,10 similar IEC 61883-8 type frames and the two IEC 1722 avb frames are set with different vlan priority. Notice, To simply show how to use three different rings in rx/tx on one board. This example set PHY local loop and you will see there will be PHY init auto-negotiation fail and this is normal. because phy can not finishauto-negotiation when phy is in loop back mode. However, the auto-negotiation fail has no impact on this loop back example, so just forget about the failure auto-negotiation." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/enet_1g" path="boards/evkbmimxrt1170/driver_examples/enet_1g/txrx_multiring_transfer/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/enet_1g/txrx_multiring_transfer/cm4" type="xml">
            <files mask="enet_1g_txrx_multiring_transfer_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_enet_txrx_transfer_cm4" name="enet_txrx_transfer_cm4" brief="The enet_rxtx example shows the simplest way to use ENET driver for simple frame receive and transmit.1. This example shows how to initialize the ENET MAC.2. How to use ENET MAC to receive and transmit frame.The example transmits 20 number broadcast frame, print the frame length, source MAC addressand destination MAC address when receive frame.Note, The RMII mode is used for default setting to initialize the ENET interface between MAC and the external PHY. youcan change it to MII mode as you wish. Please make sure the MII Mode setting in the MAC is synchronize to the settingin TWR-SERIAL board for the external PHY." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/enet" path="boards/evkbmimxrt1170/driver_examples/enet/txrx_transfer/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/enet/txrx_transfer/cm4" type="xml">
            <files mask="enet_txrx_transfer_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_enet_txrx_ptp1588_transfer_cm4" name="enet_txrx_ptp1588_transfer_cm4" brief="The enet_rxtx_ptp1588 example shows the way to use ENET driver to receive and transmit frame in the 1588 feature required cases.1. This example shows how to initialize the ENET MAC.2. How to use ENET MAC to receive and transmit frame.3. How to add to the multicast group to receive PTP 1588 message.4. How to get the time stamp of the PTP 1588 timer.4. How to use Get the ENET transmit and receive frame time stamp.The example transmits 20 number PTP event frame, shows the timestamp of the transmitted frame.The length, source MAC address and destination MAC address of the received frame will be print. The time stamp of the received timestamp will be print when the PTP message frame is received. Note, The RMII mode is used for default setting to initialize the ENET interface between MAC and the external PHY. you can change it to MII mode as you wish. Please make sure the MII Mode setting in the MAC is synchronize to the settingin TWR-SERIAL board for the external PHY." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/enet" path="boards/evkbmimxrt1170/driver_examples/enet/txrx_ptp1588_transfer/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/enet/txrx_ptp1588_transfer/cm4" type="xml">
            <files mask="enet_txrx_ptp1588_transfer_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_enc_index_interrupt_cm4" name="enc_index_interrupt_cm4" brief="The enc_index_interrupt example shows how to use the interrupt of ENC module with ENC driver.In this example, user needs to connect a real encoder to the board. Actually, only PHASE A and PHASE B are enough for the basic application. However, the additional INDEX/HOME/TRIGGER could be used as the event detector. INDEX: This pulse can optionally reset the position counter and the pulse accumulator of the quadrature decoder module. It also causes a change of state on the revolution counter. The direction of this change, increment or decrement, is calculated from the PHASEA and PHASEB inputs.HOME: This input can be used to trigger the initialization of the position counters. Often this signal is connected to a sensor signalling the motor or machine, sending notification that it has reached a defined home position.TRIGGER: This input can be used to clear the position counters or to take a snapshot of the POS, REV, and POSD registers. Often this signal is connected to a periodic pulse generator or timer to indicate an elapsed time period.This example uses INDEX to response the external event. When running the project, user can turn the encoder so that ENC module can monitor the position change. Also, a variable counter would count the time of INDEX interrupt for rising edge on INDEX signal line." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/enc" path="boards/evkbmimxrt1170/driver_examples/enc/index_interrupt/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/enc/index_interrupt/cm4" type="xml">
            <files mask="enc_index_interrupt_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_enc_basic_cm4" name="enc_basic_cm4" brief="The enc_basic example shows how to quickly start using ENC driver.In this example, user needs to connect a real encoder to the board. Actually, only PHASE A and PHASE B are enough for the basic application. When running the project, user can turn the encoder so that ENC module can monitor the position change. Then, the internal counter would also count for the position. User can also type keys into terminal, and the current position values recorded by ENC would display. The ENC hardware is created with a special synchronize mechanism. There are actually 4 counters (the 32-bit position counter is combined with the two 16-bit counter registers) for position with responding hold registers. When any of the counter registers is read, the contents of each counter register is written to the corresponding hold register. Taking a snapshot of the counters' values provides a consistent view of a system position and a velocity to be attained." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/enc" path="boards/evkbmimxrt1170/driver_examples/enc/basic/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/enc/basic/cm4" type="xml">
            <files mask="enc_basic_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_elcdif_rgb_cm4" name="elcdif_rgb_cm4" brief="The ELCDIF RGB project shows how to drive the RGB interface LCD using eLCDIF driver.If this example runs correctly, a rectangle is moving in the screen, and the colorchanges every time it reaches the edges of the screen.The rectangle moving speed might be different with Debug target and Release target,because these two targets spend different time to fill the frame buffer." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/elcdif" path="boards/evkbmimxrt1170/driver_examples/elcdif/rgb/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/elcdif/rgb/cm4" type="xml">
            <files mask="elcdif_rgb_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_elcdif_lut_cm4" name="elcdif_lut_cm4" brief="The ELCDIF LUT project shows how to use the ELCDIF LUT to convert 8-bit input pixelto 24-bit output pixel. There are two LUT memories, this project uses one inputframe buffer, and swithes between the two memories, so from the LCD panel, twodifferent pictures are shown one by one." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/elcdif/lut" path="boards/evkbmimxrt1170/driver_examples/elcdif/lut/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/elcdif/lut/cm4" type="xml">
            <files mask="elcdif_lut_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_edma_wrap_transfer_cm4" name="edma_wrap_transfer_cm4" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/edma" path="boards/evkbmimxrt1170/driver_examples/edma/wrap_transfer/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/edma/wrap_transfer/cm4" type="xml">
            <files mask="edma_wrap_transfer_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_edma_scatter_gather_cm4" name="edma_scatter_gather_cm4" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/edma" path="boards/evkbmimxrt1170/driver_examples/edma/scatter_gather/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/edma/scatter_gather/cm4" type="xml">
            <files mask="edma_scatter_gather_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_edma_ping_pong_transfer_cm4" name="edma_ping_pong_transfer_cm4" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/edma" path="boards/evkbmimxrt1170/driver_examples/edma/ping_pong_transfer/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/edma/ping_pong_transfer/cm4" type="xml">
            <files mask="edma_ping_pong_transfer_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_edma_memory_to_memory_cm4" name="edma_memory_to_memory_cm4" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/edma" path="boards/evkbmimxrt1170/driver_examples/edma/memory_to_memory/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/edma/memory_to_memory/cm4" type="xml">
            <files mask="edma_memory_to_memory_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_edma_interleave_transfer_cm4" name="edma_interleave_transfer_cm4" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/edma" path="boards/evkbmimxrt1170/driver_examples/edma/interleave_transfer/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/edma/interleave_transfer/cm4" type="xml">
            <files mask="edma_interleave_transfer_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_edma_channel_link_cm4" name="edma_channel_link_cm4" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/edma" path="boards/evkbmimxrt1170/driver_examples/edma/channel_link/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/edma/channel_link/cm4" type="xml">
            <files mask="edma_channel_link_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dcic_cm4" name="dcic_cm4" brief="This example shows how to use DCIC to monitor the display content integrity." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/dcic" path="boards/evkbmimxrt1170/driver_examples/dcic/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/dcic/cm4" type="xml">
            <files mask="dcic_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dac12_fifo_interrupt_cm4" name="dac12_fifo_interrupt_cm4" brief="The dac12_fifo_interrupt example shows how to use DAC12 FIFO interrupt.When the DAC12 FIFO watermark interrupt is enabled firstly, the application would enter the DAC12 ISR immediately, since remaining FIFO data is less than the watermark. Then the FIFO would be feed inside the ISR. Then the DAC12 interrupt could be restrained. Once the DAC12 FIFO is triggered in while loop, the data in FIFO is read out, then it becomes less than the watermark, so the FIFO would be feed again in DAC12 ISR. With this example, user can define the DAC12 output array to generate the different wave output. Also the software trigger can be called in some timer ISR so that the DAC12 would output the analog signal in indicated period. Or even use the hardware trigger to release the CPU." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/dac12" path="boards/evkbmimxrt1170/driver_examples/dac12/fifo_interrupt/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/dac12/fifo_interrupt/cm4" type="xml">
            <files mask="dac12_fifo_interrupt_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dac12_basic_cm4" name="dac12_basic_cm4" brief="The dac12_basic example shows how to use DAC12 module simply as the general DAC12 converter.When the DAC12's fifo feature is not enabled, Any write to the DATA register will replace thedata in the buffer and push data to analog conversion without trigger support.In this example, it gets the value from terminal,outputs the DAC12 output voltage through DAC12 output pin." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/dac12" path="boards/evkbmimxrt1170/driver_examples/dac12/basic/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/dac12/basic/cm4" type="xml">
            <files mask="dac12_basic_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_csi_mipi_yuv_cm4" name="csi_mipi_yuv_cm4" brief="This project shows how to use the CSI with MIPI_CSI. In this example, the camera device output pixel format is YUYV, the MIPI_CSI converts it to YUV internally and sends to CSI. In other words, the CSI input data bus width is 24-bit. The CSI saves the frame as 32-bit format XYUV8888. PXP is used to convert the XYUV to RGB565 and show in the LCD panel." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/csi" path="boards/evkbmimxrt1170/driver_examples/csi/mipi_yuv/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/csi/mipi_yuv/cm4" type="xml">
            <files mask="csi_mipi_yuv_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_csi_mipi_rgb_cm4" name="csi_mipi_rgb_cm4" brief="This project shows how to use the CSI with MIPI_CSI. In this example, the camera device output pixel format is RGB565, the MIPI_CSI converts it to RGB888 internally and sends to CSI. In other words, the CSI input data bus width is 24-bit. The CSI saves the frame as 32-bit format XRGB8888. PXP is used to convert the XRGB8888 to RGB565 and shown in the LCD panel." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/csi" path="boards/evkbmimxrt1170/driver_examples/csi/mipi_rgb/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/csi/mipi_rgb/cm4" type="xml">
            <files mask="csi_mipi_rgb_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_cache_cm4" name="cache_cm4" brief="The cache example shows how to use memory cache driver.In this example, many memory (such as SDRAM, etc) and DMA will be used to show the example.Those memory is both accessible for cpu and DMA. For the memory data alignment, cache driver should be used rightly. For cache enabled case, the cache invalidate operation should be done before cpu access the memory. The cache clean opeartion should be done after CPU verify the memorymemory and before DMA access the memory." toolchain="armgcc iar mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/cache" path="boards/evkbmimxrt1170/driver_examples/cache/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/cache/cm4" type="xml">
            <files mask="cache_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_caam_cm4" name="caam_cm4" brief="The CAAM Example project is a demonstration program that uses the KSDK software to encrypt plain textand decrypt it back using AES algorithm. CBC and GCM modes are demonstrated.The symmetric key is generated at random, using CAAM's random number generator." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/caam" path="boards/evkbmimxrt1170/driver_examples/caam/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/caam/cm4" type="xml">
            <files mask="caam_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpadc_etc_software_trigger_conv_cm4" name="lpadc_etc_software_trigger_conv_cm4" brief="The adc_etc_software_trigger_conv example shows how to use the ADC_ETC to generate a ADC trigger by software trigger.In this example, the ADC is configured with hardware trigger. Once ADC gets the trigger from the ADC_ETC, the conversion goes,then the ADC_ETC ISR would be executed." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/adc_etc" path="boards/evkbmimxrt1170/driver_examples/adc_etc/adc_etc_software_trigger_conv/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/adc_etc/adc_etc_software_trigger_conv/cm4" type="xml">
            <files mask="lpadc_etc_software_trigger_conv_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpadc_etc_hardware_trigger_conv_cm4" name="lpadc_etc_hardware_trigger_conv_cm4" brief="The adc_etc_software_trigger_conv example shows how to use the ADC_ETC to generate a ADC trigger by PIT channel0 trigger.Every 1 second, PIT channel0 would send a trigger signal to ADC_ETC, which can arbitrate and manage multiple external triggers,and ADC_ETC would generate ADC trigger.In this example, the ADC is configured with hardware trigger. Once ADC gets the trigger from the ADC_ETC, the conversion goes,then the ADC_ETC ISR would be executed." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/adc_etc" path="boards/evkbmimxrt1170/driver_examples/adc_etc/adc_etc_hardware_trigger_conv/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/adc_etc/adc_etc_hardware_trigger_conv/cm4" type="xml">
            <files mask="lpadc_etc_hardware_trigger_conv_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_acmp_polling_print_cm4" name="acmp_polling_print_cm4" brief="The ACMP Polling project is a simple demonstration program that uses the SDK software. It comparesthe selected analog input with ACMP internal DAC output continuously and toggle the LED when thefinal comparison result changed. The purpose of this demo is to show how to use the ACMP driverin SDK software by polling way. The ACMP can be configured based on default configuration returnedby the API ACMP_GetDefaultConfig(). The default configuration is: high speed is not enabled, invertoutput is not enabled, unfiltered output is not enabled, pin out is not enabled, offset level islevel 0, hysteresis level is level 0." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/acmp" path="boards/evkbmimxrt1170/driver_examples/acmp/polling/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/acmp/polling/cm4" type="xml">
            <files mask="acmp_polling_print_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_acmp_interrupt_print_cm4" name="acmp_interrupt_print_cm4" brief="The ACMP Interrupt project is a simple demonstration program that uses the SDK software. Itcompares the selected analog input with ACMP internal DAC output continuously and toggle the LEDwhen the final comparison result changed. The purpose of this demo is to show how to use theACMP driver in SDK software by interrupt way. The ACMP can be configured based on defaultconfiguration returned by the API ACMP_GetDefaultConfig(). The default configuration is: highspeed is not enabled, invert output is not enabled, unfiltered output is not enabled, pin outis not enabled, offset level is level 0, hysteresis level is level 0." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/acmp" path="boards/evkbmimxrt1170/driver_examples/acmp/interrupt/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/acmp/interrupt/cm4" type="xml">
            <files mask="acmp_interrupt_print_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_puf_cm4" name="puf_cm4" brief="This driver example project demonstrates how to use driver for the PUF controller which provides a secure key storage." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/puf" path="boards/evkbmimxrt1170/driver_examples/puf/cm4">
          <external path="boards/evkbmimxrt1170/driver_examples/puf/cm4" type="xml">
            <files mask="puf_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_xbar_aoi_cm4" name="xbar_aoi_cm4" brief="The XBAR AOI demo application demonstrates the usage of the XBAR, AOI peripheral to combine interruptfrom CMP and PIT. If the button is pressed(CMP interrupt) and the PIT periodic interrupt occurs a message is printed." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkbmimxrt1170/demo_apps/xbar_aoi/cm4">
          <external path="boards/evkbmimxrt1170/demo_apps/xbar_aoi/cm4" type="xml">
            <files mask="xbar_aoi_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_tee_fault_core1" name="tee_fault_core1" brief="This example shows how to use the MCUXpresso Config Tools TEE tool." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps/tee_fault" path="boards/evkbmimxrt1170/demo_apps/tee_fault/core1">
          <external path="boards/evkbmimxrt1170/demo_apps/tee_fault/core1" type="xml">
            <files mask="tee_fault_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_shell_cm4" name="shell_cm4" brief="The Shell Demo application demonstrates to control Leds by commands." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkbmimxrt1170/demo_apps/shell/cm4">
          <external path="boards/evkbmimxrt1170/demo_apps/shell/cm4" type="xml">
            <files mask="shell_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_sai_cm4" name="sai_cm4" brief="The SAI Demo application demonstrates complicated digital audio playback and record case. The demo provide these features below:1. Duplex audio transfer, record and playback at same time.2. Playback a 250 Hz sine wave data generated by CMSIS-DSP library. Also compute the fundamental frequency using Fast Fourier Transform with CMSIS-DSP library.3. Record a 5 seconds audio to sdcard with a FatFs system. After record, playback it. This feature may only existed in platform which support sdhc." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkbmimxrt1170/demo_apps/sai/cm4">
          <external path="boards/evkbmimxrt1170/demo_apps/sai/cm4" type="xml">
            <files mask="sai_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_new_project_cm4" name="new_project_cm4" brief="The new project is provided as starting point for user to add with customized flow." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkbmimxrt1170/demo_apps/new_project/cm4">
          <external path="boards/evkbmimxrt1170/demo_apps/new_project/cm4" type="xml">
            <files mask="new_project_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_nand_flash_management_cm4" name="nand_flash_management_cm4" brief="nand flash management" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps/nand_flash_management/semc" path="boards/evkbmimxrt1170/demo_apps/nand_flash_management/semc/cm4">
          <external path="boards/evkbmimxrt1170/demo_apps/nand_flash_management/semc/cm4" type="xml">
            <files mask="nand_flash_management_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpadc_high_sample_rate_sample_signal_cm4" name="lpadc_high_sample_rate_sample_signal_cm4" brief="This demo application demonstrates the use of the LPADC to sample the analog signal. In this demo, the ADC clock is set as the maximum frequency, users should input analog signals to the ADC channel, press any keys to trigger the ADC conversion. After sampling enough sample points, the ADC will be disabled and the sample data will be print via UART. Users can use some tools such as EXCEL to recover the input signal based on those printed data." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkbmimxrt1170/demo_apps/lpadc_high_sample_rate/sample_signal/cm4">
          <external path="boards/evkbmimxrt1170/demo_apps/lpadc_high_sample_rate/sample_signal/cm4" type="xml">
            <files mask="lpadc_high_sample_rate_sample_signal_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpadc_sample_rate_count_cm4" name="lpadc_sample_rate_count_cm4" brief="The lpadc sample rate count demo application can be used to measure ADC's sample rate roughly. The sample rate for an ADC is defined as the number of output samples available per unit time, and is specified as samples per second(SPS). The sample rate is the reciprocal of one sample total conversion time. Total conversion time = sampling time + compare time In this demo, users can select sample time, and the compare time is fixed to 17.5 ADC clock cycles. In this demo the ADC conversion clock is configured as the maximum frequency(Please refer the datasheet for the maximim value). So theoretically, sample rate = maximum frequency / total conversion time." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkbmimxrt1170/demo_apps/lpadc_high_sample_rate/sample_rate_count/cm4">
          <external path="boards/evkbmimxrt1170/demo_apps/lpadc_high_sample_rate/sample_rate_count/cm4" type="xml">
            <files mask="lpadc_sample_rate_count_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_iled_blinky_cm4" name="iled_blinky_cm4" brief="The LED Blinky demo application provides a sanity check for the new SDK build environments and board bring up. The LED Blinky demo uses the systick interrupt to realize the function of timing delay. The example takes turns to shine the LED. The purpose of this demo is to provide a simple project for debugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkbmimxrt1170/demo_apps/led_blinky/cm4">
          <external path="boards/evkbmimxrt1170/demo_apps/led_blinky/cm4" type="xml">
            <files mask="iled_blinky_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_iee_apc_cm4" name="iee_apc_cm4" brief="The IEE APC demo application demonstrates usage of the IEE and IEE APC driver. The Inline Encryption Engine (IEE) together with IEE APC provides a means to perform inline encryption and decryption of information transferred over memory interfaces. This demo application configures region 0 to perform AES XTS encryption and decryption while region 1 to perform AES-CTR decryption from external QSPI FLASH memory. Then data are written into RAM memory (region 0), after that encryption is disabled and encrypted data read. After the successful read, encryption is enabled and memory read again to see that data matches the original written value. Another encrypted data are programmed into FLASH memory (region 1) and after encryption is enabled data are read and compared with expected data." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkbmimxrt1170/demo_apps/iee_apc/cm4">
          <external path="boards/evkbmimxrt1170/demo_apps/iee_apc/cm4" type="xml">
            <files mask="iee_apc_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_hello_world_virtual_com_cm4" name="hello_world_virtual_com_cm4" brief="Hello World Virtual Com demonstrates the use of virtual com to print the &quot;Hello World&quot; string to the terminal. Different with Hello World demo (a HW UART peripheral is used to transmit data), the demo transmits data based on a serial port simulated by the USB device stack on target board side via USB peripheral. The purpose of this demo is to demonstrate how to use virtual com and provide a simple project for debugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkbmimxrt1170/demo_apps/hello_world_virtual_com/cm4">
          <external path="boards/evkbmimxrt1170/demo_apps/hello_world_virtual_com/cm4" type="xml">
            <files mask="hello_world_virtual_com_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_hello_world_secondary_core_boot_secondary_core_cm4" name="hello_world_secondary_core_boot_secondary_core_cm4" brief="The hello_world_secondary_core_boot demo use cm4 core to prints the &quot;Hello World&quot; string to the terminal using the SDK UART drivers and repeat what user input. The purpose of this demo is to show how to use cm7 core to kick off cm4 core, and to provide developers a method cm4 core can be booted by POR way." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkbmimxrt1170/demo_apps/hello_world_secondary_core_boot/cm4">
          <external path="boards/evkbmimxrt1170/demo_apps/hello_world_secondary_core_boot/cm4" type="xml">
            <files mask="hello_world_secondary_core_boot_secondary_core_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_hello_world_cm4" name="hello_world_cm4" brief="The HelloWorld demo prints the &quot;Hello World&quot; string to the terminal using the SDK UART drivers and repeat what user input. The purpose of this demo is to show how to use the UART, and to provide a simple project for debugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkbmimxrt1170/demo_apps/hello_world/cm4">
          <external path="boards/evkbmimxrt1170/demo_apps/hello_world/cm4" type="xml">
            <files mask="hello_world_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_host_hid_mouse_freertos_cm4" name="host_hid_mouse_freertos_cm4" brief="The application supports the mouse device. It prints the mouse operation when the mouse device is attached." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_host_hid_mouse/freertos/cm4">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_host_hid_mouse/freertos/cm4" type="xml">
            <files mask="host_hid_mouse_freertos_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_host_hid_mouse_bm_cm4" name="host_hid_mouse_bm_cm4" brief="The application supports the mouse device. It prints the mouse operation when the mouse device is attached." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_host_hid_mouse/bm/cm4">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_host_hid_mouse/bm/cm4" type="xml">
            <files mask="host_hid_mouse_bm_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_hid_mouse_lite_bm_cm4" name="dev_hid_mouse_lite_bm_cm4" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_hid_mouse_lite/bm/cm4">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_hid_mouse_lite/bm/cm4" type="xml">
            <files mask="dev_hid_mouse_lite_bm_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_hid_mouse_freertos_cm4" name="dev_hid_mouse_freertos_cm4" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_hid_mouse/freertos/cm4">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_hid_mouse/freertos/cm4" type="xml">
            <files mask="dev_hid_mouse_freertos_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_hid_mouse_bm_cm4" name="dev_hid_mouse_bm_cm4" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_hid_mouse/bm/cm4">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_hid_mouse/bm/cm4" type="xml">
            <files mask="dev_hid_mouse_bm_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_fmstr_example_uart_cm4" name="fmstr_example_uart_cm4" brief="FreeMASTER example using Serial-UART communication with the target microcontroller. This example application demonstrates use of FreeMASTER tool to visualize internal variables and to control the application flow by modifying variables. The application also shows use of advanced FreeMASTER features like TSA tables and Pipes." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="FreeMASTER_examples" path="boards/evkbmimxrt1170/freemaster_examples/fmstr_uart/cm4">
          <external path="boards/evkbmimxrt1170/freemaster_examples/fmstr_uart/cm4" type="xml">
            <files mask="fmstr_example_uart_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_fmstr_example_net_cm4" name="fmstr_example_net_cm4" brief="FreeMASTER example using TCP/UDP socket communication with the target microcontroller. This example application demonstrates use of FreeMASTER tool to visualize internal variables and to control the application flow by modifying variables. The application also shows use of advanced FreeMASTER features like TSA tables and Pipes." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="FreeMASTER_examples" path="boards/evkbmimxrt1170/freemaster_examples/fmstr_net/cm4">
          <external path="boards/evkbmimxrt1170/freemaster_examples/fmstr_net/cm4" type="xml">
            <files mask="fmstr_example_net_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_fmstr_example_can_cm4" name="fmstr_example_can_cm4" brief="FreeMASTER example using the CAN bus to communicate with target microcontroller. This example application demonstrates use of FreeMASTER tool to visualize internal variables and to control the application flow by modifying variables. The application also shows use of advanced FreeMASTER features like TSA tables and Pipes." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="FreeMASTER_examples" path="boards/evkbmimxrt1170/freemaster_examples/fmstr_can/cm4">
          <external path="boards/evkbmimxrt1170/freemaster_examples/fmstr_can/cm4" type="xml">
            <files mask="fmstr_example_can_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lvgl_demo_benchmark_cm4" name="lvgl_demo_benchmark_cm4" brief="A demo application runs different functions for benchmark test." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lvgl_examples" path="boards/evkbmimxrt1170/lvgl_examples/lvgl_demo_benchmark/cm4">
          <external path="boards/evkbmimxrt1170/lvgl_examples/lvgl_demo_benchmark/cm4" type="xml">
            <files mask="lvgl_demo_benchmark_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lvgl_demo_benchmark_bm_cm4" name="lvgl_demo_benchmark_bm_cm4" brief="A demo application runs different functions for benchmark test." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lvgl_examples" path="boards/evkbmimxrt1170/lvgl_examples/lvgl_demo_benchmark_bm/cm4">
          <external path="boards/evkbmimxrt1170/lvgl_examples/lvgl_demo_benchmark_bm/cm4" type="xml">
            <files mask="lvgl_demo_benchmark_bm_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lvgl_demo_widgets_cm4" name="lvgl_demo_widgets_cm4" brief="A demo application to show lvgl widgets." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lvgl_examples" path="boards/evkbmimxrt1170/lvgl_examples/lvgl_demo_widgets/cm4">
          <external path="boards/evkbmimxrt1170/lvgl_examples/lvgl_demo_widgets/cm4" type="xml">
            <files mask="lvgl_demo_widgets_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lvgl_demo_widgets_bm_cm4" name="lvgl_demo_widgets_bm_cm4" brief="A demo application to show lvgl widgets." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lvgl_examples" path="boards/evkbmimxrt1170/lvgl_examples/lvgl_demo_widgets_bm/cm4">
          <external path="boards/evkbmimxrt1170/lvgl_examples/lvgl_demo_widgets_bm/cm4" type="xml">
            <files mask="lvgl_demo_widgets_bm_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lvgl_guider_cm4" name="lvgl_guider_cm4" brief="LittleVGL project used with GUI Guider." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lvgl_examples" path="boards/evkbmimxrt1170/lvgl_examples/lvgl_guider/cm4">
          <external path="boards/evkbmimxrt1170/lvgl_examples/lvgl_guider/cm4" type="xml">
            <files mask="lvgl_guider_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lvgl_guider_bm_cm4" name="lvgl_guider_bm_cm4" brief="LVGL project used with GUI Guider on baremetal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lvgl_examples" path="boards/evkbmimxrt1170/lvgl_examples/lvgl_guider_bm/cm4">
          <external path="boards/evkbmimxrt1170/lvgl_examples/lvgl_guider_bm/cm4" type="xml">
            <files mask="lvgl_guider_bm_cm4_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_power_mode_switch_bm_dcdc_rt1xxx_core1" name="power_mode_switch_bm_dcdc_rt1xxx_core1" brief="The Power mode switch demo application demonstrates the use of power modes in the KSDK. The demo prints the power mode menuthrough the debug console, where the user can set the MCU to a specific power mode. The user can also set the wakeup source by following the debug console prompts. The purpose of this demo is to show how to switch between different power modes, and how to configure a wakeup source and wakeup the MCU from low power modes. Tips: This demo is to show how the various power mode can switch to each other. However, in actual low power use case, to save energy and reduce the consumption even more, many things can be done including: - Disable the clock for unnecessary module during low power mode. That means, programmer can disable the clocks before entering the low power mode and re-enable them after exiting the low power mode when necessary. - Disable the function for unnecessary part of a module when other part would keep working in low power mode. At the most time, more powerful function means more power consumption. For example, disable the digital function for the unnecessary pin mux, and so on. - Set the proper pin state (direction and logic level) according to the actual application hardware. Otherwise, the pin cirrent would be activied unexpectedly waste some energy. - Other low power consideration based on the actual application hardware. - Debug pins(e.g SWD_DIO) would consume additional power, had better to disable related pins or disconnect them. " toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkbmimxrt1170/demo_apps/power_mode_switch/bm_dcdc/core1">
          <external path="boards/evkbmimxrt1170/demo_apps/power_mode_switch/bm_dcdc/core1" type="xml">
            <files mask="power_mode_switch_bm_dcdc_rt1xxx_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_power_mode_switch_bm_pmic_rt1xxx_core1" name="power_mode_switch_bm_pmic_rt1xxx_core1" brief="The Power mode switch demo application demonstrates the use of power modes and pf5020 in the KSDK. Different from power_mode_switch_bm_pmic demo, this demo uses external PMIC(PF5020) as the power supply, so on-chip pmic is disabled in this demo. The external PMIC support standby mode which can work with chip PMIC_STBY_REQ signal to switch PMIC output in the hardware method. " toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkbmimxrt1170/demo_apps/power_mode_switch/bm_pmic/core1">
          <external path="boards/evkbmimxrt1170/demo_apps/power_mode_switch/bm_pmic/core1" type="xml">
            <files mask="power_mode_switch_bm_pmic_rt1xxx_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_power_manager_test_asymmetric_multiCore_bm_core1" name="power_manager_test_asymmetric_multiCore_bm_core1" brief="This example demonstrates the basic usage of the Power Manager framework for asymmetric multicore platforms." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkbmimxrt1170/demo_apps/power_manager_test/multiCore_bm/core1">
          <external path="boards/evkbmimxrt1170/demo_apps/power_manager_test/multiCore_bm/core1" type="xml">
            <files mask="power_manager_test_asymmetric_multiCore_bm_core1_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_el2go_agent_cm7" name="el2go_agent_cm7" brief="The EL2GO Agent Demo examples allow user to connect to EL2GO and provision secure objects to the chip" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="el2go_examples" path="boards/evkbmimxrt1170/el2go_examples/el2go_agent/cm7">
          <external path="boards/evkbmimxrt1170/el2go_examples/el2go_agent/cm7" type="xml">
            <files mask="el2go_agent_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_littlefs_shell_cm7" name="littlefs_shell_cm7" brief="Demonstrates littlefs functionality by commands executed from shell." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="littlefs_examples" path="boards/evkbmimxrt1170/littlefs_examples/littlefs_shell/cm7">
          <external path="boards/evkbmimxrt1170/littlefs_examples/littlefs_shell/cm7" type="xml">
            <files mask="littlefs_shell_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_maestro_usb_speaker" name="maestro_usb_speaker" brief="Audio maestro framework USB speaker example." toolchain="armgcc iar mcuxpresso" compiler="compiler_gcc compiler_iar" category="audio_examples" path="boards/evkbmimxrt1170/audio_examples/maestro_usb_speaker/cm7">
          <external path="boards/evkbmimxrt1170/audio_examples/maestro_usb_speaker/cm7" type="xml">
            <files mask="maestro_usb_speaker_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_maestro_usb_mic" name="maestro_usb_mic" brief="Audio maestro framework USB microphone example." toolchain="armgcc iar mcuxpresso" compiler="compiler_gcc compiler_iar" category="audio_examples" path="boards/evkbmimxrt1170/audio_examples/maestro_usb_mic/cm7">
          <external path="boards/evkbmimxrt1170/audio_examples/maestro_usb_mic/cm7" type="xml">
            <files mask="maestro_usb_mic_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_maestro_sync" name="maestro_sync" brief="Audio maestro framework demo example." toolchain="armgcc mcuxpresso" compiler="compiler_gcc" category="audio_examples" path="boards/evkbmimxrt1170/audio_examples/maestro_sync/cm7">
          <external path="boards/evkbmimxrt1170/audio_examples/maestro_sync/cm7" type="xml">
            <files mask="maestro_sync_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_maestro_record" name="maestro_record" brief="Audio maestro framework demo example." toolchain="armgcc iar mcuxpresso" compiler="compiler_gcc compiler_iar" category="audio_examples" path="boards/evkbmimxrt1170/audio_examples/maestro_record/cm7">
          <external path="boards/evkbmimxrt1170/audio_examples/maestro_record/cm7" type="xml">
            <files mask="maestro_record_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_maestro_playback" name="maestro_playback" brief="Audio maestro framework demo example." toolchain="armgcc iar mcuxpresso" compiler="compiler_gcc compiler_iar" category="audio_examples" path="boards/evkbmimxrt1170/audio_examples/maestro_playback/cm7">
          <external path="boards/evkbmimxrt1170/audio_examples/maestro_playback/cm7" type="xml">
            <files mask="maestro_playback_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_se05x_vcom_cm7" name="se05x_vcom_cm7" brief="The se05x_vcom demo application allows the board to be used as a bridge between the PC and the secure module and enables the execution of the config tool and other utilities from the PC." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="se_hostlib_examples" path="boards/evkbmimxrt1170/se_hostlib_examples/se05x_vcom/cm7">
          <external path="boards/evkbmimxrt1170/se_hostlib_examples/se05x_vcom/cm7" type="xml">
            <files mask="se05x_vcom_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_se05x_ex_symmetric_cm7" name="se05x_ex_symmetric_cm7" brief="This example does a symmetric cryptography AES encryption and decryption operation." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="se_hostlib_examples" path="boards/evkbmimxrt1170/se_hostlib_examples/se05x_ex_symmetric/cm7">
          <external path="boards/evkbmimxrt1170/se_hostlib_examples/se05x_ex_symmetric/cm7" type="xml">
            <files mask="se05x_ex_symmetric_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_se05x_ex_md_cm7" name="se05x_ex_md_cm7" brief="This example does a Message Digest hashing operation." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="se_hostlib_examples" path="boards/evkbmimxrt1170/se_hostlib_examples/se05x_ex_md/cm7">
          <external path="boards/evkbmimxrt1170/se_hostlib_examples/se05x_ex_md/cm7" type="xml">
            <files mask="se05x_ex_md_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_se05x_ex_hkdf_cm7" name="se05x_ex_hkdf_cm7" brief="This example does a HMAC Key derivation operation based on the info and salt." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="se_hostlib_examples" path="boards/evkbmimxrt1170/se_hostlib_examples/se05x_ex_hkdf/cm7">
          <external path="boards/evkbmimxrt1170/se_hostlib_examples/se05x_ex_hkdf/cm7" type="xml">
            <files mask="se05x_ex_hkdf_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_se05x_ex_ecc_cm7" name="se05x_ex_ecc_cm7" brief="This example does a elliptic curve cryptography signing and verify operation." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="se_hostlib_examples" path="boards/evkbmimxrt1170/se_hostlib_examples/se05x_ex_ecc/cm7">
          <external path="boards/evkbmimxrt1170/se_hostlib_examples/se05x_ex_ecc/cm7" type="xml">
            <files mask="se05x_ex_ecc_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_se05x_cloud_aws_cm7" name="se05x_cloud_aws_cm7" brief="This demo demonstrates connection to AWS IoT Console using pre-provisioned device credentials and publish/subscribe procedure using MQTT." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="se_hostlib_examples" path="boards/evkbmimxrt1170/se_hostlib_examples/se05x_cloud_aws/cm7">
          <external path="boards/evkbmimxrt1170/se_hostlib_examples/se05x_cloud_aws/cm7" type="xml">
            <files mask="se05x_cloud_aws_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_se05x_Minimal_cm7" name="se05x_Minimal_cm7" brief="This is a bare minimum example for se050. This gets the amount of free memory." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="se_hostlib_examples" path="boards/evkbmimxrt1170/se_hostlib_examples/se05x_Minimal/cm7">
          <external path="boards/evkbmimxrt1170/se_hostlib_examples/se05x_Minimal/cm7" type="xml">
            <files mask="se05x_Minimal_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_se05x_GetInfo_cm7" name="se05x_GetInfo_cm7" brief="This project can be used to get SE05X platform information." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="se_hostlib_examples" path="boards/evkbmimxrt1170/se_hostlib_examples/se05x_GetInfo/cm7">
          <external path="boards/evkbmimxrt1170/se_hostlib_examples/se05x_GetInfo/cm7" type="xml">
            <files mask="se05x_GetInfo_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_openvg_tiger_freertos_cm7" name="openvg_tiger_freertos_cm7" brief="This example shows how to use the OpenVG component. This application draws a tiger on the screen." toolchain="armgcc iar" compiler="compiler_gcc compiler_iar" category="openvg_examples" path="boards/evkbmimxrt1170/openvg_examples/openvg_tiger/cm7">
          <external path="boards/evkbmimxrt1170/openvg_examples/openvg_tiger/cm7" type="xml">
            <files mask="openvg_tiger_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_cube_freertos_cm7" name="cube_freertos_cm7" brief="This example shows how to use the vglite component. This application draws a cube object with each face having high render quality." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="vglite_examples" path="boards/evkbmimxrt1170/vglite_examples/cube_freertos/cm7">
          <external path="boards/evkbmimxrt1170/vglite_examples/cube_freertos/cm7" type="xml">
            <files mask="cube_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_vector_freertos_cm7" name="vector_freertos_cm7" brief="This example shows how to use the vglite component. This application draws a polygon vector graphic with high render quality on blue buffer." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="vglite_examples" path="boards/evkbmimxrt1170/vglite_examples/vector_freertos/cm7">
          <external path="boards/evkbmimxrt1170/vglite_examples/vector_freertos/cm7" type="xml">
            <files mask="vector_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_tiled_freertos_cm7" name="tiled_freertos_cm7" brief="This example shows how to use the vglite component. This application renders a polygon vector graphic with high render quality on a black buffer using blit." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="vglite_examples" path="boards/evkbmimxrt1170/vglite_examples/tiled_freertos/cm7">
          <external path="boards/evkbmimxrt1170/vglite_examples/tiled_freertos/cm7" type="xml">
            <files mask="tiled_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_tiger_freertos_cm7" name="tiger_freertos_cm7" brief="This example shows how to use the vglite component. This application draws a tiger on the screen." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="vglite_examples" path="boards/evkbmimxrt1170/vglite_examples/tiger_freertos/cm7">
          <external path="boards/evkbmimxrt1170/vglite_examples/tiger_freertos/cm7" type="xml">
            <files mask="tiger_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_clock_freertos_cm7" name="clock_freertos_cm7" brief="This example shows how to use the vglite component. This application draws a clock on the screen." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="vglite_examples" path="boards/evkbmimxrt1170/vglite_examples/clock_freertos/cm7">
          <external path="boards/evkbmimxrt1170/vglite_examples/clock_freertos/cm7" type="xml">
            <files mask="clock_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_ota_mcuboot_basic_cm7" name="ota_mcuboot_basic_cm7" brief="This projects gives an example of a basic application bootable by MCUBoot" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="ota_examples" path="boards/evkbmimxrt1170/ota_examples/ota_mcuboot_basic/cm7">
          <external path="boards/evkbmimxrt1170/ota_examples/ota_mcuboot_basic/cm7" type="xml">
            <files mask="ota_mcuboot_basic_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_ota_mcuboot_server_enet_cm7" name="ota_mcuboot_server_enet_cm7" brief="This ota_mcuboot_server application demonstrates OTA using an HTTP server based on lwIP TCP/IP stack with FreeRTOS. The user uses an Internet browser to upload new update package to reprogram application running on the board." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="ota_examples" path="boards/evkbmimxrt1170/ota_examples/ota_mcuboot_server/enet/cm7">
          <external path="boards/evkbmimxrt1170/ota_examples/ota_mcuboot_server/enet/cm7" type="xml">
            <files mask="ota_mcuboot_server_enet_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_ota_mcuboot_client_enet_cm7" name="ota_mcuboot_client_enet_cm7" brief="The ota_mcuboot_client demo application demonstrates an HTTPS OTA client using FreeRTOS + LWIP + MbedTLS + CoreHTTP. The client connects to a HTTPS server and requests an OTA binary for download and subsequent installation by MCUBoot." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="ota_examples" path="boards/evkbmimxrt1170/ota_examples/ota_mcuboot_client/enet/cm7">
          <external path="boards/evkbmimxrt1170/ota_examples/ota_mcuboot_client/enet/cm7" type="xml">
            <files mask="ota_mcuboot_client_enet_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_mcuboot_opensource_cm7" name="mcuboot_opensource_cm7" brief="MCUboot bootloader" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="ota_examples" path="boards/evkbmimxrt1170/ota_examples/mcuboot_opensource/cm7">
          <external path="boards/evkbmimxrt1170/ota_examples/mcuboot_opensource/cm7" type="xml">
            <files mask="mcuboot_opensource_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_bt_tester_cm7" name="bt_tester_cm7" brief="The Edgefast Bluetooth auto PTS testing application." toolchain="iar" compiler="compiler_iar" category="edgefast_bluetooth_examples" path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/bt_tester/cm7">
          <external path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/bt_tester/cm7" type="xml">
            <files mask="bt_tester_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_wireless_uart_cm7" name="wireless_uart_cm7" brief="The Edgefast Bluetooth wireless uart example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/wireless_uart/cm7">
          <external path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/wireless_uart/cm7" type="xml">
            <files mask="wireless_uart_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_wifi_cli_over_ble_wu_cm7" name="wifi_cli_over_ble_wu_cm7" brief="wifi_cli_over_ble_wu" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/wifi_cli_over_ble_wu/cm7">
          <external path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/wifi_cli_over_ble_wu/cm7" type="xml">
            <files mask="wifi_cli_over_ble_wu_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_unicast_media_sender_cm7" name="unicast_media_sender_cm7" brief="The Edgefast Bluetooth pxm example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/unicast_media_sender/cm7">
          <external path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/unicast_media_sender/cm7" type="xml">
            <files mask="unicast_media_sender_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_unicast_media_receiver_cm7" name="unicast_media_receiver_cm7" brief="The Edgefast Bluetooth pxm example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/unicast_media_receiver/cm7">
          <external path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/unicast_media_receiver/cm7" type="xml">
            <files mask="unicast_media_receiver_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_tmap_peripheral_cm7" name="tmap_peripheral_cm7" brief="The Edgefast Bluetooth pxm example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/tmap_peripheral/cm7">
          <external path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/tmap_peripheral/cm7" type="xml">
            <files mask="tmap_peripheral_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_tmap_central_cm7" name="tmap_central_cm7" brief="The Edgefast Bluetooth pxm example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/tmap_central/cm7">
          <external path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/tmap_central/cm7" type="xml">
            <files mask="tmap_central_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_spp_cm7" name="spp_cm7" brief="The Bluetooth BR SPP example." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/spp/cm7">
          <external path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/spp/cm7" type="xml">
            <files mask="spp_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_edgefast_bluetooth_shell_cm7" name="edgefast_bluetooth_shell_cm7" brief="The Edgefast Bluetooth shell example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/shell/cm7">
          <external path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/shell/cm7" type="xml">
            <files mask="edgefast_bluetooth_shell_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_peripheral_pxr_cm7" name="peripheral_pxr_cm7" brief="The Edgefast Bluetooth pxr example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/peripheral_pxr/cm7">
          <external path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/peripheral_pxr/cm7" type="xml">
            <files mask="peripheral_pxr_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_peripheral_ipsp_cm7" name="peripheral_ipsp_cm7" brief="The Edgefast Bluetooth ipsp example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/peripheral_ipsp/cm7">
          <external path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/peripheral_ipsp/cm7" type="xml">
            <files mask="peripheral_ipsp_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_peripheral_ht_cm7" name="peripheral_ht_cm7" brief="The Edgefast Bluetooth hts example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/peripheral_ht/cm7">
          <external path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/peripheral_ht/cm7" type="xml">
            <files mask="peripheral_ht_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_peripheral_hps_cm7" name="peripheral_hps_cm7" brief="The Edgefast Bluetooth hps example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/peripheral_hps/cm7">
          <external path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/peripheral_hps/cm7" type="xml">
            <files mask="peripheral_hps_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_peripheral_beacon_cm7" name="peripheral_beacon_cm7" brief="The Edgefast Bluetooth beacon example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/peripheral_beacon/cm7">
          <external path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/peripheral_beacon/cm7" type="xml">
            <files mask="peripheral_beacon_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_pbap_pse_cm7" name="pbap_pse_cm7" brief="The Edgefast Bluetooth audio source with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/pbap_pse/cm7">
          <external path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/pbap_pse/cm7" type="xml">
            <files mask="pbap_pse_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_pbap_pce_cm7" name="pbap_pce_cm7" brief="The Edgefast Bluetooth audio source with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/pbap_pce/cm7">
          <external path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/pbap_pce/cm7" type="xml">
            <files mask="pbap_pce_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_map_mse_cm7" name="map_mse_cm7" brief="The Edgefast Bluetooth audio source with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/map_mse/cm7">
          <external path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/map_mse/cm7" type="xml">
            <files mask="map_mse_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_map_mce_cm7" name="map_mce_cm7" brief="The Edgefast Bluetooth audio source with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/map_mce/cm7">
          <external path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/map_mce/cm7" type="xml">
            <files mask="map_mce_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_handsfree_ag_cm7" name="handsfree_ag_cm7" brief="The Edgefast Bluetooth handsfree AG example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/handsfree_ag/cm7">
          <external path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/handsfree_ag/cm7" type="xml">
            <files mask="handsfree_ag_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_handsfree_cm7" name="handsfree_cm7" brief="The Edgefast Bluetooth bluetooth handsfree example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/handsfree/cm7">
          <external path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/handsfree/cm7" type="xml">
            <files mask="handsfree_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_central_pxm_cm7" name="central_pxm_cm7" brief="The Edgefast Bluetooth pxm example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/central_pxm/cm7">
          <external path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/central_pxm/cm7" type="xml">
            <files mask="central_pxm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_central_ipsp_cm7" name="central_ipsp_cm7" brief="The Edgefast Bluetooth ipsp example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/central_ipsp/cm7">
          <external path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/central_ipsp/cm7" type="xml">
            <files mask="central_ipsp_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_central_ht_cm7" name="central_ht_cm7" brief="The Edgefast Bluetooth hts example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/central_ht/cm7">
          <external path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/central_ht/cm7" type="xml">
            <files mask="central_ht_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_central_hpc_cm7" name="central_hpc_cm7" brief="The Edgefast Bluetooth hpc example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/central_hpc/cm7">
          <external path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/central_hpc/cm7" type="xml">
            <files mask="central_hpc_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_call_terminal_cm7" name="call_terminal_cm7" brief="The Edgefast Bluetooth call terminal example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/call_terminal/cm7">
          <external path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/call_terminal/cm7" type="xml">
            <files mask="call_terminal_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_call_gateway_cm7" name="call_gateway_cm7" brief="The Edgefast Bluetooth call gateway example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/call_gateway/cm7">
          <external path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/call_gateway/cm7" type="xml">
            <files mask="call_gateway_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_broadcast_media_sender_cm7" name="broadcast_media_sender_cm7" brief="The Edgefast Bluetooth pxm example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/broadcast_media_sender/cm7">
          <external path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/broadcast_media_sender/cm7" type="xml">
            <files mask="broadcast_media_sender_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_broadcast_media_receiver_cm7" name="broadcast_media_receiver_cm7" brief="The Edgefast Bluetooth pxm example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/broadcast_media_receiver/cm7">
          <external path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/broadcast_media_receiver/cm7" type="xml">
            <files mask="broadcast_media_receiver_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_audio_profile_cm7" name="audio_profile_cm7" brief="The Edgefast Bluetooth audio demo with simplified application." toolchain="armgcc iar mcuxpresso" compiler="compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/audio_profile/cm7">
          <external path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/audio_profile/cm7" type="xml">
            <files mask="audio_profile_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_a2dp_source_cm7" name="a2dp_source_cm7" brief="The Edgefast Bluetooth audio source with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/a2dp_source/cm7">
          <external path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/a2dp_source/cm7" type="xml">
            <files mask="a2dp_source_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_a2dp_sink_cm7" name="a2dp_sink_cm7" brief="The Edgefast Bluetooth audio source with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/a2dp_sink/cm7">
          <external path="boards/evkbmimxrt1170/edgefast_bluetooth_examples/a2dp_sink/cm7" type="xml">
            <files mask="a2dp_sink_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_uart_wifi_bridge_cm7" name="uart_wifi_bridge_cm7" brief="uart_wifi_bridge" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="wifi_examples" path="boards/evkbmimxrt1170/wifi_examples/uart_wifi_bridge/cm7">
          <external path="boards/evkbmimxrt1170/wifi_examples/uart_wifi_bridge/cm7" type="xml">
            <files mask="uart_wifi_bridge_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_wifi_wpa_supplicant_cm7" name="wifi_wpa_supplicant_cm7" brief="wifi_wpa_supplicant" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="wifi_examples" path="boards/evkbmimxrt1170/wifi_examples/wifi_wpa_supplicant/cm7">
          <external path="boards/evkbmimxrt1170/wifi_examples/wifi_wpa_supplicant/cm7" type="xml">
            <files mask="wifi_wpa_supplicant_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_wifi_test_mode_cm7" name="wifi_test_mode_cm7" brief="wifi_test_mode" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="wifi_examples" path="boards/evkbmimxrt1170/wifi_examples/wifi_test_mode/cm7">
          <external path="boards/evkbmimxrt1170/wifi_examples/wifi_test_mode/cm7" type="xml">
            <files mask="wifi_test_mode_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_wifi_ipv4_ipv6_echo_cm7" name="wifi_ipv4_ipv6_echo_cm7" brief="The wifi_ipv4_ipv6_echo demo application demonstrates a TCP or UDP echo demo on the lwIP TCP/IP stack with FreeRTOS. The demo uses the TCP or UDP protocol over both IPv4 and IPv6 and acts as an echo server. The application sends back the received TCP or UDP packets from the PC, which can be used to test whether a TCP or UDP is available." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="wifi_examples" path="boards/evkbmimxrt1170/wifi_examples/wifi_ipv4_ipv6_echo/cm7">
          <external path="boards/evkbmimxrt1170/wifi_examples/wifi_ipv4_ipv6_echo/cm7" type="xml">
            <files mask="wifi_ipv4_ipv6_echo_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_wifi_cli_cm7" name="wifi_cli_cm7" brief="wifi_cli" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="wifi_examples" path="boards/evkbmimxrt1170/wifi_examples/wifi_cli/cm7">
          <external path="boards/evkbmimxrt1170/wifi_examples/wifi_cli/cm7" type="xml">
            <files mask="wifi_cli_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_wifi_webconfig_cm7" name="wifi_webconfig_cm7" brief="Simple AP to Client configuration over web." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="wifi_examples" path="boards/evkbmimxrt1170/wifi_examples/wifi_webconfig/cm7">
          <external path="boards/evkbmimxrt1170/wifi_examples/wifi_webconfig/cm7" type="xml">
            <files mask="wifi_webconfig_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_wifi_setup_cm7" name="wifi_setup_cm7" brief="The wifi_setup demo implements a simple Wi-Fi station setup. The application will automatically scan local wireless networks at startup, then the user will be able to connect to one of the available networks and setup a ping task that will test the connection." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="wifi_examples" path="boards/evkbmimxrt1170/wifi_examples/wifi_setup/cm7">
          <external path="boards/evkbmimxrt1170/wifi_examples/wifi_setup/cm7" type="xml">
            <files mask="wifi_setup_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lwip_ping_enet_qos_freertos_cm7" name="lwip_ping_enet_qos_freertos_cm7" brief="The lwip_ping demo application demonstrates a Ping Demo on the lwIP TCP/IP stack which using the ICMP protocol. Theapplication periodically sends the ICMP echo request to a PC and processes the PC reply. Type the &quot;ping $board_address&quot;in the PC command window to send an ICMP echo request to the board. The lwIP stack sends the ICMP echo reply back to thePC." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkbmimxrt1170/lwip_examples/lwip_ping_enet_qos/freertos/cm7">
          <external path="boards/evkbmimxrt1170/lwip_examples/lwip_ping_enet_qos/freertos/cm7" type="xml">
            <files mask="lwip_ping_enet_qos_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lwip_ping_enet_qos_bm_cm7" name="lwip_ping_enet_qos_bm_cm7" brief="The lwip_ping_enet_qos demo application demonstrates a Ping Demo on the lwIP TCP/IP stack, which uses the ICMP protocol. Theapplication periodically sends the ICMP echo request to a PC, and processes the PC reply. Type &quot;ping $board_address&quot;in the PC command window to send an ICMP echo request to the board. The lwIP stack sends the ICMP echo reply back to thePC." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkbmimxrt1170/lwip_examples/lwip_ping_enet_qos/bm/cm7">
          <external path="boards/evkbmimxrt1170/lwip_examples/lwip_ping_enet_qos/bm/cm7" type="xml">
            <files mask="lwip_ping_enet_qos_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lwip_ping_freertos_cm7" name="lwip_ping_freertos_cm7" brief="The lwip_ping demo application demonstrates a Ping Demo on the lwIP TCP/IP stack which using the ICMP protocol. Theapplication periodically sends the ICMP echo request to a PC and processes the PC reply. Type the &quot;ping $board_address&quot;in the PC command window to send an ICMP echo request to the board. The lwIP stack sends the ICMP echo reply back to thePC." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkbmimxrt1170/lwip_examples/lwip_ping/freertos/cm7">
          <external path="boards/evkbmimxrt1170/lwip_examples/lwip_ping/freertos/cm7" type="xml">
            <files mask="lwip_ping_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lwip_ping_bm_cm7" name="lwip_ping_bm_cm7" brief="The lwip_ping demo application demonstrates a Ping Demo on the lwIP TCP/IP stack, which uses the ICMP protocol. Theapplication periodically sends the ICMP echo request to a PC, and processes the PC reply. Type &quot;ping $board_address&quot;in the PC command window to send an ICMP echo request to the board. The lwIP stack sends the ICMP echo reply back to thePC." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkbmimxrt1170/lwip_examples/lwip_ping/bm/cm7">
          <external path="boards/evkbmimxrt1170/lwip_examples/lwip_ping/bm/cm7" type="xml">
            <files mask="lwip_ping_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lwip_mqtt_enet_qos_freertos_cm7" name="lwip_mqtt_enet_qos_freertos_cm7" brief="The lwip_mqtt demo application demonstrates MQTT client connecting to MQTT broker via unsecured socket. The application obtains IP and DNS addresses from DHCP and resolves broker's hostname if needed. Then it connects to the broker and subscribes to the &quot;lwip_topic/#&quot; and &quot;lwip_other/#&quot; topics. Further it publishes five messages to the &quot;lwip_topic/100&quot; which are also received back as the board is subscribed to the &quot;lwip_topic/#&quot;. Meanwhile it continues to receive messages published to the subscribed topics from other clients." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkbmimxrt1170/lwip_examples/lwip_mqtt_enet_qos/freertos/cm7">
          <external path="boards/evkbmimxrt1170/lwip_examples/lwip_mqtt_enet_qos/freertos/cm7" type="xml">
            <files mask="lwip_mqtt_enet_qos_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lwip_mqtt_freertos_cm7" name="lwip_mqtt_freertos_cm7" brief="The lwip_mqtt demo application demonstrates MQTT client connecting to MQTT broker via unsecured socket. The application obtains IP and DNS addresses from DHCP and resolves broker's hostname if needed. Then it connects to the broker and subscribes to the &quot;lwip_topic/#&quot; and &quot;lwip_other/#&quot; topics. Further it publishes five messages to the &quot;lwip_topic/100&quot; which are also received back as the board is subscribed to the &quot;lwip_topic/#&quot;. Meanwhile it continues to receive messages published to the subscribed topics from other clients." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkbmimxrt1170/lwip_examples/lwip_mqtt/freertos/cm7">
          <external path="boards/evkbmimxrt1170/lwip_examples/lwip_mqtt/freertos/cm7" type="xml">
            <files mask="lwip_mqtt_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lwip_ipv4_ipv6_echo_enet_qos_freertos_cm7" name="lwip_ipv4_ipv6_echo_enet_qos_freertos_cm7" brief="The lwip_ipv4_ipv6_echo demo application demonstrates a TCP or UDP echo demo on the lwIP TCP/IP stack with FreeRTOS. The demo uses the TCP or UDP protocol over both IPv4 and IPv6 and acts as an echo server. The application sends back the received TCP or UDP packets from the PC, which can be used to test whether a TCP or UDP is available." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkbmimxrt1170/lwip_examples/lwip_ipv4_ipv6_echo_enet_qos/freertos/cm7">
          <external path="boards/evkbmimxrt1170/lwip_examples/lwip_ipv4_ipv6_echo_enet_qos/freertos/cm7" type="xml">
            <files mask="lwip_ipv4_ipv6_echo_enet_qos_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lwip_ipv4_ipv6_echo_freertos_cm7" name="lwip_ipv4_ipv6_echo_freertos_cm7" brief="The lwip_ipv4_ipv6_echo demo application demonstrates a TCP or UDP echo demo on the lwIP TCP/IP stack with FreeRTOS. The demo uses the TCP or UDP protocol over both IPv4 and IPv6 and acts as an echo server. The application sends back the received TCP or UDP packets from the PC, which can be used to test whether a TCP or UDP is available." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkbmimxrt1170/lwip_examples/lwip_ipv4_ipv6_echo/freertos/cm7">
          <external path="boards/evkbmimxrt1170/lwip_examples/lwip_ipv4_ipv6_echo/freertos/cm7" type="xml">
            <files mask="lwip_ipv4_ipv6_echo_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lwip_iperf_enet_qos_bm_cm7" name="lwip_iperf_enet_qos_bm_cm7" brief="This is the IPerf server example to check your bandwidth using the network performance measurement IPerf application on a PC as a client.It is currently a minimal implementation providing an IPv4 TCP server only.Instead of the command line IPerf application, for more convenience, it is recommended to use the JPerf2 graphical tool, which can be downloaded here: https:/sourceforge.net/projects/iperf/files/jperf/jperf%202.0.0/jperf-2.0.0.zip/download" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkbmimxrt1170/lwip_examples/lwip_iperf_enet_qos/bm/cm7">
          <external path="boards/evkbmimxrt1170/lwip_examples/lwip_iperf_enet_qos/bm/cm7" type="xml">
            <files mask="lwip_iperf_enet_qos_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lwip_iperf_bm_cm7" name="lwip_iperf_bm_cm7" brief="This is the IPerf server example to check your bandwidth using the network performance measurement IPerf application on a PC as a client.It is currently a minimal implementation providing an IPv4 TCP server only.Instead of the command line IPerf application, for more convenience, it is recommended to use the JPerf2 graphical tool, which can be downloaded here: https:/sourceforge.net/projects/iperf/files/jperf/jperf%202.0.0/jperf-2.0.0.zip/download" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkbmimxrt1170/lwip_examples/lwip_iperf/bm/cm7">
          <external path="boards/evkbmimxrt1170/lwip_examples/lwip_iperf/bm/cm7" type="xml">
            <files mask="lwip_iperf_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lwip_https_client_freertos_cm7" name="lwip_https_client_freertos_cm7" brief="The lwip_https_client_freertos demo application demonstrates downloading of a web page over SSL connection using HTTP GET method." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkbmimxrt1170/lwip_examples/lwip_https_client/freertos/cm7">
          <external path="boards/evkbmimxrt1170/lwip_examples/lwip_https_client/freertos/cm7" type="xml">
            <files mask="lwip_https_client_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lwip_httpssrv_mbedTLS_enet_qos_freertos_cm7" name="lwip_httpssrv_mbedTLS_enet_qos_freertos_cm7" brief="The lwip_httpsrv_mbedTLS demo application demonstrates an HTTPServer set up on lwIP TCP/IP and the MbedTLS stack withFreeRTOS. The user uses an Internet browser to send an https request for connection. The board acts as an HTTP serverand sends a Web page back to the PC." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkbmimxrt1170/lwip_examples/lwip_httpssrv_mbedTLS_enet_qos/freertos/cm7">
          <external path="boards/evkbmimxrt1170/lwip_examples/lwip_httpssrv_mbedTLS_enet_qos/freertos/cm7" type="xml">
            <files mask="lwip_httpssrv_mbedTLS_enet_qos_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lwip_httpssrv_mbedTLS_enet_qos_bm_cm7" name="lwip_httpssrv_mbedTLS_enet_qos_bm_cm7" brief="The lwip_httpsrv_mbedTSL_bm demo application demonstrates an HTTPS Serverset up on lwIP TCP/IP and the mbedTLS stack with bare metal. The useruses an Internet browser to send an https request for connection.The board acts as an HTTPS server and sends a Web page back to the PC." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkbmimxrt1170/lwip_examples/lwip_httpssrv_mbedTLS_enet_qos/bm/cm7">
          <external path="boards/evkbmimxrt1170/lwip_examples/lwip_httpssrv_mbedTLS_enet_qos/bm/cm7" type="xml">
            <files mask="lwip_httpssrv_mbedTLS_enet_qos_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lwip_httpssrv_mbedTLS_freertos_cm7" name="lwip_httpssrv_mbedTLS_freertos_cm7" brief="The lwip_httpsrv_mbedTLS demo application demonstrates an HTTPServer set up on lwIP TCP/IP and the MbedTLS stack withFreeRTOS. The user uses an Internet browser to send an https request for connection. The board acts as an HTTP serverand sends a Web page back to the PC." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkbmimxrt1170/lwip_examples/lwip_httpssrv_mbedTLS/freertos/cm7">
          <external path="boards/evkbmimxrt1170/lwip_examples/lwip_httpssrv_mbedTLS/freertos/cm7" type="xml">
            <files mask="lwip_httpssrv_mbedTLS_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lwip_httpssrv_mbedTLS_bm_cm7" name="lwip_httpssrv_mbedTLS_bm_cm7" brief="The lwip_httpsrv_mbedTSL_bm demo application demonstrates an HTTPS Serverset up on lwIP TCP/IP and the mbedTLS stack with bare metal. The useruses an Internet browser to send an https request for connection.The board acts as an HTTPS server and sends a Web page back to the PC." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkbmimxrt1170/lwip_examples/lwip_httpssrv_mbedTLS/bm/cm7">
          <external path="boards/evkbmimxrt1170/lwip_examples/lwip_httpssrv_mbedTLS/bm/cm7" type="xml">
            <files mask="lwip_httpssrv_mbedTLS_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lwip_httpsrv_enet_qos_freertos_cm7" name="lwip_httpsrv_enet_qos_freertos_cm7" brief="The lwip_httpsrv demo application demonstrates an HTTPServer on the lwIP TCP/IP stack with bare metal SDK or FreeRTOS.The user uses an Internet browser to send a request for connection. The board acts as an HTTP server and sends a Webpage back to the PC." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkbmimxrt1170/lwip_examples/lwip_httpsrv_enet_qos/freertos/cm7">
          <external path="boards/evkbmimxrt1170/lwip_examples/lwip_httpsrv_enet_qos/freertos/cm7" type="xml">
            <files mask="lwip_httpsrv_enet_qos_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lwip_httpsrv_enet_qos_bm_cm7" name="lwip_httpsrv_enet_qos_bm_cm7" brief="The lwip_httpsrv demo application demonstrates an HTTPServer on the lwIP TCP/IP stack with bare metal SDK or FreeRTOS.The user uses an Internet browser to send a request for connection. The board acts as an HTTP server and sends a Webpage back to the PC." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkbmimxrt1170/lwip_examples/lwip_httpsrv_enet_qos/bm/cm7">
          <external path="boards/evkbmimxrt1170/lwip_examples/lwip_httpsrv_enet_qos/bm/cm7" type="xml">
            <files mask="lwip_httpsrv_enet_qos_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lwip_httpsrv_freertos_cm7" name="lwip_httpsrv_freertos_cm7" brief="The lwip_httpsrv demo application demonstrates an HTTPServer on the lwIP TCP/IP stack with bare metal SDK or FreeRTOS.The user uses an Internet browser to send a request for connection. The board acts as an HTTP server and sends a Webpage back to the PC." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkbmimxrt1170/lwip_examples/lwip_httpsrv/freertos/cm7">
          <external path="boards/evkbmimxrt1170/lwip_examples/lwip_httpsrv/freertos/cm7" type="xml">
            <files mask="lwip_httpsrv_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lwip_httpsrv_bm_cm7" name="lwip_httpsrv_bm_cm7" brief="The lwip_httpsrv demo application demonstrates an HTTPServer on the lwIP TCP/IP stack with bare metal SDK or FreeRTOS.The user uses an Internet browser to send a request for connection. The board acts as an HTTP server and sends a Webpage back to the PC." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkbmimxrt1170/lwip_examples/lwip_httpsrv/bm/cm7">
          <external path="boards/evkbmimxrt1170/lwip_examples/lwip_httpsrv/bm/cm7" type="xml">
            <files mask="lwip_httpsrv_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lwip_dhcp_usb_freertos_cm7" name="lwip_dhcp_usb_freertos_cm7" brief="The lwip_dhcp demo application demonstrates a DHCP demo on the lwIP TCP/IP stack.The application acts as a DHCP client and prints the status as it is progressing.Once the interface is being bound to an IP address obtained from DHCP server, address information is printed." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkbmimxrt1170/lwip_examples/lwip_dhcp_usb/freertos/cm7">
          <external path="boards/evkbmimxrt1170/lwip_examples/lwip_dhcp_usb/freertos/cm7" type="xml">
            <files mask="lwip_dhcp_usb_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lwip_dhcp_usb_bm_cm7" name="lwip_dhcp_usb_bm_cm7" brief="The lwip_dhcp_usb demo application demonstrates a DHCP demo on the lwIP TCP/IP stack.The application acts as a DHCP client and prints the status as it is progressing.Once the interface is being bound to an IP address obtained from DHCP server, address information is printed." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkbmimxrt1170/lwip_examples/lwip_dhcp_usb/bm/cm7">
          <external path="boards/evkbmimxrt1170/lwip_examples/lwip_dhcp_usb/bm/cm7" type="xml">
            <files mask="lwip_dhcp_usb_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lwip_dhcp_enet_qos_freertos_cm7" name="lwip_dhcp_enet_qos_freertos_cm7" brief="The lwip_dhcp demo application demonstrates a DHCP demo on the lwIP TCP/IP stack.The application acts as a DHCP client and prints the status as it is progressing.Once the interface is being bound to an IP address obtained from DHCP server, address information is printed." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkbmimxrt1170/lwip_examples/lwip_dhcp_enet_qos/freertos/cm7">
          <external path="boards/evkbmimxrt1170/lwip_examples/lwip_dhcp_enet_qos/freertos/cm7" type="xml">
            <files mask="lwip_dhcp_enet_qos_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lwip_dhcp_enet_qos_bm_cm7" name="lwip_dhcp_enet_qos_bm_cm7" brief="The lwip_dhcp demo application demonstrates a DHCP demo on the lwIP TCP/IP stack.The application acts as a DHCP client and prints the status as it is progressing.Once the interface is being bound to an IP address obtained from DHCP server, address information is printed." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkbmimxrt1170/lwip_examples/lwip_dhcp_enet_qos/bm/cm7">
          <external path="boards/evkbmimxrt1170/lwip_examples/lwip_dhcp_enet_qos/bm/cm7" type="xml">
            <files mask="lwip_dhcp_enet_qos_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lwip_dhcp_freertos_cm7" name="lwip_dhcp_freertos_cm7" brief="The lwip_dhcp demo application demonstrates a DHCP demo on the lwIP TCP/IP stack.The application acts as a DHCP client and prints the status as it is progressing.Once the interface is being bound to an IP address obtained from DHCP server, address information is printed." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkbmimxrt1170/lwip_examples/lwip_dhcp/freertos/cm7">
          <external path="boards/evkbmimxrt1170/lwip_examples/lwip_dhcp/freertos/cm7" type="xml">
            <files mask="lwip_dhcp_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lwip_dhcp_bm_cm7" name="lwip_dhcp_bm_cm7" brief="The lwip_dhcp demo application demonstrates a DHCP demo on the lwIP TCP/IP stack.The application acts as a DHCP client and prints the status as it is progressing.Once the interface is being bound to an IP address obtained from DHCP server, address information is printed." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lwip_examples" path="boards/evkbmimxrt1170/lwip_examples/lwip_dhcp/bm/cm7">
          <external path="boards/evkbmimxrt1170/lwip_examples/lwip_dhcp/bm/cm7" type="xml">
            <files mask="lwip_dhcp_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_soem_gpio_pulse_freertos_cm7" name="soem_gpio_pulse_freertos_cm7" brief="An EtherCAT example with freertos using SOEM." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="soem_examples" path="boards/evkbmimxrt1170/soem_examples/soem_gpio_pulse/freertos/cm7">
          <external path="boards/evkbmimxrt1170/soem_examples/soem_gpio_pulse/freertos/cm7" type="xml">
            <files mask="soem_gpio_pulse_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_soem_gpio_pulse_bm_cm7" name="soem_gpio_pulse_bm_cm7" brief="An EtherCAT example with baremetal using SOEM." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="soem_examples" path="boards/evkbmimxrt1170/soem_examples/soem_gpio_pulse/bm/cm7">
          <external path="boards/evkbmimxrt1170/soem_examples/soem_gpio_pulse/bm/cm7" type="xml">
            <files mask="soem_gpio_pulse_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_sdcard_polling_cm7" name="sdcard_polling_cm7" brief="The SDCARD Polling project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver andshow how to use polling based transfer API in SDHC driver in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/sdcard_polling" path="boards/evkbmimxrt1170/sdmmc_examples/sdcard_polling/cm7">
          <external path="boards/evkbmimxrt1170/sdmmc_examples/sdcard_polling/cm7" type="xml">
            <files mask="sdcard_polling_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_sdcard_interrupt_cm7" name="sdcard_interrupt_cm7" brief="The SDCARD Interrupt project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver andshow how to use interrupt based transfer API in SDHC driver in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/sdcard_interrupt" path="boards/evkbmimxrt1170/sdmmc_examples/sdcard_interrupt/cm7">
          <external path="boards/evkbmimxrt1170/sdmmc_examples/sdcard_interrupt/cm7" type="xml">
            <files mask="sdcard_interrupt_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_sdcard_freertos_cm7" name="sdcard_freertos_cm7" brief="The SDCARD FreeRTOS project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver with FreeRTOS in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/sdcard_freertos" path="boards/evkbmimxrt1170/sdmmc_examples/sdcard_freertos/cm7">
          <external path="boards/evkbmimxrt1170/sdmmc_examples/sdcard_freertos/cm7" type="xml">
            <files mask="sdcard_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_sdcard_fatfs_freertos_cm7" name="sdcard_fatfs_freertos_cm7" brief="The SDCARD FATFS FREERTOS project is a demonstration program that uses the SDK software. The purpose of this example is to show how to use SDCARD with fatfs and freertos." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/sdcard_fatfs_freertos" path="boards/evkbmimxrt1170/sdmmc_examples/sdcard_fatfs_freertos/cm7">
          <external path="boards/evkbmimxrt1170/sdmmc_examples/sdcard_fatfs_freertos/cm7" type="xml">
            <files mask="sdcard_fatfs_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_sdcard_fatfs_cm7" name="sdcard_fatfs_cm7" brief="The SDCARD FATFS project is a demonstration program that uses the SDK software. Tt mounts a file system based on a SD card then does &quot;creat directory/read directory/create file/write file/read file&quot;operation. The file sdhc_config.h has default SDHC configuration which can be adjusted to let carddriver has different performance. The purpose of this example is to show how to use SDCARD driver based FATFS disk in SDK software." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/sdcard_fatfs" path="boards/evkbmimxrt1170/sdmmc_examples/sdcard_fatfs/cm7">
          <external path="boards/evkbmimxrt1170/sdmmc_examples/sdcard_fatfs/cm7" type="xml">
            <files mask="sdcard_fatfs_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_erpc_server_matrix_multiply_uart_cm7" name="erpc_server_matrix_multiply_uart_cm7" brief="This example demonstrates usage of eRPC between PC and board using UART transport layer.Board acts like a server and the PC as client. When client starts, it generates two randommatrixes and sends them to server. Server then performs matrix multiplication and sendsresult data back to client. Result matrix is then printed on the PC side.eRPC documentation eRPC specific files are stored in: middleware/multicore/erpc eRPC documentation is stored in: middleware/multicore/erpc/doc eRPC is open-source project stored on github: https:/github.com/EmbeddedRPC/erpc eRPC documentation can be also found in: http:/embeddedrpc.github.io PC Side Setup (Python)1. Make sure you have Python installed on your PC2. Install eRPC module to Python by executing setup.py located in: middleware/multicore/erpc/erpc_python3. Install serial module by executing following command in command line: &quot;python -m pip install pyserial&quot;Usage of run_uart.pyusage: run_uart.py [-h] [-c] [-s] [-p PORT] [-b BD]eRPC Matrix Multiply exampleoptional arguments:  -h, --help            show this help message an  -c, --client          Run client  -s, --server          Run server  -p PORT, --port PORT  Serial port  -b BD, --bd BD        Baud rate (default value is 115200)Either server or client has to be selected to runExample:To run PC side as a client with a board connected as a server to COM3 execute:&quot;run_uart.py --client --port COM3&quot;" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multiprocessor_examples" path="boards/evkbmimxrt1170/multiprocessor_examples/erpc_server_matrix_multiply_uart/cm7">
          <external path="boards/evkbmimxrt1170/multiprocessor_examples/erpc_server_matrix_multiply_uart/cm7" type="xml">
            <files mask="erpc_server_matrix_multiply_uart_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_rpmsg_lite_pingpong_rtos_primary_core" name="rpmsg_lite_pingpong_rtos_primary_core" brief="The Multicore RPMsg-Lite pingpong RTOS project is a simple demonstration program that uses theMCUXpresso SDK software and the RPMsg-Lite library and shows how to implement the inter-core communication between cores of the multicore system. The primary core releases the secondary core from the reset and then the inter-core communication is established. Once the RPMsg is initialized and endpoints are created the message exchange starts, incrementing a virtual counter that is part of the message payload. The message pingpong finishes when the counter reaches the value of 100. Then the RPMsg-Lite is deinitialized and the procedure of the data exchange is repeated again.&#10;Shared memory usage&#10;This multicore example uses the shared memory for data exchange. The shared memory region is defined and the size can be adjustable in the linker file. The shared memory region start address and the size have to be defined in linker file for each core equally. The shared memory start address is then exported from the linker to the application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" linked_projects="evkbmimxrt1170_rpmsg_lite_pingpong_rtos_secondary_core" path="boards/evkbmimxrt1170/multicore_examples/rpmsg_lite_pingpong_rtos/cm7">
          <external path="boards/evkbmimxrt1170/multicore_examples/rpmsg_lite_pingpong_rtos/cm7" type="xml">
            <files mask="rpmsg_lite_pingpong_rtos_primary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_rpmsg_lite_pingpong_primary_core" name="rpmsg_lite_pingpong_primary_core" brief="The Multicore RPMsg-Lite pingpong project is a simple demonstration program that uses theMCUXpresso SDK software and the RPMsg-Lite library and shows how to implement the inter-core communication between cores of the multicore system. The primary core releases the secondary core from the reset and then the inter-core communication is established. Once the RPMsg is initialized and endpoints are created the message exchange starts, incrementing a virtual counter that is part of the message payload. The message pingpong finishes when the counter reaches the value of 100.&#10;Then the RPMsg-Lite is deinitialized and the procedure of the data exchange is repeated again.&#10;Shared memory usage.&#10;This multicore example uses the shared memory for data exchange. The shared memory region is defined and the size can be adjustable in the linker file. The shared memory region start address and the size have to be defined in linker file for each core equally. The shared memory start address is then exported from the linker to the application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" linked_projects="evkbmimxrt1170_rpmsg_lite_pingpong_secondary_core" path="boards/evkbmimxrt1170/multicore_examples/rpmsg_lite_pingpong/cm7">
          <external path="boards/evkbmimxrt1170/multicore_examples/rpmsg_lite_pingpong/cm7" type="xml">
            <files mask="rpmsg_lite_pingpong_primary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_hello_world_primary_core" name="hello_world_primary_core" brief="The Multicore Hello World demo application demonstrates how to set up projects for individual cores on a multicore system. In this demo, the primary core prints the &quot;Hello World from the Primary Core!&quot;string to the terminal and then releases the secondary core from the reset. The secondary core toggles an on-board LED indicating that the secondary core is running." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" linked_projects="evkbmimxrt1170_hello_world_secondary_core" path="boards/evkbmimxrt1170/multicore_examples/hello_world/cm7">
          <external path="boards/evkbmimxrt1170/multicore_examples/hello_world/cm7" type="xml">
            <files mask="hello_world_primary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_freertos_message_buffers_primary_core" name="freertos_message_buffers_primary_core" brief="The FreeRTOS Message Buffers multicore project is a simple demonstration program that uses the MCUXpresso SDK software and the Message Buffers component of FreeRTOS. It shows how to implement lightweight core to core communication using FreeRTOS Message Buffers, which are lockless circular buffers that can pass data packets of varying sizes from a single sender to a single receiver.&#10;The primary core releases the secondary core from the reset and then the inter-core communication is established.&#10;Once the Message Buffers are initialized on both cores the message exchange starts, incrementing a virtual counter, that is part of the message payload.&#10;The message pingpong finishes when the counter reaches the value of 100. The Message Buffer is deinitialized at the end.&#10;NXP Multicore Manager (MCMGR) component is used for several purposes in this example: - it releases the secondary core from the reset (starts the secondary code) - it registers and use the application event for init handshaking (the secondary core application signals to the primary core it is ready to communicate) - it registers and use the FreeRtosMessageBuffersEvent for inter-core interrupts triggering and interrupts handling.&#10;Shared memory usage:&#10;This multicore example uses the shared memory for data exchange. The shared memory region is defined and the size can be adjustable in the linker file. The shared memory region start address and the size have to be defined in linker file for each core equally. The shared memory start address is then exported from the linker to the application to allow placing FreeRTOS Message Buffers at a fixed location that is then known for both cores." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" linked_projects="evkbmimxrt1170_freertos_message_buffers_secondary_core" path="boards/evkbmimxrt1170/multicore_examples/freertos_message_buffers/cm7">
          <external path="boards/evkbmimxrt1170/multicore_examples/freertos_message_buffers/cm7" type="xml">
            <files mask="freertos_message_buffers_primary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_erpc_two_way_rpc_rpmsg_rtos_primary_core" name="erpc_two_way_rpc_rpmsg_rtos_primary_core" brief="The Multicore eRPC Two Way RPC RTOS project is a simple demonstration program that uses the MCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Call between cores of the multicore system. This multicore example shows how both the eRPC client and the eRPC server can be setup on one side/core (bidirectional communication) and how to handle callback functions in eRPC. The primary core (Core0) creates client and server tasks first. The client task releases the secondary core from the reset, initializes the RPMsg-Lite erpc transport and once the server task is running it configures the arbitrated client. Then the application logic is running. The secondary core (Core1) creates client and server tasks two. The client task initializes the RPMsg-Lite erpc transport and once the server task is running it configures the arbitrated client. Then the application logic is running. The client task logic of the Core1 is very simple, it repeatedly calls the increaseNumber() erpc function that is implemented on the Core0 and that increments the counter. The client task logic of the Core0 alternately issues either getNumberFromCore0() function implementation on the Core0 or getNumberFromCore1() function implementation on the Core1 (erpc call). Then, the nestedCallGetNumber() erpc function call is issued that alternately triggers either getNumberFromCore1() function implementation on the Core1 (normal erpc call) or it triggers the getNumberFromCore0() function implementation on the Core0 (nested erpc call, routed through the Core1 erpc server).&#10;Shared memory usage.&#10;This multicore example uses the shared memory for data exchange. The shared memory region is defined and the size can be adjustable in the linker file. The shared memory region start address and the size have to be defined in linker file for each core equally. The shared memory start address is then exported from the linker to the application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" linked_projects="evkbmimxrt1170_erpc_two_way_rpc_rpmsg_rtos_secondary_core" path="boards/evkbmimxrt1170/multicore_examples/erpc_two_way_rpc_rpmsg_rtos/cm7">
          <external path="boards/evkbmimxrt1170/multicore_examples/erpc_two_way_rpc_rpmsg_rtos/cm7" type="xml">
            <files mask="erpc_two_way_rpc_rpmsg_rtos_primary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_erpc_matrix_multiply_rpmsg_rtos_primary_core" name="erpc_matrix_multiply_rpmsg_rtos_primary_core" brief="The Multicore eRPC Matrix Multiply RTOS project is a simple demonstration program that uses the MCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Call between cores of the multicore system. The primary core (eRPC client) releases the secondary core (eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let the secondary core to perform the multiplication of two randomly generated matrices. The original matrices and the result matrix is printed out to the serial console by the primary core. The matrix multiplication can be issued repeatedly when pressing a SW board button. RPMsg-Lite erpc transport layer is used in this example application.&#10;Shared memory usage.&#10;This multicore example uses the shared memory for data exchange. The shared memory region is defined and the size can be adjustable in the linker file. The shared memory region start address and the size have to be defined in linker file for each core equally. The shared memory start address is then exported from the linker to the application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" linked_projects="evkbmimxrt1170_erpc_matrix_multiply_rpmsg_rtos_secondary_core" path="boards/evkbmimxrt1170/multicore_examples/erpc_matrix_multiply_rpmsg_rtos/cm7">
          <external path="boards/evkbmimxrt1170/multicore_examples/erpc_matrix_multiply_rpmsg_rtos/cm7" type="xml">
            <files mask="erpc_matrix_multiply_rpmsg_rtos_primary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_erpc_matrix_multiply_rpmsg_primary_core" name="erpc_matrix_multiply_rpmsg_primary_core" brief="The Multicore eRPC Matrix Multiply project is a simple demonstration program that uses the MCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Call between cores of the multicore system. The primary core (eRPC client) releases the secondary core (eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let the secondary core to perform the multiplication of two randomly generated matrices. The original matrices and the result matrix is printed out to the serial console by the primary core. The matrix multiplication can be issued repeatedly when pressing a SW board button. RPMsg-Lite erpc transport layer is used in this example application.&#10;Shared memory usage.&#10;This multicore example uses the shared memory for data exchange. The shared memory region is defined and the size can be adjustable in the linker file. The shared memory region start address and the size have to be defined in linker file for each core equally. The shared memory start address is then exported from the linker to the application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" linked_projects="evkbmimxrt1170_erpc_matrix_multiply_rpmsg_secondary_core" path="boards/evkbmimxrt1170/multicore_examples/erpc_matrix_multiply_rpmsg/cm7">
          <external path="boards/evkbmimxrt1170/multicore_examples/erpc_matrix_multiply_rpmsg/cm7" type="xml">
            <files mask="erpc_matrix_multiply_rpmsg_primary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_erpc_matrix_multiply_mu_rtos_primary_core" name="erpc_matrix_multiply_mu_rtos_primary_core" brief="The Multicore eRPC Matrix Multiply RTOS project is a simple demonstration program that uses the MCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Call between cores of the multicore system. The primary core (eRPC client) releases the secondary core (eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let the secondary core to perform the multiplication of two randomly generated matrices. The original matrices and the result matrix is printed out to the serial console by the primary core. The matrix multiplication can be issued repeatedly when pressing a SW board button. MU (Messaging Unit) erpc transport layer is used in this example application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" linked_projects="evkbmimxrt1170_erpc_matrix_multiply_mu_rtos_secondary_core" path="boards/evkbmimxrt1170/multicore_examples/erpc_matrix_multiply_mu_rtos/cm7">
          <external path="boards/evkbmimxrt1170/multicore_examples/erpc_matrix_multiply_mu_rtos/cm7" type="xml">
            <files mask="erpc_matrix_multiply_mu_rtos_primary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_erpc_matrix_multiply_mu_primary_core" name="erpc_matrix_multiply_mu_primary_core" brief="The Multicore eRPC Matrix Multiply project is a simple demonstration program that uses the MCUXpresso SDK software and the Multicore SDK to show how to implement the Remote Procedure Call between cores of the multicore system. The primary core (eRPC client) releases the secondary core (eRPC server) from the reset and then the erpcMatrixMultiply() eRPC call is issued to let the secondary core to perform the multiplication of two randomly generated matrices. The original matrices and the result matrix is printed out to the serial console by the primary core. The matrix multiplication can be issued repeatedly when pressing a SW board button. MU (Messaging Unit) erpc transport layer is used in this example application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="multicore_examples" linked_projects="evkbmimxrt1170_erpc_matrix_multiply_mu_secondary_core" path="boards/evkbmimxrt1170/multicore_examples/erpc_matrix_multiply_mu/cm7">
          <external path="boards/evkbmimxrt1170/multicore_examples/erpc_matrix_multiply_mu/cm7" type="xml">
            <files mask="erpc_matrix_multiply_mu_primary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_mbedtls_selftest_cm7" name="mbedtls_selftest_cm7" brief="The mbedTLS SelfTest program performs cryptographic algorithm testing and prints results to the terminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="mbedtls_examples" path="boards/evkbmimxrt1170/mbedtls_examples/mbedtls_selftest/cm7">
          <external path="boards/evkbmimxrt1170/mbedtls_examples/mbedtls_selftest/cm7" type="xml">
            <files mask="mbedtls_selftest_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_mbedtls_benchmark_cm7" name="mbedtls_benchmark_cm7" brief="The mbedTLS Benchmark demo application performs cryptographic algorithm benchmarking and prints results to the terminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="mbedtls_examples" path="boards/evkbmimxrt1170/mbedtls_examples/mbedtls_benchmark/cm7">
          <external path="boards/evkbmimxrt1170/mbedtls_examples/mbedtls_benchmark/cm7" type="xml">
            <files mask="mbedtls_benchmark_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_freertos_tickless_cm7" name="freertos_tickless_cm7" brief="This document explains the freertos_tickless example. It shows the CPU enter at sleep mode and then it is waked up by expired time delay that using timer module." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="freertos_examples" path="boards/evkbmimxrt1170/freertos_examples/freertos_tickless/cm7">
          <external path="boards/evkbmimxrt1170/freertos_examples/freertos_tickless/cm7" type="xml">
            <files mask="freertos_tickless_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_freertos_swtimer_cm7" name="freertos_swtimer_cm7" brief="This document explains the freertos_swtimer example. It shows usage of software timer and itscallback.The example application creates one software timer SwTimer. The timer's callback SwTimerCallback isperiodically executed and text &quot;Tick.&quot; is printed to terminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="freertos_examples" path="boards/evkbmimxrt1170/freertos_examples/freertos_swtimer/cm7">
          <external path="boards/evkbmimxrt1170/freertos_examples/freertos_swtimer/cm7" type="xml">
            <files mask="freertos_swtimer_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_freertos_sem_static_cm7" name="freertos_sem_static_cm7" brief="This document explains the freertos_sem example, what to expect when running it and a briefintroduction to the API. The freertos_sem example code shows how semaphores works. Two differenttasks are synchronized in bilateral rendezvous model.The example uses four tasks. One producer_task and three consumer_tasks. The producer_task starts bycreating of two semaphores (xSemaphore_producer and xSemaphore_consumer). These semaphores controlaccess to virtual item. The synchronization is based on bilateral rendezvous pattern. Both ofconsumer and producer must be prepared to enable transaction." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="freertos_examples" path="boards/evkbmimxrt1170/freertos_examples/freertos_sem_static/cm7">
          <external path="boards/evkbmimxrt1170/freertos_examples/freertos_sem_static/cm7" type="xml">
            <files mask="freertos_sem_static_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_freertos_sem_cm7" name="freertos_sem_cm7" brief="This document explains the freertos_sem example, what to expect when running it and a briefintroduction to the API. The freertos_sem example code shows how semaphores works. Two different tasks are synchronized in bilateral rendezvous model.The example uses four tasks. One producer_task and three consumer_tasks. The producer_task starts bycreating of two semaphores (xSemaphore_producer and xSemaphore_consumer). These semaphores controlaccess to virtual item. The synchronization is based on bilateral rendezvous pattern. Both ofconsumer and producer must be prepared to enable transaction." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="freertos_examples" path="boards/evkbmimxrt1170/freertos_examples/freertos_sem/cm7">
          <external path="boards/evkbmimxrt1170/freertos_examples/freertos_sem/cm7" type="xml">
            <files mask="freertos_sem_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_freertos_queue_cm7" name="freertos_queue_cm7" brief="This document explains the freertos_queue example. This example introduce simple logging mechanismbased on message passing.Example could be devided in two parts. First part is logger. It contain three tasks:log_add().....Add new message into the log. Call xQueueSend function to pass new message into message queue.log_init()....Initialize logger (create logging task and message queue log_queue).log_task()....Task responsible for printing of log output.Second part is application of this simple logging mechanism. Each of two tasks write_task_1 andwrite_task_2 print 5 messages into log." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="freertos_examples" path="boards/evkbmimxrt1170/freertos_examples/freertos_queue/cm7">
          <external path="boards/evkbmimxrt1170/freertos_examples/freertos_queue/cm7" type="xml">
            <files mask="freertos_queue_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_freertos_mutex_cm7" name="freertos_mutex_cm7" brief="This document explains the freertos_mutex example. It shows how mutex manage access to commonresource (terminal output).The example application creates two identical instances of write_task. Each task will lock the mutexbefore printing and unlock it after printing to ensure that the outputs from tasks are not mixedtogether.The test_task accept output message during creation as function parameter. Output message have twoparts. If xMutex is unlocked, the write_task_1 acquire xMutex and print first part of message. Thenrescheduling is performed. In this moment scheduler check if some other task could run, but secondtask write_task+_2 is blocked because xMutex is already locked by first write task. The firstwrite_task_1 continue from last point by printing of second message part. Finaly the xMutex isunlocked and second instance of write_task_2 is executed." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="freertos_examples" path="boards/evkbmimxrt1170/freertos_examples/freertos_mutex/cm7">
          <external path="boards/evkbmimxrt1170/freertos_examples/freertos_mutex/cm7" type="xml">
            <files mask="freertos_mutex_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_freertos_hello_cm7" name="freertos_hello_cm7" brief="The Hello World project is a simple demonstration program that uses the SDK UART driver in combination with FreeRTOS. The purpose of this demo is to show how to use the debug console and to provide a simple project for debugging and further development.The example application creates one task called hello_task. This task print &quot;Hello world.&quot; message via debug console utility and suspend itself." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="freertos_examples" path="boards/evkbmimxrt1170/freertos_examples/freertos_hello/cm7">
          <external path="boards/evkbmimxrt1170/freertos_examples/freertos_hello/cm7" type="xml">
            <files mask="freertos_hello_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_freertos_generic_cm7" name="freertos_generic_cm7" brief="This document explains the freertos_generic example. It is based on code FreeRTOS documentation from http://www.freertos.org/Hardware-independent-RTOS-example.html. It shows combination of several tasks with queue, software timer, tick hook and semaphore.The example application creates three tasks. The prvQueueSendTask periodically sending data to xQueue queue. The prvQueueReceiveTask is waiting for incoming message and counting number of received messages. Task prvEventSemaphoreTask is waiting for xEventSemaphore semaphore given from vApplicationTickHook. Tick hook give semaphore every 500 ms.Other hook types used for RTOS and resource statistics are also demonstrated in example:* vApplicationIdleHook* vApplicationStackOverflowHook* vApplicationMallocFailedHook" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="freertos_examples" path="boards/evkbmimxrt1170/freertos_examples/freertos_generic/cm7">
          <external path="boards/evkbmimxrt1170/freertos_examples/freertos_generic/cm7" type="xml">
            <files mask="freertos_generic_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_freertos_event_cm7" name="freertos_event_cm7" brief="This document explains the freertos_event example. It shows how task waits for an event (defined setof bits in event group). This event can be set by any other process or interrupt in the system.The example application creates three tasks. Two write tasks write_task_1 and write_task_2continuously setting event bit 0 and bit 1.Read_task is waiting for any event bit and printing actual state on console. Event bits areautomatically cleared after read task is entered.Three possible states can occurre:Both bits are set.zBit B0 is set.Bit B1 is set." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="freertos_examples" path="boards/evkbmimxrt1170/freertos_examples/freertos_event/cm7">
          <external path="boards/evkbmimxrt1170/freertos_examples/freertos_event/cm7" type="xml">
            <files mask="freertos_event_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_emwin_gui_demo_cm7" name="emwin_gui_demo_cm7" brief="The example demonstrates graphical widgets of the emWin library." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="emwin_examples" path="boards/evkbmimxrt1170/emwin_examples/emwin_gui_demo/cm7">
          <external path="boards/evkbmimxrt1170/emwin_examples/emwin_gui_demo/cm7" type="xml">
            <files mask="emwin_gui_demo_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_mipi_dsi_compliant_test_cm7" name="mipi_dsi_compliant_test_cm7" brief="This project is used for MIPI DSI compliant test." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="display_examples" path="boards/evkbmimxrt1170/display_examples/mipi_dsi_compliant_test/cm7">
          <external path="boards/evkbmimxrt1170/display_examples/mipi_dsi_compliant_test/cm7" type="xml">
            <files mask="mipi_dsi_compliant_test_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_fbdev_freertos_cm7" name="fbdev_freertos_cm7" brief="This example shows how to use the fbdev component. The fbdev masks the difference of LCD controllers and provides a unified APIs for upper layers. At the same time, the frame buffers are managed by the FBDEV. When the example runs, you can see a rectangle moving in the screen, and its color changes when reached the border." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="display_examples" path="boards/evkbmimxrt1170/display_examples/fbdev_freertos/cm7">
          <external path="boards/evkbmimxrt1170/display_examples/fbdev_freertos/cm7" type="xml">
            <files mask="fbdev_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_sd_png_cm7" name="sd_png_cm7" brief="The SD PNG Demo application reads the PNG pictures from the SD card, decodesthem, and shows them in the LCD panel one by one." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="display_examples" path="boards/evkbmimxrt1170/display_examples/sd_png/cm7">
          <external path="boards/evkbmimxrt1170/display_examples/sd_png/cm7" type="xml">
            <files mask="sd_png_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_sd_jpeg_cm7" name="sd_jpeg_cm7" brief="The SD JPEG Demo application reads the JPEG pictures from the SD card, decodesthem, and shows them in the LCD panel one by one." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="display_examples" path="boards/evkbmimxrt1170/display_examples/sd_jpeg/cm7">
          <external path="boards/evkbmimxrt1170/display_examples/sd_jpeg/cm7" type="xml">
            <files mask="sd_jpeg_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_h264_freertos_cm7" name="h264_freertos_cm7" brief="This project read the h264 files from SD card, decode them and show the frames in LCD panel." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="display_examples" path="boards/evkbmimxrt1170/display_examples/h264_freertos/cm7">
          <external path="boards/evkbmimxrt1170/display_examples/h264_freertos/cm7" type="xml">
            <files mask="h264_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_log_bm_cm7" name="log_bm_cm7" brief="The log demo is used to demonstrate how to use log component. The main function of the demo is to prompt the LOG level string according to the user input log level command." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="component_examples" path="boards/evkbmimxrt1170/component_examples/log/bm/cm7">
          <external path="boards/evkbmimxrt1170/component_examples/log/bm/cm7" type="xml">
            <files mask="log_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_log_freertos_cm7" name="log_freertos_cm7" brief="The log demo is used to demonstrate how to use log component. The main function of the demo is to prompt the LOG level string according to the user input log level command." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="component_examples" path="boards/evkbmimxrt1170/component_examples/log/freertos/cm7">
          <external path="boards/evkbmimxrt1170/component_examples/log/freertos/cm7" type="xml">
            <files mask="log_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_flash_component_nand_semc_cm7" name="flash_component_nand_semc_cm7" brief="nand flash demo shows the use of nand flash component to erase, program, and read anexternal nand flash device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="component_examples/flash_component/semc_nand" path="boards/evkbmimxrt1170/component_examples/flash_component/semc_nand/cm7">
          <external path="boards/evkbmimxrt1170/component_examples/flash_component/semc_nand/cm7" type="xml">
            <files mask="flash_component_nand_semc_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_pf5020_cm7" name="pf5020_cm7" brief="The pf5020 driver example demonstrates the usage of pf5020 SDK component driver. The example shows the usage of pf5020 API to 1. Set regulator output voltages; 2. Set Internal high speed clock; 3. Set PF5020 to standby mode; 4. Dump PF5020 register content. To use this example, user need to pay attention the output voltage when update the regulator output and make sure the output voltage to set will not cause hardware damage." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="component_examples" path="boards/evkbmimxrt1170/component_examples/pf5020/cm7">
          <external path="boards/evkbmimxrt1170/component_examples/pf5020/cm7" type="xml">
            <files mask="pf5020_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_cmsis_lpuart_interrupt_transfer_cm7" name="cmsis_lpuart_interrupt_transfer_cm7" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http:/www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_interrupt_transfer example shows how to use uart cmsis driver in interrupt way:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpuart" path="boards/evkbmimxrt1170/cmsis_driver_examples/lpuart/interrupt_transfer/cm7">
          <external path="boards/evkbmimxrt1170/cmsis_driver_examples/lpuart/interrupt_transfer/cm7" type="xml">
            <files mask="cmsis_lpuart_interrupt_transfer_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_cmsis_lpuart_edma_transfer_cm7" name="cmsis_lpuart_edma_transfer_cm7" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http:/www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_edma_transfer example shows how to use uart cmsis  driver with EDMA:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpuart" path="boards/evkbmimxrt1170/cmsis_driver_examples/lpuart/edma_transfer/cm7">
          <external path="boards/evkbmimxrt1170/cmsis_driver_examples/lpuart/edma_transfer/cm7" type="xml">
            <files mask="cmsis_lpuart_edma_transfer_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_cmsis_lpspi_int_b2b_transfer_slave_cm7" name="cmsis_lpspi_int_b2b_transfer_slave_cm7" brief="The lpspi_int_b2b_transfer example shows how to use LPSPI CMSIS driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_int_b2b_transfer_slave.c' includes the LPSPI slave code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . " toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpspi" path="boards/evkbmimxrt1170/cmsis_driver_examples/lpspi/int_b2b_transfer/slave/cm7">
          <external path="boards/evkbmimxrt1170/cmsis_driver_examples/lpspi/int_b2b_transfer/slave/cm7" type="xml">
            <files mask="cmsis_lpspi_int_b2b_transfer_slave_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_cmsis_lpspi_int_b2b_transfer_master_cm7" name="cmsis_lpspi_int_b2b_transfer_master_cm7" brief="The cmsis_lpspi_int_b2b_transfer example shows how to use LPSPI CMSIS driver in interrupt way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_int_b2b_transfer_master.c' includes the LPSPI master code.This example uses the transactional API in LPSPI driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . " toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpspi" path="boards/evkbmimxrt1170/cmsis_driver_examples/lpspi/int_b2b_transfer/master/cm7">
          <external path="boards/evkbmimxrt1170/cmsis_driver_examples/lpspi/int_b2b_transfer/master/cm7" type="xml">
            <files mask="cmsis_lpspi_int_b2b_transfer_master_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_cmsis_lpspi_edma_b2b_transfer_slave_cm7" name="cmsis_lpspi_edma_b2b_transfer_slave_cm7" brief="The cmsis_lpspi_edma_b2b_transfer example shows how to use LPSPI CMSIS driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_edma_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in edma . " toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpspi" path="boards/evkbmimxrt1170/cmsis_driver_examples/lpspi/edma_b2b_transfer/slave/cm7">
          <external path="boards/evkbmimxrt1170/cmsis_driver_examples/lpspi/edma_b2b_transfer/slave/cm7" type="xml">
            <files mask="cmsis_lpspi_edma_b2b_transfer_slave_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_cmsis_lpspi_edma_b2b_transfer_master_cm7" name="cmsis_lpspi_edma_b2b_transfer_master_cm7" brief="The cmsis_lpspi_edma_b2b_transfer example shows how to use LPSPI CMSIS driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'cmsis_lpspi_edma_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in edma . " toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpspi" path="boards/evkbmimxrt1170/cmsis_driver_examples/lpspi/edma_b2b_transfer/master/cm7">
          <external path="boards/evkbmimxrt1170/cmsis_driver_examples/lpspi/edma_b2b_transfer/master/cm7" type="xml">
            <files mask="cmsis_lpspi_edma_b2b_transfer_master_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_cmsis_lpi2c_int_b2b_transfer_slave_cm7" name="cmsis_lpi2c_int_b2b_transfer_slave_cm7" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http:/www.keil.com/pack/doc/cmsis/Driver/html/index.html.The lpi2c_int_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpi2c" path="boards/evkbmimxrt1170/cmsis_driver_examples/lpi2c/int_b2b_transfer/slave/cm7">
          <external path="boards/evkbmimxrt1170/cmsis_driver_examples/lpi2c/int_b2b_transfer/slave/cm7" type="xml">
            <files mask="cmsis_lpi2c_int_b2b_transfer_slave_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_cmsis_lpi2c_int_b2b_transfer_master_cm7" name="cmsis_lpi2c_int_b2b_transfer_master_cm7" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http:/www.keil.com/pack/doc/cmsis/Driver/html/index.html.The lpi2c_int_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpi2c" path="boards/evkbmimxrt1170/cmsis_driver_examples/lpi2c/int_b2b_transfer/master/cm7">
          <external path="boards/evkbmimxrt1170/cmsis_driver_examples/lpi2c/int_b2b_transfer/master/cm7" type="xml">
            <files mask="cmsis_lpi2c_int_b2b_transfer_master_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_cmsis_lpi2c_edma_b2b_transfer_slave_cm7" name="cmsis_lpi2c_edma_b2b_transfer_slave_cm7" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http:/www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_edma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with EDMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpi2c" path="boards/evkbmimxrt1170/cmsis_driver_examples/lpi2c/edma_b2b_transfer/slave/cm7">
          <external path="boards/evkbmimxrt1170/cmsis_driver_examples/lpi2c/edma_b2b_transfer/slave/cm7" type="xml">
            <files mask="cmsis_lpi2c_edma_b2b_transfer_slave_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_cmsis_lpi2c_edma_b2b_transfer_master_cm7" name="cmsis_lpi2c_edma_b2b_transfer_master_cm7" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http:/www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_edma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with EDMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/lpi2c" path="boards/evkbmimxrt1170/cmsis_driver_examples/lpi2c/edma_b2b_transfer/master/cm7">
          <external path="boards/evkbmimxrt1170/cmsis_driver_examples/lpi2c/edma_b2b_transfer/master/cm7" type="xml">
            <files mask="cmsis_lpi2c_edma_b2b_transfer_master_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_cmsis_enet_txrx_transfer_cm7" name="cmsis_enet_txrx_transfer_cm7" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide &#10;range of supported microcontroller devices. The API connects microcontroller peripherals with middleware &#10;that implements for example communication stacks, file systems, or graphic user interfaces. &#10;More information and usage method please refer to http:/www.keil.com/pack/doc/cmsis/Driver/html/index.html.&#10;&#10;The cmsis_enet_transfer example shows how to use CMSIS ENET driver:&#10;&#10;In this example, the ENET transmits 20 number broadcast frames and will print the received frame.&#10;&#10;" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/enet" path="boards/evkbmimxrt1170/cmsis_driver_examples/enet/txrx_transfer/cm7">
          <external path="boards/evkbmimxrt1170/cmsis_driver_examples/enet/txrx_transfer/cm7" type="xml">
            <files mask="cmsis_enet_txrx_transfer_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_xrdc2_cm7" name="xrdc2_cm7" brief="The xrdc2 example shows how to control the memory and peripheral accesspolicy using XRDC.In this example, one peripheral and a memory region are set to unaccessible, thenthe hardfault occurs." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/xrdc2" path="boards/evkbmimxrt1170/driver_examples/xrdc2/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/xrdc2/cm7" type="xml">
            <files mask="xrdc2_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_semc_xecc_single_error_cm7" name="semc_xecc_single_error_cm7" brief="The XECC Single Error project is a simple demonstration program of the SDK XECC driver. It supports Single Error Correction ECC function to provide reliability for external memory ECC region access." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/xecc" path="boards/evkbmimxrt1170/driver_examples/xecc/semc/xecc_single_error/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/xecc/semc/xecc_single_error/cm7" type="xml">
            <files mask="semc_xecc_single_error_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_semc_xecc_multi_error_cm7" name="semc_xecc_multi_error_cm7" brief="The MECC Multi Error project is a simple demonstration program of the SDK MECC driver. It supports Double Error Detection(SECDED) ECC function to provide reliability for external memory ECC region access." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/xecc" path="boards/evkbmimxrt1170/driver_examples/xecc/semc/xecc_multi_error/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/xecc/semc/xecc_multi_error/cm7" type="xml">
            <files mask="semc_xecc_multi_error_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_flexspi_xecc_single_error_cm7" name="flexspi_xecc_single_error_cm7" brief="The XECC Single Error project is a simple demonstration program of the SDK XECC driver. It supports Single Error Correction ECC function to provide reliability for external memory ECC region access." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/xecc" path="boards/evkbmimxrt1170/driver_examples/xecc/flexspi/xecc_single_error/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/xecc/flexspi/xecc_single_error/cm7" type="xml">
            <files mask="flexspi_xecc_single_error_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_flexspi_xecc_multi_error_cm7" name="flexspi_xecc_multi_error_cm7" brief="The MECC Multi Error project is a simple demonstration program of the SDK MECC driver. It supports Double Error Detection(SECDED) ECC function to provide reliability for external memory ECC region access." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/xecc" path="boards/evkbmimxrt1170/driver_examples/xecc/flexspi/xecc_multi_error/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/xecc/flexspi/xecc_multi_error/cm7" type="xml">
            <files mask="flexspi_xecc_multi_error_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_xbara_cm7" name="xbara_cm7" brief="The Xbara project is a simple demonstration program of the SDK Xbara driver.The intended applicationof this module is to provide a flexible crossbar switch function that allows any input to beconnected to any output under user control.It sets up the Xbara hardware block to trigger a periodicinterrupt after every 1 second. When the Xbar interrupt is triggered a message a printed on the UARTterminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/xbara" path="boards/evkbmimxrt1170/driver_examples/xbara/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/xbara/cm7" type="xml">
            <files mask="xbara_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_wdog01_cm7" name="wdog01_cm7" brief="The WDOG Example project is to demonstrate usage of the KSDK wdog driver.In this example,implemented to test the wdog.And then after 10 times of refreshing the watchdog, a timeout reset is generated.We also try to refresh out of window to trigger reset after 10 times of refreshing.Please notice that because WDOG control registers are write-once only, so the WDOG_Init function and the WDOG_Disable function can be called only once after reset." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/wdog" path="boards/evkbmimxrt1170/driver_examples/wdog/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/wdog/cm7" type="xml">
            <files mask="wdog01_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_tempsensor_cm7" name="tempsensor_cm7" brief="The TEMPSENSOR project is a simple demonstration program of the SDK TEMPSENSOR driver.The temperatue sensor (TEMPSENSOR) module features alarm functions that can raise independent interrupt signals if the temperature is above two high-temperature thresholds and below a low temperature threshold, the system can then use this module to monitor the on-die temperature and take appropriate actions such as throttling back the core frequency when a the high temperature interrupt is set." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/tempsensor" path="boards/evkbmimxrt1170/driver_examples/tempsensor/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/tempsensor/cm7" type="xml">
            <files mask="tempsensor_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_ssarc_software_trigger_cm7" name="ssarc_software_trigger_cm7" brief="The ssarc_software_trigger project is a simple demonstration program of the SDK SSARC driver. It save the memory contains and restore the memory contains based on software method." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/ssarc" path="boards/evkbmimxrt1170/driver_examples/ssarc/software_trigger/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/ssarc/software_trigger/cm7" type="xml">
            <files mask="ssarc_software_trigger_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_src_global_reset_cm7" name="src_global_reset_cm7" brief="The src_global_reset example shows how to reset the selected slice via software.s" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples" path="boards/evkbmimxrt1170/driver_examples/src/src_global_reset/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/src/src_global_reset/cm7" type="xml">
            <files mask="src_global_reset_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_spdif_interrupt_transfer_cm7" name="spdif_interrupt_transfer_cm7" brief="The spdif_interrupt_transfer example shows how to use spdif driver with interrupt:In this example, one spdif instance playbacks the audio data recorded by the same spdif instance using interrupt.Notice: Please use 48KHz sample rate for PC playback and set SPDIF output device to 48KHz." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/spdif" path="boards/evkbmimxrt1170/driver_examples/spdif/interrupt_transfer/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/spdif/interrupt_transfer/cm7" type="xml">
            <files mask="spdif_interrupt_transfer_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_spdif_edma_transfer_cm7" name="spdif_edma_transfer_cm7" brief="The spdif_edma_transfer example shows how to use spdif driver with edma:In this example, one spdif instance playbacks the audio data recorded by same spdif instance using edma.Notice: Please use 48KHz sample rate for PC playback and set SPDIF output device to 48KHz." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/spdif" path="boards/evkbmimxrt1170/driver_examples/spdif/edma_transfer/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/spdif/edma_transfer/cm7" type="xml">
            <files mask="spdif_edma_transfer_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_snvs_sw_zmk_cm7" name="snvs_sw_zmk_cm7" brief="The SNVS SW ZMK project shows how to provision the zeroizable master key (ZMK) by software based on SDK SNVS driver. In this example, ZMK key value is set and ECC is enabled. When change the ZMK key value, violation detected and ZMK key is zeroized." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/snvs" path="boards/evkbmimxrt1170/driver_examples/snvs/snvs_sw_zmk/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/snvs/snvs_sw_zmk/cm7" type="xml">
            <files mask="snvs_sw_zmk_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_snvs_lp_tamper_cm7" name="snvs_lp_tamper_cm7" brief="The SNVS LP TAMPER project is a simple demonstration program of the SDK SNVS LP driver. The test will set up pasive and active tamper pins and also enables and test voltage, temperature and clock tampers." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/snvs" path="boards/evkbmimxrt1170/driver_examples/snvs/snvs_lp_tamper/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/snvs/snvs_lp_tamper/cm7" type="xml">
            <files mask="snvs_lp_tamper_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_snvs_lp_srtc_cm7" name="snvs_lp_srtc_cm7" brief="The SNVS LP SRTC project is a simple demonstration program of the SDK SNVS LP driver. The test will set up secure RTC (SRTC) date and time to a predefined value and starts the counter, then the SRTC counter value is synchronized with non secure RTC (RTC). RTC then triggers an alarm after a user specified time period. The alarm will be set with reference to this predefined dateand time." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/snvs" path="boards/evkbmimxrt1170/driver_examples/snvs/snvs_lp_srtc/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/snvs/snvs_lp_srtc/cm7" type="xml">
            <files mask="snvs_lp_srtc_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_snvs_lp_mc_cm7" name="snvs_lp_mc_cm7" brief="The SNVS LP MC project shows how to use the Monotonic Counter (MC) based on SDK SNVS LP driver. In this example, the MC value is increased and checked several times." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/snvs" path="boards/evkbmimxrt1170/driver_examples/snvs/snvs_lp_mc/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/snvs/snvs_lp_mc/cm7" type="xml">
            <files mask="snvs_lp_mc_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_snvs_hp_rtc_cm7" name="snvs_hp_rtc_cm7" brief="The SNVS HP RTC project is a simple demonstration program of the SDK SNVS HP driver. The test will set up RTC date and time to a predefined value and starts the counter. RTC then triggers an alarm after a user specified time period. The alarm will be set with reference to this predefined date and time." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/snvs" path="boards/evkbmimxrt1170/driver_examples/snvs/snvs_hp_rtc/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/snvs/snvs_hp_rtc/cm7" type="xml">
            <files mask="snvs_hp_rtc_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_snvs_hp_hac_cm7" name="snvs_hp_hac_cm7" brief="The SNVS HP HAC project shows how to use the High Assurance Counter (HAC) based on SDK SNVS HP driver. In this example, The HAC is enabled and set a initial value. Software fatal security violation is triggered, and the SSM switches to soft fail mode. In soft fail mode, software stops the HAC counter, and clear the HAC to make SSM switch to hard fail mode. The system resets when enters hard fail mode." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/snvs" path="boards/evkbmimxrt1170/driver_examples/snvs/snvs_hp_hac/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/snvs/snvs_hp_hac/cm7" type="xml">
            <files mask="snvs_hp_hac_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_smartcard_cm7" name="smartcard_cm7" brief="This example demonstrates the SDK Peripheral drivers working with different methods.This example demonstrates use of smartcard driver API to read GSM sim card ICC-ID (Integrated circuit card identifier,which should be placed on the card). Please be aware, that this example is just simple demonstration of smartcard driver API. It may not work with all typesof GSM sim cards." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/smartcard" path="boards/evkbmimxrt1170/driver_examples/smartcard/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/smartcard/cm7" type="xml">
            <files mask="smartcard_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_semc_cm7" name="semc_cm7" brief="The sdramc example shows how to use SEMC controller driver to initialize the external SDRAM chip." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/semc" path="boards/evkbmimxrt1170/driver_examples/semc/sdram/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/semc/sdram/cm7" type="xml">
            <files mask="semc_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_sema4_dualcore_primary_core" name="sema4_dualcore_primary_core" brief="This example shows how to use the SEMA4 gate lock and unlock, and the gate notify feature. In this example, core 0 sends command to core 1 through MU. According to the commands, core 1 locks and unlocks the specific SEMA4 gate at the proper time. If core 0 trys to lock a SEMA4 gate which has been locked by core 1, the opeartion fails, and core 0 is notified when the SEMA4 gate is unlocked by core 1. This example demonstrates this feature." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sema4" linked_projects="evkbmimxrt1170_sema4_dualcore_secondary_core" path="boards/evkbmimxrt1170/driver_examples/sema4/dualcore/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/sema4/dualcore/cm7" type="xml">
            <files mask="sema4_dualcore_primary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_sema4_basic_cm7" name="sema4_basic_cm7" brief="The sema4 basic example shows how to use SEMA4 driver to do basic gate operaions, including lock, unlock, and reset." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sema4" path="boards/evkbmimxrt1170/driver_examples/sema4/basic/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/sema4/basic/cm7" type="xml">
            <files mask="sema4_basic_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_sai_interrupt_transfer_cm7" name="sai_interrupt_transfer_cm7" brief="The sai_interrupt_transfer example shows how to use sai driver with interrupt:In this example, one sai instance playbacks the audio data stored in flash/SRAM using interrupt." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sai" path="boards/evkbmimxrt1170/driver_examples/sai/interrupt_transfer/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/sai/interrupt_transfer/cm7" type="xml">
            <files mask="sai_interrupt_transfer_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_sai_interrupt_record_playback_cm7" name="sai_interrupt_record_playback_cm7" brief="The sai_interrupt_record_playback example shows how to use sai driver with record and playback features: In this example, one sai instance record the audio data from input and playbacks the audio data." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sai" path="boards/evkbmimxrt1170/driver_examples/sai/interrupt_record_playback/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/sai/interrupt_record_playback/cm7" type="xml">
            <files mask="sai_interrupt_record_playback_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_sai_interrupt_cm7" name="sai_interrupt_cm7" brief="The sai_interrupt example shows how to use sai functional API to implement interrupt playback:In this example, one sai instance playbacks the audio data stored in flash/SRAM using interrupt." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sai" path="boards/evkbmimxrt1170/driver_examples/sai/interrupt/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/sai/interrupt/cm7" type="xml">
            <files mask="sai_interrupt_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_sai_edma_transfer_cm7" name="sai_edma_transfer_cm7" brief="The sai_edma_transfer example shows how to use sai driver with EDMA:In this example, one sai instance playbacks the audio data stored in flash/SRAM using EDMA channel." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sai" path="boards/evkbmimxrt1170/driver_examples/sai/edma_transfer/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/sai/edma_transfer/cm7" type="xml">
            <files mask="sai_edma_transfer_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_sai_edma_tdm_record_playback_cm7" name="sai_edma_tdm_record_playback_cm7" brief="The sai_edma_tdm_record_plyback example shows how to use sai driver to generate TDM format with EDMA:In this example, one sai instance record and playbacks the audio data in TDM format." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sai" path="boards/evkbmimxrt1170/driver_examples/sai/edma_tdm_record_playback/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/sai/edma_tdm_record_playback/cm7" type="xml">
            <files mask="sai_edma_tdm_record_playback_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_sai_edma_tdm_cm7" name="sai_edma_tdm_cm7" brief="The sai_edma_tdm example shows how to use sai driver to generate TDM format with EDMA:In this example, one sai instance playbacks the audio data stored in sdcard." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sai" path="boards/evkbmimxrt1170/driver_examples/sai/edma_tdm/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/sai/edma_tdm/cm7" type="xml">
            <files mask="sai_edma_tdm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_sai_edma_standalone_transfer_cm7" name="sai_edma_standalone_transfer_cm7" brief="The sai_edma_standalone_transfer example shows how to use sai driver with EDMA:In this example, one sai instance playbacks the audio data stored in flash/SRAM using EDMA channel." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sai" path="boards/evkbmimxrt1170/driver_examples/sai/edma_standalone_transfer/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/sai/edma_standalone_transfer/cm7" type="xml">
            <files mask="sai_edma_standalone_transfer_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_sai_edma_record_playback_cm7" name="sai_edma_record_playback_cm7" brief="The sai_edma_record_playback example shows how to use sai driver with EDMA: In this example, one sai instance record the audio data from input and playbacks the audio data." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sai" path="boards/evkbmimxrt1170/driver_examples/sai/edma_record_playback/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/sai/edma_record_playback/cm7" type="xml">
            <files mask="sai_edma_record_playback_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_sai_edma_ping_pong_buffer_half_interrupt_cm7" name="sai_edma_ping_pong_buffer_half_interrupt_cm7" brief="The sai_edma_ping_pong_buffer_half_interrupt example shows how to use sai driver with EDMA half interrupt feature: In this example, one sai instance playbacks the audio data stored in flash/SRAM using EDMA channel." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sai" path="boards/evkbmimxrt1170/driver_examples/sai/edma_ping_pong_buffer_half_interrupt/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/sai/edma_ping_pong_buffer_half_interrupt/cm7" type="xml">
            <files mask="sai_edma_ping_pong_buffer_half_interrupt_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_sai_edma_ping_pong_buffer_cm7" name="sai_edma_ping_pong_buffer_cm7" brief="The sai_edma_ping_pong_buffer example shows how to use sai driver with EDMA:In this example, one sai instance playbacks the audio data stored in flash/SRAM using EDMA channel." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sai" path="boards/evkbmimxrt1170/driver_examples/sai/edma_ping_pong_buffer/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/sai/edma_ping_pong_buffer/cm7" type="xml">
            <files mask="sai_edma_ping_pong_buffer_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_sai_edma_multi_channel_transfer_cm7" name="sai_edma_multi_channel_transfer_cm7" brief="The sai_edma_multi_channel_transfer example shows how to use sai driver with EDMA:In this example, one sai instance playbacks the audio data stored in flash/SRAM using EDMA channel." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sai" path="boards/evkbmimxrt1170/driver_examples/sai/edma_multi_channel_transfer/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/sai/edma_multi_channel_transfer/cm7" type="xml">
            <files mask="sai_edma_multi_channel_transfer_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_rtwdog_cm7" name="rtwdog_cm7" brief="The RTWDOG Example project is to demonstrate usage of the KSDK rtwdog driver.In this example, fast testing is first implemented to test the rtwdog.After this, refreshing the watchdog in None-window mode and window mode is executed.Note rtwdog is disabled in SystemInit function which means rtwdog is disabledafter chip emerges from reset." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/rtwdog" path="boards/evkbmimxrt1170/driver_examples/rtwdog/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/rtwdog/cm7" type="xml">
            <files mask="rtwdog_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_rdc_cm7" name="rdc_cm7" brief="The RDC example shows how to control the peripheral and memory regionasscess policy using RDC and RDC_SEMA42" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/rdc" path="boards/evkbmimxrt1170/driver_examples/rdc/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/rdc/cm7" type="xml">
            <files mask="rdc_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_qtmr_timer_cm7" name="qtmr_timer_cm7" brief="The QTMR project is a simple demonstration program of the SDK QTMR driver to use QTMR as a timer.The quad-timer module provides four timer channels with a variety of controls affecting both individualand multi-channel features. It sets up the QTMR hardware block to trigger an interrupt every 50 millisecond.When chaining the first channel and the second channel, Timer interrupt occur every 10 second.When the QTMR interrupt is triggered a message a printed on the UART terminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/qtmr" path="boards/evkbmimxrt1170/driver_examples/qtmr/timer/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/qtmr/timer/cm7" type="xml">
            <files mask="qtmr_timer_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_qtmr_inputcapture_outputpwm_dma_cm7" name="qtmr_inputcapture_outputpwm_dma_cm7" brief="The QTMR project is a demonstration program of the SDK QTMR driver's input capture and output pwm feature by DMA.The example sets up a QTMR channel for input capture. Once the input signal is received,this example will print the capture value.The example also sets up one QTMR channel to output pwm. The user should probe a 50Khz PWM signal output with50% dutycycle with a oscilloscope.The user can enter a value to update the Duty cycle." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/qtmr" path="boards/evkbmimxrt1170/driver_examples/qtmr/inputcapture_outputpwm_dma/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/qtmr/inputcapture_outputpwm_dma/cm7" type="xml">
            <files mask="qtmr_inputcapture_outputpwm_dma_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_qtmr_inputcapture_outputpwm_cm7" name="qtmr_inputcapture_outputpwm_cm7" brief="The QTMR project is a demonstration program of the SDK QTMR driver's input capture and output pwm feature.The example sets up a QTMR channel for input capture. Once the input signal is received,this example will enter interrupt and print the capture value.The example also sets up one QTMR channel to output pwm. The user should probe a 50Khz PWM signal output with50% dutycycle with a oscilloscope. " toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/qtmr" path="boards/evkbmimxrt1170/driver_examples/qtmr/inputcapture_outputpwm/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/qtmr/inputcapture_outputpwm/cm7" type="xml">
            <files mask="qtmr_inputcapture_outputpwm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_pxp_scale_cm7" name="pxp_scale_cm7" brief="The PXP scale project shows how to use the PXP scale function. If this exampleruns correctly, you will see a square with three color(red, green and blue).The square size is changing." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pxp" path="boards/evkbmimxrt1170/driver_examples/pxp/scale/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/pxp/scale/cm7" type="xml">
            <files mask="pxp_scale_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_pxp_rotate_cm7" name="pxp_rotate_cm7" brief="The PXP rotate project shows how to use the PXP rotate function. If this exampleruns correctly, you will see a square with three color(red, green and blue).The rotate degree is changing." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pxp" path="boards/evkbmimxrt1170/driver_examples/pxp/rotate/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/pxp/rotate/cm7" type="xml">
            <files mask="pxp_rotate_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_pxp_queue_cm7" name="pxp_queue_cm7" brief="The PXP queue project shows how to use the PXP command queue. This exampleuse the command queue to rotate the process surface. If this exampleruns correctly, you will see a square with three color(red, green and blue).The rotate degree is changing." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pxp" path="boards/evkbmimxrt1170/driver_examples/pxp/queue/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/pxp/queue/cm7" type="xml">
            <files mask="pxp_queue_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_pxp_porter_duff_cm7" name="pxp_porter_duff_cm7" brief="This example shows how to use the PXP Porter Duff compositing. In this example, A blue rectangle is in the left up corner of the destination surface (also named PS surface, or s0 in reference mannal). A red rectangle is in the center of the source surface (also named AS surface, or s1 in reference mannal). When press any key in the terminal, the Porter Duff mode changes and the panel shows the result." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pxp" path="boards/evkbmimxrt1170/driver_examples/pxp/porter_duff/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/pxp/porter_duff/cm7" type="xml">
            <files mask="pxp_porter_duff_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_pxp_lcdif_handshake_cm7" name="pxp_lcdif_handshake_cm7" brief="The PXP LCDIF hand shake project shows how to enable the hand shake betweenPXP and LCDIF. If this example runs correctly, you will see two rectangles moving in thescreen. One rectangle is process surface output, and the other is alpha surfaceoutput, the overlay region color is OR'ed value of process surface and alpha surface.NOTE:This example must run continously to get the right result, breaking during debugwill results to handshake fail. Because the PXP must be started before every LCDframe, if system is halt, the PXP does not start correctly." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pxp" path="boards/evkbmimxrt1170/driver_examples/pxp/lcdif_handshake/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/pxp/lcdif_handshake/cm7" type="xml">
            <files mask="pxp_lcdif_handshake_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_pxp_flip_cm7" name="pxp_flip_cm7" brief="The PXP flip project shows how to use the PXP flip function. If this exampleruns correctly, you will see a square with three color(red, green and blue).The flip mode is changing." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pxp" path="boards/evkbmimxrt1170/driver_examples/pxp/flip/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/pxp/flip/cm7" type="xml">
            <files mask="pxp_flip_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_pxp_fill_rectangle_cm7" name="pxp_fill_rectangle_cm7" brief="The PXP fill rectangle project shows how to use the PXP to draw a solid rectangle with configured color. If this example runs correctly, you will see the panel filled with red, green and blue in a row." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pxp" path="boards/evkbmimxrt1170/driver_examples/pxp/fill_rectangle/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/pxp/fill_rectangle/cm7" type="xml">
            <files mask="pxp_fill_rectangle_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_pxp_copy_pic_cm7" name="pxp_copy_pic_cm7" brief="The PXP copy_pic project shows how to use the PXP to copy image from one buffer to another buffer." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pxp" path="boards/evkbmimxrt1170/driver_examples/pxp/copy_pic/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/pxp/copy_pic/cm7" type="xml">
            <files mask="pxp_copy_pic_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_pxp_color_key_cm7" name="pxp_color_key_cm7" brief="The PXP color key project shows how to use the AS color key together with the alpha blend. In this example, the AS pixel format is RGB565, the global alpha is used for alpha blend." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pxp" path="boards/evkbmimxrt1170/driver_examples/pxp/color_key/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/pxp/color_key/cm7" type="xml">
            <files mask="pxp_color_key_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_pxp_blend_cm7" name="pxp_blend_cm7" brief="The PXP blend project shows how to blend process surface and alpha surface usingPXP. If this example runs correctly, you will see two rectangles moving in thescreen. One rectangle is process surface output, and the other is alpha surfaceoutput, the overlay region color is OR'ed value of process surface and alpha surface." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pxp" path="boards/evkbmimxrt1170/driver_examples/pxp/blend/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/pxp/blend/cm7" type="xml">
            <files mask="pxp_blend_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_pwm_cm7" name="pwm_cm7" brief="The PWM project is a simple demonstration program of the SDK PWM driver.The pulse width modulator (PWM) module contains PWM submodules, each of which is set up to control a single half-bridge power stage.Fault channel support is provided. This PWM module can generate various switching patterns, including highly sophisticated waveforms.It can be used to control all known Switched Mode Power Supplies (SMPS) topologies." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pwm" path="boards/evkbmimxrt1170/driver_examples/pwm/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/pwm/cm7" type="xml">
            <files mask="pwm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_pit_cm7" name="pit_cm7" brief="The PIT project is a simple demonstration program of the SDK PIT driver. It sets up the PIThardware block to trigger a periodic interrupt after every 1 second. When the PIT interrupt is triggereda message a printed on the UART terminal and an LED is toggled on the board." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pit" path="boards/evkbmimxrt1170/driver_examples/pit/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/pit/cm7" type="xml">
            <files mask="pit_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_pdm_sai_multi_channel_tdm_edma_cm7" name="pdm_sai_multi_channel_tdm_edma_cm7" brief="The pdm_sai_multi_channel_tdm_edma example shows how to use pdm edma driver to record multi channel data together with sai edma driver" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pdm" path="boards/evkbmimxrt1170/driver_examples/pdm/pdm_sai_multi_channel_tdm_edma/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/pdm/pdm_sai_multi_channel_tdm_edma/cm7" type="xml">
            <files mask="pdm_sai_multi_channel_tdm_edma_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_pdm_sai_multi_channel_edma_cm7" name="pdm_sai_multi_channel_edma_cm7" brief="The pdm_sai_multi_channel_edma example shows how to use pdm edma driver to record multi channel data together with sai edma driver" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pdm" path="boards/evkbmimxrt1170/driver_examples/pdm/pdm_sai_multi_channel_edma/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/pdm/pdm_sai_multi_channel_edma/cm7" type="xml">
            <files mask="pdm_sai_multi_channel_edma_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_pdm_sai_interrupt_transfer_cm7" name="pdm_sai_interrupt_transfer_cm7" brief="The pdm_sdma_transfer example shows how to use pdm driver with interrupt transaction api:In this example, one sai instance loopback the audio data that recieve from PDM." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pdm" path="boards/evkbmimxrt1170/driver_examples/pdm/pdm_sai_interrupt_transfer/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/pdm/pdm_sai_interrupt_transfer/cm7" type="xml">
            <files mask="pdm_sai_interrupt_transfer_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_pdm_sai_interrupt_cm7" name="pdm_sai_interrupt_cm7" brief="The pdm_sdma_transfer example shows how to use pdm driver with interrupt:In this example, one sai instance loopback the audio data that recieve from PDM." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pdm" path="boards/evkbmimxrt1170/driver_examples/pdm/pdm_sai_interrupt/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/pdm/pdm_sai_interrupt/cm7" type="xml">
            <files mask="pdm_sai_interrupt_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_pdm_sai_edma_cm7" name="pdm_sai_edma_cm7" brief="The pdm_sai_sdma example shows how to use pdm edma driver together with sai edma driver" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pdm" path="boards/evkbmimxrt1170/driver_examples/pdm/pdm_sai_edma/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/pdm/pdm_sai_edma/cm7" type="xml">
            <files mask="pdm_sai_edma_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_pdm_interrupt_cm7" name="pdm_interrupt_cm7" brief="The pdm_interrupt example shows how to use pdm driver with interrupt:In this example, one pdm instance playbacks the audio data stored in flash using interrupt." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pdm" path="boards/evkbmimxrt1170/driver_examples/pdm/pdm_interrupt/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/pdm/pdm_interrupt/cm7" type="xml">
            <files mask="pdm_interrupt_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_pdm_hwvad_cm7" name="pdm_hwvad_cm7" brief="The pdm_hwvad example shows how to use pdm driver with interrupt:In this example, one pdm instance playbacks the audio data stored in flash using interrupt." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pdm" path="boards/evkbmimxrt1170/driver_examples/pdm/pdm_hwvad/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/pdm/pdm_hwvad/cm7" type="xml">
            <files mask="pdm_hwvad_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_pdm_edma_transfer_cm7" name="pdm_edma_transfer_cm7" brief="pdm_edma_transfer" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pdm" path="boards/evkbmimxrt1170/driver_examples/pdm/pdm_edma_transfer/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/pdm/pdm_edma_transfer/cm7" type="xml">
            <files mask="pdm_edma_transfer_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_ocotp_example_cm7" name="ocotp_example_cm7" brief="The ocotp driver example shows how to operation the OCOTP register with driver API." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/ocotp" path="boards/evkbmimxrt1170/driver_examples/ocotp/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/ocotp/cm7" type="xml">
            <files mask="ocotp_example_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_mu_polling_primary_core" name="mu_polling_primary_core" brief="The mu_polling example shows how to use MU driver in polling way:In this example:1. Core 0 send message to Core 1 in polling mode via MU module.2. Core 1 send message back to Core 0 in polling mode.3. Core 0 receive message sent from Core 1 in polling mode." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/mu" linked_projects="evkbmimxrt1170_mu_polling_secondary_core" path="boards/evkbmimxrt1170/driver_examples/mu/polling/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/mu/polling/cm7" type="xml">
            <files mask="mu_polling_primary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_mu_interrupt_primary_core" name="mu_interrupt_primary_core" brief="The mu_interrupt example shows how to use MU driver in interrupt way:In this example:1. Core 0 send message to Core 1 in interrupt mode via MU module.2. Core 1 send message back to Core 0 in interrupt mode.3. Core 0 receive message sent from Core 1 in interrupt mode." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/mu" linked_projects="evkbmimxrt1170_mu_interrupt_secondary_core" path="boards/evkbmimxrt1170/driver_examples/mu/interrupt/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/mu/interrupt/cm7" type="xml">
            <files mask="mu_interrupt_primary_core_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_mecc_single_error_cm7" name="mecc_single_error_cm7" brief="The MECC Single Error project is a simple demonstration program of the SDK MECC driver. It supports Single Error Correction ECC function to provide reliability for 4 banks On-Chip RAM(OCRAM) access." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/mecc" path="boards/evkbmimxrt1170/driver_examples/mecc/mecc_single_error/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/mecc/mecc_single_error/cm7" type="xml">
            <files mask="mecc_single_error_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_mecc_multi_error_cm7" name="mecc_multi_error_cm7" brief="The MECC Multi Error project is a simple demonstration program of the SDK MECC driver. It supports Double Error Detection(SECDED) ECC function to provide reliability for 4 banks On-Chip RAM(OCRAM) access." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/mecc" path="boards/evkbmimxrt1170/driver_examples/mecc/mecc_multi_error/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/mecc/mecc_multi_error/cm7" type="xml">
            <files mask="mecc_multi_error_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpuart_polling_seven_bits_cm7" name="lpuart_polling_seven_bits_cm7" brief="The lpuart_polling_seven_bits Example project is to demonstrate usage of the KSDK lpuart driver with seven data bits feature enabled.In the example, you can send characters to the console back and they will be printed out onto console instantly.NOTE: Please set com port format to &quot;7 data bits without parity bit&quot; in PC's com port tool" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/evkbmimxrt1170/driver_examples/lpuart/polling_seven_bits/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/lpuart/polling_seven_bits/cm7" type="xml">
            <files mask="lpuart_polling_seven_bits_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpuart_polling_cm7" name="lpuart_polling_cm7" brief="The lpuart_polling Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console instantly." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/evkbmimxrt1170/driver_examples/lpuart/polling/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/lpuart/polling/cm7" type="xml">
            <files mask="lpuart_polling_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpuart_interrupt_transfer_seven_bits_cm7" name="lpuart_interrupt_transfer_seven_bits_cm7" brief="The lpuart_interrupt_transfer_seven_bits Example project is to demonstrate usage of the KSDK lpuart driver with seven data bits feature enabled.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters.NOTE: Please set com port format to &quot;7 data bits without parity bit&quot; in PC's com port tool" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/evkbmimxrt1170/driver_examples/lpuart/interrupt_transfer_seven_bits/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/lpuart/interrupt_transfer_seven_bits/cm7" type="xml">
            <files mask="lpuart_interrupt_transfer_seven_bits_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpuart_interrupt_transfer_cm7" name="lpuart_interrupt_transfer_cm7" brief="The lpuart_interrupt Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/evkbmimxrt1170/driver_examples/lpuart/interrupt_transfer/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/lpuart/interrupt_transfer/cm7" type="xml">
            <files mask="lpuart_interrupt_transfer_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpuart_interrupt_rb_transfer_cm7" name="lpuart_interrupt_rb_transfer_cm7" brief="The lpuart_interrupt_ring_buffer Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/evkbmimxrt1170/driver_examples/lpuart/interrupt_rb_transfer/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/lpuart/interrupt_rb_transfer/cm7" type="xml">
            <files mask="lpuart_interrupt_rb_transfer_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpuart_interrupt_cm7" name="lpuart_interrupt_cm7" brief="The lpuart_functioncal_interrupt example shows how to use lpuart driver functionalAPI to receive data with interrupt method:In this example, one lpuart instance connect to PC, the board willsend back all characters that PC send to the board." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/evkbmimxrt1170/driver_examples/lpuart/interrupt/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/lpuart/interrupt/cm7" type="xml">
            <files mask="lpuart_interrupt_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpuart_edma_transfer_cm7" name="lpuart_edma_transfer_cm7" brief="The lpuart_edma Example project is to demonstrate usage of the KSDK lpuart driver.In the example, you can send characters to the console back and they will be printed out onto console in a group of 8 characters." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/evkbmimxrt1170/driver_examples/lpuart/edma_transfer/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/lpuart/edma_transfer/cm7" type="xml">
            <files mask="lpuart_edma_transfer_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpuart_9bit_interrupt_transfer_cm7" name="lpuart_9bit_interrupt_transfer_cm7" brief="The lpuart_9bit_interrupt_transfer example shows how to use lpuart driver in 9-bit mode in multi-slave system. Master can send data to slave with certain address specifically, and slave can only receive data when it is addressed. In this example, one lpuart instance is used with address configured. Its TX and RX pins are connected together. First it sends a piece of data out, then addresses itself, after that sends the other piece of data. Only data sent after the address can be received by itself." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpuart" path="boards/evkbmimxrt1170/driver_examples/lpuart/9bit_interrupt_transfer/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/lpuart/9bit_interrupt_transfer/cm7" type="xml">
            <files mask="lpuart_9bit_interrupt_transfer_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpspi_polling_b2b_transfer_slave_cm7" name="lpspi_polling_b2b_transfer_slave_cm7" brief="The lpspi_polling_b2b_transfer example shows how to use LPSPI driver in polling way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_polling_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in polling . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/evkbmimxrt1170/driver_examples/lpspi/polling_b2b_transfer/slave/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/lpspi/polling_b2b_transfer/slave/cm7" type="xml">
            <files mask="lpspi_polling_b2b_transfer_slave_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpspi_polling_b2b_transfer_master_cm7" name="lpspi_polling_b2b_transfer_master_cm7" brief="The lpspi_polling_b2b_transfer example shows how to use LPSPI driver in polling way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_polling_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in polling . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/evkbmimxrt1170/driver_examples/lpspi/polling_b2b_transfer/master/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/lpspi/polling_b2b_transfer/master/cm7" type="xml">
            <files mask="lpspi_polling_b2b_transfer_master_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpspi_interrupt_b2b_slave_cm7" name="lpspi_interrupt_b2b_slave_cm7" brief="The lpspi_interrupt_b2b example shows how to use LPSPI driver in interrupt way:In this example , we need two boards , one board used as LPSPI master and another board used as LPSPI slave.The file 'dspi_interrupt_b2b_slave.c' includes the LPSPI slave code.This example does not use the transactional API in LPSPI driver. It's a demonstration that how to use the interrupt in KSDK driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/evkbmimxrt1170/driver_examples/lpspi/interrupt_b2b/slave/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/lpspi/interrupt_b2b/slave/cm7" type="xml">
            <files mask="lpspi_interrupt_b2b_slave_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpspi_interrupt_b2b_master_cm7" name="lpspi_interrupt_b2b_master_cm7" brief="The lpspi_interrupt_b2b example shows how to use LPSPI driver in interrupt way:In this example , we need two boards , one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_interrupt_b2b_master.c' includes the LPSPI master code.This example does not use the transactional API in LPSPI driver. It's a demonstration that how to use the interrupt in KSDK driver.1. LPSPI master send/received data to/from LPSPI slave in interrupt . (LPSPI Slave using interrupt to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/evkbmimxrt1170/driver_examples/lpspi/interrupt_b2b/master/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/lpspi/interrupt_b2b/master/cm7" type="xml">
            <files mask="lpspi_interrupt_b2b_master_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpspi_edma_b2b_transfer_slave_cm7" name="lpspi_edma_b2b_transfer_slave_cm7" brief="The lpspi_edma_b2b_transfer example shows how to use LPSPI driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_edma_b2b_transfer_slave.c' includes the LPSPI slave code.1. LPSPI master send/received data to/from LPSPI slave in edma . (LPSPI Slave using edma to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/evkbmimxrt1170/driver_examples/lpspi/edma_b2b_transfer/slave/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/lpspi/edma_b2b_transfer/slave/cm7" type="xml">
            <files mask="lpspi_edma_b2b_transfer_slave_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpspi_edma_b2b_transfer_master_cm7" name="lpspi_edma_b2b_transfer_master_cm7" brief="The lpspi_edma_b2b_transfer example shows how to use LPSPI driver in edma way:In this example , we need two boards, one board used as LPSPI master and another board used as LPSPI slave.The file 'lpspi_edma_b2b_transfer_master.c' includes the LPSPI master code.1. LPSPI master send/received data to/from LPSPI slave in edma . (LPSPI Slave using edma to receive/send the data)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpspi" path="boards/evkbmimxrt1170/driver_examples/lpspi/edma_b2b_transfer/master/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/lpspi/edma_b2b_transfer/master/cm7" type="xml">
            <files mask="lpspi_edma_b2b_transfer_master_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpi2c_polling_b2b_slave_cm7" name="lpi2c_polling_b2b_slave_cm7" brief="The lpi2c_polling_b2b_slave example shows how to use lpi2c driver as slave to do board to board transfer with a polling master:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/evkbmimxrt1170/driver_examples/lpi2c/polling_b2b/slave/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/lpi2c/polling_b2b/slave/cm7" type="xml">
            <files mask="lpi2c_polling_b2b_slave_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpi2c_polling_b2b_master_cm7" name="lpi2c_polling_b2b_master_cm7" brief="The lpi2c_polling_b2b_master example shows how to use lpi2c driver as master to do board to board transfer using polling method:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/evkbmimxrt1170/driver_examples/lpi2c/polling_b2b/master/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/lpi2c/polling_b2b/master/cm7" type="xml">
            <files mask="lpi2c_polling_b2b_master_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpi2c_interrupt_b2b_transfer_slave_cm7" name="lpi2c_interrupt_b2b_transfer_slave_cm7" brief="The lpi2c_interrupt_b2b_transfer_slave example shows how to use lpi2c driver as slave to do board to board transfer with interrupt:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/evkbmimxrt1170/driver_examples/lpi2c/interrupt_b2b_transfer/slave/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/lpi2c/interrupt_b2b_transfer/slave/cm7" type="xml">
            <files mask="lpi2c_interrupt_b2b_transfer_slave_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpi2c_interrupt_b2b_transfer_master_cm7" name="lpi2c_interrupt_b2b_transfer_master_cm7" brief="The lpi2c_interrupt_b2b_transfer_master example shows how to use lpi2c driver as master to do board to board transfer with interrupt:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/evkbmimxrt1170/driver_examples/lpi2c/interrupt_b2b_transfer/master/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/lpi2c/interrupt_b2b_transfer/master/cm7" type="xml">
            <files mask="lpi2c_interrupt_b2b_transfer_master_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpi2c_interrupt_cm7" name="lpi2c_interrupt_cm7" brief="The lpi2c_functional_interrupt example shows how to use lpi2c functional driver to build a interrupt based application:In this example , one lpi2c instance used as lpi2c master and another lpi2c instance used as lpi2c slave .1. lpi2c master send data using interrupt to lpi2c slave in interrupt .2. lpi2c master read data using interrupt from lpi2c slave in interrupt .3. The example assumes that the connection is OK between master and slave, so there's NO error handling code." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/evkbmimxrt1170/driver_examples/lpi2c/interrupt/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/lpi2c/interrupt/cm7" type="xml">
            <files mask="lpi2c_interrupt_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpi2c_edma_b2b_transfer_slave_cm7" name="lpi2c_edma_b2b_transfer_slave_cm7" brief="The lpi2c_edma_b2b_transfer_slave example shows how to use lpi2c driver as slave to do board to board transfer with a EDMA master:In this example, one lpi2c instance as slave and another lpi2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/evkbmimxrt1170/driver_examples/lpi2c/edma_b2b_transfer/slave/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/lpi2c/edma_b2b_transfer/slave/cm7" type="xml">
            <files mask="lpi2c_edma_b2b_transfer_slave_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpi2c_edma_b2b_transfer_master_cm7" name="lpi2c_edma_b2b_transfer_master_cm7" brief="The lpi2c_edma_b2b_transfer_master example shows how to use lpi2c driver as master to do board to board transfer with EDMA:In this example, one lpi2c instance as master and another lpi2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpi2c" path="boards/evkbmimxrt1170/driver_examples/lpi2c/edma_b2b_transfer/master/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/lpi2c/edma_b2b_transfer/master/cm7" type="xml">
            <files mask="lpi2c_edma_b2b_transfer_master_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpadc_polling_cm7" name="lpadc_polling_cm7" brief="The lpadc_single_polling example shows the simplest way to use LPADC driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the LPADC'ssample input. When running the project, typing any key into debug console would trigger the conversion. The execution would check the FIFO valid flag in loop until the flag is asserted, which means the conversion is completed. Then read the conversion result value and print it to debug console.Note, the default setting of initialization for the ADC converter is just an available configuration. User can changethe configuration structure's setting in application to fit the special requirement." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpadc" path="boards/evkbmimxrt1170/driver_examples/lpadc/polling/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/lpadc/polling/cm7" type="xml">
            <files mask="lpadc_polling_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpadc_interrupt_cm7" name="lpadc_interrupt_cm7" brief="The lpdc_single_interrupt example shows how to use interrupt with LPADC driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the LPADC'ssample input. When running the project, typing any key into debug console would trigger the conversion. ADC watermark interrupt would be asserted once the number of datawords stored in the ADC Result FIFO is greater than watermark value.In ADC ISR, the watermark flag would be cleared by reading the conversion result value. Also, result information wouldbe printed when the execution return to the main function." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpadc" path="boards/evkbmimxrt1170/driver_examples/lpadc/interrupt/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/lpadc/interrupt/cm7" type="xml">
            <files mask="lpadc_interrupt_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lcdifv2_rgb565_cm7" name="lcdifv2_rgb565_cm7" brief="The RGB565 project shows how to drive the RGB interface LCD using LCDIF driver.If this example runs correctly, a rectangle is moving in the screen, and the colorchanges every time it reaches the edges of the screen.The rectangle moving speed might be different with Debug target and Release target,because these two targets spend different time to fill the frame buffer." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lcdifv2" path="boards/evkbmimxrt1170/driver_examples/lcdifv2/rgb565/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/lcdifv2/rgb565/cm7" type="xml">
            <files mask="lcdifv2_rgb565_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lcdifv2_porter_duff_cm7" name="lcdifv2_porter_duff_cm7" brief="This example demonstrates how to use the LCDIF v2 porter duff feature. In this example, two layers are enabled and blended. The blend mode changes and the panel shows the different blend result." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lcdifv2" path="boards/evkbmimxrt1170/driver_examples/lcdifv2/porter_duff/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/lcdifv2/porter_duff/cm7" type="xml">
            <files mask="lcdifv2_porter_duff_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lcdifv2_multi_layer_alpha_cm7" name="lcdifv2_multi_layer_alpha_cm7" brief="This example demonstrates how to use the LCDIF v2 API to get the global alpha based on desired blended alpha, for the multi-layer blend case." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lcdifv2" path="boards/evkbmimxrt1170/driver_examples/lcdifv2/multi_layer_alpha/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/lcdifv2/multi_layer_alpha/cm7" type="xml">
            <files mask="lcdifv2_multi_layer_alpha_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lcdifv2_lut_cm7" name="lcdifv2_lut_cm7" brief="This example demonstrates how to use the LCDIF v2 color palette (LUT). In this example the pixel format is 8-bit LUT index. Although the LUT supports 256 items in this example only items 0-7 are used, because the frame buffer content are restricted to 0-7. When the example runs, a rectangle is moving in the screen, and its color changes when touch border." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lcdifv2" path="boards/evkbmimxrt1170/driver_examples/lcdifv2/lut/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/lcdifv2/lut/cm7" type="xml">
            <files mask="lcdifv2_lut_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lcdifv2_embedded_alpha_cm7" name="lcdifv2_embedded_alpha_cm7" brief="This example demonstrates how to use the LCDIF v2 multiple layer blend using the alpha embedded in pixel." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lcdifv2" path="boards/evkbmimxrt1170/driver_examples/lcdifv2/embedded_alpha/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/lcdifv2/embedded_alpha/cm7" type="xml">
            <files mask="lcdifv2_embedded_alpha_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lcdifv2_csc_cm7" name="lcdifv2_csc_cm7" brief="This example demonstrates how to use the LCDIF v2 driver to do the YUV to RGB conversion. In this example, the frame buffer pixel format is YUV, the byte order in frame buffer is Y U Y V Y U Y V ... The LCDIV v2 converts the color internally and sends out RGB color to the panel." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lcdifv2" path="boards/evkbmimxrt1170/driver_examples/lcdifv2/csc/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/lcdifv2/csc/cm7" type="xml">
            <files mask="lcdifv2_csc_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lcdifv2_alpha_cm7" name="lcdifv2_alpha_cm7" brief="This example demonstrates how to use the LCDIF v2 layer blend feature. In this example, two layers are enabled. For each layer, a global alpha value 50% (128) is used. When the example runs, two rectangles are shown, one blue and one red, in the overlay region, the color is purple." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lcdifv2" path="boards/evkbmimxrt1170/driver_examples/lcdifv2/alpha/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/lcdifv2/alpha/cm7" type="xml">
            <files mask="lcdifv2_alpha_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_kpp_cm7" name="kpp_cm7" brief="The KPP Example project is a demonstration program that uses the KSDK software to manipulate the Keypad MATRIX.The example is use the continuous column and rows as 4*4 or 8*8 matrix to show the example." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/kpp" path="boards/evkbmimxrt1170/driver_examples/kpp/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/kpp/cm7" type="xml">
            <files mask="kpp_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_key_manager_cm7" name="key_manager_cm7" brief="The Key Manager example shows how to configure Key Manager to select PUF key as Master Key and locks this setting" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/key" path="boards/evkbmimxrt1170/driver_examples/key_manager/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/key_manager/cm7" type="xml">
            <files mask="key_manager_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_igpio_led_output_cm7" name="igpio_led_output_cm7" brief="The GPIO Example project is a demonstration program that uses the KSDK software to manipulate the general-purposeoutputs.The example is supported by the set, clear, and toggle write-only registers for each port output data register. The example take turns to shine the LED." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/gpio" path="boards/evkbmimxrt1170/driver_examples/gpio/led_output/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/gpio/led_output/cm7" type="xml">
            <files mask="igpio_led_output_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_igpio_input_interrupt_cm7" name="igpio_input_interrupt_cm7" brief="The GPIO Example project is a demonstration program that uses the KSDK software to manipulate the general-purposeoutputs.The example is supported by the set, clear registers for each GPIO pin output register. " toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/gpio" path="boards/evkbmimxrt1170/driver_examples/gpio/input_interrupt/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/gpio/input_interrupt/cm7" type="xml">
            <files mask="igpio_input_interrupt_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_igpio_fast_gpio_cm7" name="igpio_fast_gpio_cm7" brief="The Fast GPIO demos the CM7 fast GPIO usage and performance comparsion with normal GPIO operation." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/gpio" path="boards/evkbmimxrt1170/driver_examples/gpio/fast_gpio/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/gpio/fast_gpio/cm7" type="xml">
            <files mask="igpio_fast_gpio_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_gpt_timer_cm7" name="gpt_timer_cm7" brief="The gpt_timer project is a simple demonstration program of the SDK GPT driver. It sets up the GPThardware block to trigger a periodic interrupt after every 1 second. When the GPT interrupt is triggereda message a printed on the UART terminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/gpt" path="boards/evkbmimxrt1170/driver_examples/gpt/timer/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/gpt/timer/cm7" type="xml">
            <files mask="gpt_timer_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_gpt_compare_cm7" name="gpt_compare_cm7" brief="The gpt_compare project is a simple demonstration program of the SDK GPT driver's output compare feature. Once content of an OCRx matches the value in GPT_CNT, output compare timer pin is toggled." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/gpt" path="boards/evkbmimxrt1170/driver_examples/gpt/compare/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/gpt/compare/cm7" type="xml">
            <files mask="gpt_compare_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_fsl_romapi_cm7" name="fsl_romapi_cm7" brief="The fsl_romapi example shows how to use flexspi rom api In this example, rom api will send data and operate the external Nor flash connected with FLEXSPI. Some simple flash command willbe executed, such as Write Enable, Erase sector, Program page.Example will first erase the sector and program a page into the flash, at last check if the data in flash is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/fsl_romapi" path="boards/evkbmimxrt1170/driver_examples/fsl_romapi/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/fsl_romapi/cm7" type="xml">
            <files mask="fsl_romapi_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_flexspi_nor_polling_transfer_cm7" name="flexspi_nor_polling_transfer_cm7" brief="The flexspi_nor_polling_transfer example shows how to use flexspi driver with polling:In this example, flexspi will send data and operate the external Nor flash connected with FLEXSPI. Some simple flash command willbe executed, such as Write Enable, Erase sector, Program page.Example will first erase the sector and program a page into the flash, at last check if the data in flash is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexspi" path="boards/evkbmimxrt1170/driver_examples/flexspi/nor/polling_transfer/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/flexspi/nor/polling_transfer/cm7" type="xml">
            <files mask="flexspi_nor_polling_transfer_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_flexspi_nor_edma_transfer_cm7" name="flexspi_nor_edma_transfer_cm7" brief="The flexspi_nor_edma_transfer example shows how to use flexspi driver with dma:In this example, flexspi will send data and operate the external nor flash connected with FLEXSPI. Some simple flash command will be executed, such as Write Enable, Erase sector, Program page.Example will first erase the sector and program a page into the flash, at last check if the data in flash is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexspi" path="boards/evkbmimxrt1170/driver_examples/flexspi/nor/edma_transfer/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/flexspi/nor/edma_transfer/cm7" type="xml">
            <files mask="flexspi_nor_edma_transfer_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_flexram_ram_allocate_cm7" name="flexram_ram_allocate_cm7" brief="The FLEXRAM project is a simple demonstration program of the SDK FLEXRAM driver. It allocate the on-chip ram and then access the OCRAM to demo magic address and access error interrupt." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexram" path="boards/evkbmimxrt1170/driver_examples/flexram/ram_allocate/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/flexram/ram_allocate/cm7" type="xml">
            <files mask="flexram_ram_allocate_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_flexram_ram_access_cm7" name="flexram_ram_access_cm7" brief="The FLEXRAM project is a simple demonstration program of the SDK FLEXRAM driver. It allocate the on-chip ram and then access the OCRAM to demo magic address and access error interrupt." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexram" path="boards/evkbmimxrt1170/driver_examples/flexram/ram_access/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/flexram/ram_access/cm7" type="xml">
            <files mask="flexram_ram_access_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_flexram_magic_address_cm7" name="flexram_magic_address_cm7" brief="The FLEXRAM project is a simple demonstration program of the SDK FLEXRAM driver. It allocate the on-chip ram and then access the OCRAM to demo magic address and access error interrupt." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/magic_address" path="boards/evkbmimxrt1170/driver_examples/flexram/magic_address/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/flexram/magic_address/cm7" type="xml">
            <files mask="flexram_magic_address_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_flexio_uart_polling_transfer_cm7" name="flexio_uart_polling_transfer_cm7" brief="The flexio_uart_polling example shows how to use flexio uart driver in polling way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send backall characters that PC send to the board." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkbmimxrt1170/driver_examples/flexio/uart/polling_transfer/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/flexio/uart/polling_transfer/cm7" type="xml">
            <files mask="flexio_uart_polling_transfer_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_flexio_uart_interrupt_transfer_cm7" name="flexio_uart_interrupt_transfer_cm7" brief="The flexio_uart_interrupt example shows how to use flexio uart driver in interrupt way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send back all charactersthat PC send to the board. Note: two queued transfer in this example, so please input even number characters." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkbmimxrt1170/driver_examples/flexio/uart/interrupt_transfer/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/flexio/uart/interrupt_transfer/cm7" type="xml">
            <files mask="flexio_uart_interrupt_transfer_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_flexio_uart_int_rb_transfer_cm7" name="flexio_uart_int_rb_transfer_cm7" brief="The flexio_uart_interrupt_ring_buffer example shows how to use flexio uart driver in interrupt way withRX ring buffer enabled:In this example, a flexio simulated uart connect to PC through USB-Serial, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkbmimxrt1170/driver_examples/flexio/uart/int_rb_transfer/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/flexio/uart/int_rb_transfer/cm7" type="xml">
            <files mask="flexio_uart_int_rb_transfer_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_flexio_uart_edma_transfer_cm7" name="flexio_uart_edma_transfer_cm7" brief="The flexio_uart_edma example shows how to use flexio uart driver in edma way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send back all charactersthat PC send to the board." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkbmimxrt1170/driver_examples/flexio/uart/edma_transfer/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/flexio/uart/edma_transfer/cm7" type="xml">
            <files mask="flexio_uart_edma_transfer_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_flexio_spi_polling_lpspi_transfer_master_cm7" name="flexio_spi_polling_lpspi_transfer_master_cm7" brief="The flexio_spi_master_pooling_lpspi_slave example shows how to use flexio spi master driver in polling way. In this example, a flexio simulated master connect to a lpspi slave." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkbmimxrt1170/driver_examples/flexio/spi/polling_lpspi_transfer/master/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/flexio/spi/polling_lpspi_transfer/master/cm7" type="xml">
            <files mask="flexio_spi_polling_lpspi_transfer_master_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_flexio_spi_int_lpspi_transfer_slave_cm7" name="flexio_spi_int_lpspi_transfer_slave_cm7" brief="The flexio_spi_slave_interrupt_lpspi_master example shows how to use flexio spi slave driver in interrupt way. In this example, a flexio simulated slave connect to a lpspi master." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkbmimxrt1170/driver_examples/flexio/spi/int_lpspi_transfer/slave/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/flexio/spi/int_lpspi_transfer/slave/cm7" type="xml">
            <files mask="flexio_spi_int_lpspi_transfer_slave_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_flexio_spi_int_lpspi_transfer_master_cm7" name="flexio_spi_int_lpspi_transfer_master_cm7" brief="The flexio_spi_master_interrupt_lpspi_slave example shows how to use flexio spi master driver in interrupt way. In this example, a flexio simulated master connect to a lpspi slave ." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkbmimxrt1170/driver_examples/flexio/spi/int_lpspi_transfer/master/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/flexio/spi/int_lpspi_transfer/master/cm7" type="xml">
            <files mask="flexio_spi_int_lpspi_transfer_master_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_flexio_spi_edma_lpspi_transfer_slave_dynamic_cm7" name="flexio_spi_edma_lpspi_transfer_slave_dynamic_cm7" brief="The flexio_spi_slave_dynamic example shows how to use flexio spi slave driver in edma way, In this example, a flexio simulated slave connect to a lpspi master. The CS signal remains low during transfer, after master finishes the transfer and re-asserts the CS signal, interrupt is triggered to let user know." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkbmimxrt1170/driver_examples/flexio/spi/edma_lpspi_transfer/slave_dynamic/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/flexio/spi/edma_lpspi_transfer/slave_dynamic/cm7" type="xml">
            <files mask="flexio_spi_edma_lpspi_transfer_slave_dynamic_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_flexio_spi_edma_lpspi_transfer_slave_cm7" name="flexio_spi_edma_lpspi_transfer_slave_cm7" brief="The flexio_spi_slave_edma_lpspi_master example shows how to use flexio spi slave driver in edma way:In this example, a flexio simulated slave connect to a lpspi master." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkbmimxrt1170/driver_examples/flexio/spi/edma_lpspi_transfer/slave/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/flexio/spi/edma_lpspi_transfer/slave/cm7" type="xml">
            <files mask="flexio_spi_edma_lpspi_transfer_slave_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_flexio_spi_edma_lpspi_transfer_master_cm7" name="flexio_spi_edma_lpspi_transfer_master_cm7" brief="The flexio_spi_master_edma_lpspi_slave example shows how to use flexio spi master driver in edma way:In this example, a flexio simulated master connect to a lpspi slave ." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkbmimxrt1170/driver_examples/flexio/spi/edma_lpspi_transfer/master/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/flexio/spi/edma_lpspi_transfer/master/cm7" type="xml">
            <files mask="flexio_spi_edma_lpspi_transfer_master_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_flexio_pwm_cm7" name="flexio_pwm_cm7" brief="This demo describes how to use SDK drivers to implement the PWM feature by FLEXIO IP module. It outputs the PWM singal with fixed frequency defined by &quot;DEMO_FLEXIO_FREQUENCY&quot; in source code and dynamic duty from 99 to 1 to one of the FLEXIO pin." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkbmimxrt1170/driver_examples/flexio/pwm/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/flexio/pwm/cm7" type="xml">
            <files mask="flexio_pwm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_flexio_i2s_interrupt_transfer_cm7" name="flexio_i2s_interrupt_transfer_cm7" brief="The flexio_i2s_interrupt example shows how to use flexio_i2s driver with interrupt:In this example, flexio acts as I2S module to record data from line-in line and playbacks the recorded data at the same time using interrupt." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkbmimxrt1170/driver_examples/flexio/i2s/interrupt_transfer/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/flexio/i2s/interrupt_transfer/cm7" type="xml">
            <files mask="flexio_i2s_interrupt_transfer_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_flexio_i2s_edma_transfer_cm7" name="flexio_i2s_edma_transfer_cm7" brief="The flexio_i2s_EDMA example shows how to use flexio_i2s driver with EDMA:In this example, flexio acts as I2S module to record data from line-in line and playbacks the recorded data at the same time using EDMA." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkbmimxrt1170/driver_examples/flexio/i2s/edma_transfer/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/flexio/i2s/edma_transfer/cm7" type="xml">
            <files mask="flexio_i2s_edma_transfer_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_flexio_i2c_interrupt_lpi2c_transfer_cm7" name="flexio_i2c_interrupt_lpi2c_transfer_cm7" brief="The flexio_lpi2c_interrupt example shows how to use flexio i2c master  driver in interrupt way:In this example, a flexio simulated i2c master connect to a LPI2C slave" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkbmimxrt1170/driver_examples/flexio/i2c/interrupt_lpi2c_transfer/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/flexio/i2c/interrupt_lpi2c_transfer/cm7" type="xml">
            <files mask="flexio_i2c_interrupt_lpi2c_transfer_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_flexcan_ping_pong_buffer_transfer_cm7" name="flexcan_ping_pong_buffer_transfer_cm7" brief="The flexcan_ping_pong_buffer_transfer example shows how to use the FlexCAN queue feature to create 2 simulate FIFOs that can receive CAN frames:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send CAN messages to Endpoint B(board B) when user input the number of CAN messages to be send in terminal. Endpoint B uses two receiving queues to receive messages in turn, and prints the message content and the receiving queue number to the terminal after any queue is full." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexcan" path="boards/evkbmimxrt1170/driver_examples/flexcan/ping_pong_buffer_transfer/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/flexcan/ping_pong_buffer_transfer/cm7" type="xml">
            <files mask="flexcan_ping_pong_buffer_transfer_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_flexcan_loopback_transfer_cm7" name="flexcan_loopback_transfer_cm7" brief="The flexcan_loopback example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrough internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexcan" path="boards/evkbmimxrt1170/driver_examples/flexcan/loopback_transfer/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/flexcan/loopback_transfer/cm7" type="xml">
            <files mask="flexcan_loopback_transfer_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_flexcan_loopback_cm7" name="flexcan_loopback_cm7" brief="The flexcan_loopback_functional example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrouth internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexcan" path="boards/evkbmimxrt1170/driver_examples/flexcan/loopback/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/flexcan/loopback/cm7" type="xml">
            <files mask="flexcan_loopback_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_flexcan_interrupt_transfer_cm7" name="flexcan_interrupt_transfer_cm7" brief="The flexcan_interrupt example shows how to use FlexCAN driver in none-blocking interrupt way:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send a CAN Message toEndpoint B(board B) when user press space key in terminal. Endpoint B receive the message, printthe message content to terminal and echo back the message. Endpoint A will increase the receivedmessage and waiting for the next transmission of the user initiated." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexcan" path="boards/evkbmimxrt1170/driver_examples/flexcan/interrupt_transfer/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/flexcan/interrupt_transfer/cm7" type="xml">
            <files mask="flexcan_interrupt_transfer_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_canfd_ping_pong_buffer_transfer_cm7" name="canfd_ping_pong_buffer_transfer_cm7" brief="The canfd_ping_pong_buffer_transfer example shows how to use the FlexCAN queue feature to create 2 simulate FIFOs that can receive CANFD frames:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send CANFD messages to Endpoint B(board B) when user input the number of CAN messages to be send in terminal. Endpoint B uses two receiving queues to receive messages in turn, and prints the message content and the receiving queue number to the terminal after any queue is full." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/canfd" path="boards/evkbmimxrt1170/driver_examples/canfd/ping_pong_buffer_transfer/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/canfd/ping_pong_buffer_transfer/cm7" type="xml">
            <files mask="canfd_ping_pong_buffer_transfer_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_canfd_loopback_transfer_cm7" name="canfd_loopback_transfer_cm7" brief="The canfd_loopback example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrough internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/canfd" path="boards/evkbmimxrt1170/driver_examples/canfd/loopback_transfer/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/canfd/loopback_transfer/cm7" type="xml">
            <files mask="canfd_loopback_transfer_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_canfd_loopback_cm7" name="canfd_loopback_cm7" brief="The canfd_loopback_functional example shows how to use the loopback test mode to debug your CAN Bus design:To demonstrates this example, only one board is needed. The example will config one FlexCAN MessageBuffer to Rx Message Buffer and the other FlexCAN Message Buffer to Tx Message Buffer with same ID.After that, the example will send a CAN Message from the Tx Message Buffer to the Rx Message Bufferthrouth internal loopback interconnect and print out the Message payload to terminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/canfd" path="boards/evkbmimxrt1170/driver_examples/canfd/loopback/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/canfd/loopback/cm7" type="xml">
            <files mask="canfd_loopback_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_canfd_interrupt_transfer_cm7" name="canfd_interrupt_transfer_cm7" brief="The canfd_interrupt example shows how to use FlexCAN driver in none-blocking interrupt way:In this example, 2 boards are connected through CAN bus. Endpoint A(board A) send a CAN Message toEndpoint B(board B) when user press space key in terminal. Endpoint B receive the message, printthe message content to terminal and echo back the message. Endpoint A will increase the receivedmessage and waiting for the next transmission of the user initiated." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/canfd" path="boards/evkbmimxrt1170/driver_examples/canfd/interrupt_transfer/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/canfd/interrupt_transfer/cm7" type="xml">
            <files mask="canfd_interrupt_transfer_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_ewm_cm7" name="ewm_cm7" brief="The EWM Example project is to demonstrate usage of the KSDK EWM driver.In the example, EWM counter is continuously refreshed until button is pressed.Once the button is pressed, EWM counter will expire and interrupt will be generated.After the first pressing, another interrupt can be triggered by pressing button again." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/ewm" path="boards/evkbmimxrt1170/driver_examples/ewm/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/ewm/cm7" type="xml">
            <files mask="ewm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_enet_qos_txrx_ptp1588_transfer_cm7" name="enet_qos_txrx_ptp1588_transfer_cm7" brief="The example shows the way to use ENET QOS driver to receive and transmit frame in the 1588 feature required cases.1. This example shows how to initialize the ENET_QOS.2. How to get the time stamp of the PTP 1588 timer.3. How to use Get the ENET_QOS transmit and receive frame time stamp.The example transmits 20 number PTP event frame, shows the timestamp of the transmitted frame.The length, source MAC address and destination MAC address of the received frame will be print. The time stamp of the received timestamp will be print when the PTP message frame is received(the outside loopback cable can be used to see the right rx time-stamping log since we send the ptp message). " toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/enet_qos" path="boards/evkbmimxrt1170/driver_examples/enet_qos/txrx_ptp1588_transfer/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/enet_qos/txrx_ptp1588_transfer/cm7" type="xml">
            <files mask="enet_qos_txrx_ptp1588_transfer_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_enet_qos_txrx_multiring_transfer_cm7" name="enet_qos_txrx_multiring_transfer_cm7" brief="The example shows the way to use ENET QOS driver to receive and transmit frames supported multi-ring platforms. this example is only supported in multi-ring platform. 1. This example shows how to initialize the ENET MAC. 2. How to use ENET MAC to transmit frames in avb supported multiple-ring platforms. The example transmits 20 number frames. For simple demo, we create frames with some special definition. 1. Build transmission frames with broadcast mac address. 2. Build frames with unicast mac address 3. Send broadcast frames to ring 0 and unitcase frames to ring 1, then receive them back in associated rings." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/enet_qos" path="boards/evkbmimxrt1170/driver_examples/enet_qos/txrx_multiring_transfer/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/enet_qos/txrx_multiring_transfer/cm7" type="xml">
            <files mask="enet_qos_txrx_multiring_transfer_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_enet_1g_txrx_multiring_transfer_cm7" name="enet_1g_txrx_multiring_transfer_cm7" brief="The enet_1g_txrx_multiring_transfer example shows the way to use ENET_1G driver to receive and transmit avb frame in the avb feature supported multi-ring platforms. this example is only supported in multi-ring platform.1. This example shows how to initialize the ENET_1G MAC.2. How to use ENET_1G MAC to transmit frames in avb supported multiple-ring platforms.The example transmits 30 number frames. For simple demo, we create frames with some special definition.1. Build transmission frames with broadcast mac address.2. Build different frames for each ring: 10 normal ethernet frame, 10 similar IEC 61883-6 type frames,10 similar IEC 61883-8 type frames and the two IEC 1722 avb frames are set with different vlan priority. Notice, To simply show how to use three different rings in rx/tx on one board. This example set PHY local loop and you will see there will be PHY init auto-negotiation fail and this is normal. because phy can not finishauto-negotiation when phy is in loop back mode. However, the auto-negotiation fail has no impact on this loop back example, so just forget about the failure auto-negotiation." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/enet_1g" path="boards/evkbmimxrt1170/driver_examples/enet_1g/txrx_multiring_transfer/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/enet_1g/txrx_multiring_transfer/cm7" type="xml">
            <files mask="enet_1g_txrx_multiring_transfer_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_enet_txrx_transfer_cm7" name="enet_txrx_transfer_cm7" brief="The enet_rxtx example shows the simplest way to use ENET driver for simple frame receive and transmit.1. This example shows how to initialize the ENET MAC.2. How to use ENET MAC to receive and transmit frame.The example transmits 20 number broadcast frame, print the frame length, source MAC addressand destination MAC address when receive frame.Note, The RMII mode is used for default setting to initialize the ENET interface between MAC and the external PHY. youcan change it to MII mode as you wish. Please make sure the MII Mode setting in the MAC is synchronize to the settingin TWR-SERIAL board for the external PHY." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/enet" path="boards/evkbmimxrt1170/driver_examples/enet/txrx_transfer/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/enet/txrx_transfer/cm7" type="xml">
            <files mask="enet_txrx_transfer_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_enet_txrx_ptp1588_transfer_cm7" name="enet_txrx_ptp1588_transfer_cm7" brief="The enet_rxtx_ptp1588 example shows the way to use ENET driver to receive and transmit frame in the 1588 feature required cases.1. This example shows how to initialize the ENET MAC.2. How to use ENET MAC to receive and transmit frame.3. How to add to the multicast group to receive PTP 1588 message.4. How to get the time stamp of the PTP 1588 timer.4. How to use Get the ENET transmit and receive frame time stamp.The example transmits 20 number PTP event frame, shows the timestamp of the transmitted frame.The length, source MAC address and destination MAC address of the received frame will be print. The time stamp of the received timestamp will be print when the PTP message frame is received. Note, The RMII mode is used for default setting to initialize the ENET interface between MAC and the external PHY. you can change it to MII mode as you wish. Please make sure the MII Mode setting in the MAC is synchronize to the settingin TWR-SERIAL board for the external PHY." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/enet" path="boards/evkbmimxrt1170/driver_examples/enet/txrx_ptp1588_transfer/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/enet/txrx_ptp1588_transfer/cm7" type="xml">
            <files mask="enet_txrx_ptp1588_transfer_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_enc_index_interrupt_cm7" name="enc_index_interrupt_cm7" brief="The enc_index_interrupt example shows how to use the interrupt of ENC module with ENC driver.In this example, user needs to connect a real encoder to the board. Actually, only PHASE A and PHASE B are enough for the basic application. However, the additional INDEX/HOME/TRIGGER could be used as the event detector. INDEX: This pulse can optionally reset the position counter and the pulse accumulator of the quadrature decoder module. It also causes a change of state on the revolution counter. The direction of this change, increment or decrement, is calculated from the PHASEA and PHASEB inputs.HOME: This input can be used to trigger the initialization of the position counters. Often this signal is connected to a sensor signalling the motor or machine, sending notification that it has reached a defined home position.TRIGGER: This input can be used to clear the position counters or to take a snapshot of the POS, REV, and POSD registers. Often this signal is connected to a periodic pulse generator or timer to indicate an elapsed time period.This example uses INDEX to response the external event. When running the project, user can turn the encoder so that ENC module can monitor the position change. Also, a variable counter would count the time of INDEX interrupt for rising edge on INDEX signal line." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/enc" path="boards/evkbmimxrt1170/driver_examples/enc/index_interrupt/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/enc/index_interrupt/cm7" type="xml">
            <files mask="enc_index_interrupt_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_enc_basic_cm7" name="enc_basic_cm7" brief="The enc_basic example shows how to quickly start using ENC driver.In this example, user needs to connect a real encoder to the board. Actually, only PHASE A and PHASE B are enough for the basic application. When running the project, user can turn the encoder so that ENC module can monitor the position change. Then, the internal counter would also count for the position. User can also type keys into terminal, and the current position values recorded by ENC would display. The ENC hardware is created with a special synchronize mechanism. There are actually 4 counters (the 32-bit position counter is combined with the two 16-bit counter registers) for position with responding hold registers. When any of the counter registers is read, the contents of each counter register is written to the corresponding hold register. Taking a snapshot of the counters' values provides a consistent view of a system position and a velocity to be attained." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/enc" path="boards/evkbmimxrt1170/driver_examples/enc/basic/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/enc/basic/cm7" type="xml">
            <files mask="enc_basic_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_elcdif_rgb_cm7" name="elcdif_rgb_cm7" brief="The ELCDIF RGB project shows how to drive the RGB interface LCD using eLCDIF driver.If this example runs correctly, a rectangle is moving in the screen, and the colorchanges every time it reaches the edges of the screen.The rectangle moving speed might be different with Debug target and Release target,because these two targets spend different time to fill the frame buffer." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/elcdif" path="boards/evkbmimxrt1170/driver_examples/elcdif/rgb/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/elcdif/rgb/cm7" type="xml">
            <files mask="elcdif_rgb_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_elcdif_lut_cm7" name="elcdif_lut_cm7" brief="The ELCDIF LUT project shows how to use the ELCDIF LUT to convert 8-bit input pixelto 24-bit output pixel. There are two LUT memories, this project uses one inputframe buffer, and swithes between the two memories, so from the LCD panel, twodifferent pictures are shown one by one." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/elcdif/lut" path="boards/evkbmimxrt1170/driver_examples/elcdif/lut/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/elcdif/lut/cm7" type="xml">
            <files mask="elcdif_lut_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_edma_wrap_transfer_cm7" name="edma_wrap_transfer_cm7" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/edma" path="boards/evkbmimxrt1170/driver_examples/edma/wrap_transfer/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/edma/wrap_transfer/cm7" type="xml">
            <files mask="edma_wrap_transfer_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_edma_scatter_gather_cm7" name="edma_scatter_gather_cm7" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/edma" path="boards/evkbmimxrt1170/driver_examples/edma/scatter_gather/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/edma/scatter_gather/cm7" type="xml">
            <files mask="edma_scatter_gather_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_edma_ping_pong_transfer_cm7" name="edma_ping_pong_transfer_cm7" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/edma" path="boards/evkbmimxrt1170/driver_examples/edma/ping_pong_transfer/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/edma/ping_pong_transfer/cm7" type="xml">
            <files mask="edma_ping_pong_transfer_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_edma_memory_to_memory_cm7" name="edma_memory_to_memory_cm7" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/edma" path="boards/evkbmimxrt1170/driver_examples/edma/memory_to_memory/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/edma/memory_to_memory/cm7" type="xml">
            <files mask="edma_memory_to_memory_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_edma_interleave_transfer_cm7" name="edma_interleave_transfer_cm7" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/edma" path="boards/evkbmimxrt1170/driver_examples/edma/interleave_transfer/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/edma/interleave_transfer/cm7" type="xml">
            <files mask="edma_interleave_transfer_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_edma_channel_link_cm7" name="edma_channel_link_cm7" brief="The EDMA memory to memory example is a simple demonstration program that uses the SDK software.It excuates one shot transfer from source buffer to destination buffer using the SDK EDMA drivers.The purpose of this example is to show how to use the EDMA and to provide a simple example fordebugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/edma" path="boards/evkbmimxrt1170/driver_examples/edma/channel_link/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/edma/channel_link/cm7" type="xml">
            <files mask="edma_channel_link_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dcic_cm7" name="dcic_cm7" brief="This example shows how to use DCIC to monitor the display content integrity." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/dcic" path="boards/evkbmimxrt1170/driver_examples/dcic/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/dcic/cm7" type="xml">
            <files mask="dcic_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dac12_fifo_interrupt_cm7" name="dac12_fifo_interrupt_cm7" brief="The dac12_fifo_interrupt example shows how to use DAC12 FIFO interrupt.When the DAC12 FIFO watermark interrupt is enabled firstly, the application would enter the DAC12 ISR immediately, since remaining FIFO data is less than the watermark. Then the FIFO would be feed inside the ISR. Then the DAC12 interrupt could be restrained. Once the DAC12 FIFO is triggered in while loop, the data in FIFO is read out, then it becomes less than the watermark, so the FIFO would be feed again in DAC12 ISR. With this example, user can define the DAC12 output array to generate the different wave output. Also the software trigger can be called in some timer ISR so that the DAC12 would output the analog signal in indicated period. Or even use the hardware trigger to release the CPU." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/dac12" path="boards/evkbmimxrt1170/driver_examples/dac12/fifo_interrupt/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/dac12/fifo_interrupt/cm7" type="xml">
            <files mask="dac12_fifo_interrupt_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dac12_basic_cm7" name="dac12_basic_cm7" brief="The dac12_basic example shows how to use DAC12 module simply as the general DAC12 converter.When the DAC12's fifo feature is not enabled, Any write to the DATA register will replace thedata in the buffer and push data to analog conversion without trigger support.In this example, it gets the value from terminal,outputs the DAC12 output voltage through DAC12 output pin." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/dac12" path="boards/evkbmimxrt1170/driver_examples/dac12/basic/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/dac12/basic/cm7" type="xml">
            <files mask="dac12_basic_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_csi_mipi_yuv_cm7" name="csi_mipi_yuv_cm7" brief="This project shows how to use the CSI with MIPI_CSI. In this example, the camera device output pixel format is YUYV, the MIPI_CSI converts it to YUV internally and sends to CSI. In other words, the CSI input data bus width is 24-bit. The CSI saves the frame as 32-bit format XYUV8888. PXP is used to convert the XYUV to RGB565 and show in the LCD panel." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/csi" path="boards/evkbmimxrt1170/driver_examples/csi/mipi_yuv/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/csi/mipi_yuv/cm7" type="xml">
            <files mask="csi_mipi_yuv_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_csi_mipi_rgb_cm7" name="csi_mipi_rgb_cm7" brief="This project shows how to use the CSI with MIPI_CSI. In this example, the camera device output pixel format is RGB565, the MIPI_CSI converts it to RGB888 internally and sends to CSI. In other words, the CSI input data bus width is 24-bit. The CSI saves the frame as 32-bit format XRGB8888. PXP is used to convert the XRGB8888 to RGB565 and shown in the LCD panel." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/csi" path="boards/evkbmimxrt1170/driver_examples/csi/mipi_rgb/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/csi/mipi_rgb/cm7" type="xml">
            <files mask="csi_mipi_rgb_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_cdog_cm7" name="cdog_cm7" brief="The CDOG Example project is a demonstration program that uses the KSDK software to show funcionality of Code Watchdog Timer." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/cdog" path="boards/evkbmimxrt1170/driver_examples/cdog/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/cdog/cm7" type="xml">
            <files mask="cdog_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_cache_cm7" name="cache_cm7" brief="The cache example shows how to use memory cache driver.In this example, many memory (such as SDRAM, etc) and DMA will be used to show the example.Those memory is both accessible for cpu and DMA. For the memory data alignment, cache driver should be used rightly. For cache enabled case, the cache invalidate operation should be done before cpu access the memory. The cache clean opeartion should be done after CPU verify the memorymemory and before DMA access the memory." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/cache" path="boards/evkbmimxrt1170/driver_examples/cache/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/cache/cm7" type="xml">
            <files mask="cache_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_caam_cm7" name="caam_cm7" brief="The CAAM Example project is a demonstration program that uses the KSDK software to encrypt plain textand decrypt it back using AES algorithm. CBC and GCM modes are demonstrated.The symmetric key is generated at random, using CAAM's random number generator." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/caam" path="boards/evkbmimxrt1170/driver_examples/caam/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/caam/cm7" type="xml">
            <files mask="caam_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_asrc_p2p_out_edma_cm7" name="asrc_p2p_out_edma_cm7" brief="The asrc_p2p_out_edma example shows how to use asrc driver with edma:In this example, one sai instance playbacks the audio data conveted by asrc." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/asrc" path="boards/evkbmimxrt1170/driver_examples/asrc/asrc_p2p_out_edma/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/asrc/asrc_p2p_out_edma/cm7" type="xml">
            <files mask="asrc_p2p_out_edma_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_asrc_m2m_polling_cm7" name="asrc_m2m_polling_cm7" brief="The asrc_m2m_polling example shows how to use asrc driver with polling:In this example, one sai instance playbacks the audio data conveted by asrc." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/asrc" path="boards/evkbmimxrt1170/driver_examples/asrc/asrc_m2m_polling/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/asrc/asrc_m2m_polling/cm7" type="xml">
            <files mask="asrc_m2m_polling_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_asrc_m2m_interrupt_cm7" name="asrc_m2m_interrupt_cm7" brief="The asrc_m2m_interrupt example shows how to use asrc driver with interrupt:In this example, one sai instance playbacks the audio data conveted by asrc." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/asrc" path="boards/evkbmimxrt1170/driver_examples/asrc/asrc_m2m_interrupt/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/asrc/asrc_m2m_interrupt/cm7" type="xml">
            <files mask="asrc_m2m_interrupt_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_asrc_m2m_edma_cm7" name="asrc_m2m_edma_cm7" brief="The asrc_m2m_edma example shows how to use asrc driver with edma:In this example, one sai instance playbacks the audio data conveted by asrc." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/asrc" path="boards/evkbmimxrt1170/driver_examples/asrc/asrc_m2m_edma/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/asrc/asrc_m2m_edma/cm7" type="xml">
            <files mask="asrc_m2m_edma_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpadc_etc_software_trigger_conv_cm7" name="lpadc_etc_software_trigger_conv_cm7" brief="The adc_etc_software_trigger_conv example shows how to use the ADC_ETC to generate a ADC trigger by software trigger.In this example, the ADC is configured with hardware trigger. Once ADC gets the trigger from the ADC_ETC, the conversion goes,then the ADC_ETC ISR would be executed." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/adc_etc" path="boards/evkbmimxrt1170/driver_examples/adc_etc/adc_etc_software_trigger_conv/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/adc_etc/adc_etc_software_trigger_conv/cm7" type="xml">
            <files mask="lpadc_etc_software_trigger_conv_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpadc_etc_hardware_trigger_conv_cm7" name="lpadc_etc_hardware_trigger_conv_cm7" brief="The adc_etc_software_trigger_conv example shows how to use the ADC_ETC to generate a ADC trigger by PIT channel0 trigger.Every 1 second, PIT channel0 would send a trigger signal to ADC_ETC, which can arbitrate and manage multiple external triggers,and ADC_ETC would generate ADC trigger.In this example, the ADC is configured with hardware trigger. Once ADC gets the trigger from the ADC_ETC, the conversion goes,then the ADC_ETC ISR would be executed." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/adc_etc" path="boards/evkbmimxrt1170/driver_examples/adc_etc/adc_etc_hardware_trigger_conv/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/adc_etc/adc_etc_hardware_trigger_conv/cm7" type="xml">
            <files mask="lpadc_etc_hardware_trigger_conv_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_acmp_polling_print_cm7" name="acmp_polling_print_cm7" brief="The ACMP Polling project is a simple demonstration program that uses the SDK software. It comparesthe selected analog input with ACMP internal DAC output continuously and toggle the LED when thefinal comparison result changed. The purpose of this demo is to show how to use the ACMP driverin SDK software by polling way. The ACMP can be configured based on default configuration returnedby the API ACMP_GetDefaultConfig(). The default configuration is: high speed is not enabled, invertoutput is not enabled, unfiltered output is not enabled, pin out is not enabled, offset level islevel 0, hysteresis level is level 0." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/acmp" path="boards/evkbmimxrt1170/driver_examples/acmp/polling/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/acmp/polling/cm7" type="xml">
            <files mask="acmp_polling_print_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_acmp_interrupt_print_cm7" name="acmp_interrupt_print_cm7" brief="The ACMP Interrupt project is a simple demonstration program that uses the SDK software. Itcompares the selected analog input with ACMP internal DAC output continuously and toggle the LEDwhen the final comparison result changed. The purpose of this demo is to show how to use theACMP driver in SDK software by interrupt way. The ACMP can be configured based on defaultconfiguration returned by the API ACMP_GetDefaultConfig(). The default configuration is: highspeed is not enabled, invert output is not enabled, unfiltered output is not enabled, pin outis not enabled, offset level is level 0, hysteresis level is level 0." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/acmp" path="boards/evkbmimxrt1170/driver_examples/acmp/interrupt/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/acmp/interrupt/cm7" type="xml">
            <files mask="acmp_interrupt_print_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_puf_cm7" name="puf_cm7" brief="This driver example project demonstrates how to use driver for the PUF controller which provides a secure key storage." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/puf" path="boards/evkbmimxrt1170/driver_examples/puf/cm7">
          <external path="boards/evkbmimxrt1170/driver_examples/puf/cm7" type="xml">
            <files mask="puf_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_xbar_aoi_cm7" name="xbar_aoi_cm7" brief="The XBAR AOI demo application demonstrates the usage of the XBAR, AOI peripheral to combine interruptfrom CMP and PIT. If the button is pressed(CMP interrupt) and the PIT periodic interrupt occurs a message is printed." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkbmimxrt1170/demo_apps/xbar_aoi/cm7">
          <external path="boards/evkbmimxrt1170/demo_apps/xbar_aoi/cm7" type="xml">
            <files mask="xbar_aoi_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_tee_fault_core0" name="tee_fault_core0" brief="This example shows how to use the MCUXpresso Config Tools TEE tool." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps/tee_fault" linked_projects="evkbmimxrt1170_tee_fault_core1" path="boards/evkbmimxrt1170/demo_apps/tee_fault/core0">
          <external path="boards/evkbmimxrt1170/demo_apps/tee_fault/core0" type="xml">
            <files mask="tee_fault_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_shell_cm7" name="shell_cm7" brief="The Shell Demo application demonstrates to control Leds by commands." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkbmimxrt1170/demo_apps/shell/cm7">
          <external path="boards/evkbmimxrt1170/demo_apps/shell/cm7" type="xml">
            <files mask="shell_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_sai_cm7" name="sai_cm7" brief="The SAI Demo application demonstrates complicated digital audio playback and record case. The demo provide these features below:1. Duplex audio transfer, record and playback at same time.2. Playback a 250 Hz sine wave data generated by CMSIS-DSP library. Also compute the fundamental frequency using Fast Fourier Transform with CMSIS-DSP library.3. Record a 5 seconds audio to sdcard with a FatFs system. After record, playback it. This feature may only existed in platform which support sdhc." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkbmimxrt1170/demo_apps/sai/cm7">
          <external path="boards/evkbmimxrt1170/demo_apps/sai/cm7" type="xml">
            <files mask="sai_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_power_manager_test_bm_cm7" name="power_manager_test_bm_cm7" brief="The power manager test application demonstrates the basic usage of power manager framework without RTOS. The demo tests all features of power manager framework, including notification manager, wakeup source manager and so on." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkbmimxrt1170/demo_apps/power_manager_test/bm/cm7">
          <external path="boards/evkbmimxrt1170/demo_apps/power_manager_test/bm/cm7" type="xml">
            <files mask="power_manager_test_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_new_project_cm7" name="new_project_cm7" brief="The new project is provided as starting point for user to add with customized flow." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkbmimxrt1170/demo_apps/new_project/cm7">
          <external path="boards/evkbmimxrt1170/demo_apps/new_project/cm7" type="xml">
            <files mask="new_project_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_nand_flash_management_cm7" name="nand_flash_management_cm7" brief="nand flash management" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps/nand_flash_management/semc" path="boards/evkbmimxrt1170/demo_apps/nand_flash_management/semc/cm7">
          <external path="boards/evkbmimxrt1170/demo_apps/nand_flash_management/semc/cm7" type="xml">
            <files mask="nand_flash_management_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_mc_pmsm_enc_cm7" name="mc_pmsm_enc_cm7" brief="This example demonstrates the control of the PMSM." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkbmimxrt1170/demo_apps/mc_pmsm/pmsm_enc/cm7">
          <external path="boards/evkbmimxrt1170/demo_apps/mc_pmsm/pmsm_enc/cm7" type="xml">
            <files mask="mc_pmsm_enc_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_mc_bldc_cm7" name="mc_bldc_cm7" brief="This example demonstrates the control of the BLDC." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkbmimxrt1170/demo_apps/mc_bldc/cm7">
          <external path="boards/evkbmimxrt1170/demo_apps/mc_bldc/cm7" type="xml">
            <files mask="mc_bldc_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpadc_high_sample_rate_sample_signal_cm7" name="lpadc_high_sample_rate_sample_signal_cm7" brief="This demo application demonstrates the use of the LPADC to sample the analog signal. In this demo, the ADC clock is set as the maximum frequency, users should input analog signals to the ADC channel, press any keys to trigger the ADC conversion. After sampling enough sample points, the ADC will be disabled and the sample data will be print via UART. Users can use some tools such as EXCEL to recover the input signal based on those printed data." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkbmimxrt1170/demo_apps/lpadc_high_sample_rate/sample_signal/cm7">
          <external path="boards/evkbmimxrt1170/demo_apps/lpadc_high_sample_rate/sample_signal/cm7" type="xml">
            <files mask="lpadc_high_sample_rate_sample_signal_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lpadc_sample_rate_count_cm7" name="lpadc_sample_rate_count_cm7" brief="The lpadc sample rate count demo application can be used to measure ADC's sample rate roughly. The sample rate for an ADC is defined as the number of output samples available per unit time, and is specified as samples per second(SPS). The sample rate is the reciprocal of one sample total conversion time. Total conversion time = sampling time + compare time In this demo, users can select sample time, and the compare time is fixed to 17.5 ADC clock cycles. In this demo the ADC conversion clock is configured as the maximum frequency(Please refer the datasheet for the maximim value). So theoretically, sample rate = maximum frequency / total conversion time." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkbmimxrt1170/demo_apps/lpadc_high_sample_rate/sample_rate_count/cm7">
          <external path="boards/evkbmimxrt1170/demo_apps/lpadc_high_sample_rate/sample_rate_count/cm7" type="xml">
            <files mask="lpadc_sample_rate_count_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_iled_blinky_cm7" name="iled_blinky_cm7" brief="The LED Blinky demo application provides a sanity check for the new SDK build environments and board bring up. The LED Blinky demo uses the systick interrupt to realize the function of timing delay. The example takes turns to shine the LED. The purpose of this demo is to provide a simple project for debugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkbmimxrt1170/demo_apps/led_blinky/cm7">
          <external path="boards/evkbmimxrt1170/demo_apps/led_blinky/cm7" type="xml">
            <files mask="iled_blinky_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_iee_apc_cm7" name="iee_apc_cm7" brief="The IEE APC demo application demonstrates usage of the IEE and IEE APC driver. The Inline Encryption Engine (IEE) together with IEE APC provides a means to perform inline encryption and decryption of information transferred over memory interfaces. This demo application configures region 0 to perform AES XTS encryption and decryption while region 1 to perform AES-CTR decryption from external QSPI FLASH memory. Then data are written into RAM memory (region 0), after that encryption is disabled and encrypted data read. After the successful read, encryption is enabled and memory read again to see that data matches the original written value. Another encrypted data are programmed into FLASH memory (region 1) and after encryption is enabled data are read and compared with expected data." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkbmimxrt1170/demo_apps/iee_apc/cm7">
          <external path="boards/evkbmimxrt1170/demo_apps/iee_apc/cm7" type="xml">
            <files mask="iee_apc_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_hello_world_virtual_com_cm7" name="hello_world_virtual_com_cm7" brief="Hello World Virtual Com demonstrates the use of virtual com to print the &quot;Hello World&quot; string to the terminal. Different with Hello World demo (a HW UART peripheral is used to transmit data), the demo transmits data based on a serial port simulated by the USB device stack on target board side via USB peripheral. The purpose of this demo is to demonstrate how to use virtual com and provide a simple project for debugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkbmimxrt1170/demo_apps/hello_world_virtual_com/cm7">
          <external path="boards/evkbmimxrt1170/demo_apps/hello_world_virtual_com/cm7" type="xml">
            <files mask="hello_world_virtual_com_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_hello_world_secondary_core_boot_primary_core_cm7" name="hello_world_secondary_core_boot_primary_core_cm7" brief="The hello_world_secondary_core_boot demo use cm7 core to wake up cm4 core to prints the &quot;Hello World&quot; string to the terminal on dual XIP way(CM7 core boot from flash, then wake up cm4 core, boot cm4 image from flash address). Case shows how to make CM4 core available from flash boot on the default CM7 boot chip, so that users can run cm4 code stored in flash using POR way." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkbmimxrt1170/demo_apps/hello_world_secondary_core_boot/cm7">
          <external path="boards/evkbmimxrt1170/demo_apps/hello_world_secondary_core_boot/cm7" type="xml">
            <files mask="hello_world_secondary_core_boot_primary_core_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_hello_world_cm7" name="hello_world_cm7" brief="The HelloWorld demo prints the &quot;Hello World&quot; string to the terminal using the SDK UART drivers and repeat what user input. The purpose of this demo is to show how to use the UART, and to provide a simple project for debugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkbmimxrt1170/demo_apps/hello_world/cm7">
          <external path="boards/evkbmimxrt1170/demo_apps/hello_world/cm7" type="xml">
            <files mask="hello_world_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_usb_pd_source_charger_freertos_om13790host_cm7" name="usb_pd_source_charger_freertos_om13790host_cm7" brief="The application simulate charger product. The demo only works as source and is external powered" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_pd_source_charger_om13790host/freertos/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_pd_source_charger_om13790host/freertos/cm7" type="xml">
            <files mask="usb_pd_source_charger_freertos_om13790host_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_usb_pd_source_charger_bm_om13790host_cm7" name="usb_pd_source_charger_bm_om13790host_cm7" brief="The application simulate charger product. The demo only works as source and is external powered" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_pd_source_charger_om13790host/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_pd_source_charger_om13790host/bm/cm7" type="xml">
            <files mask="usb_pd_source_charger_bm_om13790host_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_usb_pd_sink_battery_freertos_om13790host_cm7" name="usb_pd_sink_battery_freertos_om13790host_cm7" brief="The application simulate battery product, it prints the battery percent continually. The demo works as sink and get power from partner port" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_pd_sink_battery_om13790host/freertos/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_pd_sink_battery_om13790host/freertos/cm7" type="xml">
            <files mask="usb_pd_sink_battery_freertos_om13790host_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_usb_pd_sink_battery_bm_om13790host_cm7" name="usb_pd_sink_battery_bm_om13790host_cm7" brief="The application simulate battery product , it prints the battery percent continually. The demo works as sink and get power from partner port" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_pd_sink_battery_om13790host/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_pd_sink_battery_om13790host/bm/cm7" type="xml">
            <files mask="usb_pd_sink_battery_bm_om13790host_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_usb_pd_freertos_om13790host_cm7" name="usb_pd_freertos_om13790host_cm7" brief="This PD example is a simple demonstration based on the MCUXpresso SDK PD stack. The application use the board keys and debug console to test the PD functions. The demo works as DRP. When connect, the board can be source or sink." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_pd_om13790host/freertos/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_pd_om13790host/freertos/cm7" type="xml">
            <files mask="usb_pd_freertos_om13790host_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_usb_pd_bm_om13790host_cm7" name="usb_pd_bm_om13790host_cm7" brief="This PD example is a simple demonstration based on the MCUXpresso SDK PD stack. The application use the board keys and debug console to test the PD functions. The demo works as DRP. When connect, the board can be source or sink." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_pd_om13790host/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_pd_om13790host/bm/cm7" type="xml">
            <files mask="usb_pd_bm_om13790host_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_usb_pd_charger_battery_freertos_om13790host_cm7" name="usb_pd_charger_battery_freertos_om13790host_cm7" brief="The application simulate battery product, it prints the battery percent continually. The demo works as sink and get power from partner port" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_pd_charger_battery_om13790host/freertos/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_pd_charger_battery_om13790host/freertos/cm7" type="xml">
            <files mask="usb_pd_charger_battery_freertos_om13790host_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_usb_pd_charger_battery_bm_om13790host_cm7" name="usb_pd_charger_battery_bm_om13790host_cm7" brief="the application simulate battery product , it prints the battery percent continually. The demo works as DRP. When connect, the board can be source or sink." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_pd_charger_battery_om13790host/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_pd_charger_battery_om13790host/bm/cm7" type="xml">
            <files mask="usb_pd_charger_battery_bm_om13790host_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_usb_pd_alt_mode_dp_host_freertos_om13790host_cm7" name="usb_pd_alt_mode_dp_host_freertos_om13790host_cm7" brief="This PD example is a simple demonstration based on the MCUXpresso SDK PD stack. The application use the shield host board (om13790host) to implement the DisplayPort alternate mode.It recognize attached video adapters (like &quot;Type-C to DisplayPort&quot; or &quot;Type-C to HDMI&quot;), and drive the adapter to work." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_pd_alt_mode_dp_host_om13790host/freertos/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_pd_alt_mode_dp_host_om13790host/freertos/cm7" type="xml">
            <files mask="usb_pd_alt_mode_dp_host_freertos_om13790host_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_usb_pd_alt_mode_dp_host_bm_om13790host_cm7" name="usb_pd_alt_mode_dp_host_bm_om13790host_cm7" brief="This PD example is a simple demonstration based on the MCUXpresso SDK PD stack. The application use the shield host board (om13790host) to implement the DisplayPort alternate mode.It recognize attached video adapters (like &quot;Type-C to DisplayPort&quot; or &quot;Type-C to HDMI&quot;), and drive the adapter to work." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_pd_alt_mode_dp_host_om13790host/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_pd_alt_mode_dp_host_om13790host/bm/cm7" type="xml">
            <files mask="usb_pd_alt_mode_dp_host_bm_om13790host_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_pin_detect_hid_msd_freertos_cm7" name="pin_detect_hid_msd_freertos_cm7" brief="This pin detect HID MSD example can become a HID mouse device or a MSD host that supports U-disk. The application prints the operation information when the U-disk is attached or is plugged into the PC host." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_pin_detect_hid_msd/freertos/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_pin_detect_hid_msd/freertos/cm7" type="xml">
            <files mask="pin_detect_hid_msd_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_pin_detect_hid_msd_bm_cm7" name="pin_detect_hid_msd_bm_cm7" brief="This pin detect HID MSD example can become a HID mouse device or a MSD host that supports U-disk. The application prints the operation information when the U-disk is attached or is plugged into the PC host." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_pin_detect_hid_msd/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_pin_detect_hid_msd/bm/cm7" type="xml">
            <files mask="pin_detect_hid_msd_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_pin_detect_hid_mouse_freertos_cm7" name="pin_detect_hid_mouse_freertos_cm7" brief="This pin detect HID example supports the mouse device. The application prints the operation information when the mouse device is attached or plugged in to the PC host." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_pin_detect_hid_mouse/freertos/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_pin_detect_hid_mouse/freertos/cm7" type="xml">
            <files mask="pin_detect_hid_mouse_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_pin_detect_hid_mouse_bm_cm7" name="pin_detect_hid_mouse_bm_cm7" brief="This pin detect HID example supports the mouse device. The application prints the operation information when the mouse device is attached or plugged in to the PC host." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_pin_detect_hid_mouse/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_pin_detect_hid_mouse/bm/cm7" type="xml">
            <files mask="pin_detect_hid_mouse_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_keyboard2mouse_freertos_cm7" name="keyboard2mouse_freertos_cm7" brief="This example implements the host and the device, where the one controller works as a host and the other controller works as a device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_keyboard2mouse/freertos/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_keyboard2mouse/freertos/cm7" type="xml">
            <files mask="keyboard2mouse_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_keyboard2mouse_bm_cm7" name="keyboard2mouse_bm_cm7" brief="This example implements the host and the device, where the one controller works as a host and the other controller works as a device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_keyboard2mouse/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_keyboard2mouse/bm/cm7" type="xml">
            <files mask="keyboard2mouse_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_host_suspend_resume_hid_mouse_freertos_cm7" name="host_suspend_resume_hid_mouse_freertos_cm7" brief="This is one example support suspend/resume." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_suspend_resume_host_hid_mouse/freertos/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_suspend_resume_host_hid_mouse/freertos/cm7" type="xml">
            <files mask="host_suspend_resume_hid_mouse_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_host_suspend_resume_hid_mouse_bm_cm7" name="host_suspend_resume_hid_mouse_bm_cm7" brief="This is one example support suspend/resume." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_suspend_resume_host_hid_mouse/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_suspend_resume_host_hid_mouse/bm/cm7" type="xml">
            <files mask="host_suspend_resume_hid_mouse_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_host_video_camera_freertos_cm7" name="host_video_camera_freertos_cm7" brief="The application supports to get JPEG image from camera function." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_host_video_camera/freertos/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_host_video_camera/freertos/cm7" type="xml">
            <files mask="host_video_camera_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_host_printer_plain_text_freertos_cm7" name="host_printer_plain_text_freertos_cm7" brief="The host printer example demonstrates how to get the status of the printer deviceand how to print a certain test string.." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_host_printer_plain_text/freertos/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_host_printer_plain_text/freertos/cm7" type="xml">
            <files mask="host_printer_plain_text_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_host_printer_plain_text_bm_cm7" name="host_printer_plain_text_bm_cm7" brief="The host printer example demonstrates how to get the status of the printer deviceand how to print a certain test string." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_host_printer_plain_text/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_host_printer_plain_text/bm/cm7" type="xml">
            <files mask="host_printer_plain_text_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_host_phdc_manager_freertos_cm7" name="host_phdc_manager_freertos_cm7" brief="The Host PHDC Manager Example is a simple demonstration program based on the MCUXpresso SDK.The application supports the USB weight scale device. It prints out the body mass and body mass index information when the USB weight scale device is attached." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_host_phdc_manager/freertos/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_host_phdc_manager/freertos/cm7" type="xml">
            <files mask="host_phdc_manager_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_host_phdc_manager_bm_cm7" name="host_phdc_manager_bm_cm7" brief="The Host PHDC Manager Example is a simple demonstration program based on the MCUXpresso SDK.The application supports the USB weight scale device. It prints out the body mass and body mass index information when the USB weight scale device is attached." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_host_phdc_manager/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_host_phdc_manager/bm/cm7" type="xml">
            <files mask="host_phdc_manager_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_host_msd_fatfs_freertos_cm7" name="host_msd_fatfs_freertos_cm7" brief="This Host FatFs example supports UFI and SCSI U-disk device. The application prints the attached device information when U-disk device is attached.The application executes some FatFs APIs to test the attached device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_host_msd_fatfs/freertos/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_host_msd_fatfs/freertos/cm7" type="xml">
            <files mask="host_msd_fatfs_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_host_msd_fatfs_bm_cm7" name="host_msd_fatfs_bm_cm7" brief="This Host FatFs example supports UFI and SCSI U-disk device. The application prints the attached device information when U-disk device is attached.The application executes some FatFs APIs to test the attached device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_host_msd_fatfs/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_host_msd_fatfs/bm/cm7" type="xml">
            <files mask="host_msd_fatfs_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_host_msd_command_freertos_cm7" name="host_msd_command_freertos_cm7" brief="This Host MSD example supports the UFI and SCSI U-disk device.  The application prints the attached device information when the U-disk device is attached.The application executes UFI commands to test the attached device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_host_msd_command/freertos/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_host_msd_command/freertos/cm7" type="xml">
            <files mask="host_msd_command_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_host_msd_command_bm_cm7" name="host_msd_command_bm_cm7" brief="This Host MSD example supports the UFI and SCSI U-disk device. The application prints the attached device information when the U-disk device is attached.The application executes UFI commands to test the attached device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_host_msd_command/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_host_msd_command/bm/cm7" type="xml">
            <files mask="host_msd_command_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_host_hid_mouse_keyboard_freertos_cm7" name="host_hid_mouse_keyboard_freertos_cm7" brief="This example supports the mouse device and the keyboard device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_host_hid_mouse_keyboard/freertos/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_host_hid_mouse_keyboard/freertos/cm7" type="xml">
            <files mask="host_hid_mouse_keyboard_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_host_hid_mouse_keyboard_bm_cm7" name="host_hid_mouse_keyboard_bm_cm7" brief="This example supports the mouse device and the keyboard device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_host_hid_mouse_keyboard/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_host_hid_mouse_keyboard/bm/cm7" type="xml">
            <files mask="host_hid_mouse_keyboard_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_host_hid_mouse_freertos_cm7" name="host_hid_mouse_freertos_cm7" brief="The application supports the mouse device. It prints the mouse operation when the mouse device is attached." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_host_hid_mouse/freertos/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_host_hid_mouse/freertos/cm7" type="xml">
            <files mask="host_hid_mouse_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_host_hid_mouse_bm_cm7" name="host_hid_mouse_bm_cm7" brief="The application supports the mouse device. It prints the mouse operation when the mouse device is attached." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_host_hid_mouse/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_host_hid_mouse/bm/cm7" type="xml">
            <files mask="host_hid_mouse_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_host_hid_generic_freertos_cm7" name="host_hid_generic_freertos_cm7" brief="This application implements a simple HID interrupt in-and-out endpoint bi-directional communication.The application sends one test string to the device. The device receives and sends back the string. The application receives the string and prints it." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_host_hid_generic/freertos/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_host_hid_generic/freertos/cm7" type="xml">
            <files mask="host_hid_generic_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_host_hid_generic_bm_cm7" name="host_hid_generic_bm_cm7" brief="This application implements a simple HID interrupt in-and-out endpoint bi-directional communication.The application sends one test string to the device. The device receives and sends back the string. The application receives the string and prints it." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_host_hid_generic/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_host_hid_generic/bm/cm7" type="xml">
            <files mask="host_hid_generic_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_host_cdc_freertos_cm7" name="host_cdc_freertos_cm7" brief="The host CDC project is a simple demonstration program based on the MCUXpresso SDK. It enumerates a COM port and echoes back the data from the UART ." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_host_cdc/freertos/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_host_cdc/freertos/cm7" type="xml">
            <files mask="host_cdc_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_host_cdc_bm_cm7" name="host_cdc_bm_cm7" brief="The host CDC project is a simple demonstration program based on the MCUXpresso SDK. It enumerates a COM port and echoes back the data from the UART." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_host_cdc/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_host_cdc/bm/cm7" type="xml">
            <files mask="host_cdc_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_host_audio_speaker_freertos_cm7" name="host_audio_speaker_freertos_cm7" brief="The Host Audio example supports the audio speaker device. @n The application prints the audio speaker information when the USB speaker device is attached." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_host_audio_speaker/freertos/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_host_audio_speaker/freertos/cm7" type="xml">
            <files mask="host_audio_speaker_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_host_audio_speaker_bm_cm7" name="host_audio_speaker_bm_cm7" brief="The Host Audio example supports the audio speaker device. @n The application prints the audio speaker information when the USB speaker device is attached." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_host_audio_speaker/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_host_audio_speaker/bm/cm7" type="xml">
            <files mask="host_audio_speaker_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_host_audio_recorder_freertos_cm7" name="host_audio_recorder_freertos_cm7" brief="The Host Audio example supports the audio recorder device. @n The application prints the audio recorder information when the USB recorder device is attached." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_host_audio_recorder/freertos/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_host_audio_recorder/freertos/cm7" type="xml">
            <files mask="host_audio_recorder_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_suspend_resume_hid_mouse_lite_bm_cm7" name="dev_suspend_resume_hid_mouse_lite_bm_cm7" brief="the application is enumerated as a mouse. When host releases the USB Bus, the device will enter into low power mode. The device can be waked up when resume signal is detected on the bus. Or the device can remote wake-up the host by delivering the resume signal when the remote wake-up is enabled by the host." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_suspend_resume_device_hid_mouse_lite/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_suspend_resume_device_hid_mouse_lite/bm/cm7" type="xml">
            <files mask="dev_suspend_resume_hid_mouse_lite_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_suspend_resume_hid_mouse_freertos_cm7" name="dev_suspend_resume_hid_mouse_freertos_cm7" brief="the application is enumerated as a mouse. When host releases the USB Bus, the device will enter into low power mode. The device can be waked up when resume signal is detected on the bus. Or the device can remote wake-up the host by delivering the resume signal when the remote wake-up is enabled by the host." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_suspend_resume_device_hid_mouse/freertos/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_suspend_resume_device_hid_mouse/freertos/cm7" type="xml">
            <files mask="dev_suspend_resume_hid_mouse_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_suspend_resume_hid_mouse_bm_cm7" name="dev_suspend_resume_hid_mouse_bm_cm7" brief="the application is enumerated as a mouse. When host releases the USB Bus, the device will enter into low power mode. The device can be waked up when resume signal is detected on the bus. Or the device can remote wake-up the host by delivering the resume signal when the remote wake-up is enabled by the host." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_suspend_resume_device_hid_mouse/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_suspend_resume_device_hid_mouse/bm/cm7" type="xml">
            <files mask="dev_suspend_resume_hid_mouse_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_video_virtual_camera_lite_bm_cm7" name="dev_video_virtual_camera_lite_bm_cm7" brief="The USB video virtual camera application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a camera and users can see the video of the device by using a PC test tool." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_video_virtual_camera_lite/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_video_virtual_camera_lite/bm/cm7" type="xml">
            <files mask="dev_video_virtual_camera_lite_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_video_virtual_camera_freertos_cm7" name="dev_video_virtual_camera_freertos_cm7" brief="The USB video virtual camera application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a camera and users can see the video of the device by using a PC test tool." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_video_virtual_camera/freertos/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_video_virtual_camera/freertos/cm7" type="xml">
            <files mask="dev_video_virtual_camera_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_video_virtual_camera_bm_cm7" name="dev_video_virtual_camera_bm_cm7" brief="The USB video virtual camera application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a camera and users can see the video of the device by using a PC test tool." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_video_virtual_camera/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_video_virtual_camera/bm/cm7" type="xml">
            <files mask="dev_video_virtual_camera_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_printer_virtual_plain_text_lite_bm_cm7" name="dev_printer_virtual_plain_text_lite_bm_cm7" brief="The USB virtual printer application is a simple application to demonstrate a virtual printer functionality.Because there is no printer language parsing, the received raw data is output directly in the debug console.As a result, only plain text is suitable for testing. For other printer language support, such as postscript, implement the corresponding parser." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_printer_virtual_plain_text_lite/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_printer_virtual_plain_text_lite/bm/cm7" type="xml">
            <files mask="dev_printer_virtual_plain_text_lite_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_printer_virtual_plain_text_freertos_cm7" name="dev_printer_virtual_plain_text_freertos_cm7" brief="The USB virtual printer application is a simple application to demonstrate a virtual printer functionality.Because there is no printer language parsing, the received raw data is output directly in the debug console.As a result, only plain text is suitable for testing. For other printer language support, such as postscript, implement the corresponding parser." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_printer_virtual_plain_text/freertos/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_printer_virtual_plain_text/freertos/cm7" type="xml">
            <files mask="dev_printer_virtual_plain_text_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_printer_virtual_plain_text_bm_cm7" name="dev_printer_virtual_plain_text_bm_cm7" brief="The USB virtual printer application is a simple application to demonstrate a virtual printer functionality.Because there is no printer language parsing, the received raw data is output directly in the debug console.As a result, only plain text is suitable for testing. For other printer language support, such as postscript, implement the corresponding parser." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_printer_virtual_plain_text/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_printer_virtual_plain_text/bm/cm7" type="xml">
            <files mask="dev_printer_virtual_plain_text_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_phdc_weighscale_lite_bm_cm7" name="dev_phdc_weighscale_lite_bm_cm7" brief="The USB PHDC WeighScale application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a weight scale device and the HealthLink software is used to interact with thisdevice to simulate the personal weight scale data, such as body mass and body mass index." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_phdc_weighscale_lite/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_phdc_weighscale_lite/bm/cm7" type="xml">
            <files mask="dev_phdc_weighscale_lite_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_phdc_weighscale_freertos_cm7" name="dev_phdc_weighscale_freertos_cm7" brief="The USB PHDC WeighScale application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a weight scale device and the HealthLink software is used to interact with thisdevice to simulate the personal weight scale data, such as body mass and body mass index." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_phdc_weighscale/freertos/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_phdc_weighscale/freertos/cm7" type="xml">
            <files mask="dev_phdc_weighscale_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_phdc_weighscale_bm_cm7" name="dev_phdc_weighscale_bm_cm7" brief="The USB PHDC WeighScale application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a weight scale device and the HealthLink software is used to interact with thisdevice to simulate the personal weight scale data, such as body mass and body mass index." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_phdc_weighscale/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_phdc_weighscale/bm/cm7" type="xml">
            <files mask="dev_phdc_weighscale_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_mtp_lite_bm_cm7" name="dev_mtp_lite_bm_cm7" brief="The USB MTP application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as portable media device. Users can read and write the SD card or MMC by MTP operations." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_mtp_lite/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_mtp_lite/bm/cm7" type="xml">
            <files mask="dev_mtp_lite_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_mtp_freertos_cm7" name="dev_mtp_freertos_cm7" brief="The USB MTP application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as portable media device. Users can read and write the SD card or MMC by MTP operations." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_mtp/freertos/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_mtp/freertos/cm7" type="xml">
            <files mask="dev_mtp_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_mtp_bm_cm7" name="dev_mtp_bm_cm7" brief="The USB MTP application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as portable media device. Users can read and write the SD card or MMC by MTP operations." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_mtp/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_mtp/bm/cm7" type="xml">
            <files mask="dev_mtp_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_msc_ramdisk_lite_bm_cm7" name="dev_msc_ramdisk_lite_bm_cm7" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk and can be read and written to as a normal U-disk ." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_msc_ramdisk_lite/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_msc_ramdisk_lite/bm/cm7" type="xml">
            <files mask="dev_msc_ramdisk_lite_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_msc_ramdisk_freertos_cm7" name="dev_msc_ramdisk_freertos_cm7" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk and can be read and written to as a normal U-disk ." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_msc_ramdisk/freertos/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_msc_ramdisk/freertos/cm7" type="xml">
            <files mask="dev_msc_ramdisk_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_msc_ramdisk_bm_cm7" name="dev_msc_ramdisk_bm_cm7" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk and can be read and written to as a normal U-disk ." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_msc_ramdisk/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_msc_ramdisk/bm/cm7" type="xml">
            <files mask="dev_msc_ramdisk_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_msc_disk_lite_bm_cm7" name="dev_msc_disk_lite_bm_cm7" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk. Users can read and write the SD card or MMC as a standard U-disk." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_msc_disk_lite/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_msc_disk_lite/bm/cm7" type="xml">
            <files mask="dev_msc_disk_lite_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_msc_disk_freertos_cm7" name="dev_msc_disk_freertos_cm7" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk. Users can read and write the SD card or MMC as a standard U-disk." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_msc_disk/freertos/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_msc_disk/freertos/cm7" type="xml">
            <files mask="dev_msc_disk_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_msc_disk_bm_cm7" name="dev_msc_disk_bm_cm7" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk. Users can read and write the SD card or MMC as a standard U-disk." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_msc_disk/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_msc_disk/bm/cm7" type="xml">
            <files mask="dev_msc_disk_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_hid_mouse_lite_bm_cm7" name="dev_hid_mouse_lite_bm_cm7" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_hid_mouse_lite/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_hid_mouse_lite/bm/cm7" type="xml">
            <files mask="dev_hid_mouse_lite_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_hid_mouse_freertos_cm7" name="dev_hid_mouse_freertos_cm7" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_hid_mouse/freertos/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_hid_mouse/freertos/cm7" type="xml">
            <files mask="dev_hid_mouse_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_hid_mouse_bm_cm7" name="dev_hid_mouse_bm_cm7" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_hid_mouse/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_hid_mouse/bm/cm7" type="xml">
            <files mask="dev_hid_mouse_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_hid_generic_lite_bm_cm7" name="dev_hid_generic_lite_bm_cm7" brief="The USB HID generic application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a HID-compliant device. A PC application can be used to exchange data with the device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_hid_generic_lite/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_hid_generic_lite/bm/cm7" type="xml">
            <files mask="dev_hid_generic_lite_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_hid_generic_freertos_cm7" name="dev_hid_generic_freertos_cm7" brief="The USB HID generic application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a HID-compliant device. A PC application can be used to exchange data with the device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_hid_generic/freertos/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_hid_generic/freertos/cm7" type="xml">
            <files mask="dev_hid_generic_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_hid_generic_bm_cm7" name="dev_hid_generic_bm_cm7" brief="The USB HID generic application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a HID-compliant device. A PC application can be used to exchange data with the device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_hid_generic/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_hid_generic/bm/cm7" type="xml">
            <files mask="dev_hid_generic_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_dfu_lite_bm_cm7" name="dev_dfu_lite_bm_cm7" brief="The DFU project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a compoiste dfu device, users can download one firmware to the dfu device with the tool called &quot;dfu-util&quot;. the dfu example write the firmware content to flash and will check the CRC32 which stored in the last 4 byte of the firmware.if the CRC32 check is right, then the dfu example will run the new firmware.Generally speaking, the firmware doesn't have CRC32. sothe following content will introduce how to add CRC32 to the firmware." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_dfu_lite/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_dfu_lite/bm/cm7" type="xml">
            <files mask="dev_dfu_lite_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_dfu_freertos_cm7" name="dev_dfu_freertos_cm7" brief="The DFU project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a compoiste dfu device, users can download one firmware to the dfu device with the tool called &quot;dfu-util&quot;. the dfu example write the firmware content to flash and will check the CRC32 which stored in the last 4 byte of the firmware.if the CRC32 check is right, then the dfu example will run the new firmware.Generally speaking, the firmware doesn't have CRC32. sothe following content will introduce how to add CRC32 to the firmware." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_dfu/freertos/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_dfu/freertos/cm7" type="xml">
            <files mask="dev_dfu_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_dfu_bm_cm7" name="dev_dfu_bm_cm7" brief="The DFU project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a compoiste dfu device, users can download one firmware to the dfu device with the tool called &quot;dfu-util&quot;. the dfu example write the firmware content to flash and will check the CRC32 which stored in the last 4 byte of the firmware.if the CRC32 check is right, then the dfu example will run the new firmware.Generally speaking, the firmware doesn't have CRC32. sothe following content will introduce how to add CRC32 to the firmware." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_dfu/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_dfu/bm/cm7" type="xml">
            <files mask="dev_dfu_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_composite_hid_mouse_hid_keyboard_lite_bm_cm7" name="dev_composite_hid_mouse_hid_keyboard_lite_bm_cm7" brief="The application is a simple demonstration program based on the MCUXpresso SDK. The application is enumerated as HID-compliant mouse and keyboard devices." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_composite_hid_mouse_hid_keyboard_lite/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_composite_hid_mouse_hid_keyboard_lite/bm/cm7" type="xml">
            <files mask="dev_composite_hid_mouse_hid_keyboard_lite_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_composite_hid_mouse_hid_keyboard_freertos_cm7" name="dev_composite_hid_mouse_hid_keyboard_freertos_cm7" brief="The application is a simple demonstration program based on the MCUXpresso SDK. The application is enumerated as HID-compliant mouse and keyboard devices." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/freertos/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/freertos/cm7" type="xml">
            <files mask="dev_composite_hid_mouse_hid_keyboard_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_composite_hid_mouse_hid_keyboard_bm_cm7" name="dev_composite_hid_mouse_hid_keyboard_bm_cm7" brief="The application is a simple demonstration program based on the MCUXpresso SDK. The application is enumerated as HID-compliant mouse and keyboard devices." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/bm/cm7" type="xml">
            <files mask="dev_composite_hid_mouse_hid_keyboard_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_composite_hid_audio_unified_lite_bm_cm7" name="dev_composite_hid_audio_unified_lite_bm_cm7" brief="The USB Composite HID and Audio Unified application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a playback and recording device. Users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories and play music with the device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_composite_hid_audio_unified_lite/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_composite_hid_audio_unified_lite/bm/cm7" type="xml">
            <files mask="dev_composite_hid_audio_unified_lite_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_composite_hid_audio_unified_freertos_cm7" name="dev_composite_hid_audio_unified_freertos_cm7" brief="The USB Composite device application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a recording device. Users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories with an HID mouse device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_composite_hid_audio_unified/freertos/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_composite_hid_audio_unified/freertos/cm7" type="xml">
            <files mask="dev_composite_hid_audio_unified_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_composite_hid_audio_unified_bm_cm7" name="dev_composite_hid_audio_unified_bm_cm7" brief="The USB Composite device application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a recording device. Users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories with an HID mouse device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_composite_hid_audio_unified/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_composite_hid_audio_unified/bm/cm7" type="xml">
            <files mask="dev_composite_hid_audio_unified_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_composite_cdc_vcom_cdc_vcom_lite_bm_cm7" name="dev_composite_cdc_vcom_cdc_vcom_lite_bm_cm7" brief="The Composite CDC_VCOM_CDC_VCOM project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as two COM port, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom_lite/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom_lite/bm/cm7" type="xml">
            <files mask="dev_composite_cdc_vcom_cdc_vcom_lite_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_composite_cdc_vcom_cdc_vcom_freertos_cm7" name="dev_composite_cdc_vcom_cdc_vcom_freertos_cm7" brief="The Composite CDC_VCOM_CDC_VCOM project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as two COM port, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom/freertos/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom/freertos/cm7" type="xml">
            <files mask="dev_composite_cdc_vcom_cdc_vcom_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_composite_cdc_vcom_cdc_vcom_bm_cm7" name="dev_composite_cdc_vcom_cdc_vcom_bm_cm7" brief="The Composite CDC_VCOM_CDC_VCOM project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as two COM port, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom/bm/cm7" type="xml">
            <files mask="dev_composite_cdc_vcom_cdc_vcom_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_composite_cdc_msc_disk_lite_bm_cm7" name="dev_composite_cdc_msc_disk_lite_bm_cm7" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a U-disk. The COM  port can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The U-disk can be read and write as a standard SD card." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_composite_cdc_msc_disk_lite/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_composite_cdc_msc_disk_lite/bm/cm7" type="xml">
            <files mask="dev_composite_cdc_msc_disk_lite_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_composite_cdc_msc_disk_freertos_cm7" name="dev_composite_cdc_msc_disk_freertos_cm7" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_composite_cdc_msc_disk/freertos/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_composite_cdc_msc_disk/freertos/cm7" type="xml">
            <files mask="dev_composite_cdc_msc_disk_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_composite_cdc_msc_disk_bm_cm7" name="dev_composite_cdc_msc_disk_bm_cm7" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_composite_cdc_msc_disk/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_composite_cdc_msc_disk/bm/cm7" type="xml">
            <files mask="dev_composite_cdc_msc_disk_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_composite_cdc_msc_lite_bm_cm7" name="dev_composite_cdc_msc_lite_bm_cm7" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_composite_cdc_msc_lite/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_composite_cdc_msc_lite/bm/cm7" type="xml">
            <files mask="dev_composite_cdc_msc_lite_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_composite_cdc_msc_freertos_cm7" name="dev_composite_cdc_msc_freertos_cm7" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_composite_cdc_msc/freertos/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_composite_cdc_msc/freertos/cm7" type="xml">
            <files mask="dev_composite_cdc_msc_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_composite_cdc_msc_bm_cm7" name="dev_composite_cdc_msc_bm_cm7" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted.." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_composite_cdc_msc/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_composite_cdc_msc/bm/cm7" type="xml">
            <files mask="dev_composite_cdc_msc_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_cdc_vnic_lite_bm_cm7" name="dev_cdc_vnic_lite_bm_cm7" brief="The Virtual NIC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a network adapter. Users can access the network by properly configuring this network adapter." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_cdc_vnic_lite/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_cdc_vnic_lite/bm/cm7" type="xml">
            <files mask="dev_cdc_vnic_lite_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_cdc_vnic_freertos_cm7" name="dev_cdc_vnic_freertos_cm7" brief="The Virtual NIC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a network adapter. Users can access the network by properly configuring this network adapter." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_cdc_vnic/freertos/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_cdc_vnic/freertos/cm7" type="xml">
            <files mask="dev_cdc_vnic_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_cdc_vnic_bm_cm7" name="dev_cdc_vnic_bm_cm7" brief="The Virtual NIC project is enumerated as a network adapter. Users can access the network by properly configuring this network adapter." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_cdc_vnic/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_cdc_vnic/bm/cm7" type="xml">
            <files mask="dev_cdc_vnic_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_cdc_vcom_lite_bm_cm7" name="dev_cdc_vcom_lite_bm_cm7" brief="The Virtual COM project enumerated as a COM port, which the users can open using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_cdc_vcom_lite/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_cdc_vcom_lite/bm/cm7" type="xml">
            <files mask="dev_cdc_vcom_lite_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_cdc_vcom_freertos_cm7" name="dev_cdc_vcom_freertos_cm7" brief="The Virtual COM project is  enumerated as a COM port, which the users can open using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_cdc_vcom/freertos/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_cdc_vcom/freertos/cm7" type="xml">
            <files mask="dev_cdc_vcom_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_cdc_vcom_bm_cm7" name="dev_cdc_vcom_bm_cm7" brief="The Virtual COM project is enumerated as a COM port, which the users can open using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_cdc_vcom/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_cdc_vcom/bm/cm7" type="xml">
            <files mask="dev_cdc_vcom_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_audio_speaker_lite_bm_cm7" name="dev_audio_speaker_lite_bm_cm7" brief="The USB Audio Speaker application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a playback device and users can play music using the device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_audio_speaker_lite/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_audio_speaker_lite/bm/cm7" type="xml">
            <files mask="dev_audio_speaker_lite_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_audio_speaker_freertos_cm7" name="dev_audio_speaker_freertos_cm7" brief="The USB Audio Speaker application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a playback device and users can play music using the device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_audio_speaker/freertos/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_audio_speaker/freertos/cm7" type="xml">
            <files mask="dev_audio_speaker_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_audio_speaker_bm_cm7" name="dev_audio_speaker_bm_cm7" brief="The USB Audio Speaker application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a playback device and users can play music using the device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_audio_speaker/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_audio_speaker/bm/cm7" type="xml">
            <files mask="dev_audio_speaker_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_audio_generator_lite_bm_cm7" name="dev_audio_generator_lite_bm_cm7" brief="The USB Audio Generator application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a recording device and users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_audio_generator_lite/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_audio_generator_lite/bm/cm7" type="xml">
            <files mask="dev_audio_generator_lite_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_audio_generator_freertos_cm7" name="dev_audio_generator_freertos_cm7" brief="The USB Audio Generator application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a recording device and users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_audio_generator/freertos/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_audio_generator/freertos/cm7" type="xml">
            <files mask="dev_audio_generator_freertos_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_dev_audio_generator_bm_cm7" name="dev_audio_generator_bm_cm7" brief="The USB Audio Generator application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a recording device and users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkbmimxrt1170/usb_examples/usb_device_audio_generator/bm/cm7">
          <external path="boards/evkbmimxrt1170/usb_examples/usb_device_audio_generator/bm/cm7" type="xml">
            <files mask="dev_audio_generator_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_fmstr_example_usb_cdc_cm7" name="fmstr_example_usb_cdc_cm7" brief="FreeMASTER example using virtual serial communication at USB port and CDC VCOM class. This example application demonstrates use of FreeMASTER tool to visualize internal variables and to control the application flow by modifying variables. The application also shows use of advanced FreeMASTER features like TSA tables and Pipes." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="FreeMASTER_examples" path="boards/evkbmimxrt1170/freemaster_examples/fmstr_usb_cdc/cm7">
          <external path="boards/evkbmimxrt1170/freemaster_examples/fmstr_usb_cdc/cm7" type="xml">
            <files mask="fmstr_example_usb_cdc_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_fmstr_example_uart_cm7" name="fmstr_example_uart_cm7" brief="FreeMASTER example using Serial-UART communication with the target microcontroller. This example application demonstrates use of FreeMASTER tool to visualize internal variables and to control the application flow by modifying variables. The application also shows use of advanced FreeMASTER features like TSA tables and Pipes." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="FreeMASTER_examples" path="boards/evkbmimxrt1170/freemaster_examples/fmstr_uart/cm7">
          <external path="boards/evkbmimxrt1170/freemaster_examples/fmstr_uart/cm7" type="xml">
            <files mask="fmstr_example_uart_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_fmstr_example_pdbdm_cm7" name="fmstr_example_pdbdm_cm7" brief="FreeMASTER example using a special packet-driven protocol on top of JTAG or BDM direct memory access. This example application demonstrates use of FreeMASTER tool to visualize internal variables and to control the application flow by modifying variables. The application also shows use of advanced FreeMASTER features like TSA tables and Pipes." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="FreeMASTER_examples" path="boards/evkbmimxrt1170/freemaster_examples/fmstr_pdbdm/cm7">
          <external path="boards/evkbmimxrt1170/freemaster_examples/fmstr_pdbdm/cm7" type="xml">
            <files mask="fmstr_example_pdbdm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_fmstr_example_net_cm7" name="fmstr_example_net_cm7" brief="FreeMASTER example using TCP/UDP socket communication with the target microcontroller. This example application demonstrates use of FreeMASTER tool to visualize internal variables and to control the application flow by modifying variables. The application also shows use of advanced FreeMASTER features like TSA tables and Pipes." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="FreeMASTER_examples" path="boards/evkbmimxrt1170/freemaster_examples/fmstr_net/cm7">
          <external path="boards/evkbmimxrt1170/freemaster_examples/fmstr_net/cm7" type="xml">
            <files mask="fmstr_example_net_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_fmstr_example_can_cm7" name="fmstr_example_can_cm7" brief="FreeMASTER example using the CAN bus to communicate with target microcontroller. This example application demonstrates use of FreeMASTER tool to visualize internal variables and to control the application flow by modifying variables. The application also shows use of advanced FreeMASTER features like TSA tables and Pipes." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="FreeMASTER_examples" path="boards/evkbmimxrt1170/freemaster_examples/fmstr_can/cm7">
          <external path="boards/evkbmimxrt1170/freemaster_examples/fmstr_can/cm7" type="xml">
            <files mask="fmstr_example_can_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_aws_shadow_enet" name="aws_shadow_enet" brief="Demo for showing how to use the Device Shadow library's API." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="aws_examples" path="boards/evkbmimxrt1170/aws_examples/shadow_enet/cm7">
          <external path="boards/evkbmimxrt1170/aws_examples/shadow_enet/cm7" type="xml">
            <files mask="aws_shadow_enet_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_aws_shadow_wifi_nxp" name="aws_shadow_wifi_nxp" brief="Demo for showing how to use the Device Shadow library's API." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="aws_examples" path="boards/evkbmimxrt1170/aws_examples/shadow_wifi_nxp/cm7">
          <external path="boards/evkbmimxrt1170/aws_examples/shadow_wifi_nxp/cm7" type="xml">
            <files mask="aws_shadow_wifi_nxp_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lvgl_demo_benchmark_cm7" name="lvgl_demo_benchmark_cm7" brief="A demo application runs different functions for benchmark test." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lvgl_examples" path="boards/evkbmimxrt1170/lvgl_examples/lvgl_demo_benchmark/cm7">
          <external path="boards/evkbmimxrt1170/lvgl_examples/lvgl_demo_benchmark/cm7" type="xml">
            <files mask="lvgl_demo_benchmark_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lvgl_demo_benchmark_bm_cm7" name="lvgl_demo_benchmark_bm_cm7" brief="A demo application runs different functions for benchmark test." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lvgl_examples" path="boards/evkbmimxrt1170/lvgl_examples/lvgl_demo_benchmark_bm/cm7">
          <external path="boards/evkbmimxrt1170/lvgl_examples/lvgl_demo_benchmark_bm/cm7" type="xml">
            <files mask="lvgl_demo_benchmark_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lvgl_demo_widgets_cm7" name="lvgl_demo_widgets_cm7" brief="A demo application to show lvgl widgets." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lvgl_examples" path="boards/evkbmimxrt1170/lvgl_examples/lvgl_demo_widgets/cm7">
          <external path="boards/evkbmimxrt1170/lvgl_examples/lvgl_demo_widgets/cm7" type="xml">
            <files mask="lvgl_demo_widgets_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lvgl_demo_widgets_bm_cm7" name="lvgl_demo_widgets_bm_cm7" brief="A demo application to show lvgl widgets." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lvgl_examples" path="boards/evkbmimxrt1170/lvgl_examples/lvgl_demo_widgets_bm/cm7">
          <external path="boards/evkbmimxrt1170/lvgl_examples/lvgl_demo_widgets_bm/cm7" type="xml">
            <files mask="lvgl_demo_widgets_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lvgl_guider_cm7" name="lvgl_guider_cm7" brief="LittleVGL project used with GUI Guider." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lvgl_examples" path="boards/evkbmimxrt1170/lvgl_examples/lvgl_guider/cm7">
          <external path="boards/evkbmimxrt1170/lvgl_examples/lvgl_guider/cm7" type="xml">
            <files mask="lvgl_guider_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_lvgl_guider_bm_cm7" name="lvgl_guider_bm_cm7" brief="LVGL project used with GUI Guider on baremetal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lvgl_examples" path="boards/evkbmimxrt1170/lvgl_examples/lvgl_guider_bm/cm7">
          <external path="boards/evkbmimxrt1170/lvgl_examples/lvgl_guider_bm/cm7" type="xml">
            <files mask="lvgl_guider_bm_cm7_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_power_mode_switch_bm_pmic_rt1xxx_core0" name="power_mode_switch_bm_pmic_rt1xxx_core0" brief="The Power mode switch demo application demonstrates the use of power modes and pf5020 in the KSDK. Different from power_mode_switch_bm_pmic demo, this demo uses external PMIC(PF5020) as power supply, so on-chip pmic is disabled in this demo. The external PMIC support standby mode which can work with chip PMIC_STBY_REQ signal to switch PMIC output in the hardware method. " toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" linked_projects="evkbmimxrt1170_power_mode_switch_bm_pmic_rt1xxx_core1" path="boards/evkbmimxrt1170/demo_apps/power_mode_switch/bm_pmic/core0">
          <external path="boards/evkbmimxrt1170/demo_apps/power_mode_switch/bm_pmic/core0" type="xml">
            <files mask="power_mode_switch_bm_pmic_rt1xxx_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_power_mode_switch_bm_dcdc_rt1xxx_core0" name="power_mode_switch_bm_dcdc_rt1xxx_core0" brief="The Power mode switch demo application demonstrates the use of power modes in the KSDK. The demo prints the power mode menuthrough the debug console, where the user can set the MCU to a specific power mode. The user can also set the wakeup source by following the debug console prompts. The purpose of this demo is to show how to switch between different power modes, and how to configure a wakeup source and wakeup the MCU from low power modes. Tips: This demo is to show how the various power mode can switch to each other. However, in actual low power use case, to save energy and reduce the consumption even more, many things can be done including: - Disable the clock for unnecessary module during low power mode. That means, programmer can disable the clocks before entering the low power mode and re-enable them after exiting the low power mode when necessary. - Disable the function for unnecessary part of a module when other part would keep working in low power mode. At the most time, more powerful function means more power consumption. For example, disable the digital function for the unnecessary pin mux, and so on. - Set the proper pin state (direction and logic level) according to the actual application hardware. Otherwise, the pin cirrent would be activied unexpectedly waste some energy. - Other low power consideration based on the actual application hardware. - Debug pins(e.g SWD_DIO) would consume additional power, had better to disable related pins or disconnect them. " toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" linked_projects="evkbmimxrt1170_power_mode_switch_bm_dcdc_rt1xxx_core1" path="boards/evkbmimxrt1170/demo_apps/power_mode_switch/bm_dcdc/core0">
          <external path="boards/evkbmimxrt1170/demo_apps/power_mode_switch/bm_dcdc/core0" type="xml">
            <files mask="power_mode_switch_bm_dcdc_rt1xxx_core0_v3_15.xml"/>
          </external>
        </example>
        <example id="evkbmimxrt1170_power_manager_test_asymmetric_multiCore_bm_core0" name="power_manager_test_asymmetric_multiCore_bm_core0" brief="This example demonstrates the basic usage of the Power Manager framework for asymmetric multicore platforms." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" linked_projects="evkbmimxrt1170_power_manager_test_asymmetric_multiCore_bm_core1" path="boards/evkbmimxrt1170/demo_apps/power_manager_test/multiCore_bm/core0">
          <external path="boards/evkbmimxrt1170/demo_apps/power_manager_test/multiCore_bm/core0" type="xml">
            <files mask="power_manager_test_asymmetric_multiCore_bm_core0_v3_15.xml"/>
          </external>
        </example>
      </examples>
      <debug_configurations>
        <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
          <drivers>
            <driver id_refs="BOARD_FLASH_evkbmimxrt1170">
              <driverBinary path="devices/MIMXRT1176/mcuxpresso" type="binary">
                <files mask="MIMXRT1170_SFDP_QSPI.cfx"/>
              </driverBinary>
            </driver>
          </drivers>
        </debug_configuration>
      </debug_configurations>
    </board>
  </boards>
  <devices>
    <device id="MIMXRT1176xxxxx" name="MIMXRT1176" version="1.0.0" full_name="MIMXRT1176xxxxx" family="MIMXRT1170" platform="i.MX">
      <description>MIMXRT1176: i.MX® MIMXRT1176 1GHz, 2MB RAM Microcontrollers (MCUs) based on ARM® Cortex®-M4 Core and ARM® Cortex®-M7 Core</description>
      <metadataSet>
        <metadata key="compatible_device.pemicro" value="IMXRT1176"/>
        <metadata key="vendor" value="NXP"/>
      </metadataSet>
      <defines>
        <define name="CPU_$|package|" value=""/>
        <define name="CPU_$|package|_$|core|" value=""/>
      </defines>
      <core id="cm4_MIMXRT1176xxxxx" name="cm4" fpu="true" type="cm4" slave_roles="M4SLAVE" boot_role="primary_secondary" mpu="true">
        <metadataSet>
          <metadata key="compatible_device.segger" value="MIMXRT1176xxxA_M4"/>
        </metadataSet>
        <memory>
          <memoryBlock id="SRAM_DTC_cm4_MIMXRT1176xxxxx" name="SRAM_DTC_cm4" addr="20000000" size="00020000" type="RAM" access="RW"/>
          <memoryBlock id="SRAM_ITC_cm4_MIMXRT1176xxxxx" name="SRAM_ITC_cm4" addr="1ffe0000" size="00020000" type="RAM" access="RW"/>
        </memory>
        <debug_configurations>
          <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
            <params>
              <params id="misc.options.MIMXRT1176xxxx.core_cm4.MIMXRT1176xxxxx" name="misc.options" value="--no-packed --cachelib libahb_lmem.so"/>
              <params id="internal.core.index.MIMXRT1176xxxx.core_cm4.MIMXRT1176xxxxx" name="internal.core.index" value="1"/>
            </params>
          </debug_configuration>
        </debug_configurations>
      </core>
      <core id="cm7_MIMXRT1176xxxxx" name="cm7" fpu="true" type="cm7" slave_roles="M7SLAVE" boot_role="primary_secondary" mpu="true">
        <metadataSet>
          <metadata key="compatible_device.segger" value="MIMXRT1176xxxA_M7"/>
        </metadataSet>
        <memory>
          <memoryBlock id="SRAM_DTC_cm7_MIMXRT1176xxxxx" name="SRAM_DTC_cm7" addr="20000000" size="00040000" type="RAM" access="RW"/>
          <memoryBlock id="SRAM_ITC_cm7_MIMXRT1176xxxxx" name="SRAM_ITC_cm7" addr="00000000" size="00040000" type="RAM" access="RW"/>
        </memory>
        <debug_configurations>
          <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
            <params>
              <params id="misc.options.MIMXRT1176xxxx.core_cm7.MIMXRT1176xxxxx" name="misc.options" value="--no-packed"/>
              <params id="internal.core.index.MIMXRT1176xxxx.core_cm7.MIMXRT1176xxxxx" name="internal.core.index" value="0"/>
            </params>
          </debug_configuration>
        </debug_configurations>
      </core>
      <memory>
        <memoryBlock id="SRAM_OC1_MIMXRT1176xxxxx" name="SRAM_OC1" addr="20240000" size="00080000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM_OC2_MIMXRT1176xxxxx" name="SRAM_OC2" addr="202c0000" size="00080000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM_OC_ECC1_MIMXRT1176xxxxx" name="SRAM_OC_ECC1" addr="20340000" size="00010000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM_OC_ECC2_MIMXRT1176xxxxx" name="SRAM_OC_ECC2" addr="20350000" size="00010000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM_OC_cm7_MIMXRT1176xxxxx" name="SRAM_OC_cm7" addr="20360000" size="00020000" type="RAM" access="RW"/>
      </memory>
      <total_memory flash_size_kb="0" ram_size_kb="2048"/>
      <package id="MIMXRT1176AVM8A" name="MIMXRT1176AVM8A"/>
      <package id="MIMXRT1176CVM8A" name="MIMXRT1176CVM8A"/>
      <package id="MIMXRT1176DVMAA" name="MIMXRT1176DVMAA"/>
      <evaluation_boards>
        <evaluation_board name="isi_qmc_dgc"/>
        <evaluation_board name="evkmimxrt1170"/>
        <evaluation_board name="evkbmimxrt1170"/>
      </evaluation_boards>
      <debug_configurations>
        <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
          <params>
            <params id="internal.wiretype.release.MIMXRT1176xxxxx" name="internal.wiretype" value="SWD"/>
            <params id="internal.has_swo.release.MIMXRT1176xxxxx" name="internal.has_swo" value="true"/>
            <params id="internal.connect.script.debug.mcuxpresso.MIMXRT1176xxxxx" name="internal.connect.script" value="RT1170_connect_M7_wake_M4.scp"/>
            <params id="internal.connect.reset.debug.mcuxpresso.MIMXRT1176xxxxx" name="internal.reset.script" value="RT1170_reset.scp"/>
          </params>
        </debug_configuration>
      </debug_configurations>
      <linkerSettings nature="c_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
      <linkerSettings nature="cpp_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
    </device>
    <device id="MIMXRT1173xxxxx" name="MIMXRT1173" version="1.0.0" full_name="MIMXRT1173xxxxx" family="MIMXRT1170" platform="i.MX">
      <description>MIMXRT1173: i.MX® MIMXRT1173 1GHz, 2MB RAM Microcontrollers (MCUs) based on ARM® Cortex®-M4 Core and ARM® Cortex®-M7 Core</description>
      <metadataSet>
        <metadata key="compatible_device.pemicro" value="IMXRT1173"/>
        <metadata key="vendor" value="NXP"/>
      </metadataSet>
      <defines>
        <define name="CPU_$|package|" value=""/>
        <define name="CPU_$|package|_$|core|" value=""/>
      </defines>
      <core id="cm4_MIMXRT1173xxxxx" name="cm4" fpu="true" type="cm4" slave_roles="M4SLAVE" boot_role="primary_secondary" mpu="true">
        <metadataSet>
          <metadata key="compatible_device.segger" value="MIMXRT1173xxxA_M4"/>
        </metadataSet>
        <memory>
          <memoryBlock id="SRAM_DTC_cm4_MIMXRT1173xxxxx" name="SRAM_DTC_cm4" addr="20000000" size="00020000" type="RAM" access="RW"/>
          <memoryBlock id="SRAM_ITC_cm4_MIMXRT1173xxxxx" name="SRAM_ITC_cm4" addr="1ffe0000" size="00020000" type="RAM" access="RW"/>
        </memory>
        <debug_configurations>
          <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
            <params>
              <params id="misc.options.MIMXRT1173xxxx.core_cm4.MIMXRT1173xxxxx" name="misc.options" value="--no-packed --cachelib libahb_lmem.so"/>
              <params id="internal.core.index.MIMXRT1173xxxx.core_cm4.MIMXRT1173xxxxx" name="internal.core.index" value="1"/>
            </params>
          </debug_configuration>
        </debug_configurations>
      </core>
      <core id="cm7_MIMXRT1173xxxxx" name="cm7" fpu="true" type="cm7" slave_roles="M7SLAVE" boot_role="primary_secondary" mpu="true">
        <metadataSet>
          <metadata key="compatible_device.segger" value="MIMXRT1173xxxA_M7"/>
        </metadataSet>
        <memory>
          <memoryBlock id="SRAM_DTC_cm7_MIMXRT1173xxxxx" name="SRAM_DTC_cm7" addr="20000000" size="00040000" type="RAM" access="RW"/>
          <memoryBlock id="SRAM_ITC_cm7_MIMXRT1173xxxxx" name="SRAM_ITC_cm7" addr="00000000" size="00040000" type="RAM" access="RW"/>
        </memory>
        <debug_configurations>
          <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
            <params>
              <params id="misc.options.MIMXRT1173xxxx.core_cm7.MIMXRT1173xxxxx" name="misc.options" value="--no-packed"/>
              <params id="internal.core.index.MIMXRT1173xxxx.core_cm7.MIMXRT1173xxxxx" name="internal.core.index" value="0"/>
            </params>
          </debug_configuration>
        </debug_configurations>
      </core>
      <memory>
        <memoryBlock id="SRAM_OC1_MIMXRT1173xxxxx" name="SRAM_OC1" addr="20240000" size="00080000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM_OC2_MIMXRT1173xxxxx" name="SRAM_OC2" addr="202c0000" size="00080000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM_OC_ECC1_MIMXRT1173xxxxx" name="SRAM_OC_ECC1" addr="20340000" size="00010000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM_OC_ECC2_MIMXRT1173xxxxx" name="SRAM_OC_ECC2" addr="20350000" size="00010000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM_OC_cm7_MIMXRT1173xxxxx" name="SRAM_OC_cm7" addr="20360000" size="00020000" type="RAM" access="RW"/>
      </memory>
      <total_memory flash_size_kb="0" ram_size_kb="2048"/>
      <package id="MIMXRT1173CVM8A" name="MIMXRT1173CVM8A"/>
      <evaluation_boards>
        <evaluation_board name="isi_qmc_dgc"/>
        <evaluation_board name="evkmimxrt1170"/>
        <evaluation_board name="evkbmimxrt1170"/>
      </evaluation_boards>
      <debug_configurations>
        <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
          <params>
            <params id="internal.wiretype.release.MIMXRT1173xxxxx" name="internal.wiretype" value="SWD"/>
            <params id="internal.has_swo.release.MIMXRT1173xxxxx" name="internal.has_swo" value="true"/>
            <params id="internal.connect.script.debug.mcuxpresso.MIMXRT1173xxxxx" name="internal.connect.script" value="RT1170_connect_M7_wake_M4.scp"/>
            <params id="internal.connect.reset.debug.mcuxpresso.MIMXRT1173xxxxx" name="internal.reset.script" value="RT1170_reset.scp"/>
          </params>
        </debug_configuration>
      </debug_configurations>
      <linkerSettings nature="c_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
      <linkerSettings nature="cpp_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
    </device>
  </devices>
  <components>
    <component id="platform.drivers.xip_board.evkbmimxrt1170.MIMXRT1176" name="xip_board" brief="XIP Board Driver" version="2.0.1" full_name="XIP Board Driver" category="Board Support/SDK Drivers" user_visible="true" type="board_component" package_base_path="boards/evkbmimxrt1170/xip" project_base_path="xip">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="evkbmimxrt1170_flexspi_nor_config.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="evkbmimxrt1170_flexspi_nor_config.h"/>
      </source>
      <source relative_path=".." project_relative_path="./" type="src">
        <files mask="dcd.c"/>
        <files mask="xmcd.c"/>
      </source>
      <source relative_path=".." project_relative_path="./" type="c_include">
        <files mask="dcd.h"/>
        <files mask="xmcd.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="board_boot_header.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="project_template_cm7.evkbmimxrt1170.MIMXRT1176" name="board_pt_cm7_evkbmimxrt1170" brief="board_pt_cm7_evkbmimxrt1170" version="1.0.0" full_name="board_pt_cm7_evkbmimxrt1170" category="Board Support/SDK Project Template" user_visible="true" type="other" package_base_path="boards/evkbmimxrt1170/project_template" project_base_path="board">
      <defines>
        <define name="MCUXPRESSO_SDK" value=""/>
        <define name="XIP_EXTERNAL_FLASH" value="1"/>
        <define name="XIP_BOOT_HEADER_ENABLE" value="1"/>
      </defines>
      <dependencies>
        <all>
          <device_dependency value="MIMXRT1176xxxxx"/>
          <device_core_dependency value="cm7_MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="board_project_template_cm7.cmake" hidden="true"/>
      </source>
    </component>
    <component id="project_template_cm4.evkbmimxrt1170.MIMXRT1176" name="board_pt_cm4_evkbmimxrt1170" brief="board_pt_cm4_evkbmimxrt1170" version="1.0.0" full_name="board_pt_cm4_evkbmimxrt1170" category="Board Support/SDK Project Template" user_visible="true" type="other" package_base_path="boards/evkbmimxrt1170/project_template" project_base_path="board">
      <defines>
        <define name="MCUXPRESSO_SDK" value=""/>
        <define name="XIP_EXTERNAL_FLASH" value="1"/>
      </defines>
      <dependencies>
        <all>
          <device_dependency value="MIMXRT1176xxxxx"/>
          <device_core_dependency value="cm4_MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="board_project_template_cm4.cmake" hidden="true"/>
      </source>
    </component>
    <component id="project_template.evkbmimxrt1170.MIMXRT1176" name="evkbmimxrt1170" brief="Board_project_template evkbmimxrt1170" version="1.0.0" full_name="Board_project_template evkbmimxrt1170" category="Board Support/SDK Project Template" user_visible="true" type="project_template" package_base_path="boards/evkbmimxrt1170/project_template" project_base_path="board">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="platform.drivers.cache_armv7_m7.MIMXRT1176"/>
            <component_dependency value="platform.drivers.cache_lmem.MIMXRT1176"/>
          </any_of>
          <any_of>
            <component_dependency value="project_template_cm7.evkbmimxrt1170.MIMXRT1176"/>
            <component_dependency value="project_template_cm4.evkbmimxrt1170.MIMXRT1176"/>
          </any_of>
          <component_dependency value="device.MIMXRT1176_startup.MIMXRT1176"/>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <component_dependency value="platform.drivers.clock.MIMXRT1176"/>
          <component_dependency value="platform.drivers.igpio.MIMXRT1176"/>
          <component_dependency value="platform.drivers.iomuxc.MIMXRT1176"/>
          <component_dependency value="platform.drivers.pmu_1.MIMXRT1176"/>
          <component_dependency value="platform.drivers.anatop_ai.MIMXRT1176"/>
          <component_dependency value="platform.drivers.memory.MIMXRT1176"/>
          <component_dependency value="platform.drivers.dcdc_soc.MIMXRT1176"/>
          <component_dependency value="platform.drivers.gpc_3.MIMXRT1176"/>
          <component_dependency value="platform.drivers.pgmc.MIMXRT1176"/>
          <component_dependency value="platform.drivers.soc_src.MIMXRT1176"/>
          <component_dependency value="platform.drivers.nic301.MIMXRT1176"/>
          <component_dependency value="platform.drivers.xip_board.evkbmimxrt1170.MIMXRT1176"/>
          <component_dependency value="platform.drivers.xip_device.MIMXRT1176"/>
          <component_dependency value="component.lpuart_adapter.MIMXRT1176"/>
          <component_dependency value="utility.debug_console_lite.MIMXRT1176"/>
          <component_dependency value="platform.utilities.assert_lite.MIMXRT1176"/>
          <component_dependency value="utility.str.MIMXRT1176"/>
          <board_dependency value="evkbmimxrt1170"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="peripherals.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="peripherals.h"/>
      </source>
      <source relative_path="cm7" project_relative_path="./" type="src" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="pin_mux.c"/>
      </source>
      <source relative_path="cm7" project_relative_path="./" type="c_include" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="pin_mux.h"/>
      </source>
      <source relative_path="cm4" project_relative_path="./" type="src" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="pin_mux.c"/>
      </source>
      <source relative_path="cm4" project_relative_path="./" type="c_include" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="pin_mux.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="board_project_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.devices.MIMXRT1176_debugger.MIMXRT1176" name="Device MIMXRT1176_debugger" brief="Device MIMXRT1176_debugger" version="1.0.0" full_name="Device MIMXRT1176_debugger" category="Device/SDK Utilities" user_visible="true" type="debugger" package_base_path="devices/MIMXRT1176" project_base_path="svd">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="./" type="xml" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="MIMXRT1176_cm4.xml"/>
      </source>
      <source relative_path="./" type="xml" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="MIMXRT1176_cm7.xml"/>
      </source>
    </component>
    <component id="platform.drivers.clock.MIMXRT1176" name="clock" brief="Clock Driver" version="2.5.6" full_name="Clock Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_clock.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_clock.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_clock.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pmu_1.MIMXRT1176" name="pmu" brief="PMU Driver" version="2.1.2" full_name="PMU Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pmu.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pmu.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_pmu_1.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.xip_device.MIMXRT1176" name="device_boot_header" brief="Device Boot Header" version="1.0.0" full_name="XIP Device Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/xip" project_base_path="xip">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexspi_nor_boot.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexspi_nor_boot.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="device_boot_header.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="tools.MIMXRT1176" name="cmake_toolchain" brief="Cmake_toolchain" version="1.0.0" full_name="Cmake_toolchain" category="Device/SDK Utilities" user_visible="true" type="other" package_base_path="tools/cmake_toolchain_files" project_base_path="cmake_toolchain_files">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="./" type="script">
        <files mask="armgcc.cmake"/>
        <files mask="xcc.cmake"/>
        <files mask="xclang.cmake"/>
        <files mask="armgcc_force_cpp.cmake"/>
        <files mask="mcux_config.cmake"/>
        <files mask="riscvllvm.cmake"/>
      </source>
    </component>
    <component id="CMSIS_DSP_Include.MIMXRT1176" name="CMSIS_DSP_Library_Header" brief="CMSIS-DSP Library Header" version="1.16.2" full_name="CMSIS DSP Library Header" category="CMSIS/DSP" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/DSP" project_base_path="CMSIS/DSP">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_common_tables_f16.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_const_structs_f16.h"/>
        <files mask="arm_helium_utils.h"/>
        <files mask="arm_math.h"/>
        <files mask="arm_math_f16.h"/>
        <files mask="arm_math_memory.h"/>
        <files mask="arm_math_types.h"/>
        <files mask="arm_math_types_f16.h"/>
        <files mask="arm_mve_tables.h"/>
        <files mask="arm_mve_tables_f16.h"/>
        <files mask="arm_vec_math.h"/>
        <files mask="arm_vec_math_f16.h"/>
      </source>
      <source relative_path="Include/dsp" type="c_include">
        <files mask="basic_math_functions.h"/>
        <files mask="basic_math_functions_f16.h"/>
        <files mask="bayes_functions.h"/>
        <files mask="bayes_functions_f16.h"/>
        <files mask="complex_math_functions.h"/>
        <files mask="complex_math_functions_f16.h"/>
        <files mask="controller_functions.h"/>
        <files mask="controller_functions_f16.h"/>
        <files mask="debug.h"/>
        <files mask="distance_functions.h"/>
        <files mask="distance_functions_f16.h"/>
        <files mask="fast_math_functions.h"/>
        <files mask="fast_math_functions_f16.h"/>
        <files mask="filtering_functions.h"/>
        <files mask="filtering_functions_f16.h"/>
        <files mask="interpolation_functions.h"/>
        <files mask="interpolation_functions_f16.h"/>
        <files mask="matrix_functions.h"/>
        <files mask="matrix_functions_f16.h"/>
        <files mask="matrix_utils.h"/>
        <files mask="none.h"/>
        <files mask="quaternion_math_functions.h"/>
        <files mask="statistics_functions.h"/>
        <files mask="statistics_functions_f16.h"/>
        <files mask="support_functions.h"/>
        <files mask="support_functions_f16.h"/>
        <files mask="svm_defines.h"/>
        <files mask="svm_functions.h"/>
        <files mask="svm_functions_f16.h"/>
        <files mask="transform_functions.h"/>
        <files mask="transform_functions_f16.h"/>
        <files mask="utils.h"/>
        <files mask="window_functions.h"/>
      </source>
      <source relative_path="PrivateInclude" type="c_include">
        <files mask="arm_sorting.h"/>
        <files mask="arm_vec_fft.h"/>
        <files mask="arm_vec_filtering.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_DSP_Include.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="PrivateInclude" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
        <include_path relative_path="PrivateInclude" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_DSP_Source.MIMXRT1176" name="CMSIS_DSP_Library_Source" brief="CMSIS-DSP Library" version="1.16.2" full_name="CMSIS DSP Library Source" category="CMSIS/DSP" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/DSP" project_base_path="CMSIS/DSP">
      <defines>
        <define name="DISABLEFLOAT16" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_common_tables_f16.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_const_structs_f16.h"/>
        <files mask="arm_helium_utils.h"/>
        <files mask="arm_math.h"/>
        <files mask="arm_math_f16.h"/>
        <files mask="arm_math_memory.h"/>
        <files mask="arm_math_types.h"/>
        <files mask="arm_math_types_f16.h"/>
        <files mask="arm_mve_tables.h"/>
        <files mask="arm_mve_tables_f16.h"/>
        <files mask="arm_vec_math.h"/>
        <files mask="arm_vec_math_f16.h"/>
      </source>
      <source relative_path="Include/dsp" type="c_include">
        <files mask="basic_math_functions.h"/>
        <files mask="basic_math_functions_f16.h"/>
        <files mask="bayes_functions.h"/>
        <files mask="bayes_functions_f16.h"/>
        <files mask="complex_math_functions.h"/>
        <files mask="complex_math_functions_f16.h"/>
        <files mask="controller_functions.h"/>
        <files mask="controller_functions_f16.h"/>
        <files mask="debug.h"/>
        <files mask="distance_functions.h"/>
        <files mask="distance_functions_f16.h"/>
        <files mask="fast_math_functions.h"/>
        <files mask="fast_math_functions_f16.h"/>
        <files mask="filtering_functions.h"/>
        <files mask="filtering_functions_f16.h"/>
        <files mask="interpolation_functions.h"/>
        <files mask="interpolation_functions_f16.h"/>
        <files mask="matrix_functions.h"/>
        <files mask="matrix_functions_f16.h"/>
        <files mask="matrix_utils.h"/>
        <files mask="none.h"/>
        <files mask="quaternion_math_functions.h"/>
        <files mask="statistics_functions.h"/>
        <files mask="statistics_functions_f16.h"/>
        <files mask="support_functions.h"/>
        <files mask="support_functions_f16.h"/>
        <files mask="svm_defines.h"/>
        <files mask="svm_functions.h"/>
        <files mask="svm_functions_f16.h"/>
        <files mask="transform_functions.h"/>
        <files mask="transform_functions_f16.h"/>
        <files mask="utils.h"/>
        <files mask="window_functions.h"/>
      </source>
      <source relative_path="PrivateInclude" type="c_include">
        <files mask="arm_sorting.h"/>
        <files mask="arm_vec_fft.h"/>
        <files mask="arm_vec_filtering.h"/>
      </source>
      <source relative_path="Source/BasicMathFunctions" type="src">
        <files mask="BasicMathFunctions.c"/>
        <files mask="BasicMathFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/BasicMathFunctions" type="src">
        <files mask="arm_abs_f32.c"/>
        <files mask="arm_abs_f64.c"/>
        <files mask="arm_abs_q15.c"/>
        <files mask="arm_abs_q31.c"/>
        <files mask="arm_abs_q7.c"/>
        <files mask="arm_add_f32.c"/>
        <files mask="arm_add_f64.c"/>
        <files mask="arm_add_q15.c"/>
        <files mask="arm_add_q31.c"/>
        <files mask="arm_add_q7.c"/>
        <files mask="arm_and_u16.c"/>
        <files mask="arm_and_u32.c"/>
        <files mask="arm_and_u8.c"/>
        <files mask="arm_clip_f32.c"/>
        <files mask="arm_clip_q15.c"/>
        <files mask="arm_clip_q31.c"/>
        <files mask="arm_clip_q7.c"/>
        <files mask="arm_dot_prod_f32.c"/>
        <files mask="arm_dot_prod_f64.c"/>
        <files mask="arm_dot_prod_q15.c"/>
        <files mask="arm_dot_prod_q31.c"/>
        <files mask="arm_dot_prod_q7.c"/>
        <files mask="arm_mult_f32.c"/>
        <files mask="arm_mult_f64.c"/>
        <files mask="arm_mult_q15.c"/>
        <files mask="arm_mult_q31.c"/>
        <files mask="arm_mult_q7.c"/>
        <files mask="arm_negate_f32.c"/>
        <files mask="arm_negate_f64.c"/>
        <files mask="arm_negate_q15.c"/>
        <files mask="arm_negate_q31.c"/>
        <files mask="arm_negate_q7.c"/>
        <files mask="arm_not_u16.c"/>
        <files mask="arm_not_u32.c"/>
        <files mask="arm_not_u8.c"/>
        <files mask="arm_offset_f32.c"/>
        <files mask="arm_offset_f64.c"/>
        <files mask="arm_offset_q15.c"/>
        <files mask="arm_offset_q31.c"/>
        <files mask="arm_offset_q7.c"/>
        <files mask="arm_or_u16.c"/>
        <files mask="arm_or_u32.c"/>
        <files mask="arm_or_u8.c"/>
        <files mask="arm_scale_f32.c"/>
        <files mask="arm_scale_f64.c"/>
        <files mask="arm_scale_q15.c"/>
        <files mask="arm_scale_q31.c"/>
        <files mask="arm_scale_q7.c"/>
        <files mask="arm_shift_q15.c"/>
        <files mask="arm_shift_q31.c"/>
        <files mask="arm_shift_q7.c"/>
        <files mask="arm_sub_f32.c"/>
        <files mask="arm_sub_f64.c"/>
        <files mask="arm_sub_q15.c"/>
        <files mask="arm_sub_q31.c"/>
        <files mask="arm_sub_q7.c"/>
        <files mask="arm_xor_u16.c"/>
        <files mask="arm_xor_u32.c"/>
        <files mask="arm_xor_u8.c"/>
        <files mask="arm_abs_f16.c"/>
        <files mask="arm_add_f16.c"/>
        <files mask="arm_clip_f16.c"/>
        <files mask="arm_dot_prod_f16.c"/>
        <files mask="arm_mult_f16.c"/>
        <files mask="arm_negate_f16.c"/>
        <files mask="arm_offset_f16.c"/>
        <files mask="arm_scale_f16.c"/>
        <files mask="arm_sub_f16.c"/>
      </source>
      <source relative_path="Source/BayesFunctions" type="src">
        <files mask="BayesFunctions.c"/>
        <files mask="BayesFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/BayesFunctions" type="src">
        <files mask="arm_gaussian_naive_bayes_predict_f32.c"/>
        <files mask="arm_gaussian_naive_bayes_predict_f16.c"/>
      </source>
      <source relative_path="Source/CommonTables" type="src">
        <files mask="CommonTables.c"/>
        <files mask="CommonTablesF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/CommonTables" type="src">
        <files mask="arm_common_tables.c"/>
        <files mask="arm_const_structs.c"/>
        <files mask="arm_mve_tables.c"/>
        <files mask="arm_common_tables_f16.c"/>
        <files mask="arm_const_structs_f16.c"/>
        <files mask="arm_mve_tables_f16.c"/>
      </source>
      <source relative_path="Source/ComplexMathFunctions" type="src">
        <files mask="ComplexMathFunctions.c"/>
        <files mask="ComplexMathFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/ComplexMathFunctions" type="src">
        <files mask="arm_cmplx_conj_f32.c"/>
        <files mask="arm_cmplx_conj_q15.c"/>
        <files mask="arm_cmplx_conj_q31.c"/>
        <files mask="arm_cmplx_dot_prod_f32.c"/>
        <files mask="arm_cmplx_dot_prod_q15.c"/>
        <files mask="arm_cmplx_dot_prod_q31.c"/>
        <files mask="arm_cmplx_mag_f32.c"/>
        <files mask="arm_cmplx_mag_f64.c"/>
        <files mask="arm_cmplx_mag_fast_q15.c"/>
        <files mask="arm_cmplx_mag_q15.c"/>
        <files mask="arm_cmplx_mag_q31.c"/>
        <files mask="arm_cmplx_mag_squared_f32.c"/>
        <files mask="arm_cmplx_mag_squared_f64.c"/>
        <files mask="arm_cmplx_mag_squared_q15.c"/>
        <files mask="arm_cmplx_mag_squared_q31.c"/>
        <files mask="arm_cmplx_mult_cmplx_f32.c"/>
        <files mask="arm_cmplx_mult_cmplx_f64.c"/>
        <files mask="arm_cmplx_mult_cmplx_q15.c"/>
        <files mask="arm_cmplx_mult_cmplx_q31.c"/>
        <files mask="arm_cmplx_mult_real_f32.c"/>
        <files mask="arm_cmplx_mult_real_q15.c"/>
        <files mask="arm_cmplx_mult_real_q31.c"/>
        <files mask="arm_cmplx_conj_f16.c"/>
        <files mask="arm_cmplx_dot_prod_f16.c"/>
        <files mask="arm_cmplx_mag_f16.c"/>
        <files mask="arm_cmplx_mag_squared_f16.c"/>
        <files mask="arm_cmplx_mult_cmplx_f16.c"/>
        <files mask="arm_cmplx_mult_real_f16.c"/>
      </source>
      <source relative_path="Source/ControllerFunctions" type="src">
        <files mask="ControllerFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/ControllerFunctions" type="src">
        <files mask="arm_pid_init_f32.c"/>
        <files mask="arm_pid_init_q15.c"/>
        <files mask="arm_pid_init_q31.c"/>
        <files mask="arm_pid_reset_f32.c"/>
        <files mask="arm_pid_reset_q15.c"/>
        <files mask="arm_pid_reset_q31.c"/>
        <files mask="arm_sin_cos_f32.c"/>
        <files mask="arm_sin_cos_q31.c"/>
      </source>
      <source relative_path="Source/DistanceFunctions" type="src">
        <files mask="DistanceFunctions.c"/>
        <files mask="DistanceFunctionsF16.c"/>
      </source>
      <source relative_path="Source/DistanceFunctions" type="c_include">
        <files mask="arm_boolean_distance_template.h"/>
      </source>
      <source exclude="true" relative_path="Source/DistanceFunctions" type="src">
        <files mask="arm_boolean_distance.c"/>
        <files mask="arm_braycurtis_distance_f32.c"/>
        <files mask="arm_canberra_distance_f32.c"/>
        <files mask="arm_chebyshev_distance_f32.c"/>
        <files mask="arm_chebyshev_distance_f64.c"/>
        <files mask="arm_cityblock_distance_f32.c"/>
        <files mask="arm_cityblock_distance_f64.c"/>
        <files mask="arm_correlation_distance_f32.c"/>
        <files mask="arm_cosine_distance_f32.c"/>
        <files mask="arm_cosine_distance_f64.c"/>
        <files mask="arm_dice_distance.c"/>
        <files mask="arm_dtw_distance_f32.c"/>
        <files mask="arm_dtw_init_window_q7.c"/>
        <files mask="arm_dtw_path_f32.c"/>
        <files mask="arm_euclidean_distance_f32.c"/>
        <files mask="arm_euclidean_distance_f64.c"/>
        <files mask="arm_hamming_distance.c"/>
        <files mask="arm_jaccard_distance.c"/>
        <files mask="arm_jensenshannon_distance_f32.c"/>
        <files mask="arm_kulsinski_distance.c"/>
        <files mask="arm_minkowski_distance_f32.c"/>
        <files mask="arm_rogerstanimoto_distance.c"/>
        <files mask="arm_russellrao_distance.c"/>
        <files mask="arm_sokalmichener_distance.c"/>
        <files mask="arm_sokalsneath_distance.c"/>
        <files mask="arm_yule_distance.c"/>
        <files mask="arm_braycurtis_distance_f16.c"/>
        <files mask="arm_chebyshev_distance_f16.c"/>
        <files mask="arm_canberra_distance_f16.c"/>
        <files mask="arm_cityblock_distance_f16.c"/>
        <files mask="arm_correlation_distance_f16.c"/>
        <files mask="arm_cosine_distance_f16.c"/>
        <files mask="arm_euclidean_distance_f16.c"/>
        <files mask="arm_jensenshannon_distance_f16.c"/>
        <files mask="arm_minkowski_distance_f16.c"/>
      </source>
      <source relative_path="Source/FastMathFunctions" type="src">
        <files mask="FastMathFunctions.c"/>
        <files mask="FastMathFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/FastMathFunctions" type="src">
        <files mask="arm_atan2_f32.c"/>
        <files mask="arm_atan2_q15.c"/>
        <files mask="arm_atan2_q31.c"/>
        <files mask="arm_cos_f32.c"/>
        <files mask="arm_cos_q15.c"/>
        <files mask="arm_cos_q31.c"/>
        <files mask="arm_divide_q15.c"/>
        <files mask="arm_divide_q31.c"/>
        <files mask="arm_sin_f32.c"/>
        <files mask="arm_sin_q15.c"/>
        <files mask="arm_sin_q31.c"/>
        <files mask="arm_sqrt_q15.c"/>
        <files mask="arm_sqrt_q31.c"/>
        <files mask="arm_vexp_f32.c"/>
        <files mask="arm_vexp_f64.c"/>
        <files mask="arm_vlog_f32.c"/>
        <files mask="arm_vlog_f64.c"/>
        <files mask="arm_vlog_q15.c"/>
        <files mask="arm_vlog_q31.c"/>
        <files mask="arm_atan2_f16.c"/>
        <files mask="arm_vexp_f16.c"/>
        <files mask="arm_vinverse_f16.c"/>
        <files mask="arm_vlog_f16.c"/>
      </source>
      <source relative_path="Source/FilteringFunctions" type="src">
        <files mask="FilteringFunctions.c"/>
        <files mask="FilteringFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/FilteringFunctions" type="src">
        <files mask="arm_biquad_cascade_df1_32x64_init_q31.c"/>
        <files mask="arm_biquad_cascade_df1_32x64_q31.c"/>
        <files mask="arm_biquad_cascade_df1_f32.c"/>
        <files mask="arm_biquad_cascade_df1_fast_q15.c"/>
        <files mask="arm_biquad_cascade_df1_fast_q31.c"/>
        <files mask="arm_biquad_cascade_df1_init_f32.c"/>
        <files mask="arm_biquad_cascade_df1_init_q15.c"/>
        <files mask="arm_biquad_cascade_df1_init_q31.c"/>
        <files mask="arm_biquad_cascade_df1_q15.c"/>
        <files mask="arm_biquad_cascade_df1_q31.c"/>
        <files mask="arm_biquad_cascade_df2T_f32.c"/>
        <files mask="arm_biquad_cascade_df2T_f64.c"/>
        <files mask="arm_biquad_cascade_df2T_init_f32.c"/>
        <files mask="arm_biquad_cascade_df2T_init_f64.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_f32.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_init_f32.c"/>
        <files mask="arm_conv_f32.c"/>
        <files mask="arm_conv_fast_opt_q15.c"/>
        <files mask="arm_conv_fast_q15.c"/>
        <files mask="arm_conv_fast_q31.c"/>
        <files mask="arm_conv_opt_q15.c"/>
        <files mask="arm_conv_opt_q7.c"/>
        <files mask="arm_conv_partial_f32.c"/>
        <files mask="arm_conv_partial_fast_opt_q15.c"/>
        <files mask="arm_conv_partial_fast_q15.c"/>
        <files mask="arm_conv_partial_fast_q31.c"/>
        <files mask="arm_conv_partial_opt_q15.c"/>
        <files mask="arm_conv_partial_opt_q7.c"/>
        <files mask="arm_conv_partial_q15.c"/>
        <files mask="arm_conv_partial_q31.c"/>
        <files mask="arm_conv_partial_q7.c"/>
        <files mask="arm_conv_q15.c"/>
        <files mask="arm_conv_q31.c"/>
        <files mask="arm_conv_q7.c"/>
        <files mask="arm_correlate_f32.c"/>
        <files mask="arm_correlate_f64.c"/>
        <files mask="arm_correlate_fast_opt_q15.c"/>
        <files mask="arm_correlate_fast_q15.c"/>
        <files mask="arm_correlate_fast_q31.c"/>
        <files mask="arm_correlate_opt_q15.c"/>
        <files mask="arm_correlate_opt_q7.c"/>
        <files mask="arm_correlate_q15.c"/>
        <files mask="arm_correlate_q31.c"/>
        <files mask="arm_correlate_q7.c"/>
        <files mask="arm_fir_decimate_f32.c"/>
        <files mask="arm_fir_decimate_fast_q15.c"/>
        <files mask="arm_fir_decimate_fast_q31.c"/>
        <files mask="arm_fir_decimate_init_f32.c"/>
        <files mask="arm_fir_decimate_init_q15.c"/>
        <files mask="arm_fir_decimate_init_q31.c"/>
        <files mask="arm_fir_decimate_q15.c"/>
        <files mask="arm_fir_decimate_q31.c"/>
        <files mask="arm_fir_f32.c"/>
        <files mask="arm_fir_f64.c"/>
        <files mask="arm_fir_fast_q15.c"/>
        <files mask="arm_fir_fast_q31.c"/>
        <files mask="arm_fir_init_f32.c"/>
        <files mask="arm_fir_init_f64.c"/>
        <files mask="arm_fir_init_q15.c"/>
        <files mask="arm_fir_init_q31.c"/>
        <files mask="arm_fir_init_q7.c"/>
        <files mask="arm_fir_interpolate_f32.c"/>
        <files mask="arm_fir_interpolate_init_f32.c"/>
        <files mask="arm_fir_interpolate_init_q15.c"/>
        <files mask="arm_fir_interpolate_init_q31.c"/>
        <files mask="arm_fir_interpolate_q15.c"/>
        <files mask="arm_fir_interpolate_q31.c"/>
        <files mask="arm_fir_lattice_f32.c"/>
        <files mask="arm_fir_lattice_init_f32.c"/>
        <files mask="arm_fir_lattice_init_q15.c"/>
        <files mask="arm_fir_lattice_init_q31.c"/>
        <files mask="arm_fir_lattice_q15.c"/>
        <files mask="arm_fir_lattice_q31.c"/>
        <files mask="arm_fir_q15.c"/>
        <files mask="arm_fir_q31.c"/>
        <files mask="arm_fir_q7.c"/>
        <files mask="arm_fir_sparse_f32.c"/>
        <files mask="arm_fir_sparse_init_f32.c"/>
        <files mask="arm_fir_sparse_init_q15.c"/>
        <files mask="arm_fir_sparse_init_q31.c"/>
        <files mask="arm_fir_sparse_init_q7.c"/>
        <files mask="arm_fir_sparse_q15.c"/>
        <files mask="arm_fir_sparse_q31.c"/>
        <files mask="arm_fir_sparse_q7.c"/>
        <files mask="arm_iir_lattice_f32.c"/>
        <files mask="arm_iir_lattice_init_f32.c"/>
        <files mask="arm_iir_lattice_init_q15.c"/>
        <files mask="arm_iir_lattice_init_q31.c"/>
        <files mask="arm_iir_lattice_q15.c"/>
        <files mask="arm_iir_lattice_q31.c"/>
        <files mask="arm_levinson_durbin_f32.c"/>
        <files mask="arm_levinson_durbin_q31.c"/>
        <files mask="arm_lms_f32.c"/>
        <files mask="arm_lms_init_f32.c"/>
        <files mask="arm_lms_init_q15.c"/>
        <files mask="arm_lms_init_q31.c"/>
        <files mask="arm_lms_norm_f32.c"/>
        <files mask="arm_lms_norm_init_f32.c"/>
        <files mask="arm_lms_norm_init_q15.c"/>
        <files mask="arm_lms_norm_init_q31.c"/>
        <files mask="arm_lms_norm_q15.c"/>
        <files mask="arm_lms_norm_q31.c"/>
        <files mask="arm_lms_q15.c"/>
        <files mask="arm_lms_q31.c"/>
        <files mask="arm_biquad_cascade_df1_f16.c"/>
        <files mask="arm_biquad_cascade_df1_init_f16.c"/>
        <files mask="arm_biquad_cascade_df2T_f16.c"/>
        <files mask="arm_biquad_cascade_df2T_init_f16.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_f16.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_init_f16.c"/>
        <files mask="arm_correlate_f16.c"/>
        <files mask="arm_fir_f16.c"/>
        <files mask="arm_fir_init_f16.c"/>
        <files mask="arm_levinson_durbin_f16.c"/>
        <files mask="arm_fir_decimate_f64.c"/>
        <files mask="arm_fir_decimate_init_f64.c"/>
      </source>
      <source relative_path="Source/InterpolationFunctions" type="src">
        <files mask="InterpolationFunctions.c"/>
        <files mask="InterpolationFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/InterpolationFunctions" type="src">
        <files mask="arm_bilinear_interp_f32.c"/>
        <files mask="arm_bilinear_interp_q15.c"/>
        <files mask="arm_bilinear_interp_q31.c"/>
        <files mask="arm_bilinear_interp_q7.c"/>
        <files mask="arm_linear_interp_f32.c"/>
        <files mask="arm_linear_interp_q15.c"/>
        <files mask="arm_linear_interp_q31.c"/>
        <files mask="arm_linear_interp_q7.c"/>
        <files mask="arm_spline_interp_f32.c"/>
        <files mask="arm_spline_interp_init_f32.c"/>
        <files mask="arm_bilinear_interp_f16.c"/>
        <files mask="arm_linear_interp_f16.c"/>
      </source>
      <source relative_path="Source/MatrixFunctions" type="src">
        <files mask="MatrixFunctions.c"/>
        <files mask="MatrixFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/MatrixFunctions" type="src">
        <files mask="arm_householder_f32.c"/>
        <files mask="arm_householder_f64.c"/>
        <files mask="arm_mat_add_f32.c"/>
        <files mask="arm_mat_add_q15.c"/>
        <files mask="arm_mat_add_q31.c"/>
        <files mask="arm_mat_cholesky_f32.c"/>
        <files mask="arm_mat_cholesky_f64.c"/>
        <files mask="arm_mat_cmplx_mult_f32.c"/>
        <files mask="arm_mat_cmplx_mult_q15.c"/>
        <files mask="arm_mat_cmplx_mult_q31.c"/>
        <files mask="arm_mat_cmplx_trans_f32.c"/>
        <files mask="arm_mat_cmplx_trans_q15.c"/>
        <files mask="arm_mat_cmplx_trans_q31.c"/>
        <files mask="arm_mat_init_f32.c"/>
        <files mask="arm_mat_init_f64.c"/>
        <files mask="arm_mat_init_q15.c"/>
        <files mask="arm_mat_init_q31.c"/>
        <files mask="arm_mat_inverse_f32.c"/>
        <files mask="arm_mat_inverse_f64.c"/>
        <files mask="arm_mat_ldlt_f32.c"/>
        <files mask="arm_mat_ldlt_f64.c"/>
        <files mask="arm_mat_mult_f32.c"/>
        <files mask="arm_mat_mult_f64.c"/>
        <files mask="arm_mat_mult_fast_q15.c"/>
        <files mask="arm_mat_mult_fast_q31.c"/>
        <files mask="arm_mat_mult_opt_q31.c"/>
        <files mask="arm_mat_mult_q15.c"/>
        <files mask="arm_mat_mult_q31.c"/>
        <files mask="arm_mat_mult_q7.c"/>
        <files mask="arm_mat_qr_f32.c"/>
        <files mask="arm_mat_qr_f64.c"/>
        <files mask="arm_mat_scale_f32.c"/>
        <files mask="arm_mat_scale_q15.c"/>
        <files mask="arm_mat_scale_q31.c"/>
        <files mask="arm_mat_solve_lower_triangular_f32.c"/>
        <files mask="arm_mat_solve_lower_triangular_f64.c"/>
        <files mask="arm_mat_solve_upper_triangular_f32.c"/>
        <files mask="arm_mat_solve_upper_triangular_f64.c"/>
        <files mask="arm_mat_sub_f32.c"/>
        <files mask="arm_mat_sub_f64.c"/>
        <files mask="arm_mat_sub_q15.c"/>
        <files mask="arm_mat_sub_q31.c"/>
        <files mask="arm_mat_trans_f32.c"/>
        <files mask="arm_mat_trans_f64.c"/>
        <files mask="arm_mat_trans_q15.c"/>
        <files mask="arm_mat_trans_q31.c"/>
        <files mask="arm_mat_trans_q7.c"/>
        <files mask="arm_mat_vec_mult_f32.c"/>
        <files mask="arm_mat_vec_mult_q15.c"/>
        <files mask="arm_mat_vec_mult_q31.c"/>
        <files mask="arm_mat_vec_mult_q7.c"/>
        <files mask="arm_householder_f16.c"/>
        <files mask="arm_mat_add_f16.c"/>
        <files mask="arm_mat_cholesky_f16.c"/>
        <files mask="arm_mat_cmplx_mult_f16.c"/>
        <files mask="arm_mat_cmplx_trans_f16.c"/>
        <files mask="arm_mat_init_f16.c"/>
        <files mask="arm_mat_inverse_f16.c"/>
        <files mask="arm_mat_qr_f16.c"/>
        <files mask="arm_mat_mult_f16.c"/>
        <files mask="arm_mat_scale_f16.c"/>
        <files mask="arm_mat_solve_lower_triangular_f16.c"/>
        <files mask="arm_mat_solve_upper_triangular_f16.c"/>
        <files mask="arm_mat_sub_f16.c"/>
        <files mask="arm_mat_trans_f16.c"/>
        <files mask="arm_mat_vec_mult_f16.c"/>
      </source>
      <source relative_path="Source/QuaternionMathFunctions" type="src">
        <files mask="QuaternionMathFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/QuaternionMathFunctions" type="src">
        <files mask="arm_quaternion2rotation_f32.c"/>
        <files mask="arm_quaternion_conjugate_f32.c"/>
        <files mask="arm_quaternion_inverse_f32.c"/>
        <files mask="arm_quaternion_normalize_f32.c"/>
        <files mask="arm_quaternion_norm_f32.c"/>
        <files mask="arm_quaternion_product_f32.c"/>
        <files mask="arm_quaternion_product_single_f32.c"/>
        <files mask="arm_rotation2quaternion_f32.c"/>
      </source>
      <source relative_path="Source/SVMFunctions" type="src">
        <files mask="SVMFunctions.c"/>
        <files mask="SVMFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/SVMFunctions" type="src">
        <files mask="arm_svm_linear_init_f32.c"/>
        <files mask="arm_svm_linear_predict_f32.c"/>
        <files mask="arm_svm_polynomial_init_f32.c"/>
        <files mask="arm_svm_polynomial_predict_f32.c"/>
        <files mask="arm_svm_rbf_init_f32.c"/>
        <files mask="arm_svm_rbf_predict_f32.c"/>
        <files mask="arm_svm_sigmoid_init_f32.c"/>
        <files mask="arm_svm_sigmoid_predict_f32.c"/>
        <files mask="arm_svm_linear_init_f16.c"/>
        <files mask="arm_svm_linear_predict_f16.c"/>
        <files mask="arm_svm_polynomial_init_f16.c"/>
        <files mask="arm_svm_polynomial_predict_f16.c"/>
        <files mask="arm_svm_rbf_init_f16.c"/>
        <files mask="arm_svm_rbf_predict_f16.c"/>
        <files mask="arm_svm_sigmoid_init_f16.c"/>
        <files mask="arm_svm_sigmoid_predict_f16.c"/>
      </source>
      <source relative_path="Source/StatisticsFunctions" type="src">
        <files mask="StatisticsFunctions.c"/>
        <files mask="StatisticsFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/StatisticsFunctions" type="src">
        <files mask="arm_absmax_f32.c"/>
        <files mask="arm_absmax_f64.c"/>
        <files mask="arm_absmax_no_idx_f32.c"/>
        <files mask="arm_absmax_no_idx_f64.c"/>
        <files mask="arm_absmax_no_idx_q15.c"/>
        <files mask="arm_absmax_no_idx_q31.c"/>
        <files mask="arm_absmax_no_idx_q7.c"/>
        <files mask="arm_absmax_q15.c"/>
        <files mask="arm_absmax_q31.c"/>
        <files mask="arm_absmax_q7.c"/>
        <files mask="arm_absmin_f32.c"/>
        <files mask="arm_absmin_f64.c"/>
        <files mask="arm_absmin_no_idx_f32.c"/>
        <files mask="arm_absmin_no_idx_f64.c"/>
        <files mask="arm_absmin_no_idx_q15.c"/>
        <files mask="arm_absmin_no_idx_q31.c"/>
        <files mask="arm_absmin_no_idx_q7.c"/>
        <files mask="arm_absmin_q15.c"/>
        <files mask="arm_absmin_q31.c"/>
        <files mask="arm_absmin_q7.c"/>
        <files mask="arm_accumulate_f32.c"/>
        <files mask="arm_accumulate_f64.c"/>
        <files mask="arm_entropy_f32.c"/>
        <files mask="arm_entropy_f64.c"/>
        <files mask="arm_kullback_leibler_f32.c"/>
        <files mask="arm_kullback_leibler_f64.c"/>
        <files mask="arm_logsumexp_dot_prod_f32.c"/>
        <files mask="arm_logsumexp_f32.c"/>
        <files mask="arm_max_f32.c"/>
        <files mask="arm_max_f64.c"/>
        <files mask="arm_max_no_idx_f32.c"/>
        <files mask="arm_max_no_idx_f64.c"/>
        <files mask="arm_max_no_idx_q15.c"/>
        <files mask="arm_max_no_idx_q31.c"/>
        <files mask="arm_max_no_idx_q7.c"/>
        <files mask="arm_max_q15.c"/>
        <files mask="arm_max_q31.c"/>
        <files mask="arm_max_q7.c"/>
        <files mask="arm_mean_f32.c"/>
        <files mask="arm_mean_f64.c"/>
        <files mask="arm_mean_q15.c"/>
        <files mask="arm_mean_q31.c"/>
        <files mask="arm_mean_q7.c"/>
        <files mask="arm_min_f32.c"/>
        <files mask="arm_min_f64.c"/>
        <files mask="arm_min_no_idx_f32.c"/>
        <files mask="arm_min_no_idx_f64.c"/>
        <files mask="arm_min_no_idx_q15.c"/>
        <files mask="arm_min_no_idx_q31.c"/>
        <files mask="arm_min_no_idx_q7.c"/>
        <files mask="arm_min_q15.c"/>
        <files mask="arm_min_q31.c"/>
        <files mask="arm_min_q7.c"/>
        <files mask="arm_mse_f32.c"/>
        <files mask="arm_mse_f64.c"/>
        <files mask="arm_mse_q15.c"/>
        <files mask="arm_mse_q31.c"/>
        <files mask="arm_mse_q7.c"/>
        <files mask="arm_power_f32.c"/>
        <files mask="arm_power_f64.c"/>
        <files mask="arm_power_q15.c"/>
        <files mask="arm_power_q31.c"/>
        <files mask="arm_power_q7.c"/>
        <files mask="arm_rms_f32.c"/>
        <files mask="arm_rms_q15.c"/>
        <files mask="arm_rms_q31.c"/>
        <files mask="arm_std_f32.c"/>
        <files mask="arm_std_f64.c"/>
        <files mask="arm_std_q15.c"/>
        <files mask="arm_std_q31.c"/>
        <files mask="arm_var_f32.c"/>
        <files mask="arm_var_f64.c"/>
        <files mask="arm_var_q15.c"/>
        <files mask="arm_var_q31.c"/>
        <files mask="arm_absmax_f16.c"/>
        <files mask="arm_absmax_no_idx_f16.c"/>
        <files mask="arm_absmin_f16.c"/>
        <files mask="arm_absmin_no_idx_f16.c"/>
        <files mask="arm_accumulate_f16.c"/>
        <files mask="arm_entropy_f16.c"/>
        <files mask="arm_kullback_leibler_f16.c"/>
        <files mask="arm_logsumexp_dot_prod_f16.c"/>
        <files mask="arm_logsumexp_f16.c"/>
        <files mask="arm_max_f16.c"/>
        <files mask="arm_max_no_idx_f16.c"/>
        <files mask="arm_mean_f16.c"/>
        <files mask="arm_min_f16.c"/>
        <files mask="arm_min_no_idx_f16.c"/>
        <files mask="arm_mse_f16.c"/>
        <files mask="arm_power_f16.c"/>
        <files mask="arm_rms_f16.c"/>
        <files mask="arm_std_f16.c"/>
        <files mask="arm_var_f16.c"/>
      </source>
      <source relative_path="Source/SupportFunctions" type="src">
        <files mask="SupportFunctions.c"/>
        <files mask="SupportFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/SupportFunctions" type="src">
        <files mask="arm_barycenter_f32.c"/>
        <files mask="arm_bitonic_sort_f32.c"/>
        <files mask="arm_bubble_sort_f32.c"/>
        <files mask="arm_copy_f32.c"/>
        <files mask="arm_copy_f64.c"/>
        <files mask="arm_copy_q15.c"/>
        <files mask="arm_copy_q31.c"/>
        <files mask="arm_copy_q7.c"/>
        <files mask="arm_f64_to_float.c"/>
        <files mask="arm_f64_to_q31.c"/>
        <files mask="arm_f64_to_q15.c"/>
        <files mask="arm_f64_to_q7.c"/>
        <files mask="arm_fill_f32.c"/>
        <files mask="arm_fill_f64.c"/>
        <files mask="arm_fill_q15.c"/>
        <files mask="arm_fill_q31.c"/>
        <files mask="arm_fill_q7.c"/>
        <files mask="arm_float_to_f64.c"/>
        <files mask="arm_float_to_q15.c"/>
        <files mask="arm_float_to_q31.c"/>
        <files mask="arm_float_to_q7.c"/>
        <files mask="arm_heap_sort_f32.c"/>
        <files mask="arm_insertion_sort_f32.c"/>
        <files mask="arm_merge_sort_f32.c"/>
        <files mask="arm_merge_sort_init_f32.c"/>
        <files mask="arm_q15_to_f64.c"/>
        <files mask="arm_q15_to_float.c"/>
        <files mask="arm_q15_to_q31.c"/>
        <files mask="arm_q15_to_q7.c"/>
        <files mask="arm_q31_to_f64.c"/>
        <files mask="arm_q31_to_float.c"/>
        <files mask="arm_q31_to_q15.c"/>
        <files mask="arm_q31_to_q7.c"/>
        <files mask="arm_q7_to_f64.c"/>
        <files mask="arm_q7_to_float.c"/>
        <files mask="arm_q7_to_q15.c"/>
        <files mask="arm_q7_to_q31.c"/>
        <files mask="arm_quick_sort_f32.c"/>
        <files mask="arm_selection_sort_f32.c"/>
        <files mask="arm_sort_f32.c"/>
        <files mask="arm_sort_init_f32.c"/>
        <files mask="arm_weighted_average_f32.c"/>
        <files mask="arm_barycenter_f16.c"/>
        <files mask="arm_copy_f16.c"/>
        <files mask="arm_f16_to_float.c"/>
        <files mask="arm_f16_to_q15.c"/>
        <files mask="arm_f16_to_f64.c"/>
        <files mask="arm_f64_to_f16.c"/>
        <files mask="arm_fill_f16.c"/>
        <files mask="arm_float_to_f16.c"/>
        <files mask="arm_q15_to_f16.c"/>
        <files mask="arm_weighted_average_f16.c"/>
      </source>
      <source relative_path="Source/TransformFunctions" type="src">
        <files mask="TransformFunctions.c"/>
        <files mask="TransformFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/TransformFunctions" type="src">
        <files mask="arm_bitreversal.c"/>
        <files mask="arm_bitreversal2.c"/>
        <files mask="arm_cfft_f32.c"/>
        <files mask="arm_cfft_f64.c"/>
        <files mask="arm_cfft_init_f32.c"/>
        <files mask="arm_cfft_init_f64.c"/>
        <files mask="arm_cfft_init_q15.c"/>
        <files mask="arm_cfft_init_q31.c"/>
        <files mask="arm_cfft_q15.c"/>
        <files mask="arm_cfft_q31.c"/>
        <files mask="arm_cfft_radix2_f32.c"/>
        <files mask="arm_cfft_radix2_init_f32.c"/>
        <files mask="arm_cfft_radix2_init_q15.c"/>
        <files mask="arm_cfft_radix2_init_q31.c"/>
        <files mask="arm_cfft_radix2_q15.c"/>
        <files mask="arm_cfft_radix2_q31.c"/>
        <files mask="arm_cfft_radix4_f32.c"/>
        <files mask="arm_cfft_radix4_init_f32.c"/>
        <files mask="arm_cfft_radix4_init_q15.c"/>
        <files mask="arm_cfft_radix4_init_q31.c"/>
        <files mask="arm_cfft_radix4_q15.c"/>
        <files mask="arm_cfft_radix4_q31.c"/>
        <files mask="arm_cfft_radix8_f32.c"/>
        <files mask="arm_dct4_f32.c"/>
        <files mask="arm_dct4_init_f32.c"/>
        <files mask="arm_dct4_init_q15.c"/>
        <files mask="arm_dct4_init_q31.c"/>
        <files mask="arm_dct4_q15.c"/>
        <files mask="arm_dct4_q31.c"/>
        <files mask="arm_mfcc_f32.c"/>
        <files mask="arm_mfcc_init_f32.c"/>
        <files mask="arm_mfcc_init_q15.c"/>
        <files mask="arm_mfcc_init_q31.c"/>
        <files mask="arm_mfcc_q15.c"/>
        <files mask="arm_mfcc_q31.c"/>
        <files mask="arm_rfft_f32.c"/>
        <files mask="arm_rfft_fast_f32.c"/>
        <files mask="arm_rfft_fast_f64.c"/>
        <files mask="arm_rfft_fast_init_f32.c"/>
        <files mask="arm_rfft_fast_init_f64.c"/>
        <files mask="arm_rfft_init_f32.c"/>
        <files mask="arm_rfft_init_q15.c"/>
        <files mask="arm_rfft_init_q31.c"/>
        <files mask="arm_rfft_q15.c"/>
        <files mask="arm_rfft_q31.c"/>
        <files mask="arm_bitreversal_f16.c"/>
        <files mask="arm_cfft_f16.c"/>
        <files mask="arm_cfft_init_f16.c"/>
        <files mask="arm_cfft_radix2_f16.c"/>
        <files mask="arm_cfft_radix2_init_f16.c"/>
        <files mask="arm_cfft_radix4_f16.c"/>
        <files mask="arm_cfft_radix8_f16.c"/>
        <files mask="arm_mfcc_f16.c"/>
        <files mask="arm_cfft_radix4_init_f16.c"/>
        <files mask="arm_mfcc_init_f16.c"/>
        <files mask="arm_rfft_fast_f16.c"/>
        <files mask="arm_rfft_fast_init_f16.c"/>
      </source>
      <source relative_path="Source/WindowFunctions" type="src">
        <files mask="WindowFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/WindowFunctions" type="src">
        <files mask="arm_bartlett_f32.c"/>
        <files mask="arm_bartlett_f64.c"/>
        <files mask="arm_blackman_harris_92db_f32.c"/>
        <files mask="arm_blackman_harris_92db_f64.c"/>
        <files mask="arm_hamming_f32.c"/>
        <files mask="arm_hamming_f64.c"/>
        <files mask="arm_hanning_f32.c"/>
        <files mask="arm_hanning_f64.c"/>
        <files mask="arm_hft116d_f32.c"/>
        <files mask="arm_hft116d_f64.c"/>
        <files mask="arm_hft144d_f32.c"/>
        <files mask="arm_hft144d_f64.c"/>
        <files mask="arm_hft169d_f32.c"/>
        <files mask="arm_hft169d_f64.c"/>
        <files mask="arm_hft196d_f32.c"/>
        <files mask="arm_hft196d_f64.c"/>
        <files mask="arm_hft223d_f32.c"/>
        <files mask="arm_hft223d_f64.c"/>
        <files mask="arm_hft248d_f32.c"/>
        <files mask="arm_hft248d_f64.c"/>
        <files mask="arm_hft90d_f32.c"/>
        <files mask="arm_hft90d_f64.c"/>
        <files mask="arm_hft95_f32.c"/>
        <files mask="arm_hft95_f64.c"/>
        <files mask="arm_nuttall3a_f32.c"/>
        <files mask="arm_nuttall3a_f64.c"/>
        <files mask="arm_nuttall3b_f32.c"/>
        <files mask="arm_nuttall3b_f64.c"/>
        <files mask="arm_nuttall3_f32.c"/>
        <files mask="arm_nuttall3_f64.c"/>
        <files mask="arm_nuttall4a_f32.c"/>
        <files mask="arm_nuttall4a_f64.c"/>
        <files mask="arm_nuttall4b_f32.c"/>
        <files mask="arm_nuttall4b_f64.c"/>
        <files mask="arm_nuttall4c_f32.c"/>
        <files mask="arm_nuttall4c_f64.c"/>
        <files mask="arm_nuttall4_f32.c"/>
        <files mask="arm_nuttall4_f64.c"/>
        <files mask="arm_welch_f32.c"/>
        <files mask="arm_welch_f64.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_DSP_Source.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="PrivateInclude" type="c_include"/>
        <include_path relative_path="Source/DistanceFunctions" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
        <include_path relative_path="PrivateInclude" type="asm_include"/>
        <include_path relative_path="Source/DistanceFunctions" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Device_API_OSTick.MIMXRT1176" name="CMSIS_Device_API_OSTick" brief="Device interrupt controller interface" version="1.0.2" full_name="CMSIS Device API OSTick" category="Device/OS Tick" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/RTOS2/Include" project_base_path="CMSIS/RTOS2/Include">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="os_tick.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Device_API_OSTick.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Device_API_RTOS2.MIMXRT1176" name="CMSIS_Device_API_RTOS2" brief="CMSIS-RTOS API for Cortex-M, SC000, and SC300" version="2.3.0" full_name="CMSIS Device API RTOS2" category="CMSIS/RTOS2" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/RTOS2/Include" project_base_path="CMSIS/RTOS2/Include">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="cmsis_os2.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Device_API_RTOS2.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.CAN.MIMXRT1176" name="CMSIS_Driver_CAN" brief="Access to #include Driver_CAN.h file for custom implementation" version="1.3.0" full_name="CMSIS Driver CAN" category="CMSIS Driver/CAN" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_CAN.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_CAN.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Ethernet.MIMXRT1176" name="CMSIS_Driver_Ethernet_Common" brief="Access to #include Driver_ETH.h file for custom implementation" version="2.2.0" full_name="CMSIS Driver Ethernet Common" category="CMSIS Driver/Ethernet" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_Common.h"/>
        <files mask="Driver_ETH.h"/>
        <files mask="Driver_ETH_MAC.h"/>
        <files mask="Driver_ETH_PHY.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_Ethernet.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Ethernet_MAC.MIMXRT1176" name="CMSIS_Driver_Ethernet_MAC" brief="Access to #include Driver_ETH_MAC.h file for custom implementation" version="2.2.0" full_name="CMSIS Driver Ethernet MAC" category="CMSIS Driver/Ethernet MAC" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_ETH.h"/>
        <files mask="Driver_Common.h"/>
        <files mask="Driver_ETH_MAC.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_Ethernet_MAC.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Ethernet_PHY.MIMXRT1176" name="CMSIS_Driver_Ethernet_PHY" brief="Access to #include Driver_ETH_PHY.h file for custom implementation" version="2.2.0" full_name="CMSIS Driver Ethernet PHY" category="CMSIS Driver/Ethernet PHY" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_ETH.h"/>
        <files mask="Driver_ETH_PHY.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_Ethernet_PHY.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Flash.MIMXRT1176" name="CMSIS_Driver_Flash" brief="Access to #include Driver_Flash.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver Flash" category="CMSIS Driver/Flash" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_Flash.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_Flash.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.GPIO.MIMXRT1176" name="CMSIS_Driver_GPIO" brief="Access to #include Driver_GPIO.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver GPIO" category="CMSIS Driver/GPIO" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="Include/GPIO" template="true" type="c_include">
        <files mask="Driver_GPIO.h"/>
      </source>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_Common.h"/>
      </source>
      <source relative_path="Include/GPIO" type="c_include">
        <files mask="Driver_GPIO.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_GPIO.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include/GPIO" type="c_include"/>
        <include_path relative_path="Include/GPIO" type="asm_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.I2C.MIMXRT1176" name="CMSIS_Driver_I2C" brief="Access to #include Driver_I2C.h file for custom implementation" version="2.4.0" full_name="CMSIS Driver I2C" category="CMSIS Driver/I2C" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_I2C.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_I2C.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.MCI.MIMXRT1176" name="CMSIS_Driver_MCI" brief="Access to #include Driver_MCI.h file for custom implementation" version="2.4.0" full_name="CMSIS Driver MCI" category="CMSIS Driver/MCI" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_MCI.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_MCI.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.NAND.MIMXRT1176" name="CMSIS_Driver_NAND" brief="Access to #include Driver_NAND.h file for custom implementation" version="2.4.0" full_name="CMSIS Driver NAND" category="CMSIS Driver/NAND" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_NAND.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_NAND.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.SAI.MIMXRT1176" name="CMSIS_Driver_SAI" brief="Access to #include Driver_SAI.h file for custom implementation" version="1.2.0" full_name="CMSIS Driver SAI" category="CMSIS Driver/SAI" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_SAI.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_SAI.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.SPI.MIMXRT1176" name="CMSIS_Driver_SPI" brief="Access to #include Driver_SPI.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver SPI" category="CMSIS Driver/SPI" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_SPI.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_SPI.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.USART.MIMXRT1176" name="CMSIS_Driver_USART" brief="Access to #include Driver_USART.h file for custom implementation" version="2.4.0" full_name="CMSIS Driver USART" category="CMSIS Driver/USART" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_USART.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_USART.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.USB_Device.MIMXRT1176" name="CMSIS_Driver_USB_Device" brief="Access to #include Driver_USBD.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver USB Device" category="CMSIS Driver/USB Device" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_USBD.h"/>
        <files mask="Driver_USB.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_USB_Device.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.USB_Host.MIMXRT1176" name="CMSIS_Driver_USB_Host" brief="Access to #include Driver_USBH.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver USB Host" category="CMSIS Driver/USB Host" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_USBH.h"/>
        <files mask="Driver_USB.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_USB_Host.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.WiFi.MIMXRT1176" name="CMSIS_Driver_WiFi" brief="Access to #include Driver_WiFi.h file" version="1.1.0" full_name="CMSIS Driver WiFi" category="CMSIS Driver/WiFi" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_WiFi.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_WiFi.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_NN_Source.MIMXRT1176" name="CMSIS_NN_Library_Source" brief="CMSIS-NN Library" version="6.0.0" full_name="CMSIS NN Library Source" category="CMSIS/NN" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/NN" project_base_path="CMSIS/NN">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="README.md" hidden="true"/>
      </source>
      <source relative_path="Include" type="c_include">
        <files mask="arm_nnfunctions.h"/>
        <files mask="arm_nnsupportfunctions.h"/>
        <files mask="arm_nn_math_types.h"/>
        <files mask="arm_nn_tables.h"/>
        <files mask="arm_nn_types.h"/>
      </source>
      <source relative_path="Include/Internal" type="c_include">
        <files mask="arm_nn_compiler.h"/>
      </source>
      <source relative_path="Source/ActivationFunctions" type="src">
        <files mask="arm_nn_activation_s16.c"/>
        <files mask="arm_relu6_s8.c"/>
        <files mask="arm_relu_q15.c"/>
        <files mask="arm_relu_q7.c"/>
      </source>
      <source relative_path="Source/BasicMathFunctions" type="src">
        <files mask="arm_elementwise_add_s16.c"/>
        <files mask="arm_elementwise_add_s8.c"/>
        <files mask="arm_elementwise_mul_acc_s16.c"/>
        <files mask="arm_elementwise_mul_s16.c"/>
        <files mask="arm_elementwise_mul_s16_s8.c"/>
        <files mask="arm_elementwise_mul_s8.c"/>
        <files mask="arm_elementwise_mul_s16_batch_offset.c"/>
      </source>
      <source relative_path="Source/ConcatenationFunctions" type="src">
        <files mask="arm_concatenation_s8_w.c"/>
        <files mask="arm_concatenation_s8_x.c"/>
        <files mask="arm_concatenation_s8_y.c"/>
        <files mask="arm_concatenation_s8_z.c"/>
      </source>
      <source relative_path="Source/ConvolutionFunctions" type="src">
        <files mask="arm_convolve_1x1_s4.c"/>
        <files mask="arm_convolve_1x1_s4_fast.c"/>
        <files mask="arm_convolve_1x1_s8.c"/>
        <files mask="arm_convolve_1x1_s8_fast.c"/>
        <files mask="arm_convolve_1_x_n_s4.c"/>
        <files mask="arm_convolve_1_x_n_s8.c"/>
        <files mask="arm_convolve_get_buffer_sizes_s16.c"/>
        <files mask="arm_convolve_get_buffer_sizes_s4.c"/>
        <files mask="arm_convolve_get_buffer_sizes_s8.c"/>
        <files mask="arm_convolve_s16.c"/>
        <files mask="arm_convolve_s4.c"/>
        <files mask="arm_convolve_s8.c"/>
        <files mask="arm_convolve_wrapper_s16.c"/>
        <files mask="arm_convolve_wrapper_s4.c"/>
        <files mask="arm_convolve_wrapper_s8.c"/>
        <files mask="arm_depthwise_conv_3x3_s8.c"/>
        <files mask="arm_depthwise_conv_fast_s16.c"/>
        <files mask="arm_depthwise_conv_get_buffer_sizes_s16.c"/>
        <files mask="arm_depthwise_conv_get_buffer_sizes_s4.c"/>
        <files mask="arm_depthwise_conv_get_buffer_sizes_s8.c"/>
        <files mask="arm_depthwise_conv_s16.c"/>
        <files mask="arm_depthwise_conv_s4.c"/>
        <files mask="arm_depthwise_conv_s4_opt.c"/>
        <files mask="arm_depthwise_conv_s8.c"/>
        <files mask="arm_depthwise_conv_s8_opt.c"/>
        <files mask="arm_depthwise_conv_wrapper_s16.c"/>
        <files mask="arm_depthwise_conv_wrapper_s4.c"/>
        <files mask="arm_depthwise_conv_wrapper_s8.c"/>
        <files mask="arm_nn_depthwise_conv_s8_core.c"/>
        <files mask="arm_nn_mat_mult_kernel_row_offset_s8_s16.c"/>
        <files mask="arm_nn_mat_mult_kernel_s4_s16.c"/>
        <files mask="arm_nn_mat_mult_kernel_s8_s16.c"/>
        <files mask="arm_nn_mat_mult_kernel_s16.c"/>
        <files mask="arm_nn_mat_mult_s8.c"/>
        <files mask="arm_transpose_conv_get_buffer_sizes_s8.c"/>
        <files mask="arm_transpose_conv_s8.c"/>
      </source>
      <source relative_path="Source/FullyConnectedFunctions" type="src">
        <files mask="arm_fully_connected_get_buffer_sizes_s16.c"/>
        <files mask="arm_fully_connected_get_buffer_sizes_s8.c"/>
        <files mask="arm_fully_connected_s16.c"/>
        <files mask="arm_fully_connected_s4.c"/>
        <files mask="arm_fully_connected_s8.c"/>
        <files mask="arm_vector_sum_s8.c"/>
        <files mask="arm_vector_sum_s8_s64.c"/>
      </source>
      <source relative_path="Source/LSTMFunctions" type="src">
        <files mask="arm_lstm_unidirectional_s16.c"/>
        <files mask="arm_lstm_unidirectional_s8.c"/>
      </source>
      <source relative_path="Source/NNSupportFunctions" type="src">
        <files mask="arm_nntables.c"/>
        <files mask="arm_nn_depthwise_conv_nt_t_padded_s8.c"/>
        <files mask="arm_nn_depthwise_conv_nt_t_s16.c"/>
        <files mask="arm_nn_depthwise_conv_nt_t_s4.c"/>
        <files mask="arm_nn_depthwise_conv_nt_t_s8.c"/>
        <files mask="arm_nn_lstm_calculate_gate_s16.c"/>
        <files mask="arm_nn_lstm_calculate_gate_s8_s16.c"/>
        <files mask="arm_nn_lstm_step_s16.c"/>
        <files mask="arm_nn_lstm_step_s8.c"/>
        <files mask="arm_nn_mat_mult_nt_t_s16.c"/>
        <files mask="arm_nn_mat_mult_nt_t_s4.c"/>
        <files mask="arm_nn_mat_mult_nt_t_s8.c"/>
        <files mask="arm_nn_mat_mult_nt_t_s8_s32.c"/>
        <files mask="arm_nn_mat_mul_core_1x_s4.c"/>
        <files mask="arm_nn_mat_mul_core_1x_s8.c"/>
        <files mask="arm_nn_mat_mul_core_4x_s8.c"/>
        <files mask="arm_nn_vec_mat_mul_result_acc_s16.c"/>
        <files mask="arm_nn_vec_mat_mul_result_acc_s8_s16.c"/>
        <files mask="arm_nn_vec_mat_mult_t_s16.c"/>
        <files mask="arm_nn_vec_mat_mult_t_s4.c"/>
        <files mask="arm_nn_vec_mat_mult_t_s8.c"/>
        <files mask="arm_nn_vec_mat_mult_t_svdf_s8.c"/>
        <files mask="arm_q7_to_q15_with_offset.c"/>
        <files mask="arm_s8_to_s16_unordered_with_offset.c"/>
      </source>
      <source relative_path="Source/PoolingFunctions" type="src">
        <files mask="arm_avgpool_get_buffer_sizes_s16.c"/>
        <files mask="arm_avgpool_get_buffer_sizes_s8.c"/>
        <files mask="arm_avgpool_s16.c"/>
        <files mask="arm_avgpool_s8.c"/>
        <files mask="arm_max_pool_s16.c"/>
        <files mask="arm_max_pool_s8.c"/>
      </source>
      <source relative_path="Source/ReshapeFunctions" type="src">
        <files mask="arm_reshape_s8.c"/>
      </source>
      <source relative_path="Source/SoftmaxFunctions" type="src">
        <files mask="arm_nn_softmax_common_s8.c"/>
        <files mask="arm_softmax_s16.c"/>
        <files mask="arm_softmax_s8.c"/>
        <files mask="arm_softmax_s8_s16.c"/>
        <files mask="arm_softmax_u8.c"/>
      </source>
      <source relative_path="Source/SVDFunctions" type="src">
        <files mask="arm_svdf_get_buffer_sizes_s8.c"/>
        <files mask="arm_svdf_s8.c"/>
        <files mask="arm_svdf_state_s16_s8.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_NN_Source.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="device.RTE.MIMXRT1176" name="RTE_Device" brief="Rte_device" version="1.0.0" full_name="Rte_device" category="Device/SDK Project Template" user_visible="true" type="project_template" package_base_path="devices/MIMXRT1176/template" project_base_path="board">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="./" config="true" type="c_include">
        <files mask="RTE_Device.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="device_RTE.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <!--<component id="container.CMSIS_all_files.MIMXRT1176" name="MIMXRT1176" version="1.0.0" package_base_path="CMSIS" project_base_path="./">
  <source relative_path="Driver/Include" type="c_include">
    <files mask="Driver_CAN.h"/>
    <files mask="Driver_Common.h"/>
    <files mask="Driver_ETH.h"/>
    <files mask="Driver_ETH_MAC.h"/>
    <files mask="Driver_ETH_PHY.h"/>
    <files mask="Driver_Flash.h"/>
    <files mask="Driver_I2C.h"/>
    <files mask="Driver_MCI.h"/>
    <files mask="Driver_NAND.h"/>
    <files mask="Driver_SAI.h"/>
    <files mask="Driver_SPI.h"/>
    <files mask="Driver_Storage.h"/>
    <files mask="Driver_USART.h"/>
    <files mask="Driver_USB.h"/>
    <files mask="Driver_USBD.h"/>
    <files mask="Driver_USBH.h"/>
    <files mask="Driver_WiFi.h"/>
  </source>
  <source relative_path="Driver/Include/GPIO" type="c_include">
    <files mask="Driver_GPIO.h"/>
  </source>
  <source relative_path="Driver/VIO/Include" type="c_include">
    <files mask="cmsis_vio.h"/>
  </source>
  <source relative_path="Driver/VIO/Source" type="src">
    <files mask="vio.c"/>
    <files mask="vio_memory.c"/>
  </source>
  <source relative_path="Driver/VIO" type="other">
    <files mask="cmsis_vio.scvd"/>
  </source>
  <source relative_path="Core/Include" type="c_include">
    <files mask="cmsis_clang.h"/>
  </source>
  <source relative_path="Core/Include/m-profile" type="c_include">
    <files mask="cmsis_clang_m.h"/>
  </source>
</component>-->
    <component id="platform.utilities.notifier.MIMXRT1176" name="notifier" brief="Utility notifier" version="1.0.0" full_name="Utility notifier" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT1176/utilities" project_base_path="utilities/utilities">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_notifier.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_notifier.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_notifier.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.utilities.misc_utilities.MIMXRT1176" name="misc_utilities" brief="Utilities which is needed for particular toolchain like the SBRK function required to address limitation between HEAP and STACK in GCC toolchain library." version="1.1.1" full_name="Utilities miscellaneous" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT1176/utilities" project_base_path="utilities">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="src">
        <files mask="fsl_syscall_stub.c"/>
        <files mask="fsl_sbrk.c"/>
      </source>
      <source toolchain="armgcc mcuxpresso mdk" relative_path="./" type="asm_include" device_cores="cm4_MIMXRT1176xxxxx cm7_MIMXRT1176xxxxx">
        <files mask="fsl_memcpy.S"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utilities_misc_utilities.MIMXRT1176.cmake" hidden="true"/>
      </source>
    </component>
    <component id="utility.incbin.MIMXRT1176" name="incbin" brief="Used to include slave core binary into master core binary." version="1.0.0" full_name="utility incbin" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT1176/utilities/incbin" project_base_path="utilities">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source toolchain="armgcc mdk" relative_path="./" type="asm_include">
        <files mask="fsl_incbin.S"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_incbin.MIMXRT1176.cmake" hidden="true"/>
      </source>
    </component>
    <component id="utility.debug_console_template_config.MIMXRT1176" name="debug_console_template_config" brief="Utility debug_console Template Config" version="1.0.0" full_name="Utility debug_console Template Config" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT1176/utilities" project_base_path="utilities">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="debug_console/config" config="true" type="c_include">
        <files mask="fsl_debug_console_conf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_debug_console_template_config.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="debug_console/config" type="c_include"/>
        <include_path relative_path="debug_console/config" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.sdio.template.MIMXRT1176" name="EdgeFast Bluetooth configuration template of SDIO" brief="Template configuration file to be edited by user." version="1.0.0" full_name="EdgeFast Bluetooth configuration template of SDIO" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="project_template" package_base_path="examples/_boards/evkbmimxrt1170/edgefast_bluetooth_examples/template" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
    </component>
    <component id="middleware.edgefast_bluetooth.low_power.MIMXRT1176" name="middleware.edgefast_bluetooth.low_power" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.low_power" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
    </component>
    <component id="middleware.edgefast_bluetooth.host_low_power.MIMXRT1176" name="middleware.edgefast_bluetooth.host_low_power" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.host_low_power" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
    </component>
    <component id="middleware.edgefast_bluetooth.storage.MIMXRT1176" name="middleware.edgefast_bluetooth.storage" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.storage" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
    </component>
    <component id="middleware.edgefast_bluetooth_flash_adapter_rt1170evkb.MIMXRT1176" name="middleware.edgefast_bluetooth_flash_adapter_rt1170evkb" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth_flash_adapter_rt1170evkb" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
    </component>
    <component id="middleware.edgefast_bluetooth_flash_adapter_rt595evk.MIMXRT1176" name="middleware.edgefast_bluetooth_flash_adapter_rt595evk" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth_flash_adapter_rt595evk" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
    </component>
    <component id="middleware.edgefast_bluetooth_flash_adapter_rt685evk.MIMXRT1176" name="middleware.edgefast_bluetooth_flash_adapter_rt685evk" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth_flash_adapter_rt685evk" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
    </component>
    <component id="middleware.edgefast_bluetooth_mflash_offchip.MIMXRT1176" name="middleware.edgefast_bluetooth_mflash_offchip" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth_mflash_offchip" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
    </component>
    <component id="middleware.edgefast_bluetooth_mflash_onchip_fmu.MIMXRT1176" name="middleware.edgefast_bluetooth_mflash_onchip_fmu" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth_mflash_onchip_fmu" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
    </component>
    <component id="middleware.edgefast_bluetooth.codec.MIMXRT1176" name="middleware.edgefast_bluetooth.codec" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.codec" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
    </component>
    <component id="middleware.edgefast_bluetooth.codec_wm8960.MIMXRT1176" name="middleware.edgefast_bluetooth.codec_wm8960" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.codec_wm8960" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
    </component>
    <component id="middleware.edgefast_bluetooth.codec_wm8962.MIMXRT1176" name="middleware.edgefast_bluetooth.codec_wm8962" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.codec_wm8962" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
    </component>
    <component id="middleware.edgefast_bluetooth.codec_wm8904.MIMXRT1176" name="middleware.edgefast_bluetooth.codec_wm8904" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.codec_wm8904" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
    </component>
    <component id="middleware.edgefast_bluetooth.codec_cs42448.MIMXRT1176" name="middleware.edgefast_bluetooth.codec_cs42448" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.codec_cs42448" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
    </component>
    <component id="middleware.edgefast_bluetooth.codec_dialog7212.MIMXRT1176" name="middleware.edgefast_bluetooth.codec_dialog7212" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.codec_dialog7212" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
    </component>
    <component id="middleware.edgefast_bluetooth.codec_sai_edma.MIMXRT1176" name="middleware.edgefast_bluetooth.codec_sai_edma" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.codec_sai_edma" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
    </component>
    <component id="middleware.edgefast_bluetooth.codec_i2s_dma.MIMXRT1176" name="middleware.edgefast_bluetooth.codec_i2s_dma" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.codec_i2s_dma" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
    </component>
    <component id="middleware.freertos.coremqtt.MIMXRT1176" name="coremqtt" brief="Client implementation of the MQTT 3.1.1 specification for embedded devices." version="2.1.1" full_name="coreMQTT" category="FreeRTOS/coreMQTT" user_visible="true" type="middleware" package_base_path="rtos/freertos/coremqtt" project_base_path="freertos/coremqtt">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="core_mqtt.c"/>
        <files mask="core_mqtt_serializer.c"/>
        <files mask="core_mqtt_state.c"/>
      </source>
      <source relative_path="source/include" type="c_include">
        <files mask="core_mqtt.h"/>
        <files mask="core_mqtt_config_defaults.h"/>
        <files mask="core_mqtt_default_logging.h"/>
        <files mask="core_mqtt_serializer.h"/>
        <files mask="core_mqtt_state.h"/>
      </source>
      <source relative_path="source/interface" type="c_include">
        <files mask="transport_interface.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos_coremqtt.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/include" type="c_include"/>
        <include_path relative_path="source/interface" type="c_include"/>
        <include_path relative_path="source/include" type="asm_include"/>
        <include_path relative_path="source/interface" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos.corejson.MIMXRT1176" name="corejson" brief="A parser strictly enforcing the ECMA-404 JSON standard, suitable for microcontrollers." version="3.2.0" full_name="coreJSON" category="FreeRTOS/coreJSON" user_visible="true" type="middleware" package_base_path="rtos/freertos/corejson" project_base_path="freertos/corejson">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="core_json.c"/>
      </source>
      <source relative_path="source/include" type="c_include">
        <files mask="core_json.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos_corejson.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/include" type="c_include"/>
        <include_path relative_path="source/include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos.backoffalgorithm.MIMXRT1176" name="backoffalgorithm" brief="Algorithm for calculating exponential backoff with jitter for network retry attempts." version="1.3.0" full_name="backoffalgorithm" category="FreeRTOS/backoffAlgorithm" user_visible="true" type="middleware" package_base_path="rtos/freertos/backoffalgorithm" project_base_path="freertos/backoffalgorithm">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="backoff_algorithm.c"/>
      </source>
      <source relative_path="source/include" type="c_include">
        <files mask="backoff_algorithm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos_backoffalgorithm.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/include" type="c_include"/>
        <include_path relative_path="source/include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.cmsis_drivers.MIMXRT1176" name="CMSIS driver" brief="CMSIS driver" version="2.0.0" full_name="CMSIS driver" category="Board Support/SDK Project Template" user_visible="true" type="CMSIS_driver" package_base_path="components/cmsis_drivers" project_base_path="CMSIS_drivers">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
    </component>
    <component id="platform.drivers.common.MIMXRT1176" name="common" brief="common Driver" version="2.5.0" full_name="common Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_common.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_common.c"/>
      </source>
      <source relative_path="./" type="src" device_cores="cm4_MIMXRT1176xxxxx cm7_MIMXRT1176xxxxx">
        <files mask="fsl_common_arm.c"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm4_MIMXRT1176xxxxx cm7_MIMXRT1176xxxxx">
        <files mask="fsl_common_arm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_common.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.wifi_bt_config.template.MIMXRT1176" name="Wi-Fi configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="Wi-Fi configuration template" category="Wireless/NXP Wi-Fi" user_visible="false" type="project_template" package_base_path="components/wifi_bt_module/template" project_base_path="wifi/template">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="./" config="true" type="c_include">
        <files mask="wifi_bt_config.h"/>
      </source>
      <source relative_path="./" config="true" type="src">
        <files mask="wifi_bt_config.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_wifi_bt_config_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="../../../middleware/wifi_nxp" project_relative_path="./" type="c_include"/>
        <include_path relative_path="../../../middleware/wifi_nxp" project_relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.osa_free_rtos.MIMXRT1176" name="nxp wifi osa free_rtos" brief="NXP WLAN OSA" version="1.0.0" full_name="NXP WLAN OSA" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="port/osa" type="c_include">
        <files mask="osa_freertos.h"/>
      </source>
      <source relative_path="port/osa" type="src">
        <files mask="osa_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_osa_free_rtos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="incl/port/osa" type="c_include"/>
        <include_path relative_path="port/osa" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="incl" type="asm_include"/>
        <include_path relative_path="incl/port/osa" type="asm_include"/>
        <include_path relative_path="port/osa" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.osa_thread.MIMXRT1176" name="nxp wifi osa thread" brief="NXP WLAN OSA" version="1.0.0" full_name="NXP WLAN OSA" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="port/osa" type="c_include">
        <files mask="osa_threadx.h"/>
      </source>
      <source relative_path="port/osa" type="src">
        <files mask="osa_threadx.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_osa_thread.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="incl/port/osa" type="c_include"/>
        <include_path relative_path="port/osa" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="incl/port/osa" type="asm_include"/>
        <include_path relative_path="port/osa" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.firmware_download.MIMXRT1176" name="nxp_wireless_firmware_download" brief="NXP WLAN f/w dnld base" version="1.0.0" full_name="NXP WLAN f/w dnld base" category="Wireless/NXP Wi-Fi" user_visible="true" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="incl" type="c_include">
        <files mask="WIFI_IW416_BOARD_AW_AM457_CAL_DATA_EXT.h"/>
      </source>
      <source relative_path="wifidriver/incl" type="c_include">
        <files mask="mlan_main_defs.h"/>
      </source>
      <source relative_path="wifidriver" type="src">
        <files mask="sdio.c"/>
      </source>
      <source relative_path="wifidriver" type="c_include">
        <files mask="sdio.h"/>
      </source>
      <source relative_path="firmware_dnld" type="src">
        <files mask="firmware_dnld.c"/>
      </source>
      <source relative_path="firmware_dnld" type="c_include">
        <files mask="firmware_dnld.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_firmware_download.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="wifidriver" type="c_include"/>
        <include_path relative_path="wifidriver/incl" type="c_include"/>
        <include_path relative_path="firmware_dnld" type="c_include"/>
        <include_path relative_path="sdio_nxp_abs" type="c_include"/>
        <include_path relative_path="sdio_nxp_abs/incl" type="c_include"/>
        <include_path relative_path="fwdnld_intf_abs" type="c_include"/>
        <include_path relative_path="incl" type="asm_include"/>
        <include_path relative_path="wifidriver" type="asm_include"/>
        <include_path relative_path="wifidriver/incl" type="asm_include"/>
        <include_path relative_path="firmware_dnld" type="asm_include"/>
        <include_path relative_path="sdio_nxp_abs" type="asm_include"/>
        <include_path relative_path="sdio_nxp_abs/incl" type="asm_include"/>
        <include_path relative_path="fwdnld_intf_abs" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.net_thread.MIMXRT1176" name="nxp wifi osa thread" brief="NXP WLAN OSA" version="1.0.0" full_name="NXP WLAN OSA" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="incl/port/net" type="c_include">
        <files mask="wm_net.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_net_thread.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="incl/port/osa" type="c_include"/>
        <include_path relative_path="port/osa" type="c_include"/>
        <include_path relative_path="incl/port/net" type="c_include"/>
        <include_path relative_path="port/net/netxduo" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="incl/port/osa" type="asm_include"/>
        <include_path relative_path="port/osa" type="asm_include"/>
        <include_path relative_path="incl/port/net" type="asm_include"/>
        <include_path relative_path="port/net/netxduo" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.fwdnld_intf_abs.MIMXRT1176" name="wifi_nxp_fwdnld_intf_abs" brief="NXP Wi-Fi Interface Abstraction Layer" version="1.3.46" full_name="NXP Firmware Download abstraction layer" category="Wireless/NXP Wi-Fi" user_visible="true" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="fwdnld_intf_abs" type="src">
        <files mask="fwdnld_intf_abs.c"/>
      </source>
      <source relative_path="fwdnld_intf_abs" type="c_include">
        <files mask="fwdnld_intf_abs.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_fwdnld_intf_abs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="fwdnld_intf_abs" type="c_include"/>
        <include_path relative_path="fwdnld_intf_abs" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.wps.MIMXRT1176" name="wifi_nxp_wps" brief="Middlware Wi-Fi WPS" version="1.0.0" full_name="NXP Wi-Fi WPS" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
    </component>
    <component id="middleware.se_hostlib.commonInfra.MIMXRT1176" name="se_hostlib commonInfra" brief="se_hostlib commonInfra" version="1.0.0" full_name="Secure Element" category="Security Host Library/Secure Element" user_visible="false" type="middleware" package_base_path="middleware/se_hostlib" project_base_path="se_hostlib">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="hostlib/hostLib/libCommon/infra" type="src">
        <files mask="sm_connect.c"/>
        <files mask="global_platf.c"/>
        <files mask="sm_apdu.c"/>
        <files mask="sm_errors.c"/>
        <files mask="sm_printf.c"/>
      </source>
      <source relative_path="hostlib/hostLib/libCommon/infra" type="c_include">
        <files mask="app_boot.h"/>
        <files mask="app_boot_nfc.h"/>
        <files mask="cm_commands.h"/>
        <files mask="global_platf.h"/>
        <files mask="sm_apdu.h"/>
        <files mask="sm_api.h"/>
        <files mask="sm_demo_utils.h"/>
        <files mask="sm_errors.h"/>
        <files mask="sm_types.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_se_hostlib_commonInfra.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="hostlib/hostLib/libCommon/infra" type="c_include"/>
        <include_path relative_path="hostlib/hostLib/libCommon/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.se_hostlib.mwlog.MIMXRT1176" name="se_hostlib mwlog" brief="se_hostlib mwlog" version="1.0.0" full_name="Secure Element" category="Security Host Library/Secure Element" user_visible="false" type="middleware" package_base_path="middleware/se_hostlib" project_base_path="se_hostlib">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="hostlib/hostLib/libCommon/log" type="src">
        <files mask="nxLog.c"/>
      </source>
      <source relative_path="hostlib/hostLib/libCommon/log" type="c_include">
        <files mask="nxLog.h"/>
        <files mask="nxLog_App.h"/>
        <files mask="nxLog_DefaultConfig.h"/>
        <files mask="nxLog_UseCases.h"/>
        <files mask="nxLog_VCOM.h"/>
        <files mask="nxLog_hostLib.h"/>
        <files mask="nxLog_mbedtls.h"/>
        <files mask="nxLog_scp.h"/>
        <files mask="nxLog_smCom.h"/>
        <files mask="nxLog_sscp.h"/>
        <files mask="nxLog_sss.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_se_hostlib_mwlog.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="hostlib/hostLib/libCommon/log" type="c_include"/>
        <include_path relative_path="hostlib/hostLib/libCommon/log" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.se_hostlib.commonSe050_ksdk.MIMXRT1176" name="se_hostlib commonSe050_ksdk" brief="se_hostlib commonSe050_ksdk" version="1.0.0" full_name="Secure Element" category="Security Host Library/Secure Element" user_visible="false" type="middleware" package_base_path="middleware/se_hostlib" project_base_path="se_hostlib">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="hostlib/hostLib/platform/inc" type="c_include">
        <files mask="ax_reset.h"/>
        <files mask="i2c_a7.h"/>
        <files mask="se05x_apis.h"/>
        <files mask="se_pit_config.h"/>
        <files mask="se_reset_config.h"/>
        <files mask="sm_printf.h"/>
        <files mask="sm_timer.h"/>
      </source>
      <source relative_path="hostlib/hostLib/platform/ksdk" type="src">
        <files mask="ax_reset.c"/>
        <files mask="i2c_frdm.c"/>
        <files mask="i2c_imxrt.c"/>
        <files mask="i2c_mcxa.c"/>
        <files mask="i2c_mcxn9.c"/>
        <files mask="i2c_lpc54xxx.c"/>
        <files mask="i2c_lpc55sxx.c"/>
        <files mask="se05x_reset.c"/>
        <files mask="timer_kinetis.c"/>
        <files mask="timer_kinetis_bm.c"/>
        <files mask="timer_kinetis_freertos.c"/>
        <files mask="timer_kinetis_threadx.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_se_hostlib_commonSe050_ksdk.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="hostlib/hostLib/platform/inc" type="c_include"/>
        <include_path relative_path="hostlib/hostLib/platform/ksdk" type="c_include"/>
        <include_path relative_path="hostlib/hostLib/platform/inc" type="asm_include"/>
        <include_path relative_path="hostlib/hostLib/platform/ksdk" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.se_hostlib.commonSe050smCom.MIMXRT1176" name="se_hostlib commonSe050smCom" brief="se_hostlib commonSe050smCom" version="1.0.0" full_name="Secure Element" category="Security Host Library/Secure Element" user_visible="false" type="middleware" package_base_path="middleware/se_hostlib" project_base_path="se_hostlib">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="hostlib/hostLib/libCommon/smCom" type="c_include">
        <files mask="apduComm.h"/>
        <files mask="sci2c_cfg.h"/>
        <files mask="smCom.h"/>
        <files mask="smComT1oI2C.h"/>
      </source>
      <source relative_path="hostlib/hostLib/libCommon/smCom" type="src">
        <files mask="smCom.c"/>
        <files mask="smComT1oI2C.c"/>
      </source>
      <source relative_path="hostlib/hostLib/libCommon/smCom/T1oI2C" type="c_include">
        <files mask="phEseStatus.h"/>
        <files mask="phEseTypes.h"/>
        <files mask="phNxpEsePal_i2c.h"/>
        <files mask="phNxpEseProto7816_3.h"/>
        <files mask="phNxpEse_Api.h"/>
        <files mask="phNxpEse_Internal.h"/>
      </source>
      <source relative_path="hostlib/hostLib/libCommon/smCom/T1oI2C" type="src">
        <files mask="phNxpEsePal_i2c.c"/>
        <files mask="phNxpEseProto7816_3.c"/>
        <files mask="phNxpEse_Api.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_se_hostlib_commonSe050smCom.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="hostlib/hostLib/libCommon/smCom" type="c_include"/>
        <include_path relative_path="hostlib/hostLib/libCommon/smCom/T1oI2C" type="c_include"/>
        <include_path relative_path="hostlib/hostLib/libCommon/smCom" type="asm_include"/>
        <include_path relative_path="hostlib/hostLib/libCommon/smCom/T1oI2C" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.se_hostlib.commonSe050infra.MIMXRT1176" name="se_hostlib commonSe050infra" brief="se_hostlib commonSe050infra" version="1.0.0" full_name="Secure Element" category="Security Host Library/Secure Element" user_visible="false" type="middleware" package_base_path="middleware/se_hostlib" project_base_path="se_hostlib">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="hostlib/hostLib/libCommon/infra" type="src">
        <files mask="global_platf.c"/>
        <files mask="sm_connect.c"/>
        <files mask="sm_apdu.c"/>
        <files mask="sm_errors.c"/>
        <files mask="sm_printf.c"/>
      </source>
      <source relative_path="hostlib/hostLib/libCommon/infra" type="c_include">
        <files mask="app_boot.h"/>
        <files mask="app_boot_nfc.h"/>
        <files mask="cm_commands.h"/>
        <files mask="global_platf.h"/>
        <files mask="sm_apdu.h"/>
        <files mask="sm_api.h"/>
        <files mask="sm_demo_utils.h"/>
        <files mask="sm_errors.h"/>
        <files mask="sm_types.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_se_hostlib_commonSe050infra.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="hostlib/hostLib/libCommon/infra" type="c_include"/>
        <include_path relative_path="hostlib/hostLib/libCommon/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.se_hostlib.commonSe050_sss_ex.MIMXRT1176" name="se_hostlib commonSe050_sss_ex" brief="se_hostlib commonSe050_sss_ex" version="1.0.0" full_name="Secure Element" category="Security Host Library/Secure Element" user_visible="false" type="middleware" package_base_path="middleware/se_hostlib" project_base_path="se_hostlib">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="sss/ex/inc" type="c_include">
        <files mask="ex_scp03_puf.h"/>
        <files mask="ex_sss.h"/>
        <files mask="ex_sss_auth.h"/>
        <files mask="ex_sss_boot.h"/>
        <files mask="ex_sss_main_cc_inc.h"/>
        <files mask="ex_sss_main_freeRTOS_inc.h"/>
        <files mask="ex_sss_main_inc.h"/>
        <files mask="ex_sss_main_inc_frdmk64f.h"/>
        <files mask="ex_sss_main_inc_imx_rt.h"/>
        <files mask="ex_sss_main_inc_ksdk.h"/>
        <files mask="ex_sss_main_inc_linux.h"/>
        <files mask="ex_sss_main_inc_lpcxpresso55s.h"/>
        <files mask="ex_sss_main_inc_mcxa153.h"/>
        <files mask="ex_sss_main_inc_mcxn9.h"/>
        <files mask="ex_sss_main_inc_mpc5748g.h"/>
        <files mask="ex_sss_main_inc_nrf.h"/>
        <files mask="ex_sss_main_inc_qn9090.h"/>
        <files mask="ex_sss_objid.h"/>
        <files mask="ex_sss_ports.h"/>
        <files mask="ex_sss_scp03_keys.h"/>
        <files mask="ex_sss_tp_scp03_keys.h"/>
      </source>
      <source relative_path="sss/ex/src" type="src">
        <files mask="ex_sss_boot.c"/>
        <files mask="ex_sss_boot_connectstring.c"/>
        <files mask="ex_sss_se05x.c"/>
        <files mask="ex_sss_se05x_auth.c"/>
      </source>
      <source relative_path="sss/ex/src" type="c_include">
        <files mask="ex_sss_boot_int.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_se_hostlib_commonSe050_sss_ex.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="sss/ex/inc" type="c_include"/>
        <include_path relative_path="sss/ex/src" type="c_include"/>
        <include_path relative_path="sss/ex/inc" type="asm_include"/>
        <include_path relative_path="sss/ex/src" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.se_hostlib.commonSe050_CurrentApplet.MIMXRT1176" name="se_hostlib commonSe050_CurrentApplet" brief="se_hostlib commonSe050_CurrentApplet" version="1.0.0" full_name="Secure Element" category="Security Host Library/Secure Element" user_visible="false" type="middleware" package_base_path="middleware/se_hostlib" project_base_path="se_hostlib">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="hostlib/hostLib/se05x_03_xx_xx" type="src">
        <files mask="se05x_APDU.c"/>
      </source>
      <source relative_path="hostlib/hostLib/se05x_03_xx_xx" type="c_include">
        <files mask="se05x_APDU.h"/>
        <files mask="se05x_APDU_apis.h"/>
        <files mask="se05x_APDU_impl.h"/>
        <files mask="se05x_04_xx_APDU_apis.h"/>
        <files mask="se05x_04_xx_APDU_impl.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_se_hostlib_commonSe050_CurrentApplet.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="hostlib/hostLib/se05x_03_xx_xx" type="c_include"/>
        <include_path relative_path="hostlib/hostLib/se05x_03_xx_xx" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.se_hostlib.commonSe050_Scp03.MIMXRT1176" name="se_hostlib commonSe050_Scp03" brief="se_hostlib commonSe050_Scp03" version="1.0.0" full_name="Secure Element" category="Security Host Library/Secure Element" user_visible="false" type="middleware" package_base_path="middleware/se_hostlib" project_base_path="se_hostlib">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="hostlib/hostLib/libCommon/nxScp" type="src">
        <files mask="nxScp03_Com.c"/>
      </source>
      <source relative_path="hostlib/hostLib/libCommon/scp" type="src">
        <files mask="scp.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_se_hostlib_commonSe050_Scp03.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.se_hostlib.tstutils.time.MIMXRT1176" name="se_hostlib tstutils_time" brief="se_hostlib tstutils_time" version="1.0.0" full_name="Secure Element" category="Security Host Library/Secure Element" user_visible="false" type="middleware" package_base_path="middleware/se_hostlib" project_base_path="se_hostlib">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="hostlib/hostLib/tstUtil" type="c_include">
        <files mask="tst_sm_time.h"/>
      </source>
      <source relative_path="hostlib/hostLib/tstUtil" type="src">
        <files mask="tst_sm_time_kinetis.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_se_hostlib_tstutils_time.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="hostlib/hostLib/tstUtil" type="c_include"/>
        <include_path relative_path="hostlib/hostLib/tstUtil" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.se_hostlib.mbedtls_alt_demo_common.MIMXRT1176" name="se_hostlib mbedtls_alt_demo_common" brief="se_hostlib mbedtls_alt_demo_common" version="1.0.0" full_name="Secure Element" category="Security Host Library/Secure Element" user_visible="false" type="middleware" package_base_path="middleware/se_hostlib" project_base_path="se_hostlib">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="sss/plugin/mbedtls" type="src">
        <files mask="ecdh_alt.c"/>
        <files mask="rsa_alt.c"/>
      </source>
      <source relative_path="sss/plugin/mbedtls" type="c_include">
        <files mask="ecdsa_verify_alt.h"/>
        <files mask="ecp_alt.h"/>
        <files mask="rsa_alt.h"/>
        <files mask="sss_mbedtls.h"/>
      </source>
      <source relative_path="sss/port/ksdk" type="c_include">
        <files mask="fsl_sss_types.h"/>
        <files mask="sss_ksdk_mbedcrypto_config.h"/>
        <files mask="sss_ksdk_mbedtls_config.h"/>
      </source>
      <source relative_path="sss/src/mbedtls" type="src">
        <files mask="fsl_sss_mbedtls_apis.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_se_hostlib_mbedtls_alt_demo_common.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="hostlib/hostLib/mbedtls/inc" type="c_include"/>
        <include_path relative_path="sss/plugin/mbedtls" type="c_include"/>
        <include_path relative_path="sss/port/ksdk" type="c_include"/>
        <include_path relative_path="hostlib/hostLib/mbedtls/inc" type="asm_include"/>
        <include_path relative_path="sss/plugin/mbedtls" type="asm_include"/>
        <include_path relative_path="sss/port/ksdk" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.vglite.MIMXRT1176" name="vglite" brief="vglite library" version="4.0.90" full_name="Middleware vglite" category="vglite/vglite graphics library" user_visible="false" type="middleware" package_base_path="middleware/vglite/driver" project_base_path="vglite">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="inc" type="c_include">
        <files mask="vg_lite.h"/>
      </source>
      <source relative_path="VGLite" type="src">
        <files mask="vg_lite.c"/>
        <files mask="vg_lite_image.c"/>
        <files mask="vg_lite_matrix.c"/>
        <files mask="vg_lite_path.c"/>
        <files mask="vg_lite_stroke.c"/>
      </source>
      <source relative_path="VGLite" type="c_include">
        <files mask="vg_lite_options.h"/>
        <files mask="vg_lite_context.h"/>
      </source>
      <source relative_path="VGLite/rtos" type="src">
        <files mask="vg_lite_os.c"/>
      </source>
      <source relative_path="VGLite/Series/gc555/0x423_ECO" type="c_include">
        <files mask="vg_lite_options.h"/>
      </source>
      <source relative_path="VGLite/Series/gc355/0x0_1216" type="c_include">
        <files mask="vg_lite_options.h"/>
      </source>
      <source relative_path="VGLite/Series/gc255/0x40A" type="c_include">
        <files mask="vg_lite_options.h"/>
      </source>
      <source relative_path="VGLiteKernel" type="c_include">
        <files mask="vg_lite_hal.h"/>
        <files mask="vg_lite_hw.h"/>
        <files mask="vg_lite_kernel.h"/>
        <files mask="vg_lite_option.h"/>
        <files mask="vg_lite_type.h"/>
        <files mask="vg_lite_debug.h"/>
      </source>
      <source relative_path="VGLiteKernel" type="src">
        <files mask="vg_lite_kernel.c"/>
      </source>
      <source relative_path="VGLiteKernel/rtos" type="src">
        <files mask="vg_lite_hal.c"/>
      </source>
      <source relative_path="VGLiteKernel/rtos" type="c_include">
        <files mask="vg_lite_platform.h"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="RELEASE_NOTES.txt"/>
        <files mask="LICENSE.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_vglite.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="inc" type="c_include"/>
        <include_path relative_path="VGLite" type="c_include"/>
        <include_path relative_path="VGLite/rtos" type="c_include"/>
        <include_path relative_path="VGLite/Series/gc555/0x423_ECO" type="c_include"/>
        <include_path relative_path="VGLite/Series/gc355/0x0_1216" type="c_include"/>
        <include_path relative_path="VGLite/Series/gc255/0x40A" type="c_include"/>
        <include_path relative_path="VGLiteKernel" type="c_include"/>
        <include_path relative_path="VGLiteKernel/rtos" type="c_include"/>
        <include_path relative_path="inc" type="asm_include"/>
        <include_path relative_path="VGLite" type="asm_include"/>
        <include_path relative_path="VGLite/rtos" type="asm_include"/>
        <include_path relative_path="VGLite/Series/gc555/0x423_ECO" type="asm_include"/>
        <include_path relative_path="VGLite/Series/gc355/0x0_1216" type="asm_include"/>
        <include_path relative_path="VGLite/Series/gc255/0x40A" type="asm_include"/>
        <include_path relative_path="VGLiteKernel" type="asm_include"/>
        <include_path relative_path="VGLiteKernel/rtos" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb_pd.common_header.MIMXRT1176" name="USB PD Common Header" brief="Middleware usb pd common_header" version="2.11.0" full_name="USB PD Common Header" category="USB/USB PD Common Header" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
    </component>
    <component id="middleware.usb_pd.config_header.MIMXRT1176" name="PD Config Header" brief="USB Type-C PD Stack" version="2.11.0" full_name="USB Type-C PD Stack" category="USB/USB Type-C PD Stack" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
    </component>
    <component id="middleware.usb.host.khci_config_header.MIMXRT1176" name="USB host khci config header" brief="USB host khci config header" version="2.11.0" full_name="USB host khci config header" category="USB/USB Host" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
    </component>
    <component id="middleware.usb.host.ohci_config_header.MIMXRT1176" name="USB host ohci config header" brief="USB host ohci config header" version="2.11.0" full_name="USB host ohci config header" category="USB/USB Host" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
    </component>
    <component id="middleware.usb.host.ip3516hs_config_header.MIMXRT1176" name="USB host ip3516hs config header" brief="USB host ip3516hs config header" version="2.11.0" full_name="USB host ip3516hs config header" category="USB/USB Host" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
    </component>
    <component id="middleware.usb.host.ehci_config_header.MIMXRT1176" name="USB host ehci config header" brief="USB host ehci config header" version="2.11.0" full_name="USB host ehci config header" category="USB/USB Host" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
    </component>
    <component id="middleware.usb.device.khci_config_header.MIMXRT1176" name="USB device khci config header" brief="USB device khci config header" version="2.11.0" full_name="USB device khci config header" category="USB/USB Device" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
    </component>
    <component id="middleware.usb.device.ip3511fs_config_header.MIMXRT1176" name="USB device ip3511fs config header" brief="USB device ip3511fs config header" version="2.11.0" full_name="USB device ip3511fs config header" category="USB/USB Device" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
    </component>
    <component id="middleware.usb.device.ip3511hs_config_header.MIMXRT1176" name="USB device ip3511hs config header" brief="USB device ip3511hs config header" version="2.11.0" full_name="USB device ip3511hs config header" category="USB/USB Device" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
    </component>
    <component id="middleware.usb.device.ehci_config_header.MIMXRT1176" name="USB device ehci config header" brief="USB device ehci config header" version="2.11.0" full_name="USB device ehci config header" category="USB/USB Device" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
    </component>
    <component id="middleware.usb.phydcd_config_header.MIMXRT1176" name="USB device phydcd config header" brief="USB device phydcd config header" version="2.11.0" full_name="USB device phydcd config header" category="USB/USB DCD" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
    </component>
    <component id="middleware.usb.hsdcd_config_header.MIMXRT1176" name="USB device hsdcd config header" brief="USB device hsdcd config header" version="2.11.0" full_name="USB device hsdcd config header" category="USB/USB DCD" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
    </component>
    <component id="middleware.tinycbor.MIMXRT1176" name="tinycbor" brief="Concise Binary Object Representation (CBOR) Library" version="0.6.0" full_name="TinyCBOR" category="TinyCBOR/TinyCBOR" user_visible="true" type="middleware" package_base_path="middleware/tinycbor" project_base_path="tinycbor">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="src" type="c_include">
        <files mask="cbor.h"/>
        <files mask="cborinternal_p.h"/>
        <files mask="compilersupport_p.h"/>
        <files mask="tinycbor-version.h"/>
        <files mask="utf8_p.h"/>
      </source>
      <source relative_path="src" type="src">
        <files mask="cborencoder.c"/>
        <files mask="cborencoder_close_container_checked.c"/>
        <files mask="cborerrorstrings.c"/>
        <files mask="cborparser.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tinycbor.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src" type="c_include"/>
        <include_path relative_path="src" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.soem.bm.MIMXRT1176" name="soem" brief="Simple Open EtherCAT Master Library" version="1.4.0" full_name="SOEM" category="SOEM/component" user_visible="true" type="middleware" package_base_path="middleware/soem" project_base_path="soem">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="LICENSE" hidden="true"/>
        <files mask="README.md" hidden="true"/>
      </source>
      <source relative_path="soem" type="c_include">
        <files mask="ethercat.h"/>
        <files mask="ethercatbase.h"/>
        <files mask="ethercatcoe.h"/>
        <files mask="ethercatconfig.h"/>
        <files mask="ethercatconfiglist.h"/>
        <files mask="ethercatdc.h"/>
        <files mask="ethercateoe.h"/>
        <files mask="ethercatfoe.h"/>
        <files mask="ethercatmain.h"/>
        <files mask="ethercatprint.h"/>
        <files mask="ethercatsoe.h"/>
        <files mask="ethercattype.h"/>
      </source>
      <source relative_path="soem" type="src">
        <files mask="ethercatbase.c"/>
        <files mask="ethercatcoe.c"/>
        <files mask="ethercatconfig.c"/>
        <files mask="ethercatdc.c"/>
        <files mask="ethercateoe.c"/>
        <files mask="ethercatfoe.c"/>
        <files mask="ethercatmain.c"/>
        <files mask="ethercatprint.c"/>
        <files mask="ethercatsoe.c"/>
      </source>
      <source relative_path="oshw/mcux-sdk" type="c_include">
        <files mask="nicdrv.h"/>
        <files mask="oshw.h"/>
        <files mask="soem_port.h"/>
      </source>
      <source relative_path="oshw/mcux-sdk" type="src">
        <files mask="oshw.c"/>
        <files mask="soem_port.c"/>
      </source>
      <source relative_path="osal" type="c_include">
        <files mask="osal.h"/>
      </source>
      <source relative_path="osal/baremetal" type="src">
        <files mask="osal.c"/>
      </source>
      <source relative_path="osal/baremetal" type="c_include">
        <files mask="osal_defs.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_soem_bm.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="soem" type="c_include"/>
        <include_path relative_path="oshw/mcux-sdk" type="c_include"/>
        <include_path relative_path="osal" type="c_include"/>
        <include_path relative_path="osal/baremetal" type="c_include"/>
        <include_path relative_path="soem" type="asm_include"/>
        <include_path relative_path="oshw/mcux-sdk" type="asm_include"/>
        <include_path relative_path="osal" type="asm_include"/>
        <include_path relative_path="osal/baremetal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.common.MIMXRT1176" name="sdmmc_common" brief="Middleware sdmmc common" version="2.3.0" full_name="SDMMC common stack" category="Memories/SDMMC Stack" user_visible="false" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="common" type="c_include">
        <files mask="fsl_sdmmc_spec.h"/>
        <files mask="fsl_sdmmc_common.h"/>
      </source>
      <source relative_path="common" type="src">
        <files mask="fsl_sdmmc_common.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_common.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="common" type="c_include"/>
        <include_path relative_path="common" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.sdhc.template.MIMXRT1176" name="SDMMC configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="SDMMC configuration template" category="Memories/SDMMC Stack" user_visible="false" type="project_template" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="template/sdhc" config="true" type="src">
        <files mask="sdmmc_config.c"/>
      </source>
      <source relative_path="template/sdhc" config="true" type="c_include">
        <files mask="sdmmc_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_sdhc_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/sdhc" type="c_include"/>
        <include_path relative_path="template/sdhc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.sdif.template.MIMXRT1176" name="SDMMC configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="SDMMC configuration template" category="Memories/SDMMC Stack" user_visible="false" type="project_template" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="template/sdif" config="true" type="src">
        <files mask="sdmmc_config.c"/>
      </source>
      <source relative_path="template/sdif" config="true" type="c_include">
        <files mask="sdmmc_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_sdif_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/sdif" type="c_include"/>
        <include_path relative_path="template/sdif" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.usdhc.template.MIMXRT1176" name="SDMMC configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="SDMMC configuration template" category="Memories/SDMMC Stack" user_visible="false" type="project_template" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="template/usdhc" config="true" type="src">
        <files mask="sdmmc_config.c"/>
      </source>
      <source relative_path="template/usdhc" config="true" type="c_include">
        <files mask="sdmmc_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_usdhc_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/usdhc" type="c_include"/>
        <include_path relative_path="template/usdhc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.pngdec.MIMXRT1176" name="pngdec" brief="PNG decoder" version="1.0.1" full_name="Middleware pngdec" category="Image/png decoder" user_visible="true" type="middleware" package_base_path="middleware/pngdec" project_base_path="pngdec">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="README.md" hidden="true"/>
        <files mask="perf_small.png" hidden="true"/>
        <files mask="LICENSE" hidden="true"/>
      </source>
      <source relative_path="src" type="src">
        <files mask="adler32.c"/>
        <files mask="crc32.c"/>
        <files mask="infback.c"/>
        <files mask="inffast.c"/>
        <files mask="inflate.c"/>
        <files mask="inftrees.c"/>
        <files mask="PNGdec.c"/>
        <files mask="zutil.c"/>
      </source>
      <source relative_path="src" type="c_include">
        <files mask="crc32.h"/>
        <files mask="inffast.h"/>
        <files mask="inffixed.h"/>
        <files mask="inflate.h"/>
        <files mask="inftrees.h"/>
        <files mask="PNGdec.h"/>
        <files mask="zconf.h"/>
        <files mask="zlib.h"/>
        <files mask="zutil.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_pngdec.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src" type="c_include"/>
        <include_path relative_path="src" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.pkcs11.MIMXRT1176" name="pkcs11" brief="Public Key Cryptography Standard #11 defines generic cryptographic token interface." version="2.40.1" full_name="pkcs11" category="AWS IoT/OASIS PKCS Standard 11" user_visible="true" type="middleware" package_base_path="middleware/pkcs11" project_base_path="pkcs11">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="README.md"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="pkcs11t.h"/>
        <files mask="pkcs11f.h"/>
        <files mask="pkcs11.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_pkcs11.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.openh264.api.MIMXRT1176" name="openh264_api" brief="openh264 api" version="2.1.1" full_name="OpenH264 API" category="Graphics/H.264 Codec Library" user_visible="false" type="middleware" package_base_path="middleware/openh264" project_base_path="openh264">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="codec/api/svc" type="c_include">
        <files mask="codec_api.h"/>
        <files mask="codec_app_def.h"/>
        <files mask="codec_def.h"/>
        <files mask="codec_ver.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_openh264_api.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="codec/api/svc" type="c_include"/>
        <include_path relative_path="codec/api/svc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.openh264.common.MIMXRT1176" name="openh264_common" brief="openh264 common" version="2.1.1" full_name="OpenH264 common" category="Graphics/H.264 Codec Library" user_visible="false" type="middleware" package_base_path="middleware/openh264" project_base_path="openh264">
      <defines>
        <define name="__NXP_MSDK__" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="codec/common/inc" type="c_include">
        <files mask="asmdefs_mmi.h"/>
        <files mask="copy_mb.h"/>
        <files mask="cpu.h"/>
        <files mask="cpu_core.h"/>
        <files mask="crt_util_safe_x.h"/>
        <files mask="deblocking_common.h"/>
        <files mask="expand_pic.h"/>
        <files mask="golomb_common.h"/>
        <files mask="intra_pred_common.h"/>
        <files mask="ls_defines.h"/>
        <files mask="macros.h"/>
        <files mask="mc.h"/>
        <files mask="measure_time.h"/>
        <files mask="memory_align.h"/>
        <files mask="sad_common.h"/>
        <files mask="typedefs.h"/>
        <files mask="utils.h"/>
        <files mask="version.h"/>
        <files mask="wels_common_defs.h"/>
        <files mask="wels_const_common.h"/>
        <files mask="welsCodecTrace.h"/>
        <files mask="WelsList.h"/>
        <files mask="WelsLock.h"/>
        <files mask="WelsTask.h"/>
        <files mask="WelsTaskThread.h"/>
        <files mask="WelsThread.h"/>
        <files mask="WelsThreadLib.h"/>
        <files mask="WelsThreadPool.h"/>
      </source>
      <source relative_path="codec/common/src" type="src">
        <files mask="common_tables.cpp"/>
        <files mask="copy_mb.cpp"/>
        <files mask="cpu.cpp"/>
        <files mask="crt_util_safe_x.cpp"/>
        <files mask="deblocking_common.cpp"/>
        <files mask="expand_pic.cpp"/>
        <files mask="intra_pred_common.cpp"/>
        <files mask="mc.cpp"/>
        <files mask="memory_align.cpp"/>
        <files mask="sad_common.cpp"/>
        <files mask="utils.cpp"/>
        <files mask="welsCodecTrace.cpp"/>
        <files mask="WelsTaskThread.cpp"/>
        <files mask="WelsThread.cpp"/>
        <files mask="WelsThreadLib.cpp"/>
        <files mask="WelsThreadPool.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_openh264_common.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="codec/common/inc" type="c_include"/>
        <include_path relative_path="codec/common/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.openh264.example_lib.MIMXRT1176" name="example_lib" brief="openh264 example library files used by projects" version="2.0.0" full_name="openh264 example library" category="Graphics/H.264 Codec Library" user_visible="false" type="other" package_base_path="middleware/openh264" project_base_path="openh264">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
    </component>
    <component id="middleware.nxp_iot_agent.lwip_enet.MIMXRT1176" name="nxp_iot_agent_lwip_enet" brief="Ethernet LWIP network backend for nxp_iot_agent" version="6.0.2" full_name="nxp_iot_agent lwip_enet" category="Security/EdgeLock 2GO" user_visible="false" type="middleware" package_base_path="middleware/nxp_iot_agent" project_base_path="nxp_iot_agent">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="ex/src/network" type="src">
        <files mask="iot_agent_network_lwip.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_nxp_iot_agent_lwip_enet.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.nxp_iot_agent.lwip_wifi.MIMXRT1176" name="nxp_iot_agent_lwip_wifi" brief="Wi-Fi LWIP network backend for nxp_iot_agent" version="6.0.2" full_name="nxp_iot_agent lwip_wifi" category="Security/EdgeLock 2GO" user_visible="false" type="middleware" package_base_path="middleware/nxp_iot_agent" project_base_path="nxp_iot_agent">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="ex/src/network" type="src">
        <files mask="iot_agent_network_lwip_wifi.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_nxp_iot_agent_lwip_wifi.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.nxp_iot_agent.psa.MIMXRT1176" name="nxp_iot_agent_psa" brief="PSA crypto backend for nxp_iot_agent" version="6.0.2" full_name="nxp_iot_agent psa" category="Security/EdgeLock 2GO" user_visible="false" type="middleware" package_base_path="middleware/nxp_iot_agent" project_base_path="nxp_iot_agent">
      <defines>
        <define name="NXP_IOT_AGENT_HAVE_PSA" value="1"/>
        <define name="NXP_IOT_AGENT_HAVE_PSA_IMPL_TFM" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="ex/inc" type="c_include">
        <files mask="iot_agent_claimcode_import.h"/>
      </source>
      <source relative_path="ex/inc/mbedtls_psa" type="c_include">
        <files mask="iot_agent_psa_sign_test.h"/>
      </source>
      <source relative_path="ex/src/utils" type="src">
        <files mask="iot_agent_claimcode_import.c"/>
      </source>
      <source relative_path="ex/src/utils/mbedtls_psa" type="src">
        <files mask="iot_agent_psa_sign_test.c"/>
      </source>
      <source relative_path="platform/tfm" type="src">
        <files mask="nxp_iot_agent_platform_tfm.c"/>
        <files mask="nxp_iot_agent_time_tfm.c"/>
      </source>
      <source relative_path="src/keystore/psa" type="src">
        <files mask="nxp_iot_agent_keystore_psa.c"/>
      </source>
      <source relative_path="src/keystore/psa" type="c_include">
        <files mask="nxp_iot_agent_keystore_psa.h"/>
        <files mask="nxp_iot_agent_macros_psa.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_nxp_iot_agent_psa.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="ex/inc" type="c_include"/>
        <include_path relative_path="ex/inc/mbedtls_psa" type="c_include"/>
        <include_path relative_path="src/keystore/psa" type="c_include"/>
        <include_path relative_path="ex/inc" type="asm_include"/>
        <include_path relative_path="ex/inc/mbedtls_psa" type="asm_include"/>
        <include_path relative_path="src/keystore/psa" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.mcmgr.MIMXRT1176" name="mcmgr" brief="MCMgr" version="4.1.5" full_name="Multicore Manager" category="Multicore/Core Management" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="mcmgr">
      <defines>
        <define name="MULTICORE_APP" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="mcmgr/src" type="c_include">
        <files mask="mcmgr.h"/>
        <files mask="mcmgr_internal_core_api.h"/>
      </source>
      <source relative_path="mcmgr/src" type="src">
        <files mask="mcmgr.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_mcmgr.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="mcmgr/src" type="c_include"/>
        <include_path relative_path="mcmgr/src" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.common.MIMXRT1176" name="eRPC" brief="eRPC" version="1.13.0" full_name="Embedded Remote Procedure Call" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="erpc/erpc_c/infra" type="c_include">
        <files mask="erpc_version.h"/>
        <files mask="erpc_common.h"/>
        <files mask="erpc_pre_post_action.h"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_codec.hpp"/>
        <files mask="erpc_basic_codec.hpp"/>
        <files mask="erpc_transport.hpp"/>
        <files mask="erpc_message_buffer.hpp"/>
        <files mask="erpc_message_loggers.hpp"/>
        <files mask="erpc_manually_constructed.hpp"/>
        <files mask="erpc_crc16.hpp"/>
        <files mask="erpc_client_server_common.hpp"/>
        <files mask="erpc_utils.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_basic_codec.cpp"/>
        <files mask="erpc_message_buffer.cpp"/>
        <files mask="erpc_message_loggers.cpp"/>
        <files mask="erpc_crc16.cpp"/>
        <files mask="erpc_pre_post_action.cpp"/>
        <files mask="erpc_utils.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="c_include">
        <files mask="erpc_transport_setup.h"/>
        <files mask="erpc_mbf_setup.h"/>
      </source>
      <source relative_path="erpc/erpc_c/port" type="c_include">
        <files mask="erpc_setup_extensions.h"/>
        <files mask="erpc_endianness_agnostic_example.h"/>
        <files mask="erpc_endianness_undefined.h"/>
        <files mask="erpc_config_internal.h"/>
      </source>
      <source relative_path="erpc/erpc_c/config" type="c_include">
        <files mask="erpc_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/port" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/config" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/port" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/config" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.doc.MIMXRT1176" name="eRPC" brief="eRPC" version="1.13.0" full_name="Embedded Remote Procedure Call" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="erpc" project_relative_path="erpc_aux" type="other">
        <files mask="Makefile" hidden="true"/>
        <files mask="LICENSE" hidden="true"/>
      </source>
      <source relative_path="erpc" project_relative_path="erpc_aux" type="doc">
        <files mask="README.md" hidden="true"/>
        <files mask="SW-Content-Register.txt" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c" project_relative_path="erpc_aux" type="other">
        <files mask="Makefile" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c" project_relative_path="doc" type="doc">
        <files mask="README.md" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c/config" project_relative_path="erpc_aux" config="true" type="c_include">
        <files mask="erpc_config.h" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c/port" project_relative_path="erpc_aux" type="c_include">
        <files mask="erpc_threading.h" hidden="true"/>
        <files mask="erpc_serial.h" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c/port" project_relative_path="erpc_aux" type="src">
        <files mask="erpc_threading_pthreads.cpp" hidden="true"/>
        <files mask="erpc_serial.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="erpc_aux" type="src">
        <files mask="erpc_setup_mbf_static.cpp" hidden="true"/>
        <files mask="erpc_setup_serial.cpp" hidden="true"/>
        <files mask="erpc_setup_uart_zephyr.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="erpc_aux" type="src">
        <files mask="erpc_inter_thread_buffer_transport.cpp" hidden="true"/>
        <files mask="erpc_serial_transport.cpp" hidden="true"/>
        <files mask="erpc_tcp_transport.cpp" hidden="true"/>
        <files mask="erpc_uart_zephyr_transport.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="erpc_aux" type="cpp_include">
        <files mask="erpc_inter_thread_buffer_transport.hpp" hidden="true"/>
        <files mask="erpc_serial_transport.hpp" hidden="true"/>
        <files mask="erpc_tcp_transport.hpp" hidden="true"/>
        <files mask="erpc_uart_zephyr_transport.hpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_python" project_relative_path="erpc_aux" type="script">
        <files mask="setup.py" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_python" project_relative_path="erpc_aux" type="doc">
        <files mask="README_Pypi.md" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_python/erpc" project_relative_path="erpc_aux" type="script">
        <files mask="__init__.py" hidden="true"/>
        <files mask="arbitrator.py" hidden="true"/>
        <files mask="basic_codec.py" hidden="true"/>
        <files mask="client.py" hidden="true"/>
        <files mask="codec.py" hidden="true"/>
        <files mask="crc16.py" hidden="true"/>
        <files mask="erpc_version.py" hidden="true"/>
        <files mask="server.py" hidden="true"/>
        <files mask="simple_server.py" hidden="true"/>
        <files mask="transport.py" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen" project_relative_path="erpc_aux" type="other">
        <files mask="Makefile" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen" project_relative_path="erpc_aux" type="doc">
        <files mask="README.md" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/bin" project_relative_path="erpc_aux" type="script">
        <files mask="txt_to_c.py" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/embedded-rpc.xcodeproj" project_relative_path="erpc_aux" type="other">
        <files mask="project.pbxproj" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/embedded-rpc.xcodeproj/project.xcworkspace" project_relative_path="erpc_aux" type="other">
        <files mask="contents.xcworkspacedata" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src" project_relative_path="erpc_aux" type="c_include">
        <files mask="annotations.h" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src" project_relative_path="erpc_aux" type="cpp_include">
        <files mask="AstNode.hpp" hidden="true"/>
        <files mask="AstWalker.hpp" hidden="true"/>
        <files mask="CGenerator.hpp" hidden="true"/>
        <files mask="ErpcLexer.hpp" hidden="true"/>
        <files mask="Generator.hpp" hidden="true"/>
        <files mask="HexValues.hpp" hidden="true"/>
        <files mask="InterfaceDefinition.hpp" hidden="true"/>
        <files mask="JavaGenerator.hpp" hidden="true"/>
        <files mask="Logging.hpp" hidden="true"/>
        <files mask="ParseErrors.hpp" hidden="true"/>
        <files mask="PythonGenerator.hpp" hidden="true"/>
        <files mask="SearchPath.hpp" hidden="true"/>
        <files mask="SymbolScanner.hpp" hidden="true"/>
        <files mask="Token.hpp" hidden="true"/>
        <files mask="UniqueIdChecker.hpp" hidden="true"/>
        <files mask="Utils.hpp" hidden="true"/>
        <files mask="Value.hpp" hidden="true"/>
        <files mask="format_string.hpp" hidden="true"/>
        <files mask="options.hpp" hidden="true"/>
        <files mask="os_config.hpp" hidden="true"/>
        <files mask="smart_ptr.hpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src" project_relative_path="erpc_aux" type="src">
        <files mask="AstNode.cpp" hidden="true"/>
        <files mask="AstWalker.cpp" hidden="true"/>
        <files mask="CGenerator.cpp" hidden="true"/>
        <files mask="ErpcLexer.cpp" hidden="true"/>
        <files mask="Generator.cpp" hidden="true"/>
        <files mask="HexValues.cpp" hidden="true"/>
        <files mask="InterfaceDefinition.cpp" hidden="true"/>
        <files mask="JavaGenerator.cpp" hidden="true"/>
        <files mask="Logging.cpp" hidden="true"/>
        <files mask="ParseErrors.cpp" hidden="true"/>
        <files mask="PythonGenerator.cpp" hidden="true"/>
        <files mask="SearchPath.cpp" hidden="true"/>
        <files mask="SymbolScanner.cpp" hidden="true"/>
        <files mask="Token.cpp" hidden="true"/>
        <files mask="UniqueIdChecker.cpp" hidden="true"/>
        <files mask="Utils.cpp" hidden="true"/>
        <files mask="erpcgen.cpp" hidden="true"/>
        <files mask="format_string.cpp" hidden="true"/>
        <files mask="options.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src" project_relative_path="erpc_aux" type="other">
        <files mask="erpcgen_lexer.l" hidden="true"/>
        <files mask="erpcgen_parser.y" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src/cpptemplate" project_relative_path="erpc_aux" type="cpp_include">
        <files mask="cpptempl.hpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src/cpptemplate" project_relative_path="erpc_aux" type="src">
        <files mask="cpptempl.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src/cpptemplate" project_relative_path="erpc_aux" type="other">
        <files mask="README.rst" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src/cpptemplate" project_relative_path="erpc_aux" type="doc">
        <files mask="LICENSE.txt" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src/templates" project_relative_path="erpc_aux" type="other">
        <files mask="c_client_header.template" hidden="true"/>
        <files mask="c_client_source.template" hidden="true"/>
        <files mask="c_common_header.template" hidden="true"/>
        <files mask="c_crc.template" hidden="true"/>
        <files mask="c_server_header.template" hidden="true"/>
        <files mask="c_server_source.template" hidden="true"/>
        <files mask="cpp_client_header.template" hidden="true"/>
        <files mask="cpp_client_source.template" hidden="true"/>
        <files mask="cpp_coders.template" hidden="true"/>
        <files mask="cpp_common_functions.template" hidden="true"/>
        <files mask="cpp_interface_header.template" hidden="true"/>
        <files mask="cpp_interface_source.template" hidden="true"/>
        <files mask="cpp_server_header.template" hidden="true"/>
        <files mask="cpp_server_source.template" hidden="true"/>
        <files mask="java_client.template" hidden="true"/>
        <files mask="java_coders.template" hidden="true"/>
        <files mask="java_const.template" hidden="true"/>
        <files mask="java_enum.template" hidden="true"/>
        <files mask="java_interface.template" hidden="true"/>
        <files mask="java_server.template" hidden="true"/>
        <files mask="java_struct.template" hidden="true"/>
        <files mask="py_client.template" hidden="true"/>
        <files mask="py_coders.template" hidden="true"/>
        <files mask="py_common.template" hidden="true"/>
        <files mask="py_global_init.template" hidden="true"/>
        <files mask="py_init.template" hidden="true"/>
        <files mask="py_interface.template" hidden="true"/>
        <files mask="py_server.template" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src/types" project_relative_path="erpc_aux" type="cpp_include">
        <files mask="AliasType.hpp" hidden="true"/>
        <files mask="Annotation.hpp" hidden="true"/>
        <files mask="ArrayType.hpp" hidden="true"/>
        <files mask="BuiltinType.hpp" hidden="true"/>
        <files mask="ConstType.hpp" hidden="true"/>
        <files mask="DataType.hpp" hidden="true"/>
        <files mask="EnumMember.hpp" hidden="true"/>
        <files mask="EnumType.hpp" hidden="true"/>
        <files mask="Function.hpp" hidden="true"/>
        <files mask="FunctionType.hpp" hidden="true"/>
        <files mask="Group.hpp" hidden="true"/>
        <files mask="Interface.hpp" hidden="true"/>
        <files mask="ListType.hpp" hidden="true"/>
        <files mask="Program.hpp" hidden="true"/>
        <files mask="StructMember.hpp" hidden="true"/>
        <files mask="StructType.hpp" hidden="true"/>
        <files mask="Symbol.hpp" hidden="true"/>
        <files mask="SymbolScope.hpp" hidden="true"/>
        <files mask="UnionCase.hpp" hidden="true"/>
        <files mask="UnionType.hpp" hidden="true"/>
        <files mask="VoidType.hpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src/types" project_relative_path="erpc_aux" type="src">
        <files mask="Type.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/VisualStudio_v14" project_relative_path="erpc_aux" type="other">
        <files mask="erpcgen.sln" hidden="true"/>
        <files mask="erpcgen.vcxproj" hidden="true"/>
        <files mask="erpcgen.vcxproj.filters" hidden="true"/>
        <files mask="erpcgen.vcxproj.user" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/VisualStudio_v14" project_relative_path="erpc_aux" type="doc">
        <files mask="readme_erpcgen.txt" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/VisualStudio_v14" project_relative_path="erpc_aux" type="src">
        <files mask="stdafx.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/VisualStudio_v14" project_relative_path="erpc_aux" type="c_include">
        <files mask="stdafx.h" hidden="true"/>
        <files mask="stdbool.h" hidden="true"/>
        <files mask="targetver.h" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcsniffer" project_relative_path="erpc_aux" type="other">
        <files mask="Makefile" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcsniffer" project_relative_path="erpc_aux" type="doc">
        <files mask="readme.txt" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcsniffer/src" project_relative_path="erpc_aux" type="c_include">
        <files mask="erpc_config.h" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcsniffer/src" project_relative_path="erpc_aux" type="cpp_include">
        <files mask="Sniffer.hpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcsniffer/src" project_relative_path="erpc_aux" type="src">
        <files mask="Sniffer.cpp" hidden="true"/>
        <files mask="erpcsniffer.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/mk" project_relative_path="erpc_aux" type="script">
        <files mask="common.mk" hidden="true"/>
        <files mask="erpc_common.mk" hidden="true"/>
        <files mask="flags.mk" hidden="true"/>
        <files mask="paths.mk" hidden="true"/>
        <files mask="subdirs.mk" hidden="true"/>
        <files mask="targets.mk" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities" project_relative_path="erpc_aux" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities/styles" project_relative_path="erpc_aux" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities/styles/NOTEPADpp" project_relative_path="erpc_aux" type="xml">
        <files mask="IDl_deep_black.xml" hidden="true"/>
        <files mask="IDl_default.xml" hidden="true"/>
        <files mask="template_deep_black.xml" hidden="true"/>
        <files mask="template_default.xml" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities/styles/VSC" project_relative_path="erpc_aux" type="doc">
        <files mask="CHANGELOG.md" hidden="true"/>
        <files mask="README.md" hidden="true"/>
        <files mask="vsc-extension-quickstart.md" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities/styles/VSC" project_relative_path="erpc_aux" type="other">
        <files mask="language-configuration.json" hidden="true"/>
        <files mask="package.json" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities/styles/VSC/.vscode" project_relative_path="erpc_aux" type="other">
        <files mask="launch.json" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities/styles/VSC/img" project_relative_path="erpc_aux" type="image">
        <files mask="erpcPic.png" hidden="true"/>
        <files mask="templatePic.png" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities/styles/VSC/syntaxes" project_relative_path="erpc_aux" type="other">
        <files mask="erpc.tmLanguage.json" hidden="true"/>
        <files mask="template.tmLanguage.json" hidden="true"/>
      </source>
      <source relative_path="tools/erpcgen/Linux_x64" project_relative_path="erpc_aux" type="other">
        <files mask="erpcgen" hidden="true"/>
      </source>
      <source relative_path="tools/erpcgen/Linux_x86" project_relative_path="erpc_aux" type="other">
        <files mask="erpcgen" hidden="true"/>
      </source>
      <source relative_path="tools/erpcgen/Mac" project_relative_path="erpc_aux" type="other">
        <files mask="erpcgen" hidden="true"/>
      </source>
      <source relative_path="tools/erpcgen/Windows" project_relative_path="erpc_aux" type="other">
        <files mask="erpcgen.exe" hidden="true"/>
      </source>
      <source relative_path="tools/erpcsniffer/Linux_x64" project_relative_path="erpc_aux" type="other">
        <files mask="erpcsniffer" hidden="true"/>
      </source>
      <source relative_path="tools/erpcsniffer/Linux_x86" project_relative_path="erpc_aux" type="other">
        <files mask="erpcsniffer" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_doc.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.MIMXRT1176" name="multicore middleware" brief="Multicore SDK" version="2.16.0" full_name="Multicore Software Development Kit" category="Multicore/MulticoreSDK" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="multicore">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
    </component>
    <component id="middleware.mmcau.common_files.MIMXRT1176" name="mmcau" brief="MMCAU common library source files" version="2.0.4" full_name="Kinetis MMCAU common source files" category="MMCAU Security/MMCAU library" user_visible="true" type="middleware" package_base_path="middleware/mmcau" project_base_path="mmcau">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="cau_api.h"/>
        <files mask="fsl_mmcau.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mmcau.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mmcau_common_files.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mmcau.mmcau_files.MIMXRT1176" name="mmcau" brief="MMCAU security function library source files" version="2.0.4" full_name="Kinetis MMCAU security function library source files" category="MMCAU Security/MMCAU library" user_visible="false" type="middleware" package_base_path="middleware/mmcau" project_base_path="mmcau">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="CMakeLists.txt"/>
        <files mask="ChangeLogKSDK.txt"/>
        <files mask="README.txt"/>
        <files mask="SCR.txt"/>
      </source>
      <source relative_path="asm-cm4-cm7/src" type="other" device_cores="cm4_MIMXRT1176xxxxx cm7_MIMXRT1176xxxxx">
        <files mask="cau2_defines.hdr"/>
      </source>
      <source relative_path="asm-cm4-cm7/src" type="asm_include" device_cores="cm4_MIMXRT1176xxxxx cm7_MIMXRT1176xxxxx">
        <files mask="mmcau_aes_functions.s"/>
        <files mask="mmcau_des_functions.s"/>
        <files mask="mmcau_md5_functions.s"/>
        <files mask="mmcau_sha1_functions.s"/>
        <files mask="mmcau_sha256_functions.s"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mmcau_mmcau_files.cmake" hidden="true"/>
      </source>
    </component>
    <!--<component id="middleware.mmcau.unused_files.MIMXRT1176" name="MMCAU_unused_files" version="2.0.4" package_base_path="middleware/mmcau" project_base_path="mmcau">
  <source exclude="true" relative_path="doxygen" type="other">
    <files mask="fsl_mmcau.dox" hidden="true"/>
  </source>
</component>-->
    <component id="middleware.mcuboot.nxp_bootutil_port.MIMXRT1176" name="mcuboot_bootutil.nxp_port" brief="NXP porting layer for MCUboot's bootutil code" version="2.0.0" full_name="NXP porting layer for MCUboot's bootutil code" category="File System/MCUboot bootloader" user_visible="false" type="middleware" package_base_path="middleware/mcuboot_opensource/boot/nxp_mcux_sdk" project_base_path="bootutil/nxp_port">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source exclude="true" relative_path="keys" type="src">
        <files mask="enc-rsa2048-priv-minimal.c"/>
        <files mask="sign-rsa2048-pub.c"/>
        <files mask="sign-ecdsa-p256-pub.c"/>
      </source>
      <source exclude="true" relative_path="keys" type="other">
        <files mask="sign-rsa2048-pub.pem" hidden="true"/>
        <files mask="sign-rsa2048-priv.pem" hidden="true"/>
        <files mask="sign-ecdsa-p256-pub.pem" hidden="true"/>
        <files mask="sign-ecdsa-p256-priv.pem" hidden="true"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="boot.c"/>
        <files mask="bootutil_hooks.c"/>
        <files mask="keys.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="boot.h"/>
      </source>
      <source relative_path="include" type="c_include">
        <files mask="flash_map.h"/>
      </source>
      <source relative_path="include/flash_map_backend" type="c_include">
        <files mask="flash_map_backend.h"/>
      </source>
      <source relative_path="include/mcuboot_config" type="c_include">
        <files mask="mcuboot_config.h"/>
        <files mask="mcuboot_logging.h"/>
      </source>
      <source relative_path="include/os" type="c_include">
        <files mask="os_malloc.h"/>
      </source>
      <source relative_path="include/sysflash" type="c_include">
        <files mask="sysflash.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mcuboot_nxp_bootutil_port.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="flashapi" type="c_include"/>
        <include_path relative_path="keys" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include/mcuboot_config" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="flashapi" type="asm_include"/>
        <include_path relative_path="keys" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
        <include_path relative_path="include/mcuboot_config" type="asm_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcuboot.stack_heap_default_mbedtls.MIMXRT1176" name="mcuboot_stack_heap_default_mbedtls" brief="MCUboot default stack/heap setup for MbedTLS" version="2.0.0" full_name="MCUboot default stack/heap setup for MbedTLS" category="File System/MCUboot bootloader" user_visible="false" type="middleware" package_base_path="middleware/mcuboot_opensource/boot/nxp_mcux_sdk" project_base_path="bootutil">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mcuboot_stack_heap_default_mbedtls.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.mcuboot.stack_heap_default_tinycrypt.MIMXRT1176" name="mcuboot_stack_heap_default_tinycrypt" brief="MCUboot default stack/heap setup for TinyCrypt" version="2.0.0" full_name="MCUboot default stack/heap setup for TinyCrypt" category="File System/MCUboot bootloader" user_visible="false" type="middleware" package_base_path="middleware/mcuboot_opensource/boot/nxp_mcux_sdk" project_base_path="bootutil">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mcuboot_stack_heap_default_tinycrypt.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.mcuboot.nxp_app_support.MIMXRT1176" name="mcuboot_app_support" brief="MCUboot application support layer" version="2.0.0" full_name="MCUboot application support layer" category="File System/MCUboot bootloader" user_visible="false" type="middleware" package_base_path="middleware/mcuboot_opensource/boot/nxp_mcux_sdk" project_base_path="bootutil/app_support">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="app_support" type="src">
        <files mask="mcuboot_app_support.c"/>
      </source>
      <source relative_path="app_support" type="c_include">
        <files mask="mcuboot_app_support.h"/>
      </source>
      <source relative_path="include/mcuboot_config" type="c_include">
        <files mask="mcuboot_config.h"/>
      </source>
      <source relative_path="include" type="c_include">
        <files mask="flash_map.h"/>
      </source>
      <source relative_path="include/sysflash" type="c_include">
        <files mask="sysflash.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mcuboot_nxp_app_support.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="app_support" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include/mcuboot_config" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="app_support" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
        <include_path relative_path="include/mcuboot_config" type="asm_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <!--<component id="middleware.mcuboot.docs.MIMXRT1176" name="mcuboot_docs" version="2.0.0" package_base_path="middleware/mcuboot_opensource" project_base_path="mcuboot">
  <source relative_path="docs" type="other">
    <files mask=".gitignore"/>
    <files mask="CNAME"/>
    <files mask="Gemfile"/>
    <files mask="Gemfile.lock"/>
    <files mask="PORTING.md"/>
    <files mask="SECURITY.md"/>
    <files mask="SubmittingPatches.md"/>
    <files mask="_config.yml"/>
    <files mask="design.md"/>
    <files mask="ecdsa.md"/>
    <files mask="encrypted_images.md"/>
    <files mask="imgtool.md"/>
    <files mask="index.md"/>
    <files mask="readme-espressif.md"/>
    <files mask="readme-mbed.md"/>
    <files mask="readme-mynewt.md"/>
    <files mask="readme-nuttx.md"/>
    <files mask="readme-riot.md"/>
    <files mask="readme-zephyr.md"/>
    <files mask="readme-nxp_mcux_sdk.md"/>
    <files mask="release-notes.md"/>
    <files mask="release.md"/>
    <files mask="serial_recovery.md"/>
    <files mask="signed_images.md"/>
    <files mask="testplan-mynewt.md"/>
    <files mask="testplan-zephyr.md"/>
  </source>
  <source relative_path="docs/release-notes.d" type="other">
    <files mask="00readme.md"/>
  </source>
</component>-->
    <!--<component id="middleware.mcuboot.scripts.MIMXRT1176" name="mcuboot_scripts" version="2.0.0" package_base_path="middleware/mcuboot_opensource" project_base_path="mcuboot">
  <source relative_path="scripts" type="script">
    <files mask="assemble.py"/>
    <files mask="flash.sh"/>
    <files mask="gdb-boot.sh"/>
    <files mask="imgtool.py"/>
    <files mask="jgdb.sh"/>
    <files mask="jl.sh"/>
    <files mask="setup.py"/>
  </source>
  <source relative_path="scripts" type="other">
    <files mask="imgtool.nix"/>
    <files mask="mcubin.bt"/>
  </source>
  <source relative_path="scripts" type="doc">
    <files mask="requirements.txt"/>
  </source>
  <source relative_path="scripts/imgtool" type="script">
    <files mask="__init__.py"/>
    <files mask="boot_record.py"/>
    <files mask="dumpinfo.py"/>
    <files mask="image.py"/>
    <files mask="main.py"/>
    <files mask="version.py"/>
  </source>
  <source relative_path="scripts/imgtool/keys" type="script">
    <files mask="__init__.py"/>
    <files mask="ecdsa.py"/>
    <files mask="ecdsa_test.py"/>
    <files mask="ed25519.py"/>
    <files mask="ed25519_test.py"/>
    <files mask="general.py"/>
    <files mask="privatebytes.py"/>
    <files mask="rsa.py"/>
    <files mask="rsa_test.py"/>
    <files mask="x25519.py"/>
  </source>
</component>-->
    <component id="middleware.mcuboot.nxp_encrypted_xip.MIMXRT1176" name="mcuboot_encrypted_xip" brief="Encrypted XIP abstraction for MCUBoot" version="1.0.0" full_name="mcuboot_encrypted_xip" category="File System/MCUboot bootloader" user_visible="false" type="middleware" package_base_path="middleware/mcuboot_opensource/ext/nxp_encrypted_xip" project_base_path="encrypted_xip">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="include" type="c_include">
        <files mask="encrypted_xip_mcuboot_support.h"/>
        <files mask="encrypted_xip.h"/>
        <files mask="encrypted_xip_platform.h"/>
      </source>
      <source relative_path="src" type="src">
        <files mask="encrypted_xip_mcuboot_support.c"/>
        <files mask="encrypted_xip.c"/>
        <files mask="encrypted_xip_platform_bee.c"/>
        <files mask="encrypted_xip_platform_iped.c"/>
        <files mask="encrypted_xip_platform_npx.c"/>
        <files mask="encrypted_xip_platform_otfad.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mcuboot_nxp_encrypted_xip.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcuboot.mbedtls-asn1.MIMXRT1176" name="mcuboot_mbedtls_asn1" brief="MCUBoot's subset of MbedTLS for ASN.1 parsing" version="2.0.0" full_name="mcuboot_mbedtls-asn1" category="File System/MCUboot bootloader" user_visible="false" type="middleware" package_base_path="middleware/mcuboot_opensource/ext/mbedtls-asn1" project_base_path="mbedtls-asn1">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="include/mbedtls" type="c_include">
        <files mask="asn1.h"/>
        <files mask="bignum.h"/>
        <files mask="build_info.h"/>
        <files mask="check_config.h"/>
        <files mask="ecdsa.h"/>
        <files mask="ecp.h"/>
        <files mask="error.h"/>
        <files mask="mbedtls_config.h"/>
        <files mask="md.h"/>
        <files mask="oid.h"/>
        <files mask="pk.h"/>
        <files mask="platform.h"/>
        <files mask="platform_util.h"/>
        <files mask="private_access.h"/>
        <files mask="rsa.h"/>
        <files mask="threading.h"/>
        <files mask="version.h"/>
      </source>
      <source relative_path="include" type="c_include">
        <files mask="common.h"/>
      </source>
      <source relative_path="src" type="src">
        <files mask="asn1parse.c"/>
        <files mask="platform_util.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mcuboot_mbedtls-asn1.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <!--<component id="middleware.mcuboot.unused_files.MIMXRT1176" name="mcuboot_unused_files" version="2.0.0" package_base_path="middleware/mcuboot_opensource" project_base_path="mcuboot">
  <source relative_path=".github/workflows" type="other">
    <files mask="espressif.yaml"/>
    <files mask="fih_tests.yaml"/>
    <files mask="imgtool.yaml"/>
    <files mask="mynewt.yaml"/>
    <files mask="sim.yaml"/>
    <files mask="stale_issue.yml"/>
    <files mask="zephyr_build.yaml"/>
  </source>
  <source relative_path="./" type="other">
    <files mask=".gitignore"/>
    <files mask=".gitmodules"/>
    <files mask=".mbedignore"/>
    <files mask=".travis.yml-disabled"/>
    <files mask="CODE_OF_CONDUCT.md"/>
    <files mask="Cargo.lock"/>
    <files mask="Cargo.toml"/>
    <files mask="NOTICE"/>
    <files mask="README.md"/>
    <files mask="enc-aes128kw.b64"/>
    <files mask="enc-aes256kw.b64"/>
    <files mask="enc-ec256-priv.pem"/>
    <files mask="enc-ec256-pub.pem"/>
    <files mask="enc-rsa2048-priv.pem"/>
    <files mask="enc-rsa2048-pub.pem"/>
    <files mask="enc-x25519-priv.pem"/>
    <files mask="enc-x25519-pub.pem"/>
    <files mask="go.mod"/>
    <files mask="project.yml"/>
    <files mask="repository.yml"/>
    <files mask="root-ec-p256-pkcs8.pem"/>
    <files mask="root-ec-p256.pem"/>
    <files mask="root-ec-p384-pkcs8.pem"/>
    <files mask="root-ec-p384.pem"/>
    <files mask="root-ed25519.pem"/>
    <files mask="root-rsa-2048.pem"/>
    <files mask="root-rsa-3072.pem"/>
  </source>
  <source relative_path="./" type="doc">
    <files mask="ChangeLogKSDK.txt"/>
    <files mask="SW-Content-Register.txt"/>
  </source>
  <source relative_path="boot/boot_serial/include/boot_serial" type="c_include">
    <files mask="boot_serial.h"/>
    <files mask="boot_serial_encryption.h"/>
  </source>
  <source relative_path="boot/boot_serial" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
  </source>
  <source relative_path="boot/boot_serial/src" type="src">
    <files mask="boot_serial.c"/>
    <files mask="boot_serial_encryption.c"/>
    <files mask="zcbor_bulk.c"/>
  </source>
  <source relative_path="boot/boot_serial/src" type="c_include">
    <files mask="boot_serial_priv.h"/>
    <files mask="zcbor_bulk.h"/>
  </source>
  <source relative_path="boot/boot_serial/test" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
  </source>
  <source relative_path="boot/boot_serial/test/src" type="src">
    <files mask="boot_test.c"/>
  </source>
  <source relative_path="boot/boot_serial/test/src" type="c_include">
    <files mask="boot_test.h"/>
  </source>
  <source relative_path="boot/boot_serial/test/src/testcases" type="src">
    <files mask="boot_serial_empty_img_msg.c"/>
    <files mask="boot_serial_empty_msg.c"/>
    <files mask="boot_serial_img_msg.c"/>
    <files mask="boot_serial_setup.c"/>
    <files mask="boot_serial_upload_bigger_image.c"/>
  </source>
  <source relative_path="boot/bootutil" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="boot/bootutil" type="other">
    <files mask="pkg.yml"/>
  </source>
  <source relative_path="boot/bootutil/zephyr" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="boot/cypress" type="other">
    <files mask=".gitignore"/>
    <files mask="Makefile"/>
    <files mask="README.md"/>
  </source>
  <source relative_path="boot/cypress/BlinkyApp" type="script">
    <files mask="BlinkyApp.mk"/>
    <files mask="libs.mk"/>
  </source>
  <source relative_path="boot/cypress/BlinkyApp" type="debug">
    <files mask="BlinkyApp_CM4_Debug.launch"/>
  </source>
  <source relative_path="boot/cypress/BlinkyApp" type="other">
    <files mask="Readme.md"/>
  </source>
  <source relative_path="boot/cypress/BlinkyApp/linker" type="linker">
    <files mask="BlinkyApp_template.ld"/>
  </source>
  <source relative_path="boot/cypress/BlinkyApp" type="src">
    <files mask="main.c"/>
  </source>
  <source relative_path="boot/cypress/BlinkyApp" type="c_include">
    <files mask="main.h"/>
  </source>
  <source relative_path="boot/cypress/MCUBootApp" type="other">
    <files mask="ExternalMemory.md"/>
    <files mask="README.md"/>
  </source>
  <source relative_path="boot/cypress/MCUBootApp" type="linker">
    <files mask="MCUBootApp.ld"/>
  </source>
  <source relative_path="boot/cypress/MCUBootApp" type="script">
    <files mask="MCUBootApp.mk"/>
    <files mask="libs.mk"/>
  </source>
  <source relative_path="boot/cypress/MCUBootApp" type="debug">
    <files mask="MCUBootApp_CM0P_Debug.launch"/>
  </source>
  <source relative_path="boot/cypress/MCUBootApp/config/mcuboot_config" type="c_include">
    <files mask="mcuboot_assert.h"/>
    <files mask="mcuboot_config.h"/>
    <files mask="mcuboot_logging.h"/>
  </source>
  <source relative_path="boot/cypress/MCUBootApp/config" type="c_include">
    <files mask="mcuboot_crypto_acc_config.h"/>
    <files mask="mcuboot_crypto_config.h"/>
  </source>
  <source relative_path="boot/cypress/MCUBootApp" type="src">
    <files mask="cy_security_cnt.c"/>
    <files mask="cy_serial_flash_prog.c"/>
    <files mask="keys.c"/>
    <files mask="main.c"/>
  </source>
  <source relative_path="boot/cypress/MCUBootApp/os" type="c_include">
    <files mask="os.h"/>
    <files mask="os_heap.h"/>
    <files mask="os_malloc.h"/>
  </source>
  <source relative_path="boot/cypress/MCUBootApp/sysflash" type="c_include">
    <files mask="sysflash.h"/>
  </source>
  <source relative_path="boot/cypress" type="script">
    <files mask="common_libs.mk"/>
    <files mask="host.mk"/>
    <files mask="platforms.mk"/>
    <files mask="toolchains.mk"/>
  </source>
  <source relative_path="boot/cypress/cy_flash_pal" type="src">
    <files mask="cy_flash_map.c"/>
    <files mask="cy_smif_psoc6.c"/>
  </source>
  <source relative_path="boot/cypress/cy_flash_pal/flash_qspi" type="src">
    <files mask="flash_qspi.c"/>
  </source>
  <source relative_path="boot/cypress/cy_flash_pal/flash_qspi" type="c_include">
    <files mask="flash_qspi.h"/>
  </source>
  <source relative_path="boot/cypress/cy_flash_pal/include" type="c_include">
    <files mask="cy_smif_psoc6.h"/>
  </source>
  <source relative_path="boot/cypress/cy_flash_pal/include/flash_map_backend" type="c_include">
    <files mask="flash_map_backend.h"/>
  </source>
  <source relative_path="boot/cypress/keys" type="other">
    <files mask="cypress-test-ec-p256.pem"/>
    <files mask="cypress-test-ec-p256.pub"/>
  </source>
  <source relative_path="boot/cypress/libs/retarget_io_pdl" type="src">
    <files mask="cy_retarget_io_pdl.c"/>
  </source>
  <source relative_path="boot/cypress/libs/retarget_io_pdl" type="c_include">
    <files mask="cy_retarget_io_pdl.h"/>
  </source>
  <source relative_path="boot/cypress/libs/watchdog" type="src">
    <files mask="watchdog.c"/>
  </source>
  <source relative_path="boot/cypress/libs/watchdog" type="c_include">
    <files mask="watchdog.h"/>
  </source>
  <source relative_path="boot/cypress/platforms/PSOC_062_2M/CM0P/GCC_ARM" type="linker">
    <files mask="cy8c6xxa_cm0plus.ld"/>
  </source>
  <source relative_path="boot/cypress/platforms/PSOC_062_2M/CM0P/GCC_ARM" type="other">
    <files mask="startup_psoc6_02_cm0plus.S"/>
  </source>
  <source relative_path="boot/cypress/platforms/PSOC_062_2M/CM4/GCC_ARM" type="linker">
    <files mask="cy8c6xxa_cm4_dual.ld"/>
  </source>
  <source relative_path="boot/cypress/platforms/PSOC_062_2M/CM4/GCC_ARM" type="other">
    <files mask="startup_psoc6_02_cm4.S"/>
  </source>
  <source relative_path="boot/cypress/platforms" type="src">
    <files mask="cycfg.c"/>
    <files mask="cycfg_clocks.c"/>
    <files mask="cycfg_peripherals.c"/>
    <files mask="cycfg_pins.c"/>
    <files mask="cycfg_routing.c"/>
    <files mask="cycfg_system.c"/>
  </source>
  <source relative_path="boot/cypress/platforms" type="c_include">
    <files mask="cycfg.h"/>
    <files mask="cycfg_clocks.h"/>
    <files mask="cycfg_peripherals.h"/>
    <files mask="cycfg_pins.h"/>
    <files mask="cycfg_routing.h"/>
    <files mask="cycfg_system.h"/>
  </source>
  <source relative_path="boot/cypress/platforms/retarget_io_pdl" type="src">
    <files mask="cy_retarget_io_pdl.c"/>
  </source>
  <source relative_path="boot/cypress/platforms/retarget_io_pdl" type="c_include">
    <files mask="cy_retarget_io_pdl.h"/>
  </source>
  <source relative_path="boot/espressif" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="boot/espressif/ci_configs" type="other">
    <files mask="multi-boot.conf"/>
    <files mask="multi-image.conf"/>
    <files mask="secureboot-sign-ec256.conf"/>
    <files mask="secureboot-sign-ed25519.conf"/>
    <files mask="secureboot-sign-rsa2048.conf"/>
    <files mask="secureboot-sign-rsa3072.conf"/>
    <files mask="serialrecovery.conf"/>
  </source>
  <source relative_path="boot/espressif/hal" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="boot/espressif/hal/include" type="c_include">
    <files mask="app_cpu_start.h"/>
    <files mask="bootloader_wdt.h"/>
    <files mask="esp_log.h"/>
    <files mask="esp_mcuboot_image.h"/>
    <files mask="soc_log.h"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32" type="script">
    <files mask="esp32.cmake"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32" type="c_include">
    <files mask="sdkconfig.h"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32c2" type="script">
    <files mask="esp32c2.cmake"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32c2" type="c_include">
    <files mask="sdkconfig.h"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32c3" type="script">
    <files mask="esp32c3.cmake"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32c3" type="c_include">
    <files mask="sdkconfig.h"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32c6" type="script">
    <files mask="esp32c6.cmake"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32c6" type="c_include">
    <files mask="sdkconfig.h"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32h2" type="script">
    <files mask="esp32h2.cmake"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32h2" type="c_include">
    <files mask="sdkconfig.h"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32s2" type="script">
    <files mask="esp32s2.cmake"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32s2" type="c_include">
    <files mask="sdkconfig.h"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32s3" type="script">
    <files mask="esp32s3.cmake"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32s3" type="c_include">
    <files mask="sdkconfig.h"/>
  </source>
  <source relative_path="boot/espressif/hal/include/mcuboot_config" type="c_include">
    <files mask="mcuboot_assert.h"/>
    <files mask="mcuboot_config.h"/>
    <files mask="mcuboot_logging.h"/>
  </source>
  <source relative_path="boot/espressif/hal/src" type="src">
    <files mask="bootloader_banner.c"/>
    <files mask="bootloader_wdt.c"/>
    <files mask="flash_encrypt.c"/>
    <files mask="secure_boot.c"/>
  </source>
  <source relative_path="boot/espressif/hal/src/esp32" type="src">
    <files mask="app_cpu_start.c"/>
    <files mask="console_uart_custom.c"/>
  </source>
  <source relative_path="boot/espressif/hal/src/esp32c2" type="src">
    <files mask="console_uart_custom.c"/>
  </source>
  <source relative_path="boot/espressif/hal/src/esp32c3" type="src">
    <files mask="console_uart_custom.c"/>
  </source>
  <source relative_path="boot/espressif/hal/src/esp32c6" type="src">
    <files mask="console_uart_custom.c"/>
  </source>
  <source relative_path="boot/espressif/hal/src/esp32h2" type="src">
    <files mask="console_uart_custom.c"/>
  </source>
  <source relative_path="boot/espressif/hal/src/esp32s3" type="src">
    <files mask="app_cpu_start.c"/>
  </source>
  <source relative_path="boot/espressif/include/crypto_config" type="script">
    <files mask="ec256.cmake"/>
    <files mask="ed25519.cmake"/>
    <files mask="rsa.cmake"/>
  </source>
  <source relative_path="boot/espressif/include/crypto_config" type="c_include">
    <files mask="mbedtls_custom_config.h"/>
  </source>
  <source relative_path="boot/espressif/include" type="c_include">
    <files mask="esp_loader.h"/>
  </source>
  <source relative_path="boot/espressif/include/flash_map_backend" type="c_include">
    <files mask="flash_map_backend.h"/>
  </source>
  <source relative_path="boot/espressif/include/os" type="c_include">
    <files mask="os.h"/>
    <files mask="os_malloc.h"/>
  </source>
  <source relative_path="boot/espressif/include/serial_adapter" type="c_include">
    <files mask="serial_adapter.h"/>
  </source>
  <source relative_path="boot/espressif/include/sysflash" type="c_include">
    <files mask="sysflash.h"/>
  </source>
  <source relative_path="boot/espressif" type="src">
    <files mask="keys.c"/>
    <files mask="main.c"/>
    <files mask="os.c"/>
  </source>
  <source relative_path="boot/espressif/port/esp32" type="other">
    <files mask="bootloader-multi.conf"/>
    <files mask="bootloader.conf"/>
  </source>
  <source relative_path="boot/espressif/port/esp32/ld" type="linker">
    <files mask="bootloader.ld"/>
  </source>
  <source relative_path="boot/espressif/port/esp32" type="src">
    <files mask="serial_adapter.c"/>
  </source>
  <source relative_path="boot/espressif/port/esp32c2" type="other">
    <files mask="bootloader.conf"/>
  </source>
  <source relative_path="boot/espressif/port/esp32c2/ld" type="linker">
    <files mask="bootloader.ld"/>
  </source>
  <source relative_path="boot/espressif/port/esp32c2" type="src">
    <files mask="serial_adapter.c"/>
  </source>
  <source relative_path="boot/espressif/port/esp32c3" type="other">
    <files mask="bootloader.conf"/>
  </source>
  <source relative_path="boot/espressif/port/esp32c3/ld" type="linker">
    <files mask="bootloader.ld"/>
  </source>
  <source relative_path="boot/espressif/port/esp32c3" type="src">
    <files mask="serial_adapter.c"/>
  </source>
  <source relative_path="boot/espressif/port/esp32c6" type="other">
    <files mask="bootloader.conf"/>
  </source>
  <source relative_path="boot/espressif/port/esp32c6/ld" type="linker">
    <files mask="bootloader.ld"/>
  </source>
  <source relative_path="boot/espressif/port/esp32c6" type="src">
    <files mask="serial_adapter.c"/>
  </source>
  <source relative_path="boot/espressif/port/esp32h2" type="other">
    <files mask="bootloader.conf"/>
  </source>
  <source relative_path="boot/espressif/port/esp32h2/ld" type="linker">
    <files mask="bootloader.ld"/>
  </source>
  <source relative_path="boot/espressif/port/esp32h2" type="src">
    <files mask="serial_adapter.c"/>
  </source>
  <source relative_path="boot/espressif/port/esp32s2" type="other">
    <files mask="bootloader.conf"/>
  </source>
  <source relative_path="boot/espressif/port/esp32s2/ld" type="linker">
    <files mask="bootloader.ld"/>
  </source>
  <source relative_path="boot/espressif/port/esp32s2" type="src">
    <files mask="serial_adapter.c"/>
  </source>
  <source relative_path="boot/espressif/port/esp32s3" type="other">
    <files mask="bootloader-multi.conf"/>
    <files mask="bootloader.conf"/>
  </source>
  <source relative_path="boot/espressif/port/esp32s3/ld" type="linker">
    <files mask="bootloader.ld"/>
  </source>
  <source relative_path="boot/espressif/port/esp32s3" type="src">
    <files mask="serial_adapter.c"/>
  </source>
  <source relative_path="boot/espressif/port" type="src">
    <files mask="esp_loader.c"/>
    <files mask="esp_mcuboot.c"/>
  </source>
  <source relative_path="boot/espressif/tools" type="script">
    <files mask="toolchain-esp32.cmake"/>
    <files mask="toolchain-esp32c2.cmake"/>
    <files mask="toolchain-esp32c3.cmake"/>
    <files mask="toolchain-esp32c6.cmake"/>
    <files mask="toolchain-esp32h2.cmake"/>
    <files mask="toolchain-esp32s2.cmake"/>
    <files mask="toolchain-esp32s3.cmake"/>
    <files mask="utils.cmake"/>
  </source>
  <source relative_path="boot/mbed" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="boot/mbed" type="src">
    <files mask="app_enc_keys.c"/>
    <files mask="mcuboot_main.cpp"/>
  </source>
  <source relative_path="boot/mbed/include/flash_map_backend" type="c_include">
    <files mask="flash_map_backend.h"/>
    <files mask="secondary_bd.h"/>
  </source>
  <source relative_path="boot/mbed/include/mcuboot_config" type="c_include">
    <files mask="mcuboot_assert.h"/>
    <files mask="mcuboot_config.h"/>
    <files mask="mcuboot_logging.h"/>
  </source>
  <source relative_path="boot/mbed/include/os" type="c_include">
    <files mask="os_malloc.h"/>
  </source>
  <source relative_path="boot/mbed/include/sysflash" type="c_include">
    <files mask="sysflash.h"/>
  </source>
  <source relative_path="boot/mbed/include/utils" type="src">
    <files mask="DataShare.cpp"/>
  </source>
  <source relative_path="boot/mbed/include/utils" type="c_include">
    <files mask="DataShare.h"/>
  </source>
  <source relative_path="boot/mbed" type="other">
    <files mask="mbed_lib.json"/>
  </source>
  <source relative_path="boot/mbed/src" type="src">
    <files mask="flash_map_backend.cpp"/>
    <files mask="secondary_bd.cpp"/>
  </source>
  <source relative_path="boot/mynewt" type="other">
    <files mask="README.md"/>
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
  </source>
  <source relative_path="boot/mynewt/boot_uart/include/boot_uart" type="c_include">
    <files mask="boot_uart.h"/>
  </source>
  <source relative_path="boot/mynewt/boot_uart" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
  </source>
  <source relative_path="boot/mynewt/boot_uart/src" type="src">
    <files mask="boot_uart.c"/>
  </source>
  <source relative_path="boot/mynewt/flash_map_backend/include/flash_map_backend" type="c_include">
    <files mask="flash_map_backend.h"/>
  </source>
  <source relative_path="boot/mynewt/flash_map_backend" type="other">
    <files mask="pkg.yml"/>
  </source>
  <source relative_path="boot/mynewt/flash_map_backend/src" type="src">
    <files mask="flash_map_extended.c"/>
  </source>
  <source relative_path="boot/mynewt/mcuboot_config/include/mcuboot_config" type="c_include">
    <files mask="mcuboot_config.h"/>
    <files mask="mcuboot_logging.h"/>
  </source>
  <source relative_path="boot/mynewt/mcuboot_config" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
  </source>
  <source relative_path="boot/mynewt/src" type="src">
    <files mask="main.c"/>
  </source>
  <source relative_path="boot/nuttx/include/flash_map_backend" type="c_include">
    <files mask="flash_map_backend.h"/>
  </source>
  <source relative_path="boot/nuttx/include/mcuboot_config" type="c_include">
    <files mask="mcuboot_config.h"/>
    <files mask="mcuboot_logging.h"/>
  </source>
  <source relative_path="boot/nuttx/include/os" type="c_include">
    <files mask="os_malloc.h"/>
  </source>
  <source relative_path="boot/nuttx/include/sysflash" type="c_include">
    <files mask="sysflash.h"/>
  </source>
  <source relative_path="boot/nuttx/include/watchdog" type="c_include">
    <files mask="watchdog.h"/>
  </source>
  <source relative_path="boot/nuttx" type="src">
    <files mask="main.c"/>
  </source>
  <source relative_path="boot/nuttx/src/flash_map_backend" type="src">
    <files mask="flash_map_backend.c"/>
  </source>
  <source relative_path="boot/nuttx/src/watchdog" type="src">
    <files mask="watchdog.c"/>
  </source>
  <source relative_path="boot/zcbor" type="script">
    <files mask="add_zcbor_copy_version.sh"/>
  </source>
  <source relative_path="boot/zcbor/include" type="c_include">
    <files mask="zcbor_common.h"/>
    <files mask="zcbor_debug.h"/>
    <files mask="zcbor_decode.h"/>
    <files mask="zcbor_encode.h"/>
  </source>
  <source relative_path="boot/zcbor" type="other">
    <files mask="pkg.yml"/>
  </source>
  <source relative_path="boot/zcbor/src" type="src">
    <files mask="zcbor_common.c"/>
    <files mask="zcbor_decode.c"/>
    <files mask="zcbor_encode.c"/>
  </source>
  <source relative_path="boot/zephyr" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="boot/zephyr" type="other">
    <files mask="Kconfig"/>
    <files mask="Kconfig.serial_recovery"/>
    <files mask="VERSION"/>
    <files mask="app.overlay"/>
    <files mask="nrf52840dk_nrf52840_cc310_ecdsa.conf"/>
    <files mask="prj.conf"/>
    <files mask="ram_load.conf"/>
    <files mask="sample.yaml"/>
    <files mask="serial_recovery.conf"/>
    <files mask="single_slot.conf"/>
    <files mask="usb_cdc_acm.overlay"/>
    <files mask="usb_cdc_acm_log_recovery.conf"/>
  </source>
  <source relative_path="boot/zephyr" type="src">
    <files mask="arm_cleanup.c"/>
    <files mask="boot_serial_extension_zephyr_basic.c"/>
    <files mask="boot_serial_extensions.c"/>
    <files mask="flash_map_extended.c"/>
    <files mask="flash_map_legacy.c"/>
    <files mask="hooks_sample.c"/>
    <files mask="keys.c"/>
    <files mask="main.c"/>
    <files mask="os.c"/>
    <files mask="serial_adapter.c"/>
    <files mask="shared_data.c"/>
    <files mask="single_loader.c"/>
  </source>
  <source relative_path="boot/zephyr/boards" type="other">
    <files mask="actinius_icarus.conf"/>
    <files mask="bl5340_dvk_cpuapp.conf"/>
    <files mask="circuitdojo_feather_nrf9160.conf"/>
    <files mask="conexio_stratus.conf"/>
    <files mask="disco_l475_iot1.conf"/>
    <files mask="esp32_devkitc_wroom.conf"/>
    <files mask="esp32_devkitc_wrover.conf"/>
    <files mask="esp32_ethernet_kit.conf"/>
    <files mask="esp32c3_devkitm.conf"/>
    <files mask="esp32s2_franzininho.conf"/>
    <files mask="esp32s2_saola.conf"/>
    <files mask="esp32s3_devkitm.conf"/>
    <files mask="esp_wrover_kit.conf"/>
    <files mask="flash_sim_driver.conf"/>
    <files mask="frdm_k64f.conf"/>
    <files mask="heltec_wifi_lora32_v2.conf"/>
    <files mask="icev_wireless.conf"/>
    <files mask="intel_s1000_crb.conf"/>
    <files mask="intel_s1000_crb.overlay"/>
    <files mask="lpcxpresso55s06.conf"/>
    <files mask="lpcxpresso55s16.conf"/>
    <files mask="lpcxpresso55s36.conf"/>
    <files mask="lpcxpresso55s69_cpu0.conf"/>
    <files mask="m5stickc_plus.conf"/>
    <files mask="mimxrt1020_evk.conf"/>
    <files mask="mimxrt1024_evk.conf"/>
    <files mask="mimxrt1050_evk_qspi.conf"/>
    <files mask="mimxrt1060_evk.conf"/>
    <files mask="mimxrt1060_evkb.conf"/>
    <files mask="mimxrt1064_evk.conf"/>
    <files mask="mimxrt1160_evk_cm7.conf"/>
    <files mask="mimxrt1170_evk_cm7.conf"/>
    <files mask="mimxrt595_evk_cm33.conf"/>
    <files mask="mimxrt685_evk_cm33.conf"/>
    <files mask="nrf51dk_nrf51422.conf"/>
    <files mask="nrf52840_big.overlay"/>
    <files mask="nrf52840_single_slot.overlay"/>
    <files mask="nrf52840dk_hooks_sample_overlay.conf"/>
    <files mask="nrf52840dk_nrf52840.conf"/>
    <files mask="nrf52840dk_qspi_nor.conf"/>
    <files mask="nrf52840dk_qspi_nor_secondary.overlay"/>
    <files mask="nrf52840dk_qspi_secondary_boot.conf"/>
    <files mask="nrf52840dk_ram.overlay"/>
    <files mask="nrf52840dk_ram_multi.overlay"/>
    <files mask="nrf52840dongle_nrf52840.conf"/>
    <files mask="nrf52_minimal_footprint.conf"/>
    <files mask="odroid_go.conf"/>
    <files mask="olimex_esp32_evb.conf"/>
    <files mask="pinnacle_100_dvk.conf"/>
    <files mask="sparkfun_thing_plus_nrf9160.conf"/>
    <files mask="stamp_c3.conf"/>
    <files mask="tlsr9518adk80d.conf"/>
    <files mask="xiao_esp32c3.conf"/>
  </source>
  <source relative_path="boot/zephyr/include" type="c_include">
    <files mask="arm_cleanup.h"/>
    <files mask="config-asn1.h"/>
    <files mask="config-ec.h"/>
    <files mask="config-ed25519.h"/>
    <files mask="config-kw.h"/>
    <files mask="config-rsa-kw.h"/>
    <files mask="config-rsa.h"/>
    <files mask="mcuboot-mbedtls-cfg.h"/>
    <files mask="platform-bench.h"/>
    <files mask="target.h"/>
  </source>
  <source relative_path="boot/zephyr/include/boot_serial" type="linker">
    <files mask="boot_serial.ld"/>
  </source>
  <source relative_path="boot/zephyr/include/boot_serial" type="c_include">
    <files mask="boot_serial_extensions.h"/>
  </source>
  <source relative_path="boot/zephyr/include/flash_map_backend" type="c_include">
    <files mask="flash_map_backend.h"/>
  </source>
  <source relative_path="boot/zephyr/include/hal" type="c_include">
    <files mask="hal_bsp.h"/>
    <files mask="hal_flash.h"/>
  </source>
  <source relative_path="boot/zephyr/include/mcuboot_config" type="c_include">
    <files mask="mcuboot_config.h"/>
    <files mask="mcuboot_logging.h"/>
  </source>
  <source relative_path="boot/zephyr/include/os" type="c_include">
    <files mask="os.h"/>
    <files mask="os_heap.h"/>
    <files mask="os_malloc.h"/>
  </source>
  <source relative_path="boot/zephyr/include/serial_adapter" type="c_include">
    <files mask="serial_adapter.h"/>
  </source>
  <source relative_path="boot/zephyr/include/sysflash" type="c_include">
    <files mask="sysflash.h"/>
  </source>
  <source relative_path="boot/zephyr/targets" type="c_include">
    <files mask="arduino_101.h"/>
  </source>
  <source relative_path="ci" type="script">
    <files mask="check-signed-off-by.sh"/>
    <files mask="compare_versions.py"/>
    <files mask="espressif_install.sh"/>
    <files mask="espressif_run.sh"/>
    <files mask="fih-tests_install.sh"/>
    <files mask="fih-tests_run.sh"/>
    <files mask="get_features.py"/>
    <files mask="imgtool_install.sh"/>
    <files mask="imgtool_run.sh"/>
    <files mask="mynewt_install.sh"/>
    <files mask="mynewt_run.sh"/>
    <files mask="sim_install.sh"/>
    <files mask="sim_run.sh"/>
  </source>
  <source relative_path="ci/fih_test_docker" type="script">
    <files mask="damage_image.py"/>
    <files mask="execute_test.sh"/>
    <files mask="fi_make_manifest.sh"/>
    <files mask="fi_tester_gdb.sh"/>
    <files mask="generate_test_report.py"/>
    <files mask="run_fi_test.sh"/>
    <files mask="utils.py"/>
    <files mask="validate_output.py"/>
  </source>
  <source relative_path="ci/fih_test_docker/docker-build" type="other">
    <files mask="Dockerfile"/>
  </source>
  <source relative_path="ci/fih_test_docker/docker-build" type="script">
    <files mask="build.sh"/>
  </source>
  <source relative_path="ci/mynewt_keys/enc_kw" type="other">
    <files mask="pkg.yml"/>
  </source>
  <source relative_path="ci/mynewt_keys/enc_kw/src" type="src">
    <files mask="keys.c"/>
  </source>
  <source relative_path="ci/mynewt_keys/enc_rsa" type="other">
    <files mask="pkg.yml"/>
  </source>
  <source relative_path="ci/mynewt_keys/enc_rsa/src" type="src">
    <files mask="keys.c"/>
  </source>
  <source relative_path="ci/mynewt_targets/basic" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
    <files mask="target.yml"/>
  </source>
  <source relative_path="ci/mynewt_targets/bootserial" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
    <files mask="target.yml"/>
  </source>
  <source relative_path="ci/mynewt_targets/ecdsa" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
    <files mask="target.yml"/>
  </source>
  <source relative_path="ci/mynewt_targets/ecdsa_kw" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
    <files mask="target.yml"/>
  </source>
  <source relative_path="ci/mynewt_targets/rsa" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
    <files mask="target.yml"/>
  </source>
  <source relative_path="ci/mynewt_targets/rsa_kw" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
    <files mask="target.yml"/>
  </source>
  <source relative_path="ci/mynewt_targets/rsa_overwriteonly" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
    <files mask="target.yml"/>
  </source>
  <source relative_path="ci/mynewt_targets/rsa_rsaoaep" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
    <files mask="target.yml"/>
  </source>
  <source relative_path="ci/mynewt_targets/rsa_rsaoaep_bootstrap" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
    <files mask="target.yml"/>
  </source>
  <source relative_path="ci/mynewt_targets/swap_move" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
    <files mask="target.yml"/>
  </source>
  <source relative_path="ci" type="doc">
    <files mask="requirements.txt"/>
  </source>
  <source relative_path="ext/fiat" type="other">
    <files mask="LICENSE"/>
    <files mask="METADATA"/>
    <files mask="README.chromium"/>
    <files mask="README.md"/>
    <files mask="pkg.yml"/>
  </source>
  <source relative_path="ext/fiat/src" type="src">
    <files mask="curve25519.c"/>
  </source>
  <source relative_path="ext/fiat/src" type="c_include">
    <files mask="curve25519.h"/>
    <files mask="curve25519_tables.h"/>
  </source>
  <source relative_path="ext/mbedtls-asn1" type="other">
    <files mask="README"/>
    <files mask="pkg.yml"/>
  </source>
  <source relative_path="ext/nrf" type="other">
    <files mask="README.md"/>
  </source>
  <source relative_path="ext/nrf" type="src">
    <files mask="cc310_glue.c"/>
  </source>
  <source relative_path="ext/nrf" type="c_include">
    <files mask="cc310_glue.h"/>
  </source>
  <source relative_path="ext/nxp_encrypted_xip/enc_xip_images" type="image">
    <files mask="three_slot_flow.jpg"/>
    <files mask="three_slot.jpg"/>
    <files mask="overwrite_only_flow.jpg"/>
    <files mask="overwrite_only.jpg"/>
    <files mask="keys_scheme.jpg"/>
    <files mask="iped_metadata.jpg"/>
    <files mask="general_metadata.jpg"/>
    <files mask="device_fleet_graph.jpg"/>
    <files mask="bee_rom_layout.jpg"/>
    <files mask="bee_metadata.jpg"/>
  </source>
  <source relative_path="ext/nxp_encrypted_xip" type="other">
    <files mask="mcuboot_encrypted_xip.md"/>
  </source>
  <source relative_path="ext/tinycrypt-sha512/lib/include/tinycrypt" type="c_include">
    <files mask="sha512.h"/>
  </source>
  <source relative_path="ext/tinycrypt-sha512/lib" type="other">
    <files mask="pkg.yml"/>
  </source>
  <source relative_path="ext/tinycrypt-sha512/lib/source" type="src">
    <files mask="sha512.c"/>
  </source>
  <source relative_path="ext/tinycrypt" type="other">
    <files mask=".gitignore"/>
    <files mask="AUTHORS"/>
    <files mask="LICENSE"/>
    <files mask="Makefile"/>
    <files mask="README"/>
    <files mask="VERSION"/>
  </source>
  <source relative_path="ext/tinycrypt" type="script">
    <files mask="config.mk"/>
  </source>
  <source relative_path="ext/tinycrypt/documentation" type="other">
    <files mask="tinycrypt.rst"/>
  </source>
  <source relative_path="ext/tinycrypt/lib" type="other">
    <files mask="Makefile"/>
    <files mask="pkg.yml"/>
  </source>
  <source relative_path="ext/tinycrypt/lib/include/tinycrypt" type="c_include">
    <files mask="ecc_dh.h"/>
  </source>
  <source relative_path="ext/tinycrypt/lib/source" type="src">
    <files mask="ecc_platform_specific.c"/>
    <files mask="ecc_dh.c"/>
  </source>
  <source relative_path="ext/tinycrypt/tests" type="other">
    <files mask="Makefile"/>
  </source>
  <source relative_path="ext/tinycrypt/tests/include" type="c_include">
    <files mask="test_ecc_utils.h"/>
    <files mask="test_utils.h"/>
  </source>
  <source relative_path="ext/tinycrypt/tests" type="binary">
    <files mask="pseudo-random-data.bin"/>
  </source>
  <source relative_path="ext/tinycrypt/tests" type="src">
    <files mask="test_aes.c"/>
    <files mask="test_cbc_mode.c"/>
    <files mask="test_ccm_mode.c"/>
    <files mask="test_cmac_mode.c"/>
    <files mask="test_ctr_mode.c"/>
    <files mask="test_ctr_prng.c"/>
    <files mask="test_ecc_dh.c"/>
    <files mask="test_ecc_dsa.c"/>
    <files mask="test_ecc_utils.c"/>
    <files mask="test_hmac.c"/>
    <files mask="test_hmac_prng.c"/>
    <files mask="test_sha256.c"/>
  </source>
  <source relative_path="ptest" type="other">
    <files mask=".gitignore"/>
    <files mask="Cargo.lock"/>
    <files mask="Cargo.toml"/>
  </source>
  <source relative_path="ptest/src" type="other">
    <files mask="main.rs"/>
  </source>
  <source relative_path="samples/mcuboot_config" type="c_include">
    <files mask="mcuboot_config.template.h"/>
  </source>
  <source relative_path="samples/zephyr" type="other">
    <files mask=".gitignore"/>
    <files mask="Makefile"/>
    <files mask="README.md"/>
    <files mask="overlay-ecdsa-p256.conf"/>
    <files mask="overlay-rsa.conf"/>
    <files mask="overlay-skip-primary-slot-validate.conf"/>
    <files mask="overlay-upgrade-only.conf"/>
    <files mask="run-tests.go"/>
    <files mask="test-compile.go"/>
  </source>
  <source relative_path="samples/zephyr/bad-keys" type="other">
    <files mask="README.md"/>
    <files mask="bad-ec-p256.pem"/>
    <files mask="bad-rsa-2048.pem"/>
  </source>
  <source relative_path="samples/zephyr" type="script">
    <files mask="build-boot.sh"/>
    <files mask="build-hello.sh"/>
    <files mask="run-tests.sh"/>
  </source>
  <source relative_path="samples/zephyr/hello-world" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="samples/zephyr/hello-world" type="other">
    <files mask="README.rst"/>
    <files mask="prj.conf"/>
    <files mask="sample.yaml"/>
  </source>
  <source relative_path="samples/zephyr/hello-world/boards" type="other">
    <files mask=".gitignore"/>
    <files mask="README.rst"/>
  </source>
  <source relative_path="samples/zephyr/hello-world/src" type="other">
    <files mask="Makefile"/>
  </source>
  <source relative_path="samples/zephyr/hello-world/src" type="src">
    <files mask="main.c"/>
  </source>
  <source relative_path="samples/zephyr/mcutests" type="other">
    <files mask="mcutests.go"/>
  </source>
  <source relative_path="sim" type="other">
    <files mask=".gitignore"/>
    <files mask="Cargo.toml"/>
    <files mask="README.rst"/>
  </source>
  <source relative_path="sim/mcuboot-sys" type="other">
    <files mask=".gitignore"/>
    <files mask="Cargo.toml"/>
    <files mask="build.rs"/>
  </source>
  <source relative_path="sim/mcuboot-sys/csupport" type="c_include">
    <files mask="bootsim.h"/>
    <files mask="config-add-psa-crypto.h"/>
    <files mask="config-asn1.h"/>
    <files mask="config-ec-psa.h"/>
    <files mask="config-ec.h"/>
    <files mask="config-ed25519.h"/>
    <files mask="config-kw.h"/>
    <files mask="config-rsa-kw.h"/>
    <files mask="config-rsa.h"/>
    <files mask="devicetree.h"/>
  </source>
  <source relative_path="sim/mcuboot-sys/csupport/flash_map_backend" type="c_include">
    <files mask="flash_map_backend.h"/>
  </source>
  <source relative_path="sim/mcuboot-sys/csupport" type="src">
    <files mask="keys.c"/>
    <files mask="psa_crypto_init_stub.c"/>
    <files mask="run.c"/>
    <files mask="security_cnt.c"/>
  </source>
  <source relative_path="sim/mcuboot-sys/csupport/mcuboot_config" type="c_include">
    <files mask="mcuboot_assert.h"/>
    <files mask="mcuboot_config.h"/>
    <files mask="mcuboot_logging.h"/>
  </source>
  <source relative_path="sim/mcuboot-sys/csupport/os" type="c_include">
    <files mask="os_heap.h"/>
    <files mask="os_malloc.h"/>
  </source>
  <source relative_path="sim/mcuboot-sys/csupport/storage" type="c_include">
    <files mask="flash_map.h"/>
  </source>
  <source relative_path="sim/mcuboot-sys/csupport/sysflash" type="c_include">
    <files mask="sysflash.h"/>
  </source>
  <source relative_path="sim/mcuboot-sys/src" type="other">
    <files mask="api.rs"/>
    <files mask="area.rs"/>
    <files mask="c.rs"/>
    <files mask="lib.rs"/>
  </source>
  <source relative_path="sim/simflash" type="other">
    <files mask=".gitignore"/>
    <files mask="Cargo.toml"/>
  </source>
  <source relative_path="sim/simflash/src" type="other">
    <files mask="lib.rs"/>
    <files mask="pdump.rs"/>
  </source>
  <source relative_path="sim/src" type="other">
    <files mask="caps.rs"/>
    <files mask="depends.rs"/>
    <files mask="image.rs"/>
    <files mask="lib.rs"/>
    <files mask="main.rs"/>
    <files mask="testlog.rs"/>
    <files mask="tlv.rs"/>
    <files mask="utils.rs"/>
  </source>
  <source relative_path="sim/src" type="doc">
    <files mask="ecdsa_pub_key-rs.txt"/>
    <files mask="ed25519_pub_key-rs.txt"/>
    <files mask="rsa3072_pub_key-rs.txt"/>
    <files mask="rsa_pub_key-rs.txt"/>
  </source>
  <source relative_path="sim/tests" type="other">
    <files mask="core.rs"/>
  </source>
  <source relative_path="testplan/mynewt" type="other">
    <files mask="Makefile"/>
    <files mask="key_ec.pem"/>
    <files mask="key_ec256.pem"/>
    <files mask="key_ec256_2.pem"/>
    <files mask="key_ec_2.pem"/>
    <files mask="key_rsa.pem"/>
    <files mask="key_rsa_2.pem"/>
    <files mask="project.yml"/>
  </source>
  <source relative_path="testplan/mynewt/apps/blinky" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
  </source>
  <source relative_path="testplan/mynewt/apps/blinky/src" type="src">
    <files mask="main.c"/>
  </source>
  <source relative_path="testplan/mynewt/apps/slinky" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
  </source>
  <source relative_path="testplan/mynewt/apps/slinky/src" type="src">
    <files mask="main.c"/>
    <files mask="random_data.c"/>
  </source>
  <source relative_path="testplan/mynewt/keys/ec256" type="other">
    <files mask="pkg.yml"/>
  </source>
  <source relative_path="testplan/mynewt/keys/ec256/src" type="src">
    <files mask="keys.c"/>
  </source>
  <source relative_path="testplan/mynewt/keys" type="other">
    <files mask="pkg.yml"/>
  </source>
  <source relative_path="testplan/mynewt/keys/rsa" type="other">
    <files mask="pkg.yml"/>
  </source>
  <source relative_path="testplan/mynewt/keys/rsa/src" type="src">
    <files mask="keys.c"/>
  </source>
  <source relative_path="zephyr" type="other">
    <files mask="module.yml"/>
  </source>
</component>-->
    <component id="middleware.mbedtls.port.els_option.MIMXRT1176" name="mbedtls_els_option" brief="mbedTLS port library for ELS" version="2.28.8" full_name="MbedTLS MCUX SDK port layer via ELS" category="Security/mbedTLS library" user_visible="true" type="middleware" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
    </component>
    <component id="middleware.mbedtls.port.ksdk_option.MIMXRT1176" name="mbedtls_ksdk_option" brief="mbedTLS port library for KPSDK" version="2.28.8" full_name="MbedTLS MCUX SDK port layer option" category="Security/mbedTLS library" user_visible="true" type="middleware" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
    </component>
    <!--<component id="container.middleware.mbedtls.unused_files.MIMXRT1176" name="unused_files" version="2.28.8" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
  <source exclude="true" relative_path=".github" type="other">
    <files mask="issue_template.md" hidden="true"/>
    <files mask="pull_request_template.md" hidden="true"/>
  </source>
  <source exclude="true" relative_path="3rdparty" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="3rdparty" type="asm_include">
    <files mask="Makefile.inc" hidden="true"/>
  </source>
  <source exclude="true" relative_path="ChangeLog.d" type="other">
    <files mask="00README.md" hidden="true"/>
  </source>
  <source exclude="true" relative_path="configs" type="doc">
    <files mask="README.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="configs" type="c_include">
    <files mask="config-ccm-psk-dtls1_2.h" hidden="true"/>
    <files mask="config-ccm-psk-tls1_2.h" hidden="true"/>
    <files mask="config-mini-tls1_1.h" hidden="true"/>
    <files mask="config-no-entropy.h" hidden="true"/>
    <files mask="config-suite-b.h" hidden="true"/>
    <files mask="config-symmetric-only.h" hidden="true"/>
    <files mask="config-thread.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="docs" type="script">
    <files mask="conf.py" hidden="true"/>
  </source>
  <source exclude="true" relative_path="docs" type="other">
    <files mask="index.rst" hidden="true"/>
    <files mask="requirements.in" hidden="true"/>
    <files mask="use-psa-crypto.md" hidden="true"/>
  </source>
  <source exclude="true" relative_path="docs" type="doc">
    <files mask="requirements.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="doxygen" type="other">
    <files mask="mbedtls.doxyfile" hidden="true"/>
  </source>
  <source exclude="true" relative_path="doxygen/input" type="c_include">
    <files mask="doc_encdec.h" hidden="true"/>
    <files mask="doc_hashing.h" hidden="true"/>
    <files mask="doc_mainpage.h" hidden="true"/>
    <files mask="doc_rng.h" hidden="true"/>
    <files mask="doc_ssltls.h" hidden="true"/>
    <files mask="doc_tcpip.h" hidden="true"/>
    <files mask="doc_x509.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="include" type="other">
    <files mask=".gitignore" hidden="true"/>
  </source>
  <source exclude="true" relative_path="include" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="library" type="other">
    <files mask=".gitignore" hidden="true"/>
    <files mask="Makefile" hidden="true"/>
  </source>
  <source exclude="true" relative_path="library" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="pkgconfig" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="pkgconfig" type="script">
    <files mask="JoinPaths.cmake" hidden="true"/>
  </source>
  <source exclude="true" relative_path="pkgconfig" type="other">
    <files mask="mbedcrypto.pc.in" hidden="true"/>
    <files mask="mbedtls.pc.in" hidden="true"/>
    <files mask="mbedx509.pc.in" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs" type="other">
    <files mask="README.md" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs" type="script">
    <files mask="demo_common.sh" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs" type="src">
    <files mask="wince_main.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/aes" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/aes" type="src">
    <files mask="crypt_and_hash.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/fuzz" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/fuzz" type="other">
    <files mask="README.md" hidden="true"/>
    <files mask="fuzz_client.options" hidden="true"/>
    <files mask="fuzz_dtlsclient.options" hidden="true"/>
    <files mask="fuzz_dtlsserver.options" hidden="true"/>
    <files mask="fuzz_privkey.options" hidden="true"/>
    <files mask="fuzz_pubkey.options" hidden="true"/>
    <files mask="fuzz_server.options" hidden="true"/>
    <files mask="fuzz_x509crl.options" hidden="true"/>
    <files mask="fuzz_x509crt.options" hidden="true"/>
    <files mask="fuzz_x509csr.options" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/fuzz" type="src">
    <files mask="common.c" hidden="true"/>
    <files mask="fuzz_client.c" hidden="true"/>
    <files mask="fuzz_dtlsclient.c" hidden="true"/>
    <files mask="fuzz_dtlsserver.c" hidden="true"/>
    <files mask="fuzz_privkey.c" hidden="true"/>
    <files mask="fuzz_pubkey.c" hidden="true"/>
    <files mask="fuzz_server.c" hidden="true"/>
    <files mask="fuzz_x509crl.c" hidden="true"/>
    <files mask="fuzz_x509crt.c" hidden="true"/>
    <files mask="fuzz_x509csr.c" hidden="true"/>
    <files mask="onefile.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/fuzz" type="c_include">
    <files mask="common.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/hash" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/hash" type="src">
    <files mask="generic_sum.c" hidden="true"/>
    <files mask="hello.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/pkey" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
    <files mask="dh_prime.txt" hidden="true"/>
    <files mask="rsa_priv.txt" hidden="true"/>
    <files mask="rsa_pub.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/pkey" type="src">
    <files mask="dh_client.c" hidden="true"/>
    <files mask="dh_genprime.c" hidden="true"/>
    <files mask="dh_server.c" hidden="true"/>
    <files mask="ecdh_curve25519.c" hidden="true"/>
    <files mask="ecdsa.c" hidden="true"/>
    <files mask="gen_key.c" hidden="true"/>
    <files mask="key_app.c" hidden="true"/>
    <files mask="key_app_writer.c" hidden="true"/>
    <files mask="mpi_demo.c" hidden="true"/>
    <files mask="pk_decrypt.c" hidden="true"/>
    <files mask="pk_encrypt.c" hidden="true"/>
    <files mask="pk_sign.c" hidden="true"/>
    <files mask="pk_verify.c" hidden="true"/>
    <files mask="rsa_decrypt.c" hidden="true"/>
    <files mask="rsa_encrypt.c" hidden="true"/>
    <files mask="rsa_genkey.c" hidden="true"/>
    <files mask="rsa_sign.c" hidden="true"/>
    <files mask="rsa_sign_pss.c" hidden="true"/>
    <files mask="rsa_verify.c" hidden="true"/>
    <files mask="rsa_verify_pss.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/random" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/random" type="src">
    <files mask="gen_entropy.c" hidden="true"/>
    <files mask="gen_random_ctr_drbg.c" hidden="true"/>
    <files mask="gen_random_havege.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/ssl" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/ssl" type="src">
    <files mask="dtls_client.c" hidden="true"/>
    <files mask="dtls_server.c" hidden="true"/>
    <files mask="mini_client.c" hidden="true"/>
    <files mask="ssl_client1.c" hidden="true"/>
    <files mask="ssl_client2.c" hidden="true"/>
    <files mask="ssl_context_info.c" hidden="true"/>
    <files mask="ssl_fork_server.c" hidden="true"/>
    <files mask="ssl_mail_client.c" hidden="true"/>
    <files mask="ssl_pthread_server.c" hidden="true"/>
    <files mask="ssl_server.c" hidden="true"/>
    <files mask="ssl_server2.c" hidden="true"/>
    <files mask="ssl_test_common_source.c" hidden="true"/>
    <files mask="ssl_test_lib.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/ssl" type="c_include">
    <files mask="ssl_test_lib.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/test" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/test" type="src">
    <files mask="benchmark.c" hidden="true"/>
    <files mask="dlopen.c" hidden="true"/>
    <files mask="metatest.c" hidden="true"/>
    <files mask="query_compile_time_config.c" hidden="true"/>
    <files mask="query_config.c" hidden="true"/>
    <files mask="selftest.c" hidden="true"/>
    <files mask="udp_proxy.c" hidden="true"/>
    <files mask="zeroize.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/test" type="script">
    <files mask="dlopen_demo.sh" hidden="true"/>
    <files mask="generate_cpp_dummy_build.sh" hidden="true"/>
    <files mask="udp_proxy_wrapper.sh" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/test" type="c_include">
    <files mask="query_config.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/util" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/util" type="src">
    <files mask="pem2der.c" hidden="true"/>
    <files mask="strerror.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/x509" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/x509" type="src">
    <files mask="cert_app.c" hidden="true"/>
    <files mask="cert_req.c" hidden="true"/>
    <files mask="cert_write.c" hidden="true"/>
    <files mask="crl_app.c" hidden="true"/>
    <files mask="load_roots.c" hidden="true"/>
    <files mask="req_app.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="scripts" type="script">
    <files mask="abi_check.py" hidden="true"/>
    <files mask="apidoc_full.sh" hidden="true"/>
    <files mask="assemble_changelog.py" hidden="true"/>
    <files mask="bump_version.sh" hidden="true"/>
    <files mask="code_style.py" hidden="true"/>
    <files mask="config.py" hidden="true"/>
    <files mask="ecc-heap.sh" hidden="true"/>
    <files mask="footprint.sh" hidden="true"/>
    <files mask="generate_psa_constants.py" hidden="true"/>
    <files mask="lcov.sh" hidden="true"/>
    <files mask="memory.sh" hidden="true"/>
    <files mask="min_requirements.py" hidden="true"/>
    <files mask="output_env.sh" hidden="true"/>
    <files mask="tmp_ignore_makefiles.sh" hidden="true"/>
    <files mask="windows_msbuild.bat" hidden="true"/>
  </source>
  <source exclude="true" relative_path="scripts" type="doc">
    <files mask="ci.requirements.txt" hidden="true"/>
    <files mask="maintainer.requirements.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="scripts" type="other">
    <files mask="config.pl" hidden="true"/>
    <files mask="generate_errors.pl" hidden="true"/>
    <files mask="generate_features.pl" hidden="true"/>
    <files mask="generate_query_config.pl" hidden="true"/>
    <files mask="generate_visualc_files.pl" hidden="true"/>
    <files mask="massif_max.pl" hidden="true"/>
    <files mask="rename.pl" hidden="true"/>
  </source>
  <source exclude="true" relative_path="scripts/data_files" type="other">
    <files mask="error.fmt" hidden="true"/>
    <files mask="query_config.fmt" hidden="true"/>
    <files mask="version_features.fmt" hidden="true"/>
    <files mask="vs2010-app-template.vcxproj" hidden="true"/>
    <files mask="vs2010-main-template.vcxproj" hidden="true"/>
    <files mask="vs2010-sln-template.sln" hidden="true"/>
    <files mask="vs6-app-template.dsp" hidden="true"/>
    <files mask="vs6-main-template.dsp" hidden="true"/>
    <files mask="vs6-workspace-template.dsw" hidden="true"/>
  </source>
  <source exclude="true" relative_path="scripts/data_files" type="doc">
    <files mask="rename-1.3-2.0.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="scripts/mbedtls_dev" type="script">
    <files mask="__init__.py" hidden="true"/>
    <files mask="asymmetric_key_data.py" hidden="true"/>
    <files mask="build_tree.py" hidden="true"/>
    <files mask="c_build_helper.py" hidden="true"/>
    <files mask="c_parsing_helper.py" hidden="true"/>
    <files mask="c_wrapper_generator.py" hidden="true"/>
    <files mask="crypto_data_tests.py" hidden="true"/>
    <files mask="crypto_knowledge.py" hidden="true"/>
    <files mask="macro_collector.py" hidden="true"/>
    <files mask="psa_information.py" hidden="true"/>
    <files mask="psa_storage.py" hidden="true"/>
    <files mask="test_case.py" hidden="true"/>
    <files mask="test_data_generation.py" hidden="true"/>
    <files mask="typing_util.py" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests" type="other">
    <files mask="Makefile" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/.jenkins" type="other">
    <files mask="Jenkinsfile" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/data_files" type="other">
    <files mask="Makefile" hidden="true"/>
    <files mask="hash_file_1" hidden="true"/>
    <files mask="hash_file_2" hidden="true"/>
    <files mask="hash_file_3" hidden="true"/>
    <files mask="hash_file_4" hidden="true"/>
    <files mask="hash_file_5" hidden="true"/>
    <files mask="mpi_16" hidden="true"/>
    <files mask="mpi_too_big" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/data_files/dir3" type="other">
    <files mask="Readme" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/data_files/dir4" type="other">
    <files mask="Readme" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/git-scripts" type="other">
    <files mask="README.md" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/git-scripts" type="script">
    <files mask="pre-commit.sh" hidden="true"/>
    <files mask="pre-push.sh" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/scripts" type="script">
    <files mask="all-in-docker.sh" hidden="true"/>
    <files mask="all.sh" hidden="true"/>
    <files mask="analyze_outcomes.py" hidden="true"/>
    <files mask="basic-build-test.sh" hidden="true"/>
    <files mask="basic-in-docker.sh" hidden="true"/>
    <files mask="check-generated-files.sh" hidden="true"/>
    <files mask="check-python-files.sh" hidden="true"/>
    <files mask="check_files.py" hidden="true"/>
    <files mask="check_names.py" hidden="true"/>
    <files mask="check_test_cases.py" hidden="true"/>
    <files mask="depends.py" hidden="true"/>
    <files mask="docker_env.sh" hidden="true"/>
    <files mask="doxygen.sh" hidden="true"/>
    <files mask="generate-afl-tests.sh" hidden="true"/>
    <files mask="generate_bignum_tests.py" hidden="true"/>
    <files mask="generate_psa_tests.py" hidden="true"/>
    <files mask="generate_psa_wrappers.py" hidden="true"/>
    <files mask="generate_server9_bad_saltlen.py" hidden="true"/>
    <files mask="generate_test_code.py" hidden="true"/>
    <files mask="list-identifiers.sh" hidden="true"/>
    <files mask="list_internal_identifiers.py" hidden="true"/>
    <files mask="psa_collect_statuses.py" hidden="true"/>
    <files mask="run-metatests.sh" hidden="true"/>
    <files mask="run_demos.py" hidden="true"/>
    <files mask="scripts_path.py" hidden="true"/>
    <files mask="set_psa_test_dependencies.py" hidden="true"/>
    <files mask="test_config_script.py" hidden="true"/>
    <files mask="test_generate_test_code.py" hidden="true"/>
    <files mask="test_psa_compliance.py" hidden="true"/>
    <files mask="test_psa_constant_names.py" hidden="true"/>
    <files mask="travis-log-failure.sh" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/scripts" type="other">
    <files mask="check-doxy-blocks.pl" hidden="true"/>
    <files mask="gen_ctr_drbg.pl" hidden="true"/>
    <files mask="gen_gcm_decrypt.pl" hidden="true"/>
    <files mask="gen_gcm_encrypt.pl" hidden="true"/>
    <files mask="gen_pkcs1_v21_sign_verify.pl" hidden="true"/>
    <files mask="recursion.pl" hidden="true"/>
    <files mask="run-test-suites.pl" hidden="true"/>
    <files mask="tcp_client.pl" hidden="true"/>
    <files mask="test-ref-configs.pl" hidden="true"/>
    <files mask="test_zeroize.gdb" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/src" type="src">
    <files mask="asn1_helpers.c" hidden="true"/>
    <files mask="fake_external_rng_for_test.c" hidden="true"/>
    <files mask="helpers.c" hidden="true"/>
    <files mask="psa_crypto_helpers.c" hidden="true"/>
    <files mask="psa_exercise_key.c" hidden="true"/>
    <files mask="psa_memory_poisoning_wrappers.c" hidden="true"/>
    <files mask="psa_test_wrappers.c" hidden="true"/>
    <files mask="random.c" hidden="true"/>
    <files mask="test_memory.c" hidden="true"/>
    <files mask="threading_helpers.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/suites" type="other">
    <files mask="helpers.function" hidden="true"/>
    <files mask="host_test.function" hidden="true"/>
    <files mask="main_test.function" hidden="true"/>
    <files mask="test_suite_aes.cbc.data" hidden="true"/>
    <files mask="test_suite_aes.cfb.data" hidden="true"/>
    <files mask="test_suite_aes.ecb.data" hidden="true"/>
    <files mask="test_suite_aes.function" hidden="true"/>
    <files mask="test_suite_aes.ofb.data" hidden="true"/>
    <files mask="test_suite_aes.rest.data" hidden="true"/>
    <files mask="test_suite_aes.xts.data" hidden="true"/>
    <files mask="test_suite_arc4.data" hidden="true"/>
    <files mask="test_suite_arc4.function" hidden="true"/>
    <files mask="test_suite_aria.data" hidden="true"/>
    <files mask="test_suite_aria.function" hidden="true"/>
    <files mask="test_suite_asn1parse.data" hidden="true"/>
    <files mask="test_suite_asn1parse.function" hidden="true"/>
    <files mask="test_suite_asn1write.data" hidden="true"/>
    <files mask="test_suite_asn1write.function" hidden="true"/>
    <files mask="test_suite_base64.data" hidden="true"/>
    <files mask="test_suite_base64.function" hidden="true"/>
    <files mask="test_suite_bignum.function" hidden="true"/>
    <files mask="test_suite_bignum.generated.data" hidden="true"/>
    <files mask="test_suite_bignum.misc.data" hidden="true"/>
    <files mask="test_suite_blowfish.data" hidden="true"/>
    <files mask="test_suite_blowfish.function" hidden="true"/>
    <files mask="test_suite_camellia.data" hidden="true"/>
    <files mask="test_suite_camellia.function" hidden="true"/>
    <files mask="test_suite_ccm.data" hidden="true"/>
    <files mask="test_suite_ccm.function" hidden="true"/>
    <files mask="test_suite_chacha20.data" hidden="true"/>
    <files mask="test_suite_chacha20.function" hidden="true"/>
    <files mask="test_suite_chachapoly.data" hidden="true"/>
    <files mask="test_suite_chachapoly.function" hidden="true"/>
    <files mask="test_suite_cipher.aes.data" hidden="true"/>
    <files mask="test_suite_cipher.arc4.data" hidden="true"/>
    <files mask="test_suite_cipher.aria.data" hidden="true"/>
    <files mask="test_suite_cipher.blowfish.data" hidden="true"/>
    <files mask="test_suite_cipher.camellia.data" hidden="true"/>
    <files mask="test_suite_cipher.ccm.data" hidden="true"/>
    <files mask="test_suite_cipher.chacha20.data" hidden="true"/>
    <files mask="test_suite_cipher.chachapoly.data" hidden="true"/>
    <files mask="test_suite_cipher.des.data" hidden="true"/>
    <files mask="test_suite_cipher.function" hidden="true"/>
    <files mask="test_suite_cipher.gcm.data" hidden="true"/>
    <files mask="test_suite_cipher.misc.data" hidden="true"/>
    <files mask="test_suite_cipher.nist_kw.data" hidden="true"/>
    <files mask="test_suite_cipher.null.data" hidden="true"/>
    <files mask="test_suite_cipher.padding.data" hidden="true"/>
    <files mask="test_suite_cmac.data" hidden="true"/>
    <files mask="test_suite_cmac.function" hidden="true"/>
    <files mask="test_suite_constant_time.data" hidden="true"/>
    <files mask="test_suite_constant_time.function" hidden="true"/>
    <files mask="test_suite_constant_time_hmac.data" hidden="true"/>
    <files mask="test_suite_constant_time_hmac.function" hidden="true"/>
    <files mask="test_suite_ctr_drbg.data" hidden="true"/>
    <files mask="test_suite_ctr_drbg.function" hidden="true"/>
    <files mask="test_suite_debug.data" hidden="true"/>
    <files mask="test_suite_debug.function" hidden="true"/>
    <files mask="test_suite_des.data" hidden="true"/>
    <files mask="test_suite_des.function" hidden="true"/>
    <files mask="test_suite_dhm.data" hidden="true"/>
    <files mask="test_suite_dhm.function" hidden="true"/>
    <files mask="test_suite_ecdh.data" hidden="true"/>
    <files mask="test_suite_ecdh.function" hidden="true"/>
    <files mask="test_suite_ecdsa.data" hidden="true"/>
    <files mask="test_suite_ecdsa.function" hidden="true"/>
    <files mask="test_suite_ecjpake.data" hidden="true"/>
    <files mask="test_suite_ecjpake.function" hidden="true"/>
    <files mask="test_suite_ecp.data" hidden="true"/>
    <files mask="test_suite_ecp.function" hidden="true"/>
    <files mask="test_suite_entropy.data" hidden="true"/>
    <files mask="test_suite_entropy.function" hidden="true"/>
    <files mask="test_suite_error.data" hidden="true"/>
    <files mask="test_suite_error.function" hidden="true"/>
    <files mask="test_suite_gcm.aes128_de.data" hidden="true"/>
    <files mask="test_suite_gcm.aes128_en.data" hidden="true"/>
    <files mask="test_suite_gcm.aes192_de.data" hidden="true"/>
    <files mask="test_suite_gcm.aes192_en.data" hidden="true"/>
    <files mask="test_suite_gcm.aes256_de.data" hidden="true"/>
    <files mask="test_suite_gcm.aes256_en.data" hidden="true"/>
    <files mask="test_suite_gcm.camellia.data" hidden="true"/>
    <files mask="test_suite_gcm.function" hidden="true"/>
    <files mask="test_suite_gcm.misc.data" hidden="true"/>
    <files mask="test_suite_hkdf.data" hidden="true"/>
    <files mask="test_suite_hkdf.function" hidden="true"/>
    <files mask="test_suite_hmac_drbg.function" hidden="true"/>
    <files mask="test_suite_hmac_drbg.misc.data" hidden="true"/>
    <files mask="test_suite_hmac_drbg.no_reseed.data" hidden="true"/>
    <files mask="test_suite_hmac_drbg.nopr.data" hidden="true"/>
    <files mask="test_suite_hmac_drbg.pr.data" hidden="true"/>
    <files mask="test_suite_md.data" hidden="true"/>
    <files mask="test_suite_md.function" hidden="true"/>
    <files mask="test_suite_mdx.data" hidden="true"/>
    <files mask="test_suite_mdx.function" hidden="true"/>
    <files mask="test_suite_memory_buffer_alloc.data" hidden="true"/>
    <files mask="test_suite_memory_buffer_alloc.function" hidden="true"/>
    <files mask="test_suite_mps.data" hidden="true"/>
    <files mask="test_suite_mps.function" hidden="true"/>
    <files mask="test_suite_net.data" hidden="true"/>
    <files mask="test_suite_net.function" hidden="true"/>
    <files mask="test_suite_nist_kw.data" hidden="true"/>
    <files mask="test_suite_nist_kw.function" hidden="true"/>
    <files mask="test_suite_oid.data" hidden="true"/>
    <files mask="test_suite_oid.function" hidden="true"/>
    <files mask="test_suite_pem.data" hidden="true"/>
    <files mask="test_suite_pem.function" hidden="true"/>
    <files mask="test_suite_pk.data" hidden="true"/>
    <files mask="test_suite_pk.function" hidden="true"/>
    <files mask="test_suite_pkcs12.data" hidden="true"/>
    <files mask="test_suite_pkcs12.function" hidden="true"/>
    <files mask="test_suite_pkcs1_v15.data" hidden="true"/>
    <files mask="test_suite_pkcs1_v15.function" hidden="true"/>
    <files mask="test_suite_pkcs1_v21.data" hidden="true"/>
    <files mask="test_suite_pkcs1_v21.function" hidden="true"/>
    <files mask="test_suite_pkcs5.data" hidden="true"/>
    <files mask="test_suite_pkcs5.function" hidden="true"/>
    <files mask="test_suite_pkparse.data" hidden="true"/>
    <files mask="test_suite_pkparse.function" hidden="true"/>
    <files mask="test_suite_pkwrite.data" hidden="true"/>
    <files mask="test_suite_pkwrite.function" hidden="true"/>
    <files mask="test_suite_platform_printf.data" hidden="true"/>
    <files mask="test_suite_platform_printf.function" hidden="true"/>
    <files mask="test_suite_poly1305.data" hidden="true"/>
    <files mask="test_suite_poly1305.function" hidden="true"/>
    <files mask="test_suite_psa_crypto.data" hidden="true"/>
    <files mask="test_suite_psa_crypto.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_attributes.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_attributes.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_driver_wrappers.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_driver_wrappers.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_entropy.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_entropy.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_generate_key.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_generate_key.generated.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_hash.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_hash.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_init.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_init.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_low_hash.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_low_hash.generated.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_memory.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_memory.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_metadata.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_metadata.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_not_supported.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_not_supported.generated.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_not_supported.misc.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_op_fail.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_op_fail.generated.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_op_fail.misc.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_persistent_key.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_persistent_key.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_se_driver_hal.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_se_driver_hal.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_se_driver_hal_mocks.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_se_driver_hal_mocks.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_slot_management.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_slot_management.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_storage_format.current.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_storage_format.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_storage_format.misc.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_storage_format.v0.data" hidden="true"/>
    <files mask="test_suite_psa_its.data" hidden="true"/>
    <files mask="test_suite_psa_its.function" hidden="true"/>
    <files mask="test_suite_random.data" hidden="true"/>
    <files mask="test_suite_random.function" hidden="true"/>
    <files mask="test_suite_rsa.data" hidden="true"/>
    <files mask="test_suite_rsa.function" hidden="true"/>
    <files mask="test_suite_shax.data" hidden="true"/>
    <files mask="test_suite_shax.function" hidden="true"/>
    <files mask="test_suite_ssl.data" hidden="true"/>
    <files mask="test_suite_ssl.function" hidden="true"/>
    <files mask="test_suite_ssl_decrypt.function" hidden="true"/>
    <files mask="test_suite_ssl_decrypt.misc.data" hidden="true"/>
    <files mask="test_suite_test_helpers.data" hidden="true"/>
    <files mask="test_suite_test_helpers.function" hidden="true"/>
    <files mask="test_suite_timing.data" hidden="true"/>
    <files mask="test_suite_timing.function" hidden="true"/>
    <files mask="test_suite_version.data" hidden="true"/>
    <files mask="test_suite_version.function" hidden="true"/>
    <files mask="test_suite_x509parse.data" hidden="true"/>
    <files mask="test_suite_x509parse.function" hidden="true"/>
    <files mask="test_suite_x509write.data" hidden="true"/>
    <files mask="test_suite_x509write.function" hidden="true"/>
    <files mask="test_suite_xtea.data" hidden="true"/>
    <files mask="test_suite_xtea.function" hidden="true"/>
  </source>
  <source exclude="true" relative_path="visualc/VS2010" type="other">
    <files mask="benchmark.vcxproj" hidden="true"/>
    <files mask="cert_app.vcxproj" hidden="true"/>
    <files mask="cert_req.vcxproj" hidden="true"/>
    <files mask="cert_write.vcxproj" hidden="true"/>
    <files mask="crl_app.vcxproj" hidden="true"/>
    <files mask="crypt_and_hash.vcxproj" hidden="true"/>
    <files mask="crypto_examples.vcxproj" hidden="true"/>
    <files mask="dh_client.vcxproj" hidden="true"/>
    <files mask="dh_genprime.vcxproj" hidden="true"/>
    <files mask="dh_server.vcxproj" hidden="true"/>
    <files mask="dtls_client.vcxproj" hidden="true"/>
    <files mask="dtls_server.vcxproj" hidden="true"/>
    <files mask="ecdh_curve25519.vcxproj" hidden="true"/>
    <files mask="ecdsa.vcxproj" hidden="true"/>
    <files mask="gen_entropy.vcxproj" hidden="true"/>
    <files mask="gen_key.vcxproj" hidden="true"/>
    <files mask="gen_random_ctr_drbg.vcxproj" hidden="true"/>
    <files mask="gen_random_havege.vcxproj" hidden="true"/>
    <files mask="generic_sum.vcxproj" hidden="true"/>
    <files mask="hello.vcxproj" hidden="true"/>
    <files mask="key_app.vcxproj" hidden="true"/>
    <files mask="key_app_writer.vcxproj" hidden="true"/>
    <files mask="key_ladder_demo.vcxproj" hidden="true"/>
    <files mask="load_roots.vcxproj" hidden="true"/>
    <files mask="mbedTLS.sln" hidden="true"/>
    <files mask="mbedTLS.vcxproj" hidden="true"/>
    <files mask="metatest.vcxproj" hidden="true"/>
    <files mask="mini_client.vcxproj" hidden="true"/>
    <files mask="mpi_demo.vcxproj" hidden="true"/>
    <files mask="pem2der.vcxproj" hidden="true"/>
    <files mask="pk_decrypt.vcxproj" hidden="true"/>
    <files mask="pk_encrypt.vcxproj" hidden="true"/>
    <files mask="pk_sign.vcxproj" hidden="true"/>
    <files mask="pk_verify.vcxproj" hidden="true"/>
    <files mask="psa_constant_names.vcxproj" hidden="true"/>
    <files mask="query_compile_time_config.vcxproj" hidden="true"/>
    <files mask="req_app.vcxproj" hidden="true"/>
    <files mask="rsa_decrypt.vcxproj" hidden="true"/>
    <files mask="rsa_encrypt.vcxproj" hidden="true"/>
    <files mask="rsa_genkey.vcxproj" hidden="true"/>
    <files mask="rsa_sign.vcxproj" hidden="true"/>
    <files mask="rsa_sign_pss.vcxproj" hidden="true"/>
    <files mask="rsa_verify.vcxproj" hidden="true"/>
    <files mask="rsa_verify_pss.vcxproj" hidden="true"/>
    <files mask="selftest.vcxproj" hidden="true"/>
    <files mask="ssl_client1.vcxproj" hidden="true"/>
    <files mask="ssl_client2.vcxproj" hidden="true"/>
    <files mask="ssl_context_info.vcxproj" hidden="true"/>
    <files mask="ssl_fork_server.vcxproj" hidden="true"/>
    <files mask="ssl_mail_client.vcxproj" hidden="true"/>
    <files mask="ssl_server.vcxproj" hidden="true"/>
    <files mask="ssl_server2.vcxproj" hidden="true"/>
    <files mask="strerror.vcxproj" hidden="true"/>
    <files mask="udp_proxy.vcxproj" hidden="true"/>
    <files mask="zeroize.vcxproj" hidden="true"/>
  </source>
  <source exclude="true" relative_path="./" type="other">
    <files mask="BRANCHES.md" hidden="true"/>
    <files mask="BUGS.md" hidden="true"/>
    <files mask="CONTRIBUTING.md" hidden="true"/>
    <files mask="DartConfiguration.tcl" hidden="true"/>
    <files mask="README.md" hidden="true"/>
    <files mask="SECURITY.md" hidden="true"/>
    <files mask="SUPPORT.md" hidden="true"/>
    <files mask="ChangeLog" hidden="true"/>
    <files mask="Kconfig" hidden="true"/>
    <files mask="LICENSE" hidden="true"/>
    <files mask="Makefile" hidden="true"/>
  </source>
  <source exclude="true" relative_path="./" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
    <files mask="ChangeLogKSDK.txt" hidden="true"/>
    <files mask="dco.txt" hidden="true"/>
    <files mask="mbeTLS_for_Kinetis_SDK_v2.0_readme.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="./" type="script">
    <files mask="mcux.cmake" hidden="true"/>
  </source>
</component>-->
    <component id="middleware.mbedtls.tests.MIMXRT1176" name="mbedtls_tests" brief="mbedTLS test suite" version="2.28.8" full_name="MbedTLS open source Crypto library" category="Security/mbedTLS library" user_visible="false" type="middleware" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <defines>
        <define name="MBEDTLS_CONFIG_FILE" value="'&quot;mcux_mbedtls_testsuite_config.h&quot;'"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="tests/src" type="src">
        <files mask="asn1_helpers.c"/>
        <files mask="helpers.c"/>
        <files mask="psa_crypto_helpers.c"/>
        <files mask="psa_exercise_key.c"/>
        <files mask="random.c"/>
        <files mask="threading_helpers.c"/>
        <files mask="fake_external_rng_for_test.c"/>
      </source>
      <source relative_path="tests/src/test_helpers" type="src">
        <files mask="ssl_helpers.c"/>
      </source>
      <source relative_path="tests/include/test" type="c_include">
        <files mask="arguments.h"/>
        <files mask="asn1_helpers.h"/>
        <files mask="constant_flow.h"/>
        <files mask="fake_external_rng_for_test.h"/>
        <files mask="helpers.h"/>
        <files mask="macros.h"/>
        <files mask="psa_crypto_helpers.h"/>
        <files mask="psa_exercise_key.h"/>
        <files mask="psa_helpers.h"/>
        <files mask="random.h"/>
        <files mask="ssl_helpers.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mbedtls_tests.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="tests/include/test" type="c_include"/>
        <include_path relative_path="tests/include" type="c_include"/>
        <include_path relative_path="tests/include/test" type="asm_include"/>
        <include_path relative_path="tests/include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls.3rdparty.MIMXRT1176" name="mbedtls_3rdparty" brief="mbedTLS 3rdparty code" version="2.28.8" full_name="MbedTLS open source Crypto library 3rdparty" category="Security/mbedTLS library" user_visible="false" type="middleware" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="3rdparty" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="3rdparty" type="asm_include">
        <files mask="Makefile.inc"/>
      </source>
      <source relative_path="3rdparty/everest" type="doc">
        <files mask="CMakeLists.txt"/>
        <files mask="README.md"/>
      </source>
      <source relative_path="3rdparty/everest" type="asm_include">
        <files mask="Makefile.inc"/>
      </source>
      <source relative_path="3rdparty/everest/include/everest" type="c_include">
        <files mask="Hacl_Curve25519.h"/>
        <files mask="everest.h"/>
        <files mask="kremlib.h"/>
        <files mask="x25519.h"/>
      </source>
      <source relative_path="3rdparty/everest/include/everest/kremlib" type="c_include">
        <files mask="FStar_UInt128.h"/>
        <files mask="FStar_UInt64_FStar_UInt32_FStar_UInt16_FStar_UInt8.h"/>
      </source>
      <source relative_path="3rdparty/everest/include/everest/kremlin" type="c_include">
        <files mask="c_endianness.h"/>
      </source>
      <source relative_path="3rdparty/everest/include/everest/kremlin/internal" type="c_include">
        <files mask="builtin.h"/>
        <files mask="callconv.h"/>
        <files mask="compat.h"/>
        <files mask="debug.h"/>
        <files mask="target.h"/>
        <files mask="types.h"/>
        <files mask="wasmsupport.h"/>
      </source>
      <source relative_path="3rdparty/everest/include/everest/vs2010" type="c_include">
        <files mask="Hacl_Curve25519.h"/>
        <files mask="inttypes.h"/>
        <files mask="stdbool.h"/>
      </source>
      <source relative_path="3rdparty/everest/library" type="src">
        <files mask="Hacl_Curve25519.c"/>
        <files mask="Hacl_Curve25519_joined.c"/>
        <files mask="everest.c"/>
        <files mask="x25519.c"/>
      </source>
      <source relative_path="3rdparty/everest/library/kremlib" type="src">
        <files mask="FStar_UInt128_extracted.c"/>
        <files mask="FStar_UInt64_FStar_UInt32_FStar_UInt16_FStar_UInt8.c"/>
      </source>
      <source relative_path="3rdparty/everest/library/legacy" type="src">
        <files mask="Hacl_Curve25519.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mbedtls_3rdparty.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="3rdparty/everest/include" type="c_include"/>
        <include_path relative_path="3rdparty/everest/include/everest" type="c_include"/>
        <include_path relative_path="3rdparty/everest/include/everest/kremlib" type="c_include"/>
        <include_path relative_path="3rdparty/everest/include/everest/kremlin" type="c_include"/>
        <include_path relative_path="3rdparty/everest/include/everest/kremlin/internal" type="c_include"/>
        <include_path relative_path="3rdparty/everest/include" type="asm_include"/>
        <include_path relative_path="3rdparty/everest/include/everest" type="asm_include"/>
        <include_path relative_path="3rdparty/everest/include/everest/kremlib" type="asm_include"/>
        <include_path relative_path="3rdparty/everest/include/everest/kremlin" type="asm_include"/>
        <include_path relative_path="3rdparty/everest/include/everest/kremlin/internal" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.audio_voice.components.ssrc.MIMXRT1176" name="audio_voice_components_ssrc" brief="Synchronous Sample Rate Converter" version="1.0.0" full_name="Audio Voice component SSRC" category="Audio/Framework" user_visible="true" type="middleware" package_base_path="middleware/audio_voice/components/ssrc" project_base_path="components/ssrc">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source toolchain="armgcc iar mcuxpresso" relative_path="./" type="c_include" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="SSRC.h"/>
        <files mask="LVC_Types.h"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="libs/cm7f/armgcc/release" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libssrc.a"/>
      </source>
      <source toolchain="iar" relative_path="libs/cm7f/iar/release" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libssrc.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_audio_voice_components_ssrc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" toolchain="armgcc iar mcuxpresso" type="c_include" device_cores="cm7_MIMXRT1176xxxxx"/>
        <include_path relative_path="./" toolchain="armgcc iar mcuxpresso" type="asm_include" device_cores="cm7_MIMXRT1176xxxxx"/>
      </include_paths>
    </component>
    <component id="middleware.audio_voice.components.opusfile.MIMXRT1176" name="audio_voice_components_opusfile" brief="Opus file" version="1.0.0" full_name="Audio Voice component Opusfile" category="Audio/Framework" user_visible="true" type="middleware" package_base_path="middleware/audio_voice/components/opusfile" project_base_path="components/opusfile">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="include" type="c_include">
        <files mask="internal.h"/>
        <files mask="opusfile.h"/>
      </source>
      <source relative_path="src" type="src">
        <files mask="info.c"/>
        <files mask="internal.c"/>
        <files mask="opusfile.c"/>
        <files mask="stream.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_audio_voice_components_opusfile.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.audio_voice.components.opus.MIMXRT1176" name="audio_voice_components_opus" brief="Opus" version="1.0.0" full_name="Audio Voice component Opus" category="Audio/Framework" user_visible="true" type="middleware" package_base_path="middleware/audio_voice/components/opus" project_base_path="components/opus">
      <defines>
        <define name="HAVE_CONFIG_H" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="celt" type="src">
        <files mask="bands.c"/>
        <files mask="celt.c"/>
        <files mask="celt_decoder.c"/>
        <files mask="celt_encoder.c"/>
        <files mask="celt_lpc.c"/>
        <files mask="cwrs.c"/>
        <files mask="entcode.c"/>
        <files mask="entdec.c"/>
        <files mask="entenc.c"/>
        <files mask="kiss_fft.c"/>
        <files mask="laplace.c"/>
        <files mask="mathops.c"/>
        <files mask="mdct.c"/>
        <files mask="modes.c"/>
        <files mask="pitch.c"/>
        <files mask="quant_bands.c"/>
        <files mask="rate.c"/>
        <files mask="vq.c"/>
      </source>
      <source relative_path="celt" type="c_include">
        <files mask="_kiss_fft_guts.h"/>
        <files mask="arch.h"/>
        <files mask="bands.h"/>
        <files mask="celt.h"/>
        <files mask="celt_lpc.h"/>
        <files mask="cpu_support.h"/>
        <files mask="cwrs.h"/>
        <files mask="ecintrin.h"/>
        <files mask="entcode.h"/>
        <files mask="entdec.h"/>
        <files mask="entenc.h"/>
        <files mask="fixed_c5x.h"/>
        <files mask="fixed_c6x.h"/>
        <files mask="fixed_debug.h"/>
        <files mask="fixed_generic.h"/>
        <files mask="float_cast.h"/>
        <files mask="kiss_fft.h"/>
        <files mask="laplace.h"/>
        <files mask="mathops.h"/>
        <files mask="mdct.h"/>
        <files mask="mfrngcod.h"/>
        <files mask="modes.h"/>
        <files mask="os_support.h"/>
        <files mask="pitch.h"/>
        <files mask="quant_bands.h"/>
        <files mask="rate.h"/>
        <files mask="stack_alloc.h"/>
        <files mask="static_modes_fixed.h"/>
        <files mask="static_modes_float.h"/>
        <files mask="vq.h"/>
      </source>
      <source relative_path="include" type="c_include">
        <files mask="config.h"/>
        <files mask="opus.h"/>
        <files mask="opus_cci.h"/>
        <files mask="opus_cci_raw.h"/>
        <files mask="opus_custom.h"/>
        <files mask="opus_defines.h"/>
        <files mask="opus_multistream.h"/>
        <files mask="opus_projection.h"/>
        <files mask="opus_types.h"/>
        <files mask="test_opus_common.h"/>
      </source>
      <source relative_path="silk" type="src">
        <files mask="A2NLSF.c"/>
        <files mask="CNG.c"/>
        <files mask="HP_variable_cutoff.c"/>
        <files mask="LPC_analysis_filter.c"/>
        <files mask="LPC_fit.c"/>
        <files mask="LPC_inv_pred_gain.c"/>
        <files mask="LP_variable_cutoff.c"/>
        <files mask="NLSF2A.c"/>
        <files mask="NLSF_VQ.c"/>
        <files mask="NLSF_VQ_weights_laroia.c"/>
        <files mask="NLSF_decode.c"/>
        <files mask="NLSF_del_dec_quant.c"/>
        <files mask="NLSF_encode.c"/>
        <files mask="NLSF_stabilize.c"/>
        <files mask="NLSF_unpack.c"/>
        <files mask="NSQ.c"/>
        <files mask="NSQ_del_dec.c"/>
        <files mask="PLC.c"/>
        <files mask="VAD.c"/>
        <files mask="VQ_WMat_EC.c"/>
        <files mask="ana_filt_bank_1.c"/>
        <files mask="biquad_alt.c"/>
        <files mask="bwexpander.c"/>
        <files mask="bwexpander_32.c"/>
        <files mask="check_control_input.c"/>
        <files mask="code_signs.c"/>
        <files mask="control_SNR.c"/>
        <files mask="control_audio_bandwidth.c"/>
        <files mask="control_codec.c"/>
        <files mask="debug.c"/>
        <files mask="dec_API.c"/>
        <files mask="decode_core.c"/>
        <files mask="decode_frame.c"/>
        <files mask="decode_indices.c"/>
        <files mask="decode_parameters.c"/>
        <files mask="decode_pitch.c"/>
        <files mask="decode_pulses.c"/>
        <files mask="decoder_set_fs.c"/>
        <files mask="enc_API.c"/>
        <files mask="encode_indices.c"/>
        <files mask="encode_pulses.c"/>
        <files mask="gain_quant.c"/>
        <files mask="init_decoder.c"/>
        <files mask="init_encoder.c"/>
        <files mask="inner_prod_aligned.c"/>
        <files mask="interpolate.c"/>
        <files mask="lin2log.c"/>
        <files mask="log2lin.c"/>
        <files mask="pitch_est_tables.c"/>
        <files mask="process_NLSFs.c"/>
        <files mask="quant_LTP_gains.c"/>
        <files mask="resampler.c"/>
        <files mask="resampler_down2.c"/>
        <files mask="resampler_down2_3.c"/>
        <files mask="resampler_private_AR2.c"/>
        <files mask="resampler_private_IIR_FIR.c"/>
        <files mask="resampler_private_down_FIR.c"/>
        <files mask="resampler_private_up2_HQ.c"/>
        <files mask="resampler_rom.c"/>
        <files mask="shell_coder.c"/>
        <files mask="sigm_Q15.c"/>
        <files mask="sort.c"/>
        <files mask="stereo_LR_to_MS.c"/>
        <files mask="stereo_MS_to_LR.c"/>
        <files mask="stereo_decode_pred.c"/>
        <files mask="stereo_encode_pred.c"/>
        <files mask="stereo_find_predictor.c"/>
        <files mask="stereo_quant_pred.c"/>
        <files mask="sum_sqr_shift.c"/>
        <files mask="table_LSF_cos.c"/>
        <files mask="tables_LTP.c"/>
        <files mask="tables_NLSF_CB_NB_MB.c"/>
        <files mask="tables_NLSF_CB_WB.c"/>
        <files mask="tables_gain.c"/>
        <files mask="tables_other.c"/>
        <files mask="tables_pitch_lag.c"/>
        <files mask="tables_pulses_per_block.c"/>
      </source>
      <source relative_path="silk" type="c_include">
        <files mask="API.h"/>
        <files mask="Inlines.h"/>
        <files mask="MacroCount.h"/>
        <files mask="MacroDebug.h"/>
        <files mask="NSQ.h"/>
        <files mask="PLC.h"/>
        <files mask="SigProc_FIX.h"/>
        <files mask="control.h"/>
        <files mask="debug.h"/>
        <files mask="define.h"/>
        <files mask="errors.h"/>
        <files mask="macros.h"/>
        <files mask="main.h"/>
        <files mask="pitch_est_defines.h"/>
        <files mask="resampler_private.h"/>
        <files mask="resampler_rom.h"/>
        <files mask="resampler_structs.h"/>
        <files mask="structs.h"/>
        <files mask="tables.h"/>
        <files mask="tuning_parameters.h"/>
        <files mask="typedef.h"/>
      </source>
      <source relative_path="silk/fixed" type="src">
        <files mask="LTP_analysis_filter_FIX.c"/>
        <files mask="LTP_scale_ctrl_FIX.c"/>
        <files mask="apply_sine_window_FIX.c"/>
        <files mask="autocorr_FIX.c"/>
        <files mask="burg_modified_FIX.c"/>
        <files mask="corrMatrix_FIX.c"/>
        <files mask="encode_frame_FIX.c"/>
        <files mask="find_LPC_FIX.c"/>
        <files mask="find_LTP_FIX.c"/>
        <files mask="find_pitch_lags_FIX.c"/>
        <files mask="find_pred_coefs_FIX.c"/>
        <files mask="k2a_FIX.c"/>
        <files mask="k2a_Q16_FIX.c"/>
        <files mask="noise_shape_analysis_FIX.c"/>
        <files mask="pitch_analysis_core_FIX.c"/>
        <files mask="process_gains_FIX.c"/>
        <files mask="regularize_correlations_FIX.c"/>
        <files mask="residual_energy16_FIX.c"/>
        <files mask="residual_energy_FIX.c"/>
        <files mask="schur64_FIX.c"/>
        <files mask="schur_FIX.c"/>
        <files mask="vector_ops_FIX.c"/>
        <files mask="warped_autocorrelation_FIX.c"/>
      </source>
      <source relative_path="silk/fixed" type="c_include">
        <files mask="main_FIX.h"/>
        <files mask="structs_FIX.h"/>
      </source>
      <source relative_path="src" type="src">
        <files mask="opus.c"/>
        <files mask="opus_cci.c"/>
        <files mask="opus_cci_raw.c"/>
        <files mask="opus_decoder.c"/>
        <files mask="opus_encoder.c"/>
        <files mask="opus_multistream.c"/>
        <files mask="opus_multistream_decoder.c"/>
        <files mask="opus_multistream_encoder.c"/>
        <files mask="repacketizer.c"/>
      </source>
      <source relative_path="src" type="c_include">
        <files mask="analysis.h"/>
        <files mask="mlp.h"/>
        <files mask="opus_private.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_audio_voice_components_opus.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="celt" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="silk" type="c_include"/>
        <include_path relative_path="silk/fixed" type="c_include"/>
        <include_path relative_path="src" type="c_include"/>
        <include_path relative_path="celt" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
        <include_path relative_path="silk" type="asm_include"/>
        <include_path relative_path="silk/fixed" type="asm_include"/>
        <include_path relative_path="src" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.audio_voice.components.ogg.MIMXRT1176" name="audio_voice_components_ogg" brief="Ogg" version="1.0.0" full_name="Audio Voice component Ogg" category="Audio/Framework" user_visible="true" type="middleware" package_base_path="middleware/audio_voice/components/ogg" project_base_path="components/ogg">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="include/ogg" type="c_include">
        <files mask="memory.h"/>
        <files mask="ogg.h"/>
        <files mask="os_types.h"/>
      </source>
      <source relative_path="src" type="src">
        <files mask="framing.c"/>
        <files mask="memory.c"/>
      </source>
      <source relative_path="src" type="c_include">
        <files mask="crctable.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_audio_voice_components_ogg.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src" type="c_include"/>
        <include_path relative_path="include/ogg" type="c_include"/>
        <include_path relative_path="src" type="asm_include"/>
        <include_path relative_path="include/ogg" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.audio_voice.components.decoders.wav.MIMXRT1176" name="audio_voice_components_decoder_wav" brief="WAV decoder" version="1.0.0" full_name="Audio Voice component decoder WAV" category="Audio/Framework" user_visible="true" type="middleware" package_base_path="middleware/audio_voice/components/decoders/wav" project_base_path="components/decoders/wav">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source toolchain="armgcc iar mcuxpresso" relative_path="./" type="c_include" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="wav_cci.h"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="libs/cm7f/armgcc/release" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libwav.a"/>
      </source>
      <source toolchain="iar" relative_path="libs/cm7f/iar/release" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libwav.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_audio_voice_components_decoders_wav.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" toolchain="armgcc iar mcuxpresso" type="c_include" device_cores="cm7_MIMXRT1176xxxxx"/>
        <include_path relative_path="./" toolchain="armgcc iar mcuxpresso" type="asm_include" device_cores="cm7_MIMXRT1176xxxxx"/>
      </include_paths>
    </component>
    <component id="middleware.audio_voice.components.decoders.mp3.MIMXRT1176" name="audio_voice_components_decoder_mp3" brief="MP3 decoder" version="1.0.0" full_name="Audio Voice component decoder MP3" category="Audio/Framework" user_visible="true" type="middleware" package_base_path="middleware/audio_voice/components/decoders/mp3" project_base_path="components/decoders/mp3">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source toolchain="armgcc iar mcuxpresso" relative_path="./" type="c_include" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="mp3_cci.h"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="libs/cm7f/armgcc/release" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libmp3.a"/>
      </source>
      <source toolchain="iar" relative_path="libs/cm7f/iar/release" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libmp3.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_audio_voice_components_decoders_mp3.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" toolchain="armgcc iar mcuxpresso" type="c_include" device_cores="cm7_MIMXRT1176xxxxx"/>
        <include_path relative_path="./" toolchain="armgcc iar mcuxpresso" type="asm_include" device_cores="cm7_MIMXRT1176xxxxx"/>
      </include_paths>
    </component>
    <component id="middleware.audio_voice.components.decoders.flac.MIMXRT1176" name="audio_voice_components_decoder_flac" brief="Flac decoder" version="1.0.0" full_name="Audio Voice component decoder FLAC" category="Audio/Framework" user_visible="true" type="middleware" package_base_path="middleware/audio_voice/components/decoders/flac" project_base_path="components/decoders/flac">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source toolchain="armgcc iar mcuxpresso" relative_path="./" type="c_include" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="flac_cci.h"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="libs/cm7f/armgcc/release" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libflac.a"/>
      </source>
      <source toolchain="iar" relative_path="libs/cm7f/iar/release" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libflac.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_audio_voice_components_decoders_flac.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" toolchain="armgcc iar mcuxpresso" type="c_include" device_cores="cm7_MIMXRT1176xxxxx"/>
        <include_path relative_path="./" toolchain="armgcc iar mcuxpresso" type="asm_include" device_cores="cm7_MIMXRT1176xxxxx"/>
      </include_paths>
    </component>
    <component id="middleware.audio_voice.components.decoders.aac.MIMXRT1176" name="audio_voice_components_decoder_aac" brief="AAC decoder" version="1.0.0" full_name="Audio Voice component decoder AAC" category="Audio/Framework" user_visible="true" type="middleware" package_base_path="middleware/audio_voice/components/decoders/aac" project_base_path="components/decoders/aac">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source toolchain="armgcc mcuxpresso" relative_path="./" type="c_include" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="aac_cci.h"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="libs/cm7f/armgcc/release" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libaac.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_audio_voice_components_decoders_aac.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" toolchain="armgcc mcuxpresso" type="c_include" device_cores="cm7_MIMXRT1176xxxxx"/>
        <include_path relative_path="./" toolchain="armgcc mcuxpresso" type="asm_include" device_cores="cm7_MIMXRT1176xxxxx"/>
      </include_paths>
    </component>
    <component id="middleware.audio_voice.components.asrc.MIMXRT1176" name="audio_voice_components_asrc" brief="Asynchronous Sample Rate Converter" version="1.0.0" full_name="Audio Voice component ASRC" category="Audio/Framework" user_visible="false" type="middleware" package_base_path="middleware/audio_voice/components/asrc" project_base_path="components/asrc">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source toolchain="armgcc mcuxpresso" relative_path="inc" type="c_include" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="ASRC.h"/>
        <files mask="PL_ITST.h"/>
        <files mask="PL_MEM_Copy.h"/>
        <files mask="PL_memoryRegion.h"/>
        <files mask="PL_platformTypes.h"/>
        <files mask="PL_platformTypesPrivate.h"/>
        <files mask="PL_platformTypes_CortexM.h"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="libs/cm7f/armgcc/release" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libasrc.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_audio_voice_components_asrc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="inc" toolchain="armgcc mcuxpresso" type="c_include" device_cores="cm7_MIMXRT1176xxxxx"/>
        <include_path relative_path="inc" toolchain="armgcc mcuxpresso" type="asm_include" device_cores="cm7_MIMXRT1176xxxxx"/>
      </include_paths>
    </component>
    <component id="middleware.audio_voice.maestro.MIMXRT1176" name="Audio Maestro framework" brief="MCU Maestro Audio Framework Core" version="1.7.0" full_name="Maestro Audio Framework Core" category="Audio/Framework" user_visible="true" type="middleware" package_base_path="middleware/audio_voice/maestro" project_base_path="maestro">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="src/inc" type="c_include">
        <files mask="audio_cfg.h"/>
        <files mask="error.h"/>
        <files mask="streamer_api.h"/>
        <files mask="streamer_element_properties.h"/>
        <files mask="streamer_message.h"/>
        <files mask="types.h"/>
      </source>
      <source relative_path="src/core/inc" type="c_include">
        <files mask="pad.h"/>
        <files mask="pipeline.h"/>
        <files mask="streamer.h"/>
        <files mask="streamer_element.h"/>
      </source>
      <source relative_path="src/core/src" type="src">
        <files mask="pad.c"/>
        <files mask="pipeline.c"/>
        <files mask="streamer.c"/>
        <files mask="streamer_element.c"/>
        <files mask="streamer_msg.c"/>
      </source>
      <source relative_path="src/utils/inc" type="c_include">
        <files mask="general_utils.h"/>
        <files mask="maestro_logging.h"/>
      </source>
      <source relative_path="src/utils/src" type="src">
        <files mask="general_utils.c"/>
        <files mask="maestro_logging.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_audio_voice_maestro.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/inc" type="c_include"/>
        <include_path relative_path="src/core/inc" type="c_include"/>
        <include_path relative_path="src/utils/inc" type="c_include"/>
        <include_path relative_path="src/elements" type="c_include"/>
        <include_path relative_path="src/devices" type="c_include"/>
        <include_path relative_path="src/inc" type="asm_include"/>
        <include_path relative_path="src/core/inc" type="asm_include"/>
        <include_path relative_path="src/utils/inc" type="asm_include"/>
        <include_path relative_path="src/elements" type="asm_include"/>
        <include_path relative_path="src/devices" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.audio_voice.maestro.doc.MIMXRT1176" name="maestro_framework" brief="MCU Maestro Audio Framework Doc" version="1.7.0" full_name="Maestro Audio Framework Middleware Doc" category="Audio/Framework" user_visible="false" type="middleware" package_base_path="middleware/audio_voice/maestro" project_base_path="maestro">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_audio_voice_maestro_doc.cmake" hidden="true"/>
      </source>
    </component>
    <!--<component id="middleware.lwip.unused_files.MIMXRT1176" name="lwIP_unused_files" version="2.2.1" package_base_path="middleware/lwip" project_base_path="lwip">
  <source exclude="true" relative_path="src" type="other">
    <files mask="Filelists.cmake" hidden="true"/>
    <files mask="Filelists.mk" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz" type="other">
    <files mask="Makefile" hidden="true"/>
    <files mask="README" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz" type="c_include">
    <files mask="config.h" hidden="true"/>
    <files mask="fuzz_common.h" hidden="true"/>
    <files mask="lwipopts.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz" type="src">
    <files mask="fuzz.c" hidden="true"/>
    <files mask="fuzz2.c" hidden="true"/>
    <files mask="fuzz3.c" hidden="true"/>
    <files mask="fuzz_common.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz/inputs/arp" type="binary">
    <files mask="arp_req.bin" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz/inputs/icmp" type="binary">
    <files mask="icmp_ping.bin" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz/inputs/ipv6" type="binary">
    <files mask="neighbor_solicitation.bin" hidden="true"/>
    <files mask="router_adv.bin" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz/inputs/tcp" type="binary">
    <files mask="tcp_syn.bin" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz/inputs/udp" type="binary">
    <files mask="udp_port_5000.bin" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz" type="script">
    <files mask="output_to_pcap.sh" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/sockets" type="src">
    <files mask="sockets_stresstest.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/sockets" type="c_include">
    <files mask="sockets_stresstest.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit" type="script">
    <files mask="Filelists.cmake" hidden="true"/>
    <files mask="Filelists.mk" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit" type="other">
    <files mask="Makefile" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/api" type="src">
    <files mask="test_sockets.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/api" type="c_include">
    <files mask="test_sockets.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/arch" type="src">
    <files mask="sys_arch.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/arch" type="c_include">
    <files mask="sys_arch.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/core" type="src">
    <files mask="test_def.c" hidden="true"/>
    <files mask="test_dns.c" hidden="true"/>
    <files mask="test_mem.c" hidden="true"/>
    <files mask="test_netif.c" hidden="true"/>
    <files mask="test_pbuf.c" hidden="true"/>
    <files mask="test_timers.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/core" type="c_include">
    <files mask="test_def.h" hidden="true"/>
    <files mask="test_dns.h" hidden="true"/>
    <files mask="test_mem.h" hidden="true"/>
    <files mask="test_netif.h" hidden="true"/>
    <files mask="test_pbuf.h" hidden="true"/>
    <files mask="test_timers.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/dhcp" type="src">
    <files mask="test_dhcp.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/dhcp" type="c_include">
    <files mask="test_dhcp.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/dhcp6" type="src">
    <files mask="test_dhcp6.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/dhcp6" type="c_include">
    <files mask="test_dhcp6.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/etharp" type="src">
    <files mask="test_etharp.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/etharp" type="c_include">
    <files mask="test_etharp.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/ip4" type="src">
    <files mask="test_ip4.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/ip4" type="c_include">
    <files mask="test_ip4.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/ip6" type="src">
    <files mask="test_ip6.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/ip6" type="c_include">
    <files mask="test_ip6.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit" type="c_include">
    <files mask="lwip_check.h" hidden="true"/>
    <files mask="lwipopts.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit" type="src">
    <files mask="lwip_unittests.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/mdns" type="src">
    <files mask="test_mdns.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/mdns" type="c_include">
    <files mask="test_mdns.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/mqtt" type="src">
    <files mask="test_mqtt.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/mqtt" type="c_include">
    <files mask="test_mqtt.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/ppp" type="src">
    <files mask="test_pppos.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/ppp" type="c_include">
    <files mask="test_pppos.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/tcp" type="src">
    <files mask="tcp_helper.c" hidden="true"/>
    <files mask="test_tcp.c" hidden="true"/>
    <files mask="test_tcp_oos.c" hidden="true"/>
    <files mask="test_tcp_state.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/tcp" type="c_include">
    <files mask="tcp_helper.h" hidden="true"/>
    <files mask="test_tcp.h" hidden="true"/>
    <files mask="test_tcp_oos.h" hidden="true"/>
    <files mask="test_tcp_state.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/udp" type="src">
    <files mask="test_udp.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/udp" type="c_include">
    <files mask="test_udp.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib" type="script">
    <files mask="Filelists.cmake" hidden="true"/>
    <files mask="Filelists.mk" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/dhcp_extra_opts" type="other">
    <files mask="README" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/dhcp_extra_opts" type="src">
    <files mask="dhcp_extra_opts.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/dhcp_extra_opts" type="c_include">
    <files mask="dhcp_extra_opts.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/ipv6_static_routing" type="other">
    <files mask="README" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/ipv6_static_routing" type="src">
    <files mask="ip6_route_table.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/ipv6_static_routing" type="c_include">
    <files mask="ip6_route_table.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/netconn/external_resolve" type="src">
    <files mask="dnssd.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/netconn/external_resolve" type="c_include">
    <files mask="dnssd.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/tcp_isn" type="src">
    <files mask="tcp_isn.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/tcp_isn" type="c_include">
    <files mask="tcp_isn.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/tcp_md5" type="other">
    <files mask="README" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/tcp_md5" type="src">
    <files mask="tcp_md5.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/tcp_md5" type="c_include">
    <files mask="tcp_md5.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/chargen" type="other">
    <files mask="README" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/chargen" type="src">
    <files mask="chargen.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/chargen" type="c_include">
    <files mask="chargen.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/httpserver" type="other">
    <files mask="README" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/httpserver" type="src">
    <files mask="httpserver-netconn.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/httpserver" type="c_include">
    <files mask="httpserver-netconn.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/netio" type="src">
    <files mask="netio.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/netio" type="c_include">
    <files mask="netio.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/rtp" type="src">
    <files mask="rtp.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/rtp" type="c_include">
    <files mask="rtp.h" hidden="true"/>
    <files mask="rtpdata.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/shell" type="src">
    <files mask="shell.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/shell" type="c_include">
    <files mask="shell.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/socket_examples" type="src">
    <files mask="socket_examples.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/socket_examples" type="c_include">
    <files mask="socket_examples.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/Coverity" type="src">
    <files mask="coverity.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/ethernetif" type="src">
    <files mask="ethernetif.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/example_app" type="c_include">
    <files mask="default_netif.h" hidden="true"/>
    <files mask="lwipopts.h" hidden="true"/>
    <files mask="lwippools.h" hidden="true"/>
    <files mask="ppp_settings.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/example_app" type="other">
    <files mask="lwipcfg.h.ci" hidden="true"/>
    <files mask="lwipcfg.h.example" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/example_app" type="src">
    <files mask="test.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/example_app/test_configs" type="c_include">
    <files mask="opt_default.h" hidden="true"/>
    <files mask="opt_dualstack.h" hidden="true"/>
    <files mask="opt_ipv4only.h" hidden="true"/>
    <files mask="opt_ipv6only.h" hidden="true"/>
    <files mask="opt_no_tcp_dualstack.h" hidden="true"/>
    <files mask="opt_no_tcp_ipv4only.h" hidden="true"/>
    <files mask="opt_no_tcp_ipv6only.h" hidden="true"/>
    <files mask="opt_no_udp_dualstack.h" hidden="true"/>
    <files mask="opt_no_udp_ipv4only.h" hidden="true"/>
    <files mask="opt_no_udp_ipv6only.h" hidden="true"/>
    <files mask="opt_none.h" hidden="true"/>
    <files mask="opt_nosys_dual.h" hidden="true"/>
    <files mask="opt_nosys_ipv4.h" hidden="true"/>
    <files mask="opt_nosys_ipv6.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/cgi_example" type="src">
    <files mask="cgi_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/cgi_example" type="c_include">
    <files mask="cgi_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/examples_fs" type="doc">
    <files mask="404.html" hidden="true"/>
    <files mask="index.html" hidden="true"/>
    <files mask="login.html" hidden="true"/>
    <files mask="loginfail.html" hidden="true"/>
    <files mask="session.html" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/examples_fs/img" type="image">
    <files mask="sics.gif" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/examples_fs" type="other">
    <files mask="ssi.shtml" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd" type="src">
    <files mask="examples_fsdata.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/fs_example" type="src">
    <files mask="fs_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/fs_example" type="c_include">
    <files mask="fs_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/genfiles_example" type="src">
    <files mask="genfiles_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/genfiles_example" type="c_include">
    <files mask="genfiles_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/https_example" type="src">
    <files mask="https_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/https_example" type="c_include">
    <files mask="https_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/post_example" type="src">
    <files mask="post_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/ssi_example" type="src">
    <files mask="ssi_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/ssi_example" type="c_include">
    <files mask="ssi_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/lwiperf" type="src">
    <files mask="lwiperf_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/lwiperf" type="c_include">
    <files mask="lwiperf_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/mdns" type="src">
    <files mask="mdns_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/mdns" type="c_include">
    <files mask="mdns_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/mqtt" type="src">
    <files mask="mqtt_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/mqtt" type="c_include">
    <files mask="mqtt_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/ppp" type="src">
    <files mask="pppos_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/ppp" type="c_include">
    <files mask="pppos_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/snmp" type="src">
    <files mask="snmp_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/snmp" type="c_include">
    <files mask="snmp_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/snmp/snmp_private_mib" type="src">
    <files mask="lwip_prvmib.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/snmp/snmp_private_mib" type="c_include">
    <files mask="private_mib.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/snmp/snmp_v3" type="src">
    <files mask="snmpv3_dummy.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/snmp/snmp_v3" type="c_include">
    <files mask="snmpv3_dummy.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/sntp" type="src">
    <files mask="sntp_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/sntp" type="c_include">
    <files mask="sntp_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/tftp" type="src">
    <files mask="tftp_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/tftp" type="c_include">
    <files mask="tftp_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports" type="script">
    <files mask="CMakeCommon.cmake" hidden="true"/>
    <files mask="Common.allports.mk" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/freertos/include/arch" type="c_include">
    <files mask="sys_arch.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/freertos" type="src">
    <files mask="sys_arch.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix" type="script">
    <files mask="Common.mk" hidden="true"/>
    <files mask="Filelists.cmake" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix" type="other">
    <files mask="README" hidden="true"/>
    <files mask="setup-tapif" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/check" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/check" type="other">
    <files mask="Makefile" hidden="true"/>
    <files mask="README" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/check" type="c_include">
    <files mask="config.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/example_app" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/example_app" type="other">
    <files mask="Makefile" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/example_app" type="src">
    <files mask="default_netif.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/example_app" type="script">
    <files mask="iteropts.sh" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/lib" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/lib" type="other">
    <files mask="README" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/lib" type="c_include">
    <files mask="lwipopts.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/port/include/arch" type="c_include">
    <files mask="cc.h" hidden="true"/>
    <files mask="perf.h" hidden="true"/>
    <files mask="sys_arch.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/port/include/netif" type="c_include">
    <files mask="fifo.h" hidden="true"/>
    <files mask="list.h" hidden="true"/>
    <files mask="pcapif.h" hidden="true"/>
    <files mask="sio.h" hidden="true"/>
    <files mask="tapif.h" hidden="true"/>
    <files mask="vdeif.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/port/netif" type="src">
    <files mask="fifo.c" hidden="true"/>
    <files mask="list.c" hidden="true"/>
    <files mask="pcapif.c" hidden="true"/>
    <files mask="sio.c" hidden="true"/>
    <files mask="tapif.c" hidden="true"/>
    <files mask="vdeif.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/port" type="src">
    <files mask="perf.c" hidden="true"/>
    <files mask="sys_arch.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/posixlib" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/posixlib" type="script">
    <files mask="Uninstall.cmake" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/posixlib/include/posix" type="c_include">
    <files mask="inet.h" hidden="true"/>
    <files mask="sockets.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/posixlib" type="c_include">
    <files mask="lwipopts.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32" type="script">
    <files mask="Common.mk" hidden="true"/>
    <files mask="Filelists.cmake" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32/check" type="c_include">
    <files mask="check_stdint.h" hidden="true"/>
    <files mask="config.h" hidden="true"/>
    <files mask="stdbool.h" hidden="true"/>
    <files mask="unistd.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32/check/sys" type="c_include">
    <files mask="time.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32/check" type="src">
    <files mask="time.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32/example_app" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32/example_app" type="other">
    <files mask="Makefile" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32/example_app" type="src">
    <files mask="default_netif.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32/include/arch" type="c_include">
    <files mask="bpstruct.h" hidden="true"/>
    <files mask="cc.h" hidden="true"/>
    <files mask="epstruct.h" hidden="true"/>
    <files mask="perf.h" hidden="true"/>
    <files mask="sys_arch.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32/msvc" type="other">
    <files mask="build_coverity.cmd" hidden="true"/>
    <files mask="libcheck.vcxproj" hidden="true"/>
    <files mask="libcheck.vcxproj.filters" hidden="true"/>
    <files mask="lwIP.vcxproj" hidden="true"/>
    <files mask="lwIP.vcxproj.filters" hidden="true"/>
    <files mask="lwIP_Test.sln" hidden="true"/>
    <files mask="lwIP_Test.vcxproj" hidden="true"/>
    <files mask="lwIP_Test.vcxproj.filters" hidden="true"/>
    <files mask="lwIP_fuzz.sln" hidden="true"/>
    <files mask="lwIP_pcapif.vcxproj" hidden="true"/>
    <files mask="lwIP_pcapif.vcxproj.filters" hidden="true"/>
    <files mask="lwIP_unittests.sln" hidden="true"/>
    <files mask="lwip_fuzz.vcxproj" hidden="true"/>
    <files mask="lwip_unittests.vcxproj" hidden="true"/>
    <files mask="lwip_unittests.vcxproj.filters" hidden="true"/>
    <files mask="makefsdata.vcxproj" hidden="true"/>
    <files mask="makefsdata.vcxproj.filters" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32" type="src">
    <files mask="pcapif.c" hidden="true"/>
    <files mask="pcapif_helper.c" hidden="true"/>
    <files mask="sio.c" hidden="true"/>
    <files mask="sys_arch.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32" type="c_include">
    <files mask="pcapif.h" hidden="true"/>
    <files mask="pcapif_helper.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32" type="doc">
    <files mask="readme.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/apps/altcp_tls" type="src">
    <files mask="altcp_tls_mbedtls.c" hidden="true"/>
    <files mask="altcp_tls_mbedtls_mem.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/apps/altcp_tls" type="c_include">
    <files mask="altcp_tls_mbedtls_mem.h" hidden="true"/>
    <files mask="altcp_tls_mbedtls_structs.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/apps/http" type="src">
    <files mask="altcp_proxyconnect.c" hidden="true"/>
    <files mask="http_client.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/apps/netbiosns" type="src">
    <files mask="netbiosns.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/apps/smtp" type="src">
    <files mask="smtp.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/apps/snmp" type="src">
    <files mask="snmp_asn1.c" hidden="true"/>
    <files mask="snmp_core.c" hidden="true"/>
    <files mask="snmp_mib2.c" hidden="true"/>
    <files mask="snmp_mib2_icmp.c" hidden="true"/>
    <files mask="snmp_mib2_interfaces.c" hidden="true"/>
    <files mask="snmp_mib2_ip.c" hidden="true"/>
    <files mask="snmp_mib2_snmp.c" hidden="true"/>
    <files mask="snmp_mib2_system.c" hidden="true"/>
    <files mask="snmp_mib2_tcp.c" hidden="true"/>
    <files mask="snmp_mib2_udp.c" hidden="true"/>
    <files mask="snmp_msg.c" hidden="true"/>
    <files mask="snmp_netconn.c" hidden="true"/>
    <files mask="snmp_pbuf_stream.c" hidden="true"/>
    <files mask="snmp_raw.c" hidden="true"/>
    <files mask="snmp_scalar.c" hidden="true"/>
    <files mask="snmp_snmpv2_framework.c" hidden="true"/>
    <files mask="snmp_snmpv2_usm.c" hidden="true"/>
    <files mask="snmp_table.c" hidden="true"/>
    <files mask="snmp_threadsync.c" hidden="true"/>
    <files mask="snmp_traps.c" hidden="true"/>
    <files mask="snmpv3.c" hidden="true"/>
    <files mask="snmpv3_mbedtls.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/apps/snmp" type="c_include">
    <files mask="snmp_asn1.h" hidden="true"/>
    <files mask="snmp_core_priv.h" hidden="true"/>
    <files mask="snmp_msg.h" hidden="true"/>
    <files mask="snmp_pbuf_stream.h" hidden="true"/>
    <files mask="snmpv3_priv.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/apps/tftp" type="src">
    <files mask="tftp.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/include/lwip" type="other">
    <files mask="init.h.cmake.in" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/include/lwip/apps" type="c_include">
    <files mask="altcp_proxyconnect.h" hidden="true"/>
    <files mask="altcp_tls_mbedtls_opts.h" hidden="true"/>
    <files mask="http_client.h" hidden="true"/>
    <files mask="netbiosns.h" hidden="true"/>
    <files mask="netbiosns_opts.h" hidden="true"/>
    <files mask="smtp.h" hidden="true"/>
    <files mask="smtp_opts.h" hidden="true"/>
    <files mask="snmp.h" hidden="true"/>
    <files mask="snmpv3.h" hidden="true"/>
    <files mask="snmp_core.h" hidden="true"/>
    <files mask="snmp_mib2.h" hidden="true"/>
    <files mask="snmp_opts.h" hidden="true"/>
    <files mask="snmp_scalar.h" hidden="true"/>
    <files mask="snmp_snmpv2_framework.h" hidden="true"/>
    <files mask="snmp_snmpv2_usm.h" hidden="true"/>
    <files mask="snmp_table.h" hidden="true"/>
    <files mask="snmp_threadsync.h" hidden="true"/>
    <files mask="tftp_client.h" hidden="true"/>
    <files mask="tftp_common.h" hidden="true"/>
    <files mask="tftp_opts.h" hidden="true"/>
    <files mask="tftp_server.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/include/lwip/apps" type="other">
    <files mask="FILES" hidden="true"/>
  </source>
</component>-->
    <component id="middleware.lvgl.template.MIMXRT1176" name="lvgl_template" brief="lvgl template" version="9.2.1" full_name="lvgl template configuration" category="Graphics/lvgl graphics library" user_visible="false" type="project_template" package_base_path="middleware/lvgl" project_base_path="lvgl">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="template" config="true" type="c_include">
        <files mask="lv_conf.h"/>
      </source>
      <source relative_path="template" config="true" type="src">
        <files mask="lvgl_support.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.littlefs.MIMXRT1176" name="LittleFS" brief="littlefs" version="2.9.1" full_name="LittleFS File System stack" category="File System/LittleFS File System" user_visible="true" type="middleware" package_base_path="middleware/littlefs" project_base_path="littlefs">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lfs.c"/>
        <files mask="lfs_util.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lfs.h"/>
        <files mask="lfs_util.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_littlefs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.libjpeg.MIMXRT1176" name="libjpeg" brief="JPEG library" version="9.2.0" revision="1" full_name="Middleware libjpeg" category="Image/JPEG library" user_visible="true" type="middleware" package_base_path="middleware/libjpeg" project_base_path="libjpeg">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="change.log" hidden="true"/>
        <files mask="README" hidden="true"/>
      </source>
      <source relative_path="inc" type="c_include">
        <files mask="cderror.h"/>
        <files mask="cdjpeg.h"/>
        <files mask="jdct.h"/>
        <files mask="jerror.h"/>
        <files mask="jinclude.h"/>
        <files mask="jmemsys.h"/>
        <files mask="jmorecfg.h"/>
        <files mask="jpegint.h"/>
        <files mask="jpeglib.h"/>
        <files mask="jversion.h"/>
        <files mask="transupp.h"/>
      </source>
      <source relative_path="src" type="src">
        <files mask="jaricom.c"/>
        <files mask="jcapimin.c"/>
        <files mask="jcapistd.c"/>
        <files mask="jcarith.c"/>
        <files mask="jccoefct.c"/>
        <files mask="jccolor.c"/>
        <files mask="jcdctmgr.c"/>
        <files mask="jchuff.c"/>
        <files mask="jcinit.c"/>
        <files mask="jcmainct.c"/>
        <files mask="jcmarker.c"/>
        <files mask="jcmaster.c"/>
        <files mask="jcomapi.c"/>
        <files mask="jcparam.c"/>
        <files mask="jcprepct.c"/>
        <files mask="jcsample.c"/>
        <files mask="jctrans.c"/>
        <files mask="jdapimin.c"/>
        <files mask="jdapistd.c"/>
        <files mask="jdarith.c"/>
        <files mask="jdatadst.c"/>
        <files mask="jdatasrc.c"/>
        <files mask="jdcoefct.c"/>
        <files mask="jdcolor.c"/>
        <files mask="jddctmgr.c"/>
        <files mask="jdhuff.c"/>
        <files mask="jdinput.c"/>
        <files mask="jdmainct.c"/>
        <files mask="jdmarker.c"/>
        <files mask="jdmaster.c"/>
        <files mask="jdmerge.c"/>
        <files mask="jdpostct.c"/>
        <files mask="jdsample.c"/>
        <files mask="jdtrans.c"/>
        <files mask="jerror.c"/>
        <files mask="jfdctflt.c"/>
        <files mask="jfdctfst.c"/>
        <files mask="jfdctint.c"/>
        <files mask="jidctflt.c"/>
        <files mask="jidctfst.c"/>
        <files mask="jidctint.c"/>
        <files mask="jmemmgr.c"/>
        <files mask="jmemnobs.c"/>
        <files mask="jquant1.c"/>
        <files mask="jquant2.c"/>
        <files mask="jutils.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_libjpeg.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="inc" type="c_include"/>
        <include_path relative_path="inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.libjpeg.template.MIMXRT1176" name="LIBJPEG configuration template" brief="Template configuration file to be edited by user. Users could map the file system functions to the file system they are using." version="9.2.0" revision="1" full_name="LIBJPEG configuration template" category="Image/JPEG library" user_visible="false" type="project_template" package_base_path="middleware/libjpeg" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="template" config="true" type="c_include">
        <files mask="jconfig.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_libjpeg_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.MIMXRT1176" name="fatfs" brief="FatFs" version="0.15.0" full_name="FAT File System stack" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="diskio.c"/>
        <files mask="ff.c"/>
        <files mask="ffsystem.c"/>
        <files mask="ffunicode.c"/>
      </source>
      <source relative_path="source" type="c_include">
        <files mask="diskio.h"/>
        <files mask="ff.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source" type="c_include"/>
        <include_path relative_path="source" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_mmc.MIMXRT1176" name="fatfs_mmc" brief="FatFs template MMC" version="0.15.0" full_name="FatFs template configuration for MMC disk" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="template/mmc" config="true" type="c_include">
        <files mask="ffconf_gen.h"/>
      </source>
      <source relative_path="template" config="true" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_template_mmc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/mmc" type="c_include"/>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/mmc" type="asm_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_nand.MIMXRT1176" name="fatfs_nand" brief="FatFs template NAND" version="0.15.0" full_name="FatFs template configuration for NAND disk" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="template/nand" config="true" type="c_include">
        <files mask="ffconf_gen.h"/>
      </source>
      <source relative_path="template" config="true" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_template_nand.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/nand" type="c_include"/>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/nand" type="asm_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_ram.MIMXRT1176" name="fatfs_ram" brief="FatFs template RAM" version="0.15.0" full_name="FatFs template configuration for RAM disk" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="template/ram" config="true" type="c_include">
        <files mask="ffconf_gen.h"/>
      </source>
      <source relative_path="template" config="true" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_template_ram.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/ram" type="c_include"/>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/ram" type="asm_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_sd.MIMXRT1176" name="fatfs_sd" brief="FatFs template SD" version="0.15.0" full_name="FatFs template configuration for SD disk" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="template/sd" config="true" type="c_include">
        <files mask="ffconf_gen.h"/>
      </source>
      <source relative_path="template" config="true" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_template_sd.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/sd" type="c_include"/>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/sd" type="asm_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_sdspi.MIMXRT1176" name="fatfs_sdspi" brief="FatFs template SDSPI" version="0.15.0" full_name="FatFs template configuration for SDSPI disk" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="template/sdspi" config="true" type="c_include">
        <files mask="ffconf_gen.h"/>
      </source>
      <source relative_path="template" config="true" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_template_sdspi.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/sdspi" type="c_include"/>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/sdspi" type="asm_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_usb.MIMXRT1176" name="fatfs_usb" brief="FatFs template USB" version="0.15.0" full_name="FatFs template configuration for USB disk" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="template/usb" config="true" type="c_include">
        <files mask="ffconf_gen.h"/>
      </source>
      <source relative_path="template" config="true" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_template_usb.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/usb" type="c_include"/>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/usb" type="asm_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.emwin.template.MIMXRT1176" name="emwin_template" brief="emwin template" version="6.38" full_name="emWin template configuration" category="Graphics/emWin graphics library" user_visible="false" type="project_template" package_base_path="middleware/emwin" project_base_path="emwin">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="template" config="true" type="src">
        <files mask="emwin_support.c"/>
      </source>
      <source relative_path="template" config="true" type="c_include">
        <files mask="emwin_support.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_emwin_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="emWin_Config" type="c_include"/>
        <include_path relative_path="emWin_header" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.dhara.MIMXRT1176" name="dhara" brief="Middleware dhara" version="2.0.0" full_name="dhara" category="Memories/Nand flash management stack" user_visible="true" type="middleware" package_base_path="middleware/dhara" project_base_path="dhara">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="dhara" type="src">
        <files mask="map.c"/>
        <files mask="journal.c"/>
        <files mask="error.c"/>
      </source>
      <source relative_path="dhara" type="c_include">
        <files mask="map.h"/>
        <files mask="journal.h"/>
        <files mask="error.h"/>
        <files mask="bytes.h"/>
        <files mask="nand.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_dhara.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="dhara" type="c_include"/>
        <include_path relative_path="dhara" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.cjson.MIMXRT1176" name="cjson" brief="CJSON library" version="1.7.4" revision="0" full_name="Middleware cjson" category="JSON/CJSON library" user_visible="true" type="middleware" package_base_path="middleware/cjson" project_base_path="cjson">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="CHANGELOG.md" hidden="true"/>
        <files mask="LICENSE" hidden="true"/>
        <files mask="README.md" hidden="true"/>
        <files mask="CONTRIBUTORS.md" hidden="true"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="cJSON.h"/>
        <files mask="cJSON_Utils.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="cJSON.c"/>
        <files mask="cJSON_Utils.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_cjson.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.aws_iot.device_defender.MIMXRT1176" name="device-defender-for-aws-iot-embedded-sdk" brief="Client library for using the AWS IoT Device Defender service on embedded devices." version="1.3.0" full_name="AWS IoT Device Defender Library" category="AWS IoT/AWS IoT Device Defender" user_visible="false" type="middleware" package_base_path="middleware/aws_iot/device-defender" project_base_path="aws_iot/device-defender">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="defender.c"/>
      </source>
      <source relative_path="source/include" type="c_include">
        <files mask="defender.h"/>
        <files mask="defender_config_defaults.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_aws_iot_device_defender.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/include" type="c_include"/>
        <include_path relative_path="source/include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.wifi_bt_module.config.MIMXRT1176" name="wifi_bt_module_config" brief="Wi-Fi and BT module configs" version="1.0.0" full_name="Wi-Fi and BT module configs" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/wifi_bt_module" project_base_path="component/wifi_bt_module">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="incl" type="c_include">
        <files mask="wifi_bt_module_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_wifi_bt_module_config.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="incl" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.wifi_bt_module.tx_pwr_limits.MIMXRT1176" name="wifi_bt_module_tx_pwr_limits" brief="Wi-Fi module Tx power limits" version="1.0.0" full_name="Wi-Fi module Tx power limits" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/wifi_bt_module" project_base_path="component/wifi_bt_module">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="AzureWave/tx_pwr_limits" type="c_include">
        <files mask="wlan_txpwrlimit_cfg_WW.h"/>
        <files mask="wlan_txpwrlimit_cfg_WW_rw610.h"/>
      </source>
      <source relative_path="Murata/tx_pwr_limits" type="c_include">
        <files mask="wlan_txpwrlimit_cfg_murata_1XK_WW.h"/>
        <files mask="wlan_txpwrlimit_cfg_murata_1ZM_WW.h"/>
        <files mask="wlan_txpwrlimit_cfg_murata_2DS_WW.h"/>
        <files mask="wlan_txpwrlimit_cfg_murata_2EL_WW.h"/>
        <files mask="wlan_txpwrlimit_cfg_murata_NH_FCC.h"/>
      </source>
      <source relative_path="u-blox/tx_pwr_limits" type="c_include">
        <files mask="wlan_txpwrlimit_cfg_jody_w5_WW.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_wifi_bt_module_tx_pwr_limits.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="AzureWave/tx_pwr_limits" type="c_include"/>
        <include_path relative_path="Murata/tx_pwr_limits" type="c_include"/>
        <include_path relative_path="u-blox/tx_pwr_limits" type="c_include"/>
        <include_path relative_path="AzureWave/tx_pwr_limits" type="asm_include"/>
        <include_path relative_path="Murata/tx_pwr_limits" type="asm_include"/>
        <include_path relative_path="u-blox/tx_pwr_limits" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.ektf2k.MIMXRT1176" name="ektf2k" brief="Driver ektf2k" version="1.0.0" full_name="Driver ektf2k" category="Device/SDK Drivers" user_visible="false" type="board_component" package_base_path="components/touch/ektf2k" project_base_path="touchpanel">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ektf2k.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ektf2k.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_ektf2k.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.ft3267.MIMXRT1176" name="ft3267" brief="Touch panel controller FT3267 driver" version="1.0.1" full_name="Driver ft3267" category="Device/SDK Drivers" user_visible="false" type="board_component" package_base_path="components/touch/ft3267" project_base_path="touchpanel">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ft3267.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ft3267.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_ft3267.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.ft5406.MIMXRT1176" name="ft5406" brief="Driver ft5406" version="1.0.0" full_name="Driver ft5406" category="Device/SDK Drivers" user_visible="false" type="board_component" package_base_path="components/touch/ft5406" project_base_path="touchpanel">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ft5406.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ft5406.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_ft5406.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.gt911.MIMXRT1176" name="gt911" brief="Driver gt911" version="1.0.4" full_name="Driver gt911" category="Device/SDK Drivers" user_visible="false" type="board_component" package_base_path="components/touch/gt911" project_base_path="touchpanel">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_gt911.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_gt911.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_gt911.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.tma525b.MIMXRT1176" name="tma525b" brief="Driver tma525b" version="1.0.0" full_name="Driver tma525b" category="Device/SDK Drivers" user_visible="false" type="board_component" package_base_path="components/touch/tma525b" project_base_path="touchpanel">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_tma525b.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_tma525b.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_tma525b.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.silicon_id_imx8.MIMXRT1176" name="silicon_id_imx8" brief="Driver silicon_id imx8" version="2.0.0" full_name="Driver silicon_id_imx8" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/silicon_id/socs/imx8" project_base_path="component/silicon_id">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_silicon_id_soc.c"/>
      </source>
      <source relative_path=".." type="c_include">
        <files mask="fsl_silicon_id_soc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_silicon_id_imx8.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path=".." type="c_include"/>
        <include_path relative_path=".." type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.silicon_id_imx93.MIMXRT1176" name="silicon_id_imx93" brief="Driver silicon_id imx93" version="2.0.0" full_name="Driver silicon_id_imx93" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/silicon_id/socs/imx93" project_base_path="component/silicon_id">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_silicon_id_soc.c"/>
      </source>
      <source relative_path=".." type="c_include">
        <files mask="fsl_silicon_id_soc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_silicon_id_imx93.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path=".." type="c_include"/>
        <include_path relative_path=".." type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.silicon_id_imxrt10xx.MIMXRT1176" name="silicon_id_rt10xx" brief="Driver silicon_id rt10xx" version="2.0.0" full_name="Driver silicon_id_rt10xx" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/silicon_id/socs/rt10xx" project_base_path="component/silicon_id">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_silicon_id_soc.c"/>
      </source>
      <source relative_path=".." type="c_include">
        <files mask="fsl_silicon_id_soc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_silicon_id_imxrt10xx.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path=".." type="c_include"/>
        <include_path relative_path=".." type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.silicon_id_imxrt1170.MIMXRT1176" name="silicon_id_rt1170" brief="Driver silicon_id imxrt1170" version="2.0.0" full_name="Driver silicon_id_rt1170" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/silicon_id/socs/imxrt1170" project_base_path="component/silicon_id">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_silicon_id_soc.c"/>
      </source>
      <source relative_path=".." type="c_include">
        <files mask="fsl_silicon_id_soc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_silicon_id_imxrt1170.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path=".." type="c_include"/>
        <include_path relative_path=".." type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.silicon_id_imxrt1180.MIMXRT1176" name="silicon_id_rt1180" brief="Driver silicon_id imxrt1180" version="2.0.0" full_name="Driver silicon_id_rt1180" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/silicon_id/socs/imxrt1180" project_base_path="component/silicon_id">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_silicon_id_soc.c"/>
      </source>
      <source relative_path=".." type="c_include">
        <files mask="fsl_silicon_id_soc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_silicon_id_imxrt1180.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path=".." type="c_include"/>
        <include_path relative_path=".." type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.silicon_id_rw610.MIMXRT1176" name="silicon_id_rw610" brief="Driver silicon_id rw610" version="2.0.0" full_name="Driver silicon_id_rw610" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/silicon_id/socs/rw610" project_base_path="component/silicon_id">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_silicon_id_soc.c"/>
      </source>
      <source relative_path=".." type="c_include">
        <files mask="fsl_silicon_id_soc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_silicon_id_rw610.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path=".." type="c_include"/>
        <include_path relative_path=".." type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.silicon_id_scfw.MIMXRT1176" name="silicon_id_scfw" brief="Driver silicon_id scfw" version="2.0.0" full_name="Driver silicon_id_scfw" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/silicon_id/socs/scfw" project_base_path="component/silicon_id">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_silicon_id_soc.c"/>
      </source>
      <source relative_path=".." type="c_include">
        <files mask="fsl_silicon_id_soc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_silicon_id_scfw.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path=".." type="c_include"/>
        <include_path relative_path=".." type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_swo.MIMXRT1176" name="serial_manager_swo" brief="Component serial_manager_swo" version="1.0.0" full_name="Serial Manager Swo" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_SWO" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_swo.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_swo.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_serial_manager_swo.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_virtual.MIMXRT1176" name="serial_manager_virtual" brief="Component serial_manager_virtual" version="1.0.0" full_name="Serial Manager Virtual" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SSERIAL_PORT_TYPE_VIRTUAL" value="1"/>
        <define name="DEBUG_CONSOLE_TRANSFER_NON_BLOCKING" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_virtual.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_virtual.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_serial_manager_virtual.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.software_rng_adapter.MIMXRT1176" name="software_rng_adapter" brief="Component software_rng_adapter" version="1.0.0" full_name="Component software_rng_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/rng" project_base_path="component/rng">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_rng.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_software_rng.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_software_rng_adapter.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.reset_adapter.MIMXRT1176" name="reset_adapter" brief="Component reset_adapter" version="1.0.0" full_name="Component reset_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/reset" project_base_path="component/reset">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_reset.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_reset.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_reset_adapter.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.panic.MIMXRT1176" name="panic" brief="Component panic" version="1.0.0" full_name="Component panic" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/panic" project_base_path="component/panic">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_panic.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_panic.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_panic.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.osa_template_config.MIMXRT1176" name="osa" brief="Component osa template config" version="1.0.0" full_name="Component osa template config" category="NXP Component/OS Abstraction Layer" user_visible="true" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="config" config="true" type="c_include">
        <files mask="fsl_os_abstraction_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_osa_template_config.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="config" type="c_include"/>
        <include_path relative_path="config" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.nvm_adapter.MIMXRT1176" name="nvm_adapter" brief="Component nvm_adapter" version="1.0.0" full_name="NVM Adapter" category="Device/SDK Utilities" user_visible="false" type="utilities" package_base_path="components/nvm" project_base_path="component/nvm">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
    </component>
    <component id="driver.mx25r_flash.MIMXRT1176" name="mx25r_flash" brief="Driver mx25r_flash" version="2.0.0" full_name="Driver mx25r_flash" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/mx25r_flash" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="mx25r_flash.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="mx25r_flash.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_mx25r_flash.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.mflash_onchip_fmu.MIMXRT1176" name="mflash onchip_fmu" brief="mflash onchip_fmu" version="1.0.0" full_name="mflash onchip_fmu" category="Device/SDK Drivers" user_visible="false" type="software_component" package_base_path="components/flash/mflash" project_base_path="flash/mflash">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
    </component>
    <component id="component.software_crc_adapter.MIMXRT1176" name="software_crc_adapter" brief="Component software_crc_adapter" version="1.0.0" full_name="Component software_crc_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/crc" project_base_path="component/crc">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_crc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_software_crc.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_software_crc_adapter.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.ak4497_adapter.MIMXRT1176" name="codec_ak4497_adapter" brief="Component ak4497 adapter for single codec" version="2.2.0" full_name="Component ak4497_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="port/ak4497" type="c_include">
        <files mask="fsl_codec_ak4497_adapter.h"/>
      </source>
      <source relative_path="port/ak4497" type="src">
        <files mask="fsl_codec_ak4497_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_ak4497_adapter.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/ak4497" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/ak4497" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.codec_adapters.MIMXRT1176" name="codec_adapters" brief="Component codec adapters for multi codec" version="2.2.0" full_name="Component codec_adapters" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec/" project_base_path="codec">
      <defines>
        <define name="CODEC_MULTI_ADAPTERS" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="port" type="src">
        <files mask="fsl_codec_adapter.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_codec_adapters.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.cs42448_adapter.MIMXRT1176" name="codec_cs42448_adapter" brief="Component cs42448 adapter for single codec" version="2.2.1" full_name="Component cs42448_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="port/cs42448" type="c_include">
        <files mask="fsl_codec_cs42448_adapter.h"/>
      </source>
      <source relative_path="port/cs42448" type="src">
        <files mask="fsl_codec_cs42448_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_cs42448_adapter.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/cs42448" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/cs42448" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.cs42888_adapter.MIMXRT1176" name="codec_cs42888_adapter" brief="Component cs42888 adapter for single codec" version="2.2.1" full_name="Component cs42888_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="port/cs42888" type="c_include">
        <files mask="fsl_codec_cs42888_adapter.h"/>
      </source>
      <source relative_path="port/cs42888" type="src">
        <files mask="fsl_codec_cs42888_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_cs42888_adapter.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/cs42888" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/cs42888" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.da7212_adapter.MIMXRT1176" name="codec_da7212_adapter" brief="Component da7212 adapter for single codec" version="2.2.0" full_name="Component da7212_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="port/da7212" type="c_include">
        <files mask="fsl_codec_da7212_adapter.h"/>
      </source>
      <source relative_path="port/da7212" type="src">
        <files mask="fsl_codec_da7212_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_da7212_adapter.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/da7212" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/da7212" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.pcm186x_adapter.MIMXRT1176" name="codec_pcm186x_adapter" brief="Component pcm186x adapter for single codec" version="2.0.0" full_name="Component pcm186x_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="port/pcm186x" type="c_include">
        <files mask="fsl_codec_pcm186x_adapter.h"/>
      </source>
      <source relative_path="port/pcm186x" type="src">
        <files mask="fsl_codec_pcm186x_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_pcm186x_adapter.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/pcm186x" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/pcm186x" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.pcm512x_adapter.MIMXRT1176" name="codec_pcm512x_adapter" brief="Component pcm512x adapter for single codec" version="2.0.0" full_name="Component pcm512x_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="port/pcm512x" type="c_include">
        <files mask="fsl_codec_pcm512x_adapter.h"/>
      </source>
      <source relative_path="port/pcm512x" type="src">
        <files mask="fsl_codec_pcm512x_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_pcm512x_adapter.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/pcm512x" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/pcm512x" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.sgtl_adapter.MIMXRT1176" name="codec_sgtl_adapter" brief="Component sgtl5000 adapter for single codec" version="2.2.0" full_name="Component sgtl_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="port/sgtl5000" type="c_include">
        <files mask="fsl_codec_sgtl_adapter.h"/>
      </source>
      <source relative_path="port/sgtl5000" type="src">
        <files mask="fsl_codec_sgtl_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_sgtl_adapter.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/sgtl5000" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/sgtl5000" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.tfa9896_adapter.MIMXRT1176" name="codec_tfa9896_adapter" brief="Component tfa9896 adapter for single codec" version="2.2.0" full_name="Component tfa9896_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="port/tfa9896" type="c_include">
        <files mask="fsl_codec_tfa9896_adapter.h"/>
      </source>
      <source relative_path="port/tfa9896" type="src">
        <files mask="fsl_codec_tfa9896_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_tfa9896_adapter.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/tfa9896" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/tfa9896" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.tfa9xxx_adapter.MIMXRT1176" name="codec_tfa9xxx_adapter" brief="Component tfa9xxx adapter for single codec" version="2.2.0" full_name="Component tfa9xxx_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="port/tfa9xxx" type="c_include">
        <files mask="fsl_codec_tfa9xxx_adapter.h"/>
      </source>
      <source relative_path="port/tfa9xxx" type="src">
        <files mask="fsl_codec_tfa9xxx_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_tfa9xxx_adapter.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/tfa9xxx" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/tfa9xxx" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.wm8524_adapter.MIMXRT1176" name="codec_wm8524_adapter" brief="Component wm8524 adapter for single codec" version="2.2.0" full_name="Component wm8524_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="port/wm8524" type="c_include">
        <files mask="fsl_codec_wm8524_adapter.h"/>
      </source>
      <source relative_path="port/wm8524" type="src">
        <files mask="fsl_codec_wm8524_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_wm8524_adapter.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/wm8524" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/wm8524" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.wm8904_adapter.MIMXRT1176" name="codec_wm8904_adapter" brief="Component wm8904 adapter for single codec" version="2.2.0" full_name="Component wm8904_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec/" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="port/wm8904" type="c_include">
        <files mask="fsl_codec_wm8904_adapter.h"/>
      </source>
      <source relative_path="port/wm8904" type="src">
        <files mask="fsl_codec_wm8904_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_wm8904_adapter.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/wm8904" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/wm8904" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.wm8960_adapter.MIMXRT1176" name="codec_wm8960_adapter" brief="Component wm8960 adapter for single codecs" version="2.2.0" full_name="Component wm8960_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec/" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="port/wm8960" type="c_include">
        <files mask="fsl_codec_wm8960_adapter.h"/>
      </source>
      <source relative_path="port/wm8960" type="src">
        <files mask="fsl_codec_wm8960_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_wm8960_adapter.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/wm8960" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/wm8960" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.wm8962_adapter.MIMXRT1176" name="codec_wm8962_adapter" brief="Component wm8962 adapter for single codecs" version="2.2.0" full_name="Component wm8962_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec/" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="port/wm8962" type="c_include">
        <files mask="fsl_codec_wm8962_adapter.h"/>
      </source>
      <source relative_path="port/wm8962" type="src">
        <files mask="fsl_codec_wm8962_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_wm8962_adapter.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/wm8962" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/wm8962" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.codec.MIMXRT1176" name="codec" brief="Driver codec" version="2.3.1" full_name="Driver codec" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_codec_common.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_codec_common.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_codec.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="project_template.MIMXRT1176.MIMXRT1176" name="MIMXRT1176" brief="Devices_project_template MIMXRT1176" version="1.0.0" full_name="Devices_project_template MIMXRT1176" category="Board Support/SDK Project Template" user_visible="true" type="project_template" package_base_path="devices/MIMXRT1176/project_template" project_base_path="board">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Include_core_cm.MIMXRT1176"/>
          <component_dependency value="device.MIMXRT1176_startup.MIMXRT1176"/>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <component_dependency value="platform.drivers.clock.MIMXRT1176"/>
          <component_dependency value="platform.drivers.igpio.MIMXRT1176"/>
          <component_dependency value="platform.drivers.iomuxc.MIMXRT1176"/>
          <component_dependency value="platform.drivers.pmu_1.MIMXRT1176"/>
          <component_dependency value="platform.drivers.anatop_ai.MIMXRT1176"/>
          <component_dependency value="platform.drivers.memory.MIMXRT1176"/>
          <component_dependency value="platform.drivers.dcdc_soc.MIMXRT1176"/>
          <component_dependency value="platform.drivers.gpc_3.MIMXRT1176"/>
          <component_dependency value="platform.drivers.pgmc.MIMXRT1176"/>
          <component_dependency value="platform.drivers.soc_src.MIMXRT1176"/>
          <component_dependency value="platform.drivers.nic301.MIMXRT1176"/>
          <component_dependency value="platform.drivers.xip_device.MIMXRT1176"/>
          <component_dependency value="component.lpuart_adapter.MIMXRT1176"/>
          <component_dependency value="utility.debug_console_lite.MIMXRT1176"/>
          <component_dependency value="platform.utilities.assert_lite.MIMXRT1176"/>
          <component_dependency value="utility.str.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" config="true" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="pin_mux.h"/>
        <files mask="peripherals.h"/>
      </source>
      <source relative_path="./" config="true" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="pin_mux.c"/>
        <files mask="peripherals.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="device_project_template.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.devices.MIMXRT1176_linker.MIMXRT1176" name="MIMXRT1176_linker" brief="Device MIMXRT1176_linker" version="1.0.0" full_name="Device MIMXRT1176_linker" category="Device/SDK Utilities" user_visible="true" type="linker" package_base_path="devices/MIMXRT1176" project_base_path="MIMXRT1176">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source toolchain="mdk" relative_path="arm" config="true" type="linker" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="MIMXRT1176xxxxx_cm4_flexspi_nor.scf"/>
        <files mask="MIMXRT1176xxxxx_cm4_flexspi_nor_sdram.scf"/>
        <files mask="MIMXRT1176xxxxx_cm4_ram.scf"/>
        <files mask="MIMXRT1176xxxxx_cm4_sdram.scf"/>
        <files mask="MIMXRT1176xxxxx_cm4_sdram_txt.scf"/>
      </source>
      <source toolchain="armgcc" relative_path="gcc" config="true" type="linker" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="MIMXRT1176xxxxx_cm4_flexspi_nor.ld"/>
        <files mask="MIMXRT1176xxxxx_cm4_flexspi_nor_sdram.ld"/>
        <files mask="MIMXRT1176xxxxx_cm4_ram.ld"/>
        <files mask="MIMXRT1176xxxxx_cm4_sdram.ld"/>
        <files mask="MIMXRT1176xxxxx_cm4_sdram_txt.ld"/>
      </source>
      <source toolchain="iar" relative_path="iar" config="true" type="linker" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="MIMXRT1176xxxxx_cm4_flexspi_nor.icf"/>
        <files mask="MIMXRT1176xxxxx_cm4_flexspi_nor_sdram.icf"/>
        <files mask="MIMXRT1176xxxxx_cm4_ram.icf"/>
        <files mask="MIMXRT1176xxxxx_cm4_sdram.icf"/>
        <files mask="MIMXRT1176xxxxx_cm4_sdram_txt.icf"/>
      </source>
      <source toolchain="mdk" relative_path="arm" config="true" type="linker" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="MIMXRT1176xxxxx_cm7_flexspi_nor.scf"/>
        <files mask="MIMXRT1176xxxxx_cm7_flexspi_nor_sdram.scf"/>
        <files mask="MIMXRT1176xxxxx_cm7_ram.scf"/>
        <files mask="MIMXRT1176xxxxx_cm7_sdram.scf"/>
        <files mask="MIMXRT1176xxxxx_cm7_sdram_txt.scf"/>
      </source>
      <source toolchain="armgcc" relative_path="gcc" config="true" type="linker" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="MIMXRT1176xxxxx_cm7_flexspi_nor.ld"/>
        <files mask="MIMXRT1176xxxxx_cm7_flexspi_nor_sdram.ld"/>
        <files mask="MIMXRT1176xxxxx_cm7_ram.ld"/>
        <files mask="MIMXRT1176xxxxx_cm7_sdram.ld"/>
        <files mask="MIMXRT1176xxxxx_cm7_sdram_txt.ld"/>
      </source>
      <source toolchain="iar" relative_path="iar" config="true" type="linker" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="MIMXRT1176xxxxx_cm7_flexspi_nor.icf"/>
        <files mask="MIMXRT1176xxxxx_cm7_flexspi_nor_sdram.icf"/>
        <files mask="MIMXRT1176xxxxx_cm7_ram.icf"/>
        <files mask="MIMXRT1176xxxxx_cm7_sdram.icf"/>
        <files mask="MIMXRT1176xxxxx_cm7_sdram_txt.icf"/>
      </source>
    </component>
    <component id="platform.drivers.cache_lmem.MIMXRT1176" name="cache_lmem" brief="CACHE LMEM Driver" version="2.0.6" full_name="CACHE LMEM Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers/cm4" project_base_path="drivers">
      <dependencies>
        <all>
          <device_dependency value="MIMXRT1176xxxxx"/>
          <device_core_dependency value="cm4_MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_cache.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cache.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_cache_lmem.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.cache_armv7_m7.MIMXRT1176" name="cache" brief="CACHE Driver" version="2.0.4" full_name="CACHE Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers/cm7" project_base_path="drivers">
      <dependencies>
        <all>
          <device_dependency value="MIMXRT1176xxxxx"/>
          <device_core_dependency value="cm7_MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_cache.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cache.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_cache_armv7_m7.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.nic301.MIMXRT1176" name="nic301" brief="NIC301 Driver" version="2.0.1" full_name="NIC301 Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_nic301.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_nic301.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.iomuxc.MIMXRT1176" name="iomuxc" brief="IOMUXC Driver" version="2.0.2" full_name="IOMUXC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_iomuxc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_iomuxc.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.soc_mipi_csi2rx.MIMXRT1176" name="soc_mipi_csi2rx" brief="SOC MIPI CSI2RX Driver" version="2.0.2" full_name="SOC MIPI CSI2RX Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_soc_mipi_csi2rx.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_soc_mipi_csi2rx.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_mipi_csi2rx_soc.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.soc_mipi_dsi.MIMXRT1176" name="soc_mipi_dsi" brief="SOC MIPI DSI Driver" version="2.0.0" full_name="SOC MIPI DSI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_soc_mipi_dsi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_soc_mipi_dsi.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.anatop_ai.MIMXRT1176" name="anatop_ai" brief="ANATOP AI Driver" version="1.0.0" full_name="ANATOP AI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_anatop_ai.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_anatop_ai.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_anatop_ai.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.memory.MIMXRT1176" name="memory" brief="MEMORY Driver" version="2.0.0" full_name="Memory Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_memory.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_memory.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dcdc_soc.MIMXRT1176" name="dcdc_soc" brief="DCDC SOC Driver" version="2.1.2" full_name="DCDC SOC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_dcdc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dcdc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dcdc_2.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.gpc_3.MIMXRT1176" name="gpc" brief="GPC Driver" version="2.5.0" full_name="GPC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_gpc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_gpc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_gpc_xxx_ctrl.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pgmc.MIMXRT1176" name="pgmc" brief="PGMC Driver" version="2.1.2" full_name="PGMC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pgmc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pgmc.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_pgmc.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.soc_src.MIMXRT1176" name="soc_src" brief="SOC SRC Driver" version="2.1.1" full_name="SOC SRC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_soc_src.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_soc_src.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_src_2.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.romapi.MIMXRT1176" name="ROMAPI" brief="ROMAPI Driver" version="1.1.1" full_name="ROMAPI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_romapi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_romapi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_romapi.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.soc_flexram_allocate.MIMXRT1176" name="soc_flexram_allocate" brief="SOC FLEXRAM ALLOCATE Driver" version="2.0.2" full_name="SOC FLEXRAM ALLOCATE Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexram_allocate.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexram_allocate.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexram_allocate.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="device.MIMXRT1176_CMSIS.MIMXRT1176" name="MIMXRT1176_CMSIS" brief="Device MIMXRT1176_cmsis" version="1.0.0" full_name="Device MIMXRT1176_cmsis" category="Device/CMSIS" user_visible="true" type="CMSIS_Include" package_base_path="devices/MIMXRT1176" project_base_path="device">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Include_core_cm.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_device_registers.h"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="MIMXRT1176_cm4.h"/>
        <files mask="MIMXRT1176_cm4_COMMON.h"/>
        <files mask="MIMXRT1176_cm4_features.h"/>
      </source>
      <source relative_path="periph" type="c_include">
        <files mask="PERI_ADC.h"/>
        <files mask="PERI_ADC_ETC.h"/>
        <files mask="PERI_ANADIG_LDO_SNVS.h"/>
        <files mask="PERI_ANADIG_LDO_SNVS_DIG.h"/>
        <files mask="PERI_ANADIG_MISC.h"/>
        <files mask="PERI_ANADIG_OSC.h"/>
        <files mask="PERI_ANADIG_PLL.h"/>
        <files mask="PERI_ANADIG_PMU.h"/>
        <files mask="PERI_ANADIG_TEMPSENSOR.h"/>
        <files mask="PERI_AOI.h"/>
        <files mask="PERI_ASRC.h"/>
        <files mask="PERI_AUDIO_PLL.h"/>
        <files mask="PERI_CAAM.h"/>
        <files mask="PERI_CAN.h"/>
        <files mask="PERI_CAN_WRAPPER.h"/>
        <files mask="PERI_CCM.h"/>
        <files mask="PERI_CCM_OBS.h"/>
        <files mask="PERI_CDOG.h"/>
        <files mask="PERI_CMP.h"/>
        <files mask="PERI_CSI.h"/>
        <files mask="PERI_DAC.h"/>
        <files mask="PERI_DCDC.h"/>
        <files mask="PERI_DCIC.h"/>
        <files mask="PERI_DMA.h"/>
        <files mask="PERI_DMAMUX.h"/>
        <files mask="PERI_DSI_HOST.h"/>
        <files mask="PERI_DSI_HOST_APB_PKT_IF.h"/>
        <files mask="PERI_DSI_HOST_DPI_INTFC.h"/>
        <files mask="PERI_DSI_HOST_NXP_FDSOI28_DPHY_INTFC.h"/>
        <files mask="PERI_EMVSIM.h"/>
        <files mask="PERI_ENC.h"/>
        <files mask="PERI_ENET.h"/>
        <files mask="PERI_ENET_QOS.h"/>
        <files mask="PERI_ETHERNET_PLL.h"/>
        <files mask="PERI_EWM.h"/>
        <files mask="PERI_FLEXIO.h"/>
        <files mask="PERI_FLEXRAM.h"/>
        <files mask="PERI_FLEXSPI.h"/>
        <files mask="PERI_GPC_CPU_MODE_CTRL.h"/>
        <files mask="PERI_GPC_SET_POINT_CTRL.h"/>
        <files mask="PERI_GPC_STBY_CTRL.h"/>
        <files mask="PERI_GPIO.h"/>
        <files mask="PERI_GPT.h"/>
        <files mask="PERI_I2S.h"/>
        <files mask="PERI_IEE.h"/>
        <files mask="PERI_IEE_APC.h"/>
        <files mask="PERI_IOMUXC.h"/>
        <files mask="PERI_IOMUXC_GPR.h"/>
        <files mask="PERI_IOMUXC_LPSR.h"/>
        <files mask="PERI_IOMUXC_LPSR_GPR.h"/>
        <files mask="PERI_IOMUXC_SNVS.h"/>
        <files mask="PERI_IOMUXC_SNVS_GPR.h"/>
        <files mask="PERI_IPS_DOMAIN.h"/>
        <files mask="PERI_KEY_MANAGER.h"/>
        <files mask="PERI_KPP.h"/>
        <files mask="PERI_LCDIF.h"/>
        <files mask="PERI_LCDIFV2.h"/>
        <files mask="PERI_LMEM.h"/>
        <files mask="PERI_LPI2C.h"/>
        <files mask="PERI_LPSPI.h"/>
        <files mask="PERI_LPUART.h"/>
        <files mask="PERI_MCM.h"/>
        <files mask="PERI_MECC.h"/>
        <files mask="PERI_MIPI_CSI2RX.h"/>
        <files mask="PERI_MMCAU.h"/>
        <files mask="PERI_MU.h"/>
        <files mask="PERI_OCOTP.h"/>
        <files mask="PERI_OSC_RC_400M.h"/>
        <files mask="PERI_OTFAD.h"/>
        <files mask="PERI_PDM.h"/>
        <files mask="PERI_PGMC_BPC.h"/>
        <files mask="PERI_PGMC_CPC.h"/>
        <files mask="PERI_PGMC_MIF.h"/>
        <files mask="PERI_PGMC_PPC.h"/>
        <files mask="PERI_PHY_LDO.h"/>
        <files mask="PERI_PIT.h"/>
        <files mask="PERI_PUF.h"/>
        <files mask="PERI_PWM.h"/>
        <files mask="PERI_PXP.h"/>
        <files mask="PERI_RDC.h"/>
        <files mask="PERI_RDC_SEMAPHORE.h"/>
        <files mask="PERI_RTWDOG.h"/>
        <files mask="PERI_SEMA4.h"/>
        <files mask="PERI_SEMC.h"/>
        <files mask="PERI_SNVS.h"/>
        <files mask="PERI_SPDIF.h"/>
        <files mask="PERI_SRAM.h"/>
        <files mask="PERI_SRC.h"/>
        <files mask="PERI_SSARC_HP.h"/>
        <files mask="PERI_SSARC_LP.h"/>
        <files mask="PERI_TMPSNS.h"/>
        <files mask="PERI_TMR.h"/>
        <files mask="PERI_USB.h"/>
        <files mask="PERI_USBHSDCD.h"/>
        <files mask="PERI_USBNC.h"/>
        <files mask="PERI_USBPHY.h"/>
        <files mask="PERI_USDHC.h"/>
        <files mask="PERI_VIDEO_MUX.h"/>
        <files mask="PERI_VIDEO_PLL.h"/>
        <files mask="PERI_VMBANDGAP.h"/>
        <files mask="PERI_WDOG.h"/>
        <files mask="PERI_XBARA.h"/>
        <files mask="PERI_XBARB.h"/>
        <files mask="PERI_XECC.h"/>
        <files mask="PERI_XRDC2.h"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="MIMXRT1176_cm7.h"/>
        <files mask="MIMXRT1176_cm7_COMMON.h"/>
        <files mask="MIMXRT1176_cm7_features.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="device_CMSIS.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="periph" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="periph" type="asm_include"/>
      </include_paths>
    </component>
    <component id="device.MIMXRT1176_system.MIMXRT1176" name="MIMXRT1176_system" brief="Device MIMXRT1176_system" version="1.0.0" full_name="Device MIMXRT1176_system" category="Device/CMSIS" user_visible="true" type="CMSIS_Include" package_base_path="devices/MIMXRT1176" project_base_path="device">
      <dependencies>
        <all>
          <component_dependency value="device.MIMXRT1176_CMSIS.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="system_MIMXRT1176_cm4.c"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="system_MIMXRT1176_cm4.h"/>
      </source>
      <source relative_path="./" type="src" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="system_MIMXRT1176_cm7.c"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="system_MIMXRT1176_cm7.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="device_system.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="device.MIMXRT1176_startup.MIMXRT1176" name="MIMXRT1176_startup" brief="Device MIMXRT1176_startup" version="1.0.0" full_name="Device MIMXRT1176_startup" category="Device/Startup" user_visible="true" type="startup" package_base_path="devices/MIMXRT1176" project_base_path="startup">
      <dependencies>
        <all>
          <component_dependency value="device.MIMXRT1176_system.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" config="true" type="src_c" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="startup_mimxrt1176_cm4.c"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" config="true" type="src_cpp" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="startup_mimxrt1176_cm4.cpp"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" config="true" type="src">
        <files mask="boot_multicore_slave.c"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" config="true" type="c_include">
        <files mask="boot_multicore_slave.h"/>
      </source>
      <source toolchain="iar" relative_path="iar" config="true" type="asm_include" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="startup_MIMXRT1176_cm4.s"/>
      </source>
      <source toolchain="armgcc" relative_path="gcc" config="true" type="asm_include" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="startup_MIMXRT1176_cm4.S"/>
      </source>
      <source toolchain="mdk" relative_path="arm" config="true" type="asm_include" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="startup_MIMXRT1176_cm4.S"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" config="true" type="src_c" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="startup_mimxrt1176_cm7.c"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" config="true" type="src_cpp" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="startup_mimxrt1176_cm7.cpp"/>
      </source>
      <source toolchain="iar" relative_path="iar" config="true" type="asm_include" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="startup_MIMXRT1176_cm7.s"/>
      </source>
      <source toolchain="armgcc" relative_path="gcc" config="true" type="asm_include" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="startup_MIMXRT1176_cm7.S"/>
      </source>
      <source toolchain="mdk" relative_path="arm" config="true" type="asm_include" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="startup_MIMXRT1176_cm7.S"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="device_startup.MIMXRT1176.cmake" hidden="true"/>
      </source>
    </component>
    <component id="CMSIS_Include_core_cm.MIMXRT1176" name="CMSIS_Include_CM" brief="CMSIS-CORE for Cortex-M, ARMv8-M, ARMv8.1-M" version="6.1.0" full_name="CMSIS Include For Cortex-M, ARMv8-M, ARMv8.1-M" category="CMSIS/CORE" user_visible="true" type="CMSIS_Include" package_base_path="CMSIS/Core/Include" project_base_path="CMSIS">
      <dependencies>
        <all>
          <any_of>
            <device_core_dependency value="cm4_MIMXRT1176xxxxx"/>
            <device_core_dependency value="cm7_MIMXRT1176xxxxx"/>
          </any_of>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source compiler="compiler_armclang" relative_path="./" type="c_include">
        <files mask="cmsis_armclang.h"/>
      </source>
      <source compiler="compiler_armclang" relative_path="m-profile" type="c_include">
        <files mask="cmsis_armclang_m.h"/>
      </source>
      <source compiler="compiler_armclang compiler_gcc compiler_iar" relative_path="./" type="c_include">
        <files mask="cmsis_compiler.h"/>
        <files mask="cmsis_version.h"/>
      </source>
      <source compiler="compiler_iar" relative_path="m-profile" type="c_include">
        <files mask="cmsis_iccarm_m.h"/>
      </source>
      <source compiler="compiler_gcc" relative_path="./" type="c_include">
        <files mask="cmsis_gcc.h"/>
      </source>
      <source compiler="compiler_gcc" relative_path="m-profile" type="c_include">
        <files mask="cmsis_gcc_m.h"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="core_cm4.h"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="core_cm7.h"/>
      </source>
      <source relative_path="m-profile" type="c_include" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="armv7m_cachel1.h"/>
      </source>
      <source relative_path="m-profile" type="c_include" device_cores="cm4_MIMXRT1176xxxxx cm7_MIMXRT1176xxxxx">
        <files mask="armv7m_mpu.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Include_core_cm.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="m-profile" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="m-profile" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_RTOS2_RTX.MIMXRT1176" name="CMSIS_RTOS2_RTX5" brief="CMSIS-RTOS2 RTX5 for Cortex-M, SC000, C300 and Armv8-M (Library)" version="5.9.0" full_name="CMSIS RTOS2 RTX5" category="CMSIS/RTOS2" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/RTOS2" project_base_path="CMSIS/RTOS2">
      <defines>
        <define name="CMSIS_device_header" value="'&quot;fsl_device_registers.h&quot;'"/>
        <define name="RTE_COMPONENTS_H" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Device_API_OSTick.MIMXRT1176"/>
          <component_dependency value="CMSIS_Device_API_RTOS2.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="RTX/Source" type="c_include">
        <files mask="rtx_core_c.h"/>
        <files mask="rtx_core_ca.h"/>
        <files mask="rtx_core_cm.h"/>
        <files mask="rtx_lib.h"/>
      </source>
      <source relative_path="RTX/Source" type="src">
        <files mask="rtx_delay.c"/>
        <files mask="rtx_evflags.c"/>
        <files mask="rtx_evr.c"/>
        <files mask="rtx_kernel.c"/>
        <files mask="rtx_memory.c"/>
        <files mask="rtx_mempool.c"/>
        <files mask="rtx_msgqueue.c"/>
        <files mask="rtx_mutex.c"/>
        <files mask="rtx_semaphore.c"/>
        <files mask="rtx_system.c"/>
        <files mask="rtx_thread.c"/>
        <files mask="rtx_timer.c"/>
        <files mask="rtx_lib.c"/>
      </source>
      <source relative_path="RTX/Include" type="c_include">
        <files mask="rtx_evr.h"/>
        <files mask="rtx_os.h"/>
        <files mask="rtx_def.h"/>
      </source>
      <source relative_path="RTX/Config" type="src">
        <files mask="RTX_Config.c"/>
      </source>
      <source relative_path="RTX/Config" type="c_include">
        <files mask="RTX_Config.h"/>
      </source>
      <source relative_path="Source" type="src" device_cores="cm4_MIMXRT1176xxxxx cm7_MIMXRT1176xxxxx">
        <files mask="os_systick.c"/>
      </source>
      <source toolchain="mdk armgcc mcuxpresso" relative_path="RTX/Source/GCC" type="asm_include" device_cores="cm4_MIMXRT1176xxxxx cm7_MIMXRT1176xxxxx">
        <files mask="irq_armv7m.S"/>
      </source>
      <source toolchain="iar" relative_path="RTX/Source/IAR" type="asm_include" device_cores="cm4_MIMXRT1176xxxxx cm7_MIMXRT1176xxxxx">
        <files mask="irq_armv7m.s"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_RTOS2_RTX.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="RTX/Include" type="c_include"/>
        <include_path relative_path="RTX/Config" type="c_include"/>
        <include_path relative_path="RTX/Include" type="asm_include"/>
        <include_path relative_path="RTX/Config" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_RTOS2_RTX_LIB.MIMXRT1176" name="CMSIS_RTOS2_RTX5_Library" brief="CMSIS-RTOS2 RTX5 for Cortex-M, SC000, C300 and Armv8-M (Library)" version="5.9.0" full_name="CMSIS RTOS2 RTX5" category="CMSIS/RTOS2" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/RTOS2" project_base_path="CMSIS/RTOS2">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Device_API_OSTick.MIMXRT1176"/>
          <component_dependency value="CMSIS_Device_API_RTOS2.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="iar" relative_path="RTX/Library/IAR" project_relative_path="./" type="lib" device_cores="cm4_MIMXRT1176xxxxx cm7_MIMXRT1176xxxxx">
        <files mask="RTX_V7MF.a"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="RTX/Library/GCC" project_relative_path="./" type="lib" device_cores="cm4_MIMXRT1176xxxxx cm7_MIMXRT1176xxxxx">
        <files mask="libRTX_V7MF.a"/>
      </source>
      <source toolchain="mdk" relative_path="RTX/Library/ARM" project_relative_path="./" type="lib" device_cores="cm4_MIMXRT1176xxxxx cm7_MIMXRT1176xxxxx">
        <files mask="RTX_V7MF.lib"/>
      </source>
      <source relative_path="RTX/Source" type="c_include">
        <files mask="rtx_core_c.h"/>
        <files mask="rtx_core_ca.h"/>
        <files mask="rtx_core_cm.h"/>
        <files mask="rtx_lib.h"/>
      </source>
      <source relative_path="RTX/Source" type="src">
        <files mask="rtx_lib.c"/>
      </source>
      <source relative_path="RTX/Include" type="c_include">
        <files mask="rtx_evr.h"/>
        <files mask="rtx_os.h"/>
        <files mask="rtx_def.h"/>
      </source>
      <source relative_path="RTX/Config" type="src">
        <files mask="RTX_Config.c"/>
      </source>
      <source relative_path="RTX/Config" type="c_include">
        <files mask="RTX_Config.h"/>
      </source>
      <source toolchain="iar" relative_path="RTX/Library/IAR" type="lib" device_cores="cm4_MIMXRT1176xxxxx cm7_MIMXRT1176xxxxx">
        <files mask="RTX_V7MF.a"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="RTX/Library/GCC" type="lib" device_cores="cm4_MIMXRT1176xxxxx cm7_MIMXRT1176xxxxx">
        <files mask="libRTX_V7MF.a"/>
      </source>
      <source toolchain="mdk" relative_path="RTX/Library/ARM" type="lib" device_cores="cm4_MIMXRT1176xxxxx cm7_MIMXRT1176xxxxx">
        <files mask="RTX_V7MF.lib"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_RTOS2_RTX_LIB.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="RTX/Source" type="c_include"/>
        <include_path relative_path="RTX/Include" type="c_include"/>
        <include_path relative_path="RTX/Config" type="c_include"/>
        <include_path relative_path="RTX/Source" type="asm_include"/>
        <include_path relative_path="RTX/Include" type="asm_include"/>
        <include_path relative_path="RTX/Config" type="asm_include"/>
      </include_paths>
    </component>
    <component id="utility.str.MIMXRT1176" name="utility_str" brief="Utility str" version="1.0.0" full_name="Utility str" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT1176/utilities" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="str" type="c_include">
        <files mask="fsl_str.h"/>
      </source>
      <source relative_path="str" type="src">
        <files mask="fsl_str.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_str.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="str" type="c_include"/>
        <include_path relative_path="str" type="asm_include"/>
      </include_paths>
    </component>
    <component id="utility.debug_console_lite.MIMXRT1176" name="debug_console_lite" brief="Utility debug_console_lite" version="1.0.0" full_name="Utility debug_console_lite" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT1176/utilities" project_base_path="utilities">
      <dependencies>
        <all>
          <not>
            <component_dependency value="utility.debug_console.MIMXRT1176"/>
          </not>
          <component_dependency value="platform.drivers.lpuart.MIMXRT1176"/>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <component_dependency value="utility.str.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="debug_console_lite" type="c_include">
        <files mask="fsl_debug_console.h"/>
      </source>
      <source relative_path="debug_console_lite" type="src">
        <files mask="fsl_debug_console.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_debug_console_lite.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="debug_console_lite" type="c_include"/>
        <include_path relative_path="debug_console_lite" type="asm_include"/>
      </include_paths>
    </component>
    <component id="utility.debug_console.MIMXRT1176" name="debug_console" brief="Utility debug_console" version="1.0.1" full_name="Utility debug_console" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT1176/utilities" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="component.serial_manager.MIMXRT1176"/>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <component_dependency value="utility.str.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="debug_console" type="c_include">
        <files mask="fsl_debug_console.h"/>
      </source>
      <source relative_path="debug_console" type="src">
        <files mask="fsl_debug_console.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_debug_console.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="debug_console" type="c_include"/>
        <include_path relative_path="debug_console" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.utilities.assert.MIMXRT1176" name="assert" brief="Utility assert" version="1.0.0" full_name="Utility assert" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT1176/utilities" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <component_dependency value="utility.debug_console.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_assert.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_assert.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_assert.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.utilities.assert_lite.MIMXRT1176" name="assert_lite" brief="Utility assert_lite" version="1.0.0" full_name="Utility assert_lite" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT1176/utilities/debug_console_lite" project_base_path="utilities">
      <dependencies>
        <all>
          <not>
            <component_dependency value="platform.utilities.assert.MIMXRT1176"/>
          </not>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <component_dependency value="utility.debug_console_lite.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_assert.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_assert.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_assert_lite.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wireless.wpa_supplicant.rtos.MIMXRT1176" name="wpa_supplicant-rtos" brief="Wpa supplicant rtos" version="2.11.0" full_name="Wpa supplicant rtos" category="Wireless/wpa_supplicant" user_visible="true" type="middleware" package_base_path="middleware/wireless/wpa_supplicant-rtos" project_base_path="wpa_supplicant-rtos">
      <defines>
        <define name="USE_RTOS" value="1"/>
        <define name="SDK_OS_FREE_RTOS" value=""/>
        <define name="FSL_OSA_TASK_ENABLE" value="1"/>
        <define name="PRINTF_ADVANCED_ENABLE" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMXRT1176"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1176"/>
          <component_dependency value="middleware.lwip.MIMXRT1176"/>
          <component_dependency value="middleware.mbedtls.MIMXRT1176"/>
          <component_dependency value="middleware.wifi.MIMXRT1176"/>
          <component_dependency value="middleware.wifi.cli.MIMXRT1176"/>
          <component_dependency value="utility.debug_console.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="port/mbedtls" type="c_include">
        <files mask="wpa_supp_mbedtls_config.h"/>
        <files mask="wpa_supp_els_pkc_mbedtls_config.h"/>
        <files mask="wpa_supp_ele_s400_mbedtls_config.h"/>
        <files mask="supp_crypto.h"/>
      </source>
      <source relative_path="port/mbedtls" type="src">
        <files mask="supp_crypto.c"/>
      </source>
      <source relative_path="src/common" type="src">
        <files mask="wpa_common.c"/>
        <files mask="ieee802_11_common.c"/>
        <files mask="hw_features_common.c"/>
        <files mask="wpa_ctrl.c"/>
        <files mask="sae.c"/>
        <files mask="dragonfly.c"/>
        <files mask="gas.c"/>
        <files mask="dpp.c"/>
        <files mask="dpp_auth.c"/>
        <files mask="dpp_backup.c"/>
        <files mask="dpp_crypto.c"/>
        <files mask="dpp_pkex.c"/>
        <files mask="dpp_reconfig.c"/>
        <files mask="dpp_tcp.c"/>
        <files mask="gas_server.c"/>
      </source>
      <source relative_path="src/drivers" type="src">
        <files mask="driver_common.c"/>
        <files mask="drivers.c"/>
        <files mask="driver_freertos.c"/>
      </source>
      <source relative_path="src/l2_packet" type="c_include">
        <files mask="l2_packet.h"/>
      </source>
      <source relative_path="src/l2_packet" type="src">
        <files mask="l2_packet_freertos.c"/>
      </source>
      <source relative_path="src/utils" type="src">
        <files mask="base64.c"/>
        <files mask="common.c"/>
        <files mask="wpabuf.c"/>
        <files mask="bitfield.c"/>
        <files mask="os_freertos.c"/>
        <files mask="crc32.c"/>
        <files mask="ip_addr.c"/>
        <files mask="block_alloc.c"/>
        <files mask="wpa_debug.c"/>
        <files mask="uuid.c"/>
        <files mask="eloop_freertos.c"/>
        <files mask="json.c"/>
      </source>
      <source relative_path="src/utils" type="c_include">
        <files mask="dl_list.h"/>
        <files mask="base64.h"/>
        <files mask="bitfield.h"/>
        <files mask="block_alloc.h"/>
        <files mask="browser.h"/>
        <files mask="build_config.h"/>
        <files mask="common.h"/>
        <files mask="config.h"/>
        <files mask="const_time.h"/>
        <files mask="crc32.h"/>
        <files mask="edit.h"/>
        <files mask="eloop.h"/>
        <files mask="ext_password.h"/>
        <files mask="ext_password_i.h"/>
        <files mask="http-utils.h"/>
        <files mask="includes.h"/>
        <files mask="ip_addr.h"/>
        <files mask="json.h"/>
        <files mask="module_tests.h"/>
        <files mask="os.h"/>
        <files mask="pcsc_funcs.h"/>
        <files mask="platform.h"/>
        <files mask="state_machine.h"/>
        <files mask="trace.h"/>
        <files mask="uuid.h"/>
        <files mask="wpabuf.h"/>
        <files mask="wpa_debug.h"/>
        <files mask="xml-utils.h"/>
      </source>
      <source relative_path="wpa_supplicant" type="c_include">
        <files mask="ap.h"/>
        <files mask="autoscan.h"/>
        <files mask="bgscan.h"/>
        <files mask="bss.h"/>
        <files mask="bssid_ignore.h"/>
        <files mask="config.h"/>
        <files mask="config_ssid.h"/>
        <files mask="ctrl_iface.h"/>
        <files mask="dpp_supplicant.h"/>
        <files mask="driver_i.h"/>
        <files mask="gas_query.h"/>
        <files mask="hs20_supplicant.h"/>
        <files mask="ibss_rsn.h"/>
        <files mask="interworking.h"/>
        <files mask="mesh.h"/>
        <files mask="mesh_mpm.h"/>
        <files mask="mesh_rsn.h"/>
        <files mask="notify.h"/>
        <files mask="offchannel.h"/>
        <files mask="p2p_supplicant.h"/>
        <files mask="scan.h"/>
        <files mask="sme.h"/>
        <files mask="wifi_display.h"/>
        <files mask="wmm_ac.h"/>
        <files mask="wnm_sta.h"/>
        <files mask="wpas_glue.h"/>
        <files mask="wpas_kay.h"/>
        <files mask="wpa_supplicant_i.h"/>
        <files mask="wps_supplicant.h"/>
      </source>
      <source relative_path="wpa_supplicant/binder" type="c_include">
        <files mask="binder.h"/>
      </source>
      <source relative_path="wpa_supplicant/dbus" type="c_include">
        <files mask="dbus_common.h"/>
        <files mask="dbus_new.h"/>
      </source>
      <source relative_path="freertos/src" type="c_include">
        <files mask="supp_main.h"/>
        <files mask="supp_api.h"/>
        <files mask="wpa_cli.h"/>
      </source>
      <source relative_path="freertos/src" type="src">
        <files mask="wpa_cli.c"/>
        <files mask="supp_main.c"/>
        <files mask="supp_api.c"/>
      </source>
      <source relative_path="wpa_supplicant" type="src">
        <files mask="config.c"/>
        <files mask="notify.c"/>
        <files mask="bss.c"/>
        <files mask="eap_register.c"/>
        <files mask="op_classes.c"/>
        <files mask="rrm.c"/>
        <files mask="wmm_ac.c"/>
        <files mask="config_none.c"/>
        <files mask="sme.c"/>
        <files mask="wpa_supplicant.c"/>
        <files mask="events.c"/>
        <files mask="bssid_ignore.c"/>
        <files mask="wpas_glue.c"/>
        <files mask="scan.c"/>
        <files mask="robust_av.c"/>
        <files mask="ctrl_iface.c"/>
        <files mask="ctrl_iface_udp.c"/>
        <files mask="mbo.c"/>
        <files mask="wnm_sta.c"/>
        <files mask="ap.c"/>
        <files mask="p2p_supplicant.c"/>
        <files mask="p2p_supplicant_sd.c"/>
        <files mask="gas_query.c"/>
        <files mask="offchannel.c"/>
        <files mask="wps_supplicant.c"/>
        <files mask="dpp_supplicant.c"/>
        <files mask="interworking.c"/>
      </source>
      <source relative_path="wpa_supplicant" type="other">
        <files mask="README"/>
      </source>
      <source relative_path="src/ap" type="src">
        <files mask="ap_config.c"/>
        <files mask="ap_drv_ops.c"/>
        <files mask="ap_list.c"/>
        <files mask="ap_mlme.c"/>
        <files mask="authsrv.c"/>
        <files mask="beacon.c"/>
        <files mask="bss_load.c"/>
        <files mask="dfs.c"/>
        <files mask="drv_callbacks.c"/>
        <files mask="eap_user_db.c"/>
        <files mask="hostapd.c"/>
        <files mask="hw_features.c"/>
        <files mask="ieee802_11_auth.c"/>
        <files mask="ieee802_11.c"/>
        <files mask="ieee802_11_he.c"/>
        <files mask="ieee802_11_ht.c"/>
        <files mask="ieee802_11_shared.c"/>
        <files mask="ieee802_11_vht.c"/>
        <files mask="ieee802_1x.c"/>
        <files mask="neighbor_db.c"/>
        <files mask="p2p_hostapd.c"/>
        <files mask="pmksa_cache_auth.c"/>
        <files mask="preauth_auth.c"/>
        <files mask="rrm.c"/>
        <files mask="sta_info.c"/>
        <files mask="tkip_countermeasures.c"/>
        <files mask="utils.c"/>
        <files mask="wmm.c"/>
        <files mask="ctrl_iface_ap.c"/>
        <files mask="mbo_ap.c"/>
        <files mask="wpa_auth.c"/>
        <files mask="wpa_auth_ie.c"/>
        <files mask="wpa_auth_ft.c"/>
        <files mask="wpa_auth_glue.c"/>
        <files mask="wps_hostapd.c"/>
        <files mask="wnm_ap.c"/>
        <files mask="gas_query_ap.c"/>
      </source>
      <source relative_path="src/eap_common" type="src">
        <files mask="eap_common.c"/>
        <files mask="eap_wsc_common.c"/>
        <files mask="eap_peap_common.c"/>
        <files mask="chap.c"/>
        <files mask="eap_fast_common.c"/>
        <files mask="eap_sim_common.c"/>
      </source>
      <source relative_path="src/eap_server" type="src">
        <files mask="eap_server.c"/>
        <files mask="eap_server_identity.c"/>
        <files mask="eap_server_methods.c"/>
        <files mask="eap_server_wsc.c"/>
        <files mask="eap_server_tls.c"/>
        <files mask="eap_sim_db.c"/>
        <files mask="eap_server_ttls.c"/>
        <files mask="eap_server_tls_common.c"/>
        <files mask="eap_server_peap.c"/>
        <files mask="eap_server_mschapv2.c"/>
        <files mask="eap_server_md5.c"/>
        <files mask="eap_server_gtc.c"/>
        <files mask="eap_server_fast.c"/>
        <files mask="eap_server_sim.c"/>
        <files mask="eap_server_aka.c"/>
      </source>
      <source relative_path="src/eapol_auth" type="src">
        <files mask="eapol_auth_sm.c"/>
      </source>
      <source relative_path="src/crypto" type="src">
        <files mask="aes-eax.c"/>
        <files mask="aes-encblock.c"/>
        <files mask="aes-ctr.c"/>
        <files mask="aes-cbc.c"/>
        <files mask="aes-siv.c"/>
        <files mask="aes-unwrap.c"/>
        <files mask="aes-wrap.c"/>
        <files mask="des-internal.c"/>
        <files mask="dh_groups.c"/>
        <files mask="rc4.c"/>
        <files mask="md4-internal.c"/>
        <files mask="md5.c"/>
        <files mask="md5-internal.c"/>
        <files mask="sha1-internal.c"/>
        <files mask="fips_prf_internal.c"/>
        <files mask="sha256-internal.c"/>
        <files mask="sha1.c"/>
        <files mask="sha256.c"/>
        <files mask="tls_none.c"/>
        <files mask="ms_funcs.c"/>
        <files mask="sha1-tlsprf.c"/>
        <files mask="sha1-prf.c"/>
        <files mask="sha256-prf.c"/>
        <files mask="sha1-pbkdf2.c"/>
        <files mask="aes-omac1.c"/>
        <files mask="aes-internal-enc.c"/>
        <files mask="aes-internal-dec.c"/>
        <files mask="aes-internal.c"/>
        <files mask="crypto_mbedtls2.c"/>
        <files mask="tls_mbedtls2.c"/>
        <files mask="sha256-kdf.c"/>
        <files mask="sha384-kdf.c"/>
        <files mask="sha512-kdf.c"/>
        <files mask="milenage.c"/>
      </source>
      <source relative_path="src/rsn_supp" type="src">
        <files mask="wpa.c"/>
        <files mask="preauth.c"/>
        <files mask="pmksa_cache.c"/>
        <files mask="wpa_ie.c"/>
        <files mask="wpa_ft.c"/>
      </source>
      <source relative_path="src/p2p" type="src">
        <files mask="p2p.c"/>
        <files mask="p2p_utils.c"/>
        <files mask="p2p_parse.c"/>
        <files mask="p2p_build.c"/>
        <files mask="p2p_go_neg.c"/>
        <files mask="p2p_sd.c"/>
        <files mask="p2p_pd.c"/>
        <files mask="p2p_invitation.c"/>
        <files mask="p2p_dev_disc.c"/>
        <files mask="p2p_group.c"/>
      </source>
      <source relative_path="src/eap_peer" type="src">
        <files mask="eap_wsc.c"/>
        <files mask="eap.c"/>
        <files mask="eap_methods.c"/>
        <files mask="eap_tls.c"/>
        <files mask="eap_tls_common.c"/>
        <files mask="eap_peap.c"/>
        <files mask="eap_ttls.c"/>
        <files mask="eap_mschapv2.c"/>
        <files mask="mschapv2.c"/>
        <files mask="eap_fast.c"/>
        <files mask="eap_fast_pac.c"/>
        <files mask="eap_gtc.c"/>
        <files mask="eap_sim.c"/>
        <files mask="eap_aka.c"/>
      </source>
      <source relative_path="src/wps" type="src">
        <files mask="wps.c"/>
        <files mask="wps_common.c"/>
        <files mask="wps_attr_parse.c"/>
        <files mask="wps_attr_build.c"/>
        <files mask="wps_attr_process.c"/>
        <files mask="wps_dev_attr.c"/>
        <files mask="wps_enrollee.c"/>
        <files mask="wps_registrar.c"/>
      </source>
      <source relative_path="src/eapol_supp" type="src">
        <files mask="eapol_supp_sm.c"/>
      </source>
      <source relative_path="src/radius" type="src">
        <files mask="radius_server.c"/>
        <files mask="radius_das.c"/>
        <files mask="radius_client.c"/>
        <files mask="radius.c"/>
      </source>
      <source relative_path="src/ap" type="c_include">
        <files mask="acs.h"/>
        <files mask="accounting.h"/>
        <files mask="airtime_policy.h"/>
        <files mask="ap_config.h"/>
        <files mask="ap_drv_ops.h"/>
        <files mask="ap_list.h"/>
        <files mask="ap_mlme.h"/>
        <files mask="authsrv.h"/>
        <files mask="beacon.h"/>
        <files mask="bss_load.h"/>
        <files mask="ctrl_iface_ap.h"/>
        <files mask="dfs.h"/>
        <files mask="dhcp_snoop.h"/>
        <files mask="fils_hlp.h"/>
        <files mask="gas_query_ap.h"/>
        <files mask="gas_serv.h"/>
        <files mask="hostapd.h"/>
        <files mask="hs20.h"/>
        <files mask="hw_features.h"/>
        <files mask="ieee802_11_auth.h"/>
        <files mask="ieee802_11.h"/>
        <files mask="ieee802_1x.h"/>
        <files mask="mbo_ap.h"/>
        <files mask="ndisc_snoop.h"/>
        <files mask="neighbor_db.h"/>
        <files mask="p2p_hostapd.h"/>
        <files mask="pmksa_cache_auth.h"/>
        <files mask="preauth_auth.h"/>
        <files mask="rrm.h"/>
        <files mask="sta_info.h"/>
        <files mask="taxonomy.h"/>
        <files mask="tkip_countermeasures.h"/>
        <files mask="vlan.h"/>
        <files mask="vlan_init.h"/>
        <files mask="vlan_util.h"/>
        <files mask="wmm.h"/>
        <files mask="wnm_ap.h"/>
        <files mask="wpa_auth_glue.h"/>
        <files mask="wpa_auth.h"/>
        <files mask="wpa_auth_ie.h"/>
        <files mask="wpa_auth_i.h"/>
        <files mask="wpa_auth_kay.h"/>
        <files mask="wps_hostapd.h"/>
        <files mask="x_snoop.h"/>
      </source>
      <source relative_path="src/tls" type="src">
        <files mask="asn1.c"/>
      </source>
      <source relative_path="src/common" type="c_include">
        <files mask="brcm_vendor.h"/>
        <files mask="ctrl_iface_common.h"/>
        <files mask="defs.h"/>
        <files mask="dhcp.h"/>
        <files mask="dpp.h"/>
        <files mask="dpp_i.h"/>
        <files mask="dragonfly.h"/>
        <files mask="eapol_common.h"/>
        <files mask="gas.h"/>
        <files mask="hw_features_common.h"/>
        <files mask="ieee802_11_common.h"/>
        <files mask="ieee802_11_defs.h"/>
        <files mask="ieee802_1x_defs.h"/>
        <files mask="linux_bridge.h"/>
        <files mask="linux_vlan.h"/>
        <files mask="ocv.h"/>
        <files mask="privsep_commands.h"/>
        <files mask="ptksa_cache.h"/>
        <files mask="qca-vendor-attr.h"/>
        <files mask="qca-vendor.h"/>
        <files mask="sae.h"/>
        <files mask="tnc.h"/>
        <files mask="version.h"/>
        <files mask="wpa_common.h"/>
        <files mask="wpa_ctrl.h"/>
        <files mask="wpa_helpers.h"/>
      </source>
      <source relative_path="src/drivers" type="c_include">
        <files mask="driver.h"/>
        <files mask="driver_hostap.h"/>
        <files mask="driver_freertos.h"/>
        <files mask="rfkill.h"/>
      </source>
      <source relative_path="src/eapol_auth" type="c_include">
        <files mask="eapol_auth_sm.h"/>
        <files mask="eapol_auth_sm_i.h"/>
      </source>
      <source relative_path="src/eap_peer" type="c_include">
        <files mask="eap_config.h"/>
        <files mask="eap_fast_pac.h"/>
        <files mask="eap.h"/>
        <files mask="eap_i.h"/>
        <files mask="eap_methods.h"/>
        <files mask="eap_proxy.h"/>
        <files mask="eap_teap_pac.h"/>
        <files mask="eap_tls_common.h"/>
        <files mask="ikev2.h"/>
        <files mask="mschapv2.h"/>
        <files mask="tncc.h"/>
      </source>
      <source relative_path="src/fst" type="c_include">
        <files mask="fst_ctrl_aux.h"/>
        <files mask="fst_ctrl_defs.h"/>
        <files mask="fst_ctrl_iface.h"/>
        <files mask="fst_defs.h"/>
        <files mask="fst_group.h"/>
        <files mask="fst.h"/>
        <files mask="fst_iface.h"/>
        <files mask="fst_internal.h"/>
        <files mask="fst_session.h"/>
      </source>
      <source relative_path="src/pae" type="c_include">
        <files mask="ieee802_1x_cp.h"/>
        <files mask="ieee802_1x_kay.h"/>
        <files mask="ieee802_1x_kay_i.h"/>
        <files mask="ieee802_1x_key.h"/>
        <files mask="ieee802_1x_secy_ops.h"/>
      </source>
      <source relative_path="src/rsn_supp" type="c_include">
        <files mask="pmksa_cache.h"/>
        <files mask="preauth.h"/>
        <files mask="wpa.h"/>
        <files mask="wpa_ie.h"/>
        <files mask="wpa_i.h"/>
      </source>
      <source relative_path="src/crypto" type="c_include">
        <files mask="aes.h"/>
        <files mask="aes_i.h"/>
        <files mask="aes_siv.h"/>
        <files mask="aes_wrap.h"/>
        <files mask="crypto.h"/>
        <files mask="des_i.h"/>
        <files mask="dh_group5.h"/>
        <files mask="dh_groups.h"/>
        <files mask="md5.h"/>
        <files mask="md5_i.h"/>
        <files mask="milenage.h"/>
        <files mask="ms_funcs.h"/>
        <files mask="random.h"/>
        <files mask="sha1.h"/>
        <files mask="sha1_i.h"/>
        <files mask="sha256.h"/>
        <files mask="sha256_i.h"/>
        <files mask="sha384.h"/>
        <files mask="sha384_i.h"/>
        <files mask="sha512.h"/>
        <files mask="sha512_i.h"/>
        <files mask="tls.h"/>
      </source>
      <source relative_path="src/eap_common" type="c_include">
        <files mask="chap.h"/>
        <files mask="eap_common.h"/>
        <files mask="eap_defs.h"/>
        <files mask="eap_eke_common.h"/>
        <files mask="eap_fast_common.h"/>
        <files mask="eap_gpsk_common.h"/>
        <files mask="eap_ikev2_common.h"/>
        <files mask="eap_pax_common.h"/>
        <files mask="eap_peap_common.h"/>
        <files mask="eap_psk_common.h"/>
        <files mask="eap_pwd_common.h"/>
        <files mask="eap_sake_common.h"/>
        <files mask="eap_sim_common.h"/>
        <files mask="eap_teap_common.h"/>
        <files mask="eap_tlv_common.h"/>
        <files mask="eap_ttls.h"/>
        <files mask="eap_wsc_common.h"/>
        <files mask="ikev2_common.h"/>
      </source>
      <source relative_path="src/eapol_supp" type="c_include">
        <files mask="eapol_supp_sm.h"/>
      </source>
      <source relative_path="src/eap_server" type="c_include">
        <files mask="eap.h"/>
        <files mask="eap_i.h"/>
        <files mask="eap_methods.h"/>
        <files mask="eap_sim_db.h"/>
        <files mask="eap_tls_common.h"/>
        <files mask="ikev2.h"/>
        <files mask="tncs.h"/>
      </source>
      <source relative_path="src/p2p" type="c_include">
        <files mask="p2p.h"/>
        <files mask="p2p_i.h"/>
      </source>
      <source relative_path="src/radius" type="c_include">
        <files mask="radius_client.h"/>
        <files mask="radius_das.h"/>
        <files mask="radius.h"/>
        <files mask="radius_server.h"/>
      </source>
      <source relative_path="src/tls" type="c_include">
        <files mask="asn1.h"/>
        <files mask="bignum.h"/>
        <files mask="pkcs1.h"/>
        <files mask="pkcs5.h"/>
        <files mask="pkcs8.h"/>
        <files mask="rsa.h"/>
        <files mask="tlsv1_client.h"/>
        <files mask="tlsv1_client_i.h"/>
        <files mask="tlsv1_common.h"/>
        <files mask="tlsv1_cred.h"/>
        <files mask="tlsv1_record.h"/>
        <files mask="tlsv1_server.h"/>
        <files mask="tlsv1_server_i.h"/>
        <files mask="x509v3.h"/>
      </source>
      <source relative_path="src/wps" type="c_include">
        <files mask="http_client.h"/>
        <files mask="http.h"/>
        <files mask="httpread.h"/>
        <files mask="http_server.h"/>
        <files mask="upnp_xml.h"/>
        <files mask="wps_attr_parse.h"/>
        <files mask="wps_defs.h"/>
        <files mask="wps_dev_attr.h"/>
        <files mask="wps_er.h"/>
        <files mask="wps.h"/>
        <files mask="wps_i.h"/>
        <files mask="wps_upnp.h"/>
        <files mask="wps_upnp_i.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_wpa_supplicant_rtos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src" type="c_include"/>
        <include_path relative_path="src/utils" type="c_include"/>
        <include_path relative_path="src/common" type="c_include"/>
        <include_path relative_path="src/crypto" type="c_include"/>
        <include_path relative_path="src/ap" type="c_include"/>
        <include_path relative_path="src/drivers" type="c_include"/>
        <include_path relative_path="src/eap_common" type="c_include"/>
        <include_path relative_path="src/eap_peer" type="c_include"/>
        <include_path relative_path="src/eap_server" type="c_include"/>
        <include_path relative_path="src/eapol_auth" type="c_include"/>
        <include_path relative_path="src/eapol_supp" type="c_include"/>
        <include_path relative_path="src/fst" type="c_include"/>
        <include_path relative_path="src/l2_packet" type="c_include"/>
        <include_path relative_path="src/p2p" type="c_include"/>
        <include_path relative_path="src/pae" type="c_include"/>
        <include_path relative_path="src/radius" type="c_include"/>
        <include_path relative_path="src/rsn_supp" type="c_include"/>
        <include_path relative_path="src/tls" type="c_include"/>
        <include_path relative_path="src/wps" type="c_include"/>
        <include_path relative_path="port/mbedtls" type="c_include"/>
        <include_path relative_path="hostapd" type="c_include"/>
        <include_path relative_path="wpa_supplicant" type="c_include"/>
        <include_path relative_path="freertos" type="c_include"/>
        <include_path relative_path="freertos/src" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src" type="asm_include"/>
        <include_path relative_path="src/utils" type="asm_include"/>
        <include_path relative_path="src/common" type="asm_include"/>
        <include_path relative_path="src/crypto" type="asm_include"/>
        <include_path relative_path="src/ap" type="asm_include"/>
        <include_path relative_path="src/drivers" type="asm_include"/>
        <include_path relative_path="src/eap_common" type="asm_include"/>
        <include_path relative_path="src/eap_peer" type="asm_include"/>
        <include_path relative_path="src/eap_server" type="asm_include"/>
        <include_path relative_path="src/eapol_auth" type="asm_include"/>
        <include_path relative_path="src/eapol_supp" type="asm_include"/>
        <include_path relative_path="src/fst" type="asm_include"/>
        <include_path relative_path="src/l2_packet" type="asm_include"/>
        <include_path relative_path="src/p2p" type="asm_include"/>
        <include_path relative_path="src/pae" type="asm_include"/>
        <include_path relative_path="src/radius" type="asm_include"/>
        <include_path relative_path="src/rsn_supp" type="asm_include"/>
        <include_path relative_path="src/tls" type="asm_include"/>
        <include_path relative_path="src/wps" type="asm_include"/>
        <include_path relative_path="port/mbedtls" type="asm_include"/>
        <include_path relative_path="hostapd" type="asm_include"/>
        <include_path relative_path="wpa_supplicant" type="asm_include"/>
        <include_path relative_path="freertos" type="asm_include"/>
        <include_path relative_path="freertos/src" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wireless.wpa_supplicant.rtos.hostapd.MIMXRT1176" name="wpa_supplicant-rtos_hostapd" brief="Wpa supplicant rtos hostapd" version="2.11.0" full_name="Wpa supplicant rtos hostapd" category="Wireless/wpa_supplicant" user_visible="true" type="middleware" package_base_path="middleware/wireless/wpa_supplicant-rtos" project_base_path="wpa_supplicant-rtos">
      <defines>
        <define name="CONFIG_HOSTAPD" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.wireless.wpa_supplicant.rtos.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="hostapd" type="src">
        <files mask="hlr_auc_gw.c"/>
        <files mask="ctrl_iface.c"/>
        <files mask="eap_register.c"/>
      </source>
      <source relative_path="hostapd" type="c_include">
        <files mask="config_file.h"/>
        <files mask="ctrl_iface.h"/>
        <files mask="eap_register.h"/>
      </source>
      <source relative_path="hostapd" type="other">
        <files mask="README"/>
      </source>
      <source relative_path="src/ap" type="src">
        <files mask="dpp_hostapd.c"/>
        <files mask="acs.c"/>
        <files mask="eth_p_oui.c"/>
        <files mask="gas_serv.c"/>
      </source>
      <source relative_path="src/ap" type="c_include">
        <files mask="dpp_hostapd.h"/>
        <files mask="eth_p_oui.h"/>
      </source>
      <source relative_path="src/common" type="c_include">
        <files mask="gas_server.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_wpa_supplicant_rtos_hostapd.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src" type="c_include"/>
        <include_path relative_path="src/ap" type="c_include"/>
        <include_path relative_path="hostapd" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src" type="asm_include"/>
        <include_path relative_path="src/ap" type="asm_include"/>
        <include_path relative_path="hostapd" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.pal.MIMXRT1176" name="middleware.edgefast_bluetooth.pal" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.pal" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="middleware.edgefast_bluetooth.btble.ethermind.MIMXRT1176"/>
              <component_dependency value="middleware.edgefast_bluetooth.btble.ethermind.lib.MIMXRT1176"/>
              <component_dependency value="middleware.edgefast_bluetooth.template.MIMXRT1176"/>
            </all>
            <all>
              <component_dependency value="middleware.edgefast_bluetooth.ble.ethermind.MIMXRT1176"/>
              <component_dependency value="middleware.edgefast_bluetooth.ble.ethermind.lib.MIMXRT1176"/>
              <component_dependency value="middleware.edgefast_bluetooth.template.MIMXRT1176"/>
            </all>
            <all>
              <component_dependency value="middleware.edgefast_bluetooth.br.ethermind.MIMXRT1176"/>
              <component_dependency value="middleware.edgefast_bluetooth.br.ethermind.lib.MIMXRT1176"/>
              <component_dependency value="middleware.edgefast_bluetooth.template.MIMXRT1176"/>
            </all>
          </any_of>
          <component_dependency value="middleware.mbedtls.MIMXRT1176"/>
          <component_dependency value="middleware.edgefast_bluetooth.common.ethermind.MIMXRT1176"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.crypto.ethermind.MIMXRT1176"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.db_gen.ethermind.MIMXRT1176"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.host_msd_fatfs.ethermind.MIMXRT1176"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.platform.ethermind.MIMXRT1176"/>
          <component_dependency value="middleware.edgefast_bluetooth.porting.MIMXRT1176"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1176"/>
          <component_dependency value="middleware.usb.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="boards/template" project_relative_path="./" type="doc">
        <files mask="dummy.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_pal.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.common.ethermind.hci.MIMXRT1176" name="middleware.edgefast_bluetooth.common.ethermind.hci" brief="edgefast_bluetooth HCI" version="1.0.0" full_name="middleware.edgefast_bluetooth.common.ethermind.hci" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="port/pal/mcux/bluetooth" project_relative_path="./" type="doc">
        <files mask="dummy.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_common_ethermind_hci.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.common.ethermind.hci_uart.MIMXRT1176" name="middleware.edgefast_bluetooth.common.ethermind.hci_uart" brief="edgefast_bluetooth HCI UART" version="1.0.0" full_name="middleware.edgefast_bluetooth.common.ethermind.hci_uart" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <defines>
        <define name="DEBUG_CONSOLE_TRANSFER_NON_BLOCKING" value="1"/>
        <define name="SERIAL_PORT_TYPE_UART" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpuart_edma.MIMXRT1176"/>
          <component_dependency value="component.serial_manager.MIMXRT1176"/>
          <component_dependency value="component.serial_manager_uart.MIMXRT1176"/>
          <component_dependency value="middleware.edgefast_bluetooth.common.ethermind.hci.MIMXRT1176"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="port/pal/mcux/bluetooth" type="src">
        <files mask="hci_uart.c"/>
      </source>
      <source relative_path="port/pal/mcux/bluetooth" type="c_include">
        <files mask="hci_uart.h"/>
        <files mask="hci_uart_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_common_ethermind_hci_uart.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.common.ethermind.MIMXRT1176" name="middleware.edgefast_bluetooth.common.ethermind" brief="edgefast_bluetooth bt_ble host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.common.ethermind" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <defines>
        <define name="LFS_NO_INTRINSICS" value="1"/>
        <define name="LFS_NO_ERROR" value="1"/>
        <define name="LFS_THREADSAFE" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMXRT1176"/>
          <component_dependency value="component.osa_free_rtos.MIMXRT1176"/>
          <component_dependency value="middleware.edgefast_bluetooth.common.ethermind.hci.MIMXRT1176"/>
          <component_dependency value="middleware.edgefast_bluetooth.config.ethermind.MIMXRT1176"/>
          <component_dependency value="middleware.edgefast_bluetooth.extension.common.ethermind.MIMXRT1176"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <component_dependency value="middleware.fatfs.MIMXRT1176"/>
          <component_dependency value="middleware.littlefs.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="mcuxpresso" relative_path="port/pal/mcux/toolspec/mcuxpresso" type="src">
        <files mask="toolspec.c"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="port/pal/mcux/toolspec/mcuxpresso" type="c_include">
        <files mask="toolspec.h"/>
      </source>
      <source relative_path="bluetooth/export/eOSAL" type="c_include">
        <files mask="eBT_assert.h"/>
        <files mask="eBT_config.h"/>
        <files mask="eBT_debug_api.h"/>
        <files mask="eBT_fops.h"/>
        <files mask="eBT_os.h"/>
        <files mask="eBT_serial.h"/>
        <files mask="eBT_timer.h"/>
      </source>
      <source relative_path="bluetooth/export/include" type="c_include">
        <files mask="BT_a2dp_api.h"/>
        <files mask="BT_analyzer.h"/>
        <files mask="BT_api.h"/>
        <files mask="BT_assigned_numbers.h"/>
        <files mask="BT_at_parser_api.h"/>
        <files mask="BT_att_api.h"/>
        <files mask="BT_avctp_api.h"/>
        <files mask="BT_avdtp_api.h"/>
        <files mask="BT_avrcp_api.h"/>
        <files mask="BT_avrcp_ca_api.h"/>
        <files mask="BT_bip_api.h"/>
        <files mask="BT_bnep_api.h"/>
        <files mask="BT_bottom_half.h"/>
        <files mask="BT_bpp_api.h"/>
        <files mask="BT_common.h"/>
        <files mask="BT_ctn_api.h"/>
        <files mask="BT_dbase_api.h"/>
        <files mask="BT_device_queue.h"/>
        <files mask="BT_error.h"/>
        <files mask="BT_ftp_api.h"/>
        <files mask="BT_gap_api.h"/>
        <files mask="BT_gatt_db_api.h"/>
        <files mask="BT_hci_api.h"/>
        <files mask="BT_hdp_api.h"/>
        <files mask="BT_hfp_ag_api.h"/>
        <files mask="BT_hfp_unit_api.h"/>
        <files mask="BT_hid_device_api.h"/>
        <files mask="BT_hid_host_api.h"/>
        <files mask="BT_irobex_api.h"/>
        <files mask="BT_jpl_api.h"/>
        <files mask="BT_map_api.h"/>
        <files mask="BT_mcap_api.h"/>
        <files mask="BT_obex_api.h"/>
        <files mask="BT_opp_api.h"/>
        <files mask="BT_pan_api.h"/>
        <files mask="BT_pbap_api.h"/>
        <files mask="BT_racp.h"/>
        <files mask="BT_rfcomm_api.h"/>
        <files mask="BT_sap_api.h"/>
        <files mask="BT_sdp_api.h"/>
        <files mask="BT_security.h"/>
        <files mask="BT_sm_api.h"/>
        <files mask="BT_smp_api.h"/>
        <files mask="BT_snoop.h"/>
        <files mask="BT_spp_api.h"/>
        <files mask="BT_status.h"/>
        <files mask="BT_storage.h"/>
        <files mask="BT_version.h"/>
        <files mask="fsm_defines.h"/>
        <files mask="fsm_engine.h"/>
        <files mask="gatt_defines.h"/>
        <files mask="hci_transport.h"/>
        <files mask="l2cap.h"/>
        <files mask="write_task.h"/>
      </source>
      <source relative_path="bluetooth/export/vendor" type="c_include">
        <files mask="vendor_specific_commands.h"/>
        <files mask="vendor_specific_init.h"/>
      </source>
      <source relative_path="bluetooth/export/vendor" type="src">
        <files mask="vendor_specific_init.c"/>
      </source>
      <source relative_path="bluetooth/private/protocols/att" type="c_include">
        <files mask="att.h"/>
      </source>
      <source relative_path="bluetooth/private/protocols/avctp" type="c_include">
        <files mask="avctp.h"/>
      </source>
      <source relative_path="bluetooth/private/protocols/avdtp" type="c_include">
        <files mask="avdtp.h"/>
      </source>
      <source relative_path="bluetooth/private/protocols/bnep" type="c_include">
        <files mask="bnep.h"/>
      </source>
      <source relative_path="bluetooth/private/protocols/dbase" type="c_include">
        <files mask="database.h"/>
      </source>
      <source relative_path="bluetooth/private/protocols/hci_1.2" type="c_include">
        <files mask="hci_h.h"/>
      </source>
      <source relative_path="bluetooth/private/protocols/mcap" type="c_include">
        <files mask="mcap.h"/>
      </source>
      <source relative_path="bluetooth/private/protocols/obex" type="c_include">
        <files mask="obex.h"/>
      </source>
      <source relative_path="bluetooth/private/protocols/rfcomm" type="c_include">
        <files mask="rfcomm.h"/>
      </source>
      <source relative_path="bluetooth/private/protocols/sdp" type="c_include">
        <files mask="sdp.h"/>
      </source>
      <source relative_path="bluetooth/private/protocols/sm" type="c_include">
        <files mask="sm.h"/>
        <files mask="sm_extern.h"/>
        <files mask="sm_internal.h"/>
      </source>
      <source relative_path="bluetooth/private/protocols/smp" type="c_include">
        <files mask="smp.h"/>
        <files mask="smp_extern.h"/>
        <files mask="smp_fsm.h"/>
        <files mask="smp_fsm_engine.h"/>
        <files mask="smp_internal.h"/>
      </source>
      <source relative_path="bluetooth/private/utils/aes_cmac" type="c_include">
        <files mask="aes_cmac.h"/>
      </source>
      <source relative_path="bluetooth/private/utils/at_parser" type="c_include">
        <files mask="at_parser_hsp_hfp.h"/>
      </source>
      <source relative_path="bluetooth/private/utils/object_parser" type="c_include">
        <files mask="object_parser_api.h"/>
        <files mask="tokenizer.h"/>
      </source>
      <source relative_path="bluetooth/private/utils/racp" type="c_include">
        <files mask="racp.h"/>
      </source>
      <source relative_path="bluetooth/private/utils/storage" type="c_include">
        <files mask="storage.h"/>
      </source>
      <source relative_path="bluetooth/private/utils/xml_parser" type="c_include">
        <files mask="xml_common_defines.h"/>
        <files mask="xml_encoder.h"/>
        <files mask="xml_parser.h"/>
      </source>
      <source relative_path="port/osal/src/freertos" type="c_include">
        <files mask="EM_assert.h"/>
        <files mask="EM_config.h"/>
        <files mask="EM_debug.h"/>
        <files mask="EM_debug_api.h"/>
        <files mask="EM_debug_internal.h"/>
        <files mask="EM_fops.h"/>
        <files mask="EM_os.h"/>
        <files mask="EM_serial.h"/>
        <files mask="EM_timer.h"/>
        <files mask="EM_timer_internal.h"/>
      </source>
      <source relative_path="port/osal/src/freertos" type="src">
        <files mask="EM_config.c"/>
        <files mask="EM_debug.c"/>
        <files mask="EM_fops.c"/>
        <files mask="EM_os.c"/>
        <files mask="EM_serial.c"/>
        <files mask="EM_timer.c"/>
      </source>
      <source relative_path="port/pal/mcux/bluetooth" type="c_include">
        <files mask="BT_assert.h"/>
        <files mask="BT_config.h"/>
        <files mask="BT_debug.h"/>
        <files mask="BT_debug_api.h"/>
        <files mask="BT_fops.h"/>
        <files mask="BT_os.h"/>
        <files mask="BT_storage_pl.h"/>
        <files mask="BT_timer.h"/>
        <files mask="btsnoop_pl.h"/>
        <files mask="sco_audio_pl.h"/>
        <files mask="ctn_pl.h"/>
        <files mask="ftp_pl.h"/>
        <files mask="hci_uart_internal.h"/>
        <files mask="map_pl.h"/>
        <files mask="obex_pl.h"/>
        <files mask="pbap_pl.h"/>
        <files mask="write_task_extern_pl.h"/>
        <files mask="write_task_pl.h"/>
        <files mask="littlefs_pl.h"/>
        <files mask="fw_loader_uart.h"/>
      </source>
      <source relative_path="port/pal/mcux/bluetooth" type="src">
        <files mask="BT_status_pl.c"/>
        <files mask="BT_storage_pl.c"/>
        <files mask="btsnoop_pl.c"/>
        <files mask="sco_audio_pl.c"/>
        <files mask="ctn_pl.c"/>
        <files mask="ftp_pl.c"/>
        <files mask="ht_read_task_pl.c"/>
        <files mask="map_pl.c"/>
        <files mask="obex_pl.c"/>
        <files mask="pbap_pl.c"/>
        <files mask="write_task_pl.c"/>
        <files mask="littlefs_pl.c"/>
        <files mask="fw_loader_uart.c"/>
      </source>
      <source relative_path="port/pal/mcux/ethal" type="c_include">
        <files mask="ethal_assert.h"/>
        <files mask="ethal_config.h"/>
        <files mask="ethal_debug.h"/>
        <files mask="ethal_debug_api.h"/>
        <files mask="ethal_debug_internal.h"/>
        <files mask="ethal_fops.h"/>
        <files mask="ethal_os.h"/>
        <files mask="ethal_serial.h"/>
        <files mask="ethal_timer.h"/>
        <files mask="ethal_timer_internal.h"/>
      </source>
      <source relative_path="port/pal/mcux/ethal" type="src">
        <files mask="ethal_config.c"/>
        <files mask="ethal_debug.c"/>
        <files mask="ethal_fops.c"/>
        <files mask="ethal_os.c"/>
        <files mask="ethal_serial.c"/>
        <files mask="ethal_timer.c"/>
      </source>
      <source relative_path="port/pal/mcux/sbc" type="c_include">
        <files mask="sbc_os.h"/>
      </source>
      <source relative_path="port/pal/mcux" type="src">
        <files mask="EM_platform.c"/>
      </source>
      <source relative_path="port/pal/mcux" type="c_include">
        <files mask="EM_platform.h"/>
      </source>
      <source relative_path="bluetooth/private/utils/sbc" type="c_include">
        <files mask="sbc_api.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_common_ethermind.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/pal/mcux/toolspec/mcuxpresso" toolchain="mcuxpresso" type="c_include"/>
        <include_path relative_path="bluetooth/export/eOSAL" type="c_include"/>
        <include_path relative_path="bluetooth/export/include" type="c_include"/>
        <include_path relative_path="bluetooth/export/vendor" type="c_include"/>
        <include_path relative_path="bluetooth/private/protocols/att" type="c_include"/>
        <include_path relative_path="bluetooth/private/protocols/avctp" type="c_include"/>
        <include_path relative_path="bluetooth/private/protocols/avdtp" type="c_include"/>
        <include_path relative_path="bluetooth/private/protocols/bnep" type="c_include"/>
        <include_path relative_path="bluetooth/private/protocols/dbase" type="c_include"/>
        <include_path relative_path="bluetooth/private/protocols/hci_1.2" type="c_include"/>
        <include_path relative_path="bluetooth/private/protocols/mcap" type="c_include"/>
        <include_path relative_path="bluetooth/private/protocols/obex" type="c_include"/>
        <include_path relative_path="bluetooth/private/protocols/rfcomm" type="c_include"/>
        <include_path relative_path="bluetooth/private/protocols/sdp" type="c_include"/>
        <include_path relative_path="bluetooth/private/protocols/sm" type="c_include"/>
        <include_path relative_path="bluetooth/private/protocols/smp" type="c_include"/>
        <include_path relative_path="bluetooth/private/utils/aes_cmac" type="c_include"/>
        <include_path relative_path="bluetooth/private/utils/at_parser" type="c_include"/>
        <include_path relative_path="bluetooth/private/utils/object_parser" type="c_include"/>
        <include_path relative_path="bluetooth/private/utils/racp" type="c_include"/>
        <include_path relative_path="bluetooth/private/utils/storage" type="c_include"/>
        <include_path relative_path="bluetooth/private/utils/xml_parser" type="c_include"/>
        <include_path relative_path="port/pal/mcux/bluetooth" type="c_include"/>
        <include_path relative_path="port/pal/mcux/ethal" type="c_include"/>
        <include_path relative_path="port/pal/mcux/sbc" type="c_include"/>
        <include_path relative_path="port/osal/src/freertos" type="c_include"/>
        <include_path relative_path="port/pal/mcux" type="c_include"/>
        <include_path relative_path="bluetooth/private/utils/sbc" type="c_include"/>
        <include_path relative_path="bluetooth/export/eOSAL" type="asm_include"/>
        <include_path relative_path="bluetooth/export/include" type="asm_include"/>
        <include_path relative_path="bluetooth/export/vendor" type="asm_include"/>
        <include_path relative_path="bluetooth/private/protocols/att" type="asm_include"/>
        <include_path relative_path="bluetooth/private/protocols/avctp" type="asm_include"/>
        <include_path relative_path="bluetooth/private/protocols/avdtp" type="asm_include"/>
        <include_path relative_path="bluetooth/private/protocols/bnep" type="asm_include"/>
        <include_path relative_path="bluetooth/private/protocols/dbase" type="asm_include"/>
        <include_path relative_path="bluetooth/private/protocols/hci_1.2" type="asm_include"/>
        <include_path relative_path="bluetooth/private/protocols/mcap" type="asm_include"/>
        <include_path relative_path="bluetooth/private/protocols/obex" type="asm_include"/>
        <include_path relative_path="bluetooth/private/protocols/rfcomm" type="asm_include"/>
        <include_path relative_path="bluetooth/private/protocols/sdp" type="asm_include"/>
        <include_path relative_path="bluetooth/private/protocols/sm" type="asm_include"/>
        <include_path relative_path="bluetooth/private/protocols/smp" type="asm_include"/>
        <include_path relative_path="bluetooth/private/utils/aes_cmac" type="asm_include"/>
        <include_path relative_path="bluetooth/private/utils/at_parser" type="asm_include"/>
        <include_path relative_path="bluetooth/private/utils/object_parser" type="asm_include"/>
        <include_path relative_path="bluetooth/private/utils/racp" type="asm_include"/>
        <include_path relative_path="bluetooth/private/utils/storage" type="asm_include"/>
        <include_path relative_path="bluetooth/private/utils/xml_parser" type="asm_include"/>
        <include_path relative_path="port/pal/mcux/bluetooth" type="asm_include"/>
        <include_path relative_path="port/pal/mcux/ethal" type="asm_include"/>
        <include_path relative_path="port/pal/mcux/sbc" type="asm_include"/>
        <include_path relative_path="port/osal/src/freertos" type="asm_include"/>
        <include_path relative_path="port/pal/mcux" type="asm_include"/>
        <include_path relative_path="bluetooth/private/utils/sbc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.common.ethermind.lc3.MIMXRT1176" name="middleware.edgefast_bluetooth.common.ethermind.lc3" brief="edgefast_bluetooth bt_ble host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.common.ethermind.lc3" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <defines>
        <define name="LC3_DSP" value="1"/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="middleware.edgefast_bluetooth.ble.ethermind.MIMXRT1176"/>
              <component_dependency value="middleware.edgefast_bluetooth.ble.ethermind.lib.lc3.MIMXRT1176"/>
            </all>
            <all>
              <component_dependency value="middleware.edgefast_bluetooth.br.ethermind.MIMXRT1176"/>
              <component_dependency value="middleware.edgefast_bluetooth.br.ethermind.lib.lc3.MIMXRT1176"/>
            </all>
            <all>
              <component_dependency value="middleware.edgefast_bluetooth.btble.ethermind.MIMXRT1176"/>
              <component_dependency value="middleware.edgefast_bluetooth.btble.ethermind.lib.lc3.MIMXRT1176"/>
            </all>
          </any_of>
          <component_dependency value="middleware.edgefast_bluetooth.le_audio.config.template.MIMXRT1176"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="port/pal/mcux/lc3" type="c_include">
        <files mask="LC3_os.h"/>
      </source>
      <source relative_path="bluetooth/private/utils/lc3/export/include" type="c_include">
        <files mask="LC3_api.h"/>
      </source>
      <source relative_path="bluetooth/private/utils/lc3/private/fixed/config" type="c_include">
        <files mask="LC3_limits.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_common_ethermind_lc3.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/pal/mcux/lc3" type="c_include"/>
        <include_path relative_path="bluetooth/private/utils/lc3/export/include" type="c_include"/>
        <include_path relative_path="bluetooth/private/utils/lc3/private/fixed/config" type="c_include"/>
        <include_path relative_path="port/pal/mcux/lc3" type="asm_include"/>
        <include_path relative_path="bluetooth/private/utils/lc3/export/include" type="asm_include"/>
        <include_path relative_path="bluetooth/private/utils/lc3/private/fixed/config" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.wifi_nxp.controller.base.MIMXRT1176" name="middleware.edgefast_bluetooth.wifi_nxp.controller.base" brief="edgefast_bluetooth wifi_nxp controller" version="1.0.0" full_name="middleware.edgefast_bluetooth.wifi_nxp.controller.base" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <defines>
        <define name="SDIO_ENABLED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="component.igpio_adapter.MIMXRT1176"/>
              <component_dependency value="platform.drivers.igpio.MIMXRT1176"/>
            </all>
            <all>
              <not>
                <component_dependency value="middleware.lwip.MIMXRT1176"/>
              </not>
              <component_dependency value="middleware.edgefast_bluetooth.wifi_nxp.controller.lwip.config.MIMXRT1176"/>
            </all>
            <all>
              <not>
                <component_dependency value="middleware.wifi.MIMXRT1176"/>
              </not>
              <component_dependency value="middleware.edgefast_bluetooth.wifi_nxp.controller.wifi.config.MIMXRT1176"/>
            </all>
          </any_of>
          <component_dependency value="middleware.edgefast_bluetooth.common.ethermind.hci_uart.MIMXRT1176"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <component_dependency value="middleware.sdmmc.host.usdhc.MIMXRT1176"/>
          <component_dependency value="middleware.sdmmc.sdio.MIMXRT1176"/>
          <component_dependency value="middleware.wifi.fwdnld.MIMXRT1176"/>
          <component_dependency value="middleware.wifi.osa_free_rtos.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="port/pal/mcux/bluetooth/controller" type="c_include">
        <files mask="controller.h"/>
        <files mask="controller_hci_uart.h"/>
      </source>
      <source relative_path="port/pal/mcux/bluetooth/controller" type="src">
        <files mask="controller_wifi_nxp.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_wifi_nxp_controller_base.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/pal/mcux/bluetooth/controller" type="c_include"/>
        <include_path relative_path="port/pal/mcux/bluetooth/controller" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.k32w061.controller.MIMXRT1176" name="middleware.edgefast_bluetooth.k32w061.controller" brief="edgefast_bluetooth k32w061 controller" version="1.0.0" full_name="middleware.edgefast_bluetooth.k32w061.controller" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.common.ethermind.hci_uart.MIMXRT1176"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="port/pal/mcux/bluetooth/controller/k32w061" type="doc">
        <files mask="DK6-RN-0065-Production-Flash-Programmer.pdf" hidden="true"/>
        <files mask="JN-SW-4407+DK6+Production+Flash+Programmer+v2282.exe" hidden="true"/>
        <files mask="readme.txt"/>
        <files mask="DK6-RN-0065-Production-Flash-Programmer.pdf"/>
      </source>
      <source relative_path="port/pal/mcux/bluetooth/controller/k32w061" type="other">
        <files mask="hci_black_box_bm.bin"/>
        <files mask="ot-rcp.bin"/>
        <files mask="ot_rcp_ble_hci_bb_bm_2_uart.bin"/>
        <files mask="ot_rcp_ble_hci_bb_bm_single_uart.bin"/>
        <files mask="JN-SW-4407+DK6+Production+Flash+Programmer+v2282.exe"/>
      </source>
      <source relative_path="port/pal/mcux/bluetooth/controller/k32w061" type="binary">
        <files mask="hci_black_box_bm.bin"/>
        <files mask="ot-rcp.bin"/>
        <files mask="ot_rcp_ble_hci_bb_bm_2_uart.bin"/>
        <files mask="ot_rcp_ble_hci_bb_bm_single_uart.bin"/>
      </source>
      <source relative_path="port/pal/mcux/bluetooth/controller" type="c_include">
        <files mask="controller.h"/>
        <files mask="controller_hci_uart.h"/>
      </source>
      <source relative_path="port/pal/mcux/bluetooth/controller" type="src">
        <files mask="controller_k32w.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_k32w061_controller.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/pal/mcux/bluetooth/controller" type="c_include"/>
        <include_path relative_path="port/pal/mcux/bluetooth/controller" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.rw610.controller.MIMXRT1176" name="middleware.edgefast_bluetooth.rw610.controller" brief="edgefast_bluetooth rw610 controller" version="1.0.0" full_name="middleware.edgefast_bluetooth.rw610.controller" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="port/pal/mcux/bluetooth/controller" type="c_include">
        <files mask="controller.h"/>
      </source>
      <source relative_path="port/pal/mcux/bluetooth/controller" type="src">
        <files mask="controller_rw610.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_rw610_controller.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/pal/mcux/bluetooth/controller" type="c_include"/>
        <include_path relative_path="port/pal/mcux/bluetooth/controller" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.config.ethermind.MIMXRT1176" name="middleware.edgefast_bluetooth.config.ethermind" brief="edgefast_bluetooth configuration for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.config.ethermind" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="bluetooth/private/lib/mcux/default/config" project_relative_path="bluetooth/private/lib/config" type="c_include">
        <files mask="BT_features.h"/>
        <files mask="BT_limits.h"/>
        <files mask="db_gen.h"/>
      </source>
      <source relative_path="bluetooth/private/lib/mcux/default/config" project_relative_path="bluetooth/private/lib/config" type="doc">
        <files mask="dummy.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_config_ethermind.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="bluetooth/private/lib/mcux/default/config" project_relative_path="bluetooth/private/lib/config" type="c_include"/>
        <include_path relative_path="bluetooth/private/lib/mcux/default/config" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.extension.common.ethermind.MIMXRT1176" name="middleware.edgefast_bluetooth.extension.common.ethermind" brief="edgefast_bluetooth extension for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.extension.common.ethermind" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="bluetooth/export/extension" type="src">
        <files mask="aes_cmac_pl.c"/>
        <files mask="BT_common_pl.c"/>
        <files mask="device_queue_pl.c"/>
        <files mask="sm_pl.c"/>
        <files mask="sm_ssp_pl.c"/>
        <files mask="smp_pl.c"/>
        <files mask="gatt_db_pl.c"/>
      </source>
      <source relative_path="bluetooth/export/extension" type="c_include">
        <files mask="aes_cmac_pl.h"/>
        <files mask="BT_common_pl.h"/>
        <files mask="device_queue_pl.h"/>
        <files mask="sm_pl.h"/>
        <files mask="sm_ssp_pl.h"/>
        <files mask="smp_pl.h"/>
        <files mask="gatt_db_pl.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_extension_common_ethermind.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="bluetooth/export/extension" type="c_include"/>
        <include_path relative_path="bluetooth/export/extension" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.btble.ethermind.MIMXRT1176" name="middleware.edgefast_bluetooth.btble.ethermind.cm7f" brief="edgefast_bluetooth bt_ble Host stack(including BR and BLE)" version="1.0.0" full_name="middleware.edgefast_bluetooth.btble.ethermind.cm7f" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.btble.ethermind.lib.MIMXRT1176"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <component_dependency value="middleware.edgefast_bluetooth.template.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind/host" type="src">
        <files mask="bt_pal_a2dp.c"/>
        <files mask="bt_pal_avrcp.c"/>
        <files mask="bt_pal_avrcp_al_internal.c"/>
        <files mask="bt_pal_avrcp_al_api.c"/>
        <files mask="bt_pal_att.c"/>
        <files mask="bt_pal_eatt.c"/>
        <files mask="bt_pal_conn.c"/>
        <files mask="bt_pal_data.c"/>
        <files mask="bt_pal_ead.c"/>
        <files mask="bt_pal_crypto.c"/>
        <files mask="bt_pal_aes_ccm.c"/>
        <files mask="bt_pal_gatt.c"/>
        <files mask="bt_pal_hci_core.c"/>
        <files mask="bt_pal_adv.c"/>
        <files mask="bt_pal_br.c"/>
        <files mask="bt_pal_id.c"/>
        <files mask="bt_pal_long_wq.c"/>
        <files mask="bt_pal_iso.c"/>
        <files mask="bt_pal_scan.c"/>
        <files mask="bt_pal_ecc.c"/>
        <files mask="bt_pal_addr.c"/>
        <files mask="bt_pal_buf.c"/>
        <files mask="bt_pal_direction.c"/>
        <files mask="bt_pal_keys.c"/>
        <files mask="bt_pal_keys_br.c"/>
        <files mask="bt_pal_l2cap.c"/>
        <files mask="bt_pal_l2cap_br.c"/>
        <files mask="bt_pal_map_mce.c"/>
        <files mask="bt_pal_map_mse.c"/>
        <files mask="bt_pal_monitor.c"/>
        <files mask="bt_pal_rfcomm.c"/>
        <files mask="bt_pal_spp.c"/>
        <files mask="bt_pal_rpa.c"/>
        <files mask="bt_pal_settings.c"/>
        <files mask="bt_pal_sdp.c"/>
        <files mask="bt_pal_smp.c"/>
        <files mask="bt_pal_ssp.c"/>
        <files mask="bt_pal_uuid.c"/>
        <files mask="bt_pal_hfp_ag.c"/>
        <files mask="bt_pal_hfp_hf.c"/>
        <files mask="bt_pal_pbap_pce.c"/>
        <files mask="bt_pal_pbap_pse.c"/>
        <files mask="bt_pal_sco.c"/>
      </source>
      <source relative_path="source/impl/ethermind/host" type="c_include">
        <files mask="bt_pal_a2dp_internal.h"/>
        <files mask="bt_pal_avrcp_al_api.h"/>
        <files mask="bt_pal_avrcp_al_internal.h"/>
        <files mask="bt_pal_avrcp_internal.h"/>
        <files mask="bt_pal_at.h"/>
        <files mask="bt_pal_att_internal.h"/>
        <files mask="bt_pal_avdtp_internal.h"/>
        <files mask="bt_pal_conn_internal.h"/>
        <files mask="bt_pal_crypto_internal.h"/>
        <files mask="bt_pal_gatt_internal.h"/>
        <files mask="bt_pal_hci_core.h"/>
        <files mask="bt_pal_adv.h"/>
        <files mask="bt_pal_br.h"/>
        <files mask="bt_pal_id.h"/>
        <files mask="bt_pal_long_wq.h"/>
        <files mask="bt_pal_iso_internal.h"/>
        <files mask="bt_pal_scan.h"/>
        <files mask="bt_pal_ecc.h"/>
        <files mask="bt_pal_addr_internal.h"/>
        <files mask="bt_pal_buf_view.h"/>
        <files mask="bt_pal_direction_internal.h"/>
        <files mask="bt_pal_hci_ecc.h"/>
        <files mask="bt_pal_keys.h"/>
        <files mask="bt_pal_l2cap_internal.h"/>
        <files mask="bt_pal_l2cap_br_internal.h"/>
        <files mask="bt_pal_l2cap_br_interface.h"/>
        <files mask="bt_pal_map_internal.h"/>
        <files mask="bt_pal_monitor.h"/>
        <files mask="bt_pal_rfcomm_internal.h"/>
        <files mask="bt_pal_rpa.h"/>
        <files mask="bt_pal_settings.h"/>
        <files mask="bt_pal_sdp_internal.h"/>
        <files mask="bt_pal_smp.h"/>
        <files mask="bt_pal_ssp.h"/>
        <files mask="bt_pal_hfp_internal.h"/>
        <files mask="bt_pal_pbap_internal.h"/>
        <files mask="bt_pal_sco_internal.h"/>
      </source>
      <source relative_path="source/impl/ethermind/host/a2dp_codec/sbc" type="src">
        <files mask="a2dp_codec_sbc.c"/>
      </source>
      <source relative_path="include/bluetooth" type="c_include">
        <files mask="pbap_pce.h"/>
        <files mask="pbap_pse.h"/>
        <files mask="pbap_types.h"/>
        <files mask="a2dp.h"/>
        <files mask="avrcp.h"/>
        <files mask="a2dp_codec_sbc.h"/>
        <files mask="addr.h"/>
        <files mask="att.h"/>
        <files mask="avdtp.h"/>
        <files mask="bluetooth.h"/>
        <files mask="direction.h"/>
        <files mask="buf.h"/>
        <files mask="l2cap.h"/>
        <files mask="map_mce.h"/>
        <files mask="map_mse.h"/>
        <files mask="map_types.h"/>
        <files mask="obex.h"/>
        <files mask="rfcomm.h"/>
        <files mask="spp.h"/>
        <files mask="sdp.h"/>
        <files mask="conn.h"/>
        <files mask="crypto.h"/>
        <files mask="gap.h"/>
        <files mask="gatt.h"/>
        <files mask="hci.h"/>
        <files mask="byteorder.h"/>
        <files mask="hci_types.h"/>
        <files mask="ead.h"/>
        <files mask="hci_raw.h"/>
        <files mask="hci_vs.h"/>
        <files mask="hfp_hf.h"/>
        <files mask="hfp_ag.h"/>
        <files mask="iso.h"/>
        <files mask="testing.h"/>
        <files mask="uuid.h"/>
      </source>
      <source relative_path="source/impl/ethermind/common" type="src">
        <files mask="addr.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_btble_ethermind.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/impl/ethermind/host" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/host" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.ble.ethermind.MIMXRT1176" name="middleware.edgefast_bluetooth.ble.ethermind.cm7f" brief="edgefast_bluetooth bt_ble Host stack(including BLE only)" version="1.0.0" full_name="middleware.edgefast_bluetooth.ble.ethermind.cm7f" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <defines>
        <define name="CFG_BLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.ble.ethermind.lib.MIMXRT1176"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <component_dependency value="middleware.edgefast_bluetooth.template.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind/host" type="src">
        <files mask="bt_pal_att.c"/>
        <files mask="bt_pal_eatt.c"/>
        <files mask="bt_pal_conn.c"/>
        <files mask="bt_pal_data.c"/>
        <files mask="bt_pal_ead.c"/>
        <files mask="bt_pal_crypto.c"/>
        <files mask="bt_pal_aes_ccm.c"/>
        <files mask="bt_pal_gatt.c"/>
        <files mask="bt_pal_hci_core.c"/>
        <files mask="bt_pal_adv.c"/>
        <files mask="bt_pal_br.c"/>
        <files mask="bt_pal_id.c"/>
        <files mask="bt_pal_long_wq.c"/>
        <files mask="bt_pal_iso.c"/>
        <files mask="bt_pal_scan.c"/>
        <files mask="bt_pal_ecc.c"/>
        <files mask="bt_pal_addr.c"/>
        <files mask="bt_pal_buf.c"/>
        <files mask="bt_pal_direction.c"/>
        <files mask="bt_pal_keys.c"/>
        <files mask="bt_pal_l2cap.c"/>
        <files mask="bt_pal_monitor.c"/>
        <files mask="bt_pal_rpa.c"/>
        <files mask="bt_pal_settings.c"/>
        <files mask="bt_pal_smp.c"/>
        <files mask="bt_pal_smp_null.c"/>
        <files mask="bt_pal_uuid.c"/>
      </source>
      <source relative_path="source/impl/ethermind/host" type="c_include">
        <files mask="bt_pal_att_internal.h"/>
        <files mask="bt_pal_conn_internal.h"/>
        <files mask="bt_pal_crypto_internal.h"/>
        <files mask="bt_pal_gatt_internal.h"/>
        <files mask="bt_pal_hci_core.h"/>
        <files mask="bt_pal_adv.h"/>
        <files mask="bt_pal_br.h"/>
        <files mask="bt_pal_id.h"/>
        <files mask="bt_pal_long_wq.h"/>
        <files mask="bt_pal_iso_internal.h"/>
        <files mask="bt_pal_scan.h"/>
        <files mask="bt_pal_ecc.h"/>
        <files mask="bt_pal_addr_internal.h"/>
        <files mask="bt_pal_buf_view.h"/>
        <files mask="bt_pal_direction_internal.h"/>
        <files mask="bt_pal_hci_ecc.h"/>
        <files mask="bt_pal_keys.h"/>
        <files mask="bt_pal_l2cap_internal.h"/>
        <files mask="bt_pal_l2cap_br_internal.h"/>
        <files mask="bt_pal_l2cap_br_interface.h"/>
        <files mask="bt_pal_monitor.h"/>
        <files mask="bt_pal_rpa.h"/>
        <files mask="bt_pal_settings.h"/>
        <files mask="bt_pal_smp.h"/>
        <files mask="bt_pal_ssp.h"/>
      </source>
      <source relative_path="include/bluetooth" type="c_include">
        <files mask="addr.h"/>
        <files mask="att.h"/>
        <files mask="bluetooth.h"/>
        <files mask="direction.h"/>
        <files mask="buf.h"/>
        <files mask="l2cap.h"/>
        <files mask="conn.h"/>
        <files mask="crypto.h"/>
        <files mask="gap.h"/>
        <files mask="gatt.h"/>
        <files mask="hci.h"/>
        <files mask="hci_types.h"/>
        <files mask="ead.h"/>
        <files mask="byteorder.h"/>
        <files mask="hci_raw.h"/>
        <files mask="hci_vs.h"/>
        <files mask="iso.h"/>
        <files mask="testing.h"/>
        <files mask="uuid.h"/>
      </source>
      <source relative_path="source/impl/ethermind/common" type="src">
        <files mask="addr.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_ble_ethermind.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/impl/ethermind/host" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/host" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.br.ethermind.MIMXRT1176" name="middleware.edgefast_bluetooth.br.ethermind.cm7f" brief="edgefast_bluetooth bt_ble Host stack(including BR only)" version="1.0.0" full_name="middleware.edgefast_bluetooth.br.ethermind.cm7f" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <defines>
        <define name="CFG_CLASSIC" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.br.ethermind.lib.MIMXRT1176"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <component_dependency value="middleware.edgefast_bluetooth.template.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind/host" type="src">
        <files mask="bt_pal_a2dp.c"/>
        <files mask="bt_pal_avrcp.c"/>
        <files mask="bt_pal_avrcp_al_internal.c"/>
        <files mask="bt_pal_avrcp_al_api.c"/>
        <files mask="bt_pal_conn.c"/>
        <files mask="bt_pal_data.c"/>
        <files mask="bt_pal_ead.c"/>
        <files mask="bt_pal_crypto.c"/>
        <files mask="bt_pal_aes_ccm.c"/>
        <files mask="bt_pal_hci_core.c"/>
        <files mask="bt_pal_adv.c"/>
        <files mask="bt_pal_br.c"/>
        <files mask="bt_pal_id.c"/>
        <files mask="bt_pal_long_wq.c"/>
        <files mask="bt_pal_scan.c"/>
        <files mask="bt_pal_ecc.c"/>
        <files mask="bt_pal_addr.c"/>
        <files mask="bt_pal_buf.c"/>
        <files mask="bt_pal_direction.c"/>
        <files mask="bt_pal_keys.c"/>
        <files mask="bt_pal_keys_br.c"/>
        <files mask="bt_pal_l2cap.c"/>
        <files mask="bt_pal_l2cap_br.c"/>
        <files mask="bt_pal_map_mce.c"/>
        <files mask="bt_pal_map_mse.c"/>
        <files mask="bt_pal_monitor.c"/>
        <files mask="bt_pal_rfcomm.c"/>
        <files mask="bt_pal_spp.c"/>
        <files mask="bt_pal_rpa.c"/>
        <files mask="bt_pal_settings.c"/>
        <files mask="bt_pal_sdp.c"/>
        <files mask="bt_pal_smp.c"/>
        <files mask="bt_pal_ssp.c"/>
        <files mask="bt_pal_uuid.c"/>
        <files mask="bt_pal_hfp_ag.c"/>
        <files mask="bt_pal_hfp_hf.c"/>
        <files mask="bt_pal_pbap_pce.c"/>
        <files mask="bt_pal_pbap_pse.c"/>
        <files mask="bt_pal_sco.c"/>
      </source>
      <source relative_path="source/impl/ethermind/host" type="c_include">
        <files mask="bt_pal_a2dp_internal.h"/>
        <files mask="bt_pal_avrcp_al_api.h"/>
        <files mask="bt_pal_avrcp_al_internal.h"/>
        <files mask="bt_pal_avrcp_internal.h"/>
        <files mask="bt_pal_at.h"/>
        <files mask="bt_pal_att_internal.h"/>
        <files mask="bt_pal_avdtp_internal.h"/>
        <files mask="bt_pal_conn_internal.h"/>
        <files mask="bt_pal_crypto_internal.h"/>
        <files mask="bt_pal_gatt_internal.h"/>
        <files mask="bt_pal_hci_core.h"/>
        <files mask="bt_pal_adv.h"/>
        <files mask="bt_pal_br.h"/>
        <files mask="bt_pal_id.h"/>
        <files mask="bt_pal_long_wq.h"/>
        <files mask="bt_pal_scan.h"/>
        <files mask="bt_pal_ecc.h"/>
        <files mask="bt_pal_addr_internal.h"/>
        <files mask="bt_pal_buf_view.h"/>
        <files mask="bt_pal_direction_internal.h"/>
        <files mask="bt_pal_hci_ecc.h"/>
        <files mask="bt_pal_keys.h"/>
        <files mask="bt_pal_l2cap_internal.h"/>
        <files mask="bt_pal_l2cap_br_internal.h"/>
        <files mask="bt_pal_l2cap_br_interface.h"/>
        <files mask="bt_pal_map_internal.h"/>
        <files mask="bt_pal_monitor.h"/>
        <files mask="bt_pal_rfcomm_internal.h"/>
        <files mask="bt_pal_rpa.h"/>
        <files mask="bt_pal_settings.h"/>
        <files mask="bt_pal_sdp_internal.h"/>
        <files mask="bt_pal_smp.h"/>
        <files mask="bt_pal_ssp.h"/>
        <files mask="bt_pal_hfp_internal.h"/>
        <files mask="bt_pal_pbap_internal.h"/>
        <files mask="bt_pal_sco_internal.h"/>
      </source>
      <source relative_path="source/impl/ethermind/host/a2dp_codec/sbc" type="src">
        <files mask="a2dp_codec_sbc.c"/>
      </source>
      <source relative_path="include/bluetooth" type="c_include">
        <files mask="pbap_pce.h"/>
        <files mask="pbap_pse.h"/>
        <files mask="pbap_types.h"/>
        <files mask="a2dp.h"/>
        <files mask="avrcp.h"/>
        <files mask="a2dp_codec_sbc.h"/>
        <files mask="addr.h"/>
        <files mask="att.h"/>
        <files mask="avdtp.h"/>
        <files mask="bluetooth.h"/>
        <files mask="direction.h"/>
        <files mask="buf.h"/>
        <files mask="l2cap.h"/>
        <files mask="map_mce.h"/>
        <files mask="map_mse.h"/>
        <files mask="map_types.h"/>
        <files mask="obex.h"/>
        <files mask="rfcomm.h"/>
        <files mask="spp.h"/>
        <files mask="sdp.h"/>
        <files mask="conn.h"/>
        <files mask="crypto.h"/>
        <files mask="gap.h"/>
        <files mask="gatt.h"/>
        <files mask="hci.h"/>
        <files mask="byteorder.h"/>
        <files mask="hci_types.h"/>
        <files mask="ead.h"/>
        <files mask="hci_raw.h"/>
        <files mask="hci_vs.h"/>
        <files mask="hfp_hf.h"/>
        <files mask="hfp_ag.h"/>
        <files mask="iso.h"/>
        <files mask="testing.h"/>
        <files mask="uuid.h"/>
      </source>
      <source relative_path="source/impl/ethermind/common" type="src">
        <files mask="addr.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_br_ethermind.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/impl/ethermind/host" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/host" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.config.template.MIMXRT1176" name="middleware.edgefast_bluetooth.le_audio.config.template" brief="edgefast_bluetooth configuration template for LE audio" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.config.template" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_config_template.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.cap.MIMXRT1176" name="middleware.edgefast_bluetooth.le_audio.cap" brief="edgefast_bluetooth le_audio.cap" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.cap" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="cap.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="cap_acceptor.c"/>
        <files mask="cap_commander.c"/>
        <files mask="cap_common.c"/>
        <files mask="cap_initiator.c"/>
        <files mask="cap_stream.c"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="c_include">
        <files mask="cap_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_cap.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.aics.MIMXRT1176" name="middleware.edgefast_bluetooth.le_audio.aics" brief="edgefast_bluetooth le_audio.aics" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.aics" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="aics.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="aics.c"/>
        <files mask="aics_client.c"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="c_include">
        <files mask="aics_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_aics.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.vocs.MIMXRT1176" name="middleware.edgefast_bluetooth.le_audio.vocs" brief="edgefast_bluetooth le_audio.vocs" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.vocs" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="vocs.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="vocs.c"/>
        <files mask="vocs_client.c"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="c_include">
        <files mask="vocs_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_vocs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.vcp.MIMXRT1176" name="middleware.edgefast_bluetooth.le_audio.vcs" brief="edgefast_bluetooth le_audio.vcs" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.vcs" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.le_audio.aics.MIMXRT1176"/>
          <component_dependency value="middleware.edgefast_bluetooth.le_audio.vocs.MIMXRT1176"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="vcp.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="c_include">
        <files mask="vcp_internal.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="vcp_vol_ctlr.c"/>
        <files mask="vcp_vol_rend.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_vcp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.micp.MIMXRT1176" name="middleware.edgefast_bluetooth.le_audio.micp" brief="edgefast_bluetooth le_audio.micp" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.micp" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.le_audio.aics.MIMXRT1176"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="micp.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="micp_mic_ctlr.c"/>
        <files mask="micp_mic_dev.c"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="c_include">
        <files mask="micp_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_micp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.csip.MIMXRT1176" name="middleware.edgefast_bluetooth.le_audio.csip" brief="edgefast_bluetooth le_audio.csis" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.csip" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="csip.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="csip_crypto.c"/>
        <files mask="csip_set_coordinator.c"/>
        <files mask="csip_set_member.c"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="c_include">
        <files mask="csip_crypto.h"/>
        <files mask="csip_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_csip.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.ccid.MIMXRT1176" name="middleware.edgefast_bluetooth.le_audio.ccid" brief="edgefast_bluetooth le_audio.ccid" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.ccid" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind/audio" type="c_include">
        <files mask="ccid_internal.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="ccid.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_ccid.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.mcs.MIMXRT1176" name="middleware.edgefast_bluetooth.le_audio.mcs" brief="edgefast_bluetooth le_audio.mcs" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.mcs" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.le_audio.ccid.MIMXRT1176"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="mcs.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="mcs.c"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="c_include">
        <files mask="mcs_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_mcs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.mcc.MIMXRT1176" name="middleware.edgefast_bluetooth.le_audio.mcc" brief="edgefast_bluetooth le_audio.mcc" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.mcc" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.le_audio.ccid.MIMXRT1176"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="mcc.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="mcc.c"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="c_include">
        <files mask="mcc_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_mcc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.mpl.MIMXRT1176" name="middleware.edgefast_bluetooth.le_audio.mpl" brief="edgefast_bluetooth le_audio.mpl" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.mpl" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.le_audio.ccid.MIMXRT1176"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="media_proxy.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="media_proxy.c"/>
        <files mask="mpl.c"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="c_include">
        <files mask="media_proxy_internal.h"/>
        <files mask="mpl_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_mpl.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.bap.MIMXRT1176" name="middleware.edgefast_bluetooth.le_audio.bap" brief="edgefast_bluetooth le_audio.baps" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.bap" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="audio.h"/>
        <files mask="bap_lc3_preset.h"/>
        <files mask="bap.h"/>
        <files mask="lc3.h"/>
        <files mask="pacs.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="c_include">
        <files mask="ascs_internal.h"/>
        <files mask="audio_internal.h"/>
        <files mask="bap_iso.h"/>
        <files mask="bap_endpoint.h"/>
        <files mask="pacs_internal.h"/>
        <files mask="bap_stream.h"/>
        <files mask="bap_unicast_client_internal.h"/>
        <files mask="bap_unicast_server.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="ascs.c"/>
        <files mask="bap_iso.c"/>
        <files mask="audio.c"/>
        <files mask="bap_base.c"/>
        <files mask="bap_broadcast_sink.c"/>
        <files mask="bap_broadcast_source.c"/>
        <files mask="codec.c"/>
        <files mask="pacs.c"/>
        <files mask="bap_stream.c"/>
        <files mask="bap_unicast_client.c"/>
        <files mask="bap_unicast_server.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_bap.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.bass.MIMXRT1176" name="middleware.edgefast_bluetooth.le_audio.bass" brief="edgefast_bluetooth le_audio.bass" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.bass" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="bap.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="bap_broadcast_assistant.c"/>
        <files mask="bap_scan_delegator.c"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="c_include">
        <files mask="bap_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_bass.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.has.MIMXRT1176" name="middleware.edgefast_bluetooth.le_audio.has" brief="edgefast_bluetooth le_audio.has" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.has" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="has.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="has_client.c"/>
        <files mask="has.c"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="c_include">
        <files mask="has_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_has.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.tbs.MIMXRT1176" name="middleware.edgefast_bluetooth.le_audio.tbs" brief="edgefast_bluetooth le_audio.tbs" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.tbs" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="tbs.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="tbs_client.c"/>
        <files mask="tbs.c"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="c_include">
        <files mask="tbs_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_tbs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.tmap.MIMXRT1176" name="middleware.edgefast_bluetooth.le_audio.tmap" brief="edgefast_bluetooth le_audio.tmap" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.tmap" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="tmap.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="tmap.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_tmap.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.gmap.MIMXRT1176" name="middleware.edgefast_bluetooth.le_audio.gmap" brief="edgefast_bluetooth le_audio.gmap" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.gmap" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="gmap.h"/>
        <files mask="gmap_lc3_preset.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="gmap_client.c"/>
        <files mask="gmap_server.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_gmap.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.pbp.MIMXRT1176" name="middleware.edgefast_bluetooth.le_audio.pbp" brief="edgefast_bluetooth le_audio.pbp" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.pbp" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="pbp.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="pbp.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_pbp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.profile.hrs.MIMXRT1176" name="middleware.edgefast_bluetooth.profile.hrs" brief="edgefast_bluetooth profile hrs" version="1.0.0" full_name="middleware.edgefast_bluetooth.profile.hrs" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/services" type="src">
        <files mask="hrs.c"/>
      </source>
      <source relative_path="include/bluetooth/services" type="c_include">
        <files mask="hrs.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_profile_hrs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/services" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/services" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.profile.bas.MIMXRT1176" name="middleware.edgefast_bluetooth.profile.bas" brief="edgefast_bluetooth profile bas" version="1.0.0" full_name="middleware.edgefast_bluetooth.profile.bas" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/services" type="src">
        <files mask="bas.c"/>
      </source>
      <source relative_path="include/bluetooth/services" type="c_include">
        <files mask="bas.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_profile_bas.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/services" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/services" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.profile.dis.MIMXRT1176" name="middleware.edgefast_bluetooth.profile.dis" brief="edgefast_bluetooth profile dis" version="1.0.0" full_name="middleware.edgefast_bluetooth.profile.dis" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/services" type="src">
        <files mask="dis.c"/>
      </source>
      <source relative_path="include/bluetooth/services" type="c_include">
        <files mask="dis.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_profile_dis.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/services" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/services" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.profile.hts.MIMXRT1176" name="middleware.edgefast_bluetooth.profile.hts" brief="edgefast_bluetooth profile hts" version="1.0.0" full_name="middleware.edgefast_bluetooth.profile.hts" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/services" type="src">
        <files mask="hts.c"/>
      </source>
      <source relative_path="include/bluetooth/services" type="c_include">
        <files mask="hts.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_profile_hts.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/services" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/services" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.profile.ias.MIMXRT1176" name="middleware.edgefast_bluetooth.profile.ias" brief="edgefast_bluetooth profile ias" version="1.0.0" full_name="middleware.edgefast_bluetooth.profile.ias" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/services/ias" type="src">
        <files mask="ias.c"/>
        <files mask="ias_client.c"/>
      </source>
      <source relative_path="include/bluetooth/services" type="c_include">
        <files mask="ias.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_profile_ias.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/services" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/services" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.profile.hps.MIMXRT1176" name="middleware.edgefast_bluetooth.profile.hps" brief="edgefast_bluetooth profile hps" version="1.0.0" full_name="middleware.edgefast_bluetooth.profile.hps" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/services" type="src">
        <files mask="hps.c"/>
      </source>
      <source relative_path="include/bluetooth/services" type="c_include">
        <files mask="hps.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_profile_hps.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/services" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/services" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.profile.pxr.MIMXRT1176" name="middleware.edgefast_bluetooth.profile.pxr" brief="edgefast_bluetooth profile pxr" version="1.0.0" full_name="middleware.edgefast_bluetooth.profile.pxr" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/services" type="src">
        <files mask="pxr.c"/>
      </source>
      <source relative_path="include/bluetooth/services" type="c_include">
        <files mask="pxr.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_profile_pxr.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/services" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/services" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.profile.ipsp.MIMXRT1176" name="middleware.edgefast_bluetooth.profile.ipsp" brief="edgefast_bluetooth profile ipsp" version="1.0.0" full_name="middleware.edgefast_bluetooth.profile.ipsp" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/services" type="src">
        <files mask="ipsp.c"/>
      </source>
      <source relative_path="include/bluetooth/services" type="c_include">
        <files mask="ipsp.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_profile_ipsp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/services" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/services" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.profile.ots.MIMXRT1176" name="middleware.edgefast_bluetooth.profile.ots" brief="edgefast_bluetooth profile ots" version="1.0.0" full_name="middleware.edgefast_bluetooth.profile.ots" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/services/ots" type="src">
        <files mask="ots.c"/>
        <files mask="ots_client.c"/>
        <files mask="ots_dir_list.c"/>
        <files mask="ots_l2cap.c"/>
        <files mask="ots_oacp.c"/>
        <files mask="ots_obj_manager.c"/>
        <files mask="ots_olcp.c"/>
      </source>
      <source relative_path="source/services/ots" type="c_include">
        <files mask="ots_client_internal.h"/>
        <files mask="ots_dir_list_internal.h"/>
        <files mask="ots_internal.h"/>
        <files mask="ots_l2cap_internal.h"/>
        <files mask="ots_oacp_internal.h"/>
        <files mask="ots_obj_manager_internal.h"/>
        <files mask="ots_olcp_internal.h"/>
      </source>
      <source relative_path="include/bluetooth/services" type="c_include">
        <files mask="ots.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_profile_ots.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/services" type="c_include"/>
        <include_path relative_path="source/services/ots" type="c_include"/>
        <include_path relative_path="include/bluetooth/services" type="c_include"/>
        <include_path relative_path="source/services" type="asm_include"/>
        <include_path relative_path="source/services/ots" type="asm_include"/>
        <include_path relative_path="include/bluetooth/services" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.profile.wu.MIMXRT1176" name="middleware.edgefast_bluetooth.profile.wu" brief="edgefast_bluetooth profile wu" version="1.0.0" full_name="middleware.edgefast_bluetooth.profile.wu" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/services" type="src">
        <files mask="wu.c"/>
      </source>
      <source relative_path="include/bluetooth/services" type="c_include">
        <files mask="wu.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_profile_wu.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/services" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/services" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.profile.fmp.MIMXRT1176" name="middleware.edgefast_bluetooth.profile.fmp" brief="edgefast_bluetooth profile fmp" version="1.0.0" full_name="middleware.edgefast_bluetooth.profile.fmp" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/services" type="src">
        <files mask="fmp.c"/>
      </source>
      <source relative_path="include/bluetooth/services" type="c_include">
        <files mask="fmp.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_profile_fmp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/services" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/services" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.profile.tip.MIMXRT1176" name="middleware.edgefast_bluetooth.profile.tip" brief="edgefast_bluetooth profile tip" version="1.0.0" full_name="middleware.edgefast_bluetooth.profile.tip" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/services" type="src">
        <files mask="tip.c"/>
      </source>
      <source relative_path="include/bluetooth/services" type="c_include">
        <files mask="tip.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_profile_tip.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/services" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/services" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.pal.crypto.ethermind.MIMXRT1176" name="middleware.edgefast_bluetooth.pal.crypto.ethermind" brief="edgefast_bluetooth PAL crypto support for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.pal.crypto.ethermind" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind/crypto" type="src">
        <files mask="bt_crypto.c"/>
      </source>
      <source relative_path="source/impl/ethermind/crypto" type="c_include">
        <files mask="bt_crypto.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_pal_crypto_ethermind.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/impl/ethermind/crypto" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/host" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/crypto" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/host" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.pal.platform.ethermind.MIMXRT1176" name="middleware.edgefast_bluetooth.pal.platform.ethermind" brief="edgefast_bluetooth PAL platform for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.pal.platform.ethermind" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind/platform" type="src">
        <files mask="bt_ble_platform.c"/>
        <files mask="bt_ble_settings.c"/>
      </source>
      <source relative_path="source/impl/ethermind/platform" type="c_include">
        <files mask="bt_ble_platform.h"/>
        <files mask="bt_ble_settings.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_pal_platform_ethermind.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/impl/ethermind/platform" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/platform" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.pal.host_msd_fatfs.ethermind.MIMXRT1176" name="middleware.edgefast_bluetooth.pal.host_msd_fatfs.ethermind" brief="edgefast_bluetooth host_msd_fatfs for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.pal.host_msd_fatfs.ethermind" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.host_msd_fatfs.ethermind.config.MIMXRT1176"/>
          <component_dependency value="middleware.fatfs.usb.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind/platform" type="src">
        <files mask="host_msd_fatfs.c"/>
      </source>
      <source relative_path="source/impl/ethermind/platform" type="c_include">
        <files mask="host_msd_fatfs.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_pal_host_msd_fatfs_ethermind.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/impl/ethermind/platform" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/platform" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.pal.db_gen.ethermind.MIMXRT1176" name="middleware.edgefast_bluetooth.pal.db_gen.ethermind" brief="edgefast_bluetooth db_gen for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.pal.db_gen.ethermind" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind" type="src">
        <files mask="bt_db_gen.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_pal_db_gen_ethermind.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/impl/ethermind" type="c_include"/>
        <include_path relative_path="source/impl/ethermind" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.porting.atomic.MIMXRT1176" name="middleware.edgefast_bluetooth.porting.atomic" brief="edgefast_bluetooth porting.atomic" version="1.0.0" full_name="middleware.edgefast_bluetooth.porting.atomic" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/porting" project_relative_path="porting" type="src">
        <files mask="atomic_c.c"/>
      </source>
      <source relative_path="include/sys" type="c_include">
        <files mask="atomic.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_porting_atomic.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/porting" project_relative_path="porting" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/porting" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.porting.list.MIMXRT1176" name="middleware.edgefast_bluetooth.porting.list" brief="edgefast_bluetooth porting.list" version="1.0.0" full_name="middleware.edgefast_bluetooth.porting.list" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="include/sys" type="c_include">
        <files mask="slist.h"/>
        <files mask="dlist.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_porting_list.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/porting" project_relative_path="porting" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/porting" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.porting.net.MIMXRT1176" name="middleware.edgefast_bluetooth.porting.net" brief="edgefast_bluetooth porting.netbuf" version="1.0.0" full_name="middleware.edgefast_bluetooth.porting.net" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/porting/net" type="src">
        <files mask="buf.c"/>
        <files mask="buf_simple.c"/>
      </source>
      <source relative_path="include/net" type="c_include">
        <files mask="buf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_porting_net.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/porting" project_relative_path="porting" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/porting" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.porting.toolchain.MIMXRT1176" name="middleware.edgefast_bluetooth.porting.toolchain" brief="edgefast_bluetooth porting.toolchain" version="1.0.0" full_name="middleware.edgefast_bluetooth.porting.toolchain" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <defines>
        <define name="CONFIG_ARM" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="include/toolchain" type="c_include">
        <files mask="common.h"/>
        <files mask="gcc.h"/>
        <files mask="iar.h"/>
        <files mask="armcc.h"/>
      </source>
      <source relative_path="include" type="c_include">
        <files mask="toolchain.h"/>
      </source>
      <source relative_path="boards/template" project_relative_path="./" type="doc">
        <files mask="dummy.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_porting_toolchain.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.porting.work_queue.MIMXRT1176" name="middleware.edgefast_bluetooth.porting.work_queue" brief="edgefast_bluetooth porting.work_queue" version="1.0.0" full_name="middleware.edgefast_bluetooth.porting.work_queue" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/porting/work" type="src">
        <files mask="work.c"/>
      </source>
      <source relative_path="source/porting/work" type="c_include">
        <files mask="work.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_porting_work_queue.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/porting" project_relative_path="porting" type="c_include"/>
        <include_path relative_path="source/porting" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.template.MIMXRT1176" name="EdgeFast Bluetooth configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="EdgeFast Bluetooth configuration template" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="project_template" package_base_path="middleware/edgefast_bluetooth" project_base_path="source">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind/controller/configs/mbedtls" config="true" type="c_include">
        <files mask="mbedtls_config_client.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/impl/ethermind/controller/configs/mbedtls" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/controller/configs/mbedtls" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.porting.MIMXRT1176" name="middleware.edgefast_bluetooth.porting" brief="edgefast_bluetooth porting" version="1.0.0" full_name="middleware.edgefast_bluetooth.porting" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <defines>
        <define name="LOG_ENABLE_ASYNC_MODE" value="1"/>
        <define name="LOG_MAX_ARGUMENT_COUNT" value="10"/>
        <define name="LOG_ENABLE_OVERWRITE" value="0"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.log.MIMXRT1176"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <component_dependency value="middleware.edgefast_bluetooth.porting.atomic.MIMXRT1176"/>
          <component_dependency value="middleware.edgefast_bluetooth.porting.list.MIMXRT1176"/>
          <component_dependency value="middleware.edgefast_bluetooth.porting.net.MIMXRT1176"/>
          <component_dependency value="middleware.edgefast_bluetooth.porting.toolchain.MIMXRT1176"/>
          <component_dependency value="middleware.edgefast_bluetooth.porting.work_queue.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="include/sys" type="c_include">
        <files mask="util.h"/>
        <files mask="util_internal.h"/>
        <files mask="util_loops.h"/>
        <files mask="util_macro.h"/>
        <files mask="printk.h"/>
        <files mask="check.h"/>
        <files mask="byteorder.h"/>
        <files mask="ring_buffer.h"/>
        <files mask="ffs.h"/>
      </source>
      <source relative_path="include/zephyr" type="c_include">
        <files mask="types.h"/>
      </source>
      <source relative_path="source/porting" type="src">
        <files mask="ring_buffer.c"/>
        <files mask="porting.c"/>
        <files mask="utf8.c"/>
      </source>
      <source relative_path="source/porting" type="c_include">
        <files mask="porting.h"/>
        <files mask="system_c.h"/>
      </source>
      <source relative_path="source/porting/errno" type="c_include">
        <files mask="errno.h"/>
      </source>
      <source relative_path="source/porting/fifo" type="src">
        <files mask="fifo.c"/>
      </source>
      <source relative_path="source/porting/fifo" type="c_include">
        <files mask="fifo.h"/>
      </source>
      <source relative_path="source/porting/lifo" type="src">
        <files mask="lifo.c"/>
      </source>
      <source relative_path="source/porting/lifo" type="c_include">
        <files mask="lifo.h"/>
      </source>
      <source relative_path="source/porting/poll" type="src">
        <files mask="poll.c"/>
      </source>
      <source relative_path="source/porting/poll" type="c_include">
        <files mask="poll.h"/>
      </source>
      <source relative_path="source/porting/queue" type="src">
        <files mask="queue.c"/>
      </source>
      <source relative_path="source/porting/queue" type="c_include">
        <files mask="queue.h"/>
      </source>
      <source relative_path="source/porting/sem" type="src">
        <files mask="sem.c"/>
      </source>
      <source relative_path="source/porting/sem" type="c_include">
        <files mask="sem.h"/>
      </source>
      <source relative_path="source/porting/slab" type="src">
        <files mask="slab.c"/>
      </source>
      <source relative_path="source/porting/slab" type="c_include">
        <files mask="slab.h"/>
      </source>
      <source relative_path="source/porting/slist" type="src">
        <files mask="slist.c"/>
      </source>
      <source relative_path="source/porting/spinlock" type="c_include">
        <files mask="spinlock.h"/>
      </source>
      <source relative_path="source/porting/thread" type="src">
        <files mask="thread.c"/>
      </source>
      <source relative_path="source/porting/thread" type="c_include">
        <files mask="thread.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_porting.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/porting" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
        <include_path relative_path="source/porting" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.shell.MIMXRT1176" name="middleware.edgefast_bluetooth.shell" brief="edgefast_bluetooth shell" version="1.0.0" full_name="middleware.edgefast_bluetooth.shell" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <defines>
        <define name="SHELL_ADVANCE" value="1"/>
        <define name="DEBUG_CONSOLE_RX_ENABLE" value="0"/>
        <define name="OSA_USED" value="1"/>
        <define name="SHELL_USE_COMMON_TASK" value="0"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.common_task.MIMXRT1176"/>
          <component_dependency value="middleware.edgefast_bluetooth.btble.ethermind.MIMXRT1176"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/shell" type="src">
        <files mask="shell_bt.c"/>
        <files mask="shell_bredr.c"/>
        <files mask="shell_gatt.c"/>
        <files mask="shell_hci.c"/>
        <files mask="shell_l2cap.c"/>
        <files mask="shell_rfcomm.c"/>
        <files mask="fsl_shell.c"/>
        <files mask="shell_a2dp.c"/>
        <files mask="shell_avrcp.c"/>
        <files mask="shell_test_mode.c"/>
        <files mask="shell_iso.c"/>
        <files mask="shell_map.c"/>
        <files mask="shell_pbap.c"/>
        <files mask="shell_hfp.c"/>
        <files mask="shell_ble_scan_filter.c"/>
      </source>
      <source relative_path="source/shell" type="c_include">
        <files mask="shell_bt.h"/>
        <files mask="shell_hci.h"/>
        <files mask="fsl_shell.h"/>
        <files mask="shell_test_mode.h"/>
        <files mask="shell_ble_scan_filter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_shell.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/shell" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
        <include_path relative_path="source/shell" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.controller_ind_reset.MIMXRT1176" name="middleware.edgefast_bluetooth.controller_ind_reset" brief="edgefast_bluetooth ind_reset" version="1.0.0" full_name="middleware.edgefast_bluetooth.controller_ind_reset" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind/controller/ind_reset" type="src">
        <files mask="controller_ind_reset.c"/>
      </source>
      <source relative_path="source/impl/ethermind/controller/ind_reset" type="c_include">
        <files mask="controller_ind_reset.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_controller_ind_reset.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/impl/ethermind/controller/ind_reset" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/controller/ind_reset" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.shell.le_audio.MIMXRT1176" name="middleware.edgefast_bluetooth.shell" brief="edgefast_bluetooth shell" version="1.0.0" full_name="middleware.edgefast_bluetooth.shell" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <defines>
        <define name="SHELL_ADVANCE" value="1"/>
        <define name="DEBUG_CONSOLE_RX_ENABLE" value="0"/>
        <define name="OSA_USED" value="1"/>
        <define name="SHELL_USE_COMMON_TASK" value="0"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.common_task.MIMXRT1176"/>
          <component_dependency value="middleware.edgefast_bluetooth.btble.ethermind.MIMXRT1176"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind/audio/shell" type="c_include">
        <files mask="audio.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio/shell" type="src">
        <files mask="bap_broadcast_assistant.c"/>
        <files mask="bap_scan_delegator.c"/>
        <files mask="bap.c"/>
        <files mask="cap_acceptor.c"/>
        <files mask="cap_commander.c"/>
        <files mask="cap_initiator.c"/>
        <files mask="csip_set_coordinator.c"/>
        <files mask="csip_set_member.c"/>
        <files mask="has_client.c"/>
        <files mask="has.c"/>
        <files mask="mcc.c"/>
        <files mask="media_controller.c"/>
        <files mask="micp_mic_ctlr.c"/>
        <files mask="micp_mic_dev.c"/>
        <files mask="mpl.c"/>
        <files mask="tbs_client.c"/>
        <files mask="tbs.c"/>
        <files mask="tmap.c"/>
        <files mask="gmap.c"/>
        <files mask="pbp.c"/>
        <files mask="vcp_vol_ctlr.c"/>
        <files mask="vcp_vol_rend.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_shell_le_audio.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/shell" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio/shell" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
        <include_path relative_path="source/shell" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio/shell" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.liblc3codec.MIMXRT1176" name="middleware.edgefast_bluetooth.liblc3codec" brief="edgefast_bluetooth liblc3codec" version="1.0.0" full_name="middleware.edgefast_bluetooth.liblc3codec" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth/lib" project_base_path="edgefast/lib">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="liblc3codec/include" type="c_include">
        <files mask="lc3.h"/>
        <files mask="lc3_private.h"/>
      </source>
      <source relative_path="liblc3codec/src" type="src">
        <files mask="attdet.c"/>
        <files mask="bits.c"/>
        <files mask="bwdet.c"/>
        <files mask="energy.c"/>
        <files mask="lc3.c"/>
        <files mask="ltpf.c"/>
        <files mask="mdct.c"/>
        <files mask="plc.c"/>
        <files mask="sns.c"/>
        <files mask="spec.c"/>
        <files mask="tns.c"/>
      </source>
      <source relative_path="liblc3codec/src" type="c_include">
        <files mask="attdet.h"/>
        <files mask="bits.h"/>
        <files mask="bwdet.h"/>
        <files mask="common.h"/>
        <files mask="energy.h"/>
        <files mask="ltpf.h"/>
        <files mask="mdct.h"/>
        <files mask="plc.h"/>
        <files mask="sns.h"/>
        <files mask="spec.h"/>
        <files mask="tables.h"/>
        <files mask="tns.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_liblc3codec.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="liblc3codec/include" type="c_include"/>
        <include_path relative_path="liblc3codec" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="liblc3codec/include" type="asm_include"/>
        <include_path relative_path="liblc3codec" type="asm_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.asrc_sw.MIMXRT1176" name="middleware.edgefast_bluetooth.asrc_sw" brief="edgefast_bluetooth asrc_sw" version="1.0.0" full_name="middleware.edgefast_bluetooth.asrc_sw" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth/lib" project_base_path="edgefast/lib">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="asrc_sw" type="c_include">
        <files mask="srCvtFrm.h"/>
      </source>
      <source relative_path="asrc_sw" type="src">
        <files mask="srCvtFrm.c"/>
      </source>
      <source relative_path="asrc_sw" type="other">
        <files mask="downSmplAllRates.dat"/>
        <files mask="upSmpl_32_32_rev.dat"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_asrc_sw.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="asrc_sw/include" type="c_include"/>
        <include_path relative_path="asrc_sw" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="asrc_sw/include" type="asm_include"/>
        <include_path relative_path="asrc_sw" type="asm_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.shell_ble.MIMXRT1176" name="middleware.edgefast_bluetooth.shell_ble" brief="edgefast_bluetooth shell_ble" version="1.0.0" full_name="middleware.edgefast_bluetooth.shell_ble" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <defines>
        <define name="SHELL_ADVANCE" value="1"/>
        <define name="DEBUG_CONSOLE_RX_ENABLE" value="0"/>
        <define name="OSA_USED" value="1"/>
        <define name="SHELL_USE_COMMON_TASK" value="0"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.common_task.MIMXRT1176"/>
          <component_dependency value="middleware.edgefast_bluetooth.ble.ethermind.MIMXRT1176"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/shell" type="src">
        <files mask="shell_bt.c"/>
        <files mask="shell_gatt.c"/>
        <files mask="shell_hci.c"/>
        <files mask="shell_l2cap.c"/>
        <files mask="fsl_shell.c"/>
        <files mask="shell_test_mode.c"/>
        <files mask="shell_ble_scan_filter.c"/>
      </source>
      <source relative_path="source/shell" type="c_include">
        <files mask="shell_bt.h"/>
        <files mask="shell_hci.h"/>
        <files mask="fsl_shell.h"/>
        <files mask="shell_test_mode.h"/>
        <files mask="shell_ble_scan_filter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_shell_ble.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/shell" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
        <include_path relative_path="source/shell" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.pal.host_msd_fatfs.ethermind.config.MIMXRT1176" name="middleware.edgefast_bluetooth.pal.host_msd_fatfs.ethermind.config" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.pal.host_msd_fatfs.ethermind.config" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind/platform/configs" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_pal_host_msd_fatfs_ethermind_config.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/impl/ethermind/platform/configs" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/platform/configs" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.porting_DEPEND_ANYOF_OPTION_1.MIMXRT1176" name="middleware.edgefast_bluetooth.porting_DEPEND_ANYOF_OPTION_1" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.porting_DEPEND_ANYOF_OPTION_1" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <component_dependency value="middleware.edgefast_bluetooth.porting.MIMXRT1176"/>
          <component_dependency value="platform.utilities.assert.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_porting_DEPEND_ANYOF_OPTION_1.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.porting_DEPEND_ANYOF_OPTION_2.MIMXRT1176" name="middleware.edgefast_bluetooth.porting_DEPEND_ANYOF_OPTION_2" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.porting_DEPEND_ANYOF_OPTION_2" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <component_dependency value="middleware.edgefast_bluetooth.porting.MIMXRT1176"/>
          <component_dependency value="platform.utilities.assert_lite.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_porting_DEPEND_ANYOF_OPTION_2.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.porting_DEPEND_ANYOF_OPTION_3.MIMXRT1176" name="middleware.edgefast_bluetooth.porting_DEPEND_ANYOF_OPTION_3" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.porting_DEPEND_ANYOF_OPTION_3" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <component_dependency value="middleware.edgefast_bluetooth.porting.MIMXRT1176"/>
          <component_dependency value="platform.utilities.assert.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_porting_DEPEND_ANYOF_OPTION_3.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.wifi_nxp.controller.lwip.config.MIMXRT1176" name="middleware.edgefast_bluetooth.wifi_nxp.controller.lwip.config" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.wifi_nxp.controller.lwip.config" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind/controller/configs/lwip" type="c_include">
        <files mask="lwipopts.h"/>
        <files mask="lwippools.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_wifi_nxp_controller_lwip_config.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/impl/ethermind/controller/configs/lwip" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/controller/configs/lwip" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.wifi_nxp.controller.wifi.config.MIMXRT1176" name="middleware.edgefast_bluetooth.wifi_nxp.controller.wifi.config" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.wifi_nxp.controller.wifi.config" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind/controller/configs/wifi" type="c_include">
        <files mask="wifi_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_wifi_nxp_controller_wifi_config.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/impl/ethermind/controller/configs/wifi" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/controller/configs/wifi" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.common.ethermind.lc3_nodsp.MIMXRT1176" name="middleware.edgefast_bluetooth.common.ethermind.lc3_nodsp" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.common.ethermind.lc3_nodsp" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <defines>
        <define name="LC3_DSP" value="0"/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="middleware.edgefast_bluetooth.ble.ethermind.MIMXRT1176"/>
              <component_dependency value="middleware.edgefast_bluetooth.ble.ethermind.lib.lc3_nodsp.MIMXRT1176"/>
            </all>
            <all>
              <component_dependency value="middleware.edgefast_bluetooth.btble.ethermind.MIMXRT1176"/>
              <component_dependency value="middleware.edgefast_bluetooth.btble.ethermind.lib.lc3_nodsp.MIMXRT1176"/>
            </all>
          </any_of>
          <component_dependency value="middleware.edgefast_bluetooth.le_audio.config.template.MIMXRT1176"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="../wireless/ethermind/port/pal/mcux/lc3_nodsp" type="c_include">
        <files mask="LC3_os.h"/>
      </source>
      <source relative_path="../wireless/ethermind/bluetooth/private/utils/lc3_nodsp/export/include" type="c_include">
        <files mask="LC3_ndsp_api.h"/>
      </source>
      <source relative_path="../wireless/ethermind/bluetooth/private/utils/lc3_nodsp/private/fixed/common" type="c_include">
        <files mask="lc3_ndsp_defines.h"/>
        <files mask="lc3_ndsp_internal.h"/>
      </source>
      <source relative_path="../wireless/ethermind/bluetooth/private/utils/lc3_nodsp/private/fixed/config" type="c_include">
        <files mask="LC3_ndsp_features.h"/>
        <files mask="LC3_ndsp_limits.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_common_ethermind_lc3_nodsp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="../wireless/ethermind/port/pal/mcux/lc3_nodsp" type="c_include"/>
        <include_path relative_path="../wireless/ethermind/bluetooth/private/utils/lc3_nodsp/export/include" type="c_include"/>
        <include_path relative_path="../wireless/ethermind/bluetooth/private/utils/lc3_nodsp/private/fixed/common" type="c_include"/>
        <include_path relative_path="../wireless/ethermind/bluetooth/private/utils/lc3_nodsp/private/fixed/config" type="c_include"/>
        <include_path relative_path="../wireless/ethermind/port/pal/mcux/lc3_nodsp" type="asm_include"/>
        <include_path relative_path="../wireless/ethermind/bluetooth/private/utils/lc3_nodsp/export/include" type="asm_include"/>
        <include_path relative_path="../wireless/ethermind/bluetooth/private/utils/lc3_nodsp/private/fixed/common" type="asm_include"/>
        <include_path relative_path="../wireless/ethermind/bluetooth/private/utils/lc3_nodsp/private/fixed/config" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.btble.ethermind.lib.MIMXRT1176" name="middleware.edgefast_bluetooth.btble.ethermind.lib.cm7f" brief="btble libraries for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.btble.ethermind.lib.cm7f" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/gcc" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_a2dp.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/gcc" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_avrcp.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/gcc" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_core.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/gcc" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_gatt.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/gcc" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_hfp.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/gcc" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_map.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/gcc" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_pbap.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/gcc" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_protocol.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/gcc" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_spp.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/gcc" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_util.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/gcc" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_sbc_common.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/gcc" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_sbc_decoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/gcc" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_sbc_encoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/iar" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_a2dp.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/iar" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_avrcp.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/iar" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_core.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/iar" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_gatt.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/iar" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_hfp.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/iar" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_map.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/iar" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_pbap.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/iar" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_protocol.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/iar" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_spp.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/iar" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_util.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/iar" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_sbc_common.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/iar" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_sbc_decoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/iar" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_sbc_encoder.a"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/mdk" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_a2dp.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/mdk" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_avrcp.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/mdk" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_core.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/mdk" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_gatt.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/mdk" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_hfp.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/mdk" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_map.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/mdk" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_pbap.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/mdk" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_protocol.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/mdk" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_spp.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/mdk" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_util.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/mdk" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_sbc_common.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/mdk" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_sbc_decoder.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/mdk" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_sbc_encoder.lib"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_a2dp.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_avrcp.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_core.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_gatt.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_hfp.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_map.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_pbap.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_protocol.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_spp.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_util.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_sbc_common.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_sbc_decoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_sbc_encoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/gcc" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_a2dp.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/gcc" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_avrcp.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/gcc" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_core.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/gcc" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_gatt.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/gcc" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_hfp.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/gcc" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_map.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/gcc" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_pbap.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/gcc" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_protocol.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/gcc" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_spp.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/gcc" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_util.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/gcc" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_sbc_common.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/gcc" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_sbc_decoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/gcc" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_sbc_encoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/iar" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_a2dp.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/iar" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_avrcp.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/iar" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_core.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/iar" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_gatt.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/iar" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_hfp.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/iar" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_map.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/iar" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_pbap.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/iar" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_protocol.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/iar" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_spp.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/iar" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_util.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/iar" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_sbc_common.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/iar" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_sbc_decoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/iar" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_sbc_encoder.a"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/mdk" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_a2dp.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/mdk" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_avrcp.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/mdk" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_core.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/mdk" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_gatt.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/mdk" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_hfp.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/mdk" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_map.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/mdk" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_pbap.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/mdk" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_protocol.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/mdk" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_spp.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/mdk" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_util.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/mdk" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_sbc_common.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/mdk" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_sbc_decoder.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/mdk" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_sbc_encoder.lib"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_a2dp.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_avrcp.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_core.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_gatt.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_hfp.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_map.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_pbap.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_protocol.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_spp.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_bt_util.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_sbc_common.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_sbc_decoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_sbc_encoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_btble_ethermind_lib.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.br.ethermind.lib.MIMXRT1176" name="middleware.edgefast_bluetooth.br.ethermind.lib.cm7f" brief="BR libraries for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.br.ethermind.lib.cm7f" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm4f/gcc" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_br_a2dp.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm4f/gcc" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_br_avrcp.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm4f/gcc" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_br_core.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm4f/gcc" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_br_ctn.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm4f/gcc" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_br_hfp.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm4f/gcc" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_br_map.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm4f/gcc" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_br_pbap.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm4f/gcc" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_br_protocol.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm4f/gcc" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_br_spp.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm4f/gcc" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_br_util.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm4f/gcc" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_br_sbc_common.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm4f/gcc" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_br_sbc_decoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm4f/gcc" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_br_sbc_encoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/br/cm4f/iar" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_br_a2dp.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/br/cm4f/iar" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_br_avrcp.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/br/cm4f/iar" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_br_core.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/br/cm4f/iar" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_br_hfp.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/br/cm4f/iar" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_br_map.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/br/cm4f/iar" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_br_pbap.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/br/cm4f/iar" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_br_protocol.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/br/cm4f/iar" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_br_spp.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/br/cm4f/iar" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_br_util.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/br/cm4f/iar" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_br_sbc_common.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/br/cm4f/iar" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_br_sbc_decoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/br/cm4f/iar" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_br_sbc_encoder.a"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/br/cm4f/mdk" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_br_a2dp.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/br/cm4f/mdk" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_br_avrcp.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/br/cm4f/mdk" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_br_core.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/br/cm4f/mdk" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_br_hfp.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/br/cm4f/mdk" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_br_map.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/br/cm4f/mdk" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_br_pbap.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/br/cm4f/mdk" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_br_protocol.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/br/cm4f/mdk" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_br_spp.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/br/cm4f/mdk" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_br_util.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/br/cm4f/mdk" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_br_sbc_common.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/br/cm4f/mdk" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_br_sbc_decoder.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/br/cm4f/mdk" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_br_sbc_encoder.lib"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/br/cm4f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_br_a2dp.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/br/cm4f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_br_avrcp.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/br/cm4f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_br_core.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/br/cm4f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_br_hfp.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/br/cm4f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_br_map.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/br/cm4f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_br_pbap.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/br/cm4f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_br_protocol.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/br/cm4f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_br_spp.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/br/cm4f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_br_util.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/br/cm4f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_br_sbc_common.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/br/cm4f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_br_sbc_decoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/br/cm4f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_br_sbc_encoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm7f/gcc" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_br_a2dp.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm7f/gcc" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_br_avrcp.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm7f/gcc" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_br_core.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm7f/gcc" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_br_ctn.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm7f/gcc" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_br_hfp.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm7f/gcc" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_br_map.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm7f/gcc" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_br_pbap.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm7f/gcc" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_br_protocol.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm7f/gcc" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_br_spp.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm7f/gcc" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_br_util.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm7f/gcc" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_br_sbc_common.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm7f/gcc" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_br_sbc_decoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm7f/gcc" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_br_sbc_encoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/br/cm7f/iar" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_br_a2dp.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/br/cm7f/iar" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_br_avrcp.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/br/cm7f/iar" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_br_core.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/br/cm7f/iar" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_br_hfp.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/br/cm7f/iar" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_br_map.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/br/cm7f/iar" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_br_pbap.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/br/cm7f/iar" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_br_protocol.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/br/cm7f/iar" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_br_spp.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/br/cm7f/iar" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_br_util.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/br/cm7f/iar" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_br_sbc_common.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/br/cm7f/iar" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_br_sbc_decoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/br/cm7f/iar" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_br_sbc_encoder.a"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/br/cm7f/mdk" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_br_a2dp.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/br/cm7f/mdk" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_br_avrcp.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/br/cm7f/mdk" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_br_core.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/br/cm7f/mdk" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_br_hfp.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/br/cm7f/mdk" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_br_map.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/br/cm7f/mdk" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_br_pbap.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/br/cm7f/mdk" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_br_protocol.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/br/cm7f/mdk" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_br_spp.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/br/cm7f/mdk" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_br_util.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/br/cm7f/mdk" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_br_sbc_common.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/br/cm7f/mdk" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_br_sbc_decoder.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/br/cm7f/mdk" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_br_sbc_encoder.lib"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/br/cm7f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_br_a2dp.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/br/cm7f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_br_avrcp.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/br/cm7f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_br_core.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/br/cm7f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_br_hfp.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/br/cm7f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_br_map.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/br/cm7f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_br_pbap.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/br/cm7f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_br_protocol.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/br/cm7f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_br_spp.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/br/cm7f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_br_util.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/br/cm7f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_br_sbc_common.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/br/cm7f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_br_sbc_decoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/br/cm7f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_br_sbc_encoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_br_ethermind_lib.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.ble.ethermind.lib.MIMXRT1176" name="middleware.edgefast_bluetooth.ble.ethermind.lib.cm7f" brief="BLE libraries for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.ble.ethermind.lib.cm7f" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/ble/cm4f/gcc" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_ble_core.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/ble/cm4f/gcc" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_ble_gatt.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/ble/cm4f/gcc" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_ble_protocol.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/ble/cm4f/gcc" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_ble_util.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/ble/cm4f/iar" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_ble_core.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/ble/cm4f/iar" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_ble_gatt.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/ble/cm4f/iar" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_ble_protocol.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/ble/cm4f/iar" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_ble_util.a"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/ble/cm4f/mdk" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_ble_core.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/ble/cm4f/mdk" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_ble_gatt.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/ble/cm4f/mdk" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_ble_protocol.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/ble/cm4f/mdk" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_ble_util.lib"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/ble/cm4f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_ble_core.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/ble/cm4f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_ble_gatt.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/ble/cm4f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_ble_protocol.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/ble/cm4f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_ble_util.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/ble/cm7f/gcc" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_ble_core.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/ble/cm7f/gcc" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_ble_gatt.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/ble/cm7f/gcc" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_ble_protocol.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/ble/cm7f/gcc" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_ble_util.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/ble/cm7f/iar" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_ble_core.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/ble/cm7f/iar" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_ble_gatt.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/ble/cm7f/iar" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_ble_protocol.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/ble/cm7f/iar" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_ble_util.a"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/ble/cm7f/mdk" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_ble_core.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/ble/cm7f/mdk" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_ble_gatt.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/ble/cm7f/mdk" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_ble_protocol.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/ble/cm7f/mdk" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_ble_util.lib"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/ble/cm7f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_ble_core.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/ble/cm7f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_ble_gatt.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/ble/cm7f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_ble_protocol.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/ble/cm7f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_ble_util.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_ble_ethermind_lib.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.btble.ethermind.lib.lc3.MIMXRT1176" name="middleware.edgefast_bluetooth.btble.ethermind.lib.lc3.cm7f" brief="btble libraries for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.btble.ethermind.lib.lc3.cm7f" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/gcc" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_common.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/gcc" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_decoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/gcc" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_encoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/iar" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_common.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/iar" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_decoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/iar" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_encoder.a"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/mdk" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_common.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/mdk" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_decoder.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/mdk" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_encoder.lib"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_common.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_decoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_encoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/gcc" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_common.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/gcc" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_decoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/gcc" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_encoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/iar" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_common.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/iar" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_decoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/iar" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_encoder.a"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/mdk" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_common.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/mdk" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_decoder.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/mdk" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_encoder.lib"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_common.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_decoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_encoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_btble_ethermind_lib_lc3.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.br.ethermind.lib.lc3.MIMXRT1176" name="middleware.edgefast_bluetooth.br.ethermind.lib.lc3.cm7f" brief="BR libraries for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.br.ethermind.lib.lc3.cm7f" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/gcc" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_common.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/gcc" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_decoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/gcc" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_encoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/iar" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_common.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/iar" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_decoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/iar" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_encoder.a"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/mdk" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_common.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/mdk" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_decoder.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/mdk" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_encoder.lib"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_common.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_decoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm4f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_encoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/gcc" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_common.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/gcc" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_decoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/gcc" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_encoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/iar" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_common.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/iar" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_decoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/iar" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_encoder.a"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/mdk" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_common.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/mdk" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_decoder.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/mdk" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_encoder.lib"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_common.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_decoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm7f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_encoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_br_ethermind_lib_lc3.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.ble.ethermind.lib.lc3.MIMXRT1176" name="middleware.edgefast_bluetooth.ble.ethermind.lib.lc3.cm7f" brief="BLE libraries for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.ble.ethermind.lib.lc3.cm7f" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/ble/cm4f/gcc" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_common.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/ble/cm4f/gcc" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_decoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/ble/cm4f/gcc" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_encoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/ble/cm4f/iar" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_common.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/ble/cm4f/iar" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_decoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/ble/cm4f/iar" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_encoder.a"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/ble/cm4f/mdk" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_common.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/ble/cm4f/mdk" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_decoder.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/ble/cm4f/mdk" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_encoder.lib"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/ble/cm4f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_decoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/ble/cm4f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_encoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/ble/cm4f/mcuxpresso" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_common.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/ble/cm7f/gcc" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_common.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/ble/cm7f/gcc" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_decoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/ble/cm7f/gcc" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_encoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/ble/cm7f/iar" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_common.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/ble/cm7f/iar" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_decoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/ble/cm7f/iar" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_encoder.a"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/ble/cm7f/mdk" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_common.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/ble/cm7f/mdk" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_decoder.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/ble/cm7f/mdk" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_encoder.lib"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/ble/cm7f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_decoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/ble/cm7f/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_encoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/ble/cm7f/mcuxpresso" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_common.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_ble_ethermind_lib_lc3.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.btble.ethermind.lib.lc3_nodsp.MIMXRT1176" name="middleware.edgefast_bluetooth.btble.ethermind.lib.lc3_nodsp.cm7f" brief="BLE libraries for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.btble.ethermind.lib.lc3_nodsp.cm7f" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33nodsp/gcc" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_ndsp_common.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33nodsp/gcc" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_ndsp_decoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33nodsp/gcc" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_ndsp_encoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33nodsp/iar" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_ndsp_common.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33nodsp/iar" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_ndsp_decoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33nodsp/iar" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_ndsp_encoder.a"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33nodsp/mdk" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_ndsp_common.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33nodsp/mdk" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_ndsp_decoder.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33nodsp/mdk" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_ndsp_encoder.lib"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33nodsp/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_ndsp_decoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33nodsp/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_ndsp_encoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33nodsp/mcuxpresso" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_ndsp_common.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33nodsp/gcc" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_ndsp_common.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33nodsp/gcc" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_ndsp_decoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33nodsp/gcc" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_ndsp_encoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33nodsp/iar" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_ndsp_common.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33nodsp/iar" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_ndsp_decoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33nodsp/iar" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_ndsp_encoder.a"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33nodsp/mdk" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_ndsp_common.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33nodsp/mdk" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_ndsp_decoder.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33nodsp/mdk" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_ndsp_encoder.lib"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33nodsp/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_ndsp_decoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33nodsp/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_ndsp_encoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33nodsp/mcuxpresso" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_ndsp_common.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_btble_ethermind_lib_lc3_nodsp.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.ble.ethermind.lib.lc3_nodsp.MIMXRT1176" name="middleware.edgefast_bluetooth.ble.ethermind.lib.lc3_nodsp.cm7f" brief="BLE libraries for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.ble.ethermind.lib.lc3_nodsp.cm7f" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/ble/cm33nodsp/gcc" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_ndsp_common.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/ble/cm33nodsp/gcc" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_ndsp_decoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/ble/cm33nodsp/gcc" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_ndsp_encoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/ble/cm33nodsp/iar" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_ndsp_common.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/ble/cm33nodsp/iar" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_ndsp_decoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/ble/cm33nodsp/iar" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_ndsp_encoder.a"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/ble/cm33nodsp/mdk" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_ndsp_common.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/ble/cm33nodsp/mdk" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_ndsp_decoder.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/ble/cm33nodsp/mdk" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_ndsp_encoder.lib"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/ble/cm33nodsp/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_ndsp_decoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/ble/cm33nodsp/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_ndsp_encoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/ble/cm33nodsp/mcuxpresso" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_ndsp_common.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/ble/cm33nodsp/gcc" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_ndsp_common.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/ble/cm33nodsp/gcc" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_ndsp_decoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/ble/cm33nodsp/gcc" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_ndsp_encoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/ble/cm33nodsp/iar" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_ndsp_common.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/ble/cm33nodsp/iar" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_ndsp_decoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/ble/cm33nodsp/iar" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_ndsp_encoder.a"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/ble/cm33nodsp/mdk" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_ndsp_common.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/ble/cm33nodsp/mdk" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_ndsp_decoder.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/ble/cm33nodsp/mdk" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_ndsp_encoder.lib"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/ble/cm33nodsp/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_ndsp_decoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/ble/cm33nodsp/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_ndsp_encoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/ble/cm33nodsp/mcuxpresso" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libethermind_lc3_ndsp_common.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_ble_ethermind_lib_lc3_nodsp.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.MIMXRT1176" name="FreeRTOS kernel" brief="FreeRTOS kernel" version="11.0.1" full_name="FreeRTOS kernel" category="RTOS/Core" user_visible="true" type="OS" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <defines>
        <define name="SDK_OS_FREE_RTOS" value=""/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.freertos-kernel.heap_1.MIMXRT1176"/>
            <component_dependency value="middleware.freertos-kernel.heap_2.MIMXRT1176"/>
            <component_dependency value="middleware.freertos-kernel.heap_3.MIMXRT1176"/>
            <component_dependency value="middleware.freertos-kernel.heap_4.MIMXRT1176"/>
            <component_dependency value="middleware.freertos-kernel.heap_5.MIMXRT1176"/>
          </any_of>
          <component_dependency value="middleware.freertos-kernel.config.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="croutine.c"/>
        <files mask="event_groups.c"/>
        <files mask="list.c"/>
        <files mask="queue.c"/>
        <files mask="stream_buffer.c"/>
        <files mask="tasks.c"/>
        <files mask="timers.c"/>
      </source>
      <source relative_path="include" type="c_include">
        <files mask="atomic.h"/>
        <files mask="croutine.h"/>
        <files mask="deprecated_definitions.h"/>
        <files mask="event_groups.h"/>
        <files mask="FreeRTOS.h"/>
        <files mask="list.h"/>
        <files mask="message_buffer.h"/>
        <files mask="mpu_prototypes.h"/>
        <files mask="mpu_syscall_numbers.h"/>
        <files mask="mpu_wrappers.h"/>
        <files mask="portable.h"/>
        <files mask="projdefs.h"/>
        <files mask="queue.h"/>
        <files mask="semphr.h"/>
        <files mask="stack_macros.h"/>
        <files mask="StackMacros.h"/>
        <files mask="stream_buffer.h"/>
        <files mask="task.h"/>
        <files mask="timers.h"/>
      </source>
      <source relative_path="include" type="doc">
        <files mask="stdint.readme"/>
      </source>
      <source relative_path="portable/MemMang" type="other">
        <files mask="ReadMe.url"/>
      </source>
      <source relative_path="portable" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source toolchain="armgcc mcuxpresso mdk" compiler="compiler_armclang compiler_gcc" relative_path="portable/GCC/ARM_CM4F" type="src" device_cores="cm4_MIMXRT1176xxxxx cm7_MIMXRT1176xxxxx">
        <files mask="port.c"/>
      </source>
      <source toolchain="armgcc mcuxpresso mdk" compiler="compiler_armclang compiler_gcc" relative_path="portable/GCC/ARM_CM4F" type="c_include" device_cores="cm4_MIMXRT1176xxxxx cm7_MIMXRT1176xxxxx">
        <files mask="portmacro.h"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM4F" type="src" device_cores="cm4_MIMXRT1176xxxxx cm7_MIMXRT1176xxxxx">
        <files mask="port.c"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM4F" type="asm_include" device_cores="cm4_MIMXRT1176xxxxx cm7_MIMXRT1176xxxxx">
        <files mask="portasm.s"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM4F" type="c_include" device_cores="cm4_MIMXRT1176xxxxx cm7_MIMXRT1176xxxxx">
        <files mask="portmacro.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="portable/GCC/ARM_CM4F" toolchain="armgcc mcuxpresso mdk" type="c_include" device_cores="cm4_MIMXRT1176xxxxx cm7_MIMXRT1176xxxxx"/>
        <include_path relative_path="portable/IAR/ARM_CM4F" toolchain="iar" type="c_include" device_cores="cm4_MIMXRT1176xxxxx cm7_MIMXRT1176xxxxx"/>
        <include_path relative_path="include" type="asm_include"/>
        <include_path relative_path="portable/GCC/ARM_CM4F" toolchain="armgcc mcuxpresso mdk" type="asm_include" device_cores="cm4_MIMXRT1176xxxxx cm7_MIMXRT1176xxxxx"/>
        <include_path relative_path="portable/IAR/ARM_CM4F" toolchain="iar" type="asm_include" device_cores="cm4_MIMXRT1176xxxxx cm7_MIMXRT1176xxxxx"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.extension.MIMXRT1176" name="FreeRTOS NXP extension" brief="FreeRTOS NXP extension" version="11.0.1" full_name="FreeRTOS NXP extension" category="RTOS/TAD extension" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="include" type="c_include">
        <files mask="freertos_tasks_c_additions.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_extension.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.heap_1.MIMXRT1176" name="FreeRTOS heap 1" brief="FreeRTOS heap 1" version="11.0.1" full_name="FreeRTOS heap 1" category="RTOS/Heap" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_1.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_heap_1.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_2.MIMXRT1176" name="FreeRTOS heap 2" brief="FreeRTOS heap 2" version="11.0.1" full_name="FreeRTOS heap 2" category="RTOS/Heap" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_2.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_heap_2.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_3.MIMXRT1176" name="FreeRTOS heap 3" brief="FreeRTOS heap 3" version="11.0.1" full_name="FreeRTOS heap_3" category="RTOS/Heap" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_3.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_heap_3.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_4.MIMXRT1176" name="FreeRTOS heap 4" brief="FreeRTOS heap 4" version="11.0.1" full_name="FreeRTOS heap 4" category="RTOS/Heap" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_4.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_heap_4.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_5.MIMXRT1176" name="FreeRTOS heap 5" brief="FreeRTOS heap 5" version="11.0.1" full_name="FreeRTOS heap 5" category="RTOS/Heap" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_5.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_heap_5.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.mpu_wrappers.MIMXRT1176" name="old FreeRTOS MPU wrappers used before V10.6.0" brief="old FreeRTOS MPU wrappers used before V10.6.0" version="11.0.1" full_name="old FreeRTOS MPU wrappers used before V10.6.0" category="RTOS/MPU wrappers" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="portable/Common" type="src">
        <files mask="mpu_wrappers.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_mpu_wrappers.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.mpu_wrappers_v2.MIMXRT1176" name="new V2 FreeRTOS MPU wrappers introduced in V10.6.0" brief="new V2 FreeRTOS MPU wrappers introduced in V10.6.0" version="11.0.1" full_name="new V2 FreeRTOS MPU wrappers introduced in V10.6.0" category="RTOS/MPU wrappers V2" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="portable/Common" type="src">
        <files mask="mpu_wrappers_v2.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_mpu_wrappers_v2.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.config.MIMXRT1176" name="FreeRTOS configuration template" brief="Template configuration file to be edited by user. Provides also memory allocator (heap_x), change variant if needed." version="11.0.1" full_name="FreeRTOS configuration template" category="RTOS/freertos template" user_visible="true" type="project_template" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="template" config="true" type="c_include">
        <files mask="FreeRTOSConfig.h"/>
      </source>
      <source relative_path="template/ARM_CM4F_4_priority_bits" config="true" type="c_include" device_cores="cm4_MIMXRT1176xxxxx cm7_MIMXRT1176xxxxx">
        <files mask="FreeRTOSConfig_Gen.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_config.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/ARM_CM4F_4_priority_bits" type="c_include" device_cores="cm4_MIMXRT1176xxxxx cm7_MIMXRT1176xxxxx"/>
        <include_path relative_path="template" type="asm_include"/>
        <include_path relative_path="template/ARM_CM4F_4_priority_bits" type="asm_include" device_cores="cm4_MIMXRT1176xxxxx cm7_MIMXRT1176xxxxx"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpuart_freertos.MIMXRT1176" name="lpuart_freertos" brief="LPUART Freertos Driver" version="2.5.0" full_name="LPUART Freertos Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpuart.MIMXRT1176"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpuart_freertos.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpspi_freertos.MIMXRT1176" name="lpspi_freertos" brief="LPSPI FreeRTOS Driver" version="2.3.1" full_name="LPSPI FreeRTOS Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpspi.MIMXRT1176"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpspi_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpspi_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpspi_freertos.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpi2c_freertos.MIMXRT1176" name="i2c_freertos" brief="LPI2C FreeRTOS Driver" version="2.3.2" full_name="LPI2C FreeRTOS Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1176"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpi2c_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpi2c_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpi2c_freertos.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos.corepkcs11.template.MIMXRT1176" name="corepkcs11 configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="corePKCS11 configuration template" category="FreeRTOS/corePKCS11" user_visible="false" type="project_template" package_base_path="rtos/freertos/corepkcs11" project_base_path="freertos/corepkcs11">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1176"/>
          <component_dependency value="middleware.freertos.corepkcs11.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="template" config="true" type="c_include">
        <files mask="core_pkcs11_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos_corepkcs11_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos.corepkcs11.MIMXRT1176" name="corepkcs11" brief="Software implementation of the PKCS #11 standard." version="3.5.0" full_name="corePKCS11" category="FreeRTOS/corePKCS11" user_visible="true" type="middleware" package_base_path="rtos/freertos/corepkcs11" project_base_path="freertos/corepkcs11">
      <dependencies>
        <all>
          <component_dependency value="middleware.pkcs11.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="core_pkcs11.c"/>
        <files mask="core_pki_utils.c"/>
      </source>
      <source relative_path="source/include" type="c_include">
        <files mask="core_pkcs11.h"/>
        <files mask="core_pkcs11_config_defaults.h"/>
        <files mask="core_pkcs11_pal.h"/>
        <files mask="core_pki_utils.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos_corepkcs11.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/include" type="c_include"/>
        <include_path relative_path="source/include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos.corepkcs11.mbedtls.MIMXRT1176" name="corepkcs11 mbedtls" brief="PKCS #11, mbedtls port." version="3.5.0" full_name="corePKCS11 mbedtls" category="FreeRTOS/corePKCS11" user_visible="true" type="middleware" package_base_path="rtos/freertos/corepkcs11" project_base_path="freertos/corepkcs11">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos.corepkcs11.MIMXRT1176"/>
          <component_dependency value="middleware.pkcs11.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/portable/mbedtls" type="src">
        <files mask="core_pkcs11_mbedtls.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos_corepkcs11_mbedtls.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos.corepkcs11.mbedtls_utils.MIMXRT1176" name="corepkcs11 mbedtls_utils" brief="PKCS #11, mbedtls_utils" version="3.5.0" full_name="corePKCS11 mbedtls_utils" category="FreeRTOS/corePKCS11" user_visible="true" type="middleware" package_base_path="rtos/freertos/corepkcs11" project_base_path="freertos/corepkcs11">
      <defines>
        <define name="MBEDTLS_THREADING_ALT" value=""/>
        <define name="MBEDTLS_THREADING_C" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos.corepkcs11.MIMXRT1176"/>
          <component_dependency value="middleware.pkcs11.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/dependency/3rdparty/mbedtls_utils" type="src">
        <files mask="mbedtls_utils.c"/>
      </source>
      <source relative_path="source/dependency/3rdparty/mbedtls_utils" type="c_include">
        <files mask="mbedtls_utils.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos_corepkcs11_mbedtls_utils.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/dependency/3rdparty/mbedtls_utils" type="c_include"/>
        <include_path relative_path="source/dependency/3rdparty/mbedtls_utils" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos.coremqtt-agent.MIMXRT1176" name="coremqtt-agent" brief="Agent for thread-safe use of coreMQTT." version="1.2.0" full_name="coreMQTT-Agent" category="FreeRTOS/coreMQTT Agent" user_visible="true" type="middleware" package_base_path="rtos/freertos/coremqtt-agent" project_base_path="freertos/coremqtt-agent">
      <defines>
        <define name="MQTT_AGENT_DO_NOT_USE_CUSTOM_CONFIG" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos.coremqtt.MIMXRT1176"/>
          <component_dependency value="middleware.iot_reference.logging.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/include" type="c_include">
        <files mask="core_mqtt_agent.h"/>
        <files mask="core_mqtt_agent_command_functions.h"/>
        <files mask="core_mqtt_agent_config_defaults.h"/>
        <files mask="core_mqtt_agent_default_logging.h"/>
        <files mask="core_mqtt_agent_message_interface.h"/>
      </source>
      <source relative_path="source" type="src">
        <files mask="core_mqtt_agent_command_functions.c"/>
        <files mask="core_mqtt_agent.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos_coremqtt-agent.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/include" type="c_include"/>
        <include_path relative_path="source/include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos.coremqtt.template.MIMXRT1176" name="coremqtt configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="coreMQTT configuration template" category="FreeRTOS/coreMQTT" user_visible="false" type="project_template" package_base_path="rtos/freertos/coremqtt" project_base_path="freertos/coremqtt">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos.coremqtt.MIMXRT1176"/>
          <component_dependency value="middleware.iot_reference.logging.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="template" type="c_include">
        <files mask="core_mqtt_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos_coremqtt_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos.corehttp.MIMXRT1176" name="corehttp" brief="Client implementation of the HTTP/1.1 specification for embedded devices." version="3.0.0" full_name="coreHTTP" category="FreeRTOS/coreHTTP" user_visible="false" type="middleware" package_base_path="rtos/freertos/corehttp" project_base_path="freertos/corehttp">
      <dependencies>
        <all>
          <component_dependency value="middleware.llhttp.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="core_http_client.c"/>
      </source>
      <source relative_path="source/include" type="c_include">
        <files mask="core_http_client.h"/>
        <files mask="core_http_client_private.h"/>
        <files mask="core_http_config_defaults.h"/>
      </source>
      <source relative_path="source/interface" type="c_include">
        <files mask="transport_interface.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos_corehttp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/include" type="c_include"/>
        <include_path relative_path="source/interface" type="c_include"/>
        <include_path relative_path="source/include" type="asm_include"/>
        <include_path relative_path="source/interface" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.xrdc2.MIMXRT1176" name="xrdc2" brief="XRDC2 Driver" version="2.0.3" full_name="XRDC2 Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_xrdc2.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_xrdc2.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_xrdc2.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.xecc.MIMXRT1176" name="xecc" brief="XECC Driver" version="2.0.0" full_name="XECC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_xecc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_xecc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_xecc.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.xbarb.MIMXRT1176" name="xbarb" brief="XBARB Driver" version="2.0.2" full_name="XBARB Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_xbarb.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_xbarb.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_xbarb.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.xbara.MIMXRT1176" name="xbara" brief="XBARA Driver" version="2.0.6" full_name="XBARA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_xbara.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_xbara.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_xbara.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.wdog01.MIMXRT1176" name="wdog" brief="wdog01 Driver" version="2.2.0" full_name="wdog01 Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wdog.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wdog.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_wdog01.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.usdhc.MIMXRT1176" name="sdhc" brief="USDHC Driver" version="2.8.4" full_name="USDHC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_usdhc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_usdhc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_usdhc.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.tempsensor.MIMXRT1176" name="tempsensor" brief="TEMPSENSOR Driver" version="2.1.2" full_name="TEMPSENSOR Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_tempsensor.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_tempsensor.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_tempsensor.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.ssarc.MIMXRT1176" name="ssarc" brief="SSARC Driver" version="2.1.0" full_name="SSARC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ssarc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ssarc.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_ssarc.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.spdif.MIMXRT1176" name="spdif" brief="SPDIF Driver" version="2.0.7" full_name="SPDIF Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_spdif.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_spdif.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_spdif.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.spdif_edma.MIMXRT1176" name="spdif_edma" brief="SPDIF EDMA Driver" version="2.0.8" full_name="SPDIF EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.spdif.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_spdif_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_spdif_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_spdif_edma.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.snvs_lp.MIMXRT1176" name="snvs_lp" brief="SNVS LP Driver" version="2.4.6" full_name="SNVS LP Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_snvs_lp.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_snvs_lp.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_snvs_lp.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.snvs_hp.MIMXRT1176" name="snvs_hp" brief="SNVS HP Driver" version="2.3.2" full_name="SNVS HP Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_snvs_hp.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_snvs_hp.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_snvs_hp.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.smartcard_emvsim.MIMXRT1176" name="smartcard_emvsim" brief="SMARTCARD EMVSIM Driver" version="2.3.0" full_name="SMARTCARD EMVSIM Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_smartcard.h"/>
        <files mask="fsl_smartcard_emvsim.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_smartcard_emvsim.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_smartcard_emvsim.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.smartcard_phy_emvsim.MIMXRT1176" name="smartcard_phy_emvsim" brief="SMARTCARD PHY EMVSIM, use only one SMARTCARD PHY in the project" version="2.3.0" full_name="SMARTCARD PHY EMVSIM" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <defines>
        <define name="USING_PHY_EMVSIM" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <component_dependency value="platform.drivers.smartcard_emvsim.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_smartcard_phy.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_smartcard_phy_emvsim.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_smartcard_phy_emvsim.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.smartcard_uart.MIMXRT1176" name="smartcard_uart" brief="SMARTCARD UART Driver" version="2.3.0" full_name="SMARTCARD UART Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_smartcard.h"/>
        <files mask="fsl_smartcard_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_smartcard_uart.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_smartcard_uart.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.semc.MIMXRT1176" name="semc" brief="SEMC Driver" version="2.7.0" full_name="SEMC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_semc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_semc.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_semc.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sema4.MIMXRT1176" name="sema4" brief="SEMA4 Driver" version="2.0.3" full_name="SEMA4 Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sema4.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sema4.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_sema4.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sai.MIMXRT1176" name="sai" brief="SAI Driver" version="2.4.4" full_name="SAI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sai.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sai.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_sai.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sai_edma.MIMXRT1176" name="sai_edma" brief="SAI EDMA Driver" version="2.7.1" full_name="SAI EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma.MIMXRT1176"/>
          <component_dependency value="platform.drivers.sai.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sai_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sai_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_sai_edma.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.rtwdog.MIMXRT1176" name="rtwdog" brief="RTWDOG Driver" version="2.1.2" full_name="RTWDOG Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rtwdog.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rtwdog.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_rtwdog.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.rdc_sema42.MIMXRT1176" name="rdc_sema42" brief="RDC SEMA42 Driver" version="2.0.4" full_name="RDC SEMA42 Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rdc_sema42.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rdc_sema42.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_rdc_sema42.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.rdc.MIMXRT1176" name="rdc" brief="RDC Driver" version="2.2.0" full_name="RDC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rdc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rdc.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_rdc.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.qtmr.MIMXRT1176" name="qtmr" brief="QTMR Driver" version="2.2.2" full_name="QTMR Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_qtmr.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_qtmr.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_qtmr_1.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pxp.MIMXRT1176" name="pxp" brief="PXP Driver" version="2.6.1" full_name="PXP Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pxp.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pxp.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_pxp.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pwm.MIMXRT1176" name="pwm" brief="PWM Driver" version="2.8.4" full_name="PWM Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pwm.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pwm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_pwm.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.puf.MIMXRT1176" name="PUF" brief="PUF Driver" version="2.1.6" full_name="PUF Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_puf.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_puf.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_puf.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pit.MIMXRT1176" name="pit" brief="PIT Driver" version="2.0.5" full_name="PIT Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pit.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pit.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_pit.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pdm.MIMXRT1176" name="pdm" brief="PDM Driver" version="2.9.1" full_name="PDM Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pdm.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pdm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_pdm.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pdm_edma.MIMXRT1176" name="pdm_edma" brief="PDM EDMA Driver" version="2.6.3" full_name="PDM EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma.MIMXRT1176"/>
          <component_dependency value="platform.drivers.pdm.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pdm_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pdm_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_pdm_edma.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.ocotp.MIMXRT1176" name="ocotp" brief="OCOTP Driver" version="2.1.4" full_name="OCOTP Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ocotp.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ocotp.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_ocotp.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.mu.MIMXRT1176" name="mu" brief="MU Driver" version="2.2.0" full_name="MU Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mu.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mu.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_mu.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.mipi_dsi_split.MIMXRT1176" name="mipi_dsi" brief="MIPI DSI Driver" version="2.2.5" full_name="MIPI DSI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <component_dependency value="platform.drivers.soc_mipi_csi2rx.MIMXRT1176"/>
          <component_dependency value="platform.drivers.soc_mipi_dsi.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_mipi_dsi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mipi_dsi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_mipi_dsi_split.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.mipi_csi2rx.MIMXRT1176" name="mipi_csi2rx" brief="MIPI CSI2RX Driver" version="2.0.4" full_name="MIPI CSI2RX Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <component_dependency value="platform.drivers.soc_mipi_csi2rx.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_mipi_csi2rx.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mipi_csi2rx.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_mipi_csi2rx.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.mecc.MIMXRT1176" name="mecc" brief="MECC Driver" version="2.1.1" full_name="MECC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_mecc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mecc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_mecc.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpuart.MIMXRT1176" name="lpuart" brief="LPUART Driver" version="2.8.2" full_name="LPUART Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpuart.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpuart_edma.MIMXRT1176" name="lpuart_edma" brief="LPUART Driver" version="2.6.0" full_name="LPUART Edma Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma.MIMXRT1176"/>
          <component_dependency value="platform.drivers.lpuart.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpuart_edma.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpuart_cmsis.MIMXRT1176" name="lpuart_cmsis" brief="LPUART CMSIS Driver" version="1.0.0" full_name="LPUART CMSIS Driver" category="CMSIS Driver/USART" user_visible="true" type="CMSIS_driver" package_base_path="devices/MIMXRT1176/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Driver_Include.USART.MIMXRT1176"/>
          <component_dependency value="platform.drivers.lpuart.MIMXRT1176"/>
          <component_dependency value="device.RTE.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart_cmsis.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_cmsis_lpuart.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpspi.MIMXRT1176" name="lpspi" brief="LPSPI Driver" version="2.6.9" full_name="LPSPI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lpspi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpspi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpspi.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpspi_edma.MIMXRT1176" name="lpspi_edma" brief="LPSPI Driver" version="2.4.5" full_name="LPSPI Edma Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma.MIMXRT1176"/>
          <component_dependency value="platform.drivers.lpspi.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpspi_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpspi_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpspi_edma.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpspi_cmsis.MIMXRT1176" name="lpspi_cmsis" brief="LPSPI CMSIS Driver" version="1.0.0" full_name="LPSPI CMSIS Driver" category="CMSIS Driver/SPI" user_visible="true" type="CMSIS_driver" package_base_path="devices/MIMXRT1176/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Driver_Include.SPI.MIMXRT1176"/>
          <component_dependency value="platform.drivers.lpspi.MIMXRT1176"/>
          <component_dependency value="device.RTE.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpspi_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpspi_cmsis.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_cmsis_lpspi.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpi2c.MIMXRT1176" name="i2c" brief="LPI2C Driver" version="2.5.5" full_name="LPI2C Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lpi2c.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpi2c.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpi2c.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpi2c_edma.MIMXRT1176" name="i2c_edma" brief="LPI2C Driver" version="2.4.2" full_name="LPI2C Edma Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma.MIMXRT1176"/>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lpi2c_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpi2c_edma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpi2c_edma.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpi2c_cmsis.MIMXRT1176" name="lpi2c_cmsis" brief="LPI2C CMSIS Driver" version="1.0.0" full_name="LPI2C CMSIS Driver" category="CMSIS Driver/I2C" user_visible="true" type="CMSIS_driver" package_base_path="devices/MIMXRT1176/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Driver_Include.I2C.MIMXRT1176"/>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1176"/>
          <component_dependency value="device.RTE.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpi2c_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpi2c_cmsis.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_cmsis_lpi2c.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpadc.MIMXRT1176" name="lpadc" brief="LPADC Driver" version="2.9.1" full_name="LPADC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lpadc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpadc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpadc.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lcdifv2.MIMXRT1176" name="lcdifv2" brief="LCDIFV2 Driver" version="2.3.3" full_name="LCDIFV2 Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lcdifv2.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lcdifv2.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lcdifv2.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.kpp.MIMXRT1176" name="kpp" brief="KPP Driver" version="2.0.1" full_name="KPP Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_kpp.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_kpp.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_kpp.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.key_manager.MIMXRT1176" name="key_manager" brief="Key Manager Driver" version="2.0.2" full_name="Key Manager Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_key_manager.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_key_manager.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_key_manager.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.igpio.MIMXRT1176" name="gpio" brief="GPIO Driver" version="2.0.6" full_name="igpio" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_gpio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_gpio.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_igpio.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.iee_apc.MIMXRT1176" name="iee_apc" brief="IEE APC Driver" version="2.0.2" full_name="IEE APC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_iee_apc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_iee_apc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_iee_apc.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.iee.MIMXRT1176" name="iee" brief="IEE Driver" version="2.1.1" full_name="IEE Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_iee.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_iee.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_iee.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.gpt.MIMXRT1176" name="gpt" brief="GPT Driver" version="2.0.5" full_name="GPT Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_gpt.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_gpt.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_gpt.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexspi.MIMXRT1176" name="flexspi" brief="FLEXSPI Driver" version="2.6.2" full_name="FLEXSPI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexspi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexspi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexspi.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexspi_edma.MIMXRT1176" name="flexspi_edma" brief="FLEXSPI Driver" version="2.3.3" full_name="FLEXSPI EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma.MIMXRT1176"/>
          <component_dependency value="platform.drivers.flexspi.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexspi_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexspi_edma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexspi_edma.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexram.MIMXRT1176" name="flexram" brief="FLEXRAM Driver" version="2.3.0" full_name="FLEXRAM Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <component_dependency value="driver.soc_flexram_allocate.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexram.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexram.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexram.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_uart.MIMXRT1176" name="flexio_uart" brief="FLEXIO UART Driver" version="2.5.0" full_name="FLEXIO UART Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_uart.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_uart.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_uart.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_uart_edma.MIMXRT1176" name="flexio_uart_edma" brief="FLEXIO UART EDMA Driver" version="2.4.1" full_name="FLEXIO UART EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma.MIMXRT1176"/>
          <component_dependency value="platform.drivers.flexio_uart.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_uart_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_uart_edma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_uart_edma.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_spi.MIMXRT1176" name="flexio_spi" brief="FLEXIO SPI Driver" version="2.3.4" full_name="FLEXIO SPI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_spi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_spi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_spi.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_spi_edma.MIMXRT1176" name="flexio_spi_edma" brief="FLEXIO SPI EDMA Driver" version="2.3.0" full_name="FLEXIO SPI EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma.MIMXRT1176"/>
          <component_dependency value="platform.drivers.flexio_spi.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_spi_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_spi_edma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_spi_edma.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_mculcd.MIMXRT1176" name="flexio_mculcd" brief="FLEXIO MCULCD Driver" version="2.1.0" full_name="FLEXIO MCULCD Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_mculcd.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_mculcd.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_mculcd.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_mculcd_edma.MIMXRT1176" name="flexio_mculcd_edma" brief="FLEXIO MCULCD EDMA Driver" version="2.0.5" full_name="FLEXIO MCULCD EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma.MIMXRT1176"/>
          <component_dependency value="platform.drivers.flexio_mculcd.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_mculcd_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_mculcd_edma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_mculcd_edma.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_i2s.MIMXRT1176" name="flexio_i2s" brief="FLEXIO I2S Driver" version="2.2.0" full_name="FLEXIO I2S Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_i2s.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_i2s.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_i2s.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_i2s_edma.MIMXRT1176" name="flexio_i2s_edma" brief="FLEXIO I2S EDMA Driver" version="2.1.8" full_name="FLEXIO I2S EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma.MIMXRT1176"/>
          <component_dependency value="platform.drivers.flexio_i2s.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_i2s_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_i2s_edma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_i2s_edma.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_i2c_master.MIMXRT1176" name="flexio_i2c_master" brief="FLEXIO I2C Driver" version="2.5.0" full_name="FLEXIO I2C Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_i2c_master.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_i2c_master.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_i2c_master.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio.MIMXRT1176" name="flexio" brief="FLEXIO Driver" version="2.2.3" full_name="FLEXIO Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_camera.MIMXRT1176" name="flexio_camera" brief="FLEXIO Driver" version="2.1.3" full_name="FLEXIO CAMERA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_camera.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_camera.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_camera.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_camera_edma.MIMXRT1176" name="flexio_camera_edma" brief="FLEXIO CAMERA EDMA Driver" version="2.1.3" full_name="FLEXIO CAMERA EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma.MIMXRT1176"/>
          <component_dependency value="platform.drivers.flexio_camera.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_camera_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_camera_edma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_camera_edma.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcan.MIMXRT1176" name="flexcan" brief="FLEXCAN Driver" version="2.13.0" full_name="FLEXCAN Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexcan.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_flexcan.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexcan.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcan_edma.MIMXRT1176" name="flexcan_edma" brief="FLEXCAN Driver" version="2.11.7" full_name="FLEXCAN EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma.MIMXRT1176"/>
          <component_dependency value="platform.drivers.flexcan.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexcan_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_flexcan_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexcan_edma.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.ewm.MIMXRT1176" name="ewm" brief="EWM Driver" version="2.0.3" full_name="EWM Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_ewm.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ewm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_ewm.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.enet_qos.MIMXRT1176" name="enet_qos" brief="ENET QoS Driver" version="2.6.4" full_name="ENET QoS Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_enet_qos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_enet_qos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_enet_qos.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.enet.MIMXRT1176" name="enet" brief="ENET Driver" version="2.9.2" full_name="ENET Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_enet.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_enet.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_enet.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.enet_cmsis.MIMXRT1176" name="enet_cmsis" brief="ENET CMSIS Driver" version="1.0.0" full_name="ENET CMSIS Driver" category="CMSIS Driver/Ethernet" user_visible="true" type="CMSIS_driver" package_base_path="devices/MIMXRT1176/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Driver_Include.Ethernet.MIMXRT1176"/>
          <component_dependency value="CMSIS_Driver_Include.Ethernet_MAC.MIMXRT1176"/>
          <component_dependency value="CMSIS_Driver_Include.Ethernet_PHY.MIMXRT1176"/>
          <component_dependency value="component.eth_phy_common.MIMXRT1176"/>
          <component_dependency value="device.RTE.MIMXRT1176"/>
          <component_dependency value="platform.drivers.enet.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_enet_cmsis.h"/>
        <files mask="fsl_enet_phy_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_enet_cmsis.c"/>
        <files mask="fsl_enet_phy_cmsis.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_cmsis_enet.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.enc.MIMXRT1176" name="enc" brief="ENC Driver" version="2.2.1" full_name="ENC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_enc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_enc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_enc.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.elcdif.MIMXRT1176" name="elcdif" brief="ELCDIF Driver" version="2.1.0" full_name="ELCDIF Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_elcdif.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_elcdif.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_elcdif.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.edma.MIMXRT1176" name="edma" brief="EDMA Driver" version="2.4.4" full_name="EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <component_dependency value="platform.drivers.dmamux.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_edma.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dmamux.MIMXRT1176" name="dmamux" brief="DMAMUX Driver" version="2.1.0" full_name="DMAMUX Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dmamux.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dmamux.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dmamux.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dcic.MIMXRT1176" name="dcic" brief="DCIC Driver" version="2.0.2" full_name="DCIC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_dcic.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dcic.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dcic.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dac12.MIMXRT1176" name="dac" brief="DAC12 Driver" version="2.1.1" full_name="DAC12 Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_dac12.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dac12.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dac12.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.csi.MIMXRT1176" name="csi" brief="CSI Driver" version="2.2.0" full_name="CSI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_csi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_csi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_csi.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.cdog.MIMXRT1176" name="cdog" brief="cdog Driver" version="2.1.3" full_name="cdog Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cdog.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_cdog.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_cdog.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.caam.MIMXRT1176" name="caam" brief="CAAM Driver" version="2.3.2" full_name="CAAM Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <defines>
        <define name="CRYPTO_USE_DRIVER_CAAM" value=""/>
        <define name="CACHE_MODE_WRITE_THROUGH" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_caam.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_caam.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_caam.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.asrc.MIMXRT1176" name="asrc" brief="asrc Driver" version="2.1.3" full_name="asrc Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_asrc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_asrc.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_asrc.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.asrc_edma.MIMXRT1176" name="asrc_edma" brief="asrc_edma Driver" version="2.2.0" full_name="asrc_edma Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma.MIMXRT1176"/>
          <component_dependency value="platform.drivers.asrc.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_asrc_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_asrc_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_asrc_edma.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.aoi.MIMXRT1176" name="aoi" brief="AOI Driver" version="2.0.2" full_name="AOI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_aoi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_aoi.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_aoi.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.adc_etc.MIMXRT1176" name="adc_etc" brief="ADC_ETC Driver" version="2.3.0" full_name="ADC_ETC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_adc_etc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adc_etc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_adc_etc.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.acmp.MIMXRT1176" name="acmp" brief="ACMP Driver" version="2.3.0" full_name="ACMP Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1176/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_acmp.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_acmp.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_acmp.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.openvg.MIMXRT1176" name="openvg" brief="Openvg library" version="4.0.90" full_name="Middleware openvg" category="openvg/OpenVG" user_visible="false" type="middleware" package_base_path="middleware/openvg" project_base_path="openvg">
      <dependencies>
        <all>
          <component_dependency value="middleware.vglite.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="src" type="src">
        <files mask="vg_api.c"/>
        <files mask="vg_context.c"/>
        <files mask="vg_egl.c"/>
        <files mask="vg_image.c"/>
        <files mask="vg_vgu.c"/>
        <files mask="vg_egl_freertos.c"/>
      </source>
      <source relative_path="include/EGL" type="c_include">
        <files mask="egl.h"/>
        <files mask="eglplatform.h"/>
        <files mask="eglvivante.h"/>
      </source>
      <source relative_path="include/KHR" type="c_include">
        <files mask="khrplatform.h"/>
      </source>
      <source relative_path="include/VG" type="c_include">
        <files mask="openvg.h"/>
        <files mask="vgplatform.h"/>
        <files mask="vgu.h"/>
      </source>
      <source relative_path="include/Vivante" type="c_include">
        <files mask="vg_context.h"/>
        <files mask="vg_defs.h"/>
        <files mask="vg_image.h"/>
        <files mask="vg_math.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_openvg.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include/Vivante" type="c_include"/>
        <include_path relative_path="include/EGL" type="c_include"/>
        <include_path relative_path="include/VG" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
        <include_path relative_path="include/Vivante" type="asm_include"/>
        <include_path relative_path="include/EGL" type="asm_include"/>
        <include_path relative_path="include/VG" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.template.MIMXRT1176" name="Wi-Fi configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="Wi-Fi configuration template" category="Wireless/NXP Wi-Fi" user_visible="false" type="project_template" package_base_path="components/wifi_bt_module/template" project_base_path="wifi/template">
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="component.wifi_bt_module.config.MIMXRT1176"/>
              <component_dependency value="component.wifi_bt_module.tx_pwr_limits.MIMXRT1176"/>
              <component_dependency value="middleware.wifi.wifi_bt_config.template.MIMXRT1176"/>
            </all>
            <component_dependency value="component.wifi_bt_module.tx_pwr_limits.MIMXRT1176"/>
          </any_of>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_template.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.wifi.osa.MIMXRT1176" name="nxp wifi osa" brief="NXP WLAN OSA" version="1.0.0" full_name="NXP WLAN OSA" category="Wireless/NXP Wi-Fi" user_visible="true" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="incl/port/osa" type="c_include">
        <files mask="osa.h"/>
        <files mask="mem_pool.h"/>
        <files mask="mem_pool_config.h"/>
        <files mask="slist.h"/>
        <files mask="stack_simple.h"/>
      </source>
      <source relative_path="port/osa" type="src">
        <files mask="osa.c"/>
        <files mask="mem_pool.c"/>
        <files mask="mem_pool_config.c"/>
        <files mask="slist.c"/>
        <files mask="stack_simple.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_osa.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="incl/port" type="c_include"/>
        <include_path relative_path="incl/port/osa" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="incl/port" type="asm_include"/>
        <include_path relative_path="incl/port/osa" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.common_files.MIMXRT1176" name="nxp_wireless_common_files" brief="NXP WLAN common files" version="1.0.0" full_name="NXP WLAN common files" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.osa.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="incl" type="c_include">
        <files mask="wifi_config_default.h"/>
        <files mask="wifi_cal_data_ext.h"/>
        <files mask="wm_utils.h"/>
        <files mask="wmerrno.h"/>
        <files mask="wmlog.h"/>
        <files mask="wmtypes.h"/>
        <files mask="wifi_cal_data_frdmrw61x_1ant.h"/>
        <files mask="wifi_cal_data_rw61x_1ant.h"/>
        <files mask="wifi_cal_data_rw61x_1ant_diversity.h"/>
        <files mask="wifi_cal_data_rw61x_2ant.h"/>
        <files mask="wifi_cal_data_rw61x_3ant_diversity.h"/>
        <files mask="wifi_cal_data_rw61x_override.h"/>
      </source>
      <source relative_path="incl/wifidriver" type="c_include">
        <files mask="wifi-decl.h"/>
        <files mask="wifi.h"/>
        <files mask="wifi_events.h"/>
      </source>
      <source relative_path="wifidriver/incl" type="c_include">
        <files mask="mlan_decl.h"/>
        <files mask="mlan_ioctl.h"/>
        <files mask="type_decls.h"/>
      </source>
      <source relative_path="wifi_bt_firmware" type="c_include">
        <files mask="wlan_bt_fw.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_common_files.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="incl/port/osa" type="c_include"/>
        <include_path relative_path="incl/wifidriver" type="c_include"/>
        <include_path relative_path="wifi_bt_firmware" type="c_include"/>
        <include_path relative_path="wifidriver" type="c_include"/>
        <include_path relative_path="wifidriver/incl" type="c_include"/>
        <include_path relative_path="incl" type="asm_include"/>
        <include_path relative_path="incl/port/osa" type="asm_include"/>
        <include_path relative_path="incl/wifidriver" type="asm_include"/>
        <include_path relative_path="wifi_bt_firmware" type="asm_include"/>
        <include_path relative_path="wifidriver" type="asm_include"/>
        <include_path relative_path="wifidriver/incl" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.fwdnld.MIMXRT1176" name="nxp_wireless_fwdnld" brief="NXP WLAN f/w dnld driver" version="1.0.0" full_name="NXP WLAN f/w dnld driver" category="Wireless/NXP Wi-Fi" user_visible="true" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.common_files.MIMXRT1176"/>
          <component_dependency value="middleware.wifi.fwdnld_intf_abs.MIMXRT1176"/>
          <component_dependency value="middleware.wifi.mlan_sdio.MIMXRT1176"/>
          <component_dependency value="middleware.wifi.template.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="incl" type="c_include">
        <files mask="WIFI_IW416_BOARD_AW_AM457_CAL_DATA_EXT.h"/>
      </source>
      <source relative_path="wifidriver/incl" type="c_include">
        <files mask="mlan_main_defs.h"/>
      </source>
      <source relative_path="wifi_bt_firmware/8801" type="asm_include">
        <files mask="sd8801_wlan.bin.inc"/>
      </source>
      <source relative_path="wifi_bt_firmware/8801" type="c_include">
        <files mask="sd8801_wlan.h"/>
      </source>
      <source relative_path="wifi_bt_firmware/8801" type="src">
        <files mask="8801_cpu1.c"/>
      </source>
      <source relative_path="wifi_bt_firmware/IW416" type="asm_include">
        <files mask="sduartIW416_wlan_bt.bin.inc"/>
        <files mask="sdIW416_wlan.bin.inc"/>
        <files mask="uartIW416_bt.bin.inc"/>
      </source>
      <source relative_path="wifi_bt_firmware/IW416" type="c_include">
        <files mask="sduartIW416_wlan_bt.h"/>
        <files mask="sdIW416_wlan.h"/>
        <files mask="uartIW416_bt.h"/>
      </source>
      <source relative_path="wifi_bt_firmware/IW416" type="src">
        <files mask="IW416_cpu12.c"/>
        <files mask="IW416_cpu1.c"/>
        <files mask="IW416_cpu2.c"/>
      </source>
      <source relative_path="wifi_bt_firmware/8987" type="asm_include">
        <files mask="sduart8987_wlan_bt.bin.inc"/>
        <files mask="sd8987_wlan.bin.inc"/>
        <files mask="uart8987_bt.bin.inc"/>
      </source>
      <source relative_path="wifi_bt_firmware/8987" type="c_include">
        <files mask="sduart8987_wlan_bt.h"/>
        <files mask="sd8987_wlan.h"/>
        <files mask="uart8987_bt.h"/>
      </source>
      <source relative_path="wifi_bt_firmware/8987" type="src">
        <files mask="8987_cpu12.c"/>
        <files mask="8987_cpu1.c"/>
        <files mask="8987_cpu2.c"/>
      </source>
      <source relative_path="wifi_bt_firmware/nw61x" type="asm_include">
        <files mask="sduart_nw61x.bin.se.inc"/>
        <files mask="sd_nw61x.bin.se.inc"/>
        <files mask="uart_nw61x.bin.se.inc"/>
      </source>
      <source relative_path="wifi_bt_firmware/nw61x" type="c_include">
        <files mask="sduart_nw61x_se.h"/>
        <files mask="sd_nw61x_se.h"/>
        <files mask="uart_nw61x_se.h"/>
      </source>
      <source relative_path="wifi_bt_firmware/nw61x" type="src">
        <files mask="nw61x_cpu12_se.c"/>
        <files mask="nw61x_cpu1_se.c"/>
        <files mask="nw61x_cpu2_se.c"/>
      </source>
      <source relative_path="wifi_bt_firmware/iw610" type="asm_include">
        <files mask="sduart_iw610.bin.se.inc"/>
        <files mask="sd_iw610.bin.se.inc"/>
        <files mask="uart_iw610_bt.bin.se.inc"/>
      </source>
      <source relative_path="wifi_bt_firmware/iw610" type="c_include">
        <files mask="sduart_iw610_se.h"/>
        <files mask="sd_iw610_se.h"/>
        <files mask="uart_iw610_se.h"/>
      </source>
      <source relative_path="wifi_bt_firmware/iw610" type="src">
        <files mask="iw610_cpu12_se.c"/>
        <files mask="iw610_cpu2_se.c"/>
        <files mask="iw610_cpu1_se.c"/>
      </source>
      <source relative_path="wifidriver" type="src">
        <files mask="sdio.c"/>
      </source>
      <source relative_path="wifidriver" type="c_include">
        <files mask="sdio.h"/>
      </source>
      <source relative_path="firmware_dnld" type="src">
        <files mask="firmware_dnld.c"/>
      </source>
      <source relative_path="firmware_dnld" type="c_include">
        <files mask="firmware_dnld.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_fwdnld.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="wifi_bt_firmware" type="c_include"/>
        <include_path relative_path="wifi_bt_firmware/8801" type="c_include"/>
        <include_path relative_path="wifi_bt_firmware/IW416" type="c_include"/>
        <include_path relative_path="wifi_bt_firmware/8987" type="c_include"/>
        <include_path relative_path="wifi_bt_firmware/nw61x" type="c_include"/>
        <include_path relative_path="wifi_bt_firmware/iw610" type="c_include"/>
        <include_path relative_path="wifidriver" type="c_include"/>
        <include_path relative_path="wifidriver/incl" type="c_include"/>
        <include_path relative_path="firmware_dnld" type="c_include"/>
        <include_path relative_path="sdio_nxp_abs" type="c_include"/>
        <include_path relative_path="sdio_nxp_abs/incl" type="c_include"/>
        <include_path relative_path="fwdnld_intf_abs" type="c_include"/>
        <include_path relative_path="incl" type="asm_include"/>
        <include_path relative_path="wifi_bt_firmware" type="asm_include"/>
        <include_path relative_path="wifi_bt_firmware/8801" type="asm_include"/>
        <include_path relative_path="wifi_bt_firmware/IW416" type="asm_include"/>
        <include_path relative_path="wifi_bt_firmware/8987" type="asm_include"/>
        <include_path relative_path="wifi_bt_firmware/nw61x" type="asm_include"/>
        <include_path relative_path="wifi_bt_firmware/iw610" type="asm_include"/>
        <include_path relative_path="wifidriver" type="asm_include"/>
        <include_path relative_path="wifidriver/incl" type="asm_include"/>
        <include_path relative_path="firmware_dnld" type="asm_include"/>
        <include_path relative_path="sdio_nxp_abs" type="asm_include"/>
        <include_path relative_path="sdio_nxp_abs/incl" type="asm_include"/>
        <include_path relative_path="fwdnld_intf_abs" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.net_free_rtos.MIMXRT1176" name="nxp wifi osa free_rtos" brief="NXP WLAN OSA" version="1.0.0" full_name="NXP WLAN OSA" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1176"/>
          <component_dependency value="middleware.lwip.MIMXRT1176"/>
          <component_dependency value="middleware.lwip.apps.lwiperf.MIMXRT1176"/>
          <component_dependency value="middleware.wifi.net.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="incl/port/net" type="c_include">
        <files mask="wm_net.h"/>
      </source>
      <source relative_path="port/net" type="src">
        <files mask="net.c"/>
        <files mask="wifi_netif.c"/>
      </source>
      <source relative_path="port/net" type="c_include">
        <files mask="netif_decl.h"/>
      </source>
      <source relative_path="incl/port/net/hooks" type="c_include">
        <files mask="lwip_default_hooks.h"/>
      </source>
      <source relative_path="port/net/hooks" type="src">
        <files mask="lwip_default_hooks.c"/>
      </source>
      <source relative_path="dhcpd" type="c_include">
        <files mask="dhcp-bootp.h"/>
        <files mask="dhcp-priv.h"/>
        <files mask="dns.h"/>
      </source>
      <source relative_path="dhcpd" type="src">
        <files mask="dhcp-server-main.c"/>
        <files mask="dhcp-server.c"/>
        <files mask="dns-server.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_net_free_rtos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="incl/port/osa" type="c_include"/>
        <include_path relative_path="port/osa" type="c_include"/>
        <include_path relative_path="incl/port/net" type="c_include"/>
        <include_path relative_path="incl/port/net/hooks" type="c_include"/>
        <include_path relative_path="dhcpd" type="c_include"/>
        <include_path relative_path="incl/wlcmgr" type="c_include"/>
        <include_path relative_path="incl/wifidriver" type="c_include"/>
        <include_path relative_path="wifidriver/incl" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="incl" type="asm_include"/>
        <include_path relative_path="incl/port/osa" type="asm_include"/>
        <include_path relative_path="port/osa" type="asm_include"/>
        <include_path relative_path="incl/port/net" type="asm_include"/>
        <include_path relative_path="incl/port/net/hooks" type="asm_include"/>
        <include_path relative_path="dhcpd" type="asm_include"/>
        <include_path relative_path="incl/wlcmgr" type="asm_include"/>
        <include_path relative_path="incl/wifidriver" type="asm_include"/>
        <include_path relative_path="wifidriver/incl" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.net.MIMXRT1176" name="nxp wifi osa" brief="NXP WLAN OSA" version="1.0.0" full_name="NXP WLAN OSA" category="Wireless/NXP Wi-Fi" user_visible="true" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="incl/port/net" type="c_include">
        <files mask="wm_net.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_net.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="incl/port/osa" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="incl/port/osa" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.wifidriver.MIMXRT1176" name="nxp_wifi_driver" brief="NXP Wi-Fi driver" version="1.3.46" full_name="NXP Wi-Fi driver" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="utility.debug_console.MIMXRT1176"/>
            <component_dependency value="utility.debug_console_lite.MIMXRT1176"/>
          </any_of>
          <component_dependency value="middleware.wifi.fwdnld.MIMXRT1176"/>
          <component_dependency value="middleware.wifi.fwdnld_intf_abs.MIMXRT1176"/>
          <component_dependency value="middleware.wifi.sdio.MIMXRT1176"/>
          <component_dependency value="middleware.wifi.net.MIMXRT1176"/>
          <component_dependency value="middleware.wifi.osa.MIMXRT1176"/>
          <component_dependency value="middleware.wifi.template.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="incl" type="c_include">
        <files mask="dhcp-server.h"/>
        <files mask="nxp_wifi.h"/>
      </source>
      <source relative_path="incl/wlcmgr" type="c_include">
        <files mask="wlan.h"/>
        <files mask="wlan_11d.h"/>
      </source>
      <source relative_path="incl/wifidriver" type="c_include">
        <files mask="wifi_nxp.h"/>
      </source>
      <source relative_path="wifidriver/incl" type="c_include">
        <files mask="mlan.h"/>
        <files mask="mlan_11ac.h"/>
        <files mask="mlan_11ax.h"/>
        <files mask="mlan_11h.h"/>
        <files mask="mlan_11n.h"/>
        <files mask="mlan_11n_aggr.h"/>
        <files mask="mlan_11n_rxreorder.h"/>
        <files mask="mlan_11v.h"/>
        <files mask="mlan_action.h"/>
        <files mask="mlan_11k.h"/>
        <files mask="mlan_mbo.h"/>
        <files mask="mlan_api.h"/>
        <files mask="mlan_fw.h"/>
        <files mask="mlan_ieee.h"/>
        <files mask="mlan_init.h"/>
        <files mask="mlan_join.h"/>
        <files mask="mlan_main.h"/>
        <files mask="mlan_meas.h"/>
        <files mask="mlan_remap_mem_operations.h"/>
        <files mask="mlan_uap.h"/>
        <files mask="mlan_util.h"/>
        <files mask="mlan_wmm.h"/>
      </source>
      <source relative_path="wifidriver" type="src">
        <files mask="mlan_11ac.c"/>
        <files mask="mlan_11ax.c"/>
        <files mask="mlan_11d.c"/>
        <files mask="mlan_11h.c"/>
        <files mask="mlan_11n.c"/>
        <files mask="mlan_11n_aggr.c"/>
        <files mask="mlan_11n_rxreorder.c"/>
        <files mask="mlan_11v.c"/>
        <files mask="mlan_action.c"/>
        <files mask="mlan_11k.c"/>
        <files mask="mlan_mbo.c"/>
        <files mask="mlan_api.c"/>
        <files mask="mlan_cfp.c"/>
        <files mask="mlan_cmdevt.c"/>
        <files mask="mlan_glue.c"/>
        <files mask="mlan_init.c"/>
        <files mask="mlan_join.c"/>
        <files mask="mlan_misc.c"/>
        <files mask="mlan_scan.c"/>
        <files mask="mlan_shim.c"/>
        <files mask="mlan_sta_cmd.c"/>
        <files mask="mlan_sta_cmdresp.c"/>
        <files mask="mlan_sta_event.c"/>
        <files mask="mlan_sta_ioctl.c"/>
        <files mask="mlan_sta_rx.c"/>
        <files mask="mlan_txrx.c"/>
        <files mask="mlan_wmm.c"/>
        <files mask="wifi-debug.c"/>
        <files mask="wifi-mem.c"/>
        <files mask="wifi.c"/>
        <files mask="wifi_pwrmgr.c"/>
        <files mask="wifi-wps.c"/>
      </source>
      <source relative_path="wifidriver" type="c_include">
        <files mask="wifi-debug.h"/>
        <files mask="wifi-internal.h"/>
        <files mask="wifi_common.h"/>
      </source>
      <source relative_path="wifidriver/wpa_supp_if/incl" type="c_include">
        <files mask="rtos_wpa_supp_if.h"/>
        <files mask="wifi_nxp_internal.h"/>
      </source>
      <source relative_path="wifidriver/wpa_supp_if" type="src">
        <files mask="wifi_nxp.c"/>
        <files mask="rtos_wpa_supp_if.c"/>
        <files mask="wifi_nxp_internal.c"/>
      </source>
      <source relative_path="certs" type="c_include">
        <files mask="ca-cert.h"/>
        <files mask="client-cert.h"/>
        <files mask="client-key.h"/>
        <files mask="server-cert.h"/>
        <files mask="server-key.h"/>
        <files mask="dh-param.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_wifidriver.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="incl/wlcmgr" type="c_include"/>
        <include_path relative_path="wifidriver" type="c_include"/>
        <include_path relative_path="wifidriver/incl" type="c_include"/>
        <include_path relative_path="wifidriver/wpa_supp_if" type="c_include"/>
        <include_path relative_path="wifidriver/wpa_supp_if/incl" type="c_include"/>
        <include_path relative_path="certs" type="c_include"/>
        <include_path relative_path="firmware_dnld" type="c_include"/>
        <include_path relative_path="sdio_nxp_abs" type="c_include"/>
        <include_path relative_path="sdio_nxp_abs/incl" type="c_include"/>
        <include_path relative_path="incl" type="asm_include"/>
        <include_path relative_path="incl/wlcmgr" type="asm_include"/>
        <include_path relative_path="wifidriver" type="asm_include"/>
        <include_path relative_path="wifidriver/incl" type="asm_include"/>
        <include_path relative_path="wifidriver/wpa_supp_if" type="asm_include"/>
        <include_path relative_path="wifidriver/wpa_supp_if/incl" type="asm_include"/>
        <include_path relative_path="certs" type="asm_include"/>
        <include_path relative_path="firmware_dnld" type="asm_include"/>
        <include_path relative_path="sdio_nxp_abs" type="asm_include"/>
        <include_path relative_path="sdio_nxp_abs/incl" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.wifidriver.softap.MIMXRT1176" name="nxp_wifi_driver_softap" brief="NXP Wi-Fi driver Soft AP" version="1.3.46" full_name="NXP Wi-Fi driver Soft AP" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <defines>
        <define name="CONFIG_NXP_WIFI_SOFTAP_SUPPORT" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.wifidriver.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="wifidriver" type="src">
        <files mask="wifi-uap.c"/>
        <files mask="mlan_uap_ioctl.c"/>
        <files mask="mlan_uap_cmdevent.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_wifidriver_softap.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="wifidriver" type="c_include"/>
        <include_path relative_path="wifidriver" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.MIMXRT1176" name="wifi_nxp" brief="NXP Wi-Fi functionality enables customers to quickly develop applications of interest to add connectivity to different sensors and appliances" version="1.3.46" full_name="NXP Wi-Fi" category="Wireless/NXP Wi-Fi" user_visible="true" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="utility.debug_console.MIMXRT1176"/>
            <component_dependency value="utility.debug_console_lite.MIMXRT1176"/>
          </any_of>
          <component_dependency value="middleware.wifi.template.MIMXRT1176"/>
          <component_dependency value="middleware.wifi.wifidriver.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="dhcpd" type="c_include">
        <files mask="dhcp-bootp.h"/>
        <files mask="dhcp-priv.h"/>
        <files mask="dns.h"/>
      </source>
      <source relative_path="dhcpd" type="src">
        <files mask="dhcp-server-main.c"/>
        <files mask="dhcp-server.c"/>
        <files mask="dns-server.c"/>
      </source>
      <source relative_path="incl/port/net" type="c_include">
        <files mask="wm_net.h"/>
      </source>
      <source relative_path="incl" type="c_include">
        <files mask="wmstats.h"/>
      </source>
      <source relative_path="port/net" type="src">
        <files mask="net.c"/>
        <files mask="wifi_netif.c"/>
      </source>
      <source relative_path="port/net" type="c_include">
        <files mask="netif_decl.h"/>
      </source>
      <source relative_path="wlcmgr" type="src">
        <files mask="wlan.c"/>
        <files mask="wlan_txpwrlimit_cfg.c"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
        <files mask="CMakeLists.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="incl/wifidriver" type="c_include"/>
        <include_path relative_path="incl/port/net" type="c_include"/>
        <include_path relative_path="port/net" type="c_include"/>
        <include_path relative_path="incl/port/net/hooks" type="c_include"/>
        <include_path relative_path="incl" type="asm_include"/>
        <include_path relative_path="incl/wifidriver" type="asm_include"/>
        <include_path relative_path="incl/port/net" type="asm_include"/>
        <include_path relative_path="port/net" type="asm_include"/>
        <include_path relative_path="incl/port/net/hooks" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.sdio.MIMXRT1176" name="wifi_nxp_sdio" brief="NXP Wi-Fi SDIO driver" version="1.3.46" full_name="NXP Wi-Fi SDIO" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.mlan_sdio.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="wifidriver" type="src">
        <files mask="wifi-sdio.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_sdio.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.wifi.mlan_sdio.MIMXRT1176" name="wifi_nxp_mlan_sdio" brief="NXP Wi-Fi SDIO driver" version="1.3.46" full_name="NXP Wi-Fi SDIO" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.host.usdhc.MIMXRT1176"/>
          <component_dependency value="middleware.sdmmc.sdio.MIMXRT1176"/>
          <component_dependency value="middleware.wifi.common_files.MIMXRT1176"/>
          <component_dependency value="middleware.wifi.template.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="sdio_nxp_abs" type="src">
        <files mask="mlan_sdio.c"/>
        <files mask="fwdnld_sdio.c"/>
      </source>
      <source relative_path="sdio_nxp_abs/incl" type="c_include">
        <files mask="fwdnld_sdio.h"/>
        <files mask="mlan_sdio_defs.h"/>
        <files mask="mlan_sdio.h"/>
        <files mask="mlan_sdio_api.h"/>
      </source>
      <source relative_path="wifidriver" type="c_include">
        <files mask="wifi-sdio.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_mlan_sdio.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="wifidriver" type="c_include"/>
        <include_path relative_path="sdio_nxp_abs/incl" type="c_include"/>
        <include_path relative_path="wifidriver" type="asm_include"/>
        <include_path relative_path="sdio_nxp_abs/incl" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.cli.MIMXRT1176" name="wifi_nxp_cli" brief="Middlware Wi-Fi CLI" version="1.3.46" full_name="NXP Wi-Fi CLI" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="utility.debug_console.MIMXRT1176"/>
            <component_dependency value="utility.debug_console_lite.MIMXRT1176"/>
          </any_of>
          <component_dependency value="middleware.wifi.MIMXRT1176"/>
          <component_dependency value="middleware.wifi.wifidriver.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="cli" type="c_include">
        <files mask="cli_mem.h"/>
        <files mask="wifi_shell.h"/>
      </source>
      <source relative_path="cli" type="src">
        <files mask="cli.c"/>
        <files mask="cli_mem_simple.c"/>
        <files mask="cli_utils.c"/>
        <files mask="wifi_shell.c"/>
      </source>
      <source relative_path="incl" type="c_include">
        <files mask="cli.h"/>
        <files mask="cli_utils.h"/>
        <files mask="iperf.h"/>
        <files mask="wifi_ping.h"/>
      </source>
      <source relative_path="port/osa" type="src">
        <files mask="osa_cli.c"/>
      </source>
      <source relative_path="dhcpd" type="src">
        <files mask="dhcp-server-cli.c"/>
      </source>
      <source relative_path="nw_utils" type="src">
        <files mask="wifi_ping.c"/>
        <files mask="iperf.c"/>
        <files mask="init_enet.c"/>
      </source>
      <source relative_path="nw_utils" type="c_include">
        <files mask="network_cfg.h"/>
      </source>
      <source relative_path="nw_utils/telnet" type="c_include">
        <files mask="telnet_server.h"/>
      </source>
      <source relative_path="nw_utils/telnet" type="src">
        <files mask="telnet_server.c"/>
      </source>
      <source relative_path="wlcmgr" type="src">
        <files mask="wlan_basic_cli.c"/>
        <files mask="wlan_enhanced_tests.c"/>
        <files mask="wlan_tests.c"/>
        <files mask="wlan_test_mode_tests.c"/>
      </source>
      <source relative_path="incl/wlcmgr" type="c_include">
        <files mask="wlan_tests.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_cli.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="cli" type="c_include"/>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="incl/wlcmgr" type="c_include"/>
        <include_path relative_path="nw_utils" type="c_include"/>
        <include_path relative_path="nw_utils/telnet" type="c_include"/>
        <include_path relative_path="cli" type="asm_include"/>
        <include_path relative_path="incl" type="asm_include"/>
        <include_path relative_path="incl/wlcmgr" type="asm_include"/>
        <include_path relative_path="nw_utils" type="asm_include"/>
        <include_path relative_path="nw_utils/telnet" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.wmcrypto.MIMXRT1176" name="wifi_nxp_wmcrypto" brief="Middlware Wi-Fi WMCRYPTO" version="1.0.0" full_name="NXP Wi-Fi WMCRYPTO" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.MIMXRT1176"/>
          <component_dependency value="middleware.wifi.wifidriver.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="wmcrypto" type="src">
        <files mask="wmcrypto.c"/>
        <files mask="wmcrypto_mem.c"/>
        <files mask="wm_mbedtls_entropy.c"/>
        <files mask="wm_mbedtls_mem.c"/>
        <files mask="wm_mbedtls_net.c"/>
        <files mask="wm_mbedtls_helper_api.c"/>
        <files mask="wm_utils.c"/>
      </source>
      <source relative_path="incl/wmcrypto" type="c_include">
        <files mask="wmcrypto.h"/>
      </source>
      <source relative_path="wmcrypto" type="c_include">
        <files mask="wmcrypto_mem.h"/>
        <files mask="wm_mbedtls_debug.h"/>
        <files mask="wm_mbedtls_entropy.h"/>
        <files mask="wm_mbedtls_mem.h"/>
        <files mask="wm_mbedtls_net.h"/>
        <files mask="wm_mbedtls_helper_api.h"/>
      </source>
      <source relative_path="wmcrypto/aescrypto" type="c_include">
        <files mask="aes.h"/>
        <files mask="aes_siv.h"/>
        <files mask="aes_wrap.h"/>
        <files mask="common.h"/>
        <files mask="crypto.h"/>
        <files mask="includes.h"/>
        <files mask="type_def.h"/>
      </source>
      <source relative_path="wmcrypto/aescrypto" type="src">
        <files mask="aes-siv.c"/>
        <files mask="aes-ctr.c"/>
        <files mask="aes-omac1.c"/>
        <files mask="aes-wrap.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_wmcrypto.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="wmcrypto" type="c_include"/>
        <include_path relative_path="incl/wmcrypto" type="c_include"/>
        <include_path relative_path="wmcrypto/aescrypto" type="c_include"/>
        <include_path relative_path="wmcrypto" type="asm_include"/>
        <include_path relative_path="incl/wmcrypto" type="asm_include"/>
        <include_path relative_path="wmcrypto/aescrypto" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.wmtime.MIMXRT1176" name="wifi_nxp_wmtime" brief="Middlware Wi-Fi WMTIME" version="1.0.0" full_name="NXP Wi-Fi WMTIME" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.MIMXRT1176"/>
          <component_dependency value="middleware.wifi.wifidriver.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="wmtime" type="src">
        <files mask="wmtime.c"/>
      </source>
      <source relative_path="incl" type="c_include">
        <files mask="wmtime.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_wmtime.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="wmtime" type="c_include"/>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="wmtime" type="asm_include"/>
        <include_path relative_path="incl" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.ncp_supp_wmcrypto.MIMXRT1176" name="ncp_supp_wmcrypto" brief="Middlware Wi-Fi NCP_SUPP_WMCRYPTO" version="1.0.0" full_name="NXP Wi-Fi NCP_SUPP_WMCRYPTO" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.MIMXRT1176"/>
          <component_dependency value="middleware.wifi.wifidriver.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="incl/wmcrypto" type="c_include">
        <files mask="wmcrypto.h"/>
      </source>
      <source relative_path="wmcrypto" type="src">
        <files mask="wmcrypto_mem.c"/>
        <files mask="wm_mbedtls_entropy.c"/>
        <files mask="wm_mbedtls_mem.c"/>
        <files mask="wm_mbedtls_net.c"/>
        <files mask="wm_mbedtls_helper_api.c"/>
        <files mask="wm_utils.c"/>
      </source>
      <source relative_path="wmcrypto" type="c_include">
        <files mask="wmcrypto_mem.h"/>
        <files mask="wm_mbedtls_debug.h"/>
        <files mask="wm_mbedtls_entropy.h"/>
        <files mask="wm_mbedtls_mem.h"/>
        <files mask="wm_mbedtls_net.h"/>
        <files mask="wm_mbedtls_helper_api.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_ncp_supp_wmcrypto.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="wmcrypto" type="c_include"/>
        <include_path relative_path="incl/wmcrypto" type="c_include"/>
        <include_path relative_path="wmcrypto" type="asm_include"/>
        <include_path relative_path="incl/wmcrypto" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.wls.MIMXRT1176" name="wifi_nxp_wls" brief="Middlware Wi-Fi Location Service" version="1.3.46" full_name="NXP Wi-Fi WLS" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.MIMXRT1176"/>
          <component_dependency value="middleware.wifi.wifidriver.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="wls" type="c_include">
        <files mask="range_kalman.h"/>
        <files mask="wls_api.h"/>
        <files mask="wls_param_defines.h"/>
        <files mask="wls_processing.h"/>
        <files mask="wls_QR_algorithm.h"/>
        <files mask="wls_radix4Fft.h"/>
        <files mask="wls_structure_defs.h"/>
        <files mask="wls_subspace_processing.h"/>
      </source>
      <source relative_path="wls" type="src">
        <files mask="range_kalman.c"/>
        <files mask="wls_api.c"/>
        <files mask="wls_processing.c"/>
        <files mask="wls_QR_algorithm.c"/>
        <files mask="wls_radix4Fft.c"/>
        <files mask="wls_subspace_processing.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_wls.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="wls" type="c_include"/>
        <include_path relative_path="wls" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.se_hostlib.commonCloudDemos.MIMXRT1176" name="se_hostlib commonCloudDemos" brief="se_hostlib commonCloudDemos" version="1.0.0" full_name="Secure Element" category="Security Host Library/Secure Element" user_visible="false" type="middleware" package_base_path="middleware/se_hostlib" project_base_path="se_hostlib">
      <defines>
        <define name="SSS_USE_FTR_FILE" value=""/>
        <define name="MBEDTLS" value=""/>
        <define name="SDK_OS_FREE_RTOS" value=""/>
        <define name="USE_RTOS" value=""/>
        <define name="mqttconfigENABLE_METRICS" value=""/>
        <define name="SE_CLOUD_MCU_SDK" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.heap_4.MIMXRT1176"/>
          <component_dependency value="middleware.freertos.backoffalgorithm.MIMXRT1176"/>
          <component_dependency value="middleware.freertos.coremqtt.MIMXRT1176"/>
          <component_dependency value="middleware.pkcs11.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="hostlib/hostLib/inc" type="c_include">
        <files mask="ledHandler.h"/>
      </source>
      <source relative_path="hostlib/hostLib/libCommon/infra" type="src">
        <files mask="sm_demo_utils.c"/>
        <files mask="sm_demo_utils_rtos.c"/>
      </source>
      <source relative_path="sss/plugin/pkcs11" type="src">
        <files mask="sss_pkcs11_pal_core.c"/>
        <files mask="sss_pkcs11_pal_helpers.c"/>
        <files mask="sss_pkcs11_pal_object.c"/>
        <files mask="sss_pkcs11_pal_asymm.c"/>
        <files mask="sss_pkcs11_pal_symm.c"/>
        <files mask="sss_pkcs11_utils.c"/>
        <files mask="base64_decode.c"/>
      </source>
      <source relative_path="sss/plugin/pkcs11" type="c_include">
        <files mask="sss_pkcs11_pal.h"/>
        <files mask="nxLog_pkcs11.h"/>
        <files mask="sss_pkcs11_utils.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_se_hostlib_commonCloudDemos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="hostlib/hostLib/inc" type="c_include"/>
        <include_path relative_path="sss/plugin/pkcs11" type="c_include"/>
        <include_path relative_path="hostlib/hostLib/tstUtil" type="c_include"/>
        <include_path relative_path="hostlib/hostLib/inc" type="asm_include"/>
        <include_path relative_path="sss/plugin/pkcs11" type="asm_include"/>
        <include_path relative_path="hostlib/hostLib/tstUtil" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.se_hostlib.commonSe050CloudDemos.MIMXRT1176" name="se_hostlib commonSe050CloudDemos" brief="se_hostlib commonSe050CloudDemos" version="1.0.0" full_name="Secure Element" category="Security Host Library/Secure Element" user_visible="false" type="middleware" package_base_path="middleware/se_hostlib" project_base_path="se_hostlib">
      <dependencies>
        <all>
          <component_dependency value="middleware.se_hostlib.commonCloudDemos.MIMXRT1176"/>
          <component_dependency value="middleware.se_hostlib.commonSe050.MIMXRT1176"/>
          <component_dependency value="middleware.se_hostlib.mbedtls_sss.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_se_hostlib_commonSe050CloudDemos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="sss/inc" type="c_include"/>
        <include_path relative_path="sss/ex/inc" type="c_include"/>
        <include_path relative_path="sss/port/ksdk" type="c_include"/>
        <include_path relative_path="hostlib/hostLib/se05x_03_xx_xx" type="c_include"/>
        <include_path relative_path="sss/plugin/mbedtls" type="c_include"/>
        <include_path relative_path="hostlib/hostLib/tstUtil" type="c_include"/>
        <include_path relative_path="hostlib/hostLib/libCommon/infra" type="c_include"/>
        <include_path relative_path="hostlib/hostLib/libCommon/log" type="c_include"/>
        <include_path relative_path="hostlib/hostLib/mbedtls/inc" type="c_include"/>
        <include_path relative_path="demos/ksdk/common/https_client" type="c_include"/>
        <include_path relative_path="sss/inc" type="asm_include"/>
        <include_path relative_path="sss/ex/inc" type="asm_include"/>
        <include_path relative_path="sss/port/ksdk" type="asm_include"/>
        <include_path relative_path="hostlib/hostLib/se05x_03_xx_xx" type="asm_include"/>
        <include_path relative_path="sss/plugin/mbedtls" type="asm_include"/>
        <include_path relative_path="hostlib/hostLib/tstUtil" type="asm_include"/>
        <include_path relative_path="hostlib/hostLib/libCommon/infra" type="asm_include"/>
        <include_path relative_path="hostlib/hostLib/libCommon/log" type="asm_include"/>
        <include_path relative_path="hostlib/hostLib/mbedtls/inc" type="asm_include"/>
        <include_path relative_path="demos/ksdk/common/https_client" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.se_hostlib.commonSe050.MIMXRT1176" name="se_hostlib commonSe050" brief="se_hostlib commonSe050" version="1.0.0" full_name="Secure Element" category="Security Host Library/Secure Element" user_visible="false" type="middleware" package_base_path="middleware/se_hostlib" project_base_path="se_hostlib">
      <defines>
        <define name="T1oI2C" value=""/>
        <define name="T1oI2C_UM11225" value=""/>
        <define name="SSS_USE_FTR_FILE" value=""/>
        <define name="SDK_DEBUGCONSOLE_UART" value=""/>
        <define name="NO_SECURE_CHANNEL_SUPPORT" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.se_hostlib.commonSe050_CurrentApplet.MIMXRT1176"/>
          <component_dependency value="middleware.se_hostlib.commonSe050_Scp03.MIMXRT1176"/>
          <component_dependency value="middleware.se_hostlib.commonSe050_ksdk.MIMXRT1176"/>
          <component_dependency value="middleware.se_hostlib.commonSe050_sss_ex.MIMXRT1176"/>
          <component_dependency value="middleware.se_hostlib.commonSe050infra.MIMXRT1176"/>
          <component_dependency value="middleware.se_hostlib.commonSe050smCom.MIMXRT1176"/>
          <component_dependency value="middleware.se_hostlib.mwlog.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="EULA.pdf" hidden="true"/>
        <files mask="Third_Party_License.pdf" hidden="true"/>
        <files mask="ChangeLogKSDK.txt"/>
      </source>
      <source relative_path="sss" type="doc">
        <files mask="version_info.txt" hidden="true"/>
      </source>
      <source relative_path="hostlib" type="doc">
        <files mask="version_info.txt" hidden="true"/>
      </source>
      <source relative_path="demos" type="doc">
        <files mask="version_info.txt" hidden="true"/>
      </source>
      <source relative_path="sss/port/ksdk" type="c_include">
        <files mask="fsl_sss_types.h"/>
      </source>
      <source relative_path="hostlib/hostLib/inc" type="c_include">
        <files mask="Applet_SE050_Ver.h"/>
        <files mask="PlugAndTrust_HostLib_Ver.h"/>
        <files mask="PlugAndTrust_Pkg_Ver.h"/>
        <files mask="SE_HAL_Lib.h"/>
        <files mask="ax_api.h"/>
        <files mask="ax_common.h"/>
        <files mask="ax_common_private.h"/>
        <files mask="ax_scp.h"/>
        <files mask="ax_scp_private.h"/>
        <files mask="ax_sss_scp.h"/>
        <files mask="ax_util.h"/>
        <files mask="ledHandler.h"/>
        <files mask="modules.h"/>
        <files mask="nxEnsure.h"/>
        <files mask="nxScp03_Apis.h"/>
        <files mask="nxScp03_Const.h"/>
        <files mask="nxScp03_Types.h"/>
        <files mask="scp.h"/>
        <files mask="se05x_const.h"/>
        <files mask="se05x_ecc_curves.h"/>
        <files mask="se05x_ecc_curves_inc.h"/>
        <files mask="se05x_ecc_curves_values.h"/>
        <files mask="se05x_enums.h"/>
        <files mask="se05x_ftr.h"/>
        <files mask="se05x_tlv.h"/>
        <files mask="sm_const.h"/>
      </source>
      <source relative_path="hostlib/hostLib/se05x/src" type="src">
        <files mask="se05x_ECC_curves.c"/>
        <files mask="se05x_mw.c"/>
        <files mask="se05x_tlv.c"/>
      </source>
      <source relative_path="sss/inc" type="c_include">
        <files mask="fsl_sss_api.h"/>
        <files mask="fsl_sss_api_ver.h"/>
        <files mask="fsl_sss_config.h"/>
        <files mask="fsl_sss_ftr_default.h"/>
        <files mask="fsl_sss_keyid_map.h"/>
        <files mask="fsl_sss_lpc55s_apis.h"/>
        <files mask="fsl_sss_lpc55s_types.h"/>
        <files mask="fsl_sss_mbedtls_apis.h"/>
        <files mask="fsl_sss_mbedtls_types.h"/>
        <files mask="fsl_sss_openssl_apis.h"/>
        <files mask="fsl_sss_openssl_types.h"/>
        <files mask="fsl_sss_policy.h"/>
        <files mask="fsl_sss_se05x_apis.h"/>
        <files mask="fsl_sss_se05x_policy.h"/>
        <files mask="fsl_sss_se05x_scp03.h"/>
        <files mask="fsl_sss_se05x_types.h"/>
        <files mask="fsl_sss_user_apis.h"/>
        <files mask="fsl_sss_user_types.h"/>
        <files mask="fsl_sss_util_asn1_der.h"/>
        <files mask="fsl_sss_util_rsa_sign_utils.h"/>
      </source>
      <source relative_path="sss/src" type="src">
        <files mask="fsl_sss_apis.c"/>
        <files mask="fsl_sss_util_asn1_der.c"/>
        <files mask="fsl_sss_util_rsa_sign_utils.c"/>
      </source>
      <source relative_path="sss/src/se05x" type="src">
        <files mask="fsl_sss_se05x_apis.c"/>
        <files mask="fsl_sss_se05x_eckey.c"/>
        <files mask="fsl_sss_se05x_mw.c"/>
        <files mask="fsl_sss_se05x_policy.c"/>
        <files mask="fsl_sss_se05x_scp03.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_se_hostlib_commonSe050.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="sss/port/ksdk" type="c_include"/>
        <include_path relative_path="hostlib/hostLib/inc" type="c_include"/>
        <include_path relative_path="hostlib/hostLib/se05x/src" type="c_include"/>
        <include_path relative_path="sss/inc" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="platform" type="c_include"/>
        <include_path relative_path="sss/port/ksdk" type="asm_include"/>
        <include_path relative_path="hostlib/hostLib/inc" type="asm_include"/>
        <include_path relative_path="hostlib/hostLib/se05x/src" type="asm_include"/>
        <include_path relative_path="sss/inc" type="asm_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="platform" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.se_hostlib.tstutils.MIMXRT1176" name="se_hostlib tstutils" brief="se_hostlib tstutils" version="1.0.0" full_name="Secure Element" category="Security Host Library/Secure Element" user_visible="false" type="middleware" package_base_path="middleware/se_hostlib" project_base_path="se_hostlib">
      <dependencies>
        <all>
          <component_dependency value="middleware.se_hostlib.tstutils.time.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="hostlib/hostLib/libCommon/infra" type="src">
        <files mask="sm_app_boot.c"/>
        <files mask="sm_demo_utils.c"/>
        <files mask="sm_demo_utils_rtos.c"/>
      </source>
      <source relative_path="hostlib/hostLib/tstUtil" type="src">
        <files mask="tst_sm_util.c"/>
      </source>
      <source relative_path="hostlib/hostLib/tstUtil" type="c_include">
        <files mask="tst_sm_util.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_se_hostlib_tstutils.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="hostlib/hostLib/tstUtil" type="c_include"/>
        <include_path relative_path="hostlib/hostLib/tstUtil" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.se_hostlib.mbedtls_sss.MIMXRT1176" name="se_hostlib mbedtls_sss" brief="se_hostlib mbedtls_sss" version="1.0.0" full_name="Secure Element" category="Security Host Library/Secure Element" user_visible="false" type="middleware" package_base_path="middleware/se_hostlib" project_base_path="se_hostlib">
      <defines>
        <define name="MBEDTLS_CONFIG_FILE" value="'&quot;ksdk_mbedtls_config.h&quot;'"/>
        <define name="MBEDTLS_USER_CONFIG_FILE" value="'&quot;sss_ksdk_mbedtls_config.h&quot;'"/>
        <define name="MBEDTLS" value=""/>
        <define name="SCP_MODE" value="C_MAC_C_ENC_R_MAC_R_ENC"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.se_hostlib.commonSe050.MIMXRT1176"/>
          <component_dependency value="middleware.se_hostlib.mbedtls_alt_demo_common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="sss/plugin/mbedtls" type="src">
        <files mask="ecdh_alt.c"/>
        <files mask="ecdh_alt_ax.c"/>
        <files mask="ecdsa_verify_alt.c"/>
        <files mask="ecp_alt_sss.c"/>
        <files mask="rsa_alt.c"/>
        <files mask="sss_mbedtls.c"/>
        <files mask="sss_mbedtls_rsa.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_se_hostlib_mbedtls_sss.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="sss/plugin/mbedtls" type="c_include"/>
        <include_path relative_path="sss/port/ksdk" type="c_include"/>
        <include_path relative_path="sss/plugin/mbedtls" type="asm_include"/>
        <include_path relative_path="sss/port/ksdk" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.se_hostlib.mbedtls_sss_mcx.MIMXRT1176" name="se_hostlib mbedtls_sss_mcx" brief="se_hostlib sss_mcx" version="1.0.0" full_name="Secure Element" category="Security Host Library/Secure Element" user_visible="false" type="middleware" package_base_path="middleware/se_hostlib" project_base_path="se_hostlib">
      <defines>
        <define name="MBEDTLS_CONFIG_FILE" value="'&quot;els_pkc_mbedtls_config.h&quot;'"/>
        <define name="MBEDTLS" value=""/>
        <define name="SCP_MODE" value="C_MAC_C_ENC_R_MAC_R_ENC"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.se_hostlib.commonSe050.MIMXRT1176"/>
          <component_dependency value="middleware.se_hostlib.commonSe050_sss_ex.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="sss/src/mbedtls" type="src">
        <files mask="fsl_sss_mbedtls_apis.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_se_hostlib_mbedtls_sss_mcx.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.se_hostlib.sss_mcxa.MIMXRT1176" name="se_hostlib mbedtls_sss_mcxa" brief="se_hostlib sss_mcxa" version="1.0.0" full_name="Secure Element" category="Security Host Library/Secure Element" user_visible="false" type="middleware" package_base_path="middleware/se_hostlib" project_base_path="se_hostlib">
      <defines>
        <define name="SCP_MODE" value="C_MAC_C_ENC_R_MAC_R_ENC"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.se_hostlib.commonSe050_mcxa.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_se_hostlib_sss_mcxa.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.se_hostlib.commonSe050_mcxa.MIMXRT1176" name="se_hostlib mbedtls_sss_mcxa" brief="se_hostlib commonSe050_mcxa" version="1.0.0" full_name="Secure Element" category="Security Host Library/Secure Element" user_visible="false" type="middleware" package_base_path="middleware/se_hostlib" project_base_path="se_hostlib">
      <defines>
        <define name="T1oI2C" value=""/>
        <define name="T1oI2C_UM11225" value=""/>
        <define name="SSS_USE_FTR_FILE" value=""/>
        <define name="SDK_DEBUGCONSOLE_UART" value=""/>
        <define name="NO_SECURE_CHANNEL_SUPPORT" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.se_hostlib.commonSe050_CurrentApplet.MIMXRT1176"/>
          <component_dependency value="middleware.se_hostlib.commonSe050_ksdk.MIMXRT1176"/>
          <component_dependency value="middleware.se_hostlib.commonSe050_sss_ex.MIMXRT1176"/>
          <component_dependency value="middleware.se_hostlib.commonSe050infra.MIMXRT1176"/>
          <component_dependency value="middleware.se_hostlib.commonSe050smCom.MIMXRT1176"/>
          <component_dependency value="middleware.se_hostlib.mwlog.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
      </source>
      <source relative_path="sss/port/ksdk" type="c_include">
        <files mask="fsl_sss_types.h"/>
      </source>
      <source relative_path="hostlib/hostLib/inc" type="c_include">
        <files mask="Applet_SE050_Ver.h"/>
        <files mask="PlugAndTrust_HostLib_Ver.h"/>
        <files mask="PlugAndTrust_Pkg_Ver.h"/>
        <files mask="SE_HAL_Lib.h"/>
        <files mask="ax_api.h"/>
        <files mask="ax_common.h"/>
        <files mask="ax_common_private.h"/>
        <files mask="ax_scp.h"/>
        <files mask="ax_scp_private.h"/>
        <files mask="ax_sss_scp.h"/>
        <files mask="ax_util.h"/>
        <files mask="ledHandler.h"/>
        <files mask="modules.h"/>
        <files mask="nxEnsure.h"/>
        <files mask="nxScp03_Apis.h"/>
        <files mask="nxScp03_Const.h"/>
        <files mask="nxScp03_Types.h"/>
        <files mask="scp.h"/>
        <files mask="se05x_const.h"/>
        <files mask="se05x_ecc_curves.h"/>
        <files mask="se05x_ecc_curves_inc.h"/>
        <files mask="se05x_ecc_curves_values.h"/>
        <files mask="se05x_enums.h"/>
        <files mask="se05x_ftr.h"/>
        <files mask="se05x_tlv.h"/>
        <files mask="sm_const.h"/>
      </source>
      <source relative_path="hostlib/hostLib/se05x/src" type="src">
        <files mask="se05x_ECC_curves.c"/>
        <files mask="se05x_mw.c"/>
        <files mask="se05x_tlv.c"/>
      </source>
      <source relative_path="sss/inc" type="c_include">
        <files mask="fsl_sss_api.h"/>
        <files mask="fsl_sss_api_ver.h"/>
        <files mask="fsl_sss_config.h"/>
        <files mask="fsl_sss_ftr_default.h"/>
        <files mask="fsl_sss_keyid_map.h"/>
        <files mask="fsl_sss_lpc55s_apis.h"/>
        <files mask="fsl_sss_lpc55s_types.h"/>
        <files mask="fsl_sss_mbedtls_apis.h"/>
        <files mask="fsl_sss_mbedtls_types.h"/>
        <files mask="fsl_sss_openssl_apis.h"/>
        <files mask="fsl_sss_openssl_types.h"/>
        <files mask="fsl_sss_policy.h"/>
        <files mask="fsl_sss_se05x_apis.h"/>
        <files mask="fsl_sss_se05x_policy.h"/>
        <files mask="fsl_sss_se05x_scp03.h"/>
        <files mask="fsl_sss_se05x_types.h"/>
        <files mask="fsl_sss_user_apis.h"/>
        <files mask="fsl_sss_user_types.h"/>
        <files mask="fsl_sss_util_asn1_der.h"/>
        <files mask="fsl_sss_util_rsa_sign_utils.h"/>
      </source>
      <source relative_path="sss/src" type="src">
        <files mask="fsl_sss_apis.c"/>
        <files mask="fsl_sss_util_asn1_der.c"/>
        <files mask="fsl_sss_util_rsa_sign_utils.c"/>
      </source>
      <source relative_path="sss/src/se05x" type="src">
        <files mask="fsl_sss_se05x_apis.c"/>
        <files mask="fsl_sss_se05x_eckey.c"/>
        <files mask="fsl_sss_se05x_mw.c"/>
        <files mask="fsl_sss_se05x_policy.c"/>
        <files mask="fsl_sss_se05x_scp03.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_se_hostlib_commonSe050_mcxa.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="sss/port/ksdk" type="c_include"/>
        <include_path relative_path="hostlib/hostLib/inc" type="c_include"/>
        <include_path relative_path="hostlib/hostLib/se05x/src" type="c_include"/>
        <include_path relative_path="sss/inc" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="platform" type="c_include"/>
        <include_path relative_path="sss/port/ksdk" type="asm_include"/>
        <include_path relative_path="hostlib/hostLib/inc" type="asm_include"/>
        <include_path relative_path="hostlib/hostLib/se05x/src" type="asm_include"/>
        <include_path relative_path="sss/inc" type="asm_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="platform" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.pd.MIMXRT1176" name="PD Stack" brief="Middleware usb_pd" version="2.11.0" full_name="USB Type-C PD Stack" category="USB/USB Type-C PD Stack" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.pd.phy.ptn5110.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="pd" type="c_include">
        <files mask="usb_pd.h"/>
        <files mask="usb_pd_interface.h"/>
        <files mask="usb_pd_phy.h"/>
        <files mask="usb_pd_spec.h"/>
        <files mask="usb_pd_timer.h"/>
        <files mask="usb_pd_auto_policy.h"/>
      </source>
      <source relative_path="pd" type="src">
        <files mask="usb_pd_connect.c"/>
        <files mask="usb_pd_interface.c"/>
        <files mask="usb_pd_msg.c"/>
        <files mask="usb_pd_policy.c"/>
        <files mask="usb_pd_timer.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_pd.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="pd" type="c_include"/>
        <include_path relative_path="pd" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.pd.altmode.MIMXRT1176" name="PD Alternate Mode" brief="Middleware usb_pd altmode" version="2.11.0" full_name="USB Type-C PD Alternate Mode" category="USB/USB Type-C PD Stack" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.pd.MIMXRT1176"/>
          <component_dependency value="middleware.usb.pd.phy.ptn5110.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="pd/alt_mode" type="src">
        <files mask="usb_pd_alt_mode.c"/>
        <files mask="usb_pd_alt_mode_dp.c"/>
      </source>
      <source relative_path="pd/alt_mode" type="c_include">
        <files mask="usb_pd_alt_mode.h"/>
        <files mask="usb_pd_alt_mode_dp.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_pd_altmode.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="pd/alt_mode" type="c_include"/>
        <include_path relative_path="pd/alt_mode" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.pd.phy.ptn5110.MIMXRT1176" name="PD PTN5110 Driver" brief="Middleware usb_pd phy ptn5110" version="2.11.0" full_name="USB Type-C PD Stack" category="USB/USB PD PHY" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.igpio.MIMXRT1176"/>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1176"/>
          <component_dependency value="component.i2c_adapter_interface.MIMXRT1176"/>
          <component_dependency value="middleware.usb.common_header.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="pd/ptn5110" type="c_include">
        <files mask="usb_pd_ptn5110.h"/>
        <files mask="usb_pd_ptn5110_register.h"/>
      </source>
      <source relative_path="pd/ptn5110" type="src">
        <files mask="usb_pd_ptn5110_connect.c"/>
        <files mask="usb_pd_ptn5110_hal.c"/>
        <files mask="usb_pd_ptn5110_interface.c"/>
        <files mask="usb_pd_ptn5110_msg.c"/>
      </source>
      <source relative_path="pd" type="src">
        <files mask="usb_pd_timer.c"/>
      </source>
      <source relative_path="pd/phy_interface" type="c_include">
        <files mask="usb_pd_i2c.h"/>
      </source>
      <source relative_path="pd/phy_interface" type="src">
        <files mask="usb_pd_i2c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_pd_phy_ptn5110.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="pd" type="c_include"/>
        <include_path relative_path="pd/ptn5110" type="c_include"/>
        <include_path relative_path="pd/phy_interface" type="c_include"/>
        <include_path relative_path="pd" type="asm_include"/>
        <include_path relative_path="pd/ptn5110" type="asm_include"/>
        <include_path relative_path="pd/phy_interface" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.pd.compliance_test_report.MIMXRT1176" name="PD Compliance Test Report" brief="Middleware usb_pd compliance_test_report" version="2.11.0" full_name="USB Type-C PD Stack" category="USB/USB Type-C PD Stack" user_visible="false" type="middleware" package_base_path="middleware/usb" project_base_path="./">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.pd.phy.ptn5110.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="pd/compliance_test_report/ellisys/consumer_provider" type="doc">
        <files mask="USB Compliance Report.html"/>
      </source>
      <source relative_path="pd/compliance_test_report/ellisys/drp" type="doc">
        <files mask="USB Compliance Report.html"/>
      </source>
      <source relative_path="pd/compliance_test_report/ellisys/drp_try_snk" type="doc">
        <files mask="USB Compliance Report.html"/>
      </source>
      <source relative_path="pd/compliance_test_report/ellisys/drp_try_src" type="doc">
        <files mask="USB Compliance Report.html"/>
      </source>
      <source relative_path="pd/compliance_test_report/ellisys/provider_consumer" type="doc">
        <files mask="USB Compliance Report.html"/>
      </source>
      <source relative_path="pd/compliance_test_report/ellisys/displayport_dock" type="doc">
        <files mask="USB Compliance Report.html"/>
      </source>
      <source relative_path="pd/compliance_test_report/ellisys/displayport_host" type="doc">
        <files mask="USB Compliance Report.html"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_pd_compliance_test_report.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.usb.common_header.MIMXRT1176" name="USB Common Header" brief="Middleware usb common_header" version="2.11.0" full_name="USB Common Header" category="USB/USB Common Header" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="platform.drivers.memory.MIMXRT1176"/>
              <device_dependency value="MIMXRT1176xxxxx"/>
            </all>
            <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          </any_of>
          <component_dependency value="component.osa.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="include" type="c_include">
        <files mask="usb.h"/>
        <files mask="usb_misc.h"/>
        <files mask="usb_spec.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_common_header.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.common_header.MIMXRT1176" name="USB Device Common Header" brief="Middleware usb device common_header" version="2.11.0" full_name="USB Device Common Header" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="device" type="c_include">
        <files mask="usb_device.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_common_header.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device" type="c_include"/>
        <include_path relative_path="device" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device_controller_ehci.MIMXRT1176" name="USB Device EHCI Controller Driver(HS)" brief="Middleware usb device ehci" version="2.11.0" full_name="USB Device EHCI Controller Driver(HS)" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.device.controller.driver.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="device" type="src">
        <files mask="usb_device_ehci.c"/>
      </source>
      <source relative_path="device" type="c_include">
        <files mask="usb_device_ehci.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_ehci.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device" type="c_include"/>
        <include_path relative_path="device" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.controller.driver.MIMXRT1176" name="USB Device Common Controller" brief="Middleware usb device controller driver" version="2.11.0" full_name="USB Device Common Controller" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.device.stack.MIMXRT1176"/>
          <component_dependency value="middleware.usb.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="device" type="src">
        <files mask="usb_device_dci.c"/>
      </source>
      <source relative_path="device" type="c_include">
        <files mask="usb_device_dci.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_controller_driver.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device" type="c_include"/>
        <include_path relative_path="device" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.stack.MIMXRT1176" name="USB Device Stack" brief="Middleware usb device stack" version="2.11.0" full_name="USB Device Stack" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.device.controller.driver.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="device" type="src">
        <files mask="usb_device_ch9.c"/>
      </source>
      <source relative_path="device" type="c_include">
        <files mask="usb_device_ch9.h"/>
      </source>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_class.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_class.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_stack.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device" type="c_include"/>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device" type="asm_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.audio.MIMXRT1176" name="USB Device Audio" brief="Middleware usb device audio" version="2.11.0" full_name="USB Device Audio" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_audio.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_audio.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_audio.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.cdc.MIMXRT1176" name="USB Device CDC" brief="Middleware usb device cdc" version="2.11.0" full_name="USB Device CDC" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_cdc_acm.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_cdc_acm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_cdc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.cdc.ecm.MIMXRT1176" name="USB Device CDC ECM" brief="Middleware usb device cdc ecm" version="2.11.0" full_name="USB Device CDC ECM" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_cdc_ecm.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_cdc_ecm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_cdc_ecm.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.cdc.rndis.MIMXRT1176" name="USB Device CDC RNDIS" brief="Middleware usb device cdc rndis" version="2.11.0" full_name="USB Device CDC RNDIS" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.device.cdc.MIMXRT1176"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_cdc_rndis.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_cdc_rndis.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_cdc_rndis.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.hid.MIMXRT1176" name="USB Device HID" brief="Middleware usb device hid" version="2.11.0" full_name="USB Device HID" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_hid.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_hid.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_hid.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.dfu.MIMXRT1176" name="USB Device DFU" brief="Middleware usb device dfu" version="2.11.0" full_name="USB Device DFU" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_dfu.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_dfu.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_dfu.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.msd.MIMXRT1176" name="USB Device MSD" brief="Middleware usb device msd" version="2.11.0" full_name="USB Device MSD" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_msc.c"/>
        <files mask="usb_device_msc_ufi.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_msc.h"/>
        <files mask="usb_device_msc_ufi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_msd.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.mtp.MIMXRT1176" name="USB Device MTP" brief="Middleware usb device mtp" version="2.11.0" full_name="USB Device MTP" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_mtp.c"/>
        <files mask="usb_device_mtp_operation.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_mtp.h"/>
        <files mask="usb_device_mtp_operation.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_mtp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.phdc.MIMXRT1176" name="USB Device PHDC" brief="Middleware usb device phdc" version="2.11.0" full_name="USB Device PHDC" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_phdc.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_phdc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_phdc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.video.MIMXRT1176" name="USB Device Video" brief="Middleware usb device video" version="2.11.0" full_name="USB Device Video" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_video.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_video.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_video.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.ccid.MIMXRT1176" name="USB Device CCID" brief="Middleware usb device ccid" version="2.11.0" full_name="USB Device CCID" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_ccid.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_ccid.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_ccid.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.printer.MIMXRT1176" name="USB Device Printer" brief="Middleware usb device printer" version="2.11.0" full_name="USB Device Printer" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_printer.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_printer.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_printer.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.phy.MIMXRT1176" name="USB PHY" brief="Middleware usb phy" version="2.11.0" full_name="USB PHY" category="USB/USB PHY" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="phy" type="src">
        <files mask="usb_phy.c"/>
      </source>
      <source relative_path="phy" type="c_include">
        <files mask="usb_phy.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_phy.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="phy" type="c_include"/>
        <include_path relative_path="phy" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.hsdcd.MIMXRT1176" name="USB HSDCD" brief="Middleware usb HSDCD (Select manually if needed)" version="2.11.0" full_name="USB HSDCD" category="USB/USB DCD" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="dcd" type="src">
        <files mask="usb_hsdcd.c"/>
      </source>
      <source relative_path="dcd" type="c_include">
        <files mask="usb_hsdcd.h"/>
        <files mask="usb_charger_detect.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_hsdcd.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="dcd" type="c_include"/>
        <include_path relative_path="dcd" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host.common_header.MIMXRT1176" name="USB Host Common Header" brief="Middleware usb host common_header" version="2.11.0" full_name="USB Host Common Header" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="host" type="c_include">
        <files mask="usb_host.h"/>
        <files mask="usb_host_hci.h"/>
        <files mask="usb_host_devices.h"/>
        <files mask="usb_host_framework.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_common_header.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host" type="c_include"/>
        <include_path relative_path="host" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_controller_ehci.MIMXRT1176" name="USB Host EHCI Controller Driver(HS)" brief="Middleware usb host ehci" version="2.11.0" full_name="USB Host EHCI Controller Driver(HS)" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="host" type="src">
        <files mask="usb_host_ehci.c"/>
      </source>
      <source relative_path="host" type="c_include">
        <files mask="usb_host_ehci.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_ehci.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host" type="c_include"/>
        <include_path relative_path="host" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host.stack.MIMXRT1176" name="USB Host Stack" brief="Middleware usb host stack" version="2.11.0" full_name="USB Host Stack" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="host" type="src">
        <files mask="usb_host_hci.c"/>
        <files mask="usb_host_devices.c"/>
        <files mask="usb_host_framework.c"/>
      </source>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_hub.c"/>
        <files mask="usb_host_hub_app.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_hub.h"/>
        <files mask="usb_host_hub_app.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_stack.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host" type="c_include"/>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host" type="asm_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_audio.MIMXRT1176" name="USB Host Audio" brief="Middleware usb host audio" version="2.11.0" full_name="USB Host Audio" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_audio.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_audio.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_audio.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_cdc.MIMXRT1176" name="USB Host CDC" brief="Middleware usb host cdc" version="2.11.0" full_name="USB Host CDC" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_cdc.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_cdc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_cdc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_cdc_ecm.MIMXRT1176" name="USB Host CDC ECM" brief="Middleware usb host cdc_ecm" version="2.11.0" full_name="USB Host CDC ECM" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.host_cdc.MIMXRT1176"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_cdc_ecm.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_cdc_ecm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_cdc_ecm.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_cdc_rndis.MIMXRT1176" name="USB Host CDC RNDIS" brief="Middleware usb host cdc_rndis" version="2.11.0" full_name="USB Host CDC RNDIS" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.host_cdc.MIMXRT1176"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_cdc_rndis.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_cdc_rndis.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_cdc_rndis.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_hid.MIMXRT1176" name="USB Host HID" brief="Middleware usb host hid" version="2.11.0" full_name="USB Host HID" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_hid.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_hid.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_hid.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_msd.MIMXRT1176" name="USB Host MSD" brief="Middleware usb host msd" version="2.11.0" full_name="USB Host MSD" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_msd.c"/>
        <files mask="usb_host_msd_ufi.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_msd.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_msd.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_video.MIMXRT1176" name="USB Host Video" brief="Middleware usb host video" version="2.11.0" full_name="USB Host Video" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_video.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_video.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_video.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_phdc.MIMXRT1176" name="USB Host PHDC" brief="Middleware usb host phdc" version="2.11.0" full_name="USB Host PHDC" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_phdc.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_phdc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_phdc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_printer.MIMXRT1176" name="USB Host Printer" brief="Middleware usb host printer" version="2.11.0" full_name="USB Host Printer" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_printer.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_printer.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_printer.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.soem.enet.MIMXRT1176" name="soem enet" brief="SOEM ENET" version="1.0.0" full_name="SOEM ENET" category="SOEM/component" user_visible="false" type="middleware" package_base_path="middleware/soem" project_base_path="soem">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="oshw/mcux-sdk" type="src">
        <files mask="nicdrv.c"/>
      </source>
      <source relative_path="oshw/mcux-sdk/enet" type="c_include">
        <files mask="soem_enet.h"/>
        <files mask="enet.h"/>
      </source>
      <source relative_path="oshw/mcux-sdk/enet" type="src">
        <files mask="enet.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_soem_enet.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="oshw/mcux-sdk" type="c_include"/>
        <include_path relative_path="oshw/mcux-sdk/enet" type="c_include"/>
        <include_path relative_path="oshw/mcux-sdk" type="asm_include"/>
        <include_path relative_path="oshw/mcux-sdk/enet" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.soem.netc.MIMXRT1176" name="soem netc" brief="SOEM NETC" version="1.0.0" full_name="SOEM NETC" category="SOEM/component" user_visible="false" type="middleware" package_base_path="middleware/soem" project_base_path="soem">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="oshw/mcux-sdk" type="src">
        <files mask="nicdrv.c"/>
      </source>
      <source relative_path="oshw/mcux-sdk/netc_ep" type="c_include">
        <files mask="soem_netc_ep.h"/>
        <files mask="netc_ep.h"/>
      </source>
      <source relative_path="oshw/mcux-sdk/netc_ep" type="src">
        <files mask="netc_ep.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_soem_netc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="oshw/mcux-sdk" type="c_include"/>
        <include_path relative_path="oshw/mcux-sdk/netc_ep" type="c_include"/>
        <include_path relative_path="oshw/mcux-sdk" type="asm_include"/>
        <include_path relative_path="oshw/mcux-sdk/netc_ep" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.soem.freertos.MIMXRT1176" name="soem" brief="Simple Open EtherCAT Master Library" version="1.4.0" full_name="SOEM" category="SOEM/component" user_visible="true" type="middleware" package_base_path="middleware/soem" project_base_path="soem">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="LICENSE" hidden="true"/>
        <files mask="README.md" hidden="true"/>
      </source>
      <source relative_path="soem" type="c_include">
        <files mask="ethercat.h"/>
        <files mask="ethercatbase.h"/>
        <files mask="ethercatcoe.h"/>
        <files mask="ethercatconfig.h"/>
        <files mask="ethercatconfiglist.h"/>
        <files mask="ethercatdc.h"/>
        <files mask="ethercateoe.h"/>
        <files mask="ethercatfoe.h"/>
        <files mask="ethercatmain.h"/>
        <files mask="ethercatprint.h"/>
        <files mask="ethercatsoe.h"/>
        <files mask="ethercattype.h"/>
      </source>
      <source relative_path="soem" type="src">
        <files mask="ethercatbase.c"/>
        <files mask="ethercatcoe.c"/>
        <files mask="ethercatconfig.c"/>
        <files mask="ethercatdc.c"/>
        <files mask="ethercateoe.c"/>
        <files mask="ethercatfoe.c"/>
        <files mask="ethercatmain.c"/>
        <files mask="ethercatprint.c"/>
        <files mask="ethercatsoe.c"/>
      </source>
      <source relative_path="oshw/mcux-sdk" type="c_include">
        <files mask="nicdrv.h"/>
        <files mask="oshw.h"/>
        <files mask="soem_port.h"/>
      </source>
      <source relative_path="oshw/mcux-sdk" type="src">
        <files mask="oshw.c"/>
        <files mask="soem_port.c"/>
      </source>
      <source relative_path="osal" type="c_include">
        <files mask="osal.h"/>
      </source>
      <source relative_path="osal/freertos" type="src">
        <files mask="osal.c"/>
      </source>
      <source relative_path="osal/freertos" type="c_include">
        <files mask="osal_defs.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_soem_freertos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="soem" type="c_include"/>
        <include_path relative_path="oshw/mcux-sdk" type="c_include"/>
        <include_path relative_path="osal" type="c_include"/>
        <include_path relative_path="osal/freertos" type="c_include"/>
        <include_path relative_path="soem" type="asm_include"/>
        <include_path relative_path="oshw/mcux-sdk" type="asm_include"/>
        <include_path relative_path="osal" type="asm_include"/>
        <include_path relative_path="osal/freertos" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.osa.freertos.MIMXRT1176" name="sdmmc_osa" brief="Middleware sdmmc osa" version="2.3.0" full_name="SDMMC osa stack" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="osa" type="c_include">
        <files mask="fsl_sdmmc_osa.h"/>
      </source>
      <source relative_path="osa" type="src">
        <files mask="fsl_sdmmc_osa.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_osa.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="osa" type="c_include"/>
        <include_path relative_path="osa" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.sd.MIMXRT1176" name="sd" brief="Middleware sdmmc sd" version="2.4.1" full_name="SDMMC sd stack" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <defines>
        <define name="SD_ENABLED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="sd" type="src">
        <files mask="fsl_sd.c"/>
      </source>
      <source relative_path="sd" type="c_include">
        <files mask="fsl_sd.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_sd.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="sd" type="c_include"/>
        <include_path relative_path="sd" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.mmc.MIMXRT1176" name="mmc" brief="Middleware sdmmc mmc" version="2.5.1" full_name="SDMMC mmc stack" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <defines>
        <define name="MMC_ENABLED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="mmc" type="src">
        <files mask="fsl_mmc.c"/>
      </source>
      <source relative_path="mmc" type="c_include">
        <files mask="fsl_mmc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_mmc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="mmc" type="c_include"/>
        <include_path relative_path="mmc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.sdio.MIMXRT1176" name="sdio" brief="Middleware sdmmc sdio" version="2.4.1" full_name="SDMMC sdio stack" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <defines>
        <define name="SDIO_ENABLED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="sdio" type="src">
        <files mask="fsl_sdio.c"/>
      </source>
      <source relative_path="sdio" type="c_include">
        <files mask="fsl_sdio.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_sdio.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="sdio" type="c_include"/>
        <include_path relative_path="sdio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.sdspi.MIMXRT1176" name="sdspi" brief="Middleware sdmmc sdspi" version="2.2.1" full_name="SDMMC sdspi stack" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <defines>
        <define name="SDSPI_ENABLED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="sdspi" type="src">
        <files mask="fsl_sdspi.c"/>
      </source>
      <source relative_path="sdspi" type="c_include">
        <files mask="fsl_sdspi.h"/>
      </source>
      <source relative_path="common" type="c_include">
        <files mask="fsl_sdmmc_spec.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_sdspi.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="sdspi" type="c_include"/>
        <include_path relative_path="common" type="c_include"/>
        <include_path relative_path="sdspi" type="asm_include"/>
        <include_path relative_path="common" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.host.usdhc.MIMXRT1176" name="sdmmc_host_usdhc" brief="Middleware sdmmc host usdhc" version="2.6.3" full_name="Middleware sdmmc host usdhc" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.sdmmc.host.usdhc.polling.MIMXRT1176"/>
            <component_dependency value="middleware.sdmmc.host.usdhc.non_blocking.MIMXRT1176"/>
          </any_of>
          <component_dependency value="platform.drivers.usdhc.MIMXRT1176"/>
          <component_dependency value="middleware.sdmmc.common.MIMXRT1176"/>
          <component_dependency value="middleware.sdmmc.osa.freertos.MIMXRT1176"/>
          <component_dependency value="middleware.sdmmc.usdhc.template.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="host/usdhc" type="c_include">
        <files mask="fsl_sdmmc_host.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_host_usdhc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/usdhc" type="c_include"/>
        <include_path relative_path="host/usdhc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.host.usdhc.non_blocking.MIMXRT1176" name="sdmmc_host_usdhc_non_blocking" brief="Middleware sdmmc host usdhc non_blocking" version="2.6.3" full_name="Middleware sdmmc host usdhc non_blocking" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.host.usdhc.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="host/usdhc/non_blocking" type="src">
        <files mask="fsl_sdmmc_host.c"/>
      </source>
      <source relative_path="host/usdhc" type="c_include">
        <files mask="fsl_sdmmc_host.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_host_usdhc_non_blocking.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/usdhc" type="c_include"/>
        <include_path relative_path="host/usdhc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.host.usdhc.polling.MIMXRT1176" name="sdmmc_host_usdhc_blocking" brief="Middleware sdmmc host usdhc blocking" version="2.6.3" full_name="Middleware sdmmc host usdhc blocking" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.host.usdhc.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="host/usdhc/blocking" type="src">
        <files mask="fsl_sdmmc_host.c"/>
      </source>
      <source relative_path="host/usdhc" type="c_include">
        <files mask="fsl_sdmmc_host.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_host_usdhc_blocking.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/usdhc" type="c_include"/>
        <include_path relative_path="host/usdhc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.rtcesl.cm4f.MIMXRT1176" name="Real Time Control Embedded Software Motor Control and Power Conversion Libraries" brief="Real Time Control Embedded Software Library for CM4F core" version="4.8" full_name="Middleware rtcesl cm4f" category="RTCESL/Cortex-M" user_visible="true" type="middleware" package_base_path="middleware/rtcesl" project_base_path="rtcesl">
      <dependencies>
        <all>
          <device_dependency value="MIMXRT1176xxxxx"/>
          <device_core_dependency value="cm4_MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="iar" relative_path="CM4F_RTCESL_4.8_IAR/AMCLIB/Include" type="c_include" device_cores="cm4_MIMXRT1176xxxxx" fpu="true">
        <files mask="amclib.h"/>
        <files mask="AMCLIB_ACIMCtrlMTPA_FLT.h"/>
        <files mask="AMCLIB_ACIMRotFluxObsrv_FLT.h"/>
        <files mask="AMCLIB_ACIMSpeedMRAS_FLT.h"/>
        <files mask="AMCLIB_AngleTrackObsrv_F32.h"/>
        <files mask="AMCLIB_AngleTrackObsrv_FLT.h"/>
        <files mask="AMCLIB_CtrlFluxWkng_A32.h"/>
        <files mask="AMCLIB_CtrlFluxWkng_FLT.h"/>
        <files mask="amclib_FP.h"/>
        <files mask="AMCLIB_PMSMBemfObsrvAB_A32.h"/>
        <files mask="AMCLIB_PMSMBemfObsrvAB_FLT.h"/>
        <files mask="AMCLIB_PMSMBemfObsrvDQ_A32.h"/>
        <files mask="AMCLIB_PMSMBemfObsrvDQ_FLT.h"/>
        <files mask="AMCLIB_TrackObsrv_F32.h"/>
        <files mask="AMCLIB_TrackObsrv_FLT.h"/>
        <files mask="amclib_types.h"/>
      </source>
      <source toolchain="iar" relative_path="CM4F_RTCESL_4.8_IAR/GDFLIB/Include" type="c_include" device_cores="cm4_MIMXRT1176xxxxx" fpu="true">
        <files mask="gdflib.h"/>
        <files mask="GDFLIB_FilterExp_F32.h"/>
        <files mask="GDFLIB_FilterExp_FLT.h"/>
        <files mask="GDFLIB_FilterIIR1_F32.h"/>
        <files mask="GDFLIB_FilterIIR1_F32_Asmi.h"/>
        <files mask="GDFLIB_FilterIIR1_FLT.h"/>
        <files mask="GDFLIB_FilterIIR2_F32.h"/>
        <files mask="GDFLIB_FilterIIR2_FLT.h"/>
        <files mask="GDFLIB_FilterIIR3_F32.h"/>
        <files mask="GDFLIB_FilterIIR3_FLT.h"/>
        <files mask="GDFLIB_FilterIIR4_F32.h"/>
        <files mask="GDFLIB_FilterIIR4_FLT.h"/>
        <files mask="GDFLIB_FilterMA_A32.h"/>
        <files mask="GDFLIB_FilterMA_FLT.h"/>
        <files mask="gdflib_FP.h"/>
        <files mask="gdflib_types.h"/>
      </source>
      <source toolchain="iar" relative_path="CM4F_RTCESL_4.8_IAR/GFLIB/Include" type="c_include" device_cores="cm4_MIMXRT1176xxxxx" fpu="true">
        <files mask="gflib.h"/>
        <files mask="GFLIB_Acos_F16.h"/>
        <files mask="GFLIB_Acos_FLT.h"/>
        <files mask="GFLIB_Asin_F16.h"/>
        <files mask="GFLIB_Asin_FLT.h"/>
        <files mask="GFLIB_Atan_F32.h"/>
        <files mask="GFLIB_Atan_FLT.h"/>
        <files mask="GFLIB_AtanYX_F16.h"/>
        <files mask="GFLIB_AtanYX_FLT.h"/>
        <files mask="GFLIB_CtrlBetaIPDp_A32.h"/>
        <files mask="GFLIB_CtrlBetaIPDp_FLT.h"/>
        <files mask="GFLIB_CtrlBetaIPp_A32.h"/>
        <files mask="GFLIB_CtrlBetaIPp_FLT.h"/>
        <files mask="GFLIB_CtrlPIDp_A32.h"/>
        <files mask="GFLIB_CtrlPIDp_FLT.h"/>
        <files mask="GFLIB_CtrlPIp_A32.h"/>
        <files mask="GFLIB_CtrlPIp_FLT.h"/>
        <files mask="GFLIB_DFlexRamp_A32.h"/>
        <files mask="GFLIB_DFlexRamp_FLT.h"/>
        <files mask="GFLIB_DRamp_F16.h"/>
        <files mask="GFLIB_DRamp_F32.h"/>
        <files mask="GFLIB_DRamp_FLT.h"/>
        <files mask="GFLIB_FlexRamp_A32.h"/>
        <files mask="GFLIB_FlexRamp_FLT.h"/>
        <files mask="GFLIB_FlexSRamp_A32.h"/>
        <files mask="GFLIB_FlexSRamp_FLT.h"/>
        <files mask="gflib_FP.h"/>
        <files mask="GFLIB_Hyst_F16_Asmi.h"/>
        <files mask="GFLIB_Hyst_FLT.h"/>
        <files mask="GFLIB_Integrator_A32.h"/>
        <files mask="GFLIB_Integrator_FLT.h"/>
        <files mask="GFLIB_Limit_F16.h"/>
        <files mask="GFLIB_Limit_F32.h"/>
        <files mask="GFLIB_Limit_FLT.h"/>
        <files mask="GFLIB_LowerLimit_F16.h"/>
        <files mask="GFLIB_LowerLimit_F32.h"/>
        <files mask="GFLIB_LowerLimit_FLT.h"/>
        <files mask="GFLIB_Lut_F16_Asmi.h"/>
        <files mask="GFLIB_Lut_F32.h"/>
        <files mask="GFLIB_Lut_FLT.h"/>
        <files mask="GFLIB_LutPer_F16_Asmi.h"/>
        <files mask="GFLIB_LutPer_F32.h"/>
        <files mask="GFLIB_LutPer_FLT.h"/>
        <files mask="GFLIB_Ramp_F16.h"/>
        <files mask="GFLIB_Ramp_F32.h"/>
        <files mask="GFLIB_Ramp_FLT.h"/>
        <files mask="GFLIB_SinCos_F32.h"/>
        <files mask="GFLIB_SinCos_FLT.h"/>
        <files mask="GFLIB_Sqrt_F16.h"/>
        <files mask="GFLIB_Sqrt_F32.h"/>
        <files mask="GFLIB_Sqrt_FLT_Asmi.h"/>
        <files mask="GFLIB_Tan_F32.h"/>
        <files mask="GFLIB_Tan_FLT.h"/>
        <files mask="gflib_types.h"/>
        <files mask="GFLIB_UpperLimit_F16.h"/>
        <files mask="GFLIB_UpperLimit_F32.h"/>
        <files mask="GFLIB_UpperLimit_FLT.h"/>
        <files mask="GFLIB_VectorLimit_F16.h"/>
        <files mask="GFLIB_VectorLimit_FLT.h"/>
      </source>
      <source toolchain="iar" relative_path="CM4F_RTCESL_4.8_IAR/GMCLIB/Include" type="c_include" device_cores="cm4_MIMXRT1176xxxxx" fpu="true">
        <files mask="gmclib.h"/>
        <files mask="GMCLIB_Clark_F16_Asmi.h"/>
        <files mask="GMCLIB_Clark_FLT.h"/>
        <files mask="GMCLIB_Decoupling_A32.h"/>
        <files mask="GMCLIB_DTCompLut1D_F16.h"/>
        <files mask="GMCLIB_Decoupling_FLT.h"/>
        <files mask="GMCLIB_ElimDcBusRip_A32_Asmi.h"/>
        <files mask="GMCLIB_ElimDcBusRip_F16_Asmi.h"/>
        <files mask="GMCLIB_ElimDcBusRip_FLT.h"/>
        <files mask="gmclib_FP.h"/>
        <files mask="GMCLIB_Park_F16_Asmi.h"/>
        <files mask="GMCLIB_Park_FLT.h"/>
        <files mask="GMCLIB_Svm_F16.h"/>
        <files mask="gmclib_types.h"/>
      </source>
      <source toolchain="iar" relative_path="CM4F_RTCESL_4.8_IAR/MLIB/Include" type="c_include" device_cores="cm4_MIMXRT1176xxxxx" fpu="true">
        <files mask="asm_mac.h"/>
        <files mask="mlib.h"/>
        <files mask="MLIB_Abs_F16.h"/>
        <files mask="MLIB_Abs_F16_Asmi.h"/>
        <files mask="MLIB_Abs_F32.h"/>
        <files mask="MLIB_Abs_F32_Asmi.h"/>
        <files mask="MLIB_Abs_FLT.h"/>
        <files mask="MLIB_Abs_FLT_Asmi.h"/>
        <files mask="MLIB_Add_A32.h"/>
        <files mask="MLIB_Add_F16.h"/>
        <files mask="MLIB_Add_F16_Asmi.h"/>
        <files mask="MLIB_Add_F32.h"/>
        <files mask="MLIB_Add_F32_Asmi.h"/>
        <files mask="MLIB_Add_FLT.h"/>
        <files mask="MLIB_Add4_F16_Asmi.h"/>
        <files mask="MLIB_Add4_F32_Asmi.h"/>
        <files mask="MLIB_Add4_FLT.h"/>
        <files mask="MLIB_BiShift_F16.h"/>
        <files mask="MLIB_BiShift_F32.h"/>
        <files mask="MLIB_Clb_F16.h"/>
        <files mask="MLIB_Clb_F32.h"/>
        <files mask="MLIB_Conv_F32.h"/>
        <files mask="MLIB_Conv_FLT_Asmi.h"/>
        <files mask="MLIB_ConvSc_FLT_Asmi.h"/>
        <files mask="MLIB_Div_A32.h"/>
        <files mask="MLIB_Div_F16.h"/>
        <files mask="MLIB_Div_F32.h"/>
        <files mask="MLIB_Div_FLT.h"/>
        <files mask="MLIB_Div1Q_A32.h"/>
        <files mask="MLIB_Div1Q_F16.h"/>
        <files mask="MLIB_Div1Q_F32.h"/>
        <files mask="mlib_FP.h"/>
        <files mask="MLIB_Log2_U16.h"/>
        <files mask="MLIB_Mac_A32.h"/>
        <files mask="MLIB_Mac_F16_Asmi.h"/>
        <files mask="MLIB_Mac_F32.h"/>
        <files mask="MLIB_Mac_F32_Asmi.h"/>
        <files mask="MLIB_Mac_FLT.h"/>
        <files mask="MLIB_Mac4_F32.h"/>
        <files mask="MLIB_Mac4_F32_Asmi.h"/>
        <files mask="MLIB_Mac4_FLT.h"/>
        <files mask="MLIB_Mac4Rnd_F16_Asmi.h"/>
        <files mask="MLIB_Mac4Rnd_F32.h"/>
        <files mask="MLIB_Mac4Rnd_F32_Asmi.h"/>
        <files mask="MLIB_MacRnd_A32.h"/>
        <files mask="MLIB_MacRnd_F16_Asmi.h"/>
        <files mask="MLIB_MacRnd_F32.h"/>
        <files mask="MLIB_MacRnd_F32_Asmi.h"/>
        <files mask="MLIB_Mnac_A32.h"/>
        <files mask="MLIB_Mnac_F16_Asmi.h"/>
        <files mask="MLIB_Mnac_F32.h"/>
        <files mask="MLIB_Mnac_F32_Asmi.h"/>
        <files mask="MLIB_Mnac_FLT.h"/>
        <files mask="MLIB_MnacRnd_A32.h"/>
        <files mask="MLIB_MnacRnd_F16_Asmi.h"/>
        <files mask="MLIB_MnacRnd_F32.h"/>
        <files mask="MLIB_MnacRnd_F32_Asmi.h"/>
        <files mask="MLIB_Msu_A32.h"/>
        <files mask="MLIB_Msu_F16_Asmi.h"/>
        <files mask="MLIB_Msu_F32_Asmi.h"/>
        <files mask="MLIB_Msu_FLT.h"/>
        <files mask="MLIB_Msu4_F32.h"/>
        <files mask="MLIB_Msu4_F32_Asmi.h"/>
        <files mask="MLIB_Msu4_FLT.h"/>
        <files mask="MLIB_Msu4Rnd_F16.h"/>
        <files mask="MLIB_Msu4Rnd_F16_Asmi.h"/>
        <files mask="MLIB_Msu4Rnd_F32.h"/>
        <files mask="MLIB_Msu4Rnd_F32_Asmi.h"/>
        <files mask="MLIB_MsuRnd_A32.h"/>
        <files mask="MLIB_MsuRnd_F16_Asmi.h"/>
        <files mask="MLIB_MsuRnd_F32.h"/>
        <files mask="MLIB_MsuRnd_F32_Asmi.h"/>
        <files mask="MLIB_Mul_A32.h"/>
        <files mask="MLIB_Mul_A32_Asmi.h"/>
        <files mask="MLIB_Mul_F16.h"/>
        <files mask="MLIB_Mul_F16_Asmi.h"/>
        <files mask="MLIB_Mul_F32.h"/>
        <files mask="MLIB_Mul_F32_Asmi.h"/>
        <files mask="MLIB_Mul_FLT.h"/>
        <files mask="MLIB_MulRnd_A32.h"/>
        <files mask="MLIB_MulRnd_A32_Asmi.h"/>
        <files mask="MLIB_MulRnd_F16.h"/>
        <files mask="MLIB_MulRnd_F16_Asmi.h"/>
        <files mask="MLIB_MulRnd_F32.h"/>
        <files mask="MLIB_MulRnd_F32_Asmi.h"/>
        <files mask="MLIB_Neg_F16.h"/>
        <files mask="MLIB_Neg_F16_Asmi.h"/>
        <files mask="MLIB_Neg_F32.h"/>
        <files mask="MLIB_Neg_F32_Asmi.h"/>
        <files mask="MLIB_Neg_FLT.h"/>
        <files mask="MLIB_Rcp_A32.h"/>
        <files mask="MLIB_Rcp1Q_A32.h"/>
        <files mask="MLIB_Rnd_F32.h"/>
        <files mask="MLIB_Rnd_F32_Asmi.h"/>
        <files mask="MLIB_Sat_A32_Asmi.h"/>
        <files mask="MLIB_Shift_F16.h"/>
        <files mask="MLIB_Shift_F16_Asmi.h"/>
        <files mask="MLIB_Shift_F32.h"/>
        <files mask="MLIB_Shift_F32_Asmi.h"/>
        <files mask="MLIB_Sign_F16_Asmi.h"/>
        <files mask="MLIB_Sign_F32_Asmi.h"/>
        <files mask="MLIB_Sign_FLT_Asmi.h"/>
        <files mask="MLIB_Sub_A32.h"/>
        <files mask="MLIB_Sub_F16.h"/>
        <files mask="MLIB_Sub_F16_Asmi.h"/>
        <files mask="MLIB_Sub_F32.h"/>
        <files mask="MLIB_Sub_F32_Asmi.h"/>
        <files mask="MLIB_Sub_F64.h"/>
        <files mask="MLIB_Sub_FLT.h"/>
        <files mask="MLIB_Sub4_F16_Asmi.h"/>
        <files mask="MLIB_Sub4_F32_Asmi.h"/>
        <files mask="MLIB_Sub4_FLT.h"/>
        <files mask="mlib_types.h"/>
        <files mask="RTCESL_cfg.h"/>
      </source>
      <source toolchain="mdk" relative_path="CM4F_RTCESL_4.8_KEIL/AMCLIB/Include" type="c_include" device_cores="cm4_MIMXRT1176xxxxx" fpu="true">
        <files mask="amclib.h"/>
        <files mask="AMCLIB_ACIMCtrlMTPA_FLT.h"/>
        <files mask="AMCLIB_ACIMRotFluxObsrv_FLT.h"/>
        <files mask="AMCLIB_ACIMSpeedMRAS_FLT.h"/>
        <files mask="AMCLIB_AngleTrackObsrv_F32.h"/>
        <files mask="AMCLIB_AngleTrackObsrv_FLT.h"/>
        <files mask="AMCLIB_CtrlFluxWkng_A32.h"/>
        <files mask="AMCLIB_CtrlFluxWkng_FLT.h"/>
        <files mask="amclib_FP.h"/>
        <files mask="AMCLIB_PMSMBemfObsrvAB_A32.h"/>
        <files mask="AMCLIB_PMSMBemfObsrvAB_FLT.h"/>
        <files mask="AMCLIB_PMSMBemfObsrvDQ_A32.h"/>
        <files mask="AMCLIB_PMSMBemfObsrvDQ_FLT.h"/>
        <files mask="AMCLIB_TrackObsrv_F32.h"/>
        <files mask="AMCLIB_TrackObsrv_FLT.h"/>
        <files mask="amclib_types.h"/>
      </source>
      <source toolchain="mdk" relative_path="CM4F_RTCESL_4.8_KEIL/GDFLIB/Include" type="c_include" device_cores="cm4_MIMXRT1176xxxxx" fpu="true">
        <files mask="gdflib.h"/>
        <files mask="GDFLIB_FilterExp_F32.h"/>
        <files mask="GDFLIB_FilterExp_FLT.h"/>
        <files mask="GDFLIB_FilterIIR1_F32.h"/>
        <files mask="GDFLIB_FilterIIR1_F32_Asmi.h"/>
        <files mask="GDFLIB_FilterIIR1_FLT.h"/>
        <files mask="GDFLIB_FilterIIR2_F32.h"/>
        <files mask="GDFLIB_FilterIIR2_FLT.h"/>
        <files mask="GDFLIB_FilterIIR3_F32.h"/>
        <files mask="GDFLIB_FilterIIR3_FLT.h"/>
        <files mask="GDFLIB_FilterIIR4_F32.h"/>
        <files mask="GDFLIB_FilterIIR4_FLT.h"/>
        <files mask="GDFLIB_FilterMA_A32.h"/>
        <files mask="GDFLIB_FilterMA_FLT.h"/>
        <files mask="gdflib_FP.h"/>
        <files mask="gdflib_types.h"/>
      </source>
      <source toolchain="mdk" relative_path="CM4F_RTCESL_4.8_KEIL/GFLIB/Include" type="c_include" device_cores="cm4_MIMXRT1176xxxxx" fpu="true">
        <files mask="gflib.h"/>
        <files mask="GFLIB_Acos_F16.h"/>
        <files mask="GFLIB_Acos_FLT.h"/>
        <files mask="GFLIB_Asin_F16.h"/>
        <files mask="GFLIB_Asin_FLT.h"/>
        <files mask="GFLIB_Atan_F32.h"/>
        <files mask="GFLIB_Atan_FLT.h"/>
        <files mask="GFLIB_AtanYX_F16.h"/>
        <files mask="GFLIB_AtanYX_FLT.h"/>
        <files mask="GFLIB_CtrlBetaIPDp_A32.h"/>
        <files mask="GFLIB_CtrlBetaIPDp_FLT.h"/>
        <files mask="GFLIB_CtrlBetaIPp_A32.h"/>
        <files mask="GFLIB_CtrlBetaIPp_FLT.h"/>
        <files mask="GFLIB_CtrlPIDp_A32.h"/>
        <files mask="GFLIB_CtrlPIDp_FLT.h"/>
        <files mask="GFLIB_CtrlPIp_A32.h"/>
        <files mask="GFLIB_CtrlPIp_FLT.h"/>
        <files mask="GFLIB_DFlexRamp_A32.h"/>
        <files mask="GFLIB_DFlexRamp_FLT.h"/>
        <files mask="GFLIB_DRamp_F16.h"/>
        <files mask="GFLIB_DRamp_F32.h"/>
        <files mask="GFLIB_DRamp_FLT.h"/>
        <files mask="GFLIB_FlexRamp_A32.h"/>
        <files mask="GFLIB_FlexRamp_FLT.h"/>
        <files mask="GFLIB_FlexSRamp_A32.h"/>
        <files mask="GFLIB_FlexSRamp_FLT.h"/>
        <files mask="gflib_FP.h"/>
        <files mask="GFLIB_Hyst_F16_Asmi.h"/>
        <files mask="GFLIB_Hyst_FLT.h"/>
        <files mask="GFLIB_Integrator_A32.h"/>
        <files mask="GFLIB_Integrator_FLT.h"/>
        <files mask="GFLIB_Limit_F16.h"/>
        <files mask="GFLIB_Limit_F32.h"/>
        <files mask="GFLIB_Limit_FLT.h"/>
        <files mask="GFLIB_LowerLimit_F16.h"/>
        <files mask="GFLIB_LowerLimit_F32.h"/>
        <files mask="GFLIB_LowerLimit_FLT.h"/>
        <files mask="GFLIB_Lut_F16_Asmi.h"/>
        <files mask="GFLIB_Lut_F32.h"/>
        <files mask="GFLIB_Lut_FLT.h"/>
        <files mask="GFLIB_LutPer_F16_Asmi.h"/>
        <files mask="GFLIB_LutPer_F32.h"/>
        <files mask="GFLIB_LutPer_FLT.h"/>
        <files mask="GFLIB_Ramp_F16.h"/>
        <files mask="GFLIB_Ramp_F32.h"/>
        <files mask="GFLIB_Ramp_FLT.h"/>
        <files mask="GFLIB_SinCos_F32.h"/>
        <files mask="GFLIB_SinCos_FLT.h"/>
        <files mask="GFLIB_Sqrt_F16.h"/>
        <files mask="GFLIB_Sqrt_F32.h"/>
        <files mask="GFLIB_Sqrt_FLT_Asmi.h"/>
        <files mask="GFLIB_Tan_F32.h"/>
        <files mask="GFLIB_Tan_FLT.h"/>
        <files mask="gflib_types.h"/>
        <files mask="GFLIB_UpperLimit_F16.h"/>
        <files mask="GFLIB_UpperLimit_F32.h"/>
        <files mask="GFLIB_UpperLimit_FLT.h"/>
        <files mask="GFLIB_VectorLimit_F16.h"/>
        <files mask="GFLIB_VectorLimit_FLT.h"/>
      </source>
      <source toolchain="mdk" relative_path="CM4F_RTCESL_4.8_KEIL/GMCLIB/Include" type="c_include" device_cores="cm4_MIMXRT1176xxxxx" fpu="true">
        <files mask="gmclib.h"/>
        <files mask="GMCLIB_Clark_F16_Asmi.h"/>
        <files mask="GMCLIB_Clark_FLT.h"/>
        <files mask="GMCLIB_Decoupling_A32.h"/>
        <files mask="GMCLIB_DTCompLut1D_F16.h"/>
        <files mask="GMCLIB_Decoupling_FLT.h"/>
        <files mask="GMCLIB_ElimDcBusRip_A32_Asmi.h"/>
        <files mask="GMCLIB_ElimDcBusRip_F16_Asmi.h"/>
        <files mask="GMCLIB_ElimDcBusRip_FLT.h"/>
        <files mask="gmclib_FP.h"/>
        <files mask="GMCLIB_Park_F16_Asmi.h"/>
        <files mask="GMCLIB_Park_FLT.h"/>
        <files mask="GMCLIB_Svm_F16.h"/>
        <files mask="gmclib_types.h"/>
      </source>
      <source toolchain="mdk" relative_path="CM4F_RTCESL_4.8_KEIL/MLIB/Include" type="c_include" device_cores="cm4_MIMXRT1176xxxxx" fpu="true">
        <files mask="asm_mac.h"/>
        <files mask="mlib.h"/>
        <files mask="MLIB_Abs_F16.h"/>
        <files mask="MLIB_Abs_F16_Asmi.h"/>
        <files mask="MLIB_Abs_F32.h"/>
        <files mask="MLIB_Abs_F32_Asmi.h"/>
        <files mask="MLIB_Abs_FLT.h"/>
        <files mask="MLIB_Abs_FLT_Asmi.h"/>
        <files mask="MLIB_Add_A32.h"/>
        <files mask="MLIB_Add_F16.h"/>
        <files mask="MLIB_Add_F16_Asmi.h"/>
        <files mask="MLIB_Add_F32.h"/>
        <files mask="MLIB_Add_F32_Asmi.h"/>
        <files mask="MLIB_Add_FLT.h"/>
        <files mask="MLIB_Add4_F16_Asmi.h"/>
        <files mask="MLIB_Add4_F32_Asmi.h"/>
        <files mask="MLIB_Add4_FLT.h"/>
        <files mask="MLIB_BiShift_F16.h"/>
        <files mask="MLIB_BiShift_F32.h"/>
        <files mask="MLIB_Clb_F16.h"/>
        <files mask="MLIB_Clb_F32.h"/>
        <files mask="MLIB_Conv_F32.h"/>
        <files mask="MLIB_Conv_FLT_Asmi.h"/>
        <files mask="MLIB_ConvSc_FLT_Asmi.h"/>
        <files mask="MLIB_Div_A32.h"/>
        <files mask="MLIB_Div_F16.h"/>
        <files mask="MLIB_Div_F32.h"/>
        <files mask="MLIB_Div_FLT.h"/>
        <files mask="MLIB_Div1Q_A32.h"/>
        <files mask="MLIB_Div1Q_F16.h"/>
        <files mask="MLIB_Div1Q_F32.h"/>
        <files mask="mlib_FP.h"/>
        <files mask="MLIB_Log2_U16.h"/>
        <files mask="MLIB_Mac_A32.h"/>
        <files mask="MLIB_Mac_F16_Asmi.h"/>
        <files mask="MLIB_Mac_F32.h"/>
        <files mask="MLIB_Mac_F32_Asmi.h"/>
        <files mask="MLIB_Mac_FLT.h"/>
        <files mask="MLIB_Mac4_F32.h"/>
        <files mask="MLIB_Mac4_F32_Asmi.h"/>
        <files mask="MLIB_Mac4_FLT.h"/>
        <files mask="MLIB_Mac4Rnd_F16_Asmi.h"/>
        <files mask="MLIB_Mac4Rnd_F32.h"/>
        <files mask="MLIB_Mac4Rnd_F32_Asmi.h"/>
        <files mask="MLIB_MacRnd_A32.h"/>
        <files mask="MLIB_MacRnd_F16_Asmi.h"/>
        <files mask="MLIB_MacRnd_F32.h"/>
        <files mask="MLIB_MacRnd_F32_Asmi.h"/>
        <files mask="MLIB_Mnac_A32.h"/>
        <files mask="MLIB_Mnac_F16_Asmi.h"/>
        <files mask="MLIB_Mnac_F32.h"/>
        <files mask="MLIB_Mnac_F32_Asmi.h"/>
        <files mask="MLIB_Mnac_FLT.h"/>
        <files mask="MLIB_MnacRnd_A32.h"/>
        <files mask="MLIB_MnacRnd_F16_Asmi.h"/>
        <files mask="MLIB_MnacRnd_F32.h"/>
        <files mask="MLIB_MnacRnd_F32_Asmi.h"/>
        <files mask="MLIB_Msu_A32.h"/>
        <files mask="MLIB_Msu_F16_Asmi.h"/>
        <files mask="MLIB_Msu_F32_Asmi.h"/>
        <files mask="MLIB_Msu_FLT.h"/>
        <files mask="MLIB_Msu4_F32.h"/>
        <files mask="MLIB_Msu4_F32_Asmi.h"/>
        <files mask="MLIB_Msu4_FLT.h"/>
        <files mask="MLIB_Msu4Rnd_F16.h"/>
        <files mask="MLIB_Msu4Rnd_F16_Asmi.h"/>
        <files mask="MLIB_Msu4Rnd_F32.h"/>
        <files mask="MLIB_Msu4Rnd_F32_Asmi.h"/>
        <files mask="MLIB_MsuRnd_A32.h"/>
        <files mask="MLIB_MsuRnd_F16_Asmi.h"/>
        <files mask="MLIB_MsuRnd_F32.h"/>
        <files mask="MLIB_MsuRnd_F32_Asmi.h"/>
        <files mask="MLIB_Mul_A32.h"/>
        <files mask="MLIB_Mul_A32_Asmi.h"/>
        <files mask="MLIB_Mul_F16.h"/>
        <files mask="MLIB_Mul_F16_Asmi.h"/>
        <files mask="MLIB_Mul_F32.h"/>
        <files mask="MLIB_Mul_F32_Asmi.h"/>
        <files mask="MLIB_Mul_FLT.h"/>
        <files mask="MLIB_MulRnd_A32.h"/>
        <files mask="MLIB_MulRnd_A32_Asmi.h"/>
        <files mask="MLIB_MulRnd_F16.h"/>
        <files mask="MLIB_MulRnd_F16_Asmi.h"/>
        <files mask="MLIB_MulRnd_F32.h"/>
        <files mask="MLIB_MulRnd_F32_Asmi.h"/>
        <files mask="MLIB_Neg_F16.h"/>
        <files mask="MLIB_Neg_F16_Asmi.h"/>
        <files mask="MLIB_Neg_F32.h"/>
        <files mask="MLIB_Neg_F32_Asmi.h"/>
        <files mask="MLIB_Neg_FLT.h"/>
        <files mask="MLIB_Rcp_A32.h"/>
        <files mask="MLIB_Rcp1Q_A32.h"/>
        <files mask="MLIB_Rnd_F32.h"/>
        <files mask="MLIB_Rnd_F32_Asmi.h"/>
        <files mask="MLIB_Sat_A32_Asmi.h"/>
        <files mask="MLIB_Shift_F16.h"/>
        <files mask="MLIB_Shift_F16_Asmi.h"/>
        <files mask="MLIB_Shift_F32.h"/>
        <files mask="MLIB_Shift_F32_Asmi.h"/>
        <files mask="MLIB_Sign_F16_Asmi.h"/>
        <files mask="MLIB_Sign_F32_Asmi.h"/>
        <files mask="MLIB_Sign_FLT_Asmi.h"/>
        <files mask="MLIB_Sub_A32.h"/>
        <files mask="MLIB_Sub_F16.h"/>
        <files mask="MLIB_Sub_F16_Asmi.h"/>
        <files mask="MLIB_Sub_F32.h"/>
        <files mask="MLIB_Sub_F32_Asmi.h"/>
        <files mask="MLIB_Sub_F64.h"/>
        <files mask="MLIB_Sub_FLT.h"/>
        <files mask="MLIB_Sub4_F16_Asmi.h"/>
        <files mask="MLIB_Sub4_F32_Asmi.h"/>
        <files mask="MLIB_Sub4_FLT.h"/>
        <files mask="mlib_types.h"/>
        <files mask="RTCESL_cfg.h"/>
      </source>
      <source toolchain="mcuxpresso armgcc" relative_path="CM4F_RTCESL_4.8_MCUX/AMCLIB/Include" type="c_include" device_cores="cm4_MIMXRT1176xxxxx" fpu="true">
        <files mask="amclib.h"/>
        <files mask="AMCLIB_ACIMCtrlMTPA_FLT.h"/>
        <files mask="AMCLIB_ACIMRotFluxObsrv_FLT.h"/>
        <files mask="AMCLIB_ACIMSpeedMRAS_FLT.h"/>
        <files mask="AMCLIB_AngleTrackObsrv_F32.h"/>
        <files mask="AMCLIB_AngleTrackObsrv_FLT.h"/>
        <files mask="AMCLIB_CtrlFluxWkng_A32.h"/>
        <files mask="AMCLIB_CtrlFluxWkng_FLT.h"/>
        <files mask="amclib_FP.h"/>
        <files mask="AMCLIB_PMSMBemfObsrvAB_A32.h"/>
        <files mask="AMCLIB_PMSMBemfObsrvAB_FLT.h"/>
        <files mask="AMCLIB_PMSMBemfObsrvDQ_A32.h"/>
        <files mask="AMCLIB_PMSMBemfObsrvDQ_FLT.h"/>
        <files mask="AMCLIB_TrackObsrv_F32.h"/>
        <files mask="AMCLIB_TrackObsrv_FLT.h"/>
        <files mask="amclib_types.h"/>
      </source>
      <source toolchain="mcuxpresso armgcc" relative_path="CM4F_RTCESL_4.8_MCUX/GDFLIB/Include" type="c_include" device_cores="cm4_MIMXRT1176xxxxx" fpu="true">
        <files mask="gdflib.h"/>
        <files mask="GDFLIB_FilterExp_F32.h"/>
        <files mask="GDFLIB_FilterExp_FLT.h"/>
        <files mask="GDFLIB_FilterIIR1_F32.h"/>
        <files mask="GDFLIB_FilterIIR1_F32_Asmi.h"/>
        <files mask="GDFLIB_FilterIIR1_FLT.h"/>
        <files mask="GDFLIB_FilterIIR2_F32.h"/>
        <files mask="GDFLIB_FilterIIR2_FLT.h"/>
        <files mask="GDFLIB_FilterIIR3_F32.h"/>
        <files mask="GDFLIB_FilterIIR3_FLT.h"/>
        <files mask="GDFLIB_FilterIIR4_F32.h"/>
        <files mask="GDFLIB_FilterIIR4_FLT.h"/>
        <files mask="GDFLIB_FilterMA_A32.h"/>
        <files mask="GDFLIB_FilterMA_FLT.h"/>
        <files mask="gdflib_FP.h"/>
        <files mask="gdflib_types.h"/>
      </source>
      <source toolchain="mcuxpresso armgcc" relative_path="CM4F_RTCESL_4.8_MCUX/GFLIB/Include" type="c_include" device_cores="cm4_MIMXRT1176xxxxx" fpu="true">
        <files mask="gflib.h"/>
        <files mask="GFLIB_Acos_F16.h"/>
        <files mask="GFLIB_Acos_FLT.h"/>
        <files mask="GFLIB_Asin_F16.h"/>
        <files mask="GFLIB_Asin_FLT.h"/>
        <files mask="GFLIB_Atan_F32.h"/>
        <files mask="GFLIB_Atan_FLT.h"/>
        <files mask="GFLIB_AtanYX_F16.h"/>
        <files mask="GFLIB_AtanYX_FLT.h"/>
        <files mask="GFLIB_CtrlBetaIPDp_A32.h"/>
        <files mask="GFLIB_CtrlBetaIPDp_FLT.h"/>
        <files mask="GFLIB_CtrlBetaIPp_A32.h"/>
        <files mask="GFLIB_CtrlBetaIPp_FLT.h"/>
        <files mask="GFLIB_CtrlPIDp_A32.h"/>
        <files mask="GFLIB_CtrlPIDp_FLT.h"/>
        <files mask="GFLIB_CtrlPIp_A32.h"/>
        <files mask="GFLIB_CtrlPIp_FLT.h"/>
        <files mask="GFLIB_DFlexRamp_A32.h"/>
        <files mask="GFLIB_DFlexRamp_FLT.h"/>
        <files mask="GFLIB_DRamp_F16.h"/>
        <files mask="GFLIB_DRamp_F32.h"/>
        <files mask="GFLIB_DRamp_FLT.h"/>
        <files mask="GFLIB_FlexRamp_A32.h"/>
        <files mask="GFLIB_FlexRamp_FLT.h"/>
        <files mask="GFLIB_FlexSRamp_A32.h"/>
        <files mask="GFLIB_FlexSRamp_FLT.h"/>
        <files mask="gflib_FP.h"/>
        <files mask="GFLIB_Hyst_F16_Asmi.h"/>
        <files mask="GFLIB_Hyst_FLT.h"/>
        <files mask="GFLIB_Integrator_A32.h"/>
        <files mask="GFLIB_Integrator_FLT.h"/>
        <files mask="GFLIB_Limit_F16.h"/>
        <files mask="GFLIB_Limit_F32.h"/>
        <files mask="GFLIB_Limit_FLT.h"/>
        <files mask="GFLIB_LowerLimit_F16.h"/>
        <files mask="GFLIB_LowerLimit_F32.h"/>
        <files mask="GFLIB_LowerLimit_FLT.h"/>
        <files mask="GFLIB_Lut_F16_Asmi.h"/>
        <files mask="GFLIB_Lut_F32.h"/>
        <files mask="GFLIB_Lut_FLT.h"/>
        <files mask="GFLIB_LutPer_F16_Asmi.h"/>
        <files mask="GFLIB_LutPer_F32.h"/>
        <files mask="GFLIB_LutPer_FLT.h"/>
        <files mask="GFLIB_Ramp_F16.h"/>
        <files mask="GFLIB_Ramp_F32.h"/>
        <files mask="GFLIB_Ramp_FLT.h"/>
        <files mask="GFLIB_SinCos_F32.h"/>
        <files mask="GFLIB_SinCos_FLT.h"/>
        <files mask="GFLIB_Sqrt_F16.h"/>
        <files mask="GFLIB_Sqrt_F32.h"/>
        <files mask="GFLIB_Sqrt_FLT_Asmi.h"/>
        <files mask="GFLIB_Tan_F32.h"/>
        <files mask="GFLIB_Tan_FLT.h"/>
        <files mask="gflib_types.h"/>
        <files mask="GFLIB_UpperLimit_F16.h"/>
        <files mask="GFLIB_UpperLimit_F32.h"/>
        <files mask="GFLIB_UpperLimit_FLT.h"/>
        <files mask="GFLIB_VectorLimit_F16.h"/>
        <files mask="GFLIB_VectorLimit_FLT.h"/>
      </source>
      <source toolchain="mcuxpresso armgcc" relative_path="CM4F_RTCESL_4.8_MCUX/GMCLIB/Include" type="c_include" device_cores="cm4_MIMXRT1176xxxxx" fpu="true">
        <files mask="gmclib.h"/>
        <files mask="GMCLIB_Clark_F16_Asmi.h"/>
        <files mask="GMCLIB_Clark_FLT.h"/>
        <files mask="GMCLIB_Decoupling_A32.h"/>
        <files mask="GMCLIB_DTCompLut1D_F16.h"/>
        <files mask="GMCLIB_Decoupling_FLT.h"/>
        <files mask="GMCLIB_ElimDcBusRip_A32_Asmi.h"/>
        <files mask="GMCLIB_ElimDcBusRip_F16_Asmi.h"/>
        <files mask="GMCLIB_ElimDcBusRip_FLT.h"/>
        <files mask="gmclib_FP.h"/>
        <files mask="GMCLIB_Park_F16_Asmi.h"/>
        <files mask="GMCLIB_Park_FLT.h"/>
        <files mask="GMCLIB_Svm_F16.h"/>
        <files mask="gmclib_types.h"/>
      </source>
      <source toolchain="mcuxpresso armgcc" relative_path="CM4F_RTCESL_4.8_MCUX/MLIB/Include" type="c_include" device_cores="cm4_MIMXRT1176xxxxx" fpu="true">
        <files mask="asm_mac.h"/>
        <files mask="mlib.h"/>
        <files mask="MLIB_Abs_F16.h"/>
        <files mask="MLIB_Abs_F16_Asmi.h"/>
        <files mask="MLIB_Abs_F32.h"/>
        <files mask="MLIB_Abs_F32_Asmi.h"/>
        <files mask="MLIB_Abs_FLT.h"/>
        <files mask="MLIB_Abs_FLT_Asmi.h"/>
        <files mask="MLIB_Add_A32.h"/>
        <files mask="MLIB_Add_F16.h"/>
        <files mask="MLIB_Add_F16_Asmi.h"/>
        <files mask="MLIB_Add_F32.h"/>
        <files mask="MLIB_Add_F32_Asmi.h"/>
        <files mask="MLIB_Add_FLT.h"/>
        <files mask="MLIB_Add4_F16_Asmi.h"/>
        <files mask="MLIB_Add4_F32_Asmi.h"/>
        <files mask="MLIB_Add4_FLT.h"/>
        <files mask="MLIB_BiShift_F16.h"/>
        <files mask="MLIB_BiShift_F32.h"/>
        <files mask="MLIB_Clb_F16.h"/>
        <files mask="MLIB_Clb_F32.h"/>
        <files mask="MLIB_Conv_F32.h"/>
        <files mask="MLIB_Conv_FLT_Asmi.h"/>
        <files mask="MLIB_ConvSc_FLT_Asmi.h"/>
        <files mask="MLIB_Div_A32.h"/>
        <files mask="MLIB_Div_F16.h"/>
        <files mask="MLIB_Div_F32.h"/>
        <files mask="MLIB_Div_FLT.h"/>
        <files mask="MLIB_Div1Q_A32.h"/>
        <files mask="MLIB_Div1Q_F16.h"/>
        <files mask="MLIB_Div1Q_F32.h"/>
        <files mask="mlib_FP.h"/>
        <files mask="MLIB_Log2_U16.h"/>
        <files mask="MLIB_Mac_A32.h"/>
        <files mask="MLIB_Mac_F16_Asmi.h"/>
        <files mask="MLIB_Mac_F32.h"/>
        <files mask="MLIB_Mac_F32_Asmi.h"/>
        <files mask="MLIB_Mac_FLT.h"/>
        <files mask="MLIB_Mac4_F32.h"/>
        <files mask="MLIB_Mac4_F32_Asmi.h"/>
        <files mask="MLIB_Mac4_FLT.h"/>
        <files mask="MLIB_Mac4Rnd_F16_Asmi.h"/>
        <files mask="MLIB_Mac4Rnd_F32.h"/>
        <files mask="MLIB_Mac4Rnd_F32_Asmi.h"/>
        <files mask="MLIB_MacRnd_A32.h"/>
        <files mask="MLIB_MacRnd_F16_Asmi.h"/>
        <files mask="MLIB_MacRnd_F32.h"/>
        <files mask="MLIB_MacRnd_F32_Asmi.h"/>
        <files mask="MLIB_Mnac_A32.h"/>
        <files mask="MLIB_Mnac_F16_Asmi.h"/>
        <files mask="MLIB_Mnac_F32.h"/>
        <files mask="MLIB_Mnac_F32_Asmi.h"/>
        <files mask="MLIB_Mnac_FLT.h"/>
        <files mask="MLIB_MnacRnd_A32.h"/>
        <files mask="MLIB_MnacRnd_F16_Asmi.h"/>
        <files mask="MLIB_MnacRnd_F32.h"/>
        <files mask="MLIB_MnacRnd_F32_Asmi.h"/>
        <files mask="MLIB_Msu_A32.h"/>
        <files mask="MLIB_Msu_F16_Asmi.h"/>
        <files mask="MLIB_Msu_F32_Asmi.h"/>
        <files mask="MLIB_Msu_FLT.h"/>
        <files mask="MLIB_Msu4_F32.h"/>
        <files mask="MLIB_Msu4_F32_Asmi.h"/>
        <files mask="MLIB_Msu4_FLT.h"/>
        <files mask="MLIB_Msu4Rnd_F16.h"/>
        <files mask="MLIB_Msu4Rnd_F16_Asmi.h"/>
        <files mask="MLIB_Msu4Rnd_F32.h"/>
        <files mask="MLIB_Msu4Rnd_F32_Asmi.h"/>
        <files mask="MLIB_MsuRnd_A32.h"/>
        <files mask="MLIB_MsuRnd_F16_Asmi.h"/>
        <files mask="MLIB_MsuRnd_F32.h"/>
        <files mask="MLIB_MsuRnd_F32_Asmi.h"/>
        <files mask="MLIB_Mul_A32.h"/>
        <files mask="MLIB_Mul_A32_Asmi.h"/>
        <files mask="MLIB_Mul_F16.h"/>
        <files mask="MLIB_Mul_F16_Asmi.h"/>
        <files mask="MLIB_Mul_F32.h"/>
        <files mask="MLIB_Mul_F32_Asmi.h"/>
        <files mask="MLIB_Mul_FLT.h"/>
        <files mask="MLIB_MulRnd_A32.h"/>
        <files mask="MLIB_MulRnd_A32_Asmi.h"/>
        <files mask="MLIB_MulRnd_F16.h"/>
        <files mask="MLIB_MulRnd_F16_Asmi.h"/>
        <files mask="MLIB_MulRnd_F32.h"/>
        <files mask="MLIB_MulRnd_F32_Asmi.h"/>
        <files mask="MLIB_Neg_F16.h"/>
        <files mask="MLIB_Neg_F16_Asmi.h"/>
        <files mask="MLIB_Neg_F32.h"/>
        <files mask="MLIB_Neg_F32_Asmi.h"/>
        <files mask="MLIB_Neg_FLT.h"/>
        <files mask="MLIB_Rcp_A32.h"/>
        <files mask="MLIB_Rcp1Q_A32.h"/>
        <files mask="MLIB_Rnd_F32.h"/>
        <files mask="MLIB_Rnd_F32_Asmi.h"/>
        <files mask="MLIB_Sat_A32_Asmi.h"/>
        <files mask="MLIB_Shift_F16.h"/>
        <files mask="MLIB_Shift_F16_Asmi.h"/>
        <files mask="MLIB_Shift_F32.h"/>
        <files mask="MLIB_Shift_F32_Asmi.h"/>
        <files mask="MLIB_Sign_F16_Asmi.h"/>
        <files mask="MLIB_Sign_F32_Asmi.h"/>
        <files mask="MLIB_Sign_FLT_Asmi.h"/>
        <files mask="MLIB_Sub_A32.h"/>
        <files mask="MLIB_Sub_F16.h"/>
        <files mask="MLIB_Sub_F16_Asmi.h"/>
        <files mask="MLIB_Sub_F32.h"/>
        <files mask="MLIB_Sub_F32_Asmi.h"/>
        <files mask="MLIB_Sub_F64.h"/>
        <files mask="MLIB_Sub_FLT.h"/>
        <files mask="MLIB_Sub4_F16_Asmi.h"/>
        <files mask="MLIB_Sub4_F32_Asmi.h"/>
        <files mask="MLIB_Sub4_FLT.h"/>
        <files mask="mlib_types.h"/>
        <files mask="RTCESL_cfg.h"/>
      </source>
      <source toolchain="iar" relative_path="CM4F_RTCESL_4.8_IAR/AMCLIB" type="lib" device_cores="cm4_MIMXRT1176xxxxx" fpu="true">
        <files mask="AMCLIB.a"/>
      </source>
      <source toolchain="iar" relative_path="CM4F_RTCESL_4.8_IAR/GFLIB" type="lib" device_cores="cm4_MIMXRT1176xxxxx" fpu="true">
        <files mask="GFLIB.a"/>
      </source>
      <source toolchain="iar" relative_path="CM4F_RTCESL_4.8_IAR/GDFLIB" type="lib" device_cores="cm4_MIMXRT1176xxxxx" fpu="true">
        <files mask="GDFLIB.a"/>
      </source>
      <source toolchain="iar" relative_path="CM4F_RTCESL_4.8_IAR/GMCLIB" type="lib" device_cores="cm4_MIMXRT1176xxxxx" fpu="true">
        <files mask="GMCLIB.a"/>
      </source>
      <source toolchain="iar" relative_path="CM4F_RTCESL_4.8_IAR/MLIB" type="lib" device_cores="cm4_MIMXRT1176xxxxx" fpu="true">
        <files mask="MLIB.a"/>
      </source>
      <source toolchain="mdk" relative_path="CM4F_RTCESL_4.8_KEIL/AMCLIB" type="lib" device_cores="cm4_MIMXRT1176xxxxx" fpu="true">
        <files mask="AMCLIB.lib"/>
      </source>
      <source toolchain="mdk" relative_path="CM4F_RTCESL_4.8_KEIL/GFLIB" type="lib" device_cores="cm4_MIMXRT1176xxxxx" fpu="true">
        <files mask="GFLIB.lib"/>
      </source>
      <source toolchain="mdk" relative_path="CM4F_RTCESL_4.8_KEIL/GDFLIB" type="lib" device_cores="cm4_MIMXRT1176xxxxx" fpu="true">
        <files mask="GDFLIB.lib"/>
      </source>
      <source toolchain="mdk" relative_path="CM4F_RTCESL_4.8_KEIL/GMCLIB" type="lib" device_cores="cm4_MIMXRT1176xxxxx" fpu="true">
        <files mask="GMCLIB.lib"/>
      </source>
      <source toolchain="mdk" relative_path="CM4F_RTCESL_4.8_KEIL/MLIB" type="lib" device_cores="cm4_MIMXRT1176xxxxx" fpu="true">
        <files mask="MLIB.lib"/>
      </source>
      <source toolchain="mcuxpresso armgcc" relative_path="CM4F_RTCESL_4.8_MCUX/AMCLIB" type="lib" device_cores="cm4_MIMXRT1176xxxxx" fpu="true">
        <files mask="libAMCLIB.a"/>
      </source>
      <source toolchain="mcuxpresso armgcc" relative_path="CM4F_RTCESL_4.8_MCUX/GFLIB" type="lib" device_cores="cm4_MIMXRT1176xxxxx" fpu="true">
        <files mask="libGFLIB.a"/>
      </source>
      <source toolchain="mcuxpresso armgcc" relative_path="CM4F_RTCESL_4.8_MCUX/GDFLIB" type="lib" device_cores="cm4_MIMXRT1176xxxxx" fpu="true">
        <files mask="libGDFLIB.a"/>
      </source>
      <source toolchain="mcuxpresso armgcc" relative_path="CM4F_RTCESL_4.8_MCUX/GMCLIB" type="lib" device_cores="cm4_MIMXRT1176xxxxx" fpu="true">
        <files mask="libGMCLIB.a"/>
      </source>
      <source toolchain="mcuxpresso armgcc" relative_path="CM4F_RTCESL_4.8_MCUX/MLIB" type="lib" device_cores="cm4_MIMXRT1176xxxxx" fpu="true">
        <files mask="libMLIB.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_rtcesl_cm4f.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="CM4F_RTCESL_4.8_IAR/AMCLIB/Include" toolchain="iar" type="c_include" device_cores="cm4_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM4F_RTCESL_4.8_IAR/GDFLIB/Include" toolchain="iar" type="c_include" device_cores="cm4_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM4F_RTCESL_4.8_IAR/GFLIB/Include" toolchain="iar" type="c_include" device_cores="cm4_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM4F_RTCESL_4.8_IAR/GMCLIB/Include" toolchain="iar" type="c_include" device_cores="cm4_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM4F_RTCESL_4.8_IAR/MLIB/Include" toolchain="iar" type="c_include" device_cores="cm4_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM4F_RTCESL_4.8_KEIL/AMCLIB/Include" toolchain="mdk" type="c_include" device_cores="cm4_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM4F_RTCESL_4.8_KEIL/GDFLIB/Include" toolchain="mdk" type="c_include" device_cores="cm4_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM4F_RTCESL_4.8_KEIL/GFLIB/Include" toolchain="mdk" type="c_include" device_cores="cm4_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM4F_RTCESL_4.8_KEIL/GMCLIB/Include" toolchain="mdk" type="c_include" device_cores="cm4_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM4F_RTCESL_4.8_KEIL/MLIB/Include" toolchain="mdk" type="c_include" device_cores="cm4_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM4F_RTCESL_4.8_MCUX/AMCLIB/Include" toolchain="mcuxpresso armgcc" type="c_include" device_cores="cm4_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM4F_RTCESL_4.8_MCUX/GDFLIB/Include" toolchain="mcuxpresso armgcc" type="c_include" device_cores="cm4_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM4F_RTCESL_4.8_MCUX/GFLIB/Include" toolchain="mcuxpresso armgcc" type="c_include" device_cores="cm4_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM4F_RTCESL_4.8_MCUX/GMCLIB/Include" toolchain="mcuxpresso armgcc" type="c_include" device_cores="cm4_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM4F_RTCESL_4.8_MCUX/MLIB/Include" toolchain="mcuxpresso armgcc" type="c_include" device_cores="cm4_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM4F_RTCESL_4.8_IAR/AMCLIB/Include" toolchain="iar" type="asm_include" device_cores="cm4_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM4F_RTCESL_4.8_IAR/GDFLIB/Include" toolchain="iar" type="asm_include" device_cores="cm4_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM4F_RTCESL_4.8_IAR/GFLIB/Include" toolchain="iar" type="asm_include" device_cores="cm4_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM4F_RTCESL_4.8_IAR/GMCLIB/Include" toolchain="iar" type="asm_include" device_cores="cm4_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM4F_RTCESL_4.8_IAR/MLIB/Include" toolchain="iar" type="asm_include" device_cores="cm4_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM4F_RTCESL_4.8_KEIL/AMCLIB/Include" toolchain="mdk" type="asm_include" device_cores="cm4_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM4F_RTCESL_4.8_KEIL/GDFLIB/Include" toolchain="mdk" type="asm_include" device_cores="cm4_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM4F_RTCESL_4.8_KEIL/GFLIB/Include" toolchain="mdk" type="asm_include" device_cores="cm4_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM4F_RTCESL_4.8_KEIL/GMCLIB/Include" toolchain="mdk" type="asm_include" device_cores="cm4_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM4F_RTCESL_4.8_KEIL/MLIB/Include" toolchain="mdk" type="asm_include" device_cores="cm4_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM4F_RTCESL_4.8_MCUX/AMCLIB/Include" toolchain="mcuxpresso armgcc" type="asm_include" device_cores="cm4_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM4F_RTCESL_4.8_MCUX/GDFLIB/Include" toolchain="mcuxpresso armgcc" type="asm_include" device_cores="cm4_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM4F_RTCESL_4.8_MCUX/GFLIB/Include" toolchain="mcuxpresso armgcc" type="asm_include" device_cores="cm4_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM4F_RTCESL_4.8_MCUX/GMCLIB/Include" toolchain="mcuxpresso armgcc" type="asm_include" device_cores="cm4_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM4F_RTCESL_4.8_MCUX/MLIB/Include" toolchain="mcuxpresso armgcc" type="asm_include" device_cores="cm4_MIMXRT1176xxxxx" fpu="true"/>
      </include_paths>
    </component>
    <component id="middleware.rtcesl.cm7f.MIMXRT1176" name="Real Time Control Embedded Software Motor Control and Power Conversion Libraries" brief="Real Time Control Embedded Software Library for CM7F core" version="4.8" full_name="Middleware rtcesl cm7f" category="RTCESL/Cortex-M" user_visible="true" type="middleware" package_base_path="middleware/rtcesl" project_base_path="rtcesl">
      <dependencies>
        <all>
          <device_dependency value="MIMXRT1176xxxxx"/>
          <device_core_dependency value="cm7_MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="iar" relative_path="CM7F_RTCESL_4.8_IAR/AMCLIB/Include" type="c_include" device_cores="cm7_MIMXRT1176xxxxx" fpu="true">
        <files mask="amclib.h"/>
        <files mask="AMCLIB_ACIMCtrlMTPA_FLT.h"/>
        <files mask="AMCLIB_ACIMRotFluxObsrv_FLT.h"/>
        <files mask="AMCLIB_ACIMSpeedMRAS_FLT.h"/>
        <files mask="AMCLIB_AngleTrackObsrv_F32.h"/>
        <files mask="AMCLIB_AngleTrackObsrv_FLT.h"/>
        <files mask="AMCLIB_CtrlFluxWkng_A32.h"/>
        <files mask="AMCLIB_CtrlFluxWkng_FLT.h"/>
        <files mask="amclib_FP.h"/>
        <files mask="AMCLIB_PMSMBemfObsrvAB_A32.h"/>
        <files mask="AMCLIB_PMSMBemfObsrvAB_FLT.h"/>
        <files mask="AMCLIB_PMSMBemfObsrvDQ_A32.h"/>
        <files mask="AMCLIB_PMSMBemfObsrvDQ_FLT.h"/>
        <files mask="AMCLIB_TrackObsrv_F32.h"/>
        <files mask="AMCLIB_TrackObsrv_FLT.h"/>
        <files mask="amclib_types.h"/>
      </source>
      <source toolchain="iar" relative_path="CM7F_RTCESL_4.8_IAR/GDFLIB/Include" type="c_include" device_cores="cm7_MIMXRT1176xxxxx" fpu="true">
        <files mask="gdflib.h"/>
        <files mask="GDFLIB_FilterExp_F32.h"/>
        <files mask="GDFLIB_FilterExp_FLT.h"/>
        <files mask="GDFLIB_FilterIIR1_F32.h"/>
        <files mask="GDFLIB_FilterIIR1_F32_Asmi.h"/>
        <files mask="GDFLIB_FilterIIR1_FLT.h"/>
        <files mask="GDFLIB_FilterIIR2_F32.h"/>
        <files mask="GDFLIB_FilterIIR2_FLT.h"/>
        <files mask="GDFLIB_FilterIIR3_F32.h"/>
        <files mask="GDFLIB_FilterIIR3_FLT.h"/>
        <files mask="GDFLIB_FilterIIR4_F32.h"/>
        <files mask="GDFLIB_FilterIIR4_FLT.h"/>
        <files mask="GDFLIB_FilterMA_A32.h"/>
        <files mask="GDFLIB_FilterMA_FLT.h"/>
        <files mask="gdflib_FP.h"/>
        <files mask="gdflib_types.h"/>
      </source>
      <source toolchain="iar" relative_path="CM7F_RTCESL_4.8_IAR/GFLIB/Include" type="c_include" device_cores="cm7_MIMXRT1176xxxxx" fpu="true">
        <files mask="gflib.h"/>
        <files mask="GFLIB_Acos_F16.h"/>
        <files mask="GFLIB_Acos_FLT.h"/>
        <files mask="GFLIB_Asin_F16.h"/>
        <files mask="GFLIB_Asin_FLT.h"/>
        <files mask="GFLIB_Atan_F32.h"/>
        <files mask="GFLIB_Atan_FLT.h"/>
        <files mask="GFLIB_AtanYX_F16.h"/>
        <files mask="GFLIB_AtanYX_FLT.h"/>
        <files mask="GFLIB_CtrlBetaIPDp_A32.h"/>
        <files mask="GFLIB_CtrlBetaIPDp_FLT.h"/>
        <files mask="GFLIB_CtrlBetaIPp_A32.h"/>
        <files mask="GFLIB_CtrlBetaIPp_FLT.h"/>
        <files mask="GFLIB_CtrlPIDp_A32.h"/>
        <files mask="GFLIB_CtrlPIDp_FLT.h"/>
        <files mask="GFLIB_CtrlPIp_A32.h"/>
        <files mask="GFLIB_CtrlPIp_FLT.h"/>
        <files mask="GFLIB_DFlexRamp_A32.h"/>
        <files mask="GFLIB_DFlexRamp_FLT.h"/>
        <files mask="GFLIB_DRamp_F16.h"/>
        <files mask="GFLIB_DRamp_F32.h"/>
        <files mask="GFLIB_DRamp_FLT.h"/>
        <files mask="GFLIB_FlexRamp_A32.h"/>
        <files mask="GFLIB_FlexRamp_FLT.h"/>
        <files mask="GFLIB_FlexSRamp_A32.h"/>
        <files mask="GFLIB_FlexSRamp_FLT.h"/>
        <files mask="gflib_FP.h"/>
        <files mask="GFLIB_Hyst_F16_Asmi.h"/>
        <files mask="GFLIB_Hyst_FLT.h"/>
        <files mask="GFLIB_Integrator_A32.h"/>
        <files mask="GFLIB_Integrator_FLT.h"/>
        <files mask="GFLIB_Limit_F16.h"/>
        <files mask="GFLIB_Limit_F32.h"/>
        <files mask="GFLIB_Limit_FLT.h"/>
        <files mask="GFLIB_LowerLimit_F16.h"/>
        <files mask="GFLIB_LowerLimit_F32.h"/>
        <files mask="GFLIB_LowerLimit_FLT.h"/>
        <files mask="GFLIB_Lut_F16_Asmi.h"/>
        <files mask="GFLIB_Lut_F32.h"/>
        <files mask="GFLIB_Lut_FLT.h"/>
        <files mask="GFLIB_LutPer_F16_Asmi.h"/>
        <files mask="GFLIB_LutPer_F32.h"/>
        <files mask="GFLIB_LutPer_FLT.h"/>
        <files mask="GFLIB_Ramp_F16.h"/>
        <files mask="GFLIB_Ramp_F32.h"/>
        <files mask="GFLIB_Ramp_FLT.h"/>
        <files mask="GFLIB_SinCos_F32.h"/>
        <files mask="GFLIB_SinCos_FLT.h"/>
        <files mask="GFLIB_Sqrt_F16.h"/>
        <files mask="GFLIB_Sqrt_F32.h"/>
        <files mask="GFLIB_Sqrt_FLT_Asmi.h"/>
        <files mask="GFLIB_Tan_F32.h"/>
        <files mask="GFLIB_Tan_FLT.h"/>
        <files mask="gflib_types.h"/>
        <files mask="GFLIB_UpperLimit_F16.h"/>
        <files mask="GFLIB_UpperLimit_F32.h"/>
        <files mask="GFLIB_UpperLimit_FLT.h"/>
        <files mask="GFLIB_VectorLimit_F16.h"/>
        <files mask="GFLIB_VectorLimit_FLT.h"/>
      </source>
      <source toolchain="iar" relative_path="CM7F_RTCESL_4.8_IAR/GMCLIB/Include" type="c_include" device_cores="cm7_MIMXRT1176xxxxx" fpu="true">
        <files mask="gmclib.h"/>
        <files mask="GMCLIB_Clark_F16_Asmi.h"/>
        <files mask="GMCLIB_Clark_FLT.h"/>
        <files mask="GMCLIB_Decoupling_A32.h"/>
        <files mask="GMCLIB_DTCompLut1D_F16.h"/>
        <files mask="GMCLIB_Decoupling_FLT.h"/>
        <files mask="GMCLIB_ElimDcBusRip_A32_Asmi.h"/>
        <files mask="GMCLIB_ElimDcBusRip_F16_Asmi.h"/>
        <files mask="GMCLIB_ElimDcBusRip_FLT.h"/>
        <files mask="gmclib_FP.h"/>
        <files mask="GMCLIB_Park_F16_Asmi.h"/>
        <files mask="GMCLIB_Park_FLT.h"/>
        <files mask="GMCLIB_Svm_F16.h"/>
        <files mask="gmclib_types.h"/>
      </source>
      <source toolchain="iar" relative_path="CM7F_RTCESL_4.8_IAR/MLIB/Include" type="c_include" device_cores="cm7_MIMXRT1176xxxxx" fpu="true">
        <files mask="asm_mac.h"/>
        <files mask="mlib.h"/>
        <files mask="MLIB_Abs_F16.h"/>
        <files mask="MLIB_Abs_F16_Asmi.h"/>
        <files mask="MLIB_Abs_F32.h"/>
        <files mask="MLIB_Abs_F32_Asmi.h"/>
        <files mask="MLIB_Abs_FLT.h"/>
        <files mask="MLIB_Abs_FLT_Asmi.h"/>
        <files mask="MLIB_Add_A32.h"/>
        <files mask="MLIB_Add_F16.h"/>
        <files mask="MLIB_Add_F16_Asmi.h"/>
        <files mask="MLIB_Add_F32.h"/>
        <files mask="MLIB_Add_F32_Asmi.h"/>
        <files mask="MLIB_Add_FLT.h"/>
        <files mask="MLIB_Add4_F16_Asmi.h"/>
        <files mask="MLIB_Add4_F32_Asmi.h"/>
        <files mask="MLIB_Add4_FLT.h"/>
        <files mask="MLIB_BiShift_F16.h"/>
        <files mask="MLIB_BiShift_F32.h"/>
        <files mask="MLIB_Clb_F16.h"/>
        <files mask="MLIB_Clb_F32.h"/>
        <files mask="MLIB_Conv_F32.h"/>
        <files mask="MLIB_Conv_FLT_Asmi.h"/>
        <files mask="MLIB_ConvSc_FLT_Asmi.h"/>
        <files mask="MLIB_Div_A32.h"/>
        <files mask="MLIB_Div_F16.h"/>
        <files mask="MLIB_Div_F32.h"/>
        <files mask="MLIB_Div_FLT.h"/>
        <files mask="MLIB_Div1Q_A32.h"/>
        <files mask="MLIB_Div1Q_F16.h"/>
        <files mask="MLIB_Div1Q_F32.h"/>
        <files mask="mlib_FP.h"/>
        <files mask="MLIB_Log2_U16.h"/>
        <files mask="MLIB_Mac_A32.h"/>
        <files mask="MLIB_Mac_F16_Asmi.h"/>
        <files mask="MLIB_Mac_F32.h"/>
        <files mask="MLIB_Mac_F32_Asmi.h"/>
        <files mask="MLIB_Mac_FLT.h"/>
        <files mask="MLIB_Mac4_F32.h"/>
        <files mask="MLIB_Mac4_F32_Asmi.h"/>
        <files mask="MLIB_Mac4_FLT.h"/>
        <files mask="MLIB_Mac4Rnd_F16_Asmi.h"/>
        <files mask="MLIB_Mac4Rnd_F32.h"/>
        <files mask="MLIB_Mac4Rnd_F32_Asmi.h"/>
        <files mask="MLIB_MacRnd_A32.h"/>
        <files mask="MLIB_MacRnd_F16_Asmi.h"/>
        <files mask="MLIB_MacRnd_F32.h"/>
        <files mask="MLIB_MacRnd_F32_Asmi.h"/>
        <files mask="MLIB_Mnac_A32.h"/>
        <files mask="MLIB_Mnac_F16_Asmi.h"/>
        <files mask="MLIB_Mnac_F32.h"/>
        <files mask="MLIB_Mnac_F32_Asmi.h"/>
        <files mask="MLIB_Mnac_FLT.h"/>
        <files mask="MLIB_MnacRnd_A32.h"/>
        <files mask="MLIB_MnacRnd_F16_Asmi.h"/>
        <files mask="MLIB_MnacRnd_F32.h"/>
        <files mask="MLIB_MnacRnd_F32_Asmi.h"/>
        <files mask="MLIB_Msu_A32.h"/>
        <files mask="MLIB_Msu_F16_Asmi.h"/>
        <files mask="MLIB_Msu_F32_Asmi.h"/>
        <files mask="MLIB_Msu_FLT.h"/>
        <files mask="MLIB_Msu4_F32.h"/>
        <files mask="MLIB_Msu4_F32_Asmi.h"/>
        <files mask="MLIB_Msu4_FLT.h"/>
        <files mask="MLIB_Msu4Rnd_F16.h"/>
        <files mask="MLIB_Msu4Rnd_F16_Asmi.h"/>
        <files mask="MLIB_Msu4Rnd_F32.h"/>
        <files mask="MLIB_Msu4Rnd_F32_Asmi.h"/>
        <files mask="MLIB_MsuRnd_A32.h"/>
        <files mask="MLIB_MsuRnd_F16_Asmi.h"/>
        <files mask="MLIB_MsuRnd_F32.h"/>
        <files mask="MLIB_MsuRnd_F32_Asmi.h"/>
        <files mask="MLIB_Mul_A32.h"/>
        <files mask="MLIB_Mul_A32_Asmi.h"/>
        <files mask="MLIB_Mul_F16.h"/>
        <files mask="MLIB_Mul_F16_Asmi.h"/>
        <files mask="MLIB_Mul_F32.h"/>
        <files mask="MLIB_Mul_F32_Asmi.h"/>
        <files mask="MLIB_Mul_FLT.h"/>
        <files mask="MLIB_MulRnd_A32.h"/>
        <files mask="MLIB_MulRnd_A32_Asmi.h"/>
        <files mask="MLIB_MulRnd_F16.h"/>
        <files mask="MLIB_MulRnd_F16_Asmi.h"/>
        <files mask="MLIB_MulRnd_F32.h"/>
        <files mask="MLIB_MulRnd_F32_Asmi.h"/>
        <files mask="MLIB_Neg_F16.h"/>
        <files mask="MLIB_Neg_F16_Asmi.h"/>
        <files mask="MLIB_Neg_F32.h"/>
        <files mask="MLIB_Neg_F32_Asmi.h"/>
        <files mask="MLIB_Neg_FLT.h"/>
        <files mask="MLIB_Rcp_A32.h"/>
        <files mask="MLIB_Rcp1Q_A32.h"/>
        <files mask="MLIB_Rnd_F32.h"/>
        <files mask="MLIB_Rnd_F32_Asmi.h"/>
        <files mask="MLIB_Sat_A32_Asmi.h"/>
        <files mask="MLIB_Shift_F16.h"/>
        <files mask="MLIB_Shift_F16_Asmi.h"/>
        <files mask="MLIB_Shift_F32.h"/>
        <files mask="MLIB_Shift_F32_Asmi.h"/>
        <files mask="MLIB_Sign_F16_Asmi.h"/>
        <files mask="MLIB_Sign_F32_Asmi.h"/>
        <files mask="MLIB_Sign_FLT_Asmi.h"/>
        <files mask="MLIB_Sub_A32.h"/>
        <files mask="MLIB_Sub_F16.h"/>
        <files mask="MLIB_Sub_F16_Asmi.h"/>
        <files mask="MLIB_Sub_F32.h"/>
        <files mask="MLIB_Sub_F32_Asmi.h"/>
        <files mask="MLIB_Sub_F64.h"/>
        <files mask="MLIB_Sub_FLT.h"/>
        <files mask="MLIB_Sub4_F16_Asmi.h"/>
        <files mask="MLIB_Sub4_F32_Asmi.h"/>
        <files mask="MLIB_Sub4_FLT.h"/>
        <files mask="mlib_types.h"/>
        <files mask="RTCESL_cfg.h"/>
      </source>
      <source toolchain="mdk" relative_path="CM7F_RTCESL_4.8_KEIL/AMCLIB/Include" type="c_include" device_cores="cm7_MIMXRT1176xxxxx" fpu="true">
        <files mask="amclib.h"/>
        <files mask="AMCLIB_ACIMCtrlMTPA_FLT.h"/>
        <files mask="AMCLIB_ACIMRotFluxObsrv_FLT.h"/>
        <files mask="AMCLIB_ACIMSpeedMRAS_FLT.h"/>
        <files mask="AMCLIB_AngleTrackObsrv_F32.h"/>
        <files mask="AMCLIB_AngleTrackObsrv_FLT.h"/>
        <files mask="AMCLIB_CtrlFluxWkng_A32.h"/>
        <files mask="AMCLIB_CtrlFluxWkng_FLT.h"/>
        <files mask="amclib_FP.h"/>
        <files mask="AMCLIB_PMSMBemfObsrvAB_A32.h"/>
        <files mask="AMCLIB_PMSMBemfObsrvAB_FLT.h"/>
        <files mask="AMCLIB_PMSMBemfObsrvDQ_A32.h"/>
        <files mask="AMCLIB_PMSMBemfObsrvDQ_FLT.h"/>
        <files mask="AMCLIB_TrackObsrv_F32.h"/>
        <files mask="AMCLIB_TrackObsrv_FLT.h"/>
        <files mask="amclib_types.h"/>
      </source>
      <source toolchain="mdk" relative_path="CM7F_RTCESL_4.8_KEIL/GDFLIB/Include" type="c_include" device_cores="cm7_MIMXRT1176xxxxx" fpu="true">
        <files mask="gdflib.h"/>
        <files mask="GDFLIB_FilterExp_F32.h"/>
        <files mask="GDFLIB_FilterExp_FLT.h"/>
        <files mask="GDFLIB_FilterIIR1_F32.h"/>
        <files mask="GDFLIB_FilterIIR1_F32_Asmi.h"/>
        <files mask="GDFLIB_FilterIIR1_FLT.h"/>
        <files mask="GDFLIB_FilterIIR2_F32.h"/>
        <files mask="GDFLIB_FilterIIR2_FLT.h"/>
        <files mask="GDFLIB_FilterIIR3_F32.h"/>
        <files mask="GDFLIB_FilterIIR3_FLT.h"/>
        <files mask="GDFLIB_FilterIIR4_F32.h"/>
        <files mask="GDFLIB_FilterIIR4_FLT.h"/>
        <files mask="GDFLIB_FilterMA_A32.h"/>
        <files mask="GDFLIB_FilterMA_FLT.h"/>
        <files mask="gdflib_FP.h"/>
        <files mask="gdflib_types.h"/>
      </source>
      <source toolchain="mdk" relative_path="CM7F_RTCESL_4.8_KEIL/GFLIB/Include" type="c_include" device_cores="cm7_MIMXRT1176xxxxx" fpu="true">
        <files mask="gflib.h"/>
        <files mask="GFLIB_Acos_F16.h"/>
        <files mask="GFLIB_Acos_FLT.h"/>
        <files mask="GFLIB_Asin_F16.h"/>
        <files mask="GFLIB_Asin_FLT.h"/>
        <files mask="GFLIB_Atan_F32.h"/>
        <files mask="GFLIB_Atan_FLT.h"/>
        <files mask="GFLIB_AtanYX_F16.h"/>
        <files mask="GFLIB_AtanYX_FLT.h"/>
        <files mask="GFLIB_CtrlBetaIPDp_A32.h"/>
        <files mask="GFLIB_CtrlBetaIPDp_FLT.h"/>
        <files mask="GFLIB_CtrlBetaIPp_A32.h"/>
        <files mask="GFLIB_CtrlBetaIPp_FLT.h"/>
        <files mask="GFLIB_CtrlPIDp_A32.h"/>
        <files mask="GFLIB_CtrlPIDp_FLT.h"/>
        <files mask="GFLIB_CtrlPIp_A32.h"/>
        <files mask="GFLIB_CtrlPIp_FLT.h"/>
        <files mask="GFLIB_DFlexRamp_A32.h"/>
        <files mask="GFLIB_DFlexRamp_FLT.h"/>
        <files mask="GFLIB_DRamp_F16.h"/>
        <files mask="GFLIB_DRamp_F32.h"/>
        <files mask="GFLIB_DRamp_FLT.h"/>
        <files mask="GFLIB_FlexRamp_A32.h"/>
        <files mask="GFLIB_FlexRamp_FLT.h"/>
        <files mask="GFLIB_FlexSRamp_A32.h"/>
        <files mask="GFLIB_FlexSRamp_FLT.h"/>
        <files mask="gflib_FP.h"/>
        <files mask="GFLIB_Hyst_F16_Asmi.h"/>
        <files mask="GFLIB_Hyst_FLT.h"/>
        <files mask="GFLIB_Integrator_A32.h"/>
        <files mask="GFLIB_Integrator_FLT.h"/>
        <files mask="GFLIB_Limit_F16.h"/>
        <files mask="GFLIB_Limit_F32.h"/>
        <files mask="GFLIB_Limit_FLT.h"/>
        <files mask="GFLIB_LowerLimit_F16.h"/>
        <files mask="GFLIB_LowerLimit_F32.h"/>
        <files mask="GFLIB_LowerLimit_FLT.h"/>
        <files mask="GFLIB_Lut_F16_Asmi.h"/>
        <files mask="GFLIB_Lut_F32.h"/>
        <files mask="GFLIB_Lut_FLT.h"/>
        <files mask="GFLIB_LutPer_F16_Asmi.h"/>
        <files mask="GFLIB_LutPer_F32.h"/>
        <files mask="GFLIB_LutPer_FLT.h"/>
        <files mask="GFLIB_Ramp_F16.h"/>
        <files mask="GFLIB_Ramp_F32.h"/>
        <files mask="GFLIB_Ramp_FLT.h"/>
        <files mask="GFLIB_SinCos_F32.h"/>
        <files mask="GFLIB_SinCos_FLT.h"/>
        <files mask="GFLIB_Sqrt_F16.h"/>
        <files mask="GFLIB_Sqrt_F32.h"/>
        <files mask="GFLIB_Sqrt_FLT_Asmi.h"/>
        <files mask="GFLIB_Tan_F32.h"/>
        <files mask="GFLIB_Tan_FLT.h"/>
        <files mask="gflib_types.h"/>
        <files mask="GFLIB_UpperLimit_F16.h"/>
        <files mask="GFLIB_UpperLimit_F32.h"/>
        <files mask="GFLIB_UpperLimit_FLT.h"/>
        <files mask="GFLIB_VectorLimit_F16.h"/>
        <files mask="GFLIB_VectorLimit_FLT.h"/>
      </source>
      <source toolchain="mdk" relative_path="CM7F_RTCESL_4.8_KEIL/GMCLIB/Include" type="c_include" device_cores="cm7_MIMXRT1176xxxxx" fpu="true">
        <files mask="gmclib.h"/>
        <files mask="GMCLIB_Clark_F16_Asmi.h"/>
        <files mask="GMCLIB_Clark_FLT.h"/>
        <files mask="GMCLIB_Decoupling_A32.h"/>
        <files mask="GMCLIB_DTCompLut1D_F16.h"/>
        <files mask="GMCLIB_Decoupling_FLT.h"/>
        <files mask="GMCLIB_ElimDcBusRip_A32_Asmi.h"/>
        <files mask="GMCLIB_ElimDcBusRip_F16_Asmi.h"/>
        <files mask="GMCLIB_ElimDcBusRip_FLT.h"/>
        <files mask="gmclib_FP.h"/>
        <files mask="GMCLIB_Park_F16_Asmi.h"/>
        <files mask="GMCLIB_Park_FLT.h"/>
        <files mask="GMCLIB_Svm_F16.h"/>
        <files mask="gmclib_types.h"/>
      </source>
      <source toolchain="mdk" relative_path="CM7F_RTCESL_4.8_KEIL/MLIB/Include" type="c_include" device_cores="cm7_MIMXRT1176xxxxx" fpu="true">
        <files mask="asm_mac.h"/>
        <files mask="mlib.h"/>
        <files mask="MLIB_Abs_F16.h"/>
        <files mask="MLIB_Abs_F16_Asmi.h"/>
        <files mask="MLIB_Abs_F32.h"/>
        <files mask="MLIB_Abs_F32_Asmi.h"/>
        <files mask="MLIB_Abs_FLT.h"/>
        <files mask="MLIB_Abs_FLT_Asmi.h"/>
        <files mask="MLIB_Add_A32.h"/>
        <files mask="MLIB_Add_F16.h"/>
        <files mask="MLIB_Add_F16_Asmi.h"/>
        <files mask="MLIB_Add_F32.h"/>
        <files mask="MLIB_Add_F32_Asmi.h"/>
        <files mask="MLIB_Add_FLT.h"/>
        <files mask="MLIB_Add4_F16_Asmi.h"/>
        <files mask="MLIB_Add4_F32_Asmi.h"/>
        <files mask="MLIB_Add4_FLT.h"/>
        <files mask="MLIB_BiShift_F16.h"/>
        <files mask="MLIB_BiShift_F32.h"/>
        <files mask="MLIB_Clb_F16.h"/>
        <files mask="MLIB_Clb_F32.h"/>
        <files mask="MLIB_Conv_F32.h"/>
        <files mask="MLIB_Conv_FLT_Asmi.h"/>
        <files mask="MLIB_ConvSc_FLT_Asmi.h"/>
        <files mask="MLIB_Div_A32.h"/>
        <files mask="MLIB_Div_F16.h"/>
        <files mask="MLIB_Div_F32.h"/>
        <files mask="MLIB_Div_FLT.h"/>
        <files mask="MLIB_Div1Q_A32.h"/>
        <files mask="MLIB_Div1Q_F16.h"/>
        <files mask="MLIB_Div1Q_F32.h"/>
        <files mask="mlib_FP.h"/>
        <files mask="MLIB_Log2_U16.h"/>
        <files mask="MLIB_Mac_A32.h"/>
        <files mask="MLIB_Mac_F16_Asmi.h"/>
        <files mask="MLIB_Mac_F32.h"/>
        <files mask="MLIB_Mac_F32_Asmi.h"/>
        <files mask="MLIB_Mac_FLT.h"/>
        <files mask="MLIB_Mac4_F32.h"/>
        <files mask="MLIB_Mac4_F32_Asmi.h"/>
        <files mask="MLIB_Mac4_FLT.h"/>
        <files mask="MLIB_Mac4Rnd_F16_Asmi.h"/>
        <files mask="MLIB_Mac4Rnd_F32.h"/>
        <files mask="MLIB_Mac4Rnd_F32_Asmi.h"/>
        <files mask="MLIB_MacRnd_A32.h"/>
        <files mask="MLIB_MacRnd_F16_Asmi.h"/>
        <files mask="MLIB_MacRnd_F32.h"/>
        <files mask="MLIB_MacRnd_F32_Asmi.h"/>
        <files mask="MLIB_Mnac_A32.h"/>
        <files mask="MLIB_Mnac_F16_Asmi.h"/>
        <files mask="MLIB_Mnac_F32.h"/>
        <files mask="MLIB_Mnac_F32_Asmi.h"/>
        <files mask="MLIB_Mnac_FLT.h"/>
        <files mask="MLIB_MnacRnd_A32.h"/>
        <files mask="MLIB_MnacRnd_F16_Asmi.h"/>
        <files mask="MLIB_MnacRnd_F32.h"/>
        <files mask="MLIB_MnacRnd_F32_Asmi.h"/>
        <files mask="MLIB_Msu_A32.h"/>
        <files mask="MLIB_Msu_F16_Asmi.h"/>
        <files mask="MLIB_Msu_F32_Asmi.h"/>
        <files mask="MLIB_Msu_FLT.h"/>
        <files mask="MLIB_Msu4_F32.h"/>
        <files mask="MLIB_Msu4_F32_Asmi.h"/>
        <files mask="MLIB_Msu4_FLT.h"/>
        <files mask="MLIB_Msu4Rnd_F16.h"/>
        <files mask="MLIB_Msu4Rnd_F16_Asmi.h"/>
        <files mask="MLIB_Msu4Rnd_F32.h"/>
        <files mask="MLIB_Msu4Rnd_F32_Asmi.h"/>
        <files mask="MLIB_MsuRnd_A32.h"/>
        <files mask="MLIB_MsuRnd_F16_Asmi.h"/>
        <files mask="MLIB_MsuRnd_F32.h"/>
        <files mask="MLIB_MsuRnd_F32_Asmi.h"/>
        <files mask="MLIB_Mul_A32.h"/>
        <files mask="MLIB_Mul_A32_Asmi.h"/>
        <files mask="MLIB_Mul_F16.h"/>
        <files mask="MLIB_Mul_F16_Asmi.h"/>
        <files mask="MLIB_Mul_F32.h"/>
        <files mask="MLIB_Mul_F32_Asmi.h"/>
        <files mask="MLIB_Mul_FLT.h"/>
        <files mask="MLIB_MulRnd_A32.h"/>
        <files mask="MLIB_MulRnd_A32_Asmi.h"/>
        <files mask="MLIB_MulRnd_F16.h"/>
        <files mask="MLIB_MulRnd_F16_Asmi.h"/>
        <files mask="MLIB_MulRnd_F32.h"/>
        <files mask="MLIB_MulRnd_F32_Asmi.h"/>
        <files mask="MLIB_Neg_F16.h"/>
        <files mask="MLIB_Neg_F16_Asmi.h"/>
        <files mask="MLIB_Neg_F32.h"/>
        <files mask="MLIB_Neg_F32_Asmi.h"/>
        <files mask="MLIB_Neg_FLT.h"/>
        <files mask="MLIB_Rcp_A32.h"/>
        <files mask="MLIB_Rcp1Q_A32.h"/>
        <files mask="MLIB_Rnd_F32.h"/>
        <files mask="MLIB_Rnd_F32_Asmi.h"/>
        <files mask="MLIB_Sat_A32_Asmi.h"/>
        <files mask="MLIB_Shift_F16.h"/>
        <files mask="MLIB_Shift_F16_Asmi.h"/>
        <files mask="MLIB_Shift_F32.h"/>
        <files mask="MLIB_Shift_F32_Asmi.h"/>
        <files mask="MLIB_Sign_F16_Asmi.h"/>
        <files mask="MLIB_Sign_F32_Asmi.h"/>
        <files mask="MLIB_Sign_FLT_Asmi.h"/>
        <files mask="MLIB_Sub_A32.h"/>
        <files mask="MLIB_Sub_F16.h"/>
        <files mask="MLIB_Sub_F16_Asmi.h"/>
        <files mask="MLIB_Sub_F32.h"/>
        <files mask="MLIB_Sub_F32_Asmi.h"/>
        <files mask="MLIB_Sub_F64.h"/>
        <files mask="MLIB_Sub_FLT.h"/>
        <files mask="MLIB_Sub4_F16_Asmi.h"/>
        <files mask="MLIB_Sub4_F32_Asmi.h"/>
        <files mask="MLIB_Sub4_FLT.h"/>
        <files mask="mlib_types.h"/>
        <files mask="RTCESL_cfg.h"/>
      </source>
      <source toolchain="mcuxpresso armgcc" relative_path="CM7F_RTCESL_4.8_MCUX/AMCLIB/Include" type="c_include" device_cores="cm7_MIMXRT1176xxxxx" fpu="true">
        <files mask="amclib.h"/>
        <files mask="AMCLIB_ACIMCtrlMTPA_FLT.h"/>
        <files mask="AMCLIB_ACIMRotFluxObsrv_FLT.h"/>
        <files mask="AMCLIB_ACIMSpeedMRAS_FLT.h"/>
        <files mask="AMCLIB_AngleTrackObsrv_F32.h"/>
        <files mask="AMCLIB_AngleTrackObsrv_FLT.h"/>
        <files mask="AMCLIB_CtrlFluxWkng_A32.h"/>
        <files mask="AMCLIB_CtrlFluxWkng_FLT.h"/>
        <files mask="amclib_FP.h"/>
        <files mask="AMCLIB_PMSMBemfObsrvAB_A32.h"/>
        <files mask="AMCLIB_PMSMBemfObsrvAB_FLT.h"/>
        <files mask="AMCLIB_PMSMBemfObsrvDQ_A32.h"/>
        <files mask="AMCLIB_PMSMBemfObsrvDQ_FLT.h"/>
        <files mask="AMCLIB_TrackObsrv_F32.h"/>
        <files mask="AMCLIB_TrackObsrv_FLT.h"/>
        <files mask="amclib_types.h"/>
      </source>
      <source toolchain="mcuxpresso armgcc" relative_path="CM7F_RTCESL_4.8_MCUX/GDFLIB/Include" type="c_include" device_cores="cm7_MIMXRT1176xxxxx" fpu="true">
        <files mask="gdflib.h"/>
        <files mask="GDFLIB_FilterExp_F32.h"/>
        <files mask="GDFLIB_FilterExp_FLT.h"/>
        <files mask="GDFLIB_FilterIIR1_F32.h"/>
        <files mask="GDFLIB_FilterIIR1_F32_Asmi.h"/>
        <files mask="GDFLIB_FilterIIR1_FLT.h"/>
        <files mask="GDFLIB_FilterIIR2_F32.h"/>
        <files mask="GDFLIB_FilterIIR2_FLT.h"/>
        <files mask="GDFLIB_FilterIIR3_F32.h"/>
        <files mask="GDFLIB_FilterIIR3_FLT.h"/>
        <files mask="GDFLIB_FilterIIR4_F32.h"/>
        <files mask="GDFLIB_FilterIIR4_FLT.h"/>
        <files mask="GDFLIB_FilterMA_A32.h"/>
        <files mask="GDFLIB_FilterMA_FLT.h"/>
        <files mask="gdflib_FP.h"/>
        <files mask="gdflib_types.h"/>
      </source>
      <source toolchain="mcuxpresso armgcc" relative_path="CM7F_RTCESL_4.8_MCUX/GFLIB/Include" type="c_include" device_cores="cm7_MIMXRT1176xxxxx" fpu="true">
        <files mask="gflib.h"/>
        <files mask="GFLIB_Acos_F16.h"/>
        <files mask="GFLIB_Acos_FLT.h"/>
        <files mask="GFLIB_Asin_F16.h"/>
        <files mask="GFLIB_Asin_FLT.h"/>
        <files mask="GFLIB_Atan_F32.h"/>
        <files mask="GFLIB_Atan_FLT.h"/>
        <files mask="GFLIB_AtanYX_F16.h"/>
        <files mask="GFLIB_AtanYX_FLT.h"/>
        <files mask="GFLIB_CtrlBetaIPDp_A32.h"/>
        <files mask="GFLIB_CtrlBetaIPDp_FLT.h"/>
        <files mask="GFLIB_CtrlBetaIPp_A32.h"/>
        <files mask="GFLIB_CtrlBetaIPp_FLT.h"/>
        <files mask="GFLIB_CtrlPIDp_A32.h"/>
        <files mask="GFLIB_CtrlPIDp_FLT.h"/>
        <files mask="GFLIB_CtrlPIp_A32.h"/>
        <files mask="GFLIB_CtrlPIp_FLT.h"/>
        <files mask="GFLIB_DFlexRamp_A32.h"/>
        <files mask="GFLIB_DFlexRamp_FLT.h"/>
        <files mask="GFLIB_DRamp_F16.h"/>
        <files mask="GFLIB_DRamp_F32.h"/>
        <files mask="GFLIB_DRamp_FLT.h"/>
        <files mask="GFLIB_FlexRamp_A32.h"/>
        <files mask="GFLIB_FlexRamp_FLT.h"/>
        <files mask="GFLIB_FlexSRamp_A32.h"/>
        <files mask="GFLIB_FlexSRamp_FLT.h"/>
        <files mask="gflib_FP.h"/>
        <files mask="GFLIB_Hyst_F16_Asmi.h"/>
        <files mask="GFLIB_Hyst_FLT.h"/>
        <files mask="GFLIB_Integrator_A32.h"/>
        <files mask="GFLIB_Integrator_FLT.h"/>
        <files mask="GFLIB_Limit_F16.h"/>
        <files mask="GFLIB_Limit_F32.h"/>
        <files mask="GFLIB_Limit_FLT.h"/>
        <files mask="GFLIB_LowerLimit_F16.h"/>
        <files mask="GFLIB_LowerLimit_F32.h"/>
        <files mask="GFLIB_LowerLimit_FLT.h"/>
        <files mask="GFLIB_Lut_F16_Asmi.h"/>
        <files mask="GFLIB_Lut_F32.h"/>
        <files mask="GFLIB_Lut_FLT.h"/>
        <files mask="GFLIB_LutPer_F16_Asmi.h"/>
        <files mask="GFLIB_LutPer_F32.h"/>
        <files mask="GFLIB_LutPer_FLT.h"/>
        <files mask="GFLIB_Ramp_F16.h"/>
        <files mask="GFLIB_Ramp_F32.h"/>
        <files mask="GFLIB_Ramp_FLT.h"/>
        <files mask="GFLIB_SinCos_F32.h"/>
        <files mask="GFLIB_SinCos_FLT.h"/>
        <files mask="GFLIB_Sqrt_F16.h"/>
        <files mask="GFLIB_Sqrt_F32.h"/>
        <files mask="GFLIB_Sqrt_FLT_Asmi.h"/>
        <files mask="GFLIB_Tan_F32.h"/>
        <files mask="GFLIB_Tan_FLT.h"/>
        <files mask="gflib_types.h"/>
        <files mask="GFLIB_UpperLimit_F16.h"/>
        <files mask="GFLIB_UpperLimit_F32.h"/>
        <files mask="GFLIB_UpperLimit_FLT.h"/>
        <files mask="GFLIB_VectorLimit_F16.h"/>
        <files mask="GFLIB_VectorLimit_FLT.h"/>
      </source>
      <source toolchain="mcuxpresso armgcc" relative_path="CM7F_RTCESL_4.8_MCUX/GMCLIB/Include" type="c_include" device_cores="cm7_MIMXRT1176xxxxx" fpu="true">
        <files mask="gmclib.h"/>
        <files mask="GMCLIB_Clark_F16_Asmi.h"/>
        <files mask="GMCLIB_Clark_FLT.h"/>
        <files mask="GMCLIB_Decoupling_A32.h"/>
        <files mask="GMCLIB_DTCompLut1D_F16.h"/>
        <files mask="GMCLIB_Decoupling_FLT.h"/>
        <files mask="GMCLIB_ElimDcBusRip_A32_Asmi.h"/>
        <files mask="GMCLIB_ElimDcBusRip_F16_Asmi.h"/>
        <files mask="GMCLIB_ElimDcBusRip_FLT.h"/>
        <files mask="gmclib_FP.h"/>
        <files mask="GMCLIB_Park_F16_Asmi.h"/>
        <files mask="GMCLIB_Park_FLT.h"/>
        <files mask="GMCLIB_Svm_F16.h"/>
        <files mask="gmclib_types.h"/>
      </source>
      <source toolchain="mcuxpresso armgcc" relative_path="CM7F_RTCESL_4.8_MCUX/MLIB/Include" type="c_include" device_cores="cm7_MIMXRT1176xxxxx" fpu="true">
        <files mask="asm_mac.h"/>
        <files mask="mlib.h"/>
        <files mask="MLIB_Abs_F16.h"/>
        <files mask="MLIB_Abs_F16_Asmi.h"/>
        <files mask="MLIB_Abs_F32.h"/>
        <files mask="MLIB_Abs_F32_Asmi.h"/>
        <files mask="MLIB_Abs_FLT.h"/>
        <files mask="MLIB_Abs_FLT_Asmi.h"/>
        <files mask="MLIB_Add_A32.h"/>
        <files mask="MLIB_Add_F16.h"/>
        <files mask="MLIB_Add_F16_Asmi.h"/>
        <files mask="MLIB_Add_F32.h"/>
        <files mask="MLIB_Add_F32_Asmi.h"/>
        <files mask="MLIB_Add_FLT.h"/>
        <files mask="MLIB_Add4_F16_Asmi.h"/>
        <files mask="MLIB_Add4_F32_Asmi.h"/>
        <files mask="MLIB_Add4_FLT.h"/>
        <files mask="MLIB_BiShift_F16.h"/>
        <files mask="MLIB_BiShift_F32.h"/>
        <files mask="MLIB_Clb_F16.h"/>
        <files mask="MLIB_Clb_F32.h"/>
        <files mask="MLIB_Conv_F32.h"/>
        <files mask="MLIB_Conv_FLT_Asmi.h"/>
        <files mask="MLIB_ConvSc_FLT_Asmi.h"/>
        <files mask="MLIB_Div_A32.h"/>
        <files mask="MLIB_Div_F16.h"/>
        <files mask="MLIB_Div_F32.h"/>
        <files mask="MLIB_Div_FLT.h"/>
        <files mask="MLIB_Div1Q_A32.h"/>
        <files mask="MLIB_Div1Q_F16.h"/>
        <files mask="MLIB_Div1Q_F32.h"/>
        <files mask="mlib_FP.h"/>
        <files mask="MLIB_Log2_U16.h"/>
        <files mask="MLIB_Mac_A32.h"/>
        <files mask="MLIB_Mac_F16_Asmi.h"/>
        <files mask="MLIB_Mac_F32.h"/>
        <files mask="MLIB_Mac_F32_Asmi.h"/>
        <files mask="MLIB_Mac_FLT.h"/>
        <files mask="MLIB_Mac4_F32.h"/>
        <files mask="MLIB_Mac4_F32_Asmi.h"/>
        <files mask="MLIB_Mac4_FLT.h"/>
        <files mask="MLIB_Mac4Rnd_F16_Asmi.h"/>
        <files mask="MLIB_Mac4Rnd_F32.h"/>
        <files mask="MLIB_Mac4Rnd_F32_Asmi.h"/>
        <files mask="MLIB_MacRnd_A32.h"/>
        <files mask="MLIB_MacRnd_F16_Asmi.h"/>
        <files mask="MLIB_MacRnd_F32.h"/>
        <files mask="MLIB_MacRnd_F32_Asmi.h"/>
        <files mask="MLIB_Mnac_A32.h"/>
        <files mask="MLIB_Mnac_F16_Asmi.h"/>
        <files mask="MLIB_Mnac_F32.h"/>
        <files mask="MLIB_Mnac_F32_Asmi.h"/>
        <files mask="MLIB_Mnac_FLT.h"/>
        <files mask="MLIB_MnacRnd_A32.h"/>
        <files mask="MLIB_MnacRnd_F16_Asmi.h"/>
        <files mask="MLIB_MnacRnd_F32.h"/>
        <files mask="MLIB_MnacRnd_F32_Asmi.h"/>
        <files mask="MLIB_Msu_A32.h"/>
        <files mask="MLIB_Msu_F16_Asmi.h"/>
        <files mask="MLIB_Msu_F32_Asmi.h"/>
        <files mask="MLIB_Msu_FLT.h"/>
        <files mask="MLIB_Msu4_F32.h"/>
        <files mask="MLIB_Msu4_F32_Asmi.h"/>
        <files mask="MLIB_Msu4_FLT.h"/>
        <files mask="MLIB_Msu4Rnd_F16.h"/>
        <files mask="MLIB_Msu4Rnd_F16_Asmi.h"/>
        <files mask="MLIB_Msu4Rnd_F32.h"/>
        <files mask="MLIB_Msu4Rnd_F32_Asmi.h"/>
        <files mask="MLIB_MsuRnd_A32.h"/>
        <files mask="MLIB_MsuRnd_F16_Asmi.h"/>
        <files mask="MLIB_MsuRnd_F32.h"/>
        <files mask="MLIB_MsuRnd_F32_Asmi.h"/>
        <files mask="MLIB_Mul_A32.h"/>
        <files mask="MLIB_Mul_A32_Asmi.h"/>
        <files mask="MLIB_Mul_F16.h"/>
        <files mask="MLIB_Mul_F16_Asmi.h"/>
        <files mask="MLIB_Mul_F32.h"/>
        <files mask="MLIB_Mul_F32_Asmi.h"/>
        <files mask="MLIB_Mul_FLT.h"/>
        <files mask="MLIB_MulRnd_A32.h"/>
        <files mask="MLIB_MulRnd_A32_Asmi.h"/>
        <files mask="MLIB_MulRnd_F16.h"/>
        <files mask="MLIB_MulRnd_F16_Asmi.h"/>
        <files mask="MLIB_MulRnd_F32.h"/>
        <files mask="MLIB_MulRnd_F32_Asmi.h"/>
        <files mask="MLIB_Neg_F16.h"/>
        <files mask="MLIB_Neg_F16_Asmi.h"/>
        <files mask="MLIB_Neg_F32.h"/>
        <files mask="MLIB_Neg_F32_Asmi.h"/>
        <files mask="MLIB_Neg_FLT.h"/>
        <files mask="MLIB_Rcp_A32.h"/>
        <files mask="MLIB_Rcp1Q_A32.h"/>
        <files mask="MLIB_Rnd_F32.h"/>
        <files mask="MLIB_Rnd_F32_Asmi.h"/>
        <files mask="MLIB_Sat_A32_Asmi.h"/>
        <files mask="MLIB_Shift_F16.h"/>
        <files mask="MLIB_Shift_F16_Asmi.h"/>
        <files mask="MLIB_Shift_F32.h"/>
        <files mask="MLIB_Shift_F32_Asmi.h"/>
        <files mask="MLIB_Sign_F16_Asmi.h"/>
        <files mask="MLIB_Sign_F32_Asmi.h"/>
        <files mask="MLIB_Sign_FLT_Asmi.h"/>
        <files mask="MLIB_Sub_A32.h"/>
        <files mask="MLIB_Sub_F16.h"/>
        <files mask="MLIB_Sub_F16_Asmi.h"/>
        <files mask="MLIB_Sub_F32.h"/>
        <files mask="MLIB_Sub_F32_Asmi.h"/>
        <files mask="MLIB_Sub_F64.h"/>
        <files mask="MLIB_Sub_FLT.h"/>
        <files mask="MLIB_Sub4_F16_Asmi.h"/>
        <files mask="MLIB_Sub4_F32_Asmi.h"/>
        <files mask="MLIB_Sub4_FLT.h"/>
        <files mask="mlib_types.h"/>
        <files mask="RTCESL_cfg.h"/>
      </source>
      <source toolchain="iar" relative_path="CM7F_RTCESL_4.8_IAR/AMCLIB" type="lib" device_cores="cm7_MIMXRT1176xxxxx" fpu="true">
        <files mask="AMCLIB.a"/>
      </source>
      <source toolchain="iar" relative_path="CM7F_RTCESL_4.8_IAR/GFLIB" type="lib" device_cores="cm7_MIMXRT1176xxxxx" fpu="true">
        <files mask="GFLIB.a"/>
      </source>
      <source toolchain="iar" relative_path="CM7F_RTCESL_4.8_IAR/GDFLIB" type="lib" device_cores="cm7_MIMXRT1176xxxxx" fpu="true">
        <files mask="GDFLIB.a"/>
      </source>
      <source toolchain="iar" relative_path="CM7F_RTCESL_4.8_IAR/GMCLIB" type="lib" device_cores="cm7_MIMXRT1176xxxxx" fpu="true">
        <files mask="GMCLIB.a"/>
      </source>
      <source toolchain="iar" relative_path="CM7F_RTCESL_4.8_IAR/MLIB" type="lib" device_cores="cm7_MIMXRT1176xxxxx" fpu="true">
        <files mask="MLIB.a"/>
      </source>
      <source toolchain="mdk" relative_path="CM7F_RTCESL_4.8_KEIL/AMCLIB" type="lib" device_cores="cm7_MIMXRT1176xxxxx" fpu="true">
        <files mask="AMCLIB.lib"/>
      </source>
      <source toolchain="mdk" relative_path="CM7F_RTCESL_4.8_KEIL/GFLIB" type="lib" device_cores="cm7_MIMXRT1176xxxxx" fpu="true">
        <files mask="GFLIB.lib"/>
      </source>
      <source toolchain="mdk" relative_path="CM7F_RTCESL_4.8_KEIL/GDFLIB" type="lib" device_cores="cm7_MIMXRT1176xxxxx" fpu="true">
        <files mask="GDFLIB.lib"/>
      </source>
      <source toolchain="mdk" relative_path="CM7F_RTCESL_4.8_KEIL/GMCLIB" type="lib" device_cores="cm7_MIMXRT1176xxxxx" fpu="true">
        <files mask="GMCLIB.lib"/>
      </source>
      <source toolchain="mdk" relative_path="CM7F_RTCESL_4.8_KEIL/MLIB" type="lib" device_cores="cm7_MIMXRT1176xxxxx" fpu="true">
        <files mask="MLIB.lib"/>
      </source>
      <source toolchain="mcuxpresso armgcc" relative_path="CM7F_RTCESL_4.8_MCUX/AMCLIB" type="lib" device_cores="cm7_MIMXRT1176xxxxx" fpu="true">
        <files mask="libAMCLIB.a"/>
      </source>
      <source toolchain="mcuxpresso armgcc" relative_path="CM7F_RTCESL_4.8_MCUX/GFLIB" type="lib" device_cores="cm7_MIMXRT1176xxxxx" fpu="true">
        <files mask="libGFLIB.a"/>
      </source>
      <source toolchain="mcuxpresso armgcc" relative_path="CM7F_RTCESL_4.8_MCUX/GDFLIB" type="lib" device_cores="cm7_MIMXRT1176xxxxx" fpu="true">
        <files mask="libGDFLIB.a"/>
      </source>
      <source toolchain="mcuxpresso armgcc" relative_path="CM7F_RTCESL_4.8_MCUX/GMCLIB" type="lib" device_cores="cm7_MIMXRT1176xxxxx" fpu="true">
        <files mask="libGMCLIB.a"/>
      </source>
      <source toolchain="mcuxpresso armgcc" relative_path="CM7F_RTCESL_4.8_MCUX/MLIB" type="lib" device_cores="cm7_MIMXRT1176xxxxx" fpu="true">
        <files mask="libMLIB.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_rtcesl_cm7f.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="CM7F_RTCESL_4.8_IAR/AMCLIB/Include" toolchain="iar" type="c_include" device_cores="cm7_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM7F_RTCESL_4.8_IAR/GDFLIB/Include" toolchain="iar" type="c_include" device_cores="cm7_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM7F_RTCESL_4.8_IAR/GFLIB/Include" toolchain="iar" type="c_include" device_cores="cm7_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM7F_RTCESL_4.8_IAR/GMCLIB/Include" toolchain="iar" type="c_include" device_cores="cm7_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM7F_RTCESL_4.8_IAR/MLIB/Include" toolchain="iar" type="c_include" device_cores="cm7_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM7F_RTCESL_4.8_KEIL/AMCLIB/Include" toolchain="mdk" type="c_include" device_cores="cm7_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM7F_RTCESL_4.8_KEIL/GDFLIB/Include" toolchain="mdk" type="c_include" device_cores="cm7_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM7F_RTCESL_4.8_KEIL/GFLIB/Include" toolchain="mdk" type="c_include" device_cores="cm7_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM7F_RTCESL_4.8_KEIL/GMCLIB/Include" toolchain="mdk" type="c_include" device_cores="cm7_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM7F_RTCESL_4.8_KEIL/MLIB/Include" toolchain="mdk" type="c_include" device_cores="cm7_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM7F_RTCESL_4.8_MCUX/AMCLIB/Include" toolchain="mcuxpresso armgcc" type="c_include" device_cores="cm7_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM7F_RTCESL_4.8_MCUX/GDFLIB/Include" toolchain="mcuxpresso armgcc" type="c_include" device_cores="cm7_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM7F_RTCESL_4.8_MCUX/GFLIB/Include" toolchain="mcuxpresso armgcc" type="c_include" device_cores="cm7_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM7F_RTCESL_4.8_MCUX/GMCLIB/Include" toolchain="mcuxpresso armgcc" type="c_include" device_cores="cm7_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM7F_RTCESL_4.8_MCUX/MLIB/Include" toolchain="mcuxpresso armgcc" type="c_include" device_cores="cm7_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM7F_RTCESL_4.8_IAR/AMCLIB/Include" toolchain="iar" type="asm_include" device_cores="cm7_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM7F_RTCESL_4.8_IAR/GDFLIB/Include" toolchain="iar" type="asm_include" device_cores="cm7_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM7F_RTCESL_4.8_IAR/GFLIB/Include" toolchain="iar" type="asm_include" device_cores="cm7_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM7F_RTCESL_4.8_IAR/GMCLIB/Include" toolchain="iar" type="asm_include" device_cores="cm7_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM7F_RTCESL_4.8_IAR/MLIB/Include" toolchain="iar" type="asm_include" device_cores="cm7_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM7F_RTCESL_4.8_KEIL/AMCLIB/Include" toolchain="mdk" type="asm_include" device_cores="cm7_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM7F_RTCESL_4.8_KEIL/GDFLIB/Include" toolchain="mdk" type="asm_include" device_cores="cm7_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM7F_RTCESL_4.8_KEIL/GFLIB/Include" toolchain="mdk" type="asm_include" device_cores="cm7_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM7F_RTCESL_4.8_KEIL/GMCLIB/Include" toolchain="mdk" type="asm_include" device_cores="cm7_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM7F_RTCESL_4.8_KEIL/MLIB/Include" toolchain="mdk" type="asm_include" device_cores="cm7_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM7F_RTCESL_4.8_MCUX/AMCLIB/Include" toolchain="mcuxpresso armgcc" type="asm_include" device_cores="cm7_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM7F_RTCESL_4.8_MCUX/GDFLIB/Include" toolchain="mcuxpresso armgcc" type="asm_include" device_cores="cm7_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM7F_RTCESL_4.8_MCUX/GFLIB/Include" toolchain="mcuxpresso armgcc" type="asm_include" device_cores="cm7_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM7F_RTCESL_4.8_MCUX/GMCLIB/Include" toolchain="mcuxpresso armgcc" type="asm_include" device_cores="cm7_MIMXRT1176xxxxx" fpu="true"/>
        <include_path relative_path="CM7F_RTCESL_4.8_MCUX/MLIB/Include" toolchain="mcuxpresso armgcc" type="asm_include" device_cores="cm7_MIMXRT1176xxxxx" fpu="true"/>
      </include_paths>
    </component>
    <component id="middleware.openh264.decoder.MIMXRT1176" name="openh264_decoder" brief="openh264 decoder" version="2.1.1" full_name="OpenH264 decoder" category="Graphics/H.264 Codec Library" user_visible="false" type="middleware" package_base_path="middleware/openh264" project_base_path="openh264">
      <dependencies>
        <all>
          <component_dependency value="middleware.openh264.api.MIMXRT1176"/>
          <component_dependency value="middleware.openh264.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="codec/decoder/core/inc" type="c_include">
        <files mask="au_parser.h"/>
        <files mask="bit_stream.h"/>
        <files mask="cabac_decoder.h"/>
        <files mask="deblocking.h"/>
        <files mask="dec_frame.h"/>
        <files mask="dec_golomb.h"/>
        <files mask="decode_mb_aux.h"/>
        <files mask="decode_slice.h"/>
        <files mask="decoder.h"/>
        <files mask="decoder_context.h"/>
        <files mask="decoder_core.h"/>
        <files mask="error_code.h"/>
        <files mask="error_concealment.h"/>
        <files mask="fmo.h"/>
        <files mask="get_intra_predictor.h"/>
        <files mask="manage_dec_ref.h"/>
        <files mask="mb_cache.h"/>
        <files mask="memmgr_nal_unit.h"/>
        <files mask="mv_pred.h"/>
        <files mask="nal_prefix.h"/>
        <files mask="nalu.h"/>
        <files mask="parameter_sets.h"/>
        <files mask="parse_mb_syn_cabac.h"/>
        <files mask="parse_mb_syn_cavlc.h"/>
        <files mask="pic_queue.h"/>
        <files mask="picture.h"/>
        <files mask="rec_mb.h"/>
        <files mask="slice.h"/>
        <files mask="vlc_decoder.h"/>
        <files mask="wels_common_basis.h"/>
        <files mask="wels_const.h"/>
        <files mask="wels_decoder_thread.h"/>
      </source>
      <source relative_path="codec/decoder/core/src" type="src">
        <files mask="au_parser.cpp"/>
        <files mask="bit_stream.cpp"/>
        <files mask="cabac_decoder.cpp"/>
        <files mask="deblocking.cpp"/>
        <files mask="decode_mb_aux.cpp"/>
        <files mask="decode_slice.cpp"/>
        <files mask="decoder.cpp"/>
        <files mask="decoder_core.cpp"/>
        <files mask="decoder_data_tables.cpp"/>
        <files mask="error_concealment.cpp"/>
        <files mask="fmo.cpp"/>
        <files mask="get_intra_predictor.cpp"/>
        <files mask="manage_dec_ref.cpp"/>
        <files mask="memmgr_nal_unit.cpp"/>
        <files mask="mv_pred.cpp"/>
        <files mask="parse_mb_syn_cabac.cpp"/>
        <files mask="parse_mb_syn_cavlc.cpp"/>
        <files mask="pic_queue.cpp"/>
        <files mask="rec_mb.cpp"/>
        <files mask="wels_decoder_thread.cpp"/>
      </source>
      <source relative_path="codec/decoder/plus/inc" type="c_include">
        <files mask="welsDecoderExt.h"/>
      </source>
      <source relative_path="codec/decoder/plus/src" type="src">
        <files mask="welsDecoderExt.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_openh264_decoder.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="codec/decoder/core/inc" type="c_include"/>
        <include_path relative_path="codec/decoder/plus/inc" type="c_include"/>
        <include_path relative_path="codec/decoder/core/inc" type="asm_include"/>
        <include_path relative_path="codec/decoder/plus/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.openh264.encoder.MIMXRT1176" name="openh264_encoder" brief="openh264 encoder" version="2.1.1" full_name="OpenH264 encoder" category="Graphics/H.264 Codec Library" user_visible="false" type="middleware" package_base_path="middleware/openh264" project_base_path="openh264">
      <dependencies>
        <all>
          <component_dependency value="middleware.openh264.api.MIMXRT1176"/>
          <component_dependency value="middleware.openh264.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="codec/encoder/core/inc" type="c_include">
        <files mask="as264_common.h"/>
        <files mask="au_set.h"/>
        <files mask="deblocking.h"/>
        <files mask="decode_mb_aux.h"/>
        <files mask="dq_map.h"/>
        <files mask="encode_mb_aux.h"/>
        <files mask="encoder.h"/>
        <files mask="encoder_context.h"/>
        <files mask="extern.h"/>
        <files mask="get_intra_predictor.h"/>
        <files mask="mb_cache.h"/>
        <files mask="md.h"/>
        <files mask="mt_defs.h"/>
        <files mask="mv_pred.h"/>
        <files mask="nal_encap.h"/>
        <files mask="param_svc.h"/>
        <files mask="parameter_sets.h"/>
        <files mask="paraset_strategy.h"/>
        <files mask="picture.h"/>
        <files mask="picture_handle.h"/>
        <files mask="rc.h"/>
        <files mask="ref_list_mgr_svc.h"/>
        <files mask="sample.h"/>
        <files mask="set_mb_syn_cabac.h"/>
        <files mask="set_mb_syn_cavlc.h"/>
        <files mask="slice.h"/>
        <files mask="slice_multi_threading.h"/>
        <files mask="stat.h"/>
        <files mask="svc_base_layer_md.h"/>
        <files mask="svc_enc_frame.h"/>
        <files mask="svc_enc_golomb.h"/>
        <files mask="svc_enc_macroblock.h"/>
        <files mask="svc_enc_slice_segment.h"/>
        <files mask="svc_encode_mb.h"/>
        <files mask="svc_encode_slice.h"/>
        <files mask="svc_mode_decision.h"/>
        <files mask="svc_motion_estimate.h"/>
        <files mask="svc_set_mb_syn.h"/>
        <files mask="svc_set_mb_syn_cavlc.h"/>
        <files mask="vlc_encoder.h"/>
        <files mask="wels_common_basis.h"/>
        <files mask="wels_const.h"/>
        <files mask="wels_func_ptr_def.h"/>
        <files mask="wels_preprocess.h"/>
        <files mask="wels_task_base.h"/>
        <files mask="wels_task_encoder.h"/>
        <files mask="wels_task_management.h"/>
        <files mask="wels_transpose_matrix.h"/>
      </source>
      <source relative_path="codec/encoder/core/src" type="src">
        <files mask="au_set.cpp"/>
        <files mask="deblocking.cpp"/>
        <files mask="decode_mb_aux.cpp"/>
        <files mask="encode_mb_aux.cpp"/>
        <files mask="encoder.cpp"/>
        <files mask="encoder_data_tables.cpp"/>
        <files mask="encoder_ext.cpp"/>
        <files mask="get_intra_predictor.cpp"/>
        <files mask="md.cpp"/>
        <files mask="mv_pred.cpp"/>
        <files mask="nal_encap.cpp"/>
        <files mask="paraset_strategy.cpp"/>
        <files mask="picture_handle.cpp"/>
        <files mask="ratectl.cpp"/>
        <files mask="ref_list_mgr_svc.cpp"/>
        <files mask="sample.cpp"/>
        <files mask="set_mb_syn_cabac.cpp"/>
        <files mask="set_mb_syn_cavlc.cpp"/>
        <files mask="slice_multi_threading.cpp"/>
        <files mask="svc_base_layer_md.cpp"/>
        <files mask="svc_enc_slice_segment.cpp"/>
        <files mask="svc_encode_mb.cpp"/>
        <files mask="svc_encode_slice.cpp"/>
        <files mask="svc_mode_decision.cpp"/>
        <files mask="svc_motion_estimate.cpp"/>
        <files mask="svc_set_mb_syn_cabac.cpp"/>
        <files mask="svc_set_mb_syn_cavlc.cpp"/>
        <files mask="wels_preprocess.cpp"/>
        <files mask="wels_task_base.cpp"/>
        <files mask="wels_task_encoder.cpp"/>
        <files mask="wels_task_management.cpp"/>
      </source>
      <source relative_path="codec/encoder/plus/inc" type="c_include">
        <files mask="welsEncoderExt.h"/>
      </source>
      <source relative_path="codec/encoder/plus/src" type="src">
        <files mask="DllEntry.cpp"/>
        <files mask="welsEncoderExt.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_openh264_encoder.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="codec/encoder/core/inc" type="c_include"/>
        <include_path relative_path="codec/encoder/plus/inc" type="c_include"/>
        <include_path relative_path="codec/encoder/core/inc" type="asm_include"/>
        <include_path relative_path="codec/encoder/plus/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.openh264.unused_files.MIMXRT1176" name="unused_files" brief="openh264 files unused by projects" version="2.1.1" full_name="openh264 unused" category="Graphics/H.264 Codec Library" user_visible="false" type="other" package_base_path="middleware/openh264" project_base_path="openh264">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.openh264.decoder.MIMXRT1176"/>
            <component_dependency value="middleware.openh264.encoder.MIMXRT1176"/>
          </any_of>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="other">
        <files mask="LICENSE"/>
        <files mask="CONTRIBUTORS"/>
        <files mask="CODING_STYLE"/>
        <files mask="RELEASES"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="README.md"/>
        <files mask="ChangeLogKSDK.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_openh264_unused_files.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.nxp_iot_agent.sss.MIMXRT1176" name="nxp_iot_agent_sss" brief="SSS crypto backend for nxp_iot_agent" version="6.0.2" full_name="nxp_iot_agent sss" category="Security/EdgeLock 2GO" user_visible="false" type="middleware" package_base_path="middleware/nxp_iot_agent" project_base_path="nxp_iot_agent">
      <defines>
        <define name="NXP_IOT_AGENT_HAVE_SSS" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.se_hostlib.commonSe050CloudDemos.MIMXRT1176"/>
          <component_dependency value="middleware.se_hostlib.tstutils.time.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="ex/inc" type="c_include">
        <files mask="iot_agent_claimcode_inject.h"/>
      </source>
      <source relative_path="ex/src/utils" type="src">
        <files mask="iot_agent_claimcode_inject.c"/>
      </source>
      <source relative_path="platform/se05x" type="src">
        <files mask="nxp_iot_agent_platform_se05x.c"/>
        <files mask="nxp_iot_agent_session.c"/>
        <files mask="nxp_iot_agent_time_se05x.c"/>
      </source>
      <source relative_path="platform/se05x" type="c_include">
        <files mask="nxp_iot_agent_session.h"/>
      </source>
      <source relative_path="src/keystore/sss" type="src">
        <files mask="nxp_iot_agent_keystore_sss_se05x.c"/>
      </source>
      <source relative_path="src/keystore/sss" type="c_include">
        <files mask="nxp_iot_agent_keystore_sss_se05x.h"/>
        <files mask="nxp_iot_agent_macros_sss.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_nxp_iot_agent_sss.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="ex/inc" type="c_include"/>
        <include_path relative_path="src/keystore/sss" type="c_include"/>
        <include_path relative_path="platform/se05x" type="c_include"/>
        <include_path relative_path="ex/inc" type="asm_include"/>
        <include_path relative_path="src/keystore/sss" type="asm_include"/>
        <include_path relative_path="platform/se05x" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.nxp_iot_agent.MIMXRT1176" name="nxp_iot_agent" brief="Library sources for nxp_iot_agent" version="6.0.2" full_name="nxp_iot_agent" category="Security/EdgeLock 2GO" user_visible="true" type="middleware" package_base_path="middleware/nxp_iot_agent" project_base_path="nxp_iot_agent">
      <defines>
        <define name="PB_FIELD_32BIT" value=""/>
        <define name="NXP_IOT_AGENT_HAVE_HOSTCRYPTO_MBEDTLS" value="1"/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.nxp_iot_agent.lwip_enet.MIMXRT1176"/>
            <component_dependency value="middleware.nxp_iot_agent.lwip_wifi.MIMXRT1176"/>
          </any_of>
          <component_dependency value="middleware.nxp_iot_agent.sss.MIMXRT1176"/>
          <board_dependency value="evkbmimxrt1170"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="inc" type="c_include">
        <files mask="nxp_iot_agent.h"/>
        <files mask="nxp_iot_agent_common.h"/>
        <files mask="nxp_iot_agent_config.h"/>
        <files mask="nxp_iot_agent_config_certificates.h"/>
        <files mask="nxp_iot_agent_config_credentials.h"/>
        <files mask="nxp_iot_agent_context.h"/>
        <files mask="nxp_iot_agent_datastore.h"/>
        <files mask="nxp_iot_agent_dispatcher.h"/>
        <files mask="nxp_iot_agent_endpoint.h"/>
        <files mask="nxp_iot_agent_keystore.h"/>
        <files mask="nxp_iot_agent_log.h"/>
        <files mask="nxp_iot_agent_macros.h"/>
        <files mask="nxp_iot_agent_platform.h"/>
        <files mask="nxp_iot_agent_service.h"/>
        <files mask="nxp_iot_agent_status.h"/>
        <files mask="nxp_iot_agent_time.h"/>
        <files mask="nxp_iot_agent_utils.h"/>
        <files mask="nxp_iot_agent_utils_protobuf.h"/>
        <files mask="nxp_iot_agent_ver.h"/>
      </source>
      <source relative_path="src" type="c_include">
        <files mask="nxp_iot_agent_utils_internal.h"/>
      </source>
      <source relative_path="ex/inc" type="c_include">
        <files mask="iot_agent_demo_config.h"/>
        <files mask="iot_agent_mqtt_freertos.h"/>
        <files mask="iot_agent_network.h"/>
        <files mask="iot_agent_osal.h"/>
      </source>
      <source relative_path="ex/src/osal/freertos" type="src">
        <files mask="iot_agent_osal_freertos.c"/>
      </source>
      <source relative_path="ex/src/osal/freertos" type="c_include">
        <files mask="iot_agent_osal_freertos.h"/>
      </source>
      <source relative_path="ex/src/utils" type="src">
        <files mask="iot_agent_mqtt_freertos.c"/>
      </source>
      <source relative_path="net_crypto" type="c_include">
        <files mask="network.h"/>
      </source>
      <source relative_path="net_crypto/mbedtls" type="c_include">
        <files mask="network_mbedtls.h"/>
      </source>
      <source relative_path="net_crypto/mbedtls" type="src">
        <files mask="network_mbedtls.c"/>
        <files mask="net_lwip.c"/>
      </source>
      <source relative_path="src" type="src">
        <files mask="nxp_iot_agent.c"/>
        <files mask="nxp_iot_agent_common.c"/>
        <files mask="nxp_iot_agent_config.c"/>
        <files mask="nxp_iot_agent_datastore.c"/>
        <files mask="nxp_iot_agent_keystore.c"/>
        <files mask="nxp_iot_agent_service.c"/>
        <files mask="nxp_iot_agent_utils.c"/>
        <files mask="nxp_iot_agent_utils_protobuf_socket.c"/>
      </source>
      <source relative_path="src/common" type="src">
        <files mask="nxp_iot_agent_dispatcher.c"/>
        <files mask="nxp_iot_agent_utils_protobuf.c"/>
      </source>
      <source relative_path="src/protobuf" type="c_include">
        <files mask="Agent.pb.h"/>
        <files mask="Apdu.pb.h"/>
        <files mask="Datastore.pb.h"/>
        <files mask="Dispatcher.pb.h"/>
        <files mask="Hostcmd.pb.h"/>
        <files mask="PSA.pb.h"/>
        <files mask="Proxy.pb.h"/>
        <files mask="RPC.pb.h"/>
        <files mask="ServiceDescriptor.pb.h"/>
        <files mask="Types.pb.h"/>
        <files mask="pb.h"/>
        <files mask="pb_common.h"/>
        <files mask="pb_decode.h"/>
        <files mask="pb_encode.h"/>
      </source>
      <source relative_path="src/protobuf" type="src">
        <files mask="Agent.pb.c"/>
        <files mask="Apdu.pb.c"/>
        <files mask="Datastore.pb.c"/>
        <files mask="Dispatcher.pb.c"/>
        <files mask="Hostcmd.pb.c"/>
        <files mask="PSA.pb.c"/>
        <files mask="Proxy.pb.c"/>
        <files mask="RPC.pb.c"/>
        <files mask="ServiceDescriptor.pb.c"/>
        <files mask="Types.pb.c"/>
        <files mask="pb_common.c"/>
        <files mask="pb_decode.c"/>
        <files mask="pb_encode.c"/>
      </source>
      <source relative_path="src/datastore/plain" type="src">
        <files mask="nxp_iot_agent_datastore_plain.c"/>
      </source>
      <source relative_path="src/datastore/plain" type="c_include">
        <files mask="nxp_iot_agent_datastore_plain.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_nxp_iot_agent.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="inc" type="c_include"/>
        <include_path relative_path="src" type="c_include"/>
        <include_path relative_path="ex/inc" type="c_include"/>
        <include_path relative_path="net_crypto" type="c_include"/>
        <include_path relative_path="net_crypto/mbedtls" type="c_include"/>
        <include_path relative_path="src/protobuf" type="c_include"/>
        <include_path relative_path="ex/src/osal/freertos" type="c_include"/>
        <include_path relative_path="src/datastore/plain" type="c_include"/>
        <include_path relative_path="inc" type="asm_include"/>
        <include_path relative_path="src" type="asm_include"/>
        <include_path relative_path="ex/inc" type="asm_include"/>
        <include_path relative_path="net_crypto" type="asm_include"/>
        <include_path relative_path="net_crypto/mbedtls" type="asm_include"/>
        <include_path relative_path="src/protobuf" type="asm_include"/>
        <include_path relative_path="ex/src/osal/freertos" type="asm_include"/>
        <include_path relative_path="src/datastore/plain" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mc_pmsm_snsless.float.MIMXRT1176" name="PMSM sensorless control floating-point version files" brief="Common PMSM control middleware code, floating point implementation." version="3.0.0" full_name="PMSM sensorless control middleware (floating-point)" category="Motor Control/PMSM sensorless control" user_visible="true" type="middleware" package_base_path="middleware/motor_control" project_base_path="motor_control">
      <defines>
        <define name="PMSM_SNSLESS" value=""/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="middleware.rtcesl.cm4f.MIMXRT1176"/>
              <device_core_dependency value="cm4_MIMXRT1176xxxxx"/>
            </all>
            <all>
              <component_dependency value="middleware.rtcesl.cm7f.MIMXRT1176"/>
              <device_core_dependency value="cm7_MIMXRT1176xxxxx"/>
            </all>
          </any_of>
          <any_of>
            <device_core_dependency value="cm4_MIMXRT1176xxxxx"/>
            <device_core_dependency value="cm7_MIMXRT1176xxxxx"/>
          </any_of>
          <component_dependency value="middleware.motor_control_pmsm_float.template.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="docs" type="other">
        <files mask="readme_pmsm.txt"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_algorithms" type="src">
        <files mask="pmsm_control.c"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_algorithms" type="c_include">
        <files mask="pmsm_control.h"/>
      </source>
      <source relative_path="pmsm/pmsm_float/state_machine" type="src">
        <files mask="state_machine.c"/>
      </source>
      <source relative_path="pmsm/pmsm_float/state_machine" type="c_include">
        <files mask="state_machine.h"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_state_machine" type="src">
        <files mask="m1_sm_snsless.c"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_state_machine" type="c_include">
        <files mask="m1_sm_snsless.h"/>
        <files mask="sm_common.h"/>
      </source>
      <source relative_path="freemaster" type="other">
        <files mask="pmsm_float.pmpx"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mc_pmsm_snsless_float.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="pmsm/pmsm_float/mc_algorithms" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float/state_machine" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_state_machine" type="c_include"/>
        <include_path relative_path="freemaster" type="c_include"/>
        <include_path relative_path="docs" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_algorithms" type="asm_include"/>
        <include_path relative_path="pmsm/pmsm_float/state_machine" type="asm_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_state_machine" type="asm_include"/>
        <include_path relative_path="freemaster" type="asm_include"/>
        <include_path relative_path="docs" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mc_pmsm_enc.float.MIMXRT1176" name="PMSM encoder control floating-point version files" brief="PMSM control with encoder middleware, floating point implementation." version="3.0.0" full_name="Middleware motor_control-pmsm enc" category="Motor Control/PMSM encoder control" user_visible="true" type="middleware" package_base_path="middleware/motor_control" project_base_path="motor_control">
      <defines>
        <define name="PMSM_SNSLESS" value=""/>
        <define name="PMSM_SNSLESS_ENC" value=""/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="middleware.rtcesl.cm4f.MIMXRT1176"/>
              <device_core_dependency value="cm4_MIMXRT1176xxxxx"/>
            </all>
            <all>
              <component_dependency value="middleware.rtcesl.cm7f.MIMXRT1176"/>
              <device_core_dependency value="cm7_MIMXRT1176xxxxx"/>
            </all>
          </any_of>
          <any_of>
            <device_core_dependency value="cm4_MIMXRT1176xxxxx"/>
            <device_core_dependency value="cm7_MIMXRT1176xxxxx"/>
          </any_of>
          <component_dependency value="middleware.motor_control_pmsm_float.template.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="docs" type="other">
        <files mask="readme_pmsm.txt"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_algorithms" type="src">
        <files mask="pmsm_control.c"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_algorithms" type="c_include">
        <files mask="pmsm_control.h"/>
      </source>
      <source relative_path="pmsm/pmsm_float/state_machine" type="src">
        <files mask="state_machine.c"/>
      </source>
      <source relative_path="pmsm/pmsm_float/state_machine" type="c_include">
        <files mask="state_machine.h"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_state_machine" type="src">
        <files mask="m1_sm_snsless_enc.c"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_state_machine" type="c_include">
        <files mask="m1_sm_snsless_enc.h"/>
        <files mask="sm_common.h"/>
      </source>
      <source relative_path="freemaster" type="other">
        <files mask="pmsm_float_enc.pmpx"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mc_pmsm_enc_float.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="pmsm/pmsm_float/mc_algorithms" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float/state_machine" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_state_machine" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float" type="c_include"/>
        <include_path relative_path="freemaster" type="c_include"/>
        <include_path relative_path="docs" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_algorithms" type="asm_include"/>
        <include_path relative_path="pmsm/pmsm_float/state_machine" type="asm_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_state_machine" type="asm_include"/>
        <include_path relative_path="pmsm/pmsm_float" type="asm_include"/>
        <include_path relative_path="freemaster" type="asm_include"/>
        <include_path relative_path="docs" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mc_pmsm_enc_dual.float.MIMXRT1176" name="Dual PMSM encoder control floating-point version files" brief="Dual PMSM control with encoder middleware, floating point implementation." version="3.0.0" full_name="Middleware dual motor_control-pmsm enc" category="Motor Control/PMSM encoder control" user_visible="false" type="middleware" package_base_path="middleware/motor_control" project_base_path="motor_control">
      <defines>
        <define name="PMSM_SNSLESS" value=""/>
        <define name="PMSM_SNSLESS_ENC" value=""/>
        <define name="DUAL_MOTOR" value=""/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="middleware.rtcesl.cm4f.MIMXRT1176"/>
              <device_core_dependency value="cm4_MIMXRT1176xxxxx"/>
            </all>
            <all>
              <component_dependency value="middleware.rtcesl.cm7f.MIMXRT1176"/>
              <device_core_dependency value="cm7_MIMXRT1176xxxxx"/>
            </all>
          </any_of>
          <any_of>
            <device_core_dependency value="cm4_MIMXRT1176xxxxx"/>
            <device_core_dependency value="cm7_MIMXRT1176xxxxx"/>
          </any_of>
          <component_dependency value="middleware.motor_control_pmsm_float.template.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="docs" type="other">
        <files mask="readme_pmsm.txt"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_algorithms" type="src">
        <files mask="pmsm_control.c"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_algorithms" type="c_include">
        <files mask="pmsm_control.h"/>
      </source>
      <source relative_path="pmsm/pmsm_float/state_machine" type="src">
        <files mask="state_machine.c"/>
      </source>
      <source relative_path="pmsm/pmsm_float/state_machine" type="c_include">
        <files mask="state_machine.h"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_state_machine" type="src">
        <files mask="m1_sm_snsless_enc.c"/>
        <files mask="m2_sm_snsless_enc.c"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_state_machine" type="c_include">
        <files mask="m1_sm_snsless_enc.h"/>
        <files mask="m2_sm_snsless_enc.h"/>
        <files mask="sm_common.h"/>
      </source>
      <source relative_path="freemaster" type="other">
        <files mask="pmsm_float_enc_dual.pmpx"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mc_pmsm_enc_dual_float.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="pmsm/pmsm_float/mc_algorithms" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float/state_machine" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_state_machine" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float" type="c_include"/>
        <include_path relative_path="freemaster" type="c_include"/>
        <include_path relative_path="docs" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_algorithms" type="asm_include"/>
        <include_path relative_path="pmsm/pmsm_float/state_machine" type="asm_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_state_machine" type="asm_include"/>
        <include_path relative_path="pmsm/pmsm_float" type="asm_include"/>
        <include_path relative_path="freemaster" type="asm_include"/>
        <include_path relative_path="docs" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mc_bldc.frac.MIMXRT1176" name="BLDC control frac version files" brief="BLDC control without encoder middleware, frac implementation." version="3.0.0" full_name="Middleware motor_control-bldc" category="Motor Control/BLDC sensorless control" user_visible="true" type="middleware" package_base_path="middleware/motor_control" project_base_path="motor_control">
      <defines>
        <define name="BLDC_SNSLESS" value=""/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="middleware.rtcesl.cm4f.MIMXRT1176"/>
              <device_core_dependency value="cm4_MIMXRT1176xxxxx"/>
            </all>
            <all>
              <component_dependency value="middleware.rtcesl.cm7f.MIMXRT1176"/>
              <device_core_dependency value="cm7_MIMXRT1176xxxxx"/>
            </all>
          </any_of>
          <any_of>
            <device_core_dependency value="cm4_MIMXRT1176xxxxx"/>
            <device_core_dependency value="cm7_MIMXRT1176xxxxx"/>
          </any_of>
          <component_dependency value="middleware.motor_control_bldc_frac.template.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="docs" type="other">
        <files mask="readme_bldc.txt"/>
      </source>
      <source relative_path="bldc/mc_algorithms" type="src">
        <files mask="bldc_control.c"/>
      </source>
      <source relative_path="bldc/mc_algorithms" type="c_include">
        <files mask="bldc_control.h"/>
      </source>
      <source relative_path="bldc/state_machine" type="src">
        <files mask="state_machine.c"/>
      </source>
      <source relative_path="bldc/state_machine" type="c_include">
        <files mask="state_machine.h"/>
      </source>
      <source relative_path="bldc/mc_state_machine" type="src">
        <files mask="m1_sm_snsless.c"/>
      </source>
      <source relative_path="bldc/mc_state_machine" type="c_include">
        <files mask="m1_sm_snsless.h"/>
      </source>
      <source relative_path="freemaster" type="other">
        <files mask="bldc.pmpx"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mc_bldc_frac.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="bldc/mc_algorithms" type="c_include"/>
        <include_path relative_path="bldc/state_machine" type="c_include"/>
        <include_path relative_path="bldc/mc_state_machine" type="c_include"/>
        <include_path relative_path="bldc" type="c_include"/>
        <include_path relative_path="freemaster" type="c_include"/>
        <include_path relative_path="docs" type="c_include"/>
        <include_path relative_path="bldc/mc_algorithms" type="asm_include"/>
        <include_path relative_path="bldc/state_machine" type="asm_include"/>
        <include_path relative_path="bldc/mc_state_machine" type="asm_include"/>
        <include_path relative_path="bldc" type="asm_include"/>
        <include_path relative_path="freemaster" type="asm_include"/>
        <include_path relative_path="docs" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.motor_control_bldc_frac.tsa.MIMXRT1176" name="BLDC control TSA frac" brief="FreeMASTER TSA table for BLDC control frac" version="3.0.0" full_name="FreeMASTER TSA table for BLDC control frac" category="Motor Control/BLDC sensorless control" user_visible="false" type="middleware" package_base_path="middleware/motor_control" project_base_path="motor_control">
      <dependencies>
        <all>
          <any_of>
            <device_core_dependency value="cm4_MIMXRT1176xxxxx"/>
            <device_core_dependency value="cm7_MIMXRT1176xxxxx"/>
          </any_of>
          <component_dependency value="middleware.fmstr.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="bldc" type="src">
        <files mask="fm_tsa_bldc.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_motor_control_bldc_frac_tsa.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="bldc" type="c_include"/>
        <include_path relative_path="bldc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.pmsm_mid.float.MIMXRT1176" name="PMSM parameters identification floating-point version files" brief="PMSM parameters identification, floating point implementation." version="3.0.0" full_name="PMSM parameters identification floating-point" category="Motor Control/PMSM identification" user_visible="true" type="middleware" package_base_path="middleware/motor_control" project_base_path="motor_control">
      <defines>
        <define name="MID_EN" value=""/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="middleware.motor_control.mcaa_cm4f.MIMXRT1176"/>
              <device_core_dependency value="cm4_MIMXRT1176xxxxx"/>
            </all>
            <all>
              <component_dependency value="middleware.motor_control.mcaa_cm7f.MIMXRT1176"/>
              <device_core_dependency value="cm7_MIMXRT1176xxxxx"/>
            </all>
          </any_of>
          <any_of>
            <device_core_dependency value="cm4_MIMXRT1176xxxxx"/>
            <device_core_dependency value="cm7_MIMXRT1176xxxxx"/>
          </any_of>
          <component_dependency value="middleware.motor_control_pmsm_float.template.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="pmsm/pmsm_float/mc_identification" type="src">
        <files mask="hall_calib.c"/>
        <files mask="ke_measure.c"/>
        <files mask="mech_measure.c"/>
        <files mask="mid_auxiliary.c"/>
        <files mask="mid_mc_api_connector.c"/>
        <files mask="mid_sm_states.c"/>
        <files mask="pp_measure.c"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_identification" type="c_include">
        <files mask="hall_calib.h"/>
        <files mask="ke_measure.h"/>
        <files mask="mech_measure.h"/>
        <files mask="mid_auxiliary.h"/>
        <files mask="mid_def.h"/>
        <files mask="mid_mc_api_connector.h"/>
        <files mask="mid_sm_states.h"/>
        <files mask="pp_measure.h"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_algorithms" type="src">
        <files mask="pmsm_control.c"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_algorithms" type="c_include">
        <files mask="pmsm_control.h"/>
      </source>
      <source relative_path="freemaster" type="other">
        <files mask="pmsm_float_enc.pmpx"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_pmsm_mid_float.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="pmsm/pmsm_float/mc_identification" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_algorithms" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float" type="c_include"/>
        <include_path relative_path="freemaster" type="c_include"/>
        <include_path relative_path="docs" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_identification" type="asm_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_algorithms" type="asm_include"/>
        <include_path relative_path="pmsm/pmsm_float" type="asm_include"/>
        <include_path relative_path="freemaster" type="asm_include"/>
        <include_path relative_path="docs" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.motor_control_pmsm_float.template.MIMXRT1176" name="PMSM sensor/sensorless init periph sources" brief="PMSM sensor/sensorless template sources floating-point implementation" version="3.0.0" full_name="PMSM template sources (floating-point)" category="Motor Control/PMSM auxiliary" user_visible="false" type="project_template" package_base_path="middleware/motor_control" project_base_path="source">
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="middleware.rtcesl.cm4f.MIMXRT1176"/>
              <device_core_dependency value="cm4_MIMXRT1176xxxxx"/>
            </all>
            <all>
              <component_dependency value="middleware.rtcesl.cm7f.MIMXRT1176"/>
              <device_core_dependency value="cm7_MIMXRT1176xxxxx"/>
            </all>
          </any_of>
          <any_of>
            <device_core_dependency value="cm4_MIMXRT1176xxxxx"/>
            <device_core_dependency value="cm7_MIMXRT1176xxxxx"/>
          </any_of>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="pmsm/pmsm_float/mc_cfg_template" config="true" type="c_include">
        <files mask="m1_pmsm_appconfig.h"/>
        <files mask="m2_pmsm_appconfig.h"/>
        <files mask="mc_periph_init.h"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_cfg_template" config="true" type="src">
        <files mask="mc_periph_init.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_motor_control_pmsm_float_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="pmsm/pmsm_float/mc_cfg_template" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_cfg_template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.motor_control_bldc_frac.template.MIMXRT1176" name="BLDC sensor/sensorless sources" brief="BLDC sensor/sensorless template sources fraction implementation" version="3.0.0" full_name="BLDC template sources (fixed-point)" category="Motor Control/BLDC auxiliary" user_visible="false" type="project_template" package_base_path="middleware/motor_control" project_base_path="source">
      <dependencies>
        <all>
          <any_of>
            <device_core_dependency value="cm4_MIMXRT1176xxxxx"/>
            <device_core_dependency value="cm7_MIMXRT1176xxxxx"/>
          </any_of>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="bldc/mc_cfg_template" config="true" type="c_include">
        <files mask="m1_bldc_appconfig.h"/>
        <files mask="mc_periph_init.h"/>
      </source>
      <source relative_path="bldc/mc_cfg_template" config="true" type="src">
        <files mask="mc_periph_init.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_motor_control_bldc_frac_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="bldc/mc_cfg_template" type="c_include"/>
        <include_path relative_path="bldc/mc_cfg_template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.motor_control_pmsm_float.tsa.MIMXRT1176" name="PMSM control TSA floating-point" brief="FreeMASTER TSA table for PMSM control floating-point" version="3.0.0" full_name="FreeMASTER TSA table for PMSM control floating-point" category="Motor Control/PMSM auxiliary" user_visible="false" type="middleware" package_base_path="middleware/motor_control" project_base_path="motor_control">
      <dependencies>
        <all>
          <any_of>
            <device_core_dependency value="cm4_MIMXRT1176xxxxx"/>
            <device_core_dependency value="cm7_MIMXRT1176xxxxx"/>
          </any_of>
          <component_dependency value="middleware.fmstr.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="pmsm/pmsm_float" type="src">
        <files mask="fm_tsa_pmsm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_motor_control_pmsm_float_tsa.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="pmsm/pmsm_float" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.motor_control.mc_drivers_adcimxrt11xx_pwma.MIMXRT1176" name="PMSM sensorless control drivers" brief="PMSM sensorless control for adcimxrt11xx and pwma based MCUs" version="3.0.0" full_name="PMSM sensorless control for pwma and adcimxrt11xx based MCUs" category="Motor Control/PMSM sensorless control" user_visible="false" type="middleware" package_base_path="middleware/motor_control" project_base_path="motor_control">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="pmsm/pmsm_float/mc_drivers" type="c_include">
        <files mask="mcdrv_adcetc_imxrt11xx.h"/>
        <files mask="mcdrv_pwm3ph_pwma.h"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_drivers" type="src">
        <files mask="mcdrv_adcetc_imxrt11xx.c"/>
        <files mask="mcdrv_pwm3ph_pwma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_motor_control_mc_drivers_adcimxrt11xx_pwma.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="pmsm/pmsm_float/mc_drivers" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_drivers" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.motor_control.mc_drivers_adcimxrt11xx_pwma_enc.MIMXRT1176" name="PMSM encoder control drivers" brief="PMSM encoder control for adcimxrt11xx and pwma based MCUs" version="3.0.0" full_name="PMSM encoder control for pwma and adcimxrt11xx based MCUs" category="Motor Control/PMSM encoder control" user_visible="false" type="middleware" package_base_path="middleware/motor_control" project_base_path="motor_control">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="pmsm/pmsm_float/mc_drivers" type="c_include">
        <files mask="mcdrv_adcetc_imxrt11xx.h"/>
        <files mask="mcdrv_pwm3ph_pwma.h"/>
        <files mask="mcdrv_enc_qd.h"/>
      </source>
      <source relative_path="pmsm/pmsm_float/mc_drivers" type="src">
        <files mask="mcdrv_adcetc_imxrt11xx.c"/>
        <files mask="mcdrv_pwm3ph_pwma.c"/>
        <files mask="mcdrv_enc_qd.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_motor_control_mc_drivers_adcimxrt11xx_pwma_enc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="pmsm/pmsm_float/mc_drivers" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_drivers" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.motor_control.mc_drivers_adcimxrt11xx_pwma_bldc.MIMXRT1176" name="BLDC encoder control drivers" brief="BLDC encoder control for adcimxrt11xx and pwma based MCUs" version="3.0.0" full_name="BLDC encoder control for pwma and adcimxrt11xx based MCUs" category="Motor Control/BLDC sensorless control" user_visible="false" type="middleware" package_base_path="middleware/motor_control" project_base_path="motor_control">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="bldc/mc_drivers" type="src">
        <files mask="mcdrv_pwm3ph_pwma.c"/>
        <files mask="mcdrv_adcetc_imxrt11xx.c"/>
        <files mask="mcdrv_cmt_pwma.c"/>
      </source>
      <source relative_path="bldc/mc_drivers" type="c_include">
        <files mask="mcdrv_pwm3ph_pwma.h"/>
        <files mask="mcdrv_adcetc_imxrt11xx.h"/>
        <files mask="mcdrv_cmt_pwma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_motor_control_mc_drivers_adcimxrt11xx_pwma_bldc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="bldc/mc_drivers" type="c_include"/>
        <include_path relative_path="bldc/mc_drivers" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.motor_control_pmsm_float_imcat.MIMXRT1176" name="PMSM MCAT2.0" brief="MCAT2.0 pmsm files" version="3.0.0" full_name="MCAT2.0 pmsm" category="Motor Control/PMSM auxiliary" user_visible="false" type="middleware" package_base_path="middleware/motor_control" project_base_path="motor_control">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="freemaster/pmsm_float/mcat/assets" type="other">
        <files mask="speedfocwolswbemf.gif"/>
      </source>
      <source relative_path="freemaster/pmsm_float/mcat/css" type="other">
        <files mask="app.css"/>
      </source>
      <source relative_path="freemaster/pmsm_float/mcat/js" type="other">
        <files mask="chunk.js"/>
        <files mask="chunk.js.map"/>
        <files mask="mcat.js"/>
        <files mask="mcat.js.map"/>
      </source>
      <source relative_path="freemaster/pmsm_float/mcat" type="other">
        <files mask="freemaster-client.js"/>
        <files mask="index.html"/>
        <files mask="init.js"/>
        <files mask="simple-jsonrpc-js.js"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_motor_control_pmsm_float_imcat.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.motor_control_bldc_frac_imcat.MIMXRT1176" name="BLDC FRAC MCAT2.0" brief="MCAT2.0 bldc frac files" version="3.0.0" full_name="MCAT2.0 bldc frac" category="Motor Control/BLDC auxiliary" user_visible="false" type="middleware" package_base_path="middleware/motor_control" project_base_path="motor_control">
      <dependencies>
        <device_dependency value="MIMXRT1176xxxxx"/>
      </dependencies>
      <source relative_path="freemaster/bldc/mcat/assets" type="other">
        <files mask="BLDC_concept.png"/>
      </source>
      <source relative_path="freemaster/bldc/mcat/css" type="other">
        <files mask="app.css"/>
      </source>
      <source relative_path="freemaster/bldc/mcat/js" type="other">
        <files mask="chunk.js"/>
        <files mask="chunk.js.map"/>
        <files mask="mcat.js"/>
        <files mask="mcat.js.map"/>
      </source>
      <source relative_path="freemaster/bldc/mcat" type="other">
        <files mask="freemaster-client.js"/>
        <files mask="index.html"/>
        <files mask="init.js"/>
        <files mask="simple-jsonrpc-js.js"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_motor_control_bldc_frac_imcat.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.motor_control.mcaa_cm7f.MIMXRT1176" name="MCAA library for CM7F core" brief="Motor Control Advanced Algorithm for CM7F core" version="3.0.0" full_name="Middleware motor_control cm7f" category="Motor Control/PMSM identification" user_visible="false" type="middleware" package_base_path="middleware/motor_control" project_base_path="motor_control">
      <dependencies>
        <all>
          <component_dependency value="middleware.rtcesl.cm7f.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
          <device_core_dependency value="cm7_MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="iar" relative_path="pmsm/pmsm_float/mc_algorithms/mcaa_lib/cm7f_iar/Include" type="c_include">
        <files mask="MCAA_EstimRL_FLT.h"/>
        <files mask="mcaa_lib_fp.h"/>
      </source>
      <source toolchain="mdk" relative_path="pmsm/pmsm_float/mc_algorithms/mcaa_lib/cm7f_mdk/Include" type="c_include">
        <files mask="MCAA_EstimRL_FLT.h"/>
        <files mask="mcaa_lib_fp.h"/>
      </source>
      <source toolchain="mcuxpresso armgcc" relative_path="pmsm/pmsm_float/mc_algorithms/mcaa_lib/cm7f_mcux/Include" type="c_include">
        <files mask="MCAA_EstimRL_FLT.h"/>
        <files mask="mcaa_lib_fp.h"/>
      </source>
      <source toolchain="iar" relative_path="pmsm/pmsm_float/mc_algorithms/mcaa_lib/cm7f_iar" type="lib">
        <files mask="mcaa_lib.a"/>
      </source>
      <source toolchain="mdk" relative_path="pmsm/pmsm_float/mc_algorithms/mcaa_lib/cm7f_mdk" type="lib">
        <files mask="mcaa_lib.lib"/>
      </source>
      <source toolchain="mcuxpresso armgcc" relative_path="pmsm/pmsm_float/mc_algorithms/mcaa_lib/cm7f_mcux" type="lib">
        <files mask="libmcaa_lib.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_motor_control_mcaa_cm7f.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="pmsm/pmsm_float/mc_algorithms/mcaa_lib/cm7f_iar/Include" toolchain="iar" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_algorithms/mcaa_lib/cm7f_mdk/Include" toolchain="mdk" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_algorithms/mcaa_lib/cm7f_mcux/Include" toolchain="mcuxpresso armgcc" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_algorithms/mcaa_lib/cm7f_iar/Include" toolchain="iar" type="asm_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_algorithms/mcaa_lib/cm7f_mdk/Include" toolchain="mdk" type="asm_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_algorithms/mcaa_lib/cm7f_mcux/Include" toolchain="mcuxpresso armgcc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.motor_control.mcaa_cm4f.MIMXRT1176" name="MCAA library for CM4F core" brief="Motor Control Advanced Algorithm for CM4F core" version="3.0.0" full_name="Middleware motor_control cm4f" category="Motor Control/PMSM identification" user_visible="false" type="middleware" package_base_path="middleware/motor_control" project_base_path="motor_control">
      <dependencies>
        <all>
          <component_dependency value="middleware.rtcesl.cm4f.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
          <device_core_dependency value="cm4_MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="iar" relative_path="pmsm/pmsm_float/mc_algorithms/mcaa_lib/cm4f_iar/Include" type="c_include">
        <files mask="MCAA_EstimRL_FLT.h"/>
        <files mask="mcaa_lib_fp.h"/>
      </source>
      <source toolchain="mdk" relative_path="pmsm/pmsm_float/mc_algorithms/mcaa_lib/cm4f_mdk/Include" type="c_include">
        <files mask="MCAA_EstimRL_FLT.h"/>
        <files mask="mcaa_lib_fp.h"/>
      </source>
      <source toolchain="mcuxpresso armgcc" relative_path="pmsm/pmsm_float/mc_algorithms/mcaa_lib/cm4f_mcux/Include" type="c_include">
        <files mask="MCAA_EstimRL_FLT.h"/>
        <files mask="mcaa_lib_fp.h"/>
      </source>
      <source toolchain="iar" relative_path="pmsm/pmsm_float/mc_algorithms/mcaa_lib/cm4f_iar" type="lib">
        <files mask="mcaa_lib.a"/>
      </source>
      <source toolchain="mdk" relative_path="pmsm/pmsm_float/mc_algorithms/mcaa_lib/cm4f_mdk" type="lib">
        <files mask="mcaa_lib.lib"/>
      </source>
      <source toolchain="mcuxpresso armgcc" relative_path="pmsm/pmsm_float/mc_algorithms/mcaa_lib/cm4f_mcux" type="lib">
        <files mask="libmcaa_lib.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_motor_control_mcaa_cm4f.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="pmsm/pmsm_float/mc_algorithms/mcaa_lib/cm4f_iar/Include" toolchain="iar" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_algorithms/mcaa_lib/cm4f_mdk/Include" toolchain="mdk" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_algorithms/mcaa_lib/cm4f_mcux/Include" toolchain="mcuxpresso armgcc" type="c_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_algorithms/mcaa_lib/cm4f_iar/Include" toolchain="iar" type="asm_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_algorithms/mcaa_lib/cm4f_mdk/Include" toolchain="mdk" type="asm_include"/>
        <include_path relative_path="pmsm/pmsm_float/mc_algorithms/mcaa_lib/cm4f_mcux/Include" toolchain="mcuxpresso armgcc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.bm.MIMXRT1176" name="rpmsg_lite" brief="RPMsg-Lite BM environment sources" version="5.1.2" full_name="RPMsg-Lite baremetal environment layer sources" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include/environment/bm" type="c_include">
        <files mask="rpmsg_env_specific.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite/porting/environment" type="src">
        <files mask="rpmsg_env_bm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_bm.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include/environment/bm" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include/environment/bm" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.freertos.MIMXRT1176" name="rpmsg_lite" brief="RPMsg-Lite FreeRTOS environment sources" version="5.1.2" full_name="RPMsg-Lite FreeRTOS environment layer sources" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include/environment/freertos" type="c_include">
        <files mask="rpmsg_env_specific.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite/porting/environment" type="src">
        <files mask="rpmsg_env_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_freertos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include/environment/freertos" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include/environment/freertos" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.xos.MIMXRT1176" name="rpmsg_lite xos" brief="RPMsg-Lite XOS environment layer sources" version="5.1.2" full_name="RPMsg-Lite XOS environment layer sources" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include/environment/xos" type="c_include">
        <files mask="rpmsg_env_specific.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite/porting/environment" type="src">
        <files mask="rpmsg_env_xos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_xos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include/environment/xos" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include/environment/xos" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.qnx.MIMXRT1176" name="rpmsg_lite qnx" brief="RPMsg-Lite QNX environment layer sources" version="5.1.2" full_name="RPMsg-Lite QNX environment layer sources" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include/environment/qnx" type="c_include">
        <files mask="rpmsg_env_specific.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite/porting/environment" type="src">
        <files mask="rpmsg_env_qnx.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_qnx.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include/environment/qnx" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include/environment/qnx" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.threadx.MIMXRT1176" name="rpmsg_lite threadx" brief="RPMsg-Lite ThreadX environment layer sources" version="5.1.2" full_name="RPMsg-Lite ThreadX environment layer sources" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include/environment/threadx" type="c_include">
        <files mask="rpmsg_env_specific.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite/porting/environment" type="src">
        <files mask="rpmsg_env_threadx.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_threadx.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include/environment/threadx" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include/environment/threadx" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.zephyr.MIMXRT1176" name="rpmsg_lite zephyr" brief="RPMsg-Lite Zephyr environment sources" version="5.1.2" full_name="RPMsg-Lite Zephyr environment layer sources" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include/environment/zephyr" type="c_include">
        <files mask="rpmsg_env_specific.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite/porting/environment" type="src">
        <files mask="rpmsg_env_zephyr.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_zephyr.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include/environment/zephyr" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include/environment/zephyr" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.MIMXRT1176" name="rpmsg_lite" brief="RPMsg-Lite" version="5.1.2" full_name="Remote Procedure Messaging Lite library" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.rpmsg-lite.bm.MIMXRT1176"/>
            <component_dependency value="middleware.multicore.rpmsg-lite.freertos.MIMXRT1176"/>
            <component_dependency value="middleware.multicore.rpmsg-lite.qnx.MIMXRT1176"/>
            <component_dependency value="middleware.multicore.rpmsg-lite.threadx.MIMXRT1176"/>
            <component_dependency value="middleware.multicore.rpmsg-lite.xos.MIMXRT1176"/>
            <component_dependency value="middleware.multicore.rpmsg-lite.zephyr.MIMXRT1176"/>
          </any_of>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include" type="c_include">
        <files mask="llist.h"/>
        <files mask="rpmsg_compiler.h"/>
        <files mask="rpmsg_default_config.h"/>
        <files mask="rpmsg_env.h"/>
        <files mask="rpmsg_lite.h"/>
        <files mask="virtio_ring.h"/>
        <files mask="virtqueue.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/common" type="src">
        <files mask="llist.c"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite" type="src">
        <files mask="rpmsg_lite.c"/>
      </source>
      <source relative_path="rpmsg-lite/lib/virtio" type="src">
        <files mask="virtqueue.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.ns.MIMXRT1176" name="rpmsg_lite" brief="RPMsg-Lite NS" version="5.1.2" full_name="Remote Procedure Messaging Lite NS library" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include" type="c_include">
        <files mask="rpmsg_ns.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite" type="src">
        <files mask="rpmsg_ns.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_ns.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.rpmsg-lite.queue.MIMXRT1176" name="rpmsg_lite" brief="RPMsg-Lite Queue" version="5.1.2" full_name="Remote Procedure Messaging Queue NS library" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include" type="c_include">
        <files mask="rpmsg_queue.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite" type="src">
        <files mask="rpmsg_queue.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_queue.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.rpmsg-lite.imxrt1170.MIMXRT1176" name="rpmsg_lite_imxrt1170" brief="RPMsg-Lite for evkmimxrt1170 application" version="5.1.2" full_name="Remote Procedure Messaging Lite porting layer for evkmimxrt1170 board" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include/platform/imxrt1170" type="c_include">
        <files mask="rpmsg_platform.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite/porting/platform/imxrt1170" type="src">
        <files mask="rpmsg_platform.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_imxrt1170.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include/platform/imxrt1170" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include/platform/imxrt1170" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.mcmgr.imxrt1170.MIMXRT1176" name="mcmgr_imxrt1170" brief="Multicore Manager for evkmimxrt1170 board" version="4.1.5" full_name="Multicore Manager for evkmimxrt1170 board" category="Multicore/Core Management" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="mcmgr">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.mu.MIMXRT1176"/>
          <component_dependency value="middleware.multicore.mcmgr.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="mcmgr/src" type="src">
        <files mask="mcmgr_internal_core_api_imxrt1170.c"/>
        <files mask="mcmgr_mu_internal.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_mcmgr_imxrt1170.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.client.MIMXRT1176" name="eRPC_client" brief="eRPC_client" version="1.13.0" full_name="eRPC client" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/infra" type="c_include">
        <files mask="erpc_client_manager.h"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_client_manager.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="c_include">
        <files mask="erpc_client_setup.h"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_client_setup.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_client.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.server.MIMXRT1176" name="eRPC_server" brief="eRPC_server" version="1.13.0" full_name="eRPC server" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_simple_server.hpp"/>
        <files mask="erpc_server.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_simple_server.cpp"/>
        <files mask="erpc_server.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="c_include">
        <files mask="erpc_server_setup.h"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_server_setup.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_server.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.arbitrator.MIMXRT1176" name="eRPC_arbitrator" brief="eRPC_arbitrator" version="1.13.0" full_name="eRPC arbitrator" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_arbitrated_client_manager.hpp"/>
        <files mask="erpc_simple_server.hpp"/>
        <files mask="erpc_server.hpp"/>
        <files mask="erpc_transport_arbitrator.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_arbitrated_client_manager.cpp"/>
        <files mask="erpc_client_manager.cpp"/>
        <files mask="erpc_simple_server.cpp"/>
        <files mask="erpc_server.cpp"/>
        <files mask="erpc_transport_arbitrator.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="c_include">
        <files mask="erpc_client_manager.h"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="c_include">
        <files mask="erpc_arbitrated_client_setup.h"/>
        <files mask="erpc_server_setup.h"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_arbitrated_client_setup.cpp"/>
        <files mask="erpc_server_setup.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/port" type="c_include">
        <files mask="erpc_threading.h"/>
      </source>
      <source relative_path="erpc/erpc_c/port" type="src">
        <files mask="erpc_threading_freertos.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_arbitrator.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/port" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.port_stdlib.MIMXRT1176" name="eRPC_port_stdlib" brief="eRPC_port_stdlib" version="1.13.0" full_name="eRPC stdlib port layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/port" type="c_include">
        <files mask="erpc_port.h"/>
      </source>
      <source relative_path="erpc/erpc_c/port" type="src">
        <files mask="erpc_port_stdlib.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_port_stdlib.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/port" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.port_freertos.MIMXRT1176" name="eRPC_port_freertos" brief="eRPC_port_freertos" version="1.13.0" full_name="eRPC FreeRTOS port layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/port" type="c_include">
        <files mask="erpc_port.h"/>
        <files mask="erpc_threading.h"/>
        <files mask="erpc_setup_extensions.h"/>
      </source>
      <source relative_path="erpc/erpc_c/port" type="src">
        <files mask="erpc_port_freertos.cpp"/>
        <files mask="erpc_threading_freertos.cpp"/>
        <files mask="erpc_setup_extensions_freertos.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_port_freertos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/port" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_mu_transport.MIMXRT1176" name="eRPC_mu_transport" brief="eRPC_mu_transport" version="1.13.0" full_name="eRPC MU transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT1176"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT1176"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_mu_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_mu_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
        <files mask="erpc_setup_mu.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_mu_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_lite_transport_master.MIMXRT1176" name="eRPC_rpmsg_lite_transport_master" brief="eRPC_rpmsg_lite_transport_master" version="1.13.0" full_name="eRPC RPMsg-Lite transport layer master" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT1176"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT1176"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_rpmsg_lite_base.hpp"/>
        <files mask="erpc_rpmsg_lite_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_rpmsg_lite_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_static_queue.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_rpmsg.cpp"/>
        <files mask="erpc_setup_rpmsg_lite_master.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_rpmsg_lite_transport_master.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_lite_transport_remote.MIMXRT1176" name="eRPC_rpmsg_lite_transport_remote" brief="eRPC_rpmsg_lite_transport_remote" version="1.13.0" full_name="eRPC RPMsg-Lite transport layer remote" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT1176"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT1176"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_rpmsg_lite_base.hpp"/>
        <files mask="erpc_rpmsg_lite_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_rpmsg_lite_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_static_queue.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_rpmsg.cpp"/>
        <files mask="erpc_setup_rpmsg_lite_remote.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_rpmsg_lite_transport_remote.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_lite_rtos_transport_master.MIMXRT1176" name="eRPC_rpmsg_lite_rtos_transport_master" brief="eRPC_rpmsg_lite_rtos_transport_master" version="1.13.0" full_name="eRPC RPMsg-Lite RTOS transport layer master" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT1176"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT1176"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_rpmsg_lite_base.hpp"/>
        <files mask="erpc_rpmsg_lite_rtos_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_rpmsg_lite_rtos_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_rpmsg.cpp"/>
        <files mask="erpc_setup_rpmsg_lite_rtos_master.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_rpmsg_lite_rtos_transport_master.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_lite_rtos_transport_remote.MIMXRT1176" name="eRPC_rpmsg_lite_rtos_transport_remote" brief="eRPC_rpmsg_lite_rtos_transport_remote" version="1.13.0" full_name="eRPC RPMsg-Lite RTOS transport layer remote" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT1176"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT1176"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_rpmsg_lite_base.hpp"/>
        <files mask="erpc_rpmsg_lite_rtos_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_rpmsg_lite_rtos_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_rpmsg.cpp"/>
        <files mask="erpc_setup_rpmsg_lite_rtos_remote.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_rpmsg_lite_rtos_transport_remote.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_tty_rtos_transport.MIMXRT1176" name="eRPC_rpmsg_tty_rtos_transport" brief="eRPC_rpmsg_tty_rtos_transport" version="1.13.0" full_name="eRPC RPMsg-Lite TTY RTOS transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT1176"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT1176"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_rpmsg_lite_base.hpp"/>
        <files mask="erpc_rpmsg_tty_rtos_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_rpmsg_tty_rtos_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_rpmsg.cpp"/>
        <files mask="erpc_setup_rpmsg_tty_rtos_remote.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_rpmsg_tty_rtos_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_uart_cmsis_transport.MIMXRT1176" name="eRPC_uart_cmsis_transport" brief="eRPC_uart_cmsis_transport" version="1.13.0" full_name="eRPC UART CMSIS transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT1176"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT1176"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_uart_cmsis_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_uart_cmsis_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
        <files mask="erpc_setup_uart_cmsis.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_uart_cmsis_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_dspi_master_transport.MIMXRT1176" name="eRPC_dspi_master_transport" brief="eRPC_dspi_master_transport" version="1.13.0" full_name="eRPC DSPI master transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT1176"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT1176"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_dspi_master_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_dspi_master_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
        <files mask="erpc_setup_dspi_master.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_dspi_master_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_dspi_slave_transport.MIMXRT1176" name="eRPC_dspi_slave_transport" brief="eRPC_dspi_slave_transport" version="1.13.0" full_name="eRPC DSPI slave transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT1176"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT1176"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_dspi_slave_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_dspi_slave_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
        <files mask="erpc_setup_dspi_slave.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_dspi_slave_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_spi_master_transport.MIMXRT1176" name="eRPC_spi_master_transport" brief="eRPC_spi_master_transport" version="1.13.0" full_name="eRPC SPI master transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT1176"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT1176"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_spi_master_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_spi_master_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
        <files mask="erpc_setup_spi_master.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_spi_master_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_spi_slave_transport.MIMXRT1176" name="eRPC_spi_slave_transport" brief="eRPC_spi_slave_transport" version="1.13.0" full_name="eRPC SPI slave transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT1176"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT1176"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_spi_slave_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_spi_slave_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
        <files mask="erpc_setup_spi_slave.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_spi_slave_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_lpspi_slave_transport.MIMXRT1176" name="eRPC_lpspi_slave_transport" brief="eRPC_lpspi_slave_transport" version="1.13.0" full_name="eRPC LPSPI slave transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT1176"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT1176"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_lpspi_slave_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_lpspi_slave_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
        <files mask="erpc_setup_lpspi_slave.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_lpspi_slave_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_i2c_slave_transport.MIMXRT1176" name="eRPC_i2c_slave_transport" brief="eRPC_i2c_slave_transport" version="1.13.0" full_name="eRPC I2C slave transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT1176"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT1176"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_i2c_slave_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_i2c_slave_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
        <files mask="erpc_setup_i2c_slave.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_i2c_slave_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_lpi2c_slave_transport.MIMXRT1176" name="eRPC_lpi2c_slave_transport" brief="eRPC_lpi2c_slave_transport" version="1.13.0" full_name="eRPC LPI2C slave transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT1176"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT1176"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_lpi2c_slave_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_lpi2c_slave_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
        <files mask="erpc_setup_lpi2c_slave.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_lpi2c_slave_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.examples.erpc_common_multicore.MIMXRT1176" name="eRPC_common" brief="eRPC" version="1.13.0" full_name="Embedded Remote Procedure Call" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK" type="c_include">
        <files mask="erpc_error_handler.h"/>
      </source>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK" type="src">
        <files mask="erpc_error_handler.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_examples_erpc_common_multicore.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK" type="c_include"/>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.examples.erpc_matrix_multiply_client.MIMXRT1176" name="eRPC_examples Matrix Multiply Client" brief="erpc_examples Matrix Multiply Client" version="1.13.0" full_name="eRPC examples" category="Multicore/Remote Procedure Call" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="c_include">
        <files mask="erpc_matrix_multiply_common.h"/>
        <files mask="c_erpc_matrix_multiply_client.h"/>
      </source>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="cpp_include">
        <files mask="erpc_matrix_multiply_common.hpp"/>
        <files mask="erpc_matrix_multiply_client.hpp"/>
        <files mask="erpc_matrix_multiply_interface.hpp"/>
      </source>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="src">
        <files mask="erpc_matrix_multiply_client.cpp"/>
        <files mask="erpc_matrix_multiply_interface.cpp"/>
        <files mask="c_erpc_matrix_multiply_client.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_examples_erpc_matrix_multiply_client.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="c_include"/>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.examples.erpc_matrix_multiply_server.MIMXRT1176" name="eRPC_examples Matrix Multiply Server" brief="erpc_examples Matrix Multiply Server" version="1.13.0" full_name="eRPC examples" category="Multicore/Remote Procedure Call" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="c_include">
        <files mask="erpc_matrix_multiply_common.h"/>
        <files mask="c_erpc_matrix_multiply_server.h"/>
      </source>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="cpp_include">
        <files mask="erpc_matrix_multiply_common.hpp"/>
        <files mask="erpc_matrix_multiply_server.hpp"/>
        <files mask="erpc_matrix_multiply_interface.hpp"/>
      </source>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="src">
        <files mask="erpc_matrix_multiply_server.cpp"/>
        <files mask="erpc_matrix_multiply_interface.cpp"/>
        <files mask="c_erpc_matrix_multiply_server.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_examples_erpc_matrix_multiply_server.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="c_include"/>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.examples.erpc_two_way_rpc_core0.MIMXRT1176" name="eRPC_examples Two Way RPC core0" brief="erpc_examples Two Way RPC core0" version="1.13.0" full_name="eRPC examples" category="Multicore/Remote Procedure Call" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="c_include">
        <files mask="erpc_two_way_rpc_Core0Interface_common.h"/>
        <files mask="c_erpc_two_way_rpc_Core0Interface_client.h"/>
        <files mask="erpc_two_way_rpc_Core1Interface_common.h"/>
        <files mask="c_erpc_two_way_rpc_Core1Interface_server.h"/>
      </source>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="cpp_include">
        <files mask="erpc_two_way_rpc_Core0Interface_common.hpp"/>
        <files mask="erpc_two_way_rpc_Core0Interface_client.hpp"/>
        <files mask="erpc_two_way_rpc_Core0Interface_interface.hpp"/>
        <files mask="erpc_two_way_rpc_Core1Interface_common.hpp"/>
        <files mask="erpc_two_way_rpc_Core1Interface_server.hpp"/>
        <files mask="erpc_two_way_rpc_Core1Interface_interface.hpp"/>
      </source>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="src">
        <files mask="erpc_two_way_rpc_Core0Interface_client.cpp"/>
        <files mask="c_erpc_two_way_rpc_Core0Interface_client.cpp"/>
        <files mask="erpc_two_way_rpc_Core0Interface_interface.cpp"/>
        <files mask="erpc_two_way_rpc_Core1Interface_server.cpp"/>
        <files mask="c_erpc_two_way_rpc_Core1Interface_server.cpp"/>
        <files mask="erpc_two_way_rpc_Core1Interface_interface.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_examples_erpc_two_way_rpc_core0.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="c_include"/>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.examples.erpc_two_way_rpc_core1.MIMXRT1176" name="eRPC_examples Two Way RPC core1" brief="erpc_examples Two Way RPC core1" version="1.13.0" full_name="eRPC examples" category="Multicore/Remote Procedure Call" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="c_include">
        <files mask="erpc_two_way_rpc_Core1Interface_common.h"/>
        <files mask="c_erpc_two_way_rpc_Core1Interface_client.h"/>
        <files mask="erpc_two_way_rpc_Core0Interface_common.h"/>
        <files mask="c_erpc_two_way_rpc_Core0Interface_server.h"/>
      </source>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="cpp_include">
        <files mask="erpc_two_way_rpc_Core1Interface_common.hpp"/>
        <files mask="erpc_two_way_rpc_Core1Interface_client.hpp"/>
        <files mask="erpc_two_way_rpc_Core1Interface_interface.hpp"/>
        <files mask="erpc_two_way_rpc_Core0Interface_common.hpp"/>
        <files mask="erpc_two_way_rpc_Core0Interface_server.hpp"/>
        <files mask="erpc_two_way_rpc_Core0Interface_interface.hpp"/>
      </source>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="src">
        <files mask="erpc_two_way_rpc_Core1Interface_client.cpp"/>
        <files mask="c_erpc_two_way_rpc_Core1Interface_client.cpp"/>
        <files mask="erpc_two_way_rpc_Core1Interface_interface.cpp"/>
        <files mask="erpc_two_way_rpc_Core0Interface_server.cpp"/>
        <files mask="c_erpc_two_way_rpc_Core0Interface_server.cpp"/>
        <files mask="erpc_two_way_rpc_Core0Interface_interface.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_examples_erpc_two_way_rpc_core1.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="c_include"/>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mmcau.cm4_cm7.MIMXRT1176" name="mmcau_cm4_cm7" brief="MMCAU library for ARM Cortex M4/M7 core" version="2.0.4" full_name="Kinetis MMCAU security function library for Arm Cortex-M4 and Cortex-M7" category="MMCAU Security/MMCAU library" user_visible="true" type="middleware" package_base_path="middleware/mmcau" project_base_path="mmcau">
      <dependencies>
        <all>
          <any_of>
            <device_core_dependency value="cm4_MIMXRT1176xxxxx"/>
            <device_core_dependency value="cm7_MIMXRT1176xxxxx"/>
          </any_of>
          <component_dependency value="platform.drivers.clock.MIMXRT1176"/>
          <component_dependency value="middleware.mmcau.common_files.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="armgcc mcuxpresso iar" relative_path="asm-cm4-cm7" type="lib">
        <files mask="lib_mmcau.a"/>
      </source>
      <source toolchain="mdk" relative_path="asm-cm4-cm7" type="lib">
        <files mask="lib_mmcau.lib"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mmcau_cm4_cm7.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcuboot.bootutil.MIMXRT1176" name="mcuboot_bootutil" brief="mcuboot" version="2.0.0" full_name="MCUboot bootloader" category="File System/MCUboot bootloader" user_visible="false" type="middleware" package_base_path="middleware/mcuboot_opensource/boot/bootutil" project_base_path="bootutil">
      <dependencies>
        <all>
          <component_dependency value="middleware.mcuboot.nxp_bootutil_port.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="include/bootutil" type="c_include">
        <files mask="bench.h"/>
        <files mask="boot_hooks.h"/>
        <files mask="boot_public_hooks.h"/>
        <files mask="boot_record.h"/>
        <files mask="boot_status.h"/>
        <files mask="bootutil.h"/>
        <files mask="bootutil_log.h"/>
        <files mask="bootutil_public.h"/>
        <files mask="bootutil_test.h"/>
        <files mask="caps.h"/>
        <files mask="enc_key.h"/>
        <files mask="enc_key_public.h"/>
        <files mask="fault_injection_hardening.h"/>
        <files mask="fault_injection_hardening_delay_rng.h"/>
        <files mask="ignore.h"/>
        <files mask="image.h"/>
        <files mask="mcuboot_status.h"/>
        <files mask="ramload.h"/>
        <files mask="security_cnt.h"/>
        <files mask="sign_key.h"/>
      </source>
      <source relative_path="include/bootutil/crypto" type="c_include">
        <files mask="aes_ctr.h"/>
        <files mask="aes_kw.h"/>
        <files mask="common.h"/>
        <files mask="ecdh_p256.h"/>
        <files mask="ecdh_x25519.h"/>
        <files mask="ecdsa.h"/>
        <files mask="hmac_sha256.h"/>
        <files mask="rsa.h"/>
        <files mask="sha.h"/>
      </source>
      <source relative_path="src" type="src">
        <files mask="boot_record.c"/>
        <files mask="bootutil_misc.c"/>
        <files mask="bootutil_public.c"/>
        <files mask="caps.c"/>
        <files mask="encrypted.c"/>
        <files mask="fault_injection_hardening.c"/>
        <files mask="fault_injection_hardening_delay_rng_mbedtls.c"/>
        <files mask="image_ecdsa.c"/>
        <files mask="image_ed25519.c"/>
        <files mask="image_rsa.c"/>
        <files mask="image_validate.c"/>
        <files mask="loader.c"/>
        <files mask="swap_misc.c"/>
        <files mask="swap_move.c"/>
        <files mask="swap_scratch.c"/>
        <files mask="tlv.c"/>
      </source>
      <source relative_path="src" type="c_include">
        <files mask="bootutil_misc.h"/>
        <files mask="bootutil_priv.h"/>
        <files mask="swap_priv.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mcuboot_bootutil.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="src" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcuboot.bootutil.flashapi_rt.MIMXRT1176" name="mcuboot_bootutil.flashapi_rt" brief="MCUboot device flash porting layer" version="2.0.0" full_name="MCUboot device flash porting layer RT" category="File System/MCUboot bootloader" user_visible="false" type="middleware" package_base_path="middleware/mcuboot_opensource/boot/nxp_mcux_sdk/flashapi" project_base_path="bootutil/flashapi">
      <dependencies>
        <all>
          <not>
            <component_dependency value="middleware.mcuboot.bootutil.flashapi_mcx.MIMXRT1176"/>
          </not>
          <component_dependency value="middleware.mcuboot.bootutil.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="flash_api.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mcuboot_bootutil_flashapi_rt.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcuboot.bootutil.flashapi_mcx.MIMXRT1176" name="mcuboot_bootutil.flashapi_mcx" brief="MCUboot device flash porting layer" version="2.0.0" full_name="MCUboot device flash porting layer MCX" category="File System/MCUboot bootloader" user_visible="false" type="middleware" package_base_path="middleware/mcuboot_opensource/boot/nxp_mcux_sdk/flashapi" project_base_path="bootutil/flashapi">
      <dependencies>
        <all>
          <component_dependency value="middleware.mcuboot.bootutil.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="flash_api_mcxn10.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mcuboot_bootutil_flashapi_mcx.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcuboot.tinycrypt.MIMXRT1176" name="mcuboot_tinycrypt" brief="TinyCrypt fork in MCUBoot repository" version="0.2.8" full_name="mcuboot_tinycrypt_fork" category="File System/MCUboot bootloader" user_visible="false" type="middleware" package_base_path="middleware/mcuboot_opensource/ext/tinycrypt/lib" project_base_path="tinycrypt">
      <dependencies>
        <all>
          <not>
            <component_dependency value="middleware.mbedtls.MIMXRT1176"/>
          </not>
          <component_dependency value="middleware.mcuboot.bootutil.MIMXRT1176"/>
          <component_dependency value="middleware.mcuboot.mbedtls-asn1.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="include/tinycrypt" type="c_include">
        <files mask="aes.h"/>
        <files mask="cbc_mode.h"/>
        <files mask="ccm_mode.h"/>
        <files mask="cmac_mode.h"/>
        <files mask="constants.h"/>
        <files mask="ctr_mode.h"/>
        <files mask="ctr_prng.h"/>
        <files mask="ecc.h"/>
        <files mask="ecc_dsa.h"/>
        <files mask="hmac.h"/>
        <files mask="hmac_prng.h"/>
        <files mask="sha256.h"/>
        <files mask="utils.h"/>
        <files mask="ecc_platform_specific.h"/>
      </source>
      <source relative_path="source" type="src">
        <files mask="aes_decrypt.c"/>
        <files mask="aes_encrypt.c"/>
        <files mask="cbc_mode.c"/>
        <files mask="ccm_mode.c"/>
        <files mask="cmac_mode.c"/>
        <files mask="ctr_mode.c"/>
        <files mask="ctr_prng.c"/>
        <files mask="ecc.c"/>
        <files mask="ecc_dsa.c"/>
        <files mask="hmac.c"/>
        <files mask="hmac_prng.c"/>
        <files mask="sha256.c"/>
        <files mask="utils.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mcuboot_tinycrypt.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls.port.ksdk.MIMXRT1176" name="mbedtls_ksdk" brief="mbedTLS port library for KPSDK" version="2.28.8" full_name="MbedTLS MCUX SDK port layer" category="Security/mbedTLS library" user_visible="true" type="middleware" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <defines>
        <define name="MBEDTLS_CONFIG_FILE" value="'&quot;ksdk_mbedtls_config.h&quot;'"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.caam.MIMXRT1176"/>
          <component_dependency value="middleware.mbedtls.MIMXRT1176"/>
          <component_dependency value="middleware.mbedtls.port.ksdk_option.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="port/ksdk" type="src">
        <files mask="ksdk_mbedtls.c"/>
        <files mask="des_alt.c"/>
        <files mask="aes_alt.c"/>
        <files mask="ecp_alt.c"/>
        <files mask="ecp_curves_alt.c"/>
        <files mask="ecp_alt_ksdk.c"/>
      </source>
      <source relative_path="port/ksdk" type="c_include">
        <files mask="ksdk_mbedtls.h"/>
        <files mask="ksdk_mbedtls_config.h"/>
        <files mask="sha1_alt.h"/>
        <files mask="sha256_alt.h"/>
        <files mask="des_alt.h"/>
        <files mask="aes_alt.h"/>
        <files mask="ccm_alt.h"/>
        <files mask="ecp_alt.h"/>
        <files mask="threading_alt.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mbedtls_port_ksdk.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/ksdk" type="c_include"/>
        <include_path relative_path="port/ksdk" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls.MIMXRT1176" name="mbedtls" brief="mbedTLS library" version="2.28.8" full_name="MbedTLS open source SSL library" category="Security/mbedTLS library" user_visible="true" type="middleware" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <dependencies>
        <all>
          <component_dependency value="middleware.mbedtls.port.ksdk.MIMXRT1176"/>
          <component_dependency value="middleware.mbedtls.port.ksdk_option.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="include/mbedtls" type="c_include">
        <files mask="aes.h"/>
        <files mask="aesni.h"/>
        <files mask="arc4.h"/>
        <files mask="aria.h"/>
        <files mask="asn1.h"/>
        <files mask="asn1write.h"/>
        <files mask="base64.h"/>
        <files mask="bignum.h"/>
        <files mask="blowfish.h"/>
        <files mask="bn_mul.h"/>
        <files mask="camellia.h"/>
        <files mask="ccm.h"/>
        <files mask="certs.h"/>
        <files mask="chacha20.h"/>
        <files mask="chachapoly.h"/>
        <files mask="check_config.h"/>
        <files mask="cipher.h"/>
        <files mask="cipher_internal.h"/>
        <files mask="cmac.h"/>
        <files mask="compat-1.3.h"/>
        <files mask="config.h"/>
        <files mask="config_psa.h"/>
        <files mask="constant_time.h"/>
        <files mask="ctr_drbg.h"/>
        <files mask="debug.h"/>
        <files mask="des.h"/>
        <files mask="dhm.h"/>
        <files mask="ecdh.h"/>
        <files mask="ecdsa.h"/>
        <files mask="ecjpake.h"/>
        <files mask="ecp.h"/>
        <files mask="ecp_internal.h"/>
        <files mask="entropy.h"/>
        <files mask="entropy_poll.h"/>
        <files mask="error.h"/>
        <files mask="gcm.h"/>
        <files mask="havege.h"/>
        <files mask="hkdf.h"/>
        <files mask="hmac_drbg.h"/>
        <files mask="md.h"/>
        <files mask="md_internal.h"/>
        <files mask="md2.h"/>
        <files mask="md4.h"/>
        <files mask="md5.h"/>
        <files mask="memory_buffer_alloc.h"/>
        <files mask="net.h"/>
        <files mask="net_sockets.h"/>
        <files mask="nist_kw.h"/>
        <files mask="oid.h"/>
        <files mask="padlock.h"/>
        <files mask="pem.h"/>
        <files mask="pk.h"/>
        <files mask="pk_internal.h"/>
        <files mask="pkcs5.h"/>
        <files mask="pkcs11.h"/>
        <files mask="pkcs12.h"/>
        <files mask="platform.h"/>
        <files mask="platform_time.h"/>
        <files mask="platform_util.h"/>
        <files mask="poly1305.h"/>
        <files mask="psa_util.h"/>
        <files mask="ripemd160.h"/>
        <files mask="rsa.h"/>
        <files mask="rsa_internal.h"/>
        <files mask="sha1.h"/>
        <files mask="sha256.h"/>
        <files mask="sha512.h"/>
        <files mask="ssl.h"/>
        <files mask="ssl_cache.h"/>
        <files mask="ssl_ciphersuites.h"/>
        <files mask="ssl_cookie.h"/>
        <files mask="ssl_internal.h"/>
        <files mask="ssl_ticket.h"/>
        <files mask="threading.h"/>
        <files mask="timing.h"/>
        <files mask="version.h"/>
        <files mask="x509.h"/>
        <files mask="x509_crl.h"/>
        <files mask="x509_crt.h"/>
        <files mask="x509_csr.h"/>
        <files mask="xtea.h"/>
      </source>
      <source relative_path="include/psa" type="c_include">
        <files mask="crypto.h"/>
        <files mask="crypto_builtin_composites.h"/>
        <files mask="crypto_builtin_primitives.h"/>
        <files mask="crypto_compat.h"/>
        <files mask="crypto_config.h"/>
        <files mask="crypto_driver_common.h"/>
        <files mask="crypto_driver_contexts_composites.h"/>
        <files mask="crypto_driver_contexts_primitives.h"/>
        <files mask="crypto_extra.h"/>
        <files mask="crypto_platform.h"/>
        <files mask="crypto_se_driver.h"/>
        <files mask="crypto_sizes.h"/>
        <files mask="crypto_struct.h"/>
        <files mask="crypto_types.h"/>
        <files mask="crypto_values.h"/>
      </source>
      <source relative_path="library" type="src">
        <files mask="aes.c"/>
        <files mask="aesni.c"/>
        <files mask="arc4.c"/>
        <files mask="aria.c"/>
        <files mask="asn1parse.c"/>
        <files mask="asn1write.c"/>
        <files mask="base64.c"/>
        <files mask="bignum.c"/>
        <files mask="blowfish.c"/>
        <files mask="camellia.c"/>
        <files mask="ccm.c"/>
        <files mask="certs.c"/>
        <files mask="chacha20.c"/>
        <files mask="chachapoly.c"/>
        <files mask="cipher.c"/>
        <files mask="cipher_wrap.c"/>
        <files mask="cmac.c"/>
        <files mask="constant_time.c"/>
        <files mask="ctr_drbg.c"/>
        <files mask="debug.c"/>
        <files mask="des.c"/>
        <files mask="dhm.c"/>
        <files mask="ecdh.c"/>
        <files mask="ecdsa.c"/>
        <files mask="ecjpake.c"/>
        <files mask="ecp.c"/>
        <files mask="ecp_curves.c"/>
        <files mask="entropy.c"/>
        <files mask="entropy_poll.c"/>
        <files mask="error.c"/>
        <files mask="gcm.c"/>
        <files mask="havege.c"/>
        <files mask="hkdf.c"/>
        <files mask="hmac_drbg.c"/>
        <files mask="md.c"/>
        <files mask="md2.c"/>
        <files mask="md4.c"/>
        <files mask="md5.c"/>
        <files mask="memory_buffer_alloc.c"/>
        <files mask="mps_reader.c"/>
        <files mask="mps_trace.c"/>
        <files mask="net_sockets.c"/>
        <files mask="nist_kw.c"/>
        <files mask="oid.c"/>
        <files mask="padlock.c"/>
        <files mask="pem.c"/>
        <files mask="pk.c"/>
        <files mask="pk_wrap.c"/>
        <files mask="pkcs5.c"/>
        <files mask="pkcs11.c"/>
        <files mask="pkcs12.c"/>
        <files mask="pkparse.c"/>
        <files mask="pkwrite.c"/>
        <files mask="platform.c"/>
        <files mask="platform_util.c"/>
        <files mask="poly1305.c"/>
        <files mask="psa_crypto.c"/>
        <files mask="psa_crypto_aead.c"/>
        <files mask="psa_crypto_cipher.c"/>
        <files mask="psa_crypto_client.c"/>
        <files mask="psa_crypto_driver_wrappers.c"/>
        <files mask="psa_crypto_ecp.c"/>
        <files mask="psa_crypto_hash.c"/>
        <files mask="psa_crypto_mac.c"/>
        <files mask="psa_crypto_rsa.c"/>
        <files mask="psa_crypto_se.c"/>
        <files mask="psa_crypto_slot_management.c"/>
        <files mask="psa_crypto_storage.c"/>
        <files mask="psa_its_file.c"/>
        <files mask="ripemd160.c"/>
        <files mask="rsa.c"/>
        <files mask="rsa_internal.c"/>
        <files mask="sha1.c"/>
        <files mask="sha256.c"/>
        <files mask="sha512.c"/>
        <files mask="ssl_cache.c"/>
        <files mask="ssl_ciphersuites.c"/>
        <files mask="ssl_cli.c"/>
        <files mask="ssl_cookie.c"/>
        <files mask="ssl_msg.c"/>
        <files mask="ssl_srv.c"/>
        <files mask="ssl_ticket.c"/>
        <files mask="ssl_tls.c"/>
        <files mask="ssl_tls13_keys.c"/>
        <files mask="threading.c"/>
        <files mask="timing.c"/>
        <files mask="version.c"/>
        <files mask="version_features.c"/>
        <files mask="x509.c"/>
        <files mask="x509_create.c"/>
        <files mask="x509_crl.c"/>
        <files mask="x509_crt.c"/>
        <files mask="x509_csr.c"/>
        <files mask="x509write_crt.c"/>
        <files mask="x509write_csr.c"/>
        <files mask="xtea.c"/>
      </source>
      <source relative_path="library" type="c_include">
        <files mask="bignum_internal.h"/>
        <files mask="check_crypto_config.h"/>
        <files mask="common.h"/>
        <files mask="constant_time_internal.h"/>
        <files mask="constant_time_invasive.h"/>
        <files mask="ecp_invasive.h"/>
        <files mask="mps_common.h"/>
        <files mask="mps_error.h"/>
        <files mask="mps_reader.h"/>
        <files mask="mps_trace.h"/>
        <files mask="psa_crypto_aead.h"/>
        <files mask="psa_crypto_cipher.h"/>
        <files mask="psa_crypto_core.h"/>
        <files mask="psa_crypto_driver_wrappers.h"/>
        <files mask="psa_crypto_ecp.h"/>
        <files mask="psa_crypto_hash.h"/>
        <files mask="psa_crypto_invasive.h"/>
        <files mask="psa_crypto_its.h"/>
        <files mask="psa_crypto_mac.h"/>
        <files mask="psa_crypto_random_impl.h"/>
        <files mask="psa_crypto_rsa.h"/>
        <files mask="psa_crypto_se.h"/>
        <files mask="psa_crypto_slot_management.h"/>
        <files mask="psa_crypto_storage.h"/>
        <files mask="ssl_tls13_keys.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mbedtls.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="library" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
        <include_path relative_path="library" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.audio_voice.components.voice_seeker.cm7.MIMXRT1176" name="voice_seeker" brief="Voice seeker library for Cortex M7" version="0.6.9" full_name="middleware voice_seeker cm7" category="Voice/Voice Control AFE" user_visible="true" type="middleware" package_base_path="middleware/audio_voice/components/voice_seeker/ARM_CortexM7" project_base_path="voice_seeker">
      <dependencies>
        <all>
          <component_dependency value="middleware.audio_voice.components.voice_seeker.rdsp_utilities_public.cm7.MIMXRT1176"/>
          <board_dependency value="evkbmimxrt1170"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="COPYING-BSD-3.txt"/>
        <files mask="LICENSE.txt"/>
        <files mask="SCR-ARM_CortexM7-v0.6.8.txt"/>
        <files mask="SCR-ARM_CortexM7-v0.6.9.txt"/>
        <files mask="SCR-ARM_CortexM7_Voiceseeker-v0.6.9.txt"/>
        <files mask="SCR-ARM_CortexM7_Voiceseeker_no_aec-v0.6.9.txt"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="include" type="c_include">
        <files mask="RdspCycleCounter.h"/>
        <files mask="RdspStatusCodes.h"/>
        <files mask="libVoiceSeekerLight.h"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="lib" type="lib">
        <files mask="libvoiceseeker_no_aec.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_audio_voice_components_voice_seeker_cm7.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" toolchain="armgcc mcuxpresso" type="c_include"/>
        <include_path relative_path="include" toolchain="armgcc mcuxpresso" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.audio_voice.components.voice_seeker.rdsp_utilities_public.cm7.MIMXRT1176" name="voice_seeker memory utils" brief="Voice seeker memory utilities for Cortex M7" version="0.6.9" full_name="middleware voice_seeker memory utils cm7" category="Voice/Voice Control AFE" user_visible="true" type="middleware" package_base_path="middleware/audio_voice/components/voice_seeker/ARM_CortexM7/rdsp_utilities_public" project_base_path="voice_seeker/ARM_CortexM7/rdsp_utilities_public">
      <dependencies>
        <all>
          <board_dependency value="evkbmimxrt1170"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="armgcc mcuxpresso" relative_path="include" type="c_include">
        <files mask="RdspDeviceConfig.h"/>
        <files mask="RdspPlatforms.h"/>
        <files mask="RdspTypes.h"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="rdsp_memory_utils_public" type="c_include">
        <files mask="RdspMemoryUtilsPublic.h"/>
        <files mask="RdspStackCheck.h"/>
        <files mask="memcheck.h"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="rdsp_memory_utils_public" type="src">
        <files mask="RdspMemoryUtilsPublic.c"/>
        <files mask="memcheck.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_audio_voice_components_voice_seeker_rdsp_utilities_public_cm7.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" toolchain="armgcc mcuxpresso" type="c_include"/>
        <include_path relative_path="rdsp_memory_utils_public" toolchain="armgcc mcuxpresso" type="c_include"/>
        <include_path relative_path="include" toolchain="armgcc mcuxpresso" type="asm_include"/>
        <include_path relative_path="rdsp_memory_utils_public" toolchain="armgcc mcuxpresso" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.audio_voice.components.vit.cm7.MIMXRT1176" name="vit" brief="Voice intelligent technology library for Cortex M7" version="4.10.0" full_name="middleware vit cm7" category="Voice/Voice Command" user_visible="true" type="middleware" package_base_path="middleware/audio_voice/components/vit" project_base_path="vit">
      <dependencies>
        <all>
          <board_dependency value="evkbmimxrt1170"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="mcuxpresso armgcc" relative_path="CortexM7/Lib" type="c_include">
        <files mask="VIT.h"/>
        <files mask="VIT_Model_cn.h"/>
        <files mask="VIT_Model_de.h"/>
        <files mask="VIT_Model_en.h"/>
        <files mask="VIT_Model_es.h"/>
        <files mask="VIT_Model_fr.h"/>
        <files mask="VIT_Model_it.h"/>
        <files mask="VIT_Model_ja.h"/>
        <files mask="VIT_Model_ko.h"/>
        <files mask="VIT_Model_pt.h"/>
        <files mask="VIT_Model_tr.h"/>
      </source>
      <source toolchain="mcuxpresso armgcc" relative_path="CortexM7/Lib/Inc" type="c_include">
        <files mask="PL_memoryRegion.h"/>
        <files mask="PL_platformTypes_CortexM.h"/>
      </source>
      <source toolchain="mcuxpresso armgcc" relative_path="CortexM7/Doc" type="doc">
        <files mask="VITIUG.pdf"/>
      </source>
      <source toolchain="mcuxpresso armgcc" relative_path="CortexM7" type="doc">
        <files mask="LICENSE.txt"/>
        <files mask="ReleaseNotes.txt"/>
      </source>
      <source toolchain="mcuxpresso armgcc" relative_path="CortexM7/Lib" type="lib">
        <files mask="libVIT_CM7_v04_11_00.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_audio_voice_components_vit_cm7.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="CortexM7/Lib" toolchain="mcuxpresso armgcc" type="c_include"/>
        <include_path relative_path="CortexM7/Lib/Inc" toolchain="mcuxpresso armgcc" type="c_include"/>
        <include_path relative_path="CortexM7/Lib" toolchain="mcuxpresso armgcc" type="asm_include"/>
        <include_path relative_path="CortexM7/Lib/Inc" toolchain="mcuxpresso armgcc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.audio_voice.maestro.element.audio_proc.enable.MIMXRT1176" name="Audio process" brief="MCU Maestro Audio Framework Element" version="1.7.0" full_name="Maestro Audio Framework Element" category="Audio/Framework" user_visible="true" type="middleware" package_base_path="middleware/audio_voice/maestro" project_base_path="maestro">
      <defines>
        <define name="STREAMER_ENABLE_AUDIO_PROC" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.audio_voice.maestro.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="src/elements" type="src">
        <files mask="audio_proc.c"/>
      </source>
      <source relative_path="src/elements" type="c_include">
        <files mask="audio_proc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_audio_voice_maestro_element_audio_proc_enable.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.audio_voice.maestro.element.audio_sink.enable.MIMXRT1176" name="Audio sink" brief="MCU Maestro Audio Framework Element" version="1.7.0" full_name="Maestro Audio Framework Element" category="Audio/Framework" user_visible="true" type="middleware" package_base_path="middleware/audio_voice/maestro" project_base_path="maestro">
      <defines>
        <define name="STREAMER_ENABLE_AUDIO_SINK" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.audio_voice.maestro.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="src/elements" type="src">
        <files mask="audio_sink.c"/>
      </source>
      <source relative_path="src/elements" type="c_include">
        <files mask="audio_sink.h"/>
      </source>
      <source relative_path="src/devices" type="src">
        <files mask="audio_sink_default.c"/>
      </source>
      <source relative_path="src/devices" type="c_include">
        <files mask="audio_sink_default.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_audio_voice_maestro_element_audio_sink_enable.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.audio_voice.maestro.element.audio_src.enable.MIMXRT1176" name="Audio source" brief="MCU Maestro Audio Framework Element" version="1.7.0" full_name="Maestro Audio Framework Element" category="Audio/Framework" user_visible="true" type="middleware" package_base_path="middleware/audio_voice/maestro" project_base_path="maestro">
      <defines>
        <define name="STREAMER_ENABLE_AUDIO_SRC" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.audio_voice.maestro.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="src/elements" type="src">
        <files mask="audio_src.c"/>
      </source>
      <source relative_path="src/elements" type="c_include">
        <files mask="audio_src.h"/>
      </source>
      <source relative_path="src/devices" type="src">
        <files mask="audio_src_default.c"/>
      </source>
      <source relative_path="src/devices" type="c_include">
        <files mask="audio_src_default.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_audio_voice_maestro_element_audio_src_enable.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.audio_voice.maestro.file_utils.enable.MIMXRT1176" name="Enables File utils" brief="MCU Maestro Audio Framework Element" version="1.7.0" full_name="Maestro Audio Framework Element" category="Audio/Framework" user_visible="true" type="middleware" package_base_path="middleware/audio_voice/maestro" project_base_path="maestro">
      <dependencies>
        <all>
          <component_dependency value="middleware.audio_voice.maestro.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="src/utils/inc" type="c_include">
        <files mask="file_utils.h"/>
      </source>
      <source relative_path="src/utils/src" type="src">
        <files mask="file_utils.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_audio_voice_maestro_file_utils_enable.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.audio_voice.maestro.element.file_sink.enable.MIMXRT1176" name="File sink" brief="MCU Maestro Audio Framework Element" version="1.7.0" full_name="Maestro Audio Framework Element" category="Audio/Framework" user_visible="true" type="middleware" package_base_path="middleware/audio_voice/maestro" project_base_path="maestro">
      <defines>
        <define name="STREAMER_ENABLE_FILE_SINK" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.audio_voice.maestro.MIMXRT1176"/>
          <component_dependency value="middleware.audio_voice.maestro.file_utils.enable.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="src/elements" type="src">
        <files mask="file_sink.c"/>
      </source>
      <source relative_path="src/elements" type="c_include">
        <files mask="file_sink.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_audio_voice_maestro_element_file_sink_enable.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.audio_voice.maestro.element.file_src.enable.MIMXRT1176" name="File source" brief="MCU Maestro Audio Framework Element" version="1.7.0" full_name="Maestro Audio Framework Element" category="Audio/Framework" user_visible="true" type="middleware" package_base_path="middleware/audio_voice/maestro" project_base_path="maestro">
      <defines>
        <define name="STREAMER_ENABLE_FILESRC" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.audio_voice.maestro.MIMXRT1176"/>
          <component_dependency value="middleware.audio_voice.maestro.file_utils.enable.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="src/elements" type="src">
        <files mask="file_src.c"/>
      </source>
      <source relative_path="src/elements" type="c_include">
        <files mask="file_src.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_audio_voice_maestro_element_file_src_enable.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.audio_voice.maestro.element.mem_sink.enable.MIMXRT1176" name="Memory sink" brief="MCU Maestro Audio Framework Element" version="1.7.0" full_name="Maestro Audio Framework Element" category="Audio/Framework" user_visible="true" type="middleware" package_base_path="middleware/audio_voice/maestro" project_base_path="maestro">
      <defines>
        <define name="STREAMER_ENABLE_MEM_SINK" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.audio_voice.maestro.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="src/elements" type="src">
        <files mask="mem_sink.c"/>
      </source>
      <source relative_path="src/elements" type="c_include">
        <files mask="mem_sink.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_audio_voice_maestro_element_mem_sink_enable.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.audio_voice.maestro.element.mem_src.enable.MIMXRT1176" name="Memory source" brief="MCU Maestro Audio Framework Element" version="1.7.0" full_name="Maestro Audio Framework Element" category="Audio/Framework" user_visible="true" type="middleware" package_base_path="middleware/audio_voice/maestro" project_base_path="maestro">
      <defines>
        <define name="STREAMER_ENABLE_MEM_SRC" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.audio_voice.maestro.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="src/elements" type="src">
        <files mask="mem_src.c"/>
      </source>
      <source relative_path="src/elements" type="c_include">
        <files mask="mem_src.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_audio_voice_maestro_element_mem_src_enable.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.audio_voice.maestro.element.netbuf_src.enable.MIMXRT1176" name="Netbuf source" brief="MCU Maestro Audio Framework Element" version="1.7.0" full_name="Maestro Audio Framework Element" category="Audio/Framework" user_visible="true" type="middleware" package_base_path="middleware/audio_voice/maestro" project_base_path="maestro">
      <defines>
        <define name="STREAMER_ENABLE_NETBUFSRC" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.audio_voice.maestro.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="src/elements" type="src">
        <files mask="netbuf_src.c"/>
      </source>
      <source relative_path="src/elements" type="c_include">
        <files mask="netbuf_src.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_audio_voice_maestro_element_netbuf_src_enable.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.audio_voice.maestro.element.process_sink.enable.MIMXRT1176" name="Process sink" brief="MCU Maestro Audio Framework Element" version="1.7.0" full_name="Maestro Audio Framework Element" category="Audio/Framework" user_visible="true" type="middleware" package_base_path="middleware/audio_voice/maestro" project_base_path="maestro">
      <defines>
        <define name="STREAMER_ENABLE_PROCESS_SINK" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.audio_voice.maestro.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="src/elements" type="src">
        <files mask="process_sink.c"/>
      </source>
      <source relative_path="src/elements" type="c_include">
        <files mask="process_sink.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_audio_voice_maestro_element_process_sink_enable.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.audio_voice.maestro.cci.enable.MIMXRT1176" name="Enables Common codec interface" brief="MCU Maestro Audio Framework Element" version="1.7.0" full_name="Maestro Audio Framework Element" category="Audio/Framework" user_visible="true" type="middleware" package_base_path="middleware/audio_voice/maestro" project_base_path="maestro">
      <dependencies>
        <all>
          <component_dependency value="middleware.audio_voice.maestro.MIMXRT1176"/>
          <component_dependency value="middleware.audio_voice.maestro.cei.enable.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="src/cci/inc" type="c_include">
        <files mask="cci_metadata.h"/>
        <files mask="ccidec.h"/>
        <files mask="codec_interface.h"/>
        <files mask="codec_interface_public_api.h"/>
        <files mask="errordefs.h"/>
      </source>
      <source relative_path="src/cci/src" type="src">
        <files mask="ccidec.c"/>
        <files mask="codec_interface.c"/>
        <files mask="codecextractmetadata.c"/>
      </source>
      <source relative_path="src/parsers/cci" type="src">
        <files mask="cci_codec_type_conversion.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_audio_voice_maestro_cci_enable.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/cci/inc" type="c_include"/>
        <include_path relative_path="src/parsers/cci" type="c_include"/>
        <include_path relative_path="src/cci/inc" type="asm_include"/>
        <include_path relative_path="src/parsers/cci" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.audio_voice.maestro.cei.enable.MIMXRT1176" name="Enables Common encoder interface" brief="MCU Maestro Audio Framework Element" version="1.7.0" full_name="Maestro Audio Framework Element" category="Audio/Framework" user_visible="true" type="middleware" package_base_path="middleware/audio_voice/maestro" project_base_path="maestro">
      <dependencies>
        <all>
          <component_dependency value="middleware.audio_voice.maestro.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="src/cei/inc" type="c_include">
        <files mask="cei.h"/>
        <files mask="cei_enctypes.h"/>
        <files mask="cei_table.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_audio_voice_maestro_cei_enable.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/cei/inc" type="c_include"/>
        <include_path relative_path="src/cei/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.audio_voice.maestro.element.decoder.enable.MIMXRT1176" name="Decoder" brief="MCU Maestro Audio Framework Element" version="1.7.0" full_name="Maestro Audio Framework Element" category="Audio/Framework" user_visible="true" type="middleware" package_base_path="middleware/audio_voice/maestro" project_base_path="maestro">
      <defines>
        <define name="STREAMER_ENABLE_DECODER" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.audio_voice.maestro.MIMXRT1176"/>
          <component_dependency value="middleware.audio_voice.maestro.cci.enable.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="src/elements" type="src">
        <files mask="decoder.c"/>
        <files mask="decoder_pads.c"/>
      </source>
      <source relative_path="src/elements" type="c_include">
        <files mask="decoder.h"/>
        <files mask="decoder_pads.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_audio_voice_maestro_element_decoder_enable.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.audio_voice.maestro.element.encoder.enable.MIMXRT1176" name="Encoder" brief="MCU Maestro Audio Framework Element" version="1.7.0" full_name="Maestro Audio Framework Element" category="Audio/Framework" user_visible="true" type="middleware" package_base_path="middleware/audio_voice/maestro" project_base_path="maestro">
      <defines>
        <define name="STREAMER_ENABLE_ENCODER" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.audio_voice.maestro.MIMXRT1176"/>
          <component_dependency value="middleware.audio_voice.maestro.cei.enable.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="src/elements" type="src">
        <files mask="encoder.c"/>
      </source>
      <source relative_path="src/elements" type="c_include">
        <files mask="encoder.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_audio_voice_maestro_element_encoder_enable.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.audio_voice.maestro.element.decoder.aac.enable.MIMXRT1176" name="AAC decoder" brief="MCU Maestro Audio Framework Element" version="1.7.0" full_name="Maestro Audio Framework Element" category="Audio/Framework" user_visible="true" type="middleware" package_base_path="middleware/audio_voice/maestro" project_base_path="maestro">
      <defines>
        <define name="AAC_DEC" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.audio_voice.components.decoders.aac.MIMXRT1176"/>
          <component_dependency value="middleware.audio_voice.maestro.MIMXRT1176"/>
          <component_dependency value="middleware.audio_voice.maestro.element.decoder.enable.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
          <device_core_dependency value="cm7_MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="armgcc mcuxpresso" relative_path="components/decoders/aac" type="src">
        <files mask="aac_extractmetadata.c"/>
        <files mask="aac_utility.c"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="components/decoders/aac" type="c_include">
        <files mask="aac_metadata.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_audio_voice_maestro_element_decoder_aac_enable.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="components/decoders/aac" type="c_include"/>
        <include_path relative_path="components/decoders/aac" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.audio_voice.maestro.element.decoder.flac.enable.MIMXRT1176" name="FLAC decoder" brief="MCU Maestro Audio Framework Element" version="1.7.0" full_name="Maestro Audio Framework Element" category="Audio/Framework" user_visible="true" type="middleware" package_base_path="middleware/audio_voice/maestro" project_base_path="maestro">
      <defines>
        <define name="FLAC_DEC" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.audio_voice.components.decoders.flac.MIMXRT1176"/>
          <component_dependency value="middleware.audio_voice.maestro.MIMXRT1176"/>
          <component_dependency value="middleware.audio_voice.maestro.element.decoder.enable.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
          <device_core_dependency value="cm7_MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="armgcc iar mcuxpresso" relative_path="components/decoders/flac" type="src">
        <files mask="flac_extractmetadata.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_audio_voice_maestro_element_decoder_flac_enable.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.audio_voice.maestro.element.decoder.mp3.enable.MIMXRT1176" name="MP3 decoder" brief="MCU Maestro Audio Framework Element" version="1.7.0" full_name="Maestro Audio Framework Element" category="Audio/Framework" user_visible="true" type="middleware" package_base_path="middleware/audio_voice/maestro" project_base_path="maestro">
      <defines>
        <define name="MP3_DEC" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.audio_voice.components.decoders.mp3.MIMXRT1176"/>
          <component_dependency value="middleware.audio_voice.maestro.MIMXRT1176"/>
          <component_dependency value="middleware.audio_voice.maestro.element.decoder.enable.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
          <device_core_dependency value="cm7_MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="armgcc iar mcuxpresso" relative_path="components/decoders/mp3" type="c_include">
        <files mask="mp3_id3v2.h"/>
        <files mask="mp3_id3v2_internal.h"/>
        <files mask="mp3_metadata.h"/>
      </source>
      <source toolchain="armgcc iar mcuxpresso" relative_path="components/decoders/mp3" type="src">
        <files mask="mp3_extractmetadata.c"/>
        <files mask="mp3_id3v2.c"/>
        <files mask="mp3_vbr.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_audio_voice_maestro_element_decoder_mp3_enable.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="components/decoders/mp3" toolchain="armgcc iar mcuxpresso" type="c_include"/>
        <include_path relative_path="components/decoders/mp3" toolchain="armgcc iar mcuxpresso" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.audio_voice.maestro.element.decoder.wav.enable.MIMXRT1176" name="WAV decoder" brief="MCU Maestro Audio Framework Element" version="1.7.0" full_name="Maestro Audio Framework Element" category="Audio/Framework" user_visible="true" type="middleware" package_base_path="middleware/audio_voice/maestro" project_base_path="maestro">
      <defines>
        <define name="WAV_DEC" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.audio_voice.components.decoders.wav.MIMXRT1176"/>
          <component_dependency value="middleware.audio_voice.maestro.MIMXRT1176"/>
          <component_dependency value="middleware.audio_voice.maestro.element.decoder.enable.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
          <device_core_dependency value="cm7_MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="armgcc iar mcuxpresso" relative_path="components/decoders/wav" type="c_include">
        <files mask="wav_metadata.h"/>
        <files mask="wavedata.h"/>
        <files mask="wavedefs.h"/>
      </source>
      <source toolchain="armgcc iar mcuxpresso" relative_path="components/decoders/wav" type="src">
        <files mask="adpcm_extractmetadata.c"/>
        <files mask="wav_common.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_audio_voice_maestro_element_decoder_wav_enable.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="components/decoders/wav" toolchain="armgcc iar mcuxpresso" type="c_include"/>
        <include_path relative_path="components/decoders/wav" toolchain="armgcc iar mcuxpresso" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.audio_voice.maestro.element.decoder.opus_ogg.enable.MIMXRT1176" name="OPUS decoder using OGG" brief="MCU Maestro Audio Framework Element" version="1.7.0" full_name="Maestro Audio Framework Element" category="Audio/Framework" user_visible="true" type="middleware" package_base_path="middleware/audio_voice/maestro" project_base_path="maestro">
      <defines>
        <define name="OGG_OPUS_DEC" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.audio_voice.components.ogg.MIMXRT1176"/>
          <component_dependency value="middleware.audio_voice.components.opus.MIMXRT1176"/>
          <component_dependency value="middleware.audio_voice.components.opusfile.MIMXRT1176"/>
          <component_dependency value="middleware.audio_voice.maestro.MIMXRT1176"/>
          <component_dependency value="middleware.audio_voice.maestro.element.decoder.enable.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="components/decoders/opus" type="src">
        <files mask="opus_extractmetadata.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_audio_voice_maestro_element_decoder_opus_ogg_enable.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.audio_voice.maestro.element.encoder.opus.enable.MIMXRT1176" name="OPUS encoder" brief="MCU Maestro Audio Framework Element" version="1.7.0" full_name="Maestro Audio Framework Element" category="Audio/Framework" user_visible="true" type="middleware" package_base_path="middleware/audio_voice/maestro" project_base_path="maestro">
      <defines>
        <define name="OPUS_ENCODE" value="1"/>
        <define name="STREAMER_ENABLE_CEI_OPUS" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.audio_voice.components.opus.MIMXRT1176"/>
          <component_dependency value="middleware.audio_voice.maestro.MIMXRT1176"/>
          <component_dependency value="middleware.audio_voice.maestro.cci.enable.MIMXRT1176"/>
          <component_dependency value="middleware.audio_voice.maestro.element.decoder.enable.MIMXRT1176"/>
          <component_dependency value="middleware.audio_voice.maestro.element.encoder.enable.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="components/encoders/opus" type="src">
        <files mask="opusenc_cei.c"/>
      </source>
      <source relative_path="components/encoders/opus" type="c_include">
        <files mask="opusenc_cei.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_audio_voice_maestro_element_encoder_opus_enable.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="components/encoders/opus" type="c_include"/>
        <include_path relative_path="components/encoders/opus" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.audio_voice.maestro.element.audio_proc.asrc.enable.MIMXRT1176" name="Enables Asynchronous sample rate converter processing element" brief="MCU Maestro Audio Framework Element" version="1.7.0" full_name="Maestro Audio Framework Element" category="Audio/Framework" user_visible="true" type="middleware" package_base_path="middleware/audio_voice/maestro" project_base_path="maestro">
      <defines>
        <define name="ASRC_PROC" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.audio_voice.components.asrc.MIMXRT1176"/>
          <component_dependency value="middleware.audio_voice.maestro.MIMXRT1176"/>
          <component_dependency value="middleware.audio_voice.maestro.element.audio_proc.enable.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
          <device_core_dependency value="cm7_MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_audio_voice_maestro_element_audio_proc_asrc_enable.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.audio_voice.maestro.element.audio_proc.ssrc.enable.MIMXRT1176" name="Enables Synchronous sample rate converter processing element" brief="MCU Maestro Audio Framework Element" version="1.7.0" full_name="Maestro Audio Framework Element" category="Audio/Framework" user_visible="true" type="middleware" package_base_path="middleware/audio_voice/maestro" project_base_path="maestro">
      <defines>
        <define name="SSRC_PROC" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.audio_voice.components.ssrc.MIMXRT1176"/>
          <component_dependency value="middleware.audio_voice.maestro.MIMXRT1176"/>
          <component_dependency value="middleware.audio_voice.maestro.element.audio_proc.enable.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
          <device_core_dependency value="cm7_MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_audio_voice_maestro_element_audio_proc_ssrc_enable.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.lwip.MIMXRT1176" name="lwIP" brief="lwIP - A Lightweight TCP/IP Stack" version="2.2.1" revision="2" full_name="lwIP" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <any_of>
            <all>
              <not>
                <component_dependency value="middleware.lwip.sys_arch.static.MIMXRT1176"/>
              </not>
              <component_dependency value="middleware.lwip.sys_arch.dynamic.MIMXRT1176"/>
            </all>
            <all>
              <not>
                <component_dependency value="middleware.lwip.sys_arch.dynamic.MIMXRT1176"/>
              </not>
              <not>
                <component_dependency value="middleware.lwip.usb_ethernetif.MIMXRT1176"/>
              </not>
              <not>
                <component_dependency value="middleware.lwip.enet_ethernetif.MIMXRT1176"/>
              </not>
              <not>
                <component_dependency value="middleware.lwip.kinetis_ethernetif.MIMXRT1176"/>
              </not>
              <not>
                <component_dependency value="middleware.lwip.eoe_ethernetif.MIMXRT1176"/>
              </not>
              <component_dependency value="middleware.lwip.sys_arch.static.MIMXRT1176"/>
            </all>
          </any_of>
          <any_of>
            <component_dependency value="middleware.lwip.usb_ethernetif.MIMXRT1176"/>
            <component_dependency value="middleware.lwip.enet_ethernetif.MIMXRT1176"/>
            <component_dependency value="middleware.lwip.kinetis_ethernetif.MIMXRT1176"/>
            <component_dependency value="middleware.lwip.empty_ethernetif.MIMXRT1176"/>
            <component_dependency value="middleware.lwip.eoe_ethernetif.MIMXRT1176"/>
            <component_dependency value="middleware.wifi.MIMXRT1176"/>
          </any_of>
          <component_dependency value="middleware.lwip.template.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="BUILDING" hidden="true"/>
        <files mask="CHANGELOG" hidden="true"/>
        <files mask="ChangeLogKSDK.txt" hidden="true"/>
        <files mask="COPYING" hidden="true"/>
        <files mask="FEATURES" hidden="true"/>
        <files mask="README" hidden="true"/>
        <files mask="UPGRADING" hidden="true"/>
      </source>
      <source exclude="true" relative_path="./" type="other">
        <files mask="CMakeLists_upstream.txt" hidden="true"/>
        <files mask="codespell_changed_files.sh" hidden="true"/>
        <files mask="codespell_check.sh" hidden="true"/>
        <files mask="FILES" hidden="true"/>
      </source>
      <source exclude="true" relative_path="port" type="doc">
        <files mask="README.md" hidden="true"/>
      </source>
      <source exclude="true" relative_path="doc" type="doc">
        <files mask="FILES" hidden="true"/>
        <files mask="NO_SYS_SampleCode.c" hidden="true"/>
        <files mask="ZeroCopyRx.c" hidden="true"/>
        <files mask="contrib.txt" hidden="true"/>
        <files mask="mdns.txt" hidden="true"/>
        <files mask="mqtt_client.txt" hidden="true"/>
        <files mask="ppp.txt" hidden="true"/>
        <files mask="savannah.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="doc/doxygen" type="doc">
        <files mask="generate.bat" hidden="true"/>
        <files mask="generate.sh" hidden="true"/>
        <files mask="lwip.Doxyfile" hidden="true"/>
        <files mask="lwip.Doxyfile.cmake.in" hidden="true"/>
        <files mask="main_page.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="doc/doxygen/output" type="doc">
        <files mask="index.html" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src" type="other">
        <files mask="FILES" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/netif" type="other">
        <files mask="FILES" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/netif/ppp" type="doc">
        <files mask="PPPD_FOLLOWUP" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/netif/ppp/polarssl" type="src_c">
        <files mask="arc4.c" hidden="true"/>
        <files mask="des.c" hidden="true"/>
        <files mask="md4.c" hidden="true"/>
        <files mask="md5.c" hidden="true"/>
        <files mask="sha1.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/netif/ppp/polarssl" type="doc">
        <files mask="README" hidden="true"/>
      </source>
      <source relative_path="port/arch" type="c_include">
        <files mask="cc.h"/>
        <files mask="perf.h"/>
      </source>
      <source relative_path="src/api" type="src">
        <files mask="api_lib.c"/>
        <files mask="api_msg.c"/>
        <files mask="err.c"/>
        <files mask="if_api.c"/>
        <files mask="netbuf.c"/>
        <files mask="netdb.c"/>
        <files mask="netifapi.c"/>
        <files mask="sockets.c"/>
        <files mask="tcpip.c"/>
      </source>
      <source relative_path="src/core" type="src">
        <files mask="altcp.c"/>
        <files mask="altcp_alloc.c"/>
        <files mask="altcp_tcp.c"/>
        <files mask="def.c"/>
        <files mask="dns.c"/>
        <files mask="inet_chksum.c"/>
        <files mask="init.c"/>
        <files mask="ip.c"/>
        <files mask="mem.c"/>
        <files mask="memp.c"/>
        <files mask="netif.c"/>
        <files mask="pbuf.c"/>
        <files mask="raw.c"/>
        <files mask="stats.c"/>
        <files mask="sys.c"/>
        <files mask="tcp.c"/>
        <files mask="tcp_in.c"/>
        <files mask="tcp_out.c"/>
        <files mask="timeouts.c"/>
        <files mask="udp.c"/>
      </source>
      <source relative_path="src/core/ipv4" type="src">
        <files mask="acd.c"/>
        <files mask="autoip.c"/>
        <files mask="dhcp.c"/>
        <files mask="etharp.c"/>
        <files mask="icmp.c"/>
        <files mask="igmp.c"/>
        <files mask="ip4.c"/>
        <files mask="ip4_addr.c"/>
        <files mask="ip4_frag.c"/>
      </source>
      <source relative_path="src/core/ipv6" type="src">
        <files mask="dhcp6.c"/>
        <files mask="ethip6.c"/>
        <files mask="icmp6.c"/>
        <files mask="inet6.c"/>
        <files mask="ip6.c"/>
        <files mask="ip6_addr.c"/>
        <files mask="ip6_frag.c"/>
        <files mask="mld6.c"/>
        <files mask="nd6.c"/>
      </source>
      <source relative_path="src/include/compat/posix" type="c_include">
        <files mask="netdb.h"/>
      </source>
      <source relative_path="src/include/compat/posix/arpa" type="c_include">
        <files mask="inet.h"/>
      </source>
      <source relative_path="src/include/compat/posix/net" type="c_include">
        <files mask="if.h"/>
      </source>
      <source relative_path="src/include/compat/posix/sys" type="c_include">
        <files mask="socket.h"/>
      </source>
      <source relative_path="src/include/compat/stdc" type="c_include">
        <files mask="errno.h"/>
      </source>
      <source relative_path="src/include/lwip" type="c_include">
        <files mask="acd.h"/>
        <files mask="altcp.h"/>
        <files mask="altcp_tcp.h"/>
        <files mask="altcp_tls.h"/>
        <files mask="api.h"/>
        <files mask="arch.h"/>
        <files mask="autoip.h"/>
        <files mask="debug.h"/>
        <files mask="def.h"/>
        <files mask="dhcp.h"/>
        <files mask="dhcp6.h"/>
        <files mask="dns.h"/>
        <files mask="err.h"/>
        <files mask="errno.h"/>
        <files mask="etharp.h"/>
        <files mask="ethip6.h"/>
        <files mask="icmp.h"/>
        <files mask="icmp6.h"/>
        <files mask="if_api.h"/>
        <files mask="igmp.h"/>
        <files mask="inet.h"/>
        <files mask="inet_chksum.h"/>
        <files mask="init.h"/>
        <files mask="ip.h"/>
        <files mask="ip4.h"/>
        <files mask="ip4_addr.h"/>
        <files mask="ip4_frag.h"/>
        <files mask="ip6.h"/>
        <files mask="ip6_addr.h"/>
        <files mask="ip6_frag.h"/>
        <files mask="ip6_zone.h"/>
        <files mask="ip_addr.h"/>
        <files mask="mem.h"/>
        <files mask="memp.h"/>
        <files mask="mld6.h"/>
        <files mask="nd6.h"/>
        <files mask="netbuf.h"/>
        <files mask="netdb.h"/>
        <files mask="netif.h"/>
        <files mask="netifapi.h"/>
        <files mask="opt.h"/>
        <files mask="pbuf.h"/>
        <files mask="raw.h"/>
        <files mask="sio.h"/>
        <files mask="snmp.h"/>
        <files mask="sockets.h"/>
        <files mask="stats.h"/>
        <files mask="sys.h"/>
        <files mask="tcp.h"/>
        <files mask="tcpbase.h"/>
        <files mask="tcpip.h"/>
        <files mask="timeouts.h"/>
        <files mask="udp.h"/>
      </source>
      <source relative_path="src/include/lwip/priv" type="c_include">
        <files mask="altcp_priv.h"/>
        <files mask="api_msg.h"/>
        <files mask="memp_priv.h"/>
        <files mask="memp_std.h"/>
        <files mask="mem_priv.h"/>
        <files mask="nd6_priv.h"/>
        <files mask="raw_priv.h"/>
        <files mask="sockets_priv.h"/>
        <files mask="tcpip_priv.h"/>
        <files mask="tcp_priv.h"/>
      </source>
      <source relative_path="src/include/lwip/prot" type="c_include">
        <files mask="acd.h"/>
        <files mask="autoip.h"/>
        <files mask="dhcp.h"/>
        <files mask="dhcp6.h"/>
        <files mask="dns.h"/>
        <files mask="etharp.h"/>
        <files mask="ethernet.h"/>
        <files mask="iana.h"/>
        <files mask="icmp.h"/>
        <files mask="icmp6.h"/>
        <files mask="ieee.h"/>
        <files mask="igmp.h"/>
        <files mask="ip.h"/>
        <files mask="ip4.h"/>
        <files mask="ip6.h"/>
        <files mask="mld6.h"/>
        <files mask="nd6.h"/>
        <files mask="tcp.h"/>
        <files mask="udp.h"/>
      </source>
      <source relative_path="src/include/netif" type="c_include">
        <files mask="bridgeif.h"/>
        <files mask="bridgeif_opts.h"/>
        <files mask="etharp.h"/>
        <files mask="ethernet.h"/>
        <files mask="ieee802154.h"/>
        <files mask="lowpan6.h"/>
        <files mask="lowpan6_ble.h"/>
        <files mask="lowpan6_common.h"/>
        <files mask="lowpan6_opts.h"/>
        <files mask="slipif.h"/>
        <files mask="zepif.h"/>
      </source>
      <source relative_path="src/include/netif/ppp" type="c_include">
        <files mask="ccp.h"/>
        <files mask="chap-md5.h"/>
        <files mask="chap-new.h"/>
        <files mask="chap_ms.h"/>
        <files mask="eap.h"/>
        <files mask="ecp.h"/>
        <files mask="eui64.h"/>
        <files mask="fsm.h"/>
        <files mask="ipcp.h"/>
        <files mask="ipv6cp.h"/>
        <files mask="lcp.h"/>
        <files mask="magic.h"/>
        <files mask="mppe.h"/>
        <files mask="ppp.h"/>
        <files mask="pppapi.h"/>
        <files mask="pppcrypt.h"/>
        <files mask="pppdebug.h"/>
        <files mask="pppoe.h"/>
        <files mask="pppol2tp.h"/>
        <files mask="pppos.h"/>
        <files mask="ppp_impl.h"/>
        <files mask="ppp_opts.h"/>
        <files mask="upap.h"/>
        <files mask="vj.h"/>
      </source>
      <source relative_path="src/include/netif/ppp/polarssl" type="c_include">
        <files mask="arc4.h"/>
        <files mask="des.h"/>
        <files mask="md4.h"/>
        <files mask="md5.h"/>
        <files mask="sha1.h"/>
      </source>
      <source relative_path="src/netif" type="src">
        <files mask="bridgeif.c"/>
        <files mask="bridgeif_fdb.c"/>
        <files mask="ethernet.c"/>
        <files mask="lowpan6.c"/>
        <files mask="lowpan6_ble.c"/>
        <files mask="lowpan6_common.c"/>
        <files mask="slipif.c"/>
        <files mask="zepif.c"/>
      </source>
      <source relative_path="src/netif/ppp" type="src">
        <files mask="auth.c"/>
        <files mask="ccp.c"/>
        <files mask="chap-md5.c"/>
        <files mask="chap-new.c"/>
        <files mask="chap_ms.c"/>
        <files mask="demand.c"/>
        <files mask="eap.c"/>
        <files mask="ecp.c"/>
        <files mask="eui64.c"/>
        <files mask="fsm.c"/>
        <files mask="ipcp.c"/>
        <files mask="ipv6cp.c"/>
        <files mask="lcp.c"/>
        <files mask="magic.c"/>
        <files mask="mppe.c"/>
        <files mask="multilink.c"/>
        <files mask="ppp.c"/>
        <files mask="pppapi.c"/>
        <files mask="pppcrypt.c"/>
        <files mask="pppoe.c"/>
        <files mask="pppol2tp.c"/>
        <files mask="pppos.c"/>
        <files mask="upap.c"/>
        <files mask="utils.c"/>
        <files mask="vj.c"/>
      </source>
      <source relative_path="src/netif/ppp/polarssl" type="src_c">
        <files mask="arc4.c"/>
        <files mask="des.c"/>
        <files mask="md4.c"/>
        <files mask="md5.c"/>
        <files mask="sha1.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="src" type="c_include"/>
        <include_path relative_path="src/include" type="c_include"/>
        <include_path relative_path="src/include/lwip" type="c_include"/>
        <include_path relative_path="port" type="asm_include"/>
        <include_path relative_path="src" type="asm_include"/>
        <include_path relative_path="src/include" type="asm_include"/>
        <include_path relative_path="src/include/lwip" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.httpd.MIMXRT1176" name="lwIP_HTTPD" brief="lwIP HTTP Daemon" version="2.2.1" revision="2" full_name="lwIP HTTP Daemon" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1176"/>
          <component_dependency value="middleware.lwip.apps.httpd.support.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="src/apps/http" type="src">
        <files mask="httpd.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_httpd.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.lwip.apps.httpd.support.MIMXRT1176" name="lwIP_HTTPD_support" brief="lwIP HTTP Daemon Implementation Support Files" version="2.2.1" revision="2" full_name="lwIP HTTP Daemon Implementation Support Files" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source exclude="true" relative_path="src/apps/http" type="other">
        <files mask="fsdata.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/http/fs" type="other">
        <files mask="404.html" hidden="true"/>
        <files mask="index.html" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/http/fs/img" type="other">
        <files mask="sics.gif" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/http/makefsdata" type="other">
        <files mask="makefsdata" hidden="true"/>
        <files mask="makefsdata.c" hidden="true"/>
        <files mask="readme.txt" hidden="true"/>
        <files mask="tinydir.h" hidden="true"/>
      </source>
      <source relative_path="src/apps/http" type="src">
        <files mask="fs.c"/>
      </source>
      <source relative_path="src/apps/http" type="c_include">
        <files mask="fsdata.h"/>
        <files mask="httpd_structs.h"/>
      </source>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="fs.h"/>
        <files mask="httpd.h"/>
        <files mask="httpd_opts.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_httpd_support.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/apps/http" type="c_include"/>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
        <include_path relative_path="src/apps/http" type="asm_include"/>
        <include_path relative_path="src/include/lwip/apps" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.httpsrv.MIMXRT1176" name="lwIP_HTTP_srv" brief="lwIP HTTP Server Implementation" version="2.2.1" revision="2" full_name="lwIP HTTP Server" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1176"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source exclude="true" relative_path="src/apps/httpsrv/mkfs" type="other">
        <files mask="mkfs.pl" hidden="true"/>
      </source>
      <source relative_path="src/apps/httpsrv" type="src">
        <files mask="httpsrv.c"/>
        <files mask="httpsrv_base64.c"/>
        <files mask="httpsrv_fs.c"/>
        <files mask="httpsrv_script.c"/>
        <files mask="httpsrv_sha1.c"/>
        <files mask="httpsrv_supp.c"/>
        <files mask="httpsrv_task.c"/>
        <files mask="httpsrv_tls.c"/>
        <files mask="httpsrv_utf8.c"/>
        <files mask="httpsrv_ws.c"/>
        <files mask="httpsrv_ws_api.c"/>
      </source>
      <source relative_path="src/apps/httpsrv" type="c_include">
        <files mask="httpsrv.h"/>
        <files mask="httpsrv_base64.h"/>
        <files mask="httpsrv_config.h"/>
        <files mask="httpsrv_fs.h"/>
        <files mask="httpsrv_port.h"/>
        <files mask="httpsrv_prv.h"/>
        <files mask="httpsrv_script.h"/>
        <files mask="httpsrv_sha1.h"/>
        <files mask="httpsrv_supp.h"/>
        <files mask="httpsrv_tls.h"/>
        <files mask="httpsrv_utf8.h"/>
        <files mask="httpsrv_ws.h"/>
        <files mask="httpsrv_ws_prv.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_httpsrv.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/apps/httpsrv" type="c_include"/>
        <include_path relative_path="src/apps/httpsrv" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.httpssrv.MIMXRT1176" name="lwIP_HTTPS_srv" brief="lwIP HTTPS Server Implementation" version="2.2.1" revision="2" full_name="lwIP HTTPS Server" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <defines>
        <define name="MBEDTLS_THREADING_C" value=""/>
        <define name="MBEDTLS_THREADING_ALT" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.apps.httpsrv.MIMXRT1176"/>
          <component_dependency value="middleware.mbedtls.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_httpssrv.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.lwip.apps.lwiperf.MIMXRT1176" name="lwIP_IPERF" brief="lwIP IPERF Implementation" version="2.2.1" revision="2" full_name="lwIP IPERF" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <defines>
        <define name="SO_REUSE" value="1"/>
        <define name="PRINTF_FLOAT_ENABLE" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="src/apps/lwiperf" type="src">
        <files mask="lwiperf.c"/>
      </source>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="lwiperf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_lwiperf.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
        <include_path relative_path="src/include/lwip/apps" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.mdns.MIMXRT1176" name="lwIP_MDNS" brief="lwIP mDNS Implementation" version="2.2.1" revision="2" full_name="lwIP mDNS" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="src/apps/mdns" type="src">
        <files mask="mdns_domain.c"/>
        <files mask="mdns_out.c"/>
        <files mask="mdns.c"/>
      </source>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="mdns.h"/>
        <files mask="mdns_domain.h"/>
        <files mask="mdns_priv.h"/>
        <files mask="mdns_opts.h"/>
        <files mask="mdns_out.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_mdns.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
        <include_path relative_path="src/include/lwip/apps" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.mqtt.MIMXRT1176" name="lwIP_MQTT" brief="lwIP MQTT Client" version="2.2.1" revision="2" full_name="lwIP MQTT Client" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="src/apps/mqtt" type="src">
        <files mask="mqtt.c"/>
      </source>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="mqtt.h"/>
        <files mask="mqtt_opts.h"/>
        <files mask="mqtt_priv.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_mqtt.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
        <include_path relative_path="src/include/lwip/apps" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.sntp.MIMXRT1176" name="lwIP_SNTP" brief="lwIP SNTP" version="2.2.1" revision="2" full_name="lwIP SNTP" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="sntp.h"/>
        <files mask="sntp_opts.h"/>
      </source>
      <source relative_path="src/apps/sntp" type="src">
        <files mask="sntp.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_sntp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
        <include_path relative_path="src/include/lwip/apps" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.ping.MIMXRT1176" name="lwIP_ping" brief="lwIP Ping Sender contrib" version="2.2.1" revision="2" full_name="lwIP Ping Sender" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="contrib/apps/ping" type="src">
        <files mask="ping.c"/>
      </source>
      <source relative_path="contrib/apps/ping" type="c_include">
        <files mask="ping.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_contrib_ping.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/ping" type="c_include"/>
        <include_path relative_path="contrib/apps/ping" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.tcpecho.MIMXRT1176" name="lwIP_tcpecho" brief="lwIP TCP Echo contrib" version="2.2.1" revision="2" full_name="lwIP TCP Echo" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="contrib/apps/tcpecho" type="src">
        <files mask="tcpecho.c"/>
      </source>
      <source relative_path="contrib/apps/tcpecho" type="c_include">
        <files mask="tcpecho.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_contrib_tcpecho.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/tcpecho" type="c_include"/>
        <include_path relative_path="contrib/apps/tcpecho" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.tcpecho_raw.MIMXRT1176" name="lwIP_tcpecho_raw" brief="lwIP TCP Echo Raw API contrib" version="2.2.1" revision="2" full_name="lwIP TCP Echo Raw API" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="contrib/apps/tcpecho_raw" type="src">
        <files mask="tcpecho_raw.c"/>
      </source>
      <source relative_path="contrib/apps/tcpecho_raw" type="c_include">
        <files mask="tcpecho_raw.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_contrib_tcpecho_raw.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/tcpecho_raw" type="c_include"/>
        <include_path relative_path="contrib/apps/tcpecho_raw" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.udpecho.MIMXRT1176" name="lwIP_udpecho" brief="lwIP UDP Echo contrib" version="2.2.1" revision="2" full_name="lwIP UDP Echo" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="contrib/apps/udpecho" type="src">
        <files mask="udpecho.c"/>
      </source>
      <source relative_path="contrib/apps/udpecho" type="c_include">
        <files mask="udpecho.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_contrib_udpecho.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/udpecho" type="c_include"/>
        <include_path relative_path="contrib/apps/udpecho" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.udpecho_raw.MIMXRT1176" name="lwIP_udpecho_raw" brief="lwIP UDP Echo Raw API contrib" version="2.2.1" revision="2" full_name="lwIP UDP Echo Raw API" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="contrib/apps/udpecho_raw" type="src">
        <files mask="udpecho_raw.c"/>
      </source>
      <source relative_path="contrib/apps/udpecho_raw" type="c_include">
        <files mask="udpecho_raw.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_contrib_udpecho_raw.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/udpecho_raw" type="c_include"/>
        <include_path relative_path="contrib/apps/udpecho_raw" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.empty_ethernetif.MIMXRT1176" name="Empty ethernet interface" brief="Empty ethernet interface" version="2.2.1" revision="2" full_name="Empty ethernet interface" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="other">
        <files mask="README"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_empty_ethernetif.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.enet_ethernetif.MIMXRT1176" name="Enet ethernet interface" brief="Enet ethernet interface" version="2.2.1" revision="2" full_name="Enet ethernet interface" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <defines>
        <define name="LWIP_DISABLE_PBUF_POOL_SIZE_SANITY_CHECKS" value="1"/>
        <define name="LWIP_SUPPORT_CUSTOM_PBUF" value="1"/>
        <define name="CHECKSUM_GEN_UDP" value="1"/>
        <define name="CHECKSUM_GEN_TCP" value="1"/>
        <define name="CHECKSUM_GEN_ICMP" value="1"/>
        <define name="CHECKSUM_GEN_ICMP6" value="1"/>
        <define name="CHECKSUM_CHECK_IP" value="1"/>
        <define name="CHECKSUM_CHECK_UDP" value="1"/>
        <define name="CHECKSUM_CHECK_TCP" value="1"/>
        <define name="CHECKSUM_CHECK_ICMP" value="1"/>
        <define name="CHECKSUM_CHECK_ICMP6" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1176"/>
          <component_dependency value="middleware.lwip.template.MIMXRT1176"/>
          <component_dependency value="middleware.lwip.sys_arch.dynamic.MIMXRT1176"/>
          <component_dependency value="component.eth_phy_common.MIMXRT1176"/>
          <component_dependency value="component.igpio_adapter.MIMXRT1176"/>
          <component_dependency value="platform.drivers.enet_qos.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="port" type="src">
        <files mask="enet_ethernetif.c"/>
        <files mask="ethernetif.c"/>
        <files mask="ethernetif_mmac.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="ethernetif.h"/>
        <files mask="ethernetif_mmac.h"/>
        <files mask="ethernetif_priv.h"/>
        <files mask="enet_configchecks.h"/>
      </source>
      <source condition="platform.drivers.enet_qos.MIMXRT1176" relative_path="port" type="src">
        <files mask="enet_ethernetif_qos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_enet_ethernetif.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.eoe_ethernetif.MIMXRT1176" name="EtherCAT EOE ethernet interface" brief="EtherCAT EOE ethernet interface" version="2.2.1" revision="2" full_name="EtherCAT EOE ethernet interface" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <defines>
        <define name="CHECKSUM_GEN_IP" value="1"/>
        <define name="CHECKSUM_GEN_UDP" value="1"/>
        <define name="CHECKSUM_GEN_TCP" value="1"/>
        <define name="CHECKSUM_GEN_ICMP" value="1"/>
        <define name="CHECKSUM_CHECK_ICMP" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1176"/>
          <component_dependency value="middleware.lwip.template.MIMXRT1176"/>
          <component_dependency value="middleware.lwip.sys_arch.dynamic.MIMXRT1176"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="port" type="src">
        <files mask="eoe_ethernetif.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="eoe_ethernetif.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_eoe_ethernetif.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.kinetis_ethernetif.MIMXRT1176" name="Kinetis enet ethernet interface" brief="Kinetis ethernet interface" version="2.2.1" revision="2" full_name="Kinetis ethernet interface" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <defines>
        <define name="LWIP_DISABLE_PBUF_POOL_SIZE_SANITY_CHECKS" value="1"/>
        <define name="LWIP_SUPPORT_CUSTOM_PBUF" value="1"/>
        <define name="CHECKSUM_GEN_UDP" value="1"/>
        <define name="CHECKSUM_GEN_TCP" value="1"/>
        <define name="CHECKSUM_GEN_ICMP" value="1"/>
        <define name="CHECKSUM_GEN_ICMP6" value="1"/>
        <define name="CHECKSUM_CHECK_UDP" value="1"/>
        <define name="CHECKSUM_CHECK_TCP" value="1"/>
        <define name="CHECKSUM_CHECK_ICMP" value="1"/>
        <define name="CHECKSUM_CHECK_ICMP6" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1176"/>
          <component_dependency value="platform.drivers.enet.MIMXRT1176"/>
          <component_dependency value="middleware.lwip.sys_arch.dynamic.MIMXRT1176"/>
          <component_dependency value="component.eth_phy_common.MIMXRT1176"/>
          <component_dependency value="component.igpio_adapter.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="port" type="src">
        <files mask="enet_ethernetif.c"/>
        <files mask="ethernetif.c"/>
        <files mask="ethernetif_mmac.c"/>
        <files mask="enet_ethernetif_kinetis.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="ethernetif.h"/>
        <files mask="ethernetif_mmac.h"/>
        <files mask="ethernetif_priv.h"/>
        <files mask="kinetis_configchecks.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_kinetis_ethernetif.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.sys_arch.dynamic.MIMXRT1176" name="Sys Arch Dynamic interface" brief="lwIP System Abstraction Layer using either FreeRTOS dynamic memory allocation APIs or bare-metal" version="2.2.1" revision="2" full_name="Sys Arch Dynamic interface" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="port/sys_arch/dynamic/arch" type="c_include">
        <files mask="sys_arch.h"/>
      </source>
      <source relative_path="port/sys_arch/dynamic" type="src">
        <files mask="sys_arch.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_sys_arch_dynamic.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/sys_arch/dynamic" type="c_include"/>
        <include_path relative_path="port/sys_arch/dynamic" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.sys_arch.static.MIMXRT1176" name="Sys Arch Static interface" brief="Experimental lwIP System Abstraction Layer using FreeRTOS static memory allocation APIs - it is not supported and not guaranteed to work, also might be removed in future" version="2.2.1" revision="2" full_name="Sys Arch Static interface - experimental" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1176"/>
          <component_dependency value="middleware.wifi.MIMXRT1176"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="port/sys_arch/static/arch" type="c_include">
        <files mask="sys_arch.h"/>
      </source>
      <source relative_path="port/sys_arch/static" type="src">
        <files mask="sys_arch.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_sys_arch_static.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/sys_arch/static" type="c_include"/>
        <include_path relative_path="port/sys_arch/static" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.template.MIMXRT1176" name="lwIP_template" brief="lwIP Template" version="2.2.1" revision="2" full_name="lwIP Template Application" category="Network/lwIP TCPIP Networking Stack" user_visible="false" type="project_template" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="template" config="true" type="c_include">
        <files mask="lwipopts.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.usb_ethernetif.MIMXRT1176" name="lwIP_usb_ethernetif" brief="USB network layer" version="2.2.1" revision="2" full_name="lwIP Adaptation for USB Network Layer" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.usb.host_cdc_ecm.MIMXRT1176"/>
            <component_dependency value="middleware.usb.host_cdc_rndis.MIMXRT1176"/>
          </any_of>
          <component_dependency value="middleware.lwip.MIMXRT1176"/>
          <component_dependency value="middleware.lwip.sys_arch.dynamic.MIMXRT1176"/>
          <component_dependency value="middleware.usb.host_cdc.MIMXRT1176"/>
          <component_dependency value="middleware.usb.host_controller_ehci.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="port" type="c_include">
        <files mask="usb_ethernetif.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_usb_ethernetif.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.usb_ethernetif.bm.MIMXRT1176" name="lwip usb_ethernetif bm" brief="Baremetal port layer for USB ethernet" version="2.2.1" revision="2" full_name="lwip usb_ethernetif bm" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <not>
            <component_dependency value="middleware.freertos-kernel.MIMXRT1176"/>
          </not>
          <component_dependency value="middleware.lwip.MIMXRT1176"/>
          <component_dependency value="middleware.lwip.usb_ethernetif.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="port" type="src">
        <files mask="usb_ethernetif_bm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_usb_ethernetif_bm.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.lwip.usb_ethernetif.freertos.MIMXRT1176" name="lwip usb_ethernetif freertos" brief="FreeRTOS port layer for USB ethernet" version="2.2.1" revision="2" full_name="lwip usb_ethernetif freertos" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1176"/>
          <component_dependency value="middleware.lwip.usb_ethernetif.MIMXRT1176"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="port" type="src">
        <files mask="usb_ethernetif_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_usb_ethernetif_freertos.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.lvgl.MIMXRT1176" name="lvgl" brief="lvgl library" version="9.2.1" full_name="Middleware lvgl" category="Graphics/lvgl graphics library" user_visible="true" type="middleware" package_base_path="middleware/lvgl" project_base_path="lvgl">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.template.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="LICENCE.txt" hidden="true"/>
      </source>
      <source relative_path="src" type="src">
        <files mask="lv_init.c"/>
      </source>
      <source relative_path="src/core" type="src">
        <files mask="lv_group.c"/>
        <files mask="lv_obj.c"/>
        <files mask="lv_obj_class.c"/>
        <files mask="lv_obj_draw.c"/>
        <files mask="lv_obj_event.c"/>
        <files mask="lv_obj_id_builtin.c"/>
        <files mask="lv_obj_pos.c"/>
        <files mask="lv_obj_property.c"/>
        <files mask="lv_obj_scroll.c"/>
        <files mask="lv_obj_style.c"/>
        <files mask="lv_obj_style_gen.c"/>
        <files mask="lv_obj_tree.c"/>
        <files mask="lv_refr.c"/>
      </source>
      <source relative_path="src/display" type="src">
        <files mask="lv_display.c"/>
      </source>
      <source relative_path="src/draw" type="src">
        <files mask="lv_draw.c"/>
        <files mask="lv_draw_arc.c"/>
        <files mask="lv_draw_buf.c"/>
        <files mask="lv_draw_image.c"/>
        <files mask="lv_draw_label.c"/>
        <files mask="lv_draw_line.c"/>
        <files mask="lv_draw_mask.c"/>
        <files mask="lv_draw_rect.c"/>
        <files mask="lv_draw_triangle.c"/>
        <files mask="lv_draw_vector.c"/>
        <files mask="lv_image_decoder.c"/>
      </source>
      <source relative_path="src/draw/nxp/pxp" type="src">
        <files mask="lv_draw_buf_pxp.c"/>
        <files mask="lv_draw_pxp.c"/>
        <files mask="lv_draw_pxp_fill.c"/>
        <files mask="lv_draw_pxp_img.c"/>
        <files mask="lv_draw_pxp_layer.c"/>
        <files mask="lv_pxp_cfg.c"/>
        <files mask="lv_pxp_osa.c"/>
        <files mask="lv_pxp_utils.c"/>
      </source>
      <source relative_path="src/draw/nxp/vglite" type="src">
        <files mask="lv_draw_buf_vglite.c"/>
        <files mask="lv_draw_vglite.c"/>
        <files mask="lv_draw_vglite_arc.c"/>
        <files mask="lv_draw_vglite_border.c"/>
        <files mask="lv_draw_vglite_fill.c"/>
        <files mask="lv_draw_vglite_img.c"/>
        <files mask="lv_draw_vglite_label.c"/>
        <files mask="lv_draw_vglite_layer.c"/>
        <files mask="lv_draw_vglite_line.c"/>
        <files mask="lv_draw_vglite_triangle.c"/>
        <files mask="lv_vglite_buf.c"/>
        <files mask="lv_vglite_matrix.c"/>
        <files mask="lv_vglite_path.c"/>
        <files mask="lv_vglite_utils.c"/>
      </source>
      <source relative_path="src/draw/sdl" type="src">
        <files mask="lv_draw_sdl.c"/>
      </source>
      <source relative_path="src/draw/sw/blend" type="src">
        <files mask="lv_draw_sw_blend.c"/>
        <files mask="lv_draw_sw_blend_to_al88.c"/>
        <files mask="lv_draw_sw_blend_to_argb8888.c"/>
        <files mask="lv_draw_sw_blend_to_i1.c"/>
        <files mask="lv_draw_sw_blend_to_l8.c"/>
        <files mask="lv_draw_sw_blend_to_rgb565.c"/>
        <files mask="lv_draw_sw_blend_to_rgb888.c"/>
      </source>
      <source relative_path="src/draw/sw" type="src">
        <files mask="lv_draw_sw.c"/>
        <files mask="lv_draw_sw_arc.c"/>
        <files mask="lv_draw_sw_border.c"/>
        <files mask="lv_draw_sw_box_shadow.c"/>
        <files mask="lv_draw_sw_fill.c"/>
        <files mask="lv_draw_sw_gradient.c"/>
        <files mask="lv_draw_sw_img.c"/>
        <files mask="lv_draw_sw_letter.c"/>
        <files mask="lv_draw_sw_line.c"/>
        <files mask="lv_draw_sw_mask.c"/>
        <files mask="lv_draw_sw_mask_rect.c"/>
        <files mask="lv_draw_sw_transform.c"/>
        <files mask="lv_draw_sw_triangle.c"/>
        <files mask="lv_draw_sw_vector.c"/>
      </source>
      <source relative_path="src/drivers/display/drm" type="src">
        <files mask="lv_linux_drm.c"/>
      </source>
      <source relative_path="src/drivers/display/fb" type="src">
        <files mask="lv_linux_fbdev.c"/>
      </source>
      <source relative_path="src/drivers/display/ili9341" type="src">
        <files mask="lv_ili9341.c"/>
      </source>
      <source relative_path="src/drivers/display/lcd" type="src">
        <files mask="lv_lcd_generic_mipi.c"/>
      </source>
      <source relative_path="src/drivers/display/st7735" type="src">
        <files mask="lv_st7735.c"/>
      </source>
      <source relative_path="src/drivers/display/st7789" type="src">
        <files mask="lv_st7789.c"/>
      </source>
      <source relative_path="src/drivers/display/st7796" type="src">
        <files mask="lv_st7796.c"/>
      </source>
      <source relative_path="src/drivers/evdev" type="src">
        <files mask="lv_evdev.c"/>
      </source>
      <source relative_path="src/drivers/libinput" type="src">
        <files mask="lv_libinput.c"/>
        <files mask="lv_xkb.c"/>
      </source>
      <source relative_path="src/drivers/nuttx" type="src">
        <files mask="lv_nuttx_cache.c"/>
        <files mask="lv_nuttx_entry.c"/>
        <files mask="lv_nuttx_fbdev.c"/>
        <files mask="lv_nuttx_image_cache.c"/>
        <files mask="lv_nuttx_lcd.c"/>
        <files mask="lv_nuttx_libuv.c"/>
        <files mask="lv_nuttx_profiler.c"/>
        <files mask="lv_nuttx_touchscreen.c"/>
      </source>
      <source relative_path="src/drivers/sdl" type="src">
        <files mask="lv_sdl_keyboard.c"/>
        <files mask="lv_sdl_mouse.c"/>
        <files mask="lv_sdl_mousewheel.c"/>
        <files mask="lv_sdl_window.c"/>
      </source>
      <source relative_path="src/drivers/windows" type="src">
        <files mask="lv_windows_context.c"/>
        <files mask="lv_windows_display.c"/>
        <files mask="lv_windows_input.c"/>
      </source>
      <source relative_path="src/drivers/x11" type="src">
        <files mask="lv_x11_display.c"/>
        <files mask="lv_x11_input.c"/>
      </source>
      <source relative_path="src/drivers/glfw" type="src">
        <files mask="lv_glfw_window.c"/>
        <files mask="lv_opengles_debug.c"/>
        <files mask="lv_opengles_driver.c"/>
        <files mask="lv_opengles_texture.c"/>
      </source>
      <source relative_path="src/drivers/qnx" type="src">
        <files mask="lv_qnx.c"/>
      </source>
      <source relative_path="src/drivers/wayland" type="src">
        <files mask="lv_wayland.c"/>
        <files mask="lv_wayland_smm.c"/>
      </source>
      <source relative_path="src/font" type="src">
        <files mask="lv_binfont_loader.c"/>
        <files mask="lv_font.c"/>
        <files mask="lv_font_dejavu_16_persian_hebrew.c"/>
        <files mask="lv_font_fmt_txt.c"/>
        <files mask="lv_font_montserrat_10.c"/>
        <files mask="lv_font_montserrat_12.c"/>
        <files mask="lv_font_montserrat_14.c"/>
        <files mask="lv_font_montserrat_16.c"/>
        <files mask="lv_font_montserrat_18.c"/>
        <files mask="lv_font_montserrat_20.c"/>
        <files mask="lv_font_montserrat_22.c"/>
        <files mask="lv_font_montserrat_24.c"/>
        <files mask="lv_font_montserrat_26.c"/>
        <files mask="lv_font_montserrat_28.c"/>
        <files mask="lv_font_montserrat_28_compressed.c"/>
        <files mask="lv_font_montserrat_30.c"/>
        <files mask="lv_font_montserrat_32.c"/>
        <files mask="lv_font_montserrat_34.c"/>
        <files mask="lv_font_montserrat_36.c"/>
        <files mask="lv_font_montserrat_38.c"/>
        <files mask="lv_font_montserrat_40.c"/>
        <files mask="lv_font_montserrat_42.c"/>
        <files mask="lv_font_montserrat_44.c"/>
        <files mask="lv_font_montserrat_46.c"/>
        <files mask="lv_font_montserrat_48.c"/>
        <files mask="lv_font_montserrat_8.c"/>
        <files mask="lv_font_simsun_14_cjk.c"/>
        <files mask="lv_font_simsun_16_cjk.c"/>
        <files mask="lv_font_unscii_16.c"/>
        <files mask="lv_font_unscii_8.c"/>
      </source>
      <source relative_path="src/indev" type="src">
        <files mask="lv_indev.c"/>
        <files mask="lv_indev_scroll.c"/>
      </source>
      <source relative_path="src/layouts/flex" type="src">
        <files mask="lv_flex.c"/>
      </source>
      <source relative_path="src/layouts/grid" type="src">
        <files mask="lv_grid.c"/>
      </source>
      <source relative_path="src/layouts" type="src">
        <files mask="lv_layout.c"/>
      </source>
      <source relative_path="src/libs/barcode" type="src">
        <files mask="code128.c"/>
        <files mask="lv_barcode.c"/>
      </source>
      <source relative_path="src/libs/bin_decoder" type="src">
        <files mask="lv_bin_decoder.c"/>
      </source>
      <source relative_path="src/libs/bmp" type="src">
        <files mask="lv_bmp.c"/>
      </source>
      <source relative_path="src/libs/ffmpeg" type="src">
        <files mask="lv_ffmpeg.c"/>
      </source>
      <source relative_path="src/libs/freetype" type="src">
        <files mask="lv_freetype.c"/>
        <files mask="lv_freetype_glyph.c"/>
        <files mask="lv_freetype_image.c"/>
        <files mask="lv_freetype_outline.c"/>
        <files mask="lv_ftsystem.c"/>
      </source>
      <source relative_path="src/libs/fsdrv" type="src">
        <files mask="lv_fs_cbfs.c"/>
        <files mask="lv_fs_fatfs.c"/>
        <files mask="lv_fs_littlefs.c"/>
        <files mask="lv_fs_memfs.c"/>
        <files mask="lv_fs_posix.c"/>
        <files mask="lv_fs_rawfs.c"/>
        <files mask="lv_fs_stdio.c"/>
        <files mask="lv_fs_win32.c"/>
      </source>
      <source relative_path="src/libs/gif" type="src">
        <files mask="gifdec.c"/>
        <files mask="lv_gif.c"/>
      </source>
      <source relative_path="src/libs/libjpeg_turbo" type="src">
        <files mask="lv_libjpeg_turbo.c"/>
      </source>
      <source relative_path="src/libs/libpng" type="src">
        <files mask="lv_libpng.c"/>
      </source>
      <source relative_path="src/libs/lodepng" type="src">
        <files mask="lodepng.c"/>
        <files mask="lv_lodepng.c"/>
      </source>
      <source relative_path="src/libs/lz4" type="src">
        <files mask="lz4.c"/>
      </source>
      <source relative_path="src/libs/qrcode" type="src">
        <files mask="lv_qrcode.c"/>
        <files mask="qrcodegen.c"/>
      </source>
      <source relative_path="src/libs/rle" type="src">
        <files mask="lv_rle.c"/>
      </source>
      <source relative_path="src/libs/rlottie" type="src">
        <files mask="lv_rlottie.c"/>
      </source>
      <source relative_path="src/libs/tiny_ttf" type="src">
        <files mask="lv_tiny_ttf.c"/>
      </source>
      <source relative_path="src/libs/tjpgd" type="src">
        <files mask="lv_tjpgd.c"/>
        <files mask="tjpgd.c"/>
      </source>
      <source relative_path="src/misc/cache" type="src">
        <files mask="lv_cache.c"/>
        <files mask="lv_cache_entry.c"/>
        <files mask="lv_cache_lru_rb.c"/>
        <files mask="lv_image_cache.c"/>
        <files mask="lv_image_header_cache.c"/>
      </source>
      <source relative_path="src/misc" type="src">
        <files mask="lv_anim.c"/>
        <files mask="lv_anim_timeline.c"/>
        <files mask="lv_area.c"/>
        <files mask="lv_array.c"/>
        <files mask="lv_async.c"/>
        <files mask="lv_bidi.c"/>
        <files mask="lv_color.c"/>
        <files mask="lv_color_op.c"/>
        <files mask="lv_event.c"/>
        <files mask="lv_fs.c"/>
        <files mask="lv_ll.c"/>
        <files mask="lv_log.c"/>
        <files mask="lv_lru.c"/>
        <files mask="lv_math.c"/>
        <files mask="lv_matrix.c"/>
        <files mask="lv_palette.c"/>
        <files mask="lv_profiler_builtin.c"/>
        <files mask="lv_rb.c"/>
        <files mask="lv_style.c"/>
        <files mask="lv_style_gen.c"/>
        <files mask="lv_templ.c"/>
        <files mask="lv_text.c"/>
        <files mask="lv_text_ap.c"/>
        <files mask="lv_timer.c"/>
        <files mask="lv_utils.c"/>
      </source>
      <source relative_path="src/osal" type="src">
        <files mask="lv_cmsis_rtos2.c"/>
        <files mask="lv_freertos.c"/>
        <files mask="lv_mqx.c"/>
        <files mask="lv_os.c"/>
        <files mask="lv_os_none.c"/>
        <files mask="lv_pthread.c"/>
        <files mask="lv_rtthread.c"/>
        <files mask="lv_windows.c"/>
      </source>
      <source relative_path="src/others/file_explorer" type="src">
        <files mask="lv_file_explorer.c"/>
      </source>
      <source relative_path="src/others/fragment" type="src">
        <files mask="lv_fragment.c"/>
        <files mask="lv_fragment_manager.c"/>
      </source>
      <source relative_path="src/others/gridnav" type="src">
        <files mask="lv_gridnav.c"/>
      </source>
      <source relative_path="src/others/ime" type="src">
        <files mask="lv_ime_pinyin.c"/>
      </source>
      <source relative_path="src/others/imgfont" type="src">
        <files mask="lv_imgfont.c"/>
      </source>
      <source relative_path="src/others/monkey" type="src">
        <files mask="lv_monkey.c"/>
      </source>
      <source relative_path="src/others/observer" type="src">
        <files mask="lv_observer.c"/>
      </source>
      <source relative_path="src/others/snapshot" type="src">
        <files mask="lv_snapshot.c"/>
      </source>
      <source relative_path="src/others/sysmon" type="src">
        <files mask="lv_sysmon.c"/>
      </source>
      <source relative_path="src/others/vg_lite_tvg" type="src">
        <files mask="vg_lite_matrix.c"/>
      </source>
      <source relative_path="src/stdlib/builtin" type="src">
        <files mask="lv_mem_core_builtin.c"/>
        <files mask="lv_sprintf_builtin.c"/>
        <files mask="lv_string_builtin.c"/>
        <files mask="lv_tlsf.c"/>
      </source>
      <source relative_path="src/stdlib/clib" type="src">
        <files mask="lv_mem_core_clib.c"/>
        <files mask="lv_sprintf_clib.c"/>
        <files mask="lv_string_clib.c"/>
      </source>
      <source relative_path="src/stdlib" type="src">
        <files mask="lv_mem.c"/>
      </source>
      <source relative_path="src/stdlib/micropython" type="src">
        <files mask="lv_mem_core_micropython.c"/>
      </source>
      <source relative_path="src/stdlib/rtthread" type="src">
        <files mask="lv_mem_core_rtthread.c"/>
        <files mask="lv_sprintf_rtthread.c"/>
        <files mask="lv_string_rtthread.c"/>
      </source>
      <source relative_path="src/themes/default" type="src">
        <files mask="lv_theme_default.c"/>
      </source>
      <source relative_path="src/themes" type="src">
        <files mask="lv_theme.c"/>
      </source>
      <source relative_path="src/themes/mono" type="src">
        <files mask="lv_theme_mono.c"/>
      </source>
      <source relative_path="src/themes/simple" type="src">
        <files mask="lv_theme_simple.c"/>
      </source>
      <source relative_path="src/tick" type="src">
        <files mask="lv_tick.c"/>
      </source>
      <source relative_path="src/widgets/animimage" type="src">
        <files mask="lv_animimage.c"/>
      </source>
      <source relative_path="src/widgets/arc" type="src">
        <files mask="lv_arc.c"/>
      </source>
      <source relative_path="src/widgets/bar" type="src">
        <files mask="lv_bar.c"/>
      </source>
      <source relative_path="src/widgets/button" type="src">
        <files mask="lv_button.c"/>
      </source>
      <source relative_path="src/widgets/buttonmatrix" type="src">
        <files mask="lv_buttonmatrix.c"/>
      </source>
      <source relative_path="src/widgets/calendar" type="src">
        <files mask="lv_calendar.c"/>
        <files mask="lv_calendar_chinese.c"/>
        <files mask="lv_calendar_header_arrow.c"/>
        <files mask="lv_calendar_header_dropdown.c"/>
      </source>
      <source relative_path="src/widgets/carousel" type="src">
        <files mask="lv_carousel.c"/>
      </source>
      <source relative_path="src/widgets/canvas" type="src">
        <files mask="lv_canvas.c"/>
      </source>
      <source relative_path="src/widgets/chart" type="src">
        <files mask="lv_chart.c"/>
      </source>
      <source relative_path="src/widgets/checkbox" type="src">
        <files mask="lv_checkbox.c"/>
      </source>
      <source relative_path="src/widgets/dropdown" type="src">
        <files mask="lv_dropdown.c"/>
      </source>
      <source relative_path="src/widgets/image" type="src">
        <files mask="lv_image.c"/>
      </source>
      <source relative_path="src/widgets/imagebutton" type="src">
        <files mask="lv_imagebutton.c"/>
      </source>
      <source relative_path="src/widgets/keyboard" type="src">
        <files mask="lv_keyboard.c"/>
      </source>
      <source relative_path="src/widgets/label" type="src">
        <files mask="lv_label.c"/>
      </source>
      <source relative_path="src/widgets/led" type="src">
        <files mask="lv_led.c"/>
      </source>
      <source relative_path="src/widgets/line" type="src">
        <files mask="lv_line.c"/>
      </source>
      <source relative_path="src/widgets/list" type="src">
        <files mask="lv_list.c"/>
      </source>
      <source relative_path="src/widgets/lottie" type="src">
        <files mask="lv_lottie.c"/>
      </source>
      <source relative_path="src/widgets/menu" type="src">
        <files mask="lv_menu.c"/>
      </source>
      <source relative_path="src/widgets/msgbox" type="src">
        <files mask="lv_msgbox.c"/>
      </source>
      <source relative_path="src/widgets/objx_templ" type="src">
        <files mask="lv_objx_templ.c"/>
      </source>
      <source relative_path="src/widgets/roller" type="src">
        <files mask="lv_roller.c"/>
      </source>
      <source relative_path="src/widgets/scale" type="src">
        <files mask="lv_scale.c"/>
      </source>
      <source relative_path="src/widgets/slider" type="src">
        <files mask="lv_slider.c"/>
      </source>
      <source relative_path="src/widgets/span" type="src">
        <files mask="lv_span.c"/>
      </source>
      <source relative_path="src/widgets/spinbox" type="src">
        <files mask="lv_spinbox.c"/>
      </source>
      <source relative_path="src/widgets/spinner" type="src">
        <files mask="lv_spinner.c"/>
      </source>
      <source relative_path="src/widgets/switch" type="src">
        <files mask="lv_switch.c"/>
      </source>
      <source relative_path="src/widgets/table" type="src">
        <files mask="lv_table.c"/>
      </source>
      <source relative_path="src/widgets/tabview" type="src">
        <files mask="lv_tabview.c"/>
      </source>
      <source relative_path="src/widgets/textarea" type="src">
        <files mask="lv_textarea.c"/>
      </source>
      <source relative_path="src/widgets/tileview" type="src">
        <files mask="lv_tileview.c"/>
      </source>
      <source relative_path="src/widgets/win" type="src">
        <files mask="lv_win.c"/>
      </source>
      <source relative_path="src" type="c_include">
        <files mask="lv_api_map_v8.h"/>
        <files mask="lv_api_map_v9_0.h"/>
        <files mask="lv_api_map_v9_1.h"/>
        <files mask="lv_conf_internal.h"/>
        <files mask="lv_conf_kconfig.h"/>
        <files mask="lv_init.h"/>
        <files mask="lvgl.h"/>
        <files mask="lvgl_private.h"/>
      </source>
      <source relative_path="src/core" type="c_include">
        <files mask="lv_global.h"/>
        <files mask="lv_group.h"/>
        <files mask="lv_group_private.h"/>
        <files mask="lv_obj.h"/>
        <files mask="lv_obj_class.h"/>
        <files mask="lv_obj_class_private.h"/>
        <files mask="lv_obj_draw.h"/>
        <files mask="lv_obj_draw_private.h"/>
        <files mask="lv_obj_event.h"/>
        <files mask="lv_obj_event_private.h"/>
        <files mask="lv_obj_pos.h"/>
        <files mask="lv_obj_private.h"/>
        <files mask="lv_obj_property.h"/>
        <files mask="lv_obj_scroll.h"/>
        <files mask="lv_obj_scroll_private.h"/>
        <files mask="lv_obj_style.h"/>
        <files mask="lv_obj_style_gen.h"/>
        <files mask="lv_obj_style_private.h"/>
        <files mask="lv_obj_tree.h"/>
        <files mask="lv_refr.h"/>
        <files mask="lv_refr_private.h"/>
      </source>
      <source relative_path="src/display" type="c_include">
        <files mask="lv_display.h"/>
        <files mask="lv_display_private.h"/>
      </source>
      <source relative_path="src/draw" type="c_include">
        <files mask="lv_draw.h"/>
        <files mask="lv_draw_arc.h"/>
        <files mask="lv_draw_buf.h"/>
        <files mask="lv_draw_buf_private.h"/>
        <files mask="lv_draw_image.h"/>
        <files mask="lv_draw_image_private.h"/>
        <files mask="lv_draw_label.h"/>
        <files mask="lv_draw_label_private.h"/>
        <files mask="lv_draw_line.h"/>
        <files mask="lv_draw_mask.h"/>
        <files mask="lv_draw_mask_private.h"/>
        <files mask="lv_draw_private.h"/>
        <files mask="lv_draw_rect.h"/>
        <files mask="lv_draw_rect_private.h"/>
        <files mask="lv_draw_triangle.h"/>
        <files mask="lv_draw_triangle_private.h"/>
        <files mask="lv_draw_vector.h"/>
        <files mask="lv_draw_vector_private.h"/>
        <files mask="lv_image_decoder.h"/>
        <files mask="lv_image_decoder_private.h"/>
        <files mask="lv_image_dsc.h"/>
      </source>
      <source relative_path="src/draw/nxp/pxp" type="c_include">
        <files mask="lv_draw_pxp.h"/>
        <files mask="lv_pxp_cfg.h"/>
        <files mask="lv_pxp_osa.h"/>
        <files mask="lv_pxp_utils.h"/>
      </source>
      <source relative_path="src/draw/nxp/vglite" type="c_include">
        <files mask="lv_draw_vglite.h"/>
        <files mask="lv_vglite_buf.h"/>
        <files mask="lv_vglite_matrix.h"/>
        <files mask="lv_vglite_path.h"/>
        <files mask="lv_vglite_utils.h"/>
      </source>
      <source relative_path="src/draw/sdl" type="c_include">
        <files mask="lv_draw_sdl.h"/>
      </source>
      <source relative_path="src/draw/sw/arm2d" type="c_include">
        <files mask="lv_draw_sw_arm2d.h"/>
        <files mask="lv_draw_sw_helium.h"/>
      </source>
      <source relative_path="src/draw/sw/blend/arm2d" type="c_include">
        <files mask="lv_blend_arm2d.h"/>
      </source>
      <source relative_path="src/draw/sw/blend" type="c_include">
        <files mask="lv_draw_sw_blend.h"/>
        <files mask="lv_draw_sw_blend_private.h"/>
        <files mask="lv_draw_sw_blend_to_al88.h"/>
        <files mask="lv_draw_sw_blend_to_argb8888.h"/>
        <files mask="lv_draw_sw_blend_to_i1.h"/>
        <files mask="lv_draw_sw_blend_to_l8.h"/>
        <files mask="lv_draw_sw_blend_to_rgb565.h"/>
        <files mask="lv_draw_sw_blend_to_rgb888.h"/>
      </source>
      <source relative_path="src/draw/sw/blend/neon" type="c_include">
        <files mask="lv_blend_neon.h"/>
      </source>
      <source relative_path="src/draw/sw" type="c_include">
        <files mask="lv_draw_sw.h"/>
        <files mask="lv_draw_sw_gradient.h"/>
        <files mask="lv_draw_sw_gradient_private.h"/>
        <files mask="lv_draw_sw_mask.h"/>
        <files mask="lv_draw_sw_mask_private.h"/>
        <files mask="lv_draw_sw_private.h"/>
      </source>
      <source relative_path="src/drivers" type="c_include">
        <files mask="lv_drivers.h"/>
      </source>
      <source relative_path="src/drivers/display/drm" type="c_include">
        <files mask="lv_linux_drm.h"/>
      </source>
      <source relative_path="src/drivers/display/fb" type="c_include">
        <files mask="lv_linux_fbdev.h"/>
      </source>
      <source relative_path="src/drivers/display/ili9341" type="c_include">
        <files mask="lv_ili9341.h"/>
      </source>
      <source relative_path="src/drivers/display/lcd" type="c_include">
        <files mask="lv_lcd_generic_mipi.h"/>
      </source>
      <source relative_path="src/drivers/display/st7735" type="c_include">
        <files mask="lv_st7735.h"/>
      </source>
      <source relative_path="src/drivers/display/st7789" type="c_include">
        <files mask="lv_st7789.h"/>
      </source>
      <source relative_path="src/drivers/display/st7796" type="c_include">
        <files mask="lv_st7796.h"/>
      </source>
      <source relative_path="src/drivers/display/tft_espi" type="c_include">
        <files mask="lv_tft_espi.h"/>
      </source>
      <source relative_path="src/drivers/evdev" type="c_include">
        <files mask="lv_evdev.h"/>
      </source>
      <source relative_path="src/drivers/libinput" type="c_include">
        <files mask="lv_libinput.h"/>
        <files mask="lv_libinput_private.h"/>
        <files mask="lv_xkb.h"/>
        <files mask="lv_xkb_private.h"/>
      </source>
      <source relative_path="src/drivers/nuttx" type="c_include">
        <files mask="lv_nuttx_cache.h"/>
        <files mask="lv_nuttx_entry.h"/>
        <files mask="lv_nuttx_fbdev.h"/>
        <files mask="lv_nuttx_image_cache.h"/>
        <files mask="lv_nuttx_lcd.h"/>
        <files mask="lv_nuttx_libuv.h"/>
        <files mask="lv_nuttx_profiler.h"/>
        <files mask="lv_nuttx_touchscreen.h"/>
      </source>
      <source relative_path="src/drivers/sdl" type="c_include">
        <files mask="lv_sdl_keyboard.h"/>
        <files mask="lv_sdl_mouse.h"/>
        <files mask="lv_sdl_mousewheel.h"/>
        <files mask="lv_sdl_private.h"/>
        <files mask="lv_sdl_window.h"/>
      </source>
      <source relative_path="src/drivers/windows" type="c_include">
        <files mask="lv_windows_context.h"/>
        <files mask="lv_windows_display.h"/>
        <files mask="lv_windows_input.h"/>
        <files mask="lv_windows_input_private.h"/>
      </source>
      <source relative_path="src/drivers/x11" type="c_include">
        <files mask="lv_x11.h"/>
      </source>
      <source relative_path="src/drivers/glfw" type="c_include">
        <files mask="lv_glfw_window.h"/>
        <files mask="lv_glfw_window_private.h"/>
        <files mask="lv_opengles_debug.h"/>
        <files mask="lv_opengles_driver.h"/>
        <files mask="lv_opengles_texture.h"/>
      </source>
      <source relative_path="src/drivers/qnx" type="c_include">
        <files mask="lv_qnx.h"/>
      </source>
      <source relative_path="src/drivers/wayland" type="c_include">
        <files mask="lv_wayland.h"/>
        <files mask="lv_wayland_smm.h"/>
      </source>
      <source relative_path="src/font" type="c_include">
        <files mask="lv_binfont_loader.h"/>
        <files mask="lv_font.h"/>
        <files mask="lv_font_fmt_txt.h"/>
        <files mask="lv_font_fmt_txt_private.h"/>
        <files mask="lv_symbol_def.h"/>
      </source>
      <source relative_path="src/indev" type="c_include">
        <files mask="lv_indev.h"/>
        <files mask="lv_indev_private.h"/>
        <files mask="lv_indev_scroll.h"/>
      </source>
      <source relative_path="src/layouts/flex" type="c_include">
        <files mask="lv_flex.h"/>
      </source>
      <source relative_path="src/layouts/grid" type="c_include">
        <files mask="lv_grid.h"/>
      </source>
      <source relative_path="src/layouts" type="c_include">
        <files mask="lv_layout.h"/>
        <files mask="lv_layout_private.h"/>
      </source>
      <source relative_path="src/libs/barcode" type="c_include">
        <files mask="code128.h"/>
        <files mask="lv_barcode.h"/>
        <files mask="lv_barcode_private.h"/>
      </source>
      <source relative_path="src/libs/bin_decoder" type="c_include">
        <files mask="lv_bin_decoder.h"/>
      </source>
      <source relative_path="src/libs/bmp" type="c_include">
        <files mask="lv_bmp.h"/>
      </source>
      <source relative_path="src/libs/ffmpeg" type="c_include">
        <files mask="lv_ffmpeg.h"/>
        <files mask="lv_ffmpeg_private.h"/>
      </source>
      <source relative_path="src/libs/freetype" type="c_include">
        <files mask="ftmodule.h"/>
        <files mask="ftoption.h"/>
        <files mask="lv_freetype.h"/>
        <files mask="lv_freetype_private.h"/>
      </source>
      <source relative_path="src/libs/fsdrv" type="c_include">
        <files mask="lv_fsdrv.h"/>
      </source>
      <source relative_path="src/libs/gif" type="c_include">
        <files mask="gifdec.h"/>
        <files mask="gifdec_mve.h"/>
        <files mask="lv_gif.h"/>
        <files mask="lv_gif_private.h"/>
      </source>
      <source relative_path="src/libs/libjpeg_turbo" type="c_include">
        <files mask="lv_libjpeg_turbo.h"/>
      </source>
      <source relative_path="src/libs/libpng" type="c_include">
        <files mask="lv_libpng.h"/>
      </source>
      <source relative_path="src/libs/lodepng" type="c_include">
        <files mask="lodepng.h"/>
        <files mask="lv_lodepng.h"/>
      </source>
      <source relative_path="src/libs/lz4" type="c_include">
        <files mask="lz4.h"/>
      </source>
      <source relative_path="src/libs/qrcode" type="c_include">
        <files mask="lv_qrcode.h"/>
        <files mask="lv_qrcode_private.h"/>
        <files mask="qrcodegen.h"/>
      </source>
      <source relative_path="src/libs/rle" type="c_include">
        <files mask="lv_rle.h"/>
      </source>
      <source relative_path="src/libs/rlottie" type="c_include">
        <files mask="lv_rlottie.h"/>
        <files mask="lv_rlottie_private.h"/>
      </source>
      <source relative_path="src/libs/thorvg" type="c_include">
        <files mask="config.h"/>
        <files mask="thorvg.h"/>
        <files mask="thorvg_capi.h"/>
        <files mask="thorvg_lottie.h"/>
        <files mask="tvgAnimation.h"/>
        <files mask="tvgArray.h"/>
        <files mask="tvgBinaryDesc.h"/>
        <files mask="tvgCanvas.h"/>
        <files mask="tvgCommon.h"/>
        <files mask="tvgCompressor.h"/>
        <files mask="tvgFill.h"/>
        <files mask="tvgFrameModule.h"/>
        <files mask="tvgInlist.h"/>
        <files mask="tvgIteratorAccessor.h"/>
        <files mask="tvgLines.h"/>
        <files mask="tvgLoadModule.h"/>
        <files mask="tvgLoader.h"/>
        <files mask="tvgLock.h"/>
        <files mask="tvgLottieBuilder.h"/>
        <files mask="tvgLottieExpressions.h"/>
        <files mask="tvgLottieInterpolator.h"/>
        <files mask="tvgLottieLoader.h"/>
        <files mask="tvgLottieModel.h"/>
        <files mask="tvgLottieParser.h"/>
        <files mask="tvgLottieParserHandler.h"/>
        <files mask="tvgLottieProperty.h"/>
        <files mask="tvgMath.h"/>
        <files mask="tvgPaint.h"/>
        <files mask="tvgPicture.h"/>
        <files mask="tvgRawLoader.h"/>
        <files mask="tvgRender.h"/>
        <files mask="tvgSaveModule.h"/>
        <files mask="tvgScene.h"/>
        <files mask="tvgShape.h"/>
        <files mask="tvgStr.h"/>
        <files mask="tvgSvgCssStyle.h"/>
        <files mask="tvgSvgLoader.h"/>
        <files mask="tvgSvgLoaderCommon.h"/>
        <files mask="tvgSvgPath.h"/>
        <files mask="tvgSvgSceneBuilder.h"/>
        <files mask="tvgSvgUtil.h"/>
        <files mask="tvgSwCommon.h"/>
        <files mask="tvgSwRasterAvx.h"/>
        <files mask="tvgSwRasterC.h"/>
        <files mask="tvgSwRasterNeon.h"/>
        <files mask="tvgSwRasterTexmap.h"/>
        <files mask="tvgSwRenderer.h"/>
        <files mask="tvgTaskScheduler.h"/>
        <files mask="tvgText.h"/>
        <files mask="tvgXmlParser.h"/>
      </source>
      <source relative_path="src/libs/tiny_ttf" type="c_include">
        <files mask="lv_tiny_ttf.h"/>
        <files mask="stb_rect_pack.h"/>
        <files mask="stb_truetype_htcw.h"/>
      </source>
      <source relative_path="src/libs/tjpgd" type="c_include">
        <files mask="lv_tjpgd.h"/>
        <files mask="tjpgd.h"/>
        <files mask="tjpgdcnf.h"/>
      </source>
      <source relative_path="src/misc/cache" type="c_include">
        <files mask="lv_cache.h"/>
        <files mask="lv_cache_entry.h"/>
        <files mask="lv_cache_entry_private.h"/>
        <files mask="lv_cache_lru_rb.h"/>
        <files mask="lv_cache_private.h"/>
        <files mask="lv_image_cache.h"/>
        <files mask="lv_image_header_cache.h"/>
      </source>
      <source relative_path="src/misc" type="c_include">
        <files mask="lv_anim.h"/>
        <files mask="lv_anim_private.h"/>
        <files mask="lv_anim_timeline.h"/>
        <files mask="lv_area.h"/>
        <files mask="lv_area_private.h"/>
        <files mask="lv_array.h"/>
        <files mask="lv_assert.h"/>
        <files mask="lv_async.h"/>
        <files mask="lv_bidi.h"/>
        <files mask="lv_bidi_private.h"/>
        <files mask="lv_color.h"/>
        <files mask="lv_color_op.h"/>
        <files mask="lv_color_op_private.h"/>
        <files mask="lv_event.h"/>
        <files mask="lv_event_private.h"/>
        <files mask="lv_fs.h"/>
        <files mask="lv_fs_private.h"/>
        <files mask="lv_ll.h"/>
        <files mask="lv_log.h"/>
        <files mask="lv_lru.h"/>
        <files mask="lv_math.h"/>
        <files mask="lv_matrix.h"/>
        <files mask="lv_palette.h"/>
        <files mask="lv_profiler.h"/>
        <files mask="lv_profiler_builtin.h"/>
        <files mask="lv_profiler_builtin_private.h"/>
        <files mask="lv_rb.h"/>
        <files mask="lv_rb_private.h"/>
        <files mask="lv_style.h"/>
        <files mask="lv_style_gen.h"/>
        <files mask="lv_style_private.h"/>
        <files mask="lv_templ.h"/>
        <files mask="lv_text.h"/>
        <files mask="lv_text_ap.h"/>
        <files mask="lv_text_private.h"/>
        <files mask="lv_timer.h"/>
        <files mask="lv_timer_private.h"/>
        <files mask="lv_types.h"/>
        <files mask="lv_utils.h"/>
      </source>
      <source relative_path="src/osal" type="c_include">
        <files mask="lv_cmsis_rtos2.h"/>
        <files mask="lv_freertos.h"/>
        <files mask="lv_mqx.h"/>
        <files mask="lv_os.h"/>
        <files mask="lv_os_none.h"/>
        <files mask="lv_os_private.h"/>
        <files mask="lv_pthread.h"/>
        <files mask="lv_rtthread.h"/>
        <files mask="lv_windows.h"/>
      </source>
      <source relative_path="src/others/file_explorer" type="c_include">
        <files mask="lv_file_explorer.h"/>
        <files mask="lv_file_explorer_private.h"/>
      </source>
      <source relative_path="src/others/fragment" type="c_include">
        <files mask="lv_fragment.h"/>
        <files mask="lv_fragment_private.h"/>
      </source>
      <source relative_path="src/others/gridnav" type="c_include">
        <files mask="lv_gridnav.h"/>
      </source>
      <source relative_path="src/others/ime" type="c_include">
        <files mask="lv_ime_pinyin.h"/>
        <files mask="lv_ime_pinyin_private.h"/>
      </source>
      <source relative_path="src/others/imgfont" type="c_include">
        <files mask="lv_imgfont.h"/>
      </source>
      <source relative_path="src/others/monkey" type="c_include">
        <files mask="lv_monkey.h"/>
        <files mask="lv_monkey_private.h"/>
      </source>
      <source relative_path="src/others/observer" type="c_include">
        <files mask="lv_observer.h"/>
        <files mask="lv_observer_private.h"/>
      </source>
      <source relative_path="src/others/snapshot" type="c_include">
        <files mask="lv_snapshot.h"/>
      </source>
      <source relative_path="src/others/sysmon" type="c_include">
        <files mask="lv_sysmon.h"/>
        <files mask="lv_sysmon_private.h"/>
      </source>
      <source relative_path="src/others/vg_lite_tvg" type="c_include">
        <files mask="vg_lite.h"/>
      </source>
      <source relative_path="src/stdlib/builtin" type="c_include">
        <files mask="lv_tlsf.h"/>
        <files mask="lv_tlsf_private.h"/>
      </source>
      <source relative_path="src/stdlib" type="c_include">
        <files mask="lv_mem.h"/>
        <files mask="lv_mem_private.h"/>
        <files mask="lv_sprintf.h"/>
        <files mask="lv_string.h"/>
      </source>
      <source relative_path="src/themes/default" type="c_include">
        <files mask="lv_theme_default.h"/>
      </source>
      <source relative_path="src/themes" type="c_include">
        <files mask="lv_theme.h"/>
        <files mask="lv_theme_private.h"/>
      </source>
      <source relative_path="src/themes/mono" type="c_include">
        <files mask="lv_theme_mono.h"/>
      </source>
      <source relative_path="src/themes/simple" type="c_include">
        <files mask="lv_theme_simple.h"/>
      </source>
      <source relative_path="src/tick" type="c_include">
        <files mask="lv_tick.h"/>
        <files mask="lv_tick_private.h"/>
      </source>
      <source relative_path="src/widgets/animimage" type="c_include">
        <files mask="lv_animimage.h"/>
        <files mask="lv_animimage_private.h"/>
      </source>
      <source relative_path="src/widgets/arc" type="c_include">
        <files mask="lv_arc.h"/>
        <files mask="lv_arc_private.h"/>
      </source>
      <source relative_path="src/widgets/bar" type="c_include">
        <files mask="lv_bar.h"/>
        <files mask="lv_bar_private.h"/>
      </source>
      <source relative_path="src/widgets/button" type="c_include">
        <files mask="lv_button.h"/>
        <files mask="lv_button_private.h"/>
      </source>
      <source relative_path="src/widgets/buttonmatrix" type="c_include">
        <files mask="lv_buttonmatrix.h"/>
        <files mask="lv_buttonmatrix_private.h"/>
      </source>
      <source relative_path="src/widgets/calendar" type="c_include">
        <files mask="lv_calendar.h"/>
        <files mask="lv_calendar_chinese.h"/>
        <files mask="lv_calendar_chinese_private.h"/>
        <files mask="lv_calendar_header_arrow.h"/>
        <files mask="lv_calendar_header_dropdown.h"/>
        <files mask="lv_calendar_private.h"/>
      </source>
      <source relative_path="src/widgets/canvas" type="c_include">
        <files mask="lv_canvas.h"/>
        <files mask="lv_canvas_private.h"/>
      </source>
      <source relative_path="src/widgets/carousel" type="c_include">
        <files mask="lv_carousel.h"/>
        <files mask="lv_carousel_private.h"/>
      </source>
      <source relative_path="src/widgets/chart" type="c_include">
        <files mask="lv_chart.h"/>
        <files mask="lv_chart_private.h"/>
      </source>
      <source relative_path="src/widgets/checkbox" type="c_include">
        <files mask="lv_checkbox.h"/>
        <files mask="lv_checkbox_private.h"/>
      </source>
      <source relative_path="src/widgets/dropdown" type="c_include">
        <files mask="lv_dropdown.h"/>
        <files mask="lv_dropdown_private.h"/>
      </source>
      <source relative_path="src/widgets/image" type="c_include">
        <files mask="lv_image.h"/>
        <files mask="lv_image_private.h"/>
      </source>
      <source relative_path="src/widgets/imagebutton" type="c_include">
        <files mask="lv_imagebutton.h"/>
        <files mask="lv_imagebutton_private.h"/>
      </source>
      <source relative_path="src/widgets/keyboard" type="c_include">
        <files mask="lv_keyboard.h"/>
        <files mask="lv_keyboard_private.h"/>
      </source>
      <source relative_path="src/widgets/label" type="c_include">
        <files mask="lv_label.h"/>
        <files mask="lv_label_private.h"/>
      </source>
      <source relative_path="src/widgets/led" type="c_include">
        <files mask="lv_led.h"/>
        <files mask="lv_led_private.h"/>
      </source>
      <source relative_path="src/widgets/line" type="c_include">
        <files mask="lv_line.h"/>
        <files mask="lv_line_private.h"/>
      </source>
      <source relative_path="src/widgets/list" type="c_include">
        <files mask="lv_list.h"/>
      </source>
      <source relative_path="src/widgets/lottie" type="c_include">
        <files mask="lv_lottie.h"/>
        <files mask="lv_lottie_private.h"/>
      </source>
      <source relative_path="src/widgets/menu" type="c_include">
        <files mask="lv_menu.h"/>
        <files mask="lv_menu_private.h"/>
      </source>
      <source relative_path="src/widgets/msgbox" type="c_include">
        <files mask="lv_msgbox.h"/>
        <files mask="lv_msgbox_private.h"/>
      </source>
      <source relative_path="src/widgets/objx_templ" type="c_include">
        <files mask="lv_objx_templ.h"/>
      </source>
      <source relative_path="src/widgets/roller" type="c_include">
        <files mask="lv_roller.h"/>
        <files mask="lv_roller_private.h"/>
      </source>
      <source relative_path="src/widgets/scale" type="c_include">
        <files mask="lv_scale.h"/>
        <files mask="lv_scale_private.h"/>
      </source>
      <source relative_path="src/widgets/slider" type="c_include">
        <files mask="lv_slider.h"/>
        <files mask="lv_slider_private.h"/>
      </source>
      <source relative_path="src/widgets/span" type="c_include">
        <files mask="lv_span.h"/>
        <files mask="lv_span_private.h"/>
      </source>
      <source relative_path="src/widgets/spinbox" type="c_include">
        <files mask="lv_spinbox.h"/>
        <files mask="lv_spinbox_private.h"/>
      </source>
      <source relative_path="src/widgets/spinner" type="c_include">
        <files mask="lv_spinner.h"/>
      </source>
      <source relative_path="src/widgets/switch" type="c_include">
        <files mask="lv_switch.h"/>
        <files mask="lv_switch_private.h"/>
      </source>
      <source relative_path="src/widgets/table" type="c_include">
        <files mask="lv_table.h"/>
        <files mask="lv_table_private.h"/>
      </source>
      <source relative_path="src/widgets/tabview" type="c_include">
        <files mask="lv_tabview.h"/>
        <files mask="lv_tabview_private.h"/>
      </source>
      <source relative_path="src/widgets/textarea" type="c_include">
        <files mask="lv_textarea.h"/>
        <files mask="lv_textarea_private.h"/>
      </source>
      <source relative_path="src/widgets/tileview" type="c_include">
        <files mask="lv_tileview.h"/>
        <files mask="lv_tileview_private.h"/>
      </source>
      <source relative_path="src/widgets/win" type="c_include">
        <files mask="lv_win.h"/>
        <files mask="lv_win_private.h"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_conf_template.h"/>
        <files mask="lv_version.h"/>
        <files mask="lvgl.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/draw/nxp/vglite" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/draw/nxp/vglite" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.benchmark.MIMXRT1176" name="LVGL benchamrk demo" brief="LVGL benchmark demo" version="9.2.1" full_name="LVGL benchark demo" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/benchmark" project_base_path="lvgl/demos/benchmark">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_benchmark.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_benchmark.h"/>
      </source>
      <source relative_path="assets" type="src">
        <files mask="img_benchmark_avatar.c"/>
        <files mask="img_benchmark_cogwheel_alpha256.c"/>
        <files mask="img_benchmark_cogwheel_argb.c"/>
        <files mask="img_benchmark_cogwheel_indexed16.c"/>
        <files mask="img_benchmark_cogwheel_rgb.c"/>
        <files mask="lv_font_benchmark_montserrat_12_compr_az.c.c"/>
        <files mask="lv_font_benchmark_montserrat_16_compr_az.c.c"/>
        <files mask="lv_font_benchmark_montserrat_28_compr_az.c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_benchmark.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="assets" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="assets" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.common.MIMXRT1176" name="LVGL demo common" brief="LVGL demo common" version="9.2.1" full_name="LVGL demo common" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos" project_base_path="lvgl/demos">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demos.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demos.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_common.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.transform.MIMXRT1176" name="LVGL demo transform" brief="LVGL demo transform" version="9.2.1" full_name="LVGL demo transform" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/transform" project_base_path="lvgl/demos/transform">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_transform.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_transform.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_transform.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.multilang.MIMXRT1176" name="LVGL demo multilang" brief="LVGL demo multilang" version="9.2.1" full_name="LVGL demo multilang" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/multilang" project_base_path="lvgl/demos/multilang">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_multilang.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_multilang.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_multilang.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.flex_layout.MIMXRT1176" name="LVGL demo flex_layout" brief="LVGL demo flex_layout" version="9.2.1" full_name="LVGL demo flex_layout" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/flex_layout" project_base_path="lvgl/demos/flex_layout">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_flex_layout_ctrl_pad.c"/>
        <files mask="lv_demo_flex_layout_flex_loader.c"/>
        <files mask="lv_demo_flex_layout_main.c"/>
        <files mask="lv_demo_flex_layout_view.c"/>
        <files mask="lv_demo_flex_layout_view_child_node.c"/>
        <files mask="lv_demo_flex_layout_view_ctrl_pad.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_flex_layout.h"/>
        <files mask="lv_demo_flex_layout_main.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_flex_layout.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.scroll.MIMXRT1176" name="LVGL demo scroll" brief="LVGL demo scroll" version="9.2.1" full_name="LVGL demo scroll" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/scroll" project_base_path="lvgl/demos/scroll">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_scroll.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_scroll.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_scroll.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.music.MIMXRT1176" name="LVGL demo music" brief="LVGL demo music" version="9.2.1" full_name="LVGL demo music" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/music" project_base_path="lvgl/demos/music">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_music.c"/>
        <files mask="lv_demo_music_list.c"/>
        <files mask="lv_demo_music_main.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_music.h"/>
        <files mask="lv_demo_music_list.h"/>
        <files mask="lv_demo_music_main.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_music.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.keypad_encoder.MIMXRT1176" name="LVGL demo keypad_encoder" brief="LVGL demo keypad_encoder" version="9.2.1" full_name="LVGL demo keypad_encoder" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/keypad_encoder" project_base_path="lvgl/demos/keypad_encoder">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_keypad_encoder.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_keypad_encoder.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_keypad_encoder.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.stress.MIMXRT1176" name="LVGL stress demo" brief="LVGL stress demo" version="9.2.1" full_name="LVGL stress demo" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/stress" project_base_path="lvgl/demos/stress">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT1176"/>
          <component_dependency value="middleware.lvgl.demo.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_stress.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_stress.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_stress.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.widgets.MIMXRT1176" name="LVGL widgets demo" brief="LVGL widgets demo" version="9.2.1" full_name="LVGL  demo" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/widgets" project_base_path="lvgl/demos/widgets">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT1176"/>
          <component_dependency value="middleware.lvgl.demo.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_widgets.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_widgets.h"/>
      </source>
      <source relative_path="assets" type="src">
        <files mask="img_clothes.c"/>
        <files mask="img_demo_widgets_avatar.c"/>
        <files mask="img_demo_widgets_needle.c"/>
        <files mask="img_lvgl_logo.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_widgets.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="assets" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="assets" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.llhttp.MIMXRT1176" name="llhttp" brief="HTTP parser in LLVM IR" version="6.0.5" full_name="llhttp" category="AWS IoT/llhttp" user_visible="true" type="middleware" package_base_path="middleware/llhttp" project_base_path="llhttp">
      <dependencies>
        <all>
          <component_dependency value="utility.debug_console.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="include" type="c_include">
        <files mask="llhttp.h"/>
      </source>
      <source relative_path="src" type="src">
        <files mask="api.c"/>
        <files mask="http.c"/>
        <files mask="llhttp.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_llhttp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.MIMXRT1176" name="FreeMASTER driver common files" brief="Common FreeMASTER driver code." version="3.0.7" full_name="FreeMASTER communication driver common code" category="FreeMASTER/FreeMASTER Driver" user_visible="true" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.fmstr.platform_56f800e.MIMXRT1176"/>
            <component_dependency value="middleware.fmstr.platform_gen32le.MIMXRT1176"/>
            <component_dependency value="middleware.fmstr.platform_pa32.MIMXRT1176"/>
            <component_dependency value="middleware.fmstr.platform_s12z.MIMXRT1176"/>
            <component_dependency value="middleware.fmstr.platform_s32.MIMXRT1176"/>
          </any_of>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="src/common" type="c_include">
        <files mask="freemaster.h"/>
        <files mask="freemaster_defcfg.h"/>
        <files mask="freemaster_private.h"/>
        <files mask="freemaster_protocol.h"/>
        <files mask="freemaster_rec.h"/>
        <files mask="freemaster_tsa.h"/>
        <files mask="freemaster_ures.h"/>
        <files mask="freemaster_utils.h"/>
        <files mask="freemaster_can.h"/>
        <files mask="freemaster_serial.h"/>
        <files mask="freemaster_net.h"/>
      </source>
      <source relative_path="src/common" type="src">
        <files mask="freemaster_appcmd.c"/>
        <files mask="freemaster_pipes.c"/>
        <files mask="freemaster_protocol.c"/>
        <files mask="freemaster_rec.c"/>
        <files mask="freemaster_scope.c"/>
        <files mask="freemaster_tsa.c"/>
        <files mask="freemaster_ures.c"/>
        <files mask="freemaster_utils.c"/>
        <files mask="freemaster_can.c"/>
        <files mask="freemaster_sha.c"/>
        <files mask="freemaster_pdbdm.c"/>
        <files mask="freemaster_serial.c"/>
        <files mask="freemaster_net.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fmstr.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/common" type="c_include"/>
        <include_path relative_path="src/common" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.platform_gen32le.MIMXRT1176" name="FreeMASTER 32bit driver" brief="FreeMASTER driver code for 32bit platforms, enabling communication between FreeMASTER or FreeMASTER Lite tools and MCU application. Supports Serial, CAN, USB and BDM/JTAG physical interface." version="3.0.7" full_name="FreeMASTER communication driver for 32bit platforms" category="FreeMASTER/FreeMASTER Driver" user_visible="true" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <all>
          <component_dependency value="middleware.fmstr.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="src/platforms/gen32le" type="c_include">
        <files mask="freemaster_gen32le.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/can" type="src">
        <files mask="freemaster_flexcan.c"/>
        <files mask="freemaster_mscan.c"/>
        <files mask="freemaster_mcan.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/can" type="c_include">
        <files mask="freemaster_flexcan.h"/>
        <files mask="freemaster_mscan.h"/>
        <files mask="freemaster_mcan.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/serial" type="src">
        <files mask="freemaster_serial_uart.c"/>
        <files mask="freemaster_serial_lpsci.c"/>
        <files mask="freemaster_serial_lpuart.c"/>
        <files mask="freemaster_serial_usart.c"/>
        <files mask="freemaster_serial_miniusart.c"/>
        <files mask="freemaster_serial_usb.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/serial" type="c_include">
        <files mask="freemaster_serial_uart.h"/>
        <files mask="freemaster_serial_lpsci.h"/>
        <files mask="freemaster_serial_lpuart.h"/>
        <files mask="freemaster_serial_usart.h"/>
        <files mask="freemaster_serial_miniusart.h"/>
        <files mask="freemaster_serial_usb.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/network" type="src">
        <files mask="freemaster_net_segger_rtt.c"/>
        <files mask="freemaster_net_lwip_udp.c"/>
        <files mask="freemaster_net_lwip_tcp.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/network" type="c_include">
        <files mask="freemaster_net_segger_rtt.h"/>
        <files mask="freemaster_net_lwip_udp.h"/>
        <files mask="freemaster_net_lwip_tcp.h"/>
      </source>
      <source relative_path="src/template/gen32le" config="true" type="c_include">
        <files mask="freemaster_cfg.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fmstr_platform_gen32le.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/platforms/gen32le" type="c_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/can" type="c_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/serial" type="c_include"/>
        <include_path relative_path="src/template/gen32le" type="c_include"/>
        <include_path relative_path="src/platforms/gen32le" type="asm_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/can" type="asm_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/serial" type="asm_include"/>
        <include_path relative_path="src/template/gen32le" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.platform_56f800e.MIMXRT1176" name="FreeMASTER DSC driver" brief="FreeMASTER driver code for DSC platforms, enabling communication between FreeMASTER or FreeMASTER Lite tools and MCU application. Supports Serial, CAN, USB and BDM/JTAG physical interface." version="3.0.7" full_name="FreeMASTER communication driver for DSC platforms" category="FreeMASTER/FreeMASTER Driver" user_visible="true" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <all>
          <component_dependency value="middleware.fmstr.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="src/platforms/56f800e" type="c_include">
        <files mask="freemaster_56f800e.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/can" type="src">
        <files mask="freemaster_flexcan_dsc.c"/>
        <files mask="freemaster_mscan_dsc.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/can" type="c_include">
        <files mask="freemaster_flexcan_dsc.h"/>
        <files mask="freemaster_mscan_dsc.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/serial" type="src">
        <files mask="freemaster_serial_qsci.c"/>
        <files mask="freemaster_56f800e_eonce.c"/>
        <files mask="freemaster_serial_usb.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/serial" type="c_include">
        <files mask="freemaster_serial_qsci.h"/>
        <files mask="freemaster_56f800e_eonce.h"/>
        <files mask="freemaster_serial_usb.h"/>
      </source>
      <source relative_path="src/template/56f800e" config="true" type="c_include">
        <files mask="freemaster_cfg.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fmstr_platform_56f800e.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/platforms/56f800e" type="c_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/can" type="c_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/serial" type="c_include"/>
        <include_path relative_path="src/template/56f800e" type="c_include"/>
        <include_path relative_path="src/platforms/56f800e" type="asm_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/can" type="asm_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/serial" type="asm_include"/>
        <include_path relative_path="src/template/56f800e" type="asm_include"/>
      </include_paths>
    </component>
    <!--<component id="middleware.fmstr.all_files.MIMXRT1176" name="FreeMASTER driver all files" version="3.0.7" package_base_path="middleware/freemaster" project_base_path="freemaster">
  <source relative_path="src/common" type="c_include">
    <files mask="freemaster.h"/>
    <files mask="freemaster_can.h"/>
    <files mask="freemaster_defcfg.h"/>
    <files mask="freemaster_net.h"/>
    <files mask="freemaster_private.h"/>
    <files mask="freemaster_protocol.h"/>
    <files mask="freemaster_rec.h"/>
    <files mask="freemaster_serial.h"/>
    <files mask="freemaster_tsa.h"/>
    <files mask="freemaster_ures.h"/>
    <files mask="freemaster_utils.h"/>
  </source>
  <source relative_path="src/common" type="src">
    <files mask="freemaster_appcmd.c"/>
    <files mask="freemaster_can.c"/>
    <files mask="freemaster_net.c"/>
    <files mask="freemaster_pdbdm.c"/>
    <files mask="freemaster_pipes.c"/>
    <files mask="freemaster_protocol.c"/>
    <files mask="freemaster_rec.c"/>
    <files mask="freemaster_scope.c"/>
    <files mask="freemaster_serial.c"/>
    <files mask="freemaster_sha.c"/>
    <files mask="freemaster_tsa.c"/>
    <files mask="freemaster_ures.c"/>
    <files mask="freemaster_utils.c"/>
  </source>
  <source relative_path="src/common" type="other">
    <files mask="freemaster_cfg.h.example"/>
  </source>
  <source relative_path="src/platforms/56f800e" type="c_include">
    <files mask="freemaster_56f800e.h"/>
  </source>
  <source relative_path="src/platforms/gen32be" type="c_include">
    <files mask="freemaster_gen32be.h"/>
  </source>
  <source relative_path="src/platforms/gen32le" type="c_include">
    <files mask="freemaster_gen32le.h"/>
  </source>
  <source relative_path="src/platforms/s12z" type="c_include">
    <files mask="freemaster_s12z.h"/>
  </source>
  <source relative_path="src/drivers" type="doc">
    <files mask="readme.txt"/>
  </source>
  <source relative_path="src/drivers/dreg/DSC" type="src">
    <files mask="freemaster_56f800e_eonce.c"/>
    <files mask="freemaster_56f800e_flexcan.c"/>
    <files mask="freemaster_56f800e_qsci.c"/>
  </source>
  <source relative_path="src/drivers/dreg/DSC" type="c_include">
    <files mask="freemaster_56f800e_eonce.h"/>
    <files mask="freemaster_56f800e_flexcan.h"/>
    <files mask="freemaster_56f800e_qsci.h"/>
  </source>
  <source relative_path="src/drivers/dreg/Kxx" type="src">
    <files mask="freemaster_kxx_uart.c"/>
  </source>
  <source relative_path="src/drivers/dreg/Kxx" type="c_include">
    <files mask="freemaster_kxx_uart.h"/>
  </source>
  <source relative_path="src/drivers/dreg/MPC" type="src">
    <files mask="freemaster_mpc574xp_linflex.c"/>
  </source>
  <source relative_path="src/drivers/dreg/MPC" type="c_include">
    <files mask="freemaster_mpc574xp_linflex.h"/>
  </source>
  <source relative_path="src/drivers/dreg/S12Z" type="src">
    <files mask="freemaster_s12z_mscan.c"/>
    <files mask="freemaster_s12z_sci.c"/>
  </source>
  <source relative_path="src/drivers/dreg/S12Z" type="c_include">
    <files mask="freemaster_s12z_mscan.h"/>
    <files mask="freemaster_s12z_sci.h"/>
  </source>
  <source relative_path="src/drivers/dreg/S32G" type="src">
    <files mask="freemaster_s32g274a_linflexd.c"/>
  </source>
  <source relative_path="src/drivers/dreg/S32G" type="c_include">
    <files mask="freemaster_s32g274a_linflexd.h"/>
  </source>
  <source relative_path="src/drivers/dreg/S32K" type="src">
    <files mask="freemaster_s32k144_lpuart.c"/>
    <files mask="freemaster_s32k3xx_lpuart.c"/>
  </source>
  <source relative_path="src/drivers/dreg/S32K" type="c_include">
    <files mask="freemaster_s32k144_lpuart.h"/>
    <files mask="freemaster_s32k3xx_lpuart.h"/>
  </source>
  <source relative_path="src/drivers/dreg/S32R" type="src">
    <files mask="freemaster_s32r45_linflexd.c"/>
  </source>
  <source relative_path="src/drivers/dreg/S32R" type="c_include">
    <files mask="freemaster_s32r45_linflexd.h"/>
  </source>
  <source relative_path="src/drivers/dreg/S32S" type="src">
    <files mask="freemaster_s32s247tv_linflexd.c"/>
  </source>
  <source relative_path="src/drivers/dreg/S32S" type="c_include">
    <files mask="freemaster_s32s247tv_linflexd.h"/>
  </source>
  <source relative_path="src/drivers/mcuxsdk/can" type="src">
    <files mask="freemaster_flexcan.c"/>
    <files mask="freemaster_flexcan_dsc.c"/>
    <files mask="freemaster_mcan.c"/>
    <files mask="freemaster_mscan.c"/>
    <files mask="freemaster_mscan_dsc.c"/>
  </source>
  <source relative_path="src/drivers/mcuxsdk/can" type="c_include">
    <files mask="freemaster_flexcan.h"/>
    <files mask="freemaster_flexcan_dsc.h"/>
    <files mask="freemaster_mcan.h"/>
    <files mask="freemaster_mscan.h"/>
    <files mask="freemaster_mscan_dsc.h"/>
  </source>
  <source relative_path="src/drivers/mcuxsdk/serial" type="src">
    <files mask="freemaster_56f800e_eonce.c"/>
    <files mask="freemaster_serial_lpsci.c"/>
    <files mask="freemaster_serial_lpuart.c"/>
    <files mask="freemaster_serial_miniusart.c"/>
    <files mask="freemaster_serial_qsci.c"/>
    <files mask="freemaster_serial_uart.c"/>
    <files mask="freemaster_serial_usart.c"/>
    <files mask="freemaster_serial_usb.c"/>
  </source>
  <source relative_path="src/drivers/mcuxsdk/serial" type="c_include">
    <files mask="freemaster_56f800e_eonce.h"/>
    <files mask="freemaster_serial_lpsci.h"/>
    <files mask="freemaster_serial_lpuart.h"/>
    <files mask="freemaster_serial_miniusart.h"/>
    <files mask="freemaster_serial_qsci.h"/>
    <files mask="freemaster_serial_uart.h"/>
    <files mask="freemaster_serial_usart.h"/>
    <files mask="freemaster_serial_usb.h"/>
  </source>
  <source relative_path="src/drivers/ampxsdk/uart/S32K1x" type="src">
    <files mask="freemaster_serial_lpuart.c"/>
  </source>
  <source relative_path="src/drivers/ampxsdk/uart/S32K1x" type="c_include">
    <files mask="freemaster_serial_lpuart.h"/>
  </source>
  <source relative_path="src/drivers/ampxsdk/can/S32K1x" type="src">
    <files mask="freemaster_flexcan.c"/>
  </source>
  <source relative_path="src/drivers/ampxsdk/can/S32K1x" type="c_include">
    <files mask="freemaster_flexcan.h"/>
  </source>
  <source relative_path="src/support/mcuxsdk_usb" type="src">
    <files mask="freemaster_usb.c"/>
    <files mask="freemaster_usb_device_descriptor.c"/>
  </source>
  <source relative_path="src/support/mcuxsdk_usb" type="c_include">
    <files mask="freemaster_usb.h"/>
    <files mask="freemaster_usb_device_descriptor.h"/>
    <files mask="usb_device_descriptor.h"/>
  </source>
  <source relative_path="src/support/mcuxsdk_usb" type="doc">
    <files mask="readme.txt"/>
  </source>
</component>-->
    <component id="middleware.fmstr.platform_s32.MIMXRT1176" name="FreeMASTER S32 driver" brief="FreeMASTER driver code for S32 platform." version="3.0.7" full_name="FreeMASTER communication driver for S32 platform" category="FreeMASTER/FreeMASTER Driver" user_visible="false" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <all>
          <component_dependency value="middleware.fmstr.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="src/platforms/gen32le" type="c_include">
        <files mask="freemaster_gen32le.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fmstr_platform_s32.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/platforms/gen32le" type="c_include"/>
        <include_path relative_path="src/platforms/gen32le" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.platform_pa32.MIMXRT1176" name="FreeMASTER Power Architecture driver" brief="FreeMASTER driver code for Power Architecture 32bit platform." version="3.0.7" full_name="FreeMASTER communication driver for Power Architecture 32bit platform" category="FreeMASTER/FreeMASTER Driver" user_visible="false" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <all>
          <component_dependency value="middleware.fmstr.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="src/platforms/gen32be" type="c_include">
        <files mask="freemaster_gen32be.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fmstr_platform_pa32.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/platforms/gen32be" type="c_include"/>
        <include_path relative_path="src/platforms/gen32be" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.platform_s12z.MIMXRT1176" name="FreeMASTER S12Z driver" brief="FreeMASTER driver code for S12Z platform." version="3.0.7" full_name="FreeMASTER communication driver for S12Z platform" category="FreeMASTER/FreeMASTER Driver" user_visible="false" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <all>
          <component_dependency value="middleware.fmstr.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="src/platforms/s12z" type="c_include">
        <files mask="freemaster_s12z.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fmstr_platform_s12z.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/platforms/s12z" type="c_include"/>
        <include_path relative_path="src/platforms/s12z" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.mmc.MIMXRT1176" name="mmc" brief="FatFs_MMC" version="0.15.0" full_name="Fatfs MMC layer" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.MIMXRT1176"/>
          <component_dependency value="middleware.fatfs.template_mmc.MIMXRT1176"/>
          <component_dependency value="middleware.sdmmc.mmc.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_mmc_disk" type="src">
        <files mask="fsl_mmc_disk.c"/>
      </source>
      <source relative_path="source/fsl_mmc_disk" type="c_include">
        <files mask="fsl_mmc_disk.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_mmc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_mmc_disk" type="c_include"/>
        <include_path relative_path="source/fsl_mmc_disk" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.nand.MIMXRT1176" name="nand" brief="FatFs_NAND" version="0.15.0" full_name="Fatfs NAND layer" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="component.flash_nand_flexspi.MIMXRT1176"/>
            <component_dependency value="component.flash_nand_semc.MIMXRT1176"/>
          </any_of>
          <component_dependency value="middleware.dhara.MIMXRT1176"/>
          <component_dependency value="middleware.fatfs.MIMXRT1176"/>
          <component_dependency value="middleware.fatfs.template_nand.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_nand_disk" type="src">
        <files mask="fsl_nand_disk.c"/>
      </source>
      <source relative_path="source/fsl_nand_disk" type="c_include">
        <files mask="fsl_nand_disk.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_nand.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_nand_disk" type="c_include"/>
        <include_path relative_path="source/fsl_nand_disk" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.ram.MIMXRT1176" name="ram" brief="FatFs_RAM" version="0.15.0" full_name="Fatfs RAM layer" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.MIMXRT1176"/>
          <component_dependency value="middleware.fatfs.template_ram.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_ram_disk" type="src">
        <files mask="fsl_ram_disk.c"/>
      </source>
      <source relative_path="source/fsl_ram_disk" type="c_include">
        <files mask="fsl_ram_disk.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_ram.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_ram_disk" type="c_include"/>
        <include_path relative_path="source/fsl_ram_disk" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.sd.MIMXRT1176" name="sd" brief="FatFs_SD" version="0.15.0" full_name="Fatfs SD layer" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.MIMXRT1176"/>
          <component_dependency value="middleware.fatfs.template_sd.MIMXRT1176"/>
          <component_dependency value="middleware.sdmmc.sd.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_sd_disk" type="src">
        <files mask="fsl_sd_disk.c"/>
      </source>
      <source relative_path="source/fsl_sd_disk" type="c_include">
        <files mask="fsl_sd_disk.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_sd.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_sd_disk" type="c_include"/>
        <include_path relative_path="source/fsl_sd_disk" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.sdspi.MIMXRT1176" name="sdspi" brief="FatFs_SDSPI" version="0.15.0" full_name="Fatfs SDSPI layer" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.MIMXRT1176"/>
          <component_dependency value="middleware.fatfs.template_sdspi.MIMXRT1176"/>
          <component_dependency value="middleware.sdmmc.sdspi.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_sdspi_disk" type="src">
        <files mask="fsl_sdspi_disk.c"/>
      </source>
      <source relative_path="source/fsl_sdspi_disk" type="c_include">
        <files mask="fsl_sdspi_disk.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_sdspi.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_sdspi_disk" type="c_include"/>
        <include_path relative_path="source/fsl_sdspi_disk" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.usb.MIMXRT1176" name="usb" brief="FatFs_USB" version="0.15.0" full_name="Fatfs USB layer" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.MIMXRT1176"/>
          <component_dependency value="middleware.fatfs.template_usb.MIMXRT1176"/>
          <component_dependency value="middleware.usb.host_msd.MIMXRT1176"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_usb_disk" type="c_include">
        <files mask="fsl_usb_disk.h"/>
      </source>
      <source condition="component.osa_bm.MIMXRT1176" relative_path="source/fsl_usb_disk" type="src">
        <files mask="fsl_usb_disk_bm.c"/>
      </source>
      <source condition="component.osa_free_rtos.MIMXRT1176" relative_path="source/fsl_usb_disk" type="src">
        <files mask="fsl_usb_disk_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_usb.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_usb_disk" type="c_include"/>
        <include_path relative_path="source/fsl_usb_disk" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.emwin.MIMXRT1176" name="emwin" brief="emWin library" version="6.38" full_name="middleware emWin" category="Graphics/emWin graphics library" user_visible="true" type="middleware" package_base_path="middleware/emwin" project_base_path="emwin">
      <dependencies>
        <all>
          <component_dependency value="middleware.emwin.template.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="ChangeLogKSDK.txt" hidden="true"/>
        <files mask="readme.txt" hidden="true"/>
      </source>
      <source relative_path="emWin_header" type="c_include">
        <files mask="AppWizard.h"/>
        <files mask="BUTTON.h"/>
        <files mask="BUTTON_Private.h"/>
        <files mask="CALENDAR.h"/>
        <files mask="CHECKBOX.h"/>
        <files mask="CHECKBOX_Private.h"/>
        <files mask="CHOOSECOLOR.h"/>
        <files mask="CHOOSEFILE.h"/>
        <files mask="DIALOG.h"/>
        <files mask="DIALOG_Type.h"/>
        <files mask="DROPDOWN.h"/>
        <files mask="DROPDOWN_Private.h"/>
        <files mask="EDIT.h"/>
        <files mask="EDIT_Private.h"/>
        <files mask="FRAMEWIN.h"/>
        <files mask="FRAMEWIN_Private.h"/>
        <files mask="GAUGE.h"/>
        <files mask="GAUGE_Private.h"/>
        <files mask="GRAPH.h"/>
        <files mask="GRAPH_Private.h"/>
        <files mask="GUI.h"/>
        <files mask="GUIDRV_BitPlains.h"/>
        <files mask="GUIDRV_DCache.h"/>
        <files mask="GUIDRV_DCache_Private.h"/>
        <files mask="GUIDRV_Dist.h"/>
        <files mask="GUIDRV_FlexColor.h"/>
        <files mask="GUIDRV_FlexColor_Private.h"/>
        <files mask="GUIDRV_IST3088.h"/>
        <files mask="GUIDRV_IST3088_Private.h"/>
        <files mask="GUIDRV_Lin.h"/>
        <files mask="GUIDRV_Lin_Opt_16.h"/>
        <files mask="GUIDRV_Lin_Opt_24.h"/>
        <files mask="GUIDRV_Lin_Opt_32.h"/>
        <files mask="GUIDRV_Lin_Opt_8.h"/>
        <files mask="GUIDRV_Lin_Private.h"/>
        <files mask="GUIDRV_NoOpt_1_8.h"/>
        <files mask="GUIDRV_Null.h"/>
        <files mask="GUIDRV_S1D13748.h"/>
        <files mask="GUIDRV_S1D13748_Private.h"/>
        <files mask="GUIDRV_S1D13781.h"/>
        <files mask="GUIDRV_S1D13781_Private.h"/>
        <files mask="GUIDRV_S1D15G00.h"/>
        <files mask="GUIDRV_SH_MEM.h"/>
        <files mask="GUIDRV_SH_MEM_Private.h"/>
        <files mask="GUIDRV_SLin.h"/>
        <files mask="GUIDRV_SLin_Private.h"/>
        <files mask="GUIDRV_SPage.h"/>
        <files mask="GUIDRV_SPage_Private.h"/>
        <files mask="GUIDRV_SSD1926.h"/>
        <files mask="GUIDRV_SSD1926_Private.h"/>
        <files mask="GUIDRV_Template.h"/>
        <files mask="GUIDRV_TemplateI.h"/>
        <files mask="GUIDRV_TemplateI_Private.h"/>
        <files mask="GUITDRV_ADS7846.h"/>
        <files mask="GUI_ARRAY.h"/>
        <files mask="GUI_ARRAY_Private.h"/>
        <files mask="GUI_BMP_Private.h"/>
        <files mask="GUI_ConfDefaults.h"/>
        <files mask="GUI_Debug.h"/>
        <files mask="GUI_FontIntern.h"/>
        <files mask="GUI_GCache_Private.h"/>
        <files mask="GUI_GIF_Private.h"/>
        <files mask="GUI_HOOK.h"/>
        <files mask="GUI_JPEG_Private.h"/>
        <files mask="GUI_Private.h"/>
        <files mask="GUI_Resource.h"/>
        <files mask="GUI_SIM_Win32.h"/>
        <files mask="GUI_SPRITE_Private.h"/>
        <files mask="GUI_SPY_Private.h"/>
        <files mask="GUI_SVG_Global.h"/>
        <files mask="GUI_SVG_NanoVG.h"/>
        <files mask="GUI_SVG_NemaVG.h"/>
        <files mask="GUI_SVG_OpenVG.h"/>
        <files mask="GUI_SVG_Private.h"/>
        <files mask="GUI_SVG_VGLite.h"/>
        <files mask="GUI_SetOrientation.h"/>
        <files mask="GUI_SetOrientationCX.h"/>
        <files mask="GUI_Type.h"/>
        <files mask="GUI_VNC.h"/>
        <files mask="GUI_Version.h"/>
        <files mask="GUI__BiDi2_Brackets_800.h"/>
        <files mask="GUI__BiDi2_Types_800.h"/>
        <files mask="Global.h"/>
        <files mask="HEADER.h"/>
        <files mask="HEADER_Private.h"/>
        <files mask="ICONVIEW.h"/>
        <files mask="ICONVIEW_Private.h"/>
        <files mask="IMAGE.h"/>
        <files mask="IMAGE_Private.h"/>
        <files mask="IP_FS.h"/>
        <files mask="JPEGConf.h"/>
        <files mask="KEYBOARD.h"/>
        <files mask="KEYBOARD_Private.h"/>
        <files mask="KNOB.h"/>
        <files mask="KNOB_Private.h"/>
        <files mask="LCD.h"/>
        <files mask="LCD_ConfDefaults.h"/>
        <files mask="LCD_Private.h"/>
        <files mask="LCD_Protected.h"/>
        <files mask="LCD_SIM.h"/>
        <files mask="LCD_X_8080_16.h"/>
        <files mask="LCD_X_8080_8.h"/>
        <files mask="LCD_X_I2C.h"/>
        <files mask="LCD_X_Serial_3Pin.h"/>
        <files mask="LISTBOX.h"/>
        <files mask="LISTBOX_Private.h"/>
        <files mask="LISTVIEW.h"/>
        <files mask="LISTVIEW_Private.h"/>
        <files mask="LISTWHEEL.h"/>
        <files mask="LISTWHEEL_Private.h"/>
        <files mask="MENU.h"/>
        <files mask="MENU_Private.h"/>
        <files mask="MESSAGEBOX.h"/>
        <files mask="MOVIE.h"/>
        <files mask="MOVIE_Private.h"/>
        <files mask="MULTIEDIT.h"/>
        <files mask="MULTIEDIT_Private.h"/>
        <files mask="MULTIPAGE.h"/>
        <files mask="MULTIPAGE_Private.h"/>
        <files mask="PROGBAR.h"/>
        <files mask="PROGBAR_Private.h"/>
        <files mask="QRCODE.h"/>
        <files mask="QRCODE_Private.h"/>
        <files mask="RADIO.h"/>
        <files mask="RADIO_Private.h"/>
        <files mask="ROTARY.h"/>
        <files mask="ROTARY_Private.h"/>
        <files mask="SCROLLBAR.h"/>
        <files mask="SCROLLBAR_Private.h"/>
        <files mask="SCROLLER.h"/>
        <files mask="SCROLLER_Private.h"/>
        <files mask="SEGGER.h"/>
        <files mask="SLIDER.h"/>
        <files mask="SLIDER_Private.h"/>
        <files mask="SPINBOX.h"/>
        <files mask="SPINBOX_Private.h"/>
        <files mask="SWIPELIST.h"/>
        <files mask="SWIPELIST_Private.h"/>
        <files mask="SWITCH.h"/>
        <files mask="SWITCH_Private.h"/>
        <files mask="TEXT.h"/>
        <files mask="TEXT_Private.h"/>
        <files mask="TICKER.h"/>
        <files mask="TICKER_Private.h"/>
        <files mask="TREEVIEW.h"/>
        <files mask="TREEVIEW_Private.h"/>
        <files mask="WHEEL.h"/>
        <files mask="WHEEL_Private.h"/>
        <files mask="WIDGET.h"/>
        <files mask="WIDGET_ID.h"/>
        <files mask="WINDOW_Private.h"/>
        <files mask="WM.h"/>
        <files mask="WM_GUI.h"/>
        <files mask="WM_Intern.h"/>
      </source>
      <source relative_path="emWin_Config" type="c_include">
        <files mask="GUIConf.h"/>
        <files mask="LCDConf.h"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="emWin_library/ARMGCC" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="libemWin_M4F.a"/>
      </source>
      <source toolchain="iar" relative_path="emWin_library/IAR" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="emWin_M4F.a"/>
      </source>
      <source toolchain="mdk" relative_path="emWin_library/Keil" type="lib" device_cores="cm4_MIMXRT1176xxxxx">
        <files mask="emWin_M4F.lib"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="emWin_library/ARMGCC" type="lib" device_cores="cm7_MIMXRT1176xxxxx">
        <files mask="libemWin_M7.a"/>
      </source>
      <source toolchain="iar" relative_path="emWin_library/IAR" type="lib" device_cores="cm7_MIMXRT1176xxxxx" fpu="true">
        <files mask="emWin_M7.a"/>
      </source>
      <source toolchain="mdk" relative_path="emWin_library/Keil" type="lib" device_cores="cm7_MIMXRT1176xxxxx" fpu="true">
        <files mask="emWin_M7.lib"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_emwin.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="emWin_header" type="c_include"/>
        <include_path relative_path="emWin_Config" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.dhara.dhara_ecc_bch.MIMXRT1176" name="ecc" brief="Middleware dhara dhara_ecc_bch" version="2.0.0" full_name="software ecc" category="Memories/Nand flash management stack" user_visible="true" type="middleware" package_base_path="middleware/dhara" project_base_path="dhara">
      <dependencies>
        <all>
          <component_dependency value="middleware.dhara.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="ecc" type="src">
        <files mask="bch.c"/>
        <files mask="gf13.c"/>
      </source>
      <source relative_path="ecc" type="c_include">
        <files mask="bch.h"/>
        <files mask="gf13.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_dhara_dhara_ecc_bch.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="ecc" type="c_include"/>
        <include_path relative_path="ecc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.dhara.dhara_ecc_hamming.MIMXRT1176" name="ecc" brief="Middleware dhara dhara_ecc_hamming" version="2.0.0" full_name="software ecc" category="Memories/Nand flash management stack" user_visible="true" type="middleware" package_base_path="middleware/dhara" project_base_path="dhara">
      <dependencies>
        <all>
          <component_dependency value="middleware.dhara.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="ecc" type="src">
        <files mask="hamming.c"/>
      </source>
      <source relative_path="ecc" type="c_include">
        <files mask="hamming.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_dhara_dhara_ecc_hamming.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="ecc" type="c_include"/>
        <include_path relative_path="ecc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.aws_iot.ota.MIMXRT1176" name="ota-for-aws-iot-embedded-sdk" brief="Client library for using the AWS Over-the-air Update service on embedded devices." version="3.4.0" full_name="AWS IoT Over-the-air Update Library" category="AWS IoT/AWS IoT Over-the-air Update" user_visible="false" type="middleware" package_base_path="middleware/aws_iot/ota" project_base_path="aws_iot/ota">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos.corejson.MIMXRT1176"/>
          <component_dependency value="middleware.tinycbor.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="ota.c"/>
        <files mask="ota_base64.c"/>
        <files mask="ota_cbor.c"/>
        <files mask="ota_http.c"/>
        <files mask="ota_interface.c"/>
        <files mask="ota_mqtt.c"/>
      </source>
      <source relative_path="source/include" type="c_include">
        <files mask="ota.h"/>
        <files mask="ota_appversion32.h"/>
        <files mask="ota_base64_private.h"/>
        <files mask="ota_cbor_private.h"/>
        <files mask="ota_config_defaults.h"/>
        <files mask="ota_http_interface.h"/>
        <files mask="ota_http_private.h"/>
        <files mask="ota_interface_private.h"/>
        <files mask="ota_mqtt_interface.h"/>
        <files mask="ota_mqtt_private.h"/>
        <files mask="ota_os_interface.h"/>
        <files mask="ota_platform_interface.h"/>
        <files mask="ota_private.h"/>
      </source>
      <source relative_path="source/include" type="doc">
        <files mask="stdbool.readme"/>
        <files mask="stdint.readme"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_aws_iot_ota.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/include" type="c_include"/>
        <include_path relative_path="source/include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.aws_iot.ota.freertos.MIMXRT1176" name="ota-for-aws-iot-embedded-sdk - freertos" brief="Client library for using the AWS Over-the-air Update service on embedded devices. FreeRTOS port." version="3.4.0" full_name="ota-for-aws-iot-embedded-sdk - FreeRTOS" category="AWS IoT/AWS IoT Over-the-air Update" user_visible="false" type="middleware" package_base_path="middleware/aws_iot/ota" project_base_path="aws_iot/ota">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/portable/os" type="src">
        <files mask="ota_os_freertos.c"/>
      </source>
      <source relative_path="source/portable/os" type="c_include">
        <files mask="ota_os_freertos.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_aws_iot_ota_freertos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/portable/os" type="c_include"/>
        <include_path relative_path="source/portable/os" type="asm_include"/>
      </include_paths>
    </component>
    <component id="docs.AWS.OTA.MIMXRT1176" name="doc_AWS_OTA" brief="Amazon FreeRTOS Over-The-Air documentation" version="1.0.0" full_name="AWS OTA documentation" category="docs/AWS IoT Over-the-air" user_visible="true" type="documentation" package_base_path="docs/AWS" project_base_path="AWS">
      <dependencies>
        <all>
          <component_dependency value="middleware.aws_iot.ota.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
    </component>
    <component id="middleware.aws_iot.jobs.MIMXRT1176" name="jobs-for-aws-iot-embedded-sdk" brief="Library for using the AWS IoT Jobs service on embedded devices." version="1.3.0" full_name="AWS IoT Jobs library" category="AWS IoT/AWS IoT Jobs" user_visible="false" type="middleware" package_base_path="middleware/aws_iot/jobs" project_base_path="aws_iot/jobs">
      <dependencies>
        <all>
          <component_dependency value="middleware.llhttp.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="jobs.c"/>
      </source>
      <source relative_path="source/include" type="c_include">
        <files mask="jobs.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_aws_iot_jobs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/include" type="c_include"/>
        <include_path relative_path="source/include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.iot_reference.kvstore.MIMXRT1176" name="kvstore" brief="kvstore, IoT reference common example component" version="1.0.0" full_name="kvstore" category="AWS IoT/IoT Reference" user_visible="false" type="middleware" package_base_path="components/aws_iot/kvstore" project_base_path="aws_iot/kvstore">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="kvstore.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="kvstore.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_iot_reference_kvstore.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.iot_reference.logging.MIMXRT1176" name="logging" brief="logging, IoT reference common example component" version="1.0.0" full_name="logging" category="AWS IoT/IoT Reference" user_visible="true" type="middleware" package_base_path="components/aws_iot/logging" project_base_path="aws_iot/logging">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="logging.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="logging.h"/>
        <files mask="logging_levels.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_iot_reference_logging.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.iot_reference.mqtt_agent.MIMXRT1176" name="mqtt_agent" brief="mqtt_agent, IoT reference common example component" version="1.0.0" full_name="mqtt_agent" category="AWS IoT/IoT Reference" user_visible="true" type="middleware" package_base_path="components/aws_iot/mqtt_agent" project_base_path="aws_iot/mqtt_agent">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1176"/>
          <component_dependency value="middleware.freertos.backoffalgorithm.MIMXRT1176"/>
          <component_dependency value="middleware.freertos.coremqtt-agent.MIMXRT1176"/>
          <component_dependency value="middleware.freertos.corepkcs11.MIMXRT1176"/>
          <component_dependency value="middleware.iot_reference.kvstore.MIMXRT1176"/>
          <component_dependency value="middleware.iot_reference.mqtt_agent_interface.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="mqtt_agent_task.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="mqtt_agent_task.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_iot_reference_mqtt_agent.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.iot_reference.mqtt_agent_interface.MIMXRT1176" name="mqtt-agent-interface" brief="mqtt-agent-interface, IoT reference common example component" version="1.0.0" full_name="mqtt-agent-interface" category="AWS IoT/IoT Reference" user_visible="false" type="middleware" package_base_path="components/aws_iot/mqtt-agent-interface" project_base_path="aws_iot/mqtt-agent-interface">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1176"/>
          <component_dependency value="middleware.freertos.coremqtt-agent.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="freertos_agent_message.c"/>
        <files mask="freertos_command_pool.c"/>
      </source>
      <source relative_path="include" type="c_include">
        <files mask="freertos_agent_message.h"/>
        <files mask="freertos_command_pool.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_iot_reference_mqtt_agent_interface.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.iot_reference.transport_mbedtls.MIMXRT1176" name="transport_mbedtls" brief="transport_mbedtls, IoT reference common example component" version="1.0.0" full_name="transport_mbedtls" category="AWS IoT/IoT Reference" user_visible="true" type="middleware" package_base_path="components/aws_iot/using_mbedtls_pkcs11" project_base_path="aws_iot/using_mbedtls_pkcs11">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos.coremqtt.MIMXRT1176"/>
          <component_dependency value="middleware.freertos.corepkcs11.MIMXRT1176"/>
          <component_dependency value="middleware.iot_reference.logging.MIMXRT1176"/>
          <component_dependency value="middleware.lwip.MIMXRT1176"/>
          <component_dependency value="middleware.mbedtls.MIMXRT1176"/>
          <component_dependency value="middleware.pkcs11.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="using_mbedtls.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="using_mbedtls.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_iot_reference_transport_mbedtls.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.iot_reference.transport_mbedtls_psa.MIMXRT1176" name="transport_mbedtls_psa" brief="transport_mbedtls_psa, IoT reference common example component" version="1.0.0" full_name="transport_mbedtls_psa" category="AWS IoT/IoT Reference" user_visible="true" type="middleware" package_base_path="components/aws_iot/using_mbedtls_psa" project_base_path="aws_iot/using_mbedtls_psa">
      <dependencies>
        <all>
          <component_dependency value="middleware.iot_reference.logging.MIMXRT1176"/>
          <component_dependency value="middleware.lwip.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="using_mbedtls.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="using_mbedtls.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_iot_reference_transport_mbedtls_psa.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.aws_iot.device_shadow.template.MIMXRT1176" name="device_shadow configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="device_shadow configuration template" category="AWS IoT/AWS IoT Device Shadow" user_visible="false" type="project_template" package_base_path="middleware/aws_iot/device-shadow" project_base_path="aws_iot/device-shadow">
      <dependencies>
        <all>
          <component_dependency value="middleware.iot_reference.logging.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="template" type="c_include">
        <files mask="shadow_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_aws_iot_device_shadow_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.aws_iot.device_shadow.MIMXRT1176" name="device_shadow" brief="Client library for using the AWS IoT Device Shadow service on embedded devices." version="1.3.0" full_name="AWS IoT Device Shadow library" category="AWS IoT/AWS IoT Device Shadow" user_visible="true" type="middleware" package_base_path="middleware/aws_iot/device-shadow" project_base_path="aws_iot/device-shadow">
      <dependencies>
        <all>
          <component_dependency value="middleware.aws_iot.device_shadow.template.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="shadow.c"/>
      </source>
      <source relative_path="source/include" type="c_include">
        <files mask="shadow.h"/>
        <files mask="shadow_config_defaults.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_aws_iot_device_shadow.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/include" type="c_include"/>
        <include_path relative_path="source/include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-common.MIMXRT1176" name="camera-common" brief="Driver camera-common" version="1.0.0" full_name="Driver camera-common" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/camera" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.video-common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_camera.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_camera-common.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-ap1302.MIMXRT1176" name="camera-device-ap1302" brief="Driver camera-device-ap1302" version="1.0.1" full_name="Driver camera-device-ap1302" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/camera/device/ap1302" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-device-common.MIMXRT1176"/>
          <component_dependency value="driver.video-i2c.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ap1302.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ap1302.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_camera-device-ap1302.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-common.MIMXRT1176" name="camera-device-common" brief="Driver camera-device-common" version="1.0.0" full_name="Driver camera-device-common" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/camera/device" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_camera_device.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_camera-device-common.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-max9286.MIMXRT1176" name="camera-device-max9286" brief="Driver camera-device-max9286" version="1.0.2" full_name="Driver camera-device-max9286" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/camera/device/max9286" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-device-common.MIMXRT1176"/>
          <component_dependency value="driver.video-i2c.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_max9286.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_max9286.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_camera-device-max9286.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-mt9m114.MIMXRT1176" name="camera-device-mt9m114" brief="Driver camera-device-mt9m114" version="1.0.2" full_name="Driver camera-device-mt9m114" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/camera/device/mt9m114" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-device-common.MIMXRT1176"/>
          <component_dependency value="driver.video-i2c.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mt9m114.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mt9m114.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_camera-device-mt9m114.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-ov5640.MIMXRT1176" name="camera-device-ov5640" brief="Driver camera-device-ov5640" version="1.0.1" full_name="Driver camera-device-ov5640" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/camera/device/ov5640" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-device-common.MIMXRT1176"/>
          <component_dependency value="driver.camera-device-sccb.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ov5640.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ov5640.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_camera-device-ov5640.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-ov7670.MIMXRT1176" name="camera-device-ov7670" brief="Driver camera-device-ov7670" version="1.0.2" full_name="Driver camera-device-ov7670" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/camera/device/ov7670" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-device-common.MIMXRT1176"/>
          <component_dependency value="driver.camera-device-sccb.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ov7670.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ov7670.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_camera-device-ov7670.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-ov7725.MIMXRT1176" name="camera-device-ov7725" brief="Driver camera-device-ov7725" version="1.0.1" full_name="Driver camera-device-ov7725" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/camera/device/ov7725" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-device-common.MIMXRT1176"/>
          <component_dependency value="driver.camera-device-sccb.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ov7725.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ov7725.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_camera-device-ov7725.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-sccb.MIMXRT1176" name="camera-device-sccb" brief="Driver camera-device-sccb" version="1.0.1" full_name="Driver camera-device-sccb" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/video/camera/device/sccb" project_base_path="video">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1176"/>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sccb.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sccb.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_camera-device-sccb.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-receiver-common.MIMXRT1176" name="camera-receiver-common" brief="Driver camera-receiver-common" version="1.0.0" full_name="Driver camera-receiver-common" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/camera/receiver" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_camera_receiver.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_camera-receiver-common.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-receiver-csi.MIMXRT1176" name="camera-receiver-csi" brief="Driver camera-receiver-csi" version="1.0.2" full_name="Driver camera-receiver-csi" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/camera/receiver/csi" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-receiver-common.MIMXRT1176"/>
          <component_dependency value="platform.drivers.csi.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_csi_camera_adapter.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_csi_camera_adapter.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_camera-receiver-csi.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-receiver-flexio.MIMXRT1176" name="camera-receiver-flexio" brief="Driver camera-receiver-flexio" version="1.0.2" full_name="Driver camera-receiver-flexio" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/camera/receiver/flexio" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-receiver-common.MIMXRT1176"/>
          <component_dependency value="platform.drivers.flexio_camera_edma.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_camera_adapter.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_camera_adapter.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_camera-receiver-flexio.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dbi.MIMXRT1176" name="dbi" brief="Driver dbi" version="1.0.0" full_name="Driver dbi" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dbi" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.video-common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dbi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dbi.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dbi.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dbi_flexio_edma.MIMXRT1176" name="dbi_flexio_edma" brief="Driver dbi_flexio_edma" version="1.0.1" full_name="Driver dbi_flexio_edma" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dbi/flexio" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.dbi.MIMXRT1176"/>
          <component_dependency value="platform.drivers.flexio_mculcd.MIMXRT1176"/>
          <component_dependency value="platform.drivers.flexio_mculcd_edma.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dbi_flexio_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dbi_flexio_edma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dbi_flexio_edma.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dc-fb-common.MIMXRT1176" name="dc-fb-common" brief="Driver dc-fb-common" version="1.0.0" full_name="Driver dc-fb-common" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dc" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.video-common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dc_fb.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dc-fb-common.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dc-fb-dbi.MIMXRT1176" name="dc-fb-dbi" brief="Driver dc-fb-dbi" version="1.0.0" full_name="Driver dc-fb-dbi" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dc/dbi" project_base_path="video">
      <defines>
        <define name="MCUX_DBI_LEGACY" value="0"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <component_dependency value="driver.dbi.MIMXRT1176"/>
          <component_dependency value="driver.dc-fb-common.MIMXRT1176"/>
          <component_dependency value="driver.display-common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dc_fb_dbi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dc_fb_dbi.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dc-fb-dbi.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dc-fb-dsi-cmd.MIMXRT1176" name="dc-fb-dsi-cmd" brief="Driver dc-fb-dsi-cmd" version="1.1.1" full_name="Driver dc-fb-dsi-cmd" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dc/dsi_cmd" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <component_dependency value="driver.dc-fb-common.MIMXRT1176"/>
          <component_dependency value="driver.display-common.MIMXRT1176"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dc_fb_dsi_cmd.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dc_fb_dsi_cmd.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dc-fb-dsi-cmd.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dc-fb-elcdif.MIMXRT1176" name="dc-fb-elcdif" brief="Driver dc-fb-elcdif" version="1.0.1" full_name="Driver dc-fb-elcdif" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dc/elcdif" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <component_dependency value="driver.dc-fb-common.MIMXRT1176"/>
          <component_dependency value="driver.display-common.MIMXRT1176"/>
          <component_dependency value="platform.drivers.elcdif.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dc_fb_elcdif.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dc_fb_elcdif.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dc-fb-elcdif.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dc-fb-lcdifv2.MIMXRT1176" name="dc-fb-lcdifv2" brief="Driver dc-fb-lcdifv2" version="1.0.2" full_name="Driver dc-fb-lcdifv2" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dc/lcdifv2" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <component_dependency value="driver.dc-fb-common.MIMXRT1176"/>
          <component_dependency value="driver.display-common.MIMXRT1176"/>
          <component_dependency value="platform.drivers.lcdifv2.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dc_fb_lcdifv2.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dc_fb_lcdifv2.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dc-fb-lcdifv2.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dc-fb-ssd1963.MIMXRT1176" name="dc-fb-ssd1963" brief="Driver dc-fb-ssd1963" version="1.0.2" full_name="Driver dc-fb-ssd1963" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dc/ssd1963" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <component_dependency value="driver.dc-fb-common.MIMXRT1176"/>
          <component_dependency value="driver.display-common.MIMXRT1176"/>
          <component_dependency value="driver.ssd1963.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dc_fb_ssd1963.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dc_fb_ssd1963.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dc-fb-ssd1963.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-adv7535.MIMXRT1176" name="display-adv7535" brief="Driver display-adv7535" version="1.0.1" full_name="Driver display-adv7535" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/adv7535" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT1176"/>
          <component_dependency value="driver.video-i2c.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adv7535.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adv7535.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_display-adv7535.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-sn65dsi83.MIMXRT1176" name="display-sn65dsi83" brief="Driver display-sn65dsi83" version="1.0.0" full_name="Driver display-sn65dsi83" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/sn65dsi83" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT1176"/>
          <component_dependency value="driver.video-i2c.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sn65dsi83.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sn65dsi83.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_display-sn65dsi83.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-common.MIMXRT1176" name="display-common" brief="Driver display-common" version="1.0.0" full_name="Driver display-common" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.video-common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_display.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_display-common.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-hx8394.MIMXRT1176" name="display-hx8394" brief="Driver display-hx8394" version="1.0.0" full_name="Driver display-hx8394" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/hx8394" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT1176"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_hx8394.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_hx8394.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_display-hx8394.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-it6161.MIMXRT1176" name="display-it6161" brief="Driver display-it6161" version="1.0.0" full_name="Driver display-it6161" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/it6161" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT1176"/>
          <component_dependency value="driver.video-i2c.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_it6161.h"/>
        <files mask="hdmi_tx.h"/>
        <files mask="mipi_rx.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_it6161.c"/>
        <files mask="hdmi_tx.c"/>
        <files mask="mipi_rx.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_display-it6161.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-it6263.MIMXRT1176" name="display-it6263" brief="Driver display-it6263" version="1.0.1" full_name="Driver display-it6263" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/it6263" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT1176"/>
          <component_dependency value="driver.video-i2c.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_it6263.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_it6263.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_display-it6263.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-mipi-dsi-cmd.MIMXRT1176" name="display-mipi-dsi-cmd" brief="Driver display-mipi-dsi-cmd" version="1.0.2" full_name="Driver display-mipi-dsi-cmd" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/video/display/mipi_dsi_cmd" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.mipi_dsi_split.MIMXRT1176"/>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mipi_dsi_cmd.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mipi_dsi_cmd.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_display-mipi-dsi-cmd.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-rm67162.MIMXRT1176" name="display-rm67162" brief="Driver display-rm67162" version="1.0.2" full_name="Driver display-rm67162" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/rm67162" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT1176"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rm67162.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rm67162.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_display-rm67162.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-co5300.MIMXRT1176" name="display-co5300" brief="Driver display-co5300" version="1.0.0" full_name="Driver display-co5300" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/co5300" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT1176"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_co5300.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_co5300.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_display-co5300.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-rm67191.MIMXRT1176" name="display-rm67191" brief="Driver display-rm67191" version="1.1.0" full_name="Driver display-rm67191" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/rm67191" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT1176"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rm67191.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rm67191.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_display-rm67191.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-rm68191.MIMXRT1176" name="display-rm68191" brief="Driver display-rm68191" version="1.1.0" full_name="Driver display-rm68191" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/rm68191" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT1176"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rm68191.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rm68191.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_display-rm68191.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-rm68200.MIMXRT1176" name="display-rm68200" brief="Driver display-rm68200" version="1.1.1" full_name="Driver display-rm68200" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/rm68200" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT1176"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rm68200.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rm68200.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_display-rm68200.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-rm692c9.MIMXRT1176" name="display-rm692c9" brief="Driver display-rm692c9" version="1.1.0" full_name="Driver display-rm692c9" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/rm692c9" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT1176"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rm692c9.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rm692c9.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_display-rm692c9.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-rpi.MIMXRT1176" name="display-rpi" brief="Driver display-rpi" version="1.0.0" full_name="Driver display-rpi" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/rpi" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT1176"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rpi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rpi.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_display-rpi.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.fbdev.MIMXRT1176" name="fbdev" brief="Driver fbdev" version="1.0.4" full_name="Driver fbdev" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/video/display/fbdev" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.video-common.MIMXRT1176"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_fbdev.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_fbdev.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_fbdev.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.video-common.MIMXRT1176" name="video-common" brief="Driver video-common" version="1.1.0" full_name="Driver video-common" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/video" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_video_common.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_video_common.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_video-common.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.video-i2c.MIMXRT1176" name="video-i2c" brief="Driver video-i2c" version="1.0.1" full_name="Driver video-i2c" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/i2c" project_base_path="video">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1176"/>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_video_i2c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_video_i2c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_video-i2c.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.lpuart_adapter.MIMXRT1176" name="lpuart_adapter" brief="Component lpuart_adapter" version="1.0.0" full_name="lpuart_adapter" category="Device/SDK Drivers" user_visible="true" type="utilities" package_base_path="components/uart" project_base_path="component/uart">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpuart.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpuart.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_lpuart_adapter.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.lpuart_dma_adapter.MIMXRT1176" name="lpuart_dma_adapter" brief="Component lpuart_dma_adapter" version="1.0.0" full_name="lpuart_dma_adapter" category="Device/SDK Drivers" user_visible="true" type="utilities" package_base_path="components/uart" project_base_path="component/uart">
      <defines>
        <define name="HAL_UART_DMA_ENABLE" value="0"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma.MIMXRT1176"/>
          <component_dependency value="component.lpuart_adapter.MIMXRT1176"/>
          <component_dependency value="component.timer_manager.MIMXRT1176"/>
          <component_dependency value="platform.drivers.lpuart.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpuart.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_lpuart_dma_adapter.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.ft5406_rt.MIMXRT1176" name="ft5406_rt" brief="Driver ft5406_rt" version="1.0.0" full_name="Driver ft5406_rt" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/touch/ft5406_rt" project_base_path="touchpanel">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ft5406_rt.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ft5406_rt.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_ft5406_rt.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.ft6x06.MIMXRT1176" name="ft6x06" brief="Driver ft6x06" version="1.0.0" full_name="Driver ft6x06" category="Device/SDK Drivers" user_visible="false" type="board_component" package_base_path="components/touch/ft6x06" project_base_path="touchpanel">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Driver_Include.I2C.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ft6x06.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ft6x06.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_ft6x06.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.timer_manager.MIMXRT1176" name="timer_manager" brief="Component timer_manager" version="1.0.0" full_name="Component timer_manager" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/timer_manager" project_base_path="component/timer_manager">
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="component.gpt_adapter.MIMXRT1176"/>
              <component_dependency value="platform.drivers.gpt.MIMXRT1176"/>
            </all>
            <all>
              <component_dependency value="component.pit_adapter.MIMXRT1176"/>
              <component_dependency value="platform.drivers.pit.MIMXRT1176"/>
            </all>
          </any_of>
          <component_dependency value="component.lists.MIMXRT1176"/>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_timer_manager.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_timer_manager.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_timer_manager.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.gpt_adapter.MIMXRT1176" name="gpt_adapter" brief="Component gpt_adapter" version="1.0.0" full_name="Component gpt_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/timer" project_base_path="component/timer">
      <defines>
        <define name="TIMER_PORT_TYPE_GPT" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.gpt.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_gpt.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_gpt_adapter.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.pit_adapter.MIMXRT1176" name="pit_adapter" brief="Component pit_adapter" version="1.0.0" full_name="Component pit_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/timer" project_base_path="component/timer">
      <defines>
        <define name="TIMER_PORT_TYPE_PIT" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.pit.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_pit.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_pit_adapter.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.gpt_time_stamp_adapter.MIMXRT1176" name="gpt time stamp adapter" brief="Component gpt time stamp adapter" version="1.0.0" full_name="component gpt time stamp adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/time_stamp" project_base_path="component/time_stamp">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.gpt.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_time_stamp.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_gpt_time_stamp.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_gpt_time_stamp_adapter.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.pit_time_stamp_adapter.MIMXRT1176" name="pit time stamp adapter" brief="Component pit time stamp adapter" version="1.0.0" full_name="component pit time stamp adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/time_stamp" project_base_path="component/time_stamp">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.pit.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_time_stamp.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_pit_time_stamp.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_pit_time_stamp_adapter.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.lpspi_adapter.MIMXRT1176" name="lpspi_adapter" brief="Component lpspi_adapter" version="1.0.0" full_name="Component lpspi_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/spi" project_base_path="component/spi">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <component_dependency value="platform.drivers.lpspi.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_spi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpspi.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_lpspi_adapter.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.silicon_id.MIMXRT1176" name="silicon_id" brief="Driver silicon_id" version="2.0.1" full_name="Driver silicon_id" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/silicon_id" project_base_path="component/silicon_id">
      <dependencies>
        <all>
          <component_dependency value="component.silicon_id_imxrt1170.MIMXRT1176"/>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_silicon_id.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_silicon_id.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_silicon_id.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="utility.shell.MIMXRT1176" name="shell" brief="Utility shell" version="1.0.0" full_name="Utility shell" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT1176/utilities/shell" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="component.lists.MIMXRT1176"/>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <component_dependency value="utility.str.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_shell.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_shell.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_shell.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager.MIMXRT1176" name="serial_manager" brief="Component serial_manager" version="1.0.1" full_name="Serial Manager" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="component.serial_manager_spi.MIMXRT1176"/>
            <component_dependency value="component.serial_manager_swo.MIMXRT1176"/>
            <component_dependency value="component.serial_manager_uart.MIMXRT1176"/>
            <component_dependency value="component.serial_manager_usb_cdc.MIMXRT1176"/>
            <component_dependency value="component.serial_manager_virtual.MIMXRT1176"/>
          </any_of>
          <component_dependency value="component.lists.MIMXRT1176"/>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_manager.h"/>
        <files mask="fsl_component_serial_port_internal.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_manager.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_serial_manager.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_spi.MIMXRT1176" name="serial_manager_spi" brief="Component serial_manager_spi" version="1.0.0" full_name="Serial Manager spi" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_SPI" value="1"/>
        <define name="SERIAL_PORT_TYPE_SPI_MASTER" value="1"/>
        <define name="SERIAL_PORT_TYPE_SPI_SLAVE" value="1"/>
        <define name="SERIAL_MANAGER_NON_BLOCKING_MODE" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.lpspi_adapter.MIMXRT1176"/>
          <component_dependency value="platform.drivers.lpspi.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_spi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_spi.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_serial_manager_spi.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_uart.MIMXRT1176" name="serial_manager_uart" brief="Component serial_manager_uart" version="1.0.0" full_name="Serial Manager uart" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_UART" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpuart.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_uart.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_serial_manager_uart.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_usb_cdc.MIMXRT1176" name="serial_manager_usb_cdc" brief="Component serial_manager_usb_cdc" version="1.0.0" full_name="Serial Manager USB CDC" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_USBCDC" value="1"/>
        <define name="DEBUG_CONSOLE_TRANSFER_NON_BLOCKING" value=""/>
        <define name="USB_DEVICE_CONFIG_CDC_ACM" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1176"/>
          <component_dependency value="middleware.usb.device.cdc.MIMXRT1176"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_usb.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_usb.c"/>
      </source>
      <source relative_path="usb_cdc_adapter" type="c_include">
        <files mask="usb_device_descriptor.h"/>
        <files mask="usb_device_config.h"/>
      </source>
      <source relative_path="usb_cdc_adapter" type="src">
        <files mask="usb_device_descriptor.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_serial_manager_usb_cdc.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="usb_cdc_adapter" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="usb_cdc_adapter" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.fxas21002cq.MIMXRT1176" name="fxas21002cq" brief="Driver fxas21002cq" version="1.0.0" full_name="Driver fxas21002cq" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/fxas21002cq" project_base_path="gyroscope">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1176"/>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_fxas.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_fxas.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_fxas21002cq.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.fxls8974cf.MIMXRT1176" name="fxls8974cf" brief="Driver fxls8974cf" version="1.0.0" full_name="Driver fxls8974cf" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/fxls8974cf" project_base_path="accel">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1176"/>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_fxls.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_fxls.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_fxls8974cf.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.fxos8700cq.MIMXRT1176" name="fxos8700cq" brief="Driver fxos8700cq" version="1.0.0" full_name="Driver fxos8700cq" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/fxos8700cq" project_base_path="accel">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1176"/>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_fxos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_fxos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_fxos8700cq.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.htu21d.MIMXRT1176" name="htu21d" brief="Driver htu21d" version="1.0.0" full_name="Driver htu21d" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/htu21d" project_base_path="htu">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1176"/>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_htu21d.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_htu21d.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_htu21d.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.icm42688p.MIMXRT1176" name="icm42688p" brief="Driver icm42688p" version="1.0.0" full_name="Driver icm42688p" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/icm42688p" project_base_path="icm42688p">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1176"/>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_icm42688p.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_icm42688p.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_icm42688p.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.lsm6dso.MIMXRT1176" name="lsm6dso" brief="Driver lsm6dso" version="1.0.0" full_name="Driver lsm6dso" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/lsm6dso" project_base_path="tilt_pedo">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1176"/>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lsm.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lsm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lsm6dso.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.max30101.MIMXRT1176" name="max30101" brief="Driver max30101" version="1.0.0" full_name="Driver max30101" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/max30101" project_base_path="heartrate">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1176"/>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_max.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_max.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_max30101.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.mma8451q.MIMXRT1176" name="mma8451q" brief="Driver mma8451q" version="1.0.0" full_name="Driver mma8451q" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/mma8451q" project_base_path="accel">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1176"/>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_mma8451q.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.mma8652fc.MIMXRT1176" name="mma8652fc" brief="Driver mma8652fc" version="1.0.0" full_name="Driver mma8652fc" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/mma8652fc" project_base_path="accel">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1176"/>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_mma8652fc.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.p3t1755.MIMXRT1176" name="p3t1755" brief="Driver p3t1755" version="2.0.0" full_name="Driver p3t1755" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/p3t1755" project_base_path="component/p3t1755">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1176"/>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_p3t1755.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_p3t1755.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_p3t1755.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.tsl2561.MIMXRT1176" name="tsl2561" brief="Driver tsl2561" version="1.0.0" full_name="Driver tsl2561" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/tsl2561" project_base_path="tsl">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1176"/>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_tsl2561.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_tsl2561.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_tsl2561.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.power_manager_framework.MIMXRT1176" name="power_manager_core" brief="Component power manager core level" version="2.0.0" full_name="Component power manager core" category="Device/SDK Drivers" user_visible="false" type="software_component" package_base_path="components/power_manager/core" project_base_path="component/power_manager">
      <defines>
        <define name="GENERIC_LIST_LIGHT" value="1"/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="platform.drivers.common.MIMXRT1176"/>
            <component_dependency value="platform.drivers.pgmc.MIMXRT1176"/>
            <component_dependency value="platform.drivers.ssarc.MIMXRT1176"/>
          </any_of>
          <component_dependency value="component.lists.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pm_core.h"/>
        <files mask="fsl_pm_config.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pm_core.c"/>
      </source>
      <source relative_path="../devices/RT1170" type="src">
        <files mask="fsl_pm_device.c"/>
      </source>
      <source relative_path="../devices/RT1170" type="c_include">
        <files mask="fsl_pm_device.h"/>
        <files mask="fsl_pm_device_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_power_manager_framework.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="../devices/RT1170" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="../devices/RT1170" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.pf1550.MIMXRT1176" name="pf1550" brief="Driver pf1550" version="1.0.0" full_name="Driver pf1550" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/pmic/pf1550" project_base_path="component/pmic/pf1550">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1176"/>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pf1550.c"/>
        <files mask="fsl_pf1550_charger.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pf1550.h"/>
        <files mask="fsl_pf1550_charger.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_pf1550.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.pf3000.MIMXRT1176" name="pf3000" brief="Driver pf3000" version="1.0.0" full_name="Driver pf3000" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/pmic/pf3000" project_base_path="component/pmic/pf3000">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1176"/>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pf3000.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pf3000.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_pf3000.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.pf5020.MIMXRT1176" name="pf5020" brief="Driver pf5020" version="2.0.0" full_name="Driver pf5020" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/pmic/pf5020" project_base_path="component/pmic/pf5020">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1176"/>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pf5020.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pf5020.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_pf5020.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.eth_phy_common.MIMXRT1176" name="phy-common" brief="Driver phy-common" version="2.0.0" full_name="Driver phy-common" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/phy" project_base_path="component/phy">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_phy.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_eth_phy_common.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.phyaqr113c.MIMXRT1176" name="phy-device-aqr113c" brief="Driver phy-device-aqr113c" version="2.0.0" full_name="Driver phy-device-aqr113c" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/phy/device/phyaqr113c" project_base_path="component/phy">
      <dependencies>
        <all>
          <component_dependency value="component.eth_phy_common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_phyaqr113c.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_phyaqr113c.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_phyaqr113c.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.phyar8031.MIMXRT1176" name="phy-device-ar8031" brief="Driver phy-device-ar8031" version="2.0.0" full_name="Driver phy-device-ar8031" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/phy/device/phyar8031" project_base_path="component/phy">
      <dependencies>
        <all>
          <component_dependency value="component.eth_phy_common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_phyar8031.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_phyar8031.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_phyar8031.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.phydp83848.MIMXRT1176" name="phy-device-dp83848" brief="Driver phy-device-dp83848" version="2.0.0" full_name="Driver phy-device-dp83848" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/phy/device/phydp83848" project_base_path="component/phy">
      <dependencies>
        <all>
          <component_dependency value="component.eth_phy_common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_phydp83848.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_phydp83848.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_phydp83848.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.phyksz8041.MIMXRT1176" name="phy-device-ksz8041" brief="Driver phy-device-ksz8041" version="2.0.0" full_name="Driver phy-device-ksz8041" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/phy/device/phyksz8041" project_base_path="component/phy">
      <dependencies>
        <all>
          <component_dependency value="component.eth_phy_common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_phyksz8041.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_phyksz8041.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_phyksz8041.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.phyksz8081.MIMXRT1176" name="phy-device-ksz8081" brief="Driver phy-device-ksz8081" version="2.0.0" full_name="Driver phy-device-ksz8081" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/phy/device/phyksz8081" project_base_path="component/phy">
      <dependencies>
        <all>
          <component_dependency value="component.eth_phy_common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_phyksz8081.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_phyksz8081.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_phyksz8081.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.phylan8720a.MIMXRT1176" name="phy-device-lan8720a" brief="Driver phy-device-lan8720a" version="2.0.0" full_name="Driver phy-device-lan8720a" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/phy/device/phylan8720a" project_base_path="component/phy">
      <dependencies>
        <all>
          <component_dependency value="component.eth_phy_common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_phylan8720a.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_phylan8720a.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_phylan8720a.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.phylan8741.MIMXRT1176" name="phy-device-lan8741" brief="Driver phy-device-lan8741" version="2.0.0" full_name="Driver phy-device-lan8741" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/phy/device/phylan8741" project_base_path="phy">
      <dependencies>
        <all>
          <component_dependency value="component.eth_phy_common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_phylan8741.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_phylan8741.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_phylan8741.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.phyrtl8201.MIMXRT1176" name="phy-device-rtl8201" brief="Driver phy-device-rtl8201" version="2.0.0" full_name="Driver phy-device-rtl8201" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/phy/device/phyrtl8201" project_base_path="component/phy">
      <dependencies>
        <all>
          <component_dependency value="component.eth_phy_common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_phyrtl8201.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_phyrtl8201.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_phyrtl8201.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.phyrtl8211f.MIMXRT1176" name="phy-device-rtl8211f" brief="Driver phy-device-rtl8211f" version="2.0.0" full_name="Driver phy-device-rtl8211f" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/phy/device/phyrtl8211f" project_base_path="component/phy">
      <dependencies>
        <all>
          <component_dependency value="component.eth_phy_common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_phyrtl8211f.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_phyrtl8211f.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_phyrtl8211f.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.phyvsc8541.MIMXRT1176" name="phy-device-vsc8541" brief="Driver phy-device-vsc8541" version="2.0.0" full_name="Driver phy-device-vsc8541" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/phy/device/phyvsc8541" project_base_path="component/phy">
      <dependencies>
        <all>
          <component_dependency value="component.eth_phy_common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_phyvsc8541.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_phyvsc8541.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_phyvsc8541.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.osa.MIMXRT1176" name="osa" brief="Component osa" version="1.0.0" full_name="Component osa" category="NXP Component/OS Abstraction Layer" user_visible="false" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <any_of>
            <all>
              <not>
                <component_dependency value="middleware.freertos-kernel.MIMXRT1176"/>
              </not>
              <component_dependency value="component.osa_bm.MIMXRT1176"/>
            </all>
            <all>
              <component_dependency value="component.osa_free_rtos.MIMXRT1176"/>
              <component_dependency value="middleware.freertos-kernel.MIMXRT1176"/>
            </all>
          </any_of>
          <component_dependency value="component.osa_interface.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_osa.cmake" hidden="true"/>
      </source>
    </component>
    <component id="component.osa_bm.MIMXRT1176" name="osa_bm" brief="Component osa_bm" version="1.0.0" full_name="Component osa_bm" category="NXP Component/OS Abstraction Layer" user_visible="true" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <defines>
        <define name="USE_RTOS" value="0"/>
      </defines>
      <dependencies>
        <all>
          <not>
            <component_dependency value="middleware.freertos-kernel.MIMXRT1176"/>
          </not>
          <component_dependency value="component.osa.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction_bm.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_os_abstraction_bm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_osa_bm.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.osa_free_rtos.MIMXRT1176" name="osa_free_rtos" brief="Component osa_free_rtos" version="1.0.0" full_name="Component osa_free_rtos" category="NXP Component/OS Abstraction Layer" user_visible="true" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <defines>
        <define name="USE_RTOS" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMXRT1176"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction_free_rtos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_os_abstraction_free_rtos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_osa_free_rtos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.osa_interface.MIMXRT1176" name="osa_interface" brief="Component osa interface" version="1.0.0" full_name="Component osa interface" category="NXP Component/OS Abstraction Layer" user_visible="true" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <component_dependency value="component.lists.MIMXRT1176"/>
          <component_dependency value="component.osa_template_config.MIMXRT1176"/>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_osa_interface.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.messaging.MIMXRT1176" name="messaging" brief="Component messaging" version="1.0.0" full_name="Component messaging" category="Device/SDK Drivers" user_visible="true" type="other" package_base_path="components/messaging" project_base_path="component/messaging">
      <dependencies>
        <all>
          <component_dependency value="component.lists.MIMXRT1176"/>
          <component_dependency value="component.mem_manager.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_messaging.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_messaging.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_messaging.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.mem_manager.MIMXRT1176" name="mem_manager" brief="Component mem_manager" version="1.0.0" full_name="Component mem_manager" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/mem_manager" project_base_path="component/mem_manager">
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="component.mem_manager_freertos.MIMXRT1176"/>
              <component_dependency value="middleware.freertos-kernel.MIMXRT1176"/>
            </all>
            <component_dependency value="component.mem_manager_legacy.MIMXRT1176"/>
            <component_dependency value="component.mem_manager_light.MIMXRT1176"/>
          </any_of>
          <component_dependency value="component.lists.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_mem_manager.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_mem_manager.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.mem_manager_legacy.MIMXRT1176" name="mem_manager_legacy" brief="Component mem_manager_legacy" version="1.0.0" full_name="Component mem_manager_legacy" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/mem_manager" project_base_path="component/mem_manager">
      <dependencies>
        <all>
          <component_dependency value="component.mem_manager.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_component_mem_manager.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_mem_manager_legacy.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.mem_manager_freertos.MIMXRT1176" name="mem_manager_freertos" brief="Component mem_manager_freertos" version="1.0.0" full_name="Component mem_manager_freertos" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/mem_manager" project_base_path="component/mem_manager">
      <dependencies>
        <all>
          <component_dependency value="component.mem_manager.MIMXRT1176"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_component_mem_manager_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_mem_manager_freertos.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.mem_manager_light.MIMXRT1176" name="mem_manager_light" brief="Component mem_manager_light" version="1.0.0" full_name="Component mem_manager_light" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/mem_manager" project_base_path="component/mem_manager">
      <dependencies>
        <all>
          <component_dependency value="component.mem_manager.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_component_mem_manager_light.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_mem_manager_light.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.log.MIMXRT1176" name="log" brief="Component log" version="1.0.0" full_name="Component log" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <component_dependency value="utility.str.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log.h"/>
        <files mask="fsl_component_log_config.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_log.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.log.backend.debug_console.MIMXRT1176" name="log_backend_debug_console" brief="Component log backend debug console" version="1.0.0" full_name="Component log backend debug console" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="component.log.MIMXRT1176"/>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <component_dependency value="utility.debug_console.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log_backend_debugconsole.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log_backend_debugconsole.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_log_backend_debug_console.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.log.backend.debug_console_lite.MIMXRT1176" name="log_backend_debug_console_lite" brief="Component log backend debug console lite" version="1.0.0" full_name="Component log backend debug console lite" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="component.log.MIMXRT1176"/>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <component_dependency value="utility.debug_console_lite.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log_backend_debugconsole.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log_backend_debugconsole.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_log_backend_debug_console_lite.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.log.backend.ringbuffer.MIMXRT1176" name="log_backend_ring_buffer" brief="Component log backend ring buffer" version="1.0.0" full_name="Component log backend ring buffer" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="component.log.MIMXRT1176"/>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log_backend_ringbuffer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log_backend_ringbuffer.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_log_backend_ringbuffer.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.lists.MIMXRT1176" name="lists" brief="Component lists" version="1.0.0" full_name="Component lists" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/lists" project_base_path="component/lists">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_generic_list.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_generic_list.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_lists.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.led.MIMXRT1176" name="led" brief="Component led" version="1.0.0" full_name="Component led" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/led" project_base_path="component/led">
      <dependencies>
        <all>
          <component_dependency value="component.igpio_adapter.MIMXRT1176"/>
          <component_dependency value="platform.drivers.igpio.MIMXRT1176"/>
          <component_dependency value="component.timer_manager.MIMXRT1176"/>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_led.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_led.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_led.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.flash_adapter.MIMXRT1176" name="flash_adapter" brief="Component flash_adapter" version="1.0.0" full_name="Component flash_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/internal_flash" project_base_path="component/internal_flash">
      <dependencies>
        <all>
          <component_dependency value="component.flexspi_nor_flash_adapter_rt1170evkb.MIMXRT1176"/>
          <board_dependency value="evkbmimxrt1170"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_flash_adapter.MIMXRT1176.cmake" hidden="true"/>
      </source>
    </component>
    <component id="component.flexspi_nor_flash_adapter_rt1170evkb.MIMXRT1176" name="flexspi_nor_flash_adapter_rt1170evkb" brief="Component flexspi_nor_flash_adapter_rt1170evkb" version="1.0.0" full_name="Component flexspi_nor_flash_adapter_rt1170evkb" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/internal_flash" project_base_path="component/internal_flash">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexspi.MIMXRT1176"/>
          <board_dependency value="evkbmimxrt1170"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="evkbmimxrt1170" type="src">
        <files mask="fsl_adapter_flexspi_nor_flash.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_flash.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_flexspi_nor_flash_adapter_rt1170evkb.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.lpi2c_adapter.MIMXRT1176" name="lpi2c_adapter" brief="Component lpi2c_adapter" version="1.0.0" full_name="Component lpi2c_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/i2c" project_base_path="component/i2c">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1176"/>
          <component_dependency value="component.i2c_adapter_interface.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpi2c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_lpi2c_adapter.MIMXRT1176.cmake" hidden="true"/>
      </source>
    </component>
    <component id="component.i2c_adapter_interface.MIMXRT1176" name="i2c_adapter_interface" brief="Component i2c_adapter_interface" version="1.0.0" full_name="Component i2c_adapter_interface" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/i2c" project_base_path="component/i2c">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1176"/>
          <component_dependency value="component.lpi2c_adapter.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_i2c.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_i2c_adapter_interface.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.igpio_adapter.MIMXRT1176" name="igpio_adapter" brief="Component igpio_adapter" version="1.0.1" full_name="Component igpio_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/gpio" project_base_path="component/gpio">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.igpio.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_gpio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_igpio.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_igpio_adapter.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.flash_nand_flexspi.MIMXRT1176" name="flash_nand_flexspi" brief="Component.flash_nand_flexspi" version="1.0.0" full_name="Component flash_nand_flexspi" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/flash" project_base_path="nand_flash">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexspi.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="nand" type="c_include">
        <files mask="fsl_nand_flash.h"/>
      </source>
      <source relative_path="nand/flexspi" type="src">
        <files mask="fsl_flexspi_nand_flash.c"/>
      </source>
      <source relative_path="nand/flexspi" type="c_include">
        <files mask="fsl_flexspi_nand_flash.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_flash_nand_flexspi.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="nand" type="c_include"/>
        <include_path relative_path="nand/flexspi" type="c_include"/>
        <include_path relative_path="nand" type="asm_include"/>
        <include_path relative_path="nand/flexspi" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.flash_nand_semc.MIMXRT1176" name="flash_nand_semc" brief="Component flash_nand_semc" version="1.0.0" full_name="Component flash_nand_semc" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/flash" project_base_path="nand_flash">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.semc.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="nand" type="c_include">
        <files mask="fsl_nand_flash.h"/>
      </source>
      <source relative_path="nand/semc" type="src">
        <files mask="fsl_semc_nand_flash.c"/>
      </source>
      <source relative_path="nand/semc" type="c_include">
        <files mask="fsl_semc_nand_flash.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_flash_nand_semc.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="nand" type="c_include"/>
        <include_path relative_path="nand/semc" type="c_include"/>
        <include_path relative_path="nand" type="asm_include"/>
        <include_path relative_path="nand/semc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.flash_nor_flexspi.MIMXRT1176" name="flash_nor_flexspi" brief="Component flash_nor_flexspi" version="1.0.0" full_name="Component flash_nor_flexspi" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/flash" project_base_path="nor_flash">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexspi.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="nor" type="c_include">
        <files mask="fsl_nor_flash.h"/>
      </source>
      <source relative_path="nor/flexspi" type="src">
        <files mask="fsl_flexspi_nor_flash.c"/>
      </source>
      <source relative_path="nor/flexspi" type="c_include">
        <files mask="fsl_flexspi_nor_flash.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_flash_nor_flexspi.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="nor" type="c_include"/>
        <include_path relative_path="nor/flexspi" type="c_include"/>
        <include_path relative_path="nor" type="asm_include"/>
        <include_path relative_path="nor/flexspi" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.flash_nor_lpspi.MIMXRT1176" name="flash_nor_lpspi" brief="Component flash_nor_lpspi" version="1.0.0" full_name="Component flash_nor_lpspi" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/flash" project_base_path="nor_flash">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpspi.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="nor" type="c_include">
        <files mask="fsl_nor_flash.h"/>
      </source>
      <source relative_path="nor/lpspi" type="src">
        <files mask="fsl_lpspi_nor_flash.c"/>
        <files mask="fsl_lpspi_mem_adapter.c"/>
      </source>
      <source relative_path="nor/lpspi" type="c_include">
        <files mask="fsl_lpspi_nor_flash.h"/>
        <files mask="fsl_lpspi_mem_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_flash_nor_lpspi.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="nor" type="c_include"/>
        <include_path relative_path="nor/lpspi" type="c_include"/>
        <include_path relative_path="nor" type="asm_include"/>
        <include_path relative_path="nor/lpspi" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.mflash_onchip.MIMXRT1176" name="mflash onchip" brief="mflash onchip" version="1.0.0" full_name="mflash onchip" category="Device/SDK Drivers" user_visible="false" type="software_component" package_base_path="components/flash/mflash" project_base_path="flash/mflash">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="platform.drivers.cache_armv7_m7.MIMXRT1176"/>
            <component_dependency value="platform.drivers.cache_lmem.MIMXRT1176"/>
            <component_dependency value="driver.romapi.MIMXRT1176"/>
          </any_of>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_mflash_onchip.MIMXRT1176.cmake" hidden="true"/>
      </source>
    </component>
    <component id="component.mflash_offchip.MIMXRT1176" name="mflash offchip" brief="mflash offchip" version="1.0.0" full_name="mflash offchip" category="Device/SDK Drivers" user_visible="false" type="software_component" package_base_path="components/flash/mflash" project_base_path="flash/mflash">
      <defines>
        <define name="MFLASH_FILE_BASEADDR" value="14221312"/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="platform.drivers.cache_armv7_m7.MIMXRT1176"/>
            <component_dependency value="platform.drivers.cache_lmem.MIMXRT1176"/>
            <component_dependency value="platform.drivers.flexspi.MIMXRT1176"/>
            <component_dependency value="driver.romapi.MIMXRT1176"/>
          </any_of>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="mflash_common.h"/>
        <files mask="mflash_file.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="mflash_file.c"/>
      </source>
      <source relative_path="mimxrt1170evkb" type="src" boards="evkbmimxrt1170">
        <files mask="mflash_drv.c"/>
      </source>
      <source relative_path="mimxrt1170evkb" type="c_include" boards="evkbmimxrt1170">
        <files mask="mflash_drv.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_mflash_offchip.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="mimxrt1170evkb" type="c_include" boards="evkbmimxrt1170"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="mimxrt1170evkb" type="asm_include" boards="evkbmimxrt1170"/>
      </include_paths>
    </component>
    <component id="component.exception_handling_cm7.MIMXRT1176" name="exception_handling_cm7" brief="Component exception_handling_cm7" version="1.0.0" full_name="Component exception_handling_cm7" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/exception_handling" project_base_path="component/exception_handling">
      <dependencies>
        <all>
          <component_dependency value="platform.utilities.assert.MIMXRT1176"/>
          <component_dependency value="utility.debug_console.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_exception_handling.h"/>
      </source>
      <source relative_path="cm7" type="src">
        <files mask="fsl_component_exception_handling.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_exception_handling_cm7.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_wifi_nxp.MIMXRT1176" name="edgefast_wifi_nxp" brief="Edgefast Wi-Fi NXP is a blocking layer for Wi-Fi NXP" version="1.0.0" full_name="Edgefast Wi-Fi NXP" category="Wireless/Edgefast Wi-Fi" user_visible="true" type="middleware" package_base_path="components/edgefast_wifi" project_base_path="edgefast_wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1176"/>
          <component_dependency value="middleware.lwip.MIMXRT1176"/>
          <component_dependency value="middleware.wifi.MIMXRT1176"/>
          <component_dependency value="middleware.wifi.osa_free_rtos.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="include" type="c_include">
        <files mask="wpl.h"/>
      </source>
      <source relative_path="source" type="src">
        <files mask="wpl_nxp.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_wifi_nxp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.ili9341.MIMXRT1176" name="ili9341" brief="Driver ili9341" version="1.0.2" full_name="Driver ili9341" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/display/ili9341" project_base_path="lcdc">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ili9341.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ili9341.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_ili9341.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.psp27801.MIMXRT1176" name="psp27801" brief="Driver psp27801" version="1.0.0" full_name="Driver psp27801" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/display/psp27801" project_base_path="oled">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_psp27801.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_psp27801.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_psp27801.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.ssd1963.MIMXRT1176" name="ssd1963" brief="Driver ssd1963" version="1.2.0" full_name="Driver ssd1963" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/display/ssd1963" project_base_path="lcdc">
      <dependencies>
        <all>
          <component_dependency value="driver.dbi.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ssd1963.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ssd1963.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_ssd1963.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.st7796s.MIMXRT1176" name="st7796s" brief="Driver st7796s" version="1.0.0" full_name="Driver st7796s" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/display/st7796s" project_base_path="lcdc">
      <dependencies>
        <all>
          <component_dependency value="driver.dbi.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_st7796s.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_st7796s.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_st7796s.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.common_task.MIMXRT1176" name="common_task" brief="Component common_task" version="1.0.0" full_name="Component common_task" category="NXP Component/OS Abstraction Layer" user_visible="true" type="software_component" package_base_path="components/common_task" project_base_path="component/common_task">
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_common_task.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_common_task.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_common_task.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.codec_i2c.MIMXRT1176" name="codec_i2c" brief="Component codec_i2c" version="2.1.0" full_name="Component codec_i2c" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/i2c" project_base_path="codec">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.i2c_adapter_interface.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_codec_i2c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_codec_i2c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_codec_i2c.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.ak4497.MIMXRT1176" name="ak4497" brief="Driver ak4497" version="2.1.2" full_name="Driver ak4497" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/ak4497" project_base_path="codec">
      <defines>
        <define name="CODEC_AK4497_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.ak4497_adapter.MIMXRT1176"/>
          <component_dependency value="component.codec_adapters.MIMXRT1176"/>
          <component_dependency value="component.codec_i2c.MIMXRT1176"/>
          <component_dependency value="driver.codec.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ak4497.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ak4497.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_ak4497.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.cs42448.MIMXRT1176" name="cs42448" brief="Driver cs42448" version="2.0.1" full_name="Driver cs42448" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/cs42448" project_base_path="codec">
      <defines>
        <define name="CODEC_CS42448_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT1176"/>
          <component_dependency value="component.codec_i2c.MIMXRT1176"/>
          <component_dependency value="component.cs42448_adapter.MIMXRT1176"/>
          <component_dependency value="driver.codec.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cs42448.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_cs42448.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_cs42448.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.cs42888.MIMXRT1176" name="cs42888" brief="Driver cs42888" version="2.1.3" full_name="Driver cs42888" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/cs42888" project_base_path="codec">
      <defines>
        <define name="CODEC_CS42888_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT1176"/>
          <component_dependency value="component.codec_i2c.MIMXRT1176"/>
          <component_dependency value="component.cs42888_adapter.MIMXRT1176"/>
          <component_dependency value="driver.codec.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cs42888.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_cs42888.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_cs42888.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dialog7212.MIMXRT1176" name="dialog7212" brief="Driver dialog7212" version="2.3.1" full_name="Driver dialog7212" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/da7212" project_base_path="codec">
      <defines>
        <define name="CODEC_DA7212_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT1176"/>
          <component_dependency value="component.codec_i2c.MIMXRT1176"/>
          <component_dependency value="component.da7212_adapter.MIMXRT1176"/>
          <component_dependency value="driver.codec.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dialog7212.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dialog7212.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dialog7212.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.pcm186x.MIMXRT1176" name="pcm186x" brief="Driver pcm186x" version="2.0.1" full_name="Driver pcm186x" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/pcm186x" project_base_path="codec">
      <defines>
        <define name="CODEC_PCM186X_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT1176"/>
          <component_dependency value="component.codec_i2c.MIMXRT1176"/>
          <component_dependency value="component.pcm186x_adapter.MIMXRT1176"/>
          <component_dependency value="driver.codec.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pcm186x.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pcm186x.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_pcm186x.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.pcm512x.MIMXRT1176" name="pcm512x" brief="Driver pcm512x" version="2.0.1" full_name="Driver pcm512x" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/pcm512x" project_base_path="codec">
      <defines>
        <define name="CODEC_PCM512X_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT1176"/>
          <component_dependency value="component.codec_i2c.MIMXRT1176"/>
          <component_dependency value="component.pcm512x_adapter.MIMXRT1176"/>
          <component_dependency value="driver.codec.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pcm512x.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pcm512x.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_pcm512x.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.sgtl5000.MIMXRT1176" name="sgtl5000" brief="Driver sgtl5000" version="2.1.1" full_name="Driver sgtl5000" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/sgtl5000" project_base_path="codec">
      <defines>
        <define name="CODEC_SGTL5000_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT1176"/>
          <component_dependency value="component.codec_i2c.MIMXRT1176"/>
          <component_dependency value="component.sgtl_adapter.MIMXRT1176"/>
          <component_dependency value="driver.codec.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sgtl5000.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sgtl5000.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_sgtl5000.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.tfa9896.MIMXRT1176" name="tfa9896" brief="Driver tfa9896" version="6.0.2" full_name="Driver tfa9896" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/tfa9896" project_base_path="codec">
      <defines>
        <define name="CODEC_TFA9896_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT1176"/>
          <component_dependency value="component.codec_i2c.MIMXRT1176"/>
          <component_dependency value="component.tfa9896_adapter.MIMXRT1176"/>
          <component_dependency value="driver.codec.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_tfa9896_buffer.h"/>
        <files mask="fsl_tfa9896.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_hal_registers.c"/>
        <files mask="fsl_tfa9896.c"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="MIMXRT595595-EVK_TFA9896_SW.pdf"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_tfa9896.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.tfa9xxx.MIMXRT1176" name="tfa9xxx" brief="Driver tfa9xxx" version="2.1.0" full_name="Driver tfa9xxx" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/tfa9xxx" project_base_path="codec/tfa9xxx">
      <defines>
        <define name="CODEC_TFA9XXX_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT1176"/>
          <component_dependency value="component.codec_i2c.MIMXRT1176"/>
          <component_dependency value="component.tfa9xxx_adapter.MIMXRT1176"/>
          <component_dependency value="driver.codec.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="tfa_config_TFA9892N1.h"/>
        <files mask="tfa_config_TFA9894N1.h"/>
        <files mask="tfa_config_TFA9894N2.h"/>
        <files mask="fsl_tfa9xxx.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_tfa9xxx.c"/>
        <files mask="fsl_tfa9xxx_IMX.c"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="README.md"/>
      </source>
      <source relative_path="vas_tfa_drv" type="c_include">
        <files mask="config.h"/>
        <files mask="tfa2_container.h"/>
        <files mask="tfa2_dev.h"/>
        <files mask="tfa2_dsp_fw.h"/>
        <files mask="tfa2_haptic.h"/>
        <files mask="tfa9xxx_parameters.h"/>
        <files mask="tfa_haptic_fw_defs.h"/>
      </source>
      <source relative_path="vas_tfa_drv" type="src">
        <files mask="tfa2_container.c"/>
        <files mask="tfa2_dev.c"/>
        <files mask="tfa2_haptic.c"/>
        <files mask="tfa2_init.c"/>
        <files mask="tfa_container_crc32.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_tfa9xxx.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="vas_tfa_drv" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="vas_tfa_drv" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.tfa9xxx_hal.MIMXRT1176" name="tfa9xxx_hal" brief="Driver tfa9xxx_hal" version="2.1.0" full_name="Driver tfa9xxx_hal" category="Device/SDK Drivers" user_visible="false" type="software_component" package_base_path="components/codec/tfa9xxx" project_base_path="codec/tfa9xxx">
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT1176"/>
          <component_dependency value="component.codec_i2c.MIMXRT1176"/>
          <component_dependency value="driver.codec.MIMXRT1176"/>
          <component_dependency value="driver.tfa9xxx.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="tfa_device_hal.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="tfa_device_hal.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_tfa9xxx_hal.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.wm8524.MIMXRT1176" name="wm8524" brief="Driver wm8524" version="2.1.1" full_name="Driver wm8524" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/wm8524" project_base_path="codec">
      <defines>
        <define name="CODEC_WM8524_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT1176"/>
          <component_dependency value="component.codec_i2c.MIMXRT1176"/>
          <component_dependency value="component.wm8524_adapter.MIMXRT1176"/>
          <component_dependency value="driver.codec.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wm8524.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wm8524.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_wm8524.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.wm8904.MIMXRT1176" name="wm8904" brief="Driver wm8904" version="2.5.1" full_name="Driver wm8904" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/wm8904" project_base_path="codec">
      <defines>
        <define name="CODEC_WM8904_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT1176"/>
          <component_dependency value="component.codec_i2c.MIMXRT1176"/>
          <component_dependency value="component.wm8904_adapter.MIMXRT1176"/>
          <component_dependency value="driver.codec.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wm8904.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wm8904.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_wm8904.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.wm8960.MIMXRT1176" name="wm8960" brief="Driver wm8960" version="2.2.4" full_name="Driver wm8960" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/wm8960" project_base_path="codec">
      <defines>
        <define name="CODEC_WM8960_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT1176"/>
          <component_dependency value="component.codec_i2c.MIMXRT1176"/>
          <component_dependency value="component.wm8960_adapter.MIMXRT1176"/>
          <component_dependency value="driver.codec.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wm8960.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wm8960.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_wm8960.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.wm8962.MIMXRT1176" name="wm8962" brief="Driver wm8962" version="2.2.0" full_name="Driver wm8962" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/wm8962" project_base_path="codec">
      <defines>
        <define name="CODEC_WM8962_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT1176"/>
          <component_dependency value="component.codec_i2c.MIMXRT1176"/>
          <component_dependency value="component.wm8962_adapter.MIMXRT1176"/>
          <component_dependency value="driver.codec.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wm8962.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wm8962.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_wm8962.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.button.MIMXRT1176" name="button" brief="Component button" version="1.0.0" full_name="Component button" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/button" project_base_path="component/button">
      <dependencies>
        <all>
          <component_dependency value="component.igpio_adapter.MIMXRT1176"/>
          <component_dependency value="platform.drivers.igpio.MIMXRT1176"/>
          <component_dependency value="component.timer_manager.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_button.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_button.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_button.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.audio_sai_edma_adapter.MIMXRT1176" name="sai_edma_adapter" brief="Component sai_edma_adapter" version="1.0.0" full_name="Component sai_edma_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/audio" project_base_path="component/audio">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.sai_edma.MIMXRT1176"/>
          <device_dependency value="MIMXRT1176xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_audio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_sai.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_audio_sai_edma_adapter.MIMXRT1176.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.devices.MIMXRT1173_debugger.MIMXRT1173" name="Device MIMXRT1173_debugger" brief="Device MIMXRT1173_debugger" version="1.0.0" full_name="Device MIMXRT1173_debugger" category="Device/SDK Utilities" user_visible="true" type="debugger" package_base_path="devices/MIMXRT1173" project_base_path="svd">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="./" type="xml" device_cores="cm4_MIMXRT1173xxxxx">
        <files mask="MIMXRT1173_cm4.xml"/>
      </source>
      <source relative_path="./" type="xml" device_cores="cm7_MIMXRT1173xxxxx">
        <files mask="MIMXRT1173_cm7.xml"/>
      </source>
    </component>
    <component id="platform.drivers.clock.MIMXRT1173" name="clock" brief="Clock Driver" version="2.5.6" full_name="Clock Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_clock.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_clock.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pmu_1.MIMXRT1173" name="pmu" brief="PMU Driver" version="2.1.2" full_name="PMU Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pmu.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pmu.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.xip_device.MIMXRT1173" name="device_boot_header" brief="Device Boot Header" version="1.0.0" full_name="XIP Device Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/xip" project_base_path="xip">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexspi_nor_boot.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexspi_nor_boot.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="tools.MIMXRT1173" name="cmake_toolchain" brief="Cmake_toolchain" version="1.0.0" full_name="Cmake_toolchain" category="Device/SDK Utilities" user_visible="true" type="other" package_base_path="tools/cmake_toolchain_files" project_base_path="cmake_toolchain_files">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="./" type="script">
        <files mask="armgcc.cmake"/>
        <files mask="xcc.cmake"/>
        <files mask="xclang.cmake"/>
        <files mask="armgcc_force_cpp.cmake"/>
        <files mask="mcux_config.cmake"/>
        <files mask="riscvllvm.cmake"/>
      </source>
    </component>
    <component id="CMSIS_DSP_Include.MIMXRT1173" name="CMSIS_DSP_Library_Header" brief="CMSIS-DSP Library Header" version="1.16.2" full_name="CMSIS DSP Library Header" category="CMSIS/DSP" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/DSP" project_base_path="CMSIS/DSP">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_common_tables_f16.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_const_structs_f16.h"/>
        <files mask="arm_helium_utils.h"/>
        <files mask="arm_math.h"/>
        <files mask="arm_math_f16.h"/>
        <files mask="arm_math_memory.h"/>
        <files mask="arm_math_types.h"/>
        <files mask="arm_math_types_f16.h"/>
        <files mask="arm_mve_tables.h"/>
        <files mask="arm_mve_tables_f16.h"/>
        <files mask="arm_vec_math.h"/>
        <files mask="arm_vec_math_f16.h"/>
      </source>
      <source relative_path="Include/dsp" type="c_include">
        <files mask="basic_math_functions.h"/>
        <files mask="basic_math_functions_f16.h"/>
        <files mask="bayes_functions.h"/>
        <files mask="bayes_functions_f16.h"/>
        <files mask="complex_math_functions.h"/>
        <files mask="complex_math_functions_f16.h"/>
        <files mask="controller_functions.h"/>
        <files mask="controller_functions_f16.h"/>
        <files mask="debug.h"/>
        <files mask="distance_functions.h"/>
        <files mask="distance_functions_f16.h"/>
        <files mask="fast_math_functions.h"/>
        <files mask="fast_math_functions_f16.h"/>
        <files mask="filtering_functions.h"/>
        <files mask="filtering_functions_f16.h"/>
        <files mask="interpolation_functions.h"/>
        <files mask="interpolation_functions_f16.h"/>
        <files mask="matrix_functions.h"/>
        <files mask="matrix_functions_f16.h"/>
        <files mask="matrix_utils.h"/>
        <files mask="none.h"/>
        <files mask="quaternion_math_functions.h"/>
        <files mask="statistics_functions.h"/>
        <files mask="statistics_functions_f16.h"/>
        <files mask="support_functions.h"/>
        <files mask="support_functions_f16.h"/>
        <files mask="svm_defines.h"/>
        <files mask="svm_functions.h"/>
        <files mask="svm_functions_f16.h"/>
        <files mask="transform_functions.h"/>
        <files mask="transform_functions_f16.h"/>
        <files mask="utils.h"/>
        <files mask="window_functions.h"/>
      </source>
      <source relative_path="PrivateInclude" type="c_include">
        <files mask="arm_sorting.h"/>
        <files mask="arm_vec_fft.h"/>
        <files mask="arm_vec_filtering.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_DSP_Include.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="PrivateInclude" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
        <include_path relative_path="PrivateInclude" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_DSP_Source.MIMXRT1173" name="CMSIS_DSP_Library_Source" brief="CMSIS-DSP Library" version="1.16.2" full_name="CMSIS DSP Library Source" category="CMSIS/DSP" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/DSP" project_base_path="CMSIS/DSP">
      <defines>
        <define name="DISABLEFLOAT16" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_common_tables_f16.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_const_structs_f16.h"/>
        <files mask="arm_helium_utils.h"/>
        <files mask="arm_math.h"/>
        <files mask="arm_math_f16.h"/>
        <files mask="arm_math_memory.h"/>
        <files mask="arm_math_types.h"/>
        <files mask="arm_math_types_f16.h"/>
        <files mask="arm_mve_tables.h"/>
        <files mask="arm_mve_tables_f16.h"/>
        <files mask="arm_vec_math.h"/>
        <files mask="arm_vec_math_f16.h"/>
      </source>
      <source relative_path="Include/dsp" type="c_include">
        <files mask="basic_math_functions.h"/>
        <files mask="basic_math_functions_f16.h"/>
        <files mask="bayes_functions.h"/>
        <files mask="bayes_functions_f16.h"/>
        <files mask="complex_math_functions.h"/>
        <files mask="complex_math_functions_f16.h"/>
        <files mask="controller_functions.h"/>
        <files mask="controller_functions_f16.h"/>
        <files mask="debug.h"/>
        <files mask="distance_functions.h"/>
        <files mask="distance_functions_f16.h"/>
        <files mask="fast_math_functions.h"/>
        <files mask="fast_math_functions_f16.h"/>
        <files mask="filtering_functions.h"/>
        <files mask="filtering_functions_f16.h"/>
        <files mask="interpolation_functions.h"/>
        <files mask="interpolation_functions_f16.h"/>
        <files mask="matrix_functions.h"/>
        <files mask="matrix_functions_f16.h"/>
        <files mask="matrix_utils.h"/>
        <files mask="none.h"/>
        <files mask="quaternion_math_functions.h"/>
        <files mask="statistics_functions.h"/>
        <files mask="statistics_functions_f16.h"/>
        <files mask="support_functions.h"/>
        <files mask="support_functions_f16.h"/>
        <files mask="svm_defines.h"/>
        <files mask="svm_functions.h"/>
        <files mask="svm_functions_f16.h"/>
        <files mask="transform_functions.h"/>
        <files mask="transform_functions_f16.h"/>
        <files mask="utils.h"/>
        <files mask="window_functions.h"/>
      </source>
      <source relative_path="PrivateInclude" type="c_include">
        <files mask="arm_sorting.h"/>
        <files mask="arm_vec_fft.h"/>
        <files mask="arm_vec_filtering.h"/>
      </source>
      <source relative_path="Source/BasicMathFunctions" type="src">
        <files mask="BasicMathFunctions.c"/>
        <files mask="BasicMathFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/BasicMathFunctions" type="src">
        <files mask="arm_abs_f32.c"/>
        <files mask="arm_abs_f64.c"/>
        <files mask="arm_abs_q15.c"/>
        <files mask="arm_abs_q31.c"/>
        <files mask="arm_abs_q7.c"/>
        <files mask="arm_add_f32.c"/>
        <files mask="arm_add_f64.c"/>
        <files mask="arm_add_q15.c"/>
        <files mask="arm_add_q31.c"/>
        <files mask="arm_add_q7.c"/>
        <files mask="arm_and_u16.c"/>
        <files mask="arm_and_u32.c"/>
        <files mask="arm_and_u8.c"/>
        <files mask="arm_clip_f32.c"/>
        <files mask="arm_clip_q15.c"/>
        <files mask="arm_clip_q31.c"/>
        <files mask="arm_clip_q7.c"/>
        <files mask="arm_dot_prod_f32.c"/>
        <files mask="arm_dot_prod_f64.c"/>
        <files mask="arm_dot_prod_q15.c"/>
        <files mask="arm_dot_prod_q31.c"/>
        <files mask="arm_dot_prod_q7.c"/>
        <files mask="arm_mult_f32.c"/>
        <files mask="arm_mult_f64.c"/>
        <files mask="arm_mult_q15.c"/>
        <files mask="arm_mult_q31.c"/>
        <files mask="arm_mult_q7.c"/>
        <files mask="arm_negate_f32.c"/>
        <files mask="arm_negate_f64.c"/>
        <files mask="arm_negate_q15.c"/>
        <files mask="arm_negate_q31.c"/>
        <files mask="arm_negate_q7.c"/>
        <files mask="arm_not_u16.c"/>
        <files mask="arm_not_u32.c"/>
        <files mask="arm_not_u8.c"/>
        <files mask="arm_offset_f32.c"/>
        <files mask="arm_offset_f64.c"/>
        <files mask="arm_offset_q15.c"/>
        <files mask="arm_offset_q31.c"/>
        <files mask="arm_offset_q7.c"/>
        <files mask="arm_or_u16.c"/>
        <files mask="arm_or_u32.c"/>
        <files mask="arm_or_u8.c"/>
        <files mask="arm_scale_f32.c"/>
        <files mask="arm_scale_f64.c"/>
        <files mask="arm_scale_q15.c"/>
        <files mask="arm_scale_q31.c"/>
        <files mask="arm_scale_q7.c"/>
        <files mask="arm_shift_q15.c"/>
        <files mask="arm_shift_q31.c"/>
        <files mask="arm_shift_q7.c"/>
        <files mask="arm_sub_f32.c"/>
        <files mask="arm_sub_f64.c"/>
        <files mask="arm_sub_q15.c"/>
        <files mask="arm_sub_q31.c"/>
        <files mask="arm_sub_q7.c"/>
        <files mask="arm_xor_u16.c"/>
        <files mask="arm_xor_u32.c"/>
        <files mask="arm_xor_u8.c"/>
        <files mask="arm_abs_f16.c"/>
        <files mask="arm_add_f16.c"/>
        <files mask="arm_clip_f16.c"/>
        <files mask="arm_dot_prod_f16.c"/>
        <files mask="arm_mult_f16.c"/>
        <files mask="arm_negate_f16.c"/>
        <files mask="arm_offset_f16.c"/>
        <files mask="arm_scale_f16.c"/>
        <files mask="arm_sub_f16.c"/>
      </source>
      <source relative_path="Source/BayesFunctions" type="src">
        <files mask="BayesFunctions.c"/>
        <files mask="BayesFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/BayesFunctions" type="src">
        <files mask="arm_gaussian_naive_bayes_predict_f32.c"/>
        <files mask="arm_gaussian_naive_bayes_predict_f16.c"/>
      </source>
      <source relative_path="Source/CommonTables" type="src">
        <files mask="CommonTables.c"/>
        <files mask="CommonTablesF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/CommonTables" type="src">
        <files mask="arm_common_tables.c"/>
        <files mask="arm_const_structs.c"/>
        <files mask="arm_mve_tables.c"/>
        <files mask="arm_common_tables_f16.c"/>
        <files mask="arm_const_structs_f16.c"/>
        <files mask="arm_mve_tables_f16.c"/>
      </source>
      <source relative_path="Source/ComplexMathFunctions" type="src">
        <files mask="ComplexMathFunctions.c"/>
        <files mask="ComplexMathFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/ComplexMathFunctions" type="src">
        <files mask="arm_cmplx_conj_f32.c"/>
        <files mask="arm_cmplx_conj_q15.c"/>
        <files mask="arm_cmplx_conj_q31.c"/>
        <files mask="arm_cmplx_dot_prod_f32.c"/>
        <files mask="arm_cmplx_dot_prod_q15.c"/>
        <files mask="arm_cmplx_dot_prod_q31.c"/>
        <files mask="arm_cmplx_mag_f32.c"/>
        <files mask="arm_cmplx_mag_f64.c"/>
        <files mask="arm_cmplx_mag_fast_q15.c"/>
        <files mask="arm_cmplx_mag_q15.c"/>
        <files mask="arm_cmplx_mag_q31.c"/>
        <files mask="arm_cmplx_mag_squared_f32.c"/>
        <files mask="arm_cmplx_mag_squared_f64.c"/>
        <files mask="arm_cmplx_mag_squared_q15.c"/>
        <files mask="arm_cmplx_mag_squared_q31.c"/>
        <files mask="arm_cmplx_mult_cmplx_f32.c"/>
        <files mask="arm_cmplx_mult_cmplx_f64.c"/>
        <files mask="arm_cmplx_mult_cmplx_q15.c"/>
        <files mask="arm_cmplx_mult_cmplx_q31.c"/>
        <files mask="arm_cmplx_mult_real_f32.c"/>
        <files mask="arm_cmplx_mult_real_q15.c"/>
        <files mask="arm_cmplx_mult_real_q31.c"/>
        <files mask="arm_cmplx_conj_f16.c"/>
        <files mask="arm_cmplx_dot_prod_f16.c"/>
        <files mask="arm_cmplx_mag_f16.c"/>
        <files mask="arm_cmplx_mag_squared_f16.c"/>
        <files mask="arm_cmplx_mult_cmplx_f16.c"/>
        <files mask="arm_cmplx_mult_real_f16.c"/>
      </source>
      <source relative_path="Source/ControllerFunctions" type="src">
        <files mask="ControllerFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/ControllerFunctions" type="src">
        <files mask="arm_pid_init_f32.c"/>
        <files mask="arm_pid_init_q15.c"/>
        <files mask="arm_pid_init_q31.c"/>
        <files mask="arm_pid_reset_f32.c"/>
        <files mask="arm_pid_reset_q15.c"/>
        <files mask="arm_pid_reset_q31.c"/>
        <files mask="arm_sin_cos_f32.c"/>
        <files mask="arm_sin_cos_q31.c"/>
      </source>
      <source relative_path="Source/DistanceFunctions" type="src">
        <files mask="DistanceFunctions.c"/>
        <files mask="DistanceFunctionsF16.c"/>
      </source>
      <source relative_path="Source/DistanceFunctions" type="c_include">
        <files mask="arm_boolean_distance_template.h"/>
      </source>
      <source exclude="true" relative_path="Source/DistanceFunctions" type="src">
        <files mask="arm_boolean_distance.c"/>
        <files mask="arm_braycurtis_distance_f32.c"/>
        <files mask="arm_canberra_distance_f32.c"/>
        <files mask="arm_chebyshev_distance_f32.c"/>
        <files mask="arm_chebyshev_distance_f64.c"/>
        <files mask="arm_cityblock_distance_f32.c"/>
        <files mask="arm_cityblock_distance_f64.c"/>
        <files mask="arm_correlation_distance_f32.c"/>
        <files mask="arm_cosine_distance_f32.c"/>
        <files mask="arm_cosine_distance_f64.c"/>
        <files mask="arm_dice_distance.c"/>
        <files mask="arm_dtw_distance_f32.c"/>
        <files mask="arm_dtw_init_window_q7.c"/>
        <files mask="arm_dtw_path_f32.c"/>
        <files mask="arm_euclidean_distance_f32.c"/>
        <files mask="arm_euclidean_distance_f64.c"/>
        <files mask="arm_hamming_distance.c"/>
        <files mask="arm_jaccard_distance.c"/>
        <files mask="arm_jensenshannon_distance_f32.c"/>
        <files mask="arm_kulsinski_distance.c"/>
        <files mask="arm_minkowski_distance_f32.c"/>
        <files mask="arm_rogerstanimoto_distance.c"/>
        <files mask="arm_russellrao_distance.c"/>
        <files mask="arm_sokalmichener_distance.c"/>
        <files mask="arm_sokalsneath_distance.c"/>
        <files mask="arm_yule_distance.c"/>
        <files mask="arm_braycurtis_distance_f16.c"/>
        <files mask="arm_chebyshev_distance_f16.c"/>
        <files mask="arm_canberra_distance_f16.c"/>
        <files mask="arm_cityblock_distance_f16.c"/>
        <files mask="arm_correlation_distance_f16.c"/>
        <files mask="arm_cosine_distance_f16.c"/>
        <files mask="arm_euclidean_distance_f16.c"/>
        <files mask="arm_jensenshannon_distance_f16.c"/>
        <files mask="arm_minkowski_distance_f16.c"/>
      </source>
      <source relative_path="Source/FastMathFunctions" type="src">
        <files mask="FastMathFunctions.c"/>
        <files mask="FastMathFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/FastMathFunctions" type="src">
        <files mask="arm_atan2_f32.c"/>
        <files mask="arm_atan2_q15.c"/>
        <files mask="arm_atan2_q31.c"/>
        <files mask="arm_cos_f32.c"/>
        <files mask="arm_cos_q15.c"/>
        <files mask="arm_cos_q31.c"/>
        <files mask="arm_divide_q15.c"/>
        <files mask="arm_divide_q31.c"/>
        <files mask="arm_sin_f32.c"/>
        <files mask="arm_sin_q15.c"/>
        <files mask="arm_sin_q31.c"/>
        <files mask="arm_sqrt_q15.c"/>
        <files mask="arm_sqrt_q31.c"/>
        <files mask="arm_vexp_f32.c"/>
        <files mask="arm_vexp_f64.c"/>
        <files mask="arm_vlog_f32.c"/>
        <files mask="arm_vlog_f64.c"/>
        <files mask="arm_vlog_q15.c"/>
        <files mask="arm_vlog_q31.c"/>
        <files mask="arm_atan2_f16.c"/>
        <files mask="arm_vexp_f16.c"/>
        <files mask="arm_vinverse_f16.c"/>
        <files mask="arm_vlog_f16.c"/>
      </source>
      <source relative_path="Source/FilteringFunctions" type="src">
        <files mask="FilteringFunctions.c"/>
        <files mask="FilteringFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/FilteringFunctions" type="src">
        <files mask="arm_biquad_cascade_df1_32x64_init_q31.c"/>
        <files mask="arm_biquad_cascade_df1_32x64_q31.c"/>
        <files mask="arm_biquad_cascade_df1_f32.c"/>
        <files mask="arm_biquad_cascade_df1_fast_q15.c"/>
        <files mask="arm_biquad_cascade_df1_fast_q31.c"/>
        <files mask="arm_biquad_cascade_df1_init_f32.c"/>
        <files mask="arm_biquad_cascade_df1_init_q15.c"/>
        <files mask="arm_biquad_cascade_df1_init_q31.c"/>
        <files mask="arm_biquad_cascade_df1_q15.c"/>
        <files mask="arm_biquad_cascade_df1_q31.c"/>
        <files mask="arm_biquad_cascade_df2T_f32.c"/>
        <files mask="arm_biquad_cascade_df2T_f64.c"/>
        <files mask="arm_biquad_cascade_df2T_init_f32.c"/>
        <files mask="arm_biquad_cascade_df2T_init_f64.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_f32.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_init_f32.c"/>
        <files mask="arm_conv_f32.c"/>
        <files mask="arm_conv_fast_opt_q15.c"/>
        <files mask="arm_conv_fast_q15.c"/>
        <files mask="arm_conv_fast_q31.c"/>
        <files mask="arm_conv_opt_q15.c"/>
        <files mask="arm_conv_opt_q7.c"/>
        <files mask="arm_conv_partial_f32.c"/>
        <files mask="arm_conv_partial_fast_opt_q15.c"/>
        <files mask="arm_conv_partial_fast_q15.c"/>
        <files mask="arm_conv_partial_fast_q31.c"/>
        <files mask="arm_conv_partial_opt_q15.c"/>
        <files mask="arm_conv_partial_opt_q7.c"/>
        <files mask="arm_conv_partial_q15.c"/>
        <files mask="arm_conv_partial_q31.c"/>
        <files mask="arm_conv_partial_q7.c"/>
        <files mask="arm_conv_q15.c"/>
        <files mask="arm_conv_q31.c"/>
        <files mask="arm_conv_q7.c"/>
        <files mask="arm_correlate_f32.c"/>
        <files mask="arm_correlate_f64.c"/>
        <files mask="arm_correlate_fast_opt_q15.c"/>
        <files mask="arm_correlate_fast_q15.c"/>
        <files mask="arm_correlate_fast_q31.c"/>
        <files mask="arm_correlate_opt_q15.c"/>
        <files mask="arm_correlate_opt_q7.c"/>
        <files mask="arm_correlate_q15.c"/>
        <files mask="arm_correlate_q31.c"/>
        <files mask="arm_correlate_q7.c"/>
        <files mask="arm_fir_decimate_f32.c"/>
        <files mask="arm_fir_decimate_fast_q15.c"/>
        <files mask="arm_fir_decimate_fast_q31.c"/>
        <files mask="arm_fir_decimate_init_f32.c"/>
        <files mask="arm_fir_decimate_init_q15.c"/>
        <files mask="arm_fir_decimate_init_q31.c"/>
        <files mask="arm_fir_decimate_q15.c"/>
        <files mask="arm_fir_decimate_q31.c"/>
        <files mask="arm_fir_f32.c"/>
        <files mask="arm_fir_f64.c"/>
        <files mask="arm_fir_fast_q15.c"/>
        <files mask="arm_fir_fast_q31.c"/>
        <files mask="arm_fir_init_f32.c"/>
        <files mask="arm_fir_init_f64.c"/>
        <files mask="arm_fir_init_q15.c"/>
        <files mask="arm_fir_init_q31.c"/>
        <files mask="arm_fir_init_q7.c"/>
        <files mask="arm_fir_interpolate_f32.c"/>
        <files mask="arm_fir_interpolate_init_f32.c"/>
        <files mask="arm_fir_interpolate_init_q15.c"/>
        <files mask="arm_fir_interpolate_init_q31.c"/>
        <files mask="arm_fir_interpolate_q15.c"/>
        <files mask="arm_fir_interpolate_q31.c"/>
        <files mask="arm_fir_lattice_f32.c"/>
        <files mask="arm_fir_lattice_init_f32.c"/>
        <files mask="arm_fir_lattice_init_q15.c"/>
        <files mask="arm_fir_lattice_init_q31.c"/>
        <files mask="arm_fir_lattice_q15.c"/>
        <files mask="arm_fir_lattice_q31.c"/>
        <files mask="arm_fir_q15.c"/>
        <files mask="arm_fir_q31.c"/>
        <files mask="arm_fir_q7.c"/>
        <files mask="arm_fir_sparse_f32.c"/>
        <files mask="arm_fir_sparse_init_f32.c"/>
        <files mask="arm_fir_sparse_init_q15.c"/>
        <files mask="arm_fir_sparse_init_q31.c"/>
        <files mask="arm_fir_sparse_init_q7.c"/>
        <files mask="arm_fir_sparse_q15.c"/>
        <files mask="arm_fir_sparse_q31.c"/>
        <files mask="arm_fir_sparse_q7.c"/>
        <files mask="arm_iir_lattice_f32.c"/>
        <files mask="arm_iir_lattice_init_f32.c"/>
        <files mask="arm_iir_lattice_init_q15.c"/>
        <files mask="arm_iir_lattice_init_q31.c"/>
        <files mask="arm_iir_lattice_q15.c"/>
        <files mask="arm_iir_lattice_q31.c"/>
        <files mask="arm_levinson_durbin_f32.c"/>
        <files mask="arm_levinson_durbin_q31.c"/>
        <files mask="arm_lms_f32.c"/>
        <files mask="arm_lms_init_f32.c"/>
        <files mask="arm_lms_init_q15.c"/>
        <files mask="arm_lms_init_q31.c"/>
        <files mask="arm_lms_norm_f32.c"/>
        <files mask="arm_lms_norm_init_f32.c"/>
        <files mask="arm_lms_norm_init_q15.c"/>
        <files mask="arm_lms_norm_init_q31.c"/>
        <files mask="arm_lms_norm_q15.c"/>
        <files mask="arm_lms_norm_q31.c"/>
        <files mask="arm_lms_q15.c"/>
        <files mask="arm_lms_q31.c"/>
        <files mask="arm_biquad_cascade_df1_f16.c"/>
        <files mask="arm_biquad_cascade_df1_init_f16.c"/>
        <files mask="arm_biquad_cascade_df2T_f16.c"/>
        <files mask="arm_biquad_cascade_df2T_init_f16.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_f16.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_init_f16.c"/>
        <files mask="arm_correlate_f16.c"/>
        <files mask="arm_fir_f16.c"/>
        <files mask="arm_fir_init_f16.c"/>
        <files mask="arm_levinson_durbin_f16.c"/>
        <files mask="arm_fir_decimate_f64.c"/>
        <files mask="arm_fir_decimate_init_f64.c"/>
      </source>
      <source relative_path="Source/InterpolationFunctions" type="src">
        <files mask="InterpolationFunctions.c"/>
        <files mask="InterpolationFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/InterpolationFunctions" type="src">
        <files mask="arm_bilinear_interp_f32.c"/>
        <files mask="arm_bilinear_interp_q15.c"/>
        <files mask="arm_bilinear_interp_q31.c"/>
        <files mask="arm_bilinear_interp_q7.c"/>
        <files mask="arm_linear_interp_f32.c"/>
        <files mask="arm_linear_interp_q15.c"/>
        <files mask="arm_linear_interp_q31.c"/>
        <files mask="arm_linear_interp_q7.c"/>
        <files mask="arm_spline_interp_f32.c"/>
        <files mask="arm_spline_interp_init_f32.c"/>
        <files mask="arm_bilinear_interp_f16.c"/>
        <files mask="arm_linear_interp_f16.c"/>
      </source>
      <source relative_path="Source/MatrixFunctions" type="src">
        <files mask="MatrixFunctions.c"/>
        <files mask="MatrixFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/MatrixFunctions" type="src">
        <files mask="arm_householder_f32.c"/>
        <files mask="arm_householder_f64.c"/>
        <files mask="arm_mat_add_f32.c"/>
        <files mask="arm_mat_add_q15.c"/>
        <files mask="arm_mat_add_q31.c"/>
        <files mask="arm_mat_cholesky_f32.c"/>
        <files mask="arm_mat_cholesky_f64.c"/>
        <files mask="arm_mat_cmplx_mult_f32.c"/>
        <files mask="arm_mat_cmplx_mult_q15.c"/>
        <files mask="arm_mat_cmplx_mult_q31.c"/>
        <files mask="arm_mat_cmplx_trans_f32.c"/>
        <files mask="arm_mat_cmplx_trans_q15.c"/>
        <files mask="arm_mat_cmplx_trans_q31.c"/>
        <files mask="arm_mat_init_f32.c"/>
        <files mask="arm_mat_init_f64.c"/>
        <files mask="arm_mat_init_q15.c"/>
        <files mask="arm_mat_init_q31.c"/>
        <files mask="arm_mat_inverse_f32.c"/>
        <files mask="arm_mat_inverse_f64.c"/>
        <files mask="arm_mat_ldlt_f32.c"/>
        <files mask="arm_mat_ldlt_f64.c"/>
        <files mask="arm_mat_mult_f32.c"/>
        <files mask="arm_mat_mult_f64.c"/>
        <files mask="arm_mat_mult_fast_q15.c"/>
        <files mask="arm_mat_mult_fast_q31.c"/>
        <files mask="arm_mat_mult_opt_q31.c"/>
        <files mask="arm_mat_mult_q15.c"/>
        <files mask="arm_mat_mult_q31.c"/>
        <files mask="arm_mat_mult_q7.c"/>
        <files mask="arm_mat_qr_f32.c"/>
        <files mask="arm_mat_qr_f64.c"/>
        <files mask="arm_mat_scale_f32.c"/>
        <files mask="arm_mat_scale_q15.c"/>
        <files mask="arm_mat_scale_q31.c"/>
        <files mask="arm_mat_solve_lower_triangular_f32.c"/>
        <files mask="arm_mat_solve_lower_triangular_f64.c"/>
        <files mask="arm_mat_solve_upper_triangular_f32.c"/>
        <files mask="arm_mat_solve_upper_triangular_f64.c"/>
        <files mask="arm_mat_sub_f32.c"/>
        <files mask="arm_mat_sub_f64.c"/>
        <files mask="arm_mat_sub_q15.c"/>
        <files mask="arm_mat_sub_q31.c"/>
        <files mask="arm_mat_trans_f32.c"/>
        <files mask="arm_mat_trans_f64.c"/>
        <files mask="arm_mat_trans_q15.c"/>
        <files mask="arm_mat_trans_q31.c"/>
        <files mask="arm_mat_trans_q7.c"/>
        <files mask="arm_mat_vec_mult_f32.c"/>
        <files mask="arm_mat_vec_mult_q15.c"/>
        <files mask="arm_mat_vec_mult_q31.c"/>
        <files mask="arm_mat_vec_mult_q7.c"/>
        <files mask="arm_householder_f16.c"/>
        <files mask="arm_mat_add_f16.c"/>
        <files mask="arm_mat_cholesky_f16.c"/>
        <files mask="arm_mat_cmplx_mult_f16.c"/>
        <files mask="arm_mat_cmplx_trans_f16.c"/>
        <files mask="arm_mat_init_f16.c"/>
        <files mask="arm_mat_inverse_f16.c"/>
        <files mask="arm_mat_qr_f16.c"/>
        <files mask="arm_mat_mult_f16.c"/>
        <files mask="arm_mat_scale_f16.c"/>
        <files mask="arm_mat_solve_lower_triangular_f16.c"/>
        <files mask="arm_mat_solve_upper_triangular_f16.c"/>
        <files mask="arm_mat_sub_f16.c"/>
        <files mask="arm_mat_trans_f16.c"/>
        <files mask="arm_mat_vec_mult_f16.c"/>
      </source>
      <source relative_path="Source/QuaternionMathFunctions" type="src">
        <files mask="QuaternionMathFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/QuaternionMathFunctions" type="src">
        <files mask="arm_quaternion2rotation_f32.c"/>
        <files mask="arm_quaternion_conjugate_f32.c"/>
        <files mask="arm_quaternion_inverse_f32.c"/>
        <files mask="arm_quaternion_normalize_f32.c"/>
        <files mask="arm_quaternion_norm_f32.c"/>
        <files mask="arm_quaternion_product_f32.c"/>
        <files mask="arm_quaternion_product_single_f32.c"/>
        <files mask="arm_rotation2quaternion_f32.c"/>
      </source>
      <source relative_path="Source/SVMFunctions" type="src">
        <files mask="SVMFunctions.c"/>
        <files mask="SVMFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/SVMFunctions" type="src">
        <files mask="arm_svm_linear_init_f32.c"/>
        <files mask="arm_svm_linear_predict_f32.c"/>
        <files mask="arm_svm_polynomial_init_f32.c"/>
        <files mask="arm_svm_polynomial_predict_f32.c"/>
        <files mask="arm_svm_rbf_init_f32.c"/>
        <files mask="arm_svm_rbf_predict_f32.c"/>
        <files mask="arm_svm_sigmoid_init_f32.c"/>
        <files mask="arm_svm_sigmoid_predict_f32.c"/>
        <files mask="arm_svm_linear_init_f16.c"/>
        <files mask="arm_svm_linear_predict_f16.c"/>
        <files mask="arm_svm_polynomial_init_f16.c"/>
        <files mask="arm_svm_polynomial_predict_f16.c"/>
        <files mask="arm_svm_rbf_init_f16.c"/>
        <files mask="arm_svm_rbf_predict_f16.c"/>
        <files mask="arm_svm_sigmoid_init_f16.c"/>
        <files mask="arm_svm_sigmoid_predict_f16.c"/>
      </source>
      <source relative_path="Source/StatisticsFunctions" type="src">
        <files mask="StatisticsFunctions.c"/>
        <files mask="StatisticsFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/StatisticsFunctions" type="src">
        <files mask="arm_absmax_f32.c"/>
        <files mask="arm_absmax_f64.c"/>
        <files mask="arm_absmax_no_idx_f32.c"/>
        <files mask="arm_absmax_no_idx_f64.c"/>
        <files mask="arm_absmax_no_idx_q15.c"/>
        <files mask="arm_absmax_no_idx_q31.c"/>
        <files mask="arm_absmax_no_idx_q7.c"/>
        <files mask="arm_absmax_q15.c"/>
        <files mask="arm_absmax_q31.c"/>
        <files mask="arm_absmax_q7.c"/>
        <files mask="arm_absmin_f32.c"/>
        <files mask="arm_absmin_f64.c"/>
        <files mask="arm_absmin_no_idx_f32.c"/>
        <files mask="arm_absmin_no_idx_f64.c"/>
        <files mask="arm_absmin_no_idx_q15.c"/>
        <files mask="arm_absmin_no_idx_q31.c"/>
        <files mask="arm_absmin_no_idx_q7.c"/>
        <files mask="arm_absmin_q15.c"/>
        <files mask="arm_absmin_q31.c"/>
        <files mask="arm_absmin_q7.c"/>
        <files mask="arm_accumulate_f32.c"/>
        <files mask="arm_accumulate_f64.c"/>
        <files mask="arm_entropy_f32.c"/>
        <files mask="arm_entropy_f64.c"/>
        <files mask="arm_kullback_leibler_f32.c"/>
        <files mask="arm_kullback_leibler_f64.c"/>
        <files mask="arm_logsumexp_dot_prod_f32.c"/>
        <files mask="arm_logsumexp_f32.c"/>
        <files mask="arm_max_f32.c"/>
        <files mask="arm_max_f64.c"/>
        <files mask="arm_max_no_idx_f32.c"/>
        <files mask="arm_max_no_idx_f64.c"/>
        <files mask="arm_max_no_idx_q15.c"/>
        <files mask="arm_max_no_idx_q31.c"/>
        <files mask="arm_max_no_idx_q7.c"/>
        <files mask="arm_max_q15.c"/>
        <files mask="arm_max_q31.c"/>
        <files mask="arm_max_q7.c"/>
        <files mask="arm_mean_f32.c"/>
        <files mask="arm_mean_f64.c"/>
        <files mask="arm_mean_q15.c"/>
        <files mask="arm_mean_q31.c"/>
        <files mask="arm_mean_q7.c"/>
        <files mask="arm_min_f32.c"/>
        <files mask="arm_min_f64.c"/>
        <files mask="arm_min_no_idx_f32.c"/>
        <files mask="arm_min_no_idx_f64.c"/>
        <files mask="arm_min_no_idx_q15.c"/>
        <files mask="arm_min_no_idx_q31.c"/>
        <files mask="arm_min_no_idx_q7.c"/>
        <files mask="arm_min_q15.c"/>
        <files mask="arm_min_q31.c"/>
        <files mask="arm_min_q7.c"/>
        <files mask="arm_mse_f32.c"/>
        <files mask="arm_mse_f64.c"/>
        <files mask="arm_mse_q15.c"/>
        <files mask="arm_mse_q31.c"/>
        <files mask="arm_mse_q7.c"/>
        <files mask="arm_power_f32.c"/>
        <files mask="arm_power_f64.c"/>
        <files mask="arm_power_q15.c"/>
        <files mask="arm_power_q31.c"/>
        <files mask="arm_power_q7.c"/>
        <files mask="arm_rms_f32.c"/>
        <files mask="arm_rms_q15.c"/>
        <files mask="arm_rms_q31.c"/>
        <files mask="arm_std_f32.c"/>
        <files mask="arm_std_f64.c"/>
        <files mask="arm_std_q15.c"/>
        <files mask="arm_std_q31.c"/>
        <files mask="arm_var_f32.c"/>
        <files mask="arm_var_f64.c"/>
        <files mask="arm_var_q15.c"/>
        <files mask="arm_var_q31.c"/>
        <files mask="arm_absmax_f16.c"/>
        <files mask="arm_absmax_no_idx_f16.c"/>
        <files mask="arm_absmin_f16.c"/>
        <files mask="arm_absmin_no_idx_f16.c"/>
        <files mask="arm_accumulate_f16.c"/>
        <files mask="arm_entropy_f16.c"/>
        <files mask="arm_kullback_leibler_f16.c"/>
        <files mask="arm_logsumexp_dot_prod_f16.c"/>
        <files mask="arm_logsumexp_f16.c"/>
        <files mask="arm_max_f16.c"/>
        <files mask="arm_max_no_idx_f16.c"/>
        <files mask="arm_mean_f16.c"/>
        <files mask="arm_min_f16.c"/>
        <files mask="arm_min_no_idx_f16.c"/>
        <files mask="arm_mse_f16.c"/>
        <files mask="arm_power_f16.c"/>
        <files mask="arm_rms_f16.c"/>
        <files mask="arm_std_f16.c"/>
        <files mask="arm_var_f16.c"/>
      </source>
      <source relative_path="Source/SupportFunctions" type="src">
        <files mask="SupportFunctions.c"/>
        <files mask="SupportFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/SupportFunctions" type="src">
        <files mask="arm_barycenter_f32.c"/>
        <files mask="arm_bitonic_sort_f32.c"/>
        <files mask="arm_bubble_sort_f32.c"/>
        <files mask="arm_copy_f32.c"/>
        <files mask="arm_copy_f64.c"/>
        <files mask="arm_copy_q15.c"/>
        <files mask="arm_copy_q31.c"/>
        <files mask="arm_copy_q7.c"/>
        <files mask="arm_f64_to_float.c"/>
        <files mask="arm_f64_to_q31.c"/>
        <files mask="arm_f64_to_q15.c"/>
        <files mask="arm_f64_to_q7.c"/>
        <files mask="arm_fill_f32.c"/>
        <files mask="arm_fill_f64.c"/>
        <files mask="arm_fill_q15.c"/>
        <files mask="arm_fill_q31.c"/>
        <files mask="arm_fill_q7.c"/>
        <files mask="arm_float_to_f64.c"/>
        <files mask="arm_float_to_q15.c"/>
        <files mask="arm_float_to_q31.c"/>
        <files mask="arm_float_to_q7.c"/>
        <files mask="arm_heap_sort_f32.c"/>
        <files mask="arm_insertion_sort_f32.c"/>
        <files mask="arm_merge_sort_f32.c"/>
        <files mask="arm_merge_sort_init_f32.c"/>
        <files mask="arm_q15_to_f64.c"/>
        <files mask="arm_q15_to_float.c"/>
        <files mask="arm_q15_to_q31.c"/>
        <files mask="arm_q15_to_q7.c"/>
        <files mask="arm_q31_to_f64.c"/>
        <files mask="arm_q31_to_float.c"/>
        <files mask="arm_q31_to_q15.c"/>
        <files mask="arm_q31_to_q7.c"/>
        <files mask="arm_q7_to_f64.c"/>
        <files mask="arm_q7_to_float.c"/>
        <files mask="arm_q7_to_q15.c"/>
        <files mask="arm_q7_to_q31.c"/>
        <files mask="arm_quick_sort_f32.c"/>
        <files mask="arm_selection_sort_f32.c"/>
        <files mask="arm_sort_f32.c"/>
        <files mask="arm_sort_init_f32.c"/>
        <files mask="arm_weighted_average_f32.c"/>
        <files mask="arm_barycenter_f16.c"/>
        <files mask="arm_copy_f16.c"/>
        <files mask="arm_f16_to_float.c"/>
        <files mask="arm_f16_to_q15.c"/>
        <files mask="arm_f16_to_f64.c"/>
        <files mask="arm_f64_to_f16.c"/>
        <files mask="arm_fill_f16.c"/>
        <files mask="arm_float_to_f16.c"/>
        <files mask="arm_q15_to_f16.c"/>
        <files mask="arm_weighted_average_f16.c"/>
      </source>
      <source relative_path="Source/TransformFunctions" type="src">
        <files mask="TransformFunctions.c"/>
        <files mask="TransformFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/TransformFunctions" type="src">
        <files mask="arm_bitreversal.c"/>
        <files mask="arm_bitreversal2.c"/>
        <files mask="arm_cfft_f32.c"/>
        <files mask="arm_cfft_f64.c"/>
        <files mask="arm_cfft_init_f32.c"/>
        <files mask="arm_cfft_init_f64.c"/>
        <files mask="arm_cfft_init_q15.c"/>
        <files mask="arm_cfft_init_q31.c"/>
        <files mask="arm_cfft_q15.c"/>
        <files mask="arm_cfft_q31.c"/>
        <files mask="arm_cfft_radix2_f32.c"/>
        <files mask="arm_cfft_radix2_init_f32.c"/>
        <files mask="arm_cfft_radix2_init_q15.c"/>
        <files mask="arm_cfft_radix2_init_q31.c"/>
        <files mask="arm_cfft_radix2_q15.c"/>
        <files mask="arm_cfft_radix2_q31.c"/>
        <files mask="arm_cfft_radix4_f32.c"/>
        <files mask="arm_cfft_radix4_init_f32.c"/>
        <files mask="arm_cfft_radix4_init_q15.c"/>
        <files mask="arm_cfft_radix4_init_q31.c"/>
        <files mask="arm_cfft_radix4_q15.c"/>
        <files mask="arm_cfft_radix4_q31.c"/>
        <files mask="arm_cfft_radix8_f32.c"/>
        <files mask="arm_dct4_f32.c"/>
        <files mask="arm_dct4_init_f32.c"/>
        <files mask="arm_dct4_init_q15.c"/>
        <files mask="arm_dct4_init_q31.c"/>
        <files mask="arm_dct4_q15.c"/>
        <files mask="arm_dct4_q31.c"/>
        <files mask="arm_mfcc_f32.c"/>
        <files mask="arm_mfcc_init_f32.c"/>
        <files mask="arm_mfcc_init_q15.c"/>
        <files mask="arm_mfcc_init_q31.c"/>
        <files mask="arm_mfcc_q15.c"/>
        <files mask="arm_mfcc_q31.c"/>
        <files mask="arm_rfft_f32.c"/>
        <files mask="arm_rfft_fast_f32.c"/>
        <files mask="arm_rfft_fast_f64.c"/>
        <files mask="arm_rfft_fast_init_f32.c"/>
        <files mask="arm_rfft_fast_init_f64.c"/>
        <files mask="arm_rfft_init_f32.c"/>
        <files mask="arm_rfft_init_q15.c"/>
        <files mask="arm_rfft_init_q31.c"/>
        <files mask="arm_rfft_q15.c"/>
        <files mask="arm_rfft_q31.c"/>
        <files mask="arm_bitreversal_f16.c"/>
        <files mask="arm_cfft_f16.c"/>
        <files mask="arm_cfft_init_f16.c"/>
        <files mask="arm_cfft_radix2_f16.c"/>
        <files mask="arm_cfft_radix2_init_f16.c"/>
        <files mask="arm_cfft_radix4_f16.c"/>
        <files mask="arm_cfft_radix8_f16.c"/>
        <files mask="arm_mfcc_f16.c"/>
        <files mask="arm_cfft_radix4_init_f16.c"/>
        <files mask="arm_mfcc_init_f16.c"/>
        <files mask="arm_rfft_fast_f16.c"/>
        <files mask="arm_rfft_fast_init_f16.c"/>
      </source>
      <source relative_path="Source/WindowFunctions" type="src">
        <files mask="WindowFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/WindowFunctions" type="src">
        <files mask="arm_bartlett_f32.c"/>
        <files mask="arm_bartlett_f64.c"/>
        <files mask="arm_blackman_harris_92db_f32.c"/>
        <files mask="arm_blackman_harris_92db_f64.c"/>
        <files mask="arm_hamming_f32.c"/>
        <files mask="arm_hamming_f64.c"/>
        <files mask="arm_hanning_f32.c"/>
        <files mask="arm_hanning_f64.c"/>
        <files mask="arm_hft116d_f32.c"/>
        <files mask="arm_hft116d_f64.c"/>
        <files mask="arm_hft144d_f32.c"/>
        <files mask="arm_hft144d_f64.c"/>
        <files mask="arm_hft169d_f32.c"/>
        <files mask="arm_hft169d_f64.c"/>
        <files mask="arm_hft196d_f32.c"/>
        <files mask="arm_hft196d_f64.c"/>
        <files mask="arm_hft223d_f32.c"/>
        <files mask="arm_hft223d_f64.c"/>
        <files mask="arm_hft248d_f32.c"/>
        <files mask="arm_hft248d_f64.c"/>
        <files mask="arm_hft90d_f32.c"/>
        <files mask="arm_hft90d_f64.c"/>
        <files mask="arm_hft95_f32.c"/>
        <files mask="arm_hft95_f64.c"/>
        <files mask="arm_nuttall3a_f32.c"/>
        <files mask="arm_nuttall3a_f64.c"/>
        <files mask="arm_nuttall3b_f32.c"/>
        <files mask="arm_nuttall3b_f64.c"/>
        <files mask="arm_nuttall3_f32.c"/>
        <files mask="arm_nuttall3_f64.c"/>
        <files mask="arm_nuttall4a_f32.c"/>
        <files mask="arm_nuttall4a_f64.c"/>
        <files mask="arm_nuttall4b_f32.c"/>
        <files mask="arm_nuttall4b_f64.c"/>
        <files mask="arm_nuttall4c_f32.c"/>
        <files mask="arm_nuttall4c_f64.c"/>
        <files mask="arm_nuttall4_f32.c"/>
        <files mask="arm_nuttall4_f64.c"/>
        <files mask="arm_welch_f32.c"/>
        <files mask="arm_welch_f64.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_DSP_Source.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="PrivateInclude" type="c_include"/>
        <include_path relative_path="Source/DistanceFunctions" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
        <include_path relative_path="PrivateInclude" type="asm_include"/>
        <include_path relative_path="Source/DistanceFunctions" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Device_API_OSTick.MIMXRT1173" name="CMSIS_Device_API_OSTick" brief="Device interrupt controller interface" version="1.0.2" full_name="CMSIS Device API OSTick" category="Device/OS Tick" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/RTOS2/Include" project_base_path="CMSIS/RTOS2/Include">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="os_tick.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Device_API_OSTick.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Device_API_RTOS2.MIMXRT1173" name="CMSIS_Device_API_RTOS2" brief="CMSIS-RTOS API for Cortex-M, SC000, and SC300" version="2.3.0" full_name="CMSIS Device API RTOS2" category="CMSIS/RTOS2" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/RTOS2/Include" project_base_path="CMSIS/RTOS2/Include">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="cmsis_os2.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Device_API_RTOS2.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.CAN.MIMXRT1173" name="CMSIS_Driver_CAN" brief="Access to #include Driver_CAN.h file for custom implementation" version="1.3.0" full_name="CMSIS Driver CAN" category="CMSIS Driver/CAN" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_CAN.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_CAN.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Ethernet.MIMXRT1173" name="CMSIS_Driver_Ethernet_Common" brief="Access to #include Driver_ETH.h file for custom implementation" version="2.2.0" full_name="CMSIS Driver Ethernet Common" category="CMSIS Driver/Ethernet" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_Common.h"/>
        <files mask="Driver_ETH.h"/>
        <files mask="Driver_ETH_MAC.h"/>
        <files mask="Driver_ETH_PHY.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_Ethernet.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Ethernet_MAC.MIMXRT1173" name="CMSIS_Driver_Ethernet_MAC" brief="Access to #include Driver_ETH_MAC.h file for custom implementation" version="2.2.0" full_name="CMSIS Driver Ethernet MAC" category="CMSIS Driver/Ethernet MAC" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_ETH.h"/>
        <files mask="Driver_Common.h"/>
        <files mask="Driver_ETH_MAC.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_Ethernet_MAC.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Ethernet_PHY.MIMXRT1173" name="CMSIS_Driver_Ethernet_PHY" brief="Access to #include Driver_ETH_PHY.h file for custom implementation" version="2.2.0" full_name="CMSIS Driver Ethernet PHY" category="CMSIS Driver/Ethernet PHY" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_ETH.h"/>
        <files mask="Driver_ETH_PHY.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_Ethernet_PHY.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Flash.MIMXRT1173" name="CMSIS_Driver_Flash" brief="Access to #include Driver_Flash.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver Flash" category="CMSIS Driver/Flash" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_Flash.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_Flash.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.GPIO.MIMXRT1173" name="CMSIS_Driver_GPIO" brief="Access to #include Driver_GPIO.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver GPIO" category="CMSIS Driver/GPIO" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="Include/GPIO" template="true" type="c_include">
        <files mask="Driver_GPIO.h"/>
      </source>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_Common.h"/>
      </source>
      <source relative_path="Include/GPIO" type="c_include">
        <files mask="Driver_GPIO.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_GPIO.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include/GPIO" type="c_include"/>
        <include_path relative_path="Include/GPIO" type="asm_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.I2C.MIMXRT1173" name="CMSIS_Driver_I2C" brief="Access to #include Driver_I2C.h file for custom implementation" version="2.4.0" full_name="CMSIS Driver I2C" category="CMSIS Driver/I2C" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_I2C.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_I2C.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.MCI.MIMXRT1173" name="CMSIS_Driver_MCI" brief="Access to #include Driver_MCI.h file for custom implementation" version="2.4.0" full_name="CMSIS Driver MCI" category="CMSIS Driver/MCI" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_MCI.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_MCI.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.NAND.MIMXRT1173" name="CMSIS_Driver_NAND" brief="Access to #include Driver_NAND.h file for custom implementation" version="2.4.0" full_name="CMSIS Driver NAND" category="CMSIS Driver/NAND" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_NAND.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_NAND.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.SAI.MIMXRT1173" name="CMSIS_Driver_SAI" brief="Access to #include Driver_SAI.h file for custom implementation" version="1.2.0" full_name="CMSIS Driver SAI" category="CMSIS Driver/SAI" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_SAI.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_SAI.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.SPI.MIMXRT1173" name="CMSIS_Driver_SPI" brief="Access to #include Driver_SPI.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver SPI" category="CMSIS Driver/SPI" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_SPI.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_SPI.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.USART.MIMXRT1173" name="CMSIS_Driver_USART" brief="Access to #include Driver_USART.h file for custom implementation" version="2.4.0" full_name="CMSIS Driver USART" category="CMSIS Driver/USART" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_USART.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_USART.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.USB_Device.MIMXRT1173" name="CMSIS_Driver_USB_Device" brief="Access to #include Driver_USBD.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver USB Device" category="CMSIS Driver/USB Device" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_USBD.h"/>
        <files mask="Driver_USB.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_USB_Device.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.USB_Host.MIMXRT1173" name="CMSIS_Driver_USB_Host" brief="Access to #include Driver_USBH.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver USB Host" category="CMSIS Driver/USB Host" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_USBH.h"/>
        <files mask="Driver_USB.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_USB_Host.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.WiFi.MIMXRT1173" name="CMSIS_Driver_WiFi" brief="Access to #include Driver_WiFi.h file" version="1.1.0" full_name="CMSIS Driver WiFi" category="CMSIS Driver/WiFi" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_WiFi.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_WiFi.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_NN_Source.MIMXRT1173" name="CMSIS_NN_Library_Source" brief="CMSIS-NN Library" version="6.0.0" full_name="CMSIS NN Library Source" category="CMSIS/NN" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/NN" project_base_path="CMSIS/NN">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="README.md" hidden="true"/>
      </source>
      <source relative_path="Include" type="c_include">
        <files mask="arm_nnfunctions.h"/>
        <files mask="arm_nnsupportfunctions.h"/>
        <files mask="arm_nn_math_types.h"/>
        <files mask="arm_nn_tables.h"/>
        <files mask="arm_nn_types.h"/>
      </source>
      <source relative_path="Include/Internal" type="c_include">
        <files mask="arm_nn_compiler.h"/>
      </source>
      <source relative_path="Source/ActivationFunctions" type="src">
        <files mask="arm_nn_activation_s16.c"/>
        <files mask="arm_relu6_s8.c"/>
        <files mask="arm_relu_q15.c"/>
        <files mask="arm_relu_q7.c"/>
      </source>
      <source relative_path="Source/BasicMathFunctions" type="src">
        <files mask="arm_elementwise_add_s16.c"/>
        <files mask="arm_elementwise_add_s8.c"/>
        <files mask="arm_elementwise_mul_acc_s16.c"/>
        <files mask="arm_elementwise_mul_s16.c"/>
        <files mask="arm_elementwise_mul_s16_s8.c"/>
        <files mask="arm_elementwise_mul_s8.c"/>
        <files mask="arm_elementwise_mul_s16_batch_offset.c"/>
      </source>
      <source relative_path="Source/ConcatenationFunctions" type="src">
        <files mask="arm_concatenation_s8_w.c"/>
        <files mask="arm_concatenation_s8_x.c"/>
        <files mask="arm_concatenation_s8_y.c"/>
        <files mask="arm_concatenation_s8_z.c"/>
      </source>
      <source relative_path="Source/ConvolutionFunctions" type="src">
        <files mask="arm_convolve_1x1_s4.c"/>
        <files mask="arm_convolve_1x1_s4_fast.c"/>
        <files mask="arm_convolve_1x1_s8.c"/>
        <files mask="arm_convolve_1x1_s8_fast.c"/>
        <files mask="arm_convolve_1_x_n_s4.c"/>
        <files mask="arm_convolve_1_x_n_s8.c"/>
        <files mask="arm_convolve_get_buffer_sizes_s16.c"/>
        <files mask="arm_convolve_get_buffer_sizes_s4.c"/>
        <files mask="arm_convolve_get_buffer_sizes_s8.c"/>
        <files mask="arm_convolve_s16.c"/>
        <files mask="arm_convolve_s4.c"/>
        <files mask="arm_convolve_s8.c"/>
        <files mask="arm_convolve_wrapper_s16.c"/>
        <files mask="arm_convolve_wrapper_s4.c"/>
        <files mask="arm_convolve_wrapper_s8.c"/>
        <files mask="arm_depthwise_conv_3x3_s8.c"/>
        <files mask="arm_depthwise_conv_fast_s16.c"/>
        <files mask="arm_depthwise_conv_get_buffer_sizes_s16.c"/>
        <files mask="arm_depthwise_conv_get_buffer_sizes_s4.c"/>
        <files mask="arm_depthwise_conv_get_buffer_sizes_s8.c"/>
        <files mask="arm_depthwise_conv_s16.c"/>
        <files mask="arm_depthwise_conv_s4.c"/>
        <files mask="arm_depthwise_conv_s4_opt.c"/>
        <files mask="arm_depthwise_conv_s8.c"/>
        <files mask="arm_depthwise_conv_s8_opt.c"/>
        <files mask="arm_depthwise_conv_wrapper_s16.c"/>
        <files mask="arm_depthwise_conv_wrapper_s4.c"/>
        <files mask="arm_depthwise_conv_wrapper_s8.c"/>
        <files mask="arm_nn_depthwise_conv_s8_core.c"/>
        <files mask="arm_nn_mat_mult_kernel_row_offset_s8_s16.c"/>
        <files mask="arm_nn_mat_mult_kernel_s4_s16.c"/>
        <files mask="arm_nn_mat_mult_kernel_s8_s16.c"/>
        <files mask="arm_nn_mat_mult_kernel_s16.c"/>
        <files mask="arm_nn_mat_mult_s8.c"/>
        <files mask="arm_transpose_conv_get_buffer_sizes_s8.c"/>
        <files mask="arm_transpose_conv_s8.c"/>
      </source>
      <source relative_path="Source/FullyConnectedFunctions" type="src">
        <files mask="arm_fully_connected_get_buffer_sizes_s16.c"/>
        <files mask="arm_fully_connected_get_buffer_sizes_s8.c"/>
        <files mask="arm_fully_connected_s16.c"/>
        <files mask="arm_fully_connected_s4.c"/>
        <files mask="arm_fully_connected_s8.c"/>
        <files mask="arm_vector_sum_s8.c"/>
        <files mask="arm_vector_sum_s8_s64.c"/>
      </source>
      <source relative_path="Source/LSTMFunctions" type="src">
        <files mask="arm_lstm_unidirectional_s16.c"/>
        <files mask="arm_lstm_unidirectional_s8.c"/>
      </source>
      <source relative_path="Source/NNSupportFunctions" type="src">
        <files mask="arm_nntables.c"/>
        <files mask="arm_nn_depthwise_conv_nt_t_padded_s8.c"/>
        <files mask="arm_nn_depthwise_conv_nt_t_s16.c"/>
        <files mask="arm_nn_depthwise_conv_nt_t_s4.c"/>
        <files mask="arm_nn_depthwise_conv_nt_t_s8.c"/>
        <files mask="arm_nn_lstm_calculate_gate_s16.c"/>
        <files mask="arm_nn_lstm_calculate_gate_s8_s16.c"/>
        <files mask="arm_nn_lstm_step_s16.c"/>
        <files mask="arm_nn_lstm_step_s8.c"/>
        <files mask="arm_nn_mat_mult_nt_t_s16.c"/>
        <files mask="arm_nn_mat_mult_nt_t_s4.c"/>
        <files mask="arm_nn_mat_mult_nt_t_s8.c"/>
        <files mask="arm_nn_mat_mult_nt_t_s8_s32.c"/>
        <files mask="arm_nn_mat_mul_core_1x_s4.c"/>
        <files mask="arm_nn_mat_mul_core_1x_s8.c"/>
        <files mask="arm_nn_mat_mul_core_4x_s8.c"/>
        <files mask="arm_nn_vec_mat_mul_result_acc_s16.c"/>
        <files mask="arm_nn_vec_mat_mul_result_acc_s8_s16.c"/>
        <files mask="arm_nn_vec_mat_mult_t_s16.c"/>
        <files mask="arm_nn_vec_mat_mult_t_s4.c"/>
        <files mask="arm_nn_vec_mat_mult_t_s8.c"/>
        <files mask="arm_nn_vec_mat_mult_t_svdf_s8.c"/>
        <files mask="arm_q7_to_q15_with_offset.c"/>
        <files mask="arm_s8_to_s16_unordered_with_offset.c"/>
      </source>
      <source relative_path="Source/PoolingFunctions" type="src">
        <files mask="arm_avgpool_get_buffer_sizes_s16.c"/>
        <files mask="arm_avgpool_get_buffer_sizes_s8.c"/>
        <files mask="arm_avgpool_s16.c"/>
        <files mask="arm_avgpool_s8.c"/>
        <files mask="arm_max_pool_s16.c"/>
        <files mask="arm_max_pool_s8.c"/>
      </source>
      <source relative_path="Source/ReshapeFunctions" type="src">
        <files mask="arm_reshape_s8.c"/>
      </source>
      <source relative_path="Source/SoftmaxFunctions" type="src">
        <files mask="arm_nn_softmax_common_s8.c"/>
        <files mask="arm_softmax_s16.c"/>
        <files mask="arm_softmax_s8.c"/>
        <files mask="arm_softmax_s8_s16.c"/>
        <files mask="arm_softmax_u8.c"/>
      </source>
      <source relative_path="Source/SVDFunctions" type="src">
        <files mask="arm_svdf_get_buffer_sizes_s8.c"/>
        <files mask="arm_svdf_s8.c"/>
        <files mask="arm_svdf_state_s16_s8.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_NN_Source.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="device.RTE.MIMXRT1173" name="RTE_Device" brief="Rte_device" version="1.0.0" full_name="Rte_device" category="Device/SDK Project Template" user_visible="true" type="project_template" package_base_path="devices/MIMXRT1173/template" project_base_path="board">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="./" config="true" type="c_include">
        <files mask="RTE_Device.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <!--<component id="container.CMSIS_all_files.MIMXRT1173" name="MIMXRT1173" version="1.0.0" package_base_path="CMSIS" project_base_path="./">
  <source relative_path="Driver/Include" type="c_include">
    <files mask="Driver_CAN.h"/>
    <files mask="Driver_Common.h"/>
    <files mask="Driver_ETH.h"/>
    <files mask="Driver_ETH_MAC.h"/>
    <files mask="Driver_ETH_PHY.h"/>
    <files mask="Driver_Flash.h"/>
    <files mask="Driver_I2C.h"/>
    <files mask="Driver_MCI.h"/>
    <files mask="Driver_NAND.h"/>
    <files mask="Driver_SAI.h"/>
    <files mask="Driver_SPI.h"/>
    <files mask="Driver_Storage.h"/>
    <files mask="Driver_USART.h"/>
    <files mask="Driver_USB.h"/>
    <files mask="Driver_USBD.h"/>
    <files mask="Driver_USBH.h"/>
    <files mask="Driver_WiFi.h"/>
  </source>
  <source relative_path="Driver/Include/GPIO" type="c_include">
    <files mask="Driver_GPIO.h"/>
  </source>
  <source relative_path="Driver/VIO/Include" type="c_include">
    <files mask="cmsis_vio.h"/>
  </source>
  <source relative_path="Driver/VIO/Source" type="src">
    <files mask="vio.c"/>
    <files mask="vio_memory.c"/>
  </source>
  <source relative_path="Driver/VIO" type="other">
    <files mask="cmsis_vio.scvd"/>
  </source>
  <source relative_path="Core/Include" type="c_include">
    <files mask="cmsis_clang.h"/>
  </source>
  <source relative_path="Core/Include/m-profile" type="c_include">
    <files mask="cmsis_clang_m.h"/>
  </source>
</component>-->
    <component id="platform.utilities.notifier.MIMXRT1173" name="notifier" brief="Utility notifier" version="1.0.0" full_name="Utility notifier" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT1173/utilities" project_base_path="utilities/utilities">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_notifier.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_notifier.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.utilities.misc_utilities.MIMXRT1173" name="misc_utilities" brief="Utilities which is needed for particular toolchain like the SBRK function required to address limitation between HEAP and STACK in GCC toolchain library." version="1.1.1" full_name="Utilities miscellaneous" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT1173/utilities" project_base_path="utilities">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="src">
        <files mask="fsl_syscall_stub.c"/>
        <files mask="fsl_sbrk.c"/>
      </source>
      <source toolchain="armgcc mcuxpresso mdk" relative_path="./" type="asm_include" device_cores="cm4_MIMXRT1173xxxxx cm7_MIMXRT1173xxxxx">
        <files mask="fsl_memcpy.S"/>
      </source>
    </component>
    <component id="utility.incbin.MIMXRT1173" name="incbin" brief="Used to include slave core binary into master core binary." version="1.0.0" full_name="utility incbin" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT1173/utilities/incbin" project_base_path="utilities">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source toolchain="armgcc mdk" relative_path="./" type="asm_include">
        <files mask="fsl_incbin.S"/>
      </source>
    </component>
    <component id="utility.debug_console_template_config.MIMXRT1173" name="debug_console_template_config" brief="Utility debug_console Template Config" version="1.0.0" full_name="Utility debug_console Template Config" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT1173/utilities" project_base_path="utilities">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="debug_console/config" config="true" type="c_include">
        <files mask="fsl_debug_console_conf.h"/>
      </source>
      <include_paths>
        <include_path relative_path="debug_console/config" type="c_include"/>
        <include_path relative_path="debug_console/config" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos.coremqtt.MIMXRT1173" name="coremqtt" brief="Client implementation of the MQTT 3.1.1 specification for embedded devices." version="2.1.1" full_name="coreMQTT" category="FreeRTOS/coreMQTT" user_visible="true" type="middleware" package_base_path="rtos/freertos/coremqtt" project_base_path="freertos/coremqtt">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="core_mqtt.c"/>
        <files mask="core_mqtt_serializer.c"/>
        <files mask="core_mqtt_state.c"/>
      </source>
      <source relative_path="source/include" type="c_include">
        <files mask="core_mqtt.h"/>
        <files mask="core_mqtt_config_defaults.h"/>
        <files mask="core_mqtt_default_logging.h"/>
        <files mask="core_mqtt_serializer.h"/>
        <files mask="core_mqtt_state.h"/>
      </source>
      <source relative_path="source/interface" type="c_include">
        <files mask="transport_interface.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos_coremqtt.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/include" type="c_include"/>
        <include_path relative_path="source/interface" type="c_include"/>
        <include_path relative_path="source/include" type="asm_include"/>
        <include_path relative_path="source/interface" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos.corejson.MIMXRT1173" name="corejson" brief="A parser strictly enforcing the ECMA-404 JSON standard, suitable for microcontrollers." version="3.2.0" full_name="coreJSON" category="FreeRTOS/coreJSON" user_visible="true" type="middleware" package_base_path="rtos/freertos/corejson" project_base_path="freertos/corejson">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="core_json.c"/>
      </source>
      <source relative_path="source/include" type="c_include">
        <files mask="core_json.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos_corejson.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/include" type="c_include"/>
        <include_path relative_path="source/include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos.backoffalgorithm.MIMXRT1173" name="backoffalgorithm" brief="Algorithm for calculating exponential backoff with jitter for network retry attempts." version="1.3.0" full_name="backoffalgorithm" category="FreeRTOS/backoffAlgorithm" user_visible="true" type="middleware" package_base_path="rtos/freertos/backoffalgorithm" project_base_path="freertos/backoffalgorithm">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="backoff_algorithm.c"/>
      </source>
      <source relative_path="source/include" type="c_include">
        <files mask="backoff_algorithm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos_backoffalgorithm.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/include" type="c_include"/>
        <include_path relative_path="source/include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.cmsis_drivers.MIMXRT1173" name="CMSIS driver" brief="CMSIS driver" version="2.0.0" full_name="CMSIS driver" category="Board Support/SDK Project Template" user_visible="true" type="CMSIS_driver" package_base_path="components/cmsis_drivers" project_base_path="CMSIS_drivers">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
    </component>
    <component id="platform.drivers.common.MIMXRT1173" name="common" brief="common Driver" version="2.5.0" full_name="common Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_common.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_common.c"/>
      </source>
      <source relative_path="./" type="src" device_cores="cm4_MIMXRT1173xxxxx cm7_MIMXRT1173xxxxx">
        <files mask="fsl_common_arm.c"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm4_MIMXRT1173xxxxx cm7_MIMXRT1173xxxxx">
        <files mask="fsl_common_arm.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.wifi_bt_config.template.MIMXRT1173" name="Wi-Fi configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="Wi-Fi configuration template" category="Wireless/NXP Wi-Fi" user_visible="false" type="project_template" package_base_path="components/wifi_bt_module/template" project_base_path="wifi/template">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="./" config="true" type="c_include">
        <files mask="wifi_bt_config.h"/>
      </source>
      <source relative_path="./" config="true" type="src">
        <files mask="wifi_bt_config.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_wifi_bt_config_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="../../../middleware/wifi_nxp" project_relative_path="./" type="c_include"/>
        <include_path relative_path="../../../middleware/wifi_nxp" project_relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.osa_free_rtos.MIMXRT1173" name="nxp wifi osa free_rtos" brief="NXP WLAN OSA" version="1.0.0" full_name="NXP WLAN OSA" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="port/osa" type="c_include">
        <files mask="osa_freertos.h"/>
      </source>
      <source relative_path="port/osa" type="src">
        <files mask="osa_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_osa_free_rtos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="incl/port/osa" type="c_include"/>
        <include_path relative_path="port/osa" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="incl" type="asm_include"/>
        <include_path relative_path="incl/port/osa" type="asm_include"/>
        <include_path relative_path="port/osa" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.osa_thread.MIMXRT1173" name="nxp wifi osa thread" brief="NXP WLAN OSA" version="1.0.0" full_name="NXP WLAN OSA" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="port/osa" type="c_include">
        <files mask="osa_threadx.h"/>
      </source>
      <source relative_path="port/osa" type="src">
        <files mask="osa_threadx.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_osa_thread.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="incl/port/osa" type="c_include"/>
        <include_path relative_path="port/osa" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="incl/port/osa" type="asm_include"/>
        <include_path relative_path="port/osa" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.firmware_download.MIMXRT1173" name="nxp_wireless_firmware_download" brief="NXP WLAN f/w dnld base" version="1.0.0" full_name="NXP WLAN f/w dnld base" category="Wireless/NXP Wi-Fi" user_visible="true" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="incl" type="c_include">
        <files mask="WIFI_IW416_BOARD_AW_AM457_CAL_DATA_EXT.h"/>
      </source>
      <source relative_path="wifidriver/incl" type="c_include">
        <files mask="mlan_main_defs.h"/>
      </source>
      <source relative_path="wifidriver" type="src">
        <files mask="sdio.c"/>
      </source>
      <source relative_path="wifidriver" type="c_include">
        <files mask="sdio.h"/>
      </source>
      <source relative_path="firmware_dnld" type="src">
        <files mask="firmware_dnld.c"/>
      </source>
      <source relative_path="firmware_dnld" type="c_include">
        <files mask="firmware_dnld.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_firmware_download.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="wifidriver" type="c_include"/>
        <include_path relative_path="wifidriver/incl" type="c_include"/>
        <include_path relative_path="firmware_dnld" type="c_include"/>
        <include_path relative_path="sdio_nxp_abs" type="c_include"/>
        <include_path relative_path="sdio_nxp_abs/incl" type="c_include"/>
        <include_path relative_path="fwdnld_intf_abs" type="c_include"/>
        <include_path relative_path="incl" type="asm_include"/>
        <include_path relative_path="wifidriver" type="asm_include"/>
        <include_path relative_path="wifidriver/incl" type="asm_include"/>
        <include_path relative_path="firmware_dnld" type="asm_include"/>
        <include_path relative_path="sdio_nxp_abs" type="asm_include"/>
        <include_path relative_path="sdio_nxp_abs/incl" type="asm_include"/>
        <include_path relative_path="fwdnld_intf_abs" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.net_thread.MIMXRT1173" name="nxp wifi osa thread" brief="NXP WLAN OSA" version="1.0.0" full_name="NXP WLAN OSA" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="incl/port/net" type="c_include">
        <files mask="wm_net.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_net_thread.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="incl/port/osa" type="c_include"/>
        <include_path relative_path="port/osa" type="c_include"/>
        <include_path relative_path="incl/port/net" type="c_include"/>
        <include_path relative_path="port/net/netxduo" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="incl/port/osa" type="asm_include"/>
        <include_path relative_path="port/osa" type="asm_include"/>
        <include_path relative_path="incl/port/net" type="asm_include"/>
        <include_path relative_path="port/net/netxduo" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.fwdnld_intf_abs.MIMXRT1173" name="wifi_nxp_fwdnld_intf_abs" brief="NXP Wi-Fi Interface Abstraction Layer" version="1.3.46" full_name="NXP Firmware Download abstraction layer" category="Wireless/NXP Wi-Fi" user_visible="true" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="fwdnld_intf_abs" type="src">
        <files mask="fwdnld_intf_abs.c"/>
      </source>
      <source relative_path="fwdnld_intf_abs" type="c_include">
        <files mask="fwdnld_intf_abs.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_fwdnld_intf_abs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="fwdnld_intf_abs" type="c_include"/>
        <include_path relative_path="fwdnld_intf_abs" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.wps.MIMXRT1173" name="wifi_nxp_wps" brief="Middlware Wi-Fi WPS" version="1.0.0" full_name="NXP Wi-Fi WPS" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
    </component>
    <component id="middleware.usb_pd.common_header.MIMXRT1173" name="USB PD Common Header" brief="Middleware usb pd common_header" version="2.11.0" full_name="USB PD Common Header" category="USB/USB PD Common Header" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
    </component>
    <component id="middleware.usb_pd.config_header.MIMXRT1173" name="PD Config Header" brief="USB Type-C PD Stack" version="2.11.0" full_name="USB Type-C PD Stack" category="USB/USB Type-C PD Stack" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
    </component>
    <component id="middleware.usb.host.khci_config_header.MIMXRT1173" name="USB host khci config header" brief="USB host khci config header" version="2.11.0" full_name="USB host khci config header" category="USB/USB Host" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
    </component>
    <component id="middleware.usb.host.ohci_config_header.MIMXRT1173" name="USB host ohci config header" brief="USB host ohci config header" version="2.11.0" full_name="USB host ohci config header" category="USB/USB Host" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
    </component>
    <component id="middleware.usb.host.ip3516hs_config_header.MIMXRT1173" name="USB host ip3516hs config header" brief="USB host ip3516hs config header" version="2.11.0" full_name="USB host ip3516hs config header" category="USB/USB Host" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
    </component>
    <component id="middleware.usb.host.ehci_config_header.MIMXRT1173" name="USB host ehci config header" brief="USB host ehci config header" version="2.11.0" full_name="USB host ehci config header" category="USB/USB Host" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
    </component>
    <component id="middleware.usb.device.khci_config_header.MIMXRT1173" name="USB device khci config header" brief="USB device khci config header" version="2.11.0" full_name="USB device khci config header" category="USB/USB Device" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
    </component>
    <component id="middleware.usb.device.ip3511fs_config_header.MIMXRT1173" name="USB device ip3511fs config header" brief="USB device ip3511fs config header" version="2.11.0" full_name="USB device ip3511fs config header" category="USB/USB Device" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
    </component>
    <component id="middleware.usb.device.ip3511hs_config_header.MIMXRT1173" name="USB device ip3511hs config header" brief="USB device ip3511hs config header" version="2.11.0" full_name="USB device ip3511hs config header" category="USB/USB Device" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
    </component>
    <component id="middleware.usb.device.ehci_config_header.MIMXRT1173" name="USB device ehci config header" brief="USB device ehci config header" version="2.11.0" full_name="USB device ehci config header" category="USB/USB Device" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
    </component>
    <component id="middleware.usb.phydcd_config_header.MIMXRT1173" name="USB device phydcd config header" brief="USB device phydcd config header" version="2.11.0" full_name="USB device phydcd config header" category="USB/USB DCD" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
    </component>
    <component id="middleware.usb.hsdcd_config_header.MIMXRT1173" name="USB device hsdcd config header" brief="USB device hsdcd config header" version="2.11.0" full_name="USB device hsdcd config header" category="USB/USB DCD" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
    </component>
    <component id="middleware.tinycbor.MIMXRT1173" name="tinycbor" brief="Concise Binary Object Representation (CBOR) Library" version="0.6.0" full_name="TinyCBOR" category="TinyCBOR/TinyCBOR" user_visible="true" type="middleware" package_base_path="middleware/tinycbor" project_base_path="tinycbor">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="src" type="c_include">
        <files mask="cbor.h"/>
        <files mask="cborinternal_p.h"/>
        <files mask="compilersupport_p.h"/>
        <files mask="tinycbor-version.h"/>
        <files mask="utf8_p.h"/>
      </source>
      <source relative_path="src" type="src">
        <files mask="cborencoder.c"/>
        <files mask="cborencoder_close_container_checked.c"/>
        <files mask="cborerrorstrings.c"/>
        <files mask="cborparser.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tinycbor.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src" type="c_include"/>
        <include_path relative_path="src" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.common.MIMXRT1173" name="sdmmc_common" brief="Middleware sdmmc common" version="2.3.0" full_name="SDMMC common stack" category="Memories/SDMMC Stack" user_visible="false" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="common" type="c_include">
        <files mask="fsl_sdmmc_spec.h"/>
        <files mask="fsl_sdmmc_common.h"/>
      </source>
      <source relative_path="common" type="src">
        <files mask="fsl_sdmmc_common.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_common.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="common" type="c_include"/>
        <include_path relative_path="common" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.sdhc.template.MIMXRT1173" name="SDMMC configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="SDMMC configuration template" category="Memories/SDMMC Stack" user_visible="false" type="project_template" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="template/sdhc" config="true" type="src">
        <files mask="sdmmc_config.c"/>
      </source>
      <source relative_path="template/sdhc" config="true" type="c_include">
        <files mask="sdmmc_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_sdhc_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/sdhc" type="c_include"/>
        <include_path relative_path="template/sdhc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.sdif.template.MIMXRT1173" name="SDMMC configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="SDMMC configuration template" category="Memories/SDMMC Stack" user_visible="false" type="project_template" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="template/sdif" config="true" type="src">
        <files mask="sdmmc_config.c"/>
      </source>
      <source relative_path="template/sdif" config="true" type="c_include">
        <files mask="sdmmc_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_sdif_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/sdif" type="c_include"/>
        <include_path relative_path="template/sdif" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.usdhc.template.MIMXRT1173" name="SDMMC configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="SDMMC configuration template" category="Memories/SDMMC Stack" user_visible="false" type="project_template" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="template/usdhc" config="true" type="src">
        <files mask="sdmmc_config.c"/>
      </source>
      <source relative_path="template/usdhc" config="true" type="c_include">
        <files mask="sdmmc_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_usdhc_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/usdhc" type="c_include"/>
        <include_path relative_path="template/usdhc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.pkcs11.MIMXRT1173" name="pkcs11" brief="Public Key Cryptography Standard #11 defines generic cryptographic token interface." version="2.40.1" full_name="pkcs11" category="AWS IoT/OASIS PKCS Standard 11" user_visible="true" type="middleware" package_base_path="middleware/pkcs11" project_base_path="pkcs11">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="README.md"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="pkcs11t.h"/>
        <files mask="pkcs11f.h"/>
        <files mask="pkcs11.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_pkcs11.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.openh264.api.MIMXRT1173" name="openh264_api" brief="openh264 api" version="2.1.1" full_name="OpenH264 API" category="Graphics/H.264 Codec Library" user_visible="false" type="middleware" package_base_path="middleware/openh264" project_base_path="openh264">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="codec/api/svc" type="c_include">
        <files mask="codec_api.h"/>
        <files mask="codec_app_def.h"/>
        <files mask="codec_def.h"/>
        <files mask="codec_ver.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_openh264_api.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="codec/api/svc" type="c_include"/>
        <include_path relative_path="codec/api/svc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.openh264.common.MIMXRT1173" name="openh264_common" brief="openh264 common" version="2.1.1" full_name="OpenH264 common" category="Graphics/H.264 Codec Library" user_visible="false" type="middleware" package_base_path="middleware/openh264" project_base_path="openh264">
      <defines>
        <define name="__NXP_MSDK__" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="codec/common/inc" type="c_include">
        <files mask="asmdefs_mmi.h"/>
        <files mask="copy_mb.h"/>
        <files mask="cpu.h"/>
        <files mask="cpu_core.h"/>
        <files mask="crt_util_safe_x.h"/>
        <files mask="deblocking_common.h"/>
        <files mask="expand_pic.h"/>
        <files mask="golomb_common.h"/>
        <files mask="intra_pred_common.h"/>
        <files mask="ls_defines.h"/>
        <files mask="macros.h"/>
        <files mask="mc.h"/>
        <files mask="measure_time.h"/>
        <files mask="memory_align.h"/>
        <files mask="sad_common.h"/>
        <files mask="typedefs.h"/>
        <files mask="utils.h"/>
        <files mask="version.h"/>
        <files mask="wels_common_defs.h"/>
        <files mask="wels_const_common.h"/>
        <files mask="welsCodecTrace.h"/>
        <files mask="WelsList.h"/>
        <files mask="WelsLock.h"/>
        <files mask="WelsTask.h"/>
        <files mask="WelsTaskThread.h"/>
        <files mask="WelsThread.h"/>
        <files mask="WelsThreadLib.h"/>
        <files mask="WelsThreadPool.h"/>
      </source>
      <source relative_path="codec/common/src" type="src">
        <files mask="common_tables.cpp"/>
        <files mask="copy_mb.cpp"/>
        <files mask="cpu.cpp"/>
        <files mask="crt_util_safe_x.cpp"/>
        <files mask="deblocking_common.cpp"/>
        <files mask="expand_pic.cpp"/>
        <files mask="intra_pred_common.cpp"/>
        <files mask="mc.cpp"/>
        <files mask="memory_align.cpp"/>
        <files mask="sad_common.cpp"/>
        <files mask="utils.cpp"/>
        <files mask="welsCodecTrace.cpp"/>
        <files mask="WelsTaskThread.cpp"/>
        <files mask="WelsThread.cpp"/>
        <files mask="WelsThreadLib.cpp"/>
        <files mask="WelsThreadPool.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_openh264_common.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="codec/common/inc" type="c_include"/>
        <include_path relative_path="codec/common/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.openh264.example_lib.MIMXRT1173" name="example_lib" brief="openh264 example library files used by projects" version="2.0.0" full_name="openh264 example library" category="Graphics/H.264 Codec Library" user_visible="false" type="other" package_base_path="middleware/openh264" project_base_path="openh264">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
    </component>
    <component id="middleware.nxp_iot_agent.lwip_enet.MIMXRT1173" name="nxp_iot_agent_lwip_enet" brief="Ethernet LWIP network backend for nxp_iot_agent" version="6.0.2" full_name="nxp_iot_agent lwip_enet" category="Security/EdgeLock 2GO" user_visible="false" type="middleware" package_base_path="middleware/nxp_iot_agent" project_base_path="nxp_iot_agent">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="ex/src/network" type="src">
        <files mask="iot_agent_network_lwip.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_nxp_iot_agent_lwip_enet.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.nxp_iot_agent.lwip_wifi.MIMXRT1173" name="nxp_iot_agent_lwip_wifi" brief="Wi-Fi LWIP network backend for nxp_iot_agent" version="6.0.2" full_name="nxp_iot_agent lwip_wifi" category="Security/EdgeLock 2GO" user_visible="false" type="middleware" package_base_path="middleware/nxp_iot_agent" project_base_path="nxp_iot_agent">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="ex/src/network" type="src">
        <files mask="iot_agent_network_lwip_wifi.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_nxp_iot_agent_lwip_wifi.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.nxp_iot_agent.psa.MIMXRT1173" name="nxp_iot_agent_psa" brief="PSA crypto backend for nxp_iot_agent" version="6.0.2" full_name="nxp_iot_agent psa" category="Security/EdgeLock 2GO" user_visible="false" type="middleware" package_base_path="middleware/nxp_iot_agent" project_base_path="nxp_iot_agent">
      <defines>
        <define name="NXP_IOT_AGENT_HAVE_PSA" value="1"/>
        <define name="NXP_IOT_AGENT_HAVE_PSA_IMPL_TFM" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="ex/inc" type="c_include">
        <files mask="iot_agent_claimcode_import.h"/>
      </source>
      <source relative_path="ex/inc/mbedtls_psa" type="c_include">
        <files mask="iot_agent_psa_sign_test.h"/>
      </source>
      <source relative_path="ex/src/utils" type="src">
        <files mask="iot_agent_claimcode_import.c"/>
      </source>
      <source relative_path="ex/src/utils/mbedtls_psa" type="src">
        <files mask="iot_agent_psa_sign_test.c"/>
      </source>
      <source relative_path="platform/tfm" type="src">
        <files mask="nxp_iot_agent_platform_tfm.c"/>
        <files mask="nxp_iot_agent_time_tfm.c"/>
      </source>
      <source relative_path="src/keystore/psa" type="src">
        <files mask="nxp_iot_agent_keystore_psa.c"/>
      </source>
      <source relative_path="src/keystore/psa" type="c_include">
        <files mask="nxp_iot_agent_keystore_psa.h"/>
        <files mask="nxp_iot_agent_macros_psa.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_nxp_iot_agent_psa.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="ex/inc" type="c_include"/>
        <include_path relative_path="ex/inc/mbedtls_psa" type="c_include"/>
        <include_path relative_path="src/keystore/psa" type="c_include"/>
        <include_path relative_path="ex/inc" type="asm_include"/>
        <include_path relative_path="ex/inc/mbedtls_psa" type="asm_include"/>
        <include_path relative_path="src/keystore/psa" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.mcmgr.MIMXRT1173" name="mcmgr" brief="MCMgr" version="4.1.5" full_name="Multicore Manager" category="Multicore/Core Management" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="mcmgr">
      <defines>
        <define name="MULTICORE_APP" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="mcmgr/src" type="c_include">
        <files mask="mcmgr.h"/>
        <files mask="mcmgr_internal_core_api.h"/>
      </source>
      <source relative_path="mcmgr/src" type="src">
        <files mask="mcmgr.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_mcmgr.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="mcmgr/src" type="c_include"/>
        <include_path relative_path="mcmgr/src" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.common.MIMXRT1173" name="eRPC" brief="eRPC" version="1.13.0" full_name="Embedded Remote Procedure Call" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="erpc/erpc_c/infra" type="c_include">
        <files mask="erpc_version.h"/>
        <files mask="erpc_common.h"/>
        <files mask="erpc_pre_post_action.h"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_codec.hpp"/>
        <files mask="erpc_basic_codec.hpp"/>
        <files mask="erpc_transport.hpp"/>
        <files mask="erpc_message_buffer.hpp"/>
        <files mask="erpc_message_loggers.hpp"/>
        <files mask="erpc_manually_constructed.hpp"/>
        <files mask="erpc_crc16.hpp"/>
        <files mask="erpc_client_server_common.hpp"/>
        <files mask="erpc_utils.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_basic_codec.cpp"/>
        <files mask="erpc_message_buffer.cpp"/>
        <files mask="erpc_message_loggers.cpp"/>
        <files mask="erpc_crc16.cpp"/>
        <files mask="erpc_pre_post_action.cpp"/>
        <files mask="erpc_utils.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="c_include">
        <files mask="erpc_transport_setup.h"/>
        <files mask="erpc_mbf_setup.h"/>
      </source>
      <source relative_path="erpc/erpc_c/port" type="c_include">
        <files mask="erpc_setup_extensions.h"/>
        <files mask="erpc_endianness_agnostic_example.h"/>
        <files mask="erpc_endianness_undefined.h"/>
        <files mask="erpc_config_internal.h"/>
      </source>
      <source relative_path="erpc/erpc_c/config" type="c_include">
        <files mask="erpc_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/port" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/config" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/port" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/config" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.doc.MIMXRT1173" name="eRPC" brief="eRPC" version="1.13.0" full_name="Embedded Remote Procedure Call" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="erpc" project_relative_path="erpc_aux" type="other">
        <files mask="Makefile" hidden="true"/>
        <files mask="LICENSE" hidden="true"/>
      </source>
      <source relative_path="erpc" project_relative_path="erpc_aux" type="doc">
        <files mask="README.md" hidden="true"/>
        <files mask="SW-Content-Register.txt" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c" project_relative_path="erpc_aux" type="other">
        <files mask="Makefile" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c" project_relative_path="doc" type="doc">
        <files mask="README.md" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c/config" project_relative_path="erpc_aux" config="true" type="c_include">
        <files mask="erpc_config.h" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c/port" project_relative_path="erpc_aux" type="c_include">
        <files mask="erpc_threading.h" hidden="true"/>
        <files mask="erpc_serial.h" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c/port" project_relative_path="erpc_aux" type="src">
        <files mask="erpc_threading_pthreads.cpp" hidden="true"/>
        <files mask="erpc_serial.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" project_relative_path="erpc_aux" type="src">
        <files mask="erpc_setup_mbf_static.cpp" hidden="true"/>
        <files mask="erpc_setup_serial.cpp" hidden="true"/>
        <files mask="erpc_setup_uart_zephyr.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="erpc_aux" type="src">
        <files mask="erpc_inter_thread_buffer_transport.cpp" hidden="true"/>
        <files mask="erpc_serial_transport.cpp" hidden="true"/>
        <files mask="erpc_tcp_transport.cpp" hidden="true"/>
        <files mask="erpc_uart_zephyr_transport.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" project_relative_path="erpc_aux" type="cpp_include">
        <files mask="erpc_inter_thread_buffer_transport.hpp" hidden="true"/>
        <files mask="erpc_serial_transport.hpp" hidden="true"/>
        <files mask="erpc_tcp_transport.hpp" hidden="true"/>
        <files mask="erpc_uart_zephyr_transport.hpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_python" project_relative_path="erpc_aux" type="script">
        <files mask="setup.py" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_python" project_relative_path="erpc_aux" type="doc">
        <files mask="README_Pypi.md" hidden="true"/>
      </source>
      <source relative_path="erpc/erpc_python/erpc" project_relative_path="erpc_aux" type="script">
        <files mask="__init__.py" hidden="true"/>
        <files mask="arbitrator.py" hidden="true"/>
        <files mask="basic_codec.py" hidden="true"/>
        <files mask="client.py" hidden="true"/>
        <files mask="codec.py" hidden="true"/>
        <files mask="crc16.py" hidden="true"/>
        <files mask="erpc_version.py" hidden="true"/>
        <files mask="server.py" hidden="true"/>
        <files mask="simple_server.py" hidden="true"/>
        <files mask="transport.py" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen" project_relative_path="erpc_aux" type="other">
        <files mask="Makefile" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen" project_relative_path="erpc_aux" type="doc">
        <files mask="README.md" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/bin" project_relative_path="erpc_aux" type="script">
        <files mask="txt_to_c.py" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/embedded-rpc.xcodeproj" project_relative_path="erpc_aux" type="other">
        <files mask="project.pbxproj" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/embedded-rpc.xcodeproj/project.xcworkspace" project_relative_path="erpc_aux" type="other">
        <files mask="contents.xcworkspacedata" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src" project_relative_path="erpc_aux" type="c_include">
        <files mask="annotations.h" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src" project_relative_path="erpc_aux" type="cpp_include">
        <files mask="AstNode.hpp" hidden="true"/>
        <files mask="AstWalker.hpp" hidden="true"/>
        <files mask="CGenerator.hpp" hidden="true"/>
        <files mask="ErpcLexer.hpp" hidden="true"/>
        <files mask="Generator.hpp" hidden="true"/>
        <files mask="HexValues.hpp" hidden="true"/>
        <files mask="InterfaceDefinition.hpp" hidden="true"/>
        <files mask="JavaGenerator.hpp" hidden="true"/>
        <files mask="Logging.hpp" hidden="true"/>
        <files mask="ParseErrors.hpp" hidden="true"/>
        <files mask="PythonGenerator.hpp" hidden="true"/>
        <files mask="SearchPath.hpp" hidden="true"/>
        <files mask="SymbolScanner.hpp" hidden="true"/>
        <files mask="Token.hpp" hidden="true"/>
        <files mask="UniqueIdChecker.hpp" hidden="true"/>
        <files mask="Utils.hpp" hidden="true"/>
        <files mask="Value.hpp" hidden="true"/>
        <files mask="format_string.hpp" hidden="true"/>
        <files mask="options.hpp" hidden="true"/>
        <files mask="os_config.hpp" hidden="true"/>
        <files mask="smart_ptr.hpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src" project_relative_path="erpc_aux" type="src">
        <files mask="AstNode.cpp" hidden="true"/>
        <files mask="AstWalker.cpp" hidden="true"/>
        <files mask="CGenerator.cpp" hidden="true"/>
        <files mask="ErpcLexer.cpp" hidden="true"/>
        <files mask="Generator.cpp" hidden="true"/>
        <files mask="HexValues.cpp" hidden="true"/>
        <files mask="InterfaceDefinition.cpp" hidden="true"/>
        <files mask="JavaGenerator.cpp" hidden="true"/>
        <files mask="Logging.cpp" hidden="true"/>
        <files mask="ParseErrors.cpp" hidden="true"/>
        <files mask="PythonGenerator.cpp" hidden="true"/>
        <files mask="SearchPath.cpp" hidden="true"/>
        <files mask="SymbolScanner.cpp" hidden="true"/>
        <files mask="Token.cpp" hidden="true"/>
        <files mask="UniqueIdChecker.cpp" hidden="true"/>
        <files mask="Utils.cpp" hidden="true"/>
        <files mask="erpcgen.cpp" hidden="true"/>
        <files mask="format_string.cpp" hidden="true"/>
        <files mask="options.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src" project_relative_path="erpc_aux" type="other">
        <files mask="erpcgen_lexer.l" hidden="true"/>
        <files mask="erpcgen_parser.y" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src/cpptemplate" project_relative_path="erpc_aux" type="cpp_include">
        <files mask="cpptempl.hpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src/cpptemplate" project_relative_path="erpc_aux" type="src">
        <files mask="cpptempl.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src/cpptemplate" project_relative_path="erpc_aux" type="other">
        <files mask="README.rst" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src/cpptemplate" project_relative_path="erpc_aux" type="doc">
        <files mask="LICENSE.txt" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src/templates" project_relative_path="erpc_aux" type="other">
        <files mask="c_client_header.template" hidden="true"/>
        <files mask="c_client_source.template" hidden="true"/>
        <files mask="c_common_header.template" hidden="true"/>
        <files mask="c_crc.template" hidden="true"/>
        <files mask="c_server_header.template" hidden="true"/>
        <files mask="c_server_source.template" hidden="true"/>
        <files mask="cpp_client_header.template" hidden="true"/>
        <files mask="cpp_client_source.template" hidden="true"/>
        <files mask="cpp_coders.template" hidden="true"/>
        <files mask="cpp_common_functions.template" hidden="true"/>
        <files mask="cpp_interface_header.template" hidden="true"/>
        <files mask="cpp_interface_source.template" hidden="true"/>
        <files mask="cpp_server_header.template" hidden="true"/>
        <files mask="cpp_server_source.template" hidden="true"/>
        <files mask="java_client.template" hidden="true"/>
        <files mask="java_coders.template" hidden="true"/>
        <files mask="java_const.template" hidden="true"/>
        <files mask="java_enum.template" hidden="true"/>
        <files mask="java_interface.template" hidden="true"/>
        <files mask="java_server.template" hidden="true"/>
        <files mask="java_struct.template" hidden="true"/>
        <files mask="py_client.template" hidden="true"/>
        <files mask="py_coders.template" hidden="true"/>
        <files mask="py_common.template" hidden="true"/>
        <files mask="py_global_init.template" hidden="true"/>
        <files mask="py_init.template" hidden="true"/>
        <files mask="py_interface.template" hidden="true"/>
        <files mask="py_server.template" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src/types" project_relative_path="erpc_aux" type="cpp_include">
        <files mask="AliasType.hpp" hidden="true"/>
        <files mask="Annotation.hpp" hidden="true"/>
        <files mask="ArrayType.hpp" hidden="true"/>
        <files mask="BuiltinType.hpp" hidden="true"/>
        <files mask="ConstType.hpp" hidden="true"/>
        <files mask="DataType.hpp" hidden="true"/>
        <files mask="EnumMember.hpp" hidden="true"/>
        <files mask="EnumType.hpp" hidden="true"/>
        <files mask="Function.hpp" hidden="true"/>
        <files mask="FunctionType.hpp" hidden="true"/>
        <files mask="Group.hpp" hidden="true"/>
        <files mask="Interface.hpp" hidden="true"/>
        <files mask="ListType.hpp" hidden="true"/>
        <files mask="Program.hpp" hidden="true"/>
        <files mask="StructMember.hpp" hidden="true"/>
        <files mask="StructType.hpp" hidden="true"/>
        <files mask="Symbol.hpp" hidden="true"/>
        <files mask="SymbolScope.hpp" hidden="true"/>
        <files mask="UnionCase.hpp" hidden="true"/>
        <files mask="UnionType.hpp" hidden="true"/>
        <files mask="VoidType.hpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/src/types" project_relative_path="erpc_aux" type="src">
        <files mask="Type.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/VisualStudio_v14" project_relative_path="erpc_aux" type="other">
        <files mask="erpcgen.sln" hidden="true"/>
        <files mask="erpcgen.vcxproj" hidden="true"/>
        <files mask="erpcgen.vcxproj.filters" hidden="true"/>
        <files mask="erpcgen.vcxproj.user" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/VisualStudio_v14" project_relative_path="erpc_aux" type="doc">
        <files mask="readme_erpcgen.txt" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/VisualStudio_v14" project_relative_path="erpc_aux" type="src">
        <files mask="stdafx.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcgen/VisualStudio_v14" project_relative_path="erpc_aux" type="c_include">
        <files mask="stdafx.h" hidden="true"/>
        <files mask="stdbool.h" hidden="true"/>
        <files mask="targetver.h" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcsniffer" project_relative_path="erpc_aux" type="other">
        <files mask="Makefile" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcsniffer" project_relative_path="erpc_aux" type="doc">
        <files mask="readme.txt" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcsniffer/src" project_relative_path="erpc_aux" type="c_include">
        <files mask="erpc_config.h" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcsniffer/src" project_relative_path="erpc_aux" type="cpp_include">
        <files mask="Sniffer.hpp" hidden="true"/>
      </source>
      <source relative_path="erpc/erpcsniffer/src" project_relative_path="erpc_aux" type="src">
        <files mask="Sniffer.cpp" hidden="true"/>
        <files mask="erpcsniffer.cpp" hidden="true"/>
      </source>
      <source relative_path="erpc/mk" project_relative_path="erpc_aux" type="script">
        <files mask="common.mk" hidden="true"/>
        <files mask="erpc_common.mk" hidden="true"/>
        <files mask="flags.mk" hidden="true"/>
        <files mask="paths.mk" hidden="true"/>
        <files mask="subdirs.mk" hidden="true"/>
        <files mask="targets.mk" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities" project_relative_path="erpc_aux" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities/styles" project_relative_path="erpc_aux" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities/styles/NOTEPADpp" project_relative_path="erpc_aux" type="xml">
        <files mask="IDl_deep_black.xml" hidden="true"/>
        <files mask="IDl_default.xml" hidden="true"/>
        <files mask="template_deep_black.xml" hidden="true"/>
        <files mask="template_default.xml" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities/styles/VSC" project_relative_path="erpc_aux" type="doc">
        <files mask="CHANGELOG.md" hidden="true"/>
        <files mask="README.md" hidden="true"/>
        <files mask="vsc-extension-quickstart.md" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities/styles/VSC" project_relative_path="erpc_aux" type="other">
        <files mask="language-configuration.json" hidden="true"/>
        <files mask="package.json" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities/styles/VSC/.vscode" project_relative_path="erpc_aux" type="other">
        <files mask="launch.json" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities/styles/VSC/img" project_relative_path="erpc_aux" type="image">
        <files mask="erpcPic.png" hidden="true"/>
        <files mask="templatePic.png" hidden="true"/>
      </source>
      <source relative_path="erpc/utilities/styles/VSC/syntaxes" project_relative_path="erpc_aux" type="other">
        <files mask="erpc.tmLanguage.json" hidden="true"/>
        <files mask="template.tmLanguage.json" hidden="true"/>
      </source>
      <source relative_path="tools/erpcgen/Linux_x64" project_relative_path="erpc_aux" type="other">
        <files mask="erpcgen" hidden="true"/>
      </source>
      <source relative_path="tools/erpcgen/Linux_x86" project_relative_path="erpc_aux" type="other">
        <files mask="erpcgen" hidden="true"/>
      </source>
      <source relative_path="tools/erpcgen/Mac" project_relative_path="erpc_aux" type="other">
        <files mask="erpcgen" hidden="true"/>
      </source>
      <source relative_path="tools/erpcgen/Windows" project_relative_path="erpc_aux" type="other">
        <files mask="erpcgen.exe" hidden="true"/>
      </source>
      <source relative_path="tools/erpcsniffer/Linux_x64" project_relative_path="erpc_aux" type="other">
        <files mask="erpcsniffer" hidden="true"/>
      </source>
      <source relative_path="tools/erpcsniffer/Linux_x86" project_relative_path="erpc_aux" type="other">
        <files mask="erpcsniffer" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_doc.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.MIMXRT1173" name="multicore middleware" brief="Multicore SDK" version="2.16.0" full_name="Multicore Software Development Kit" category="Multicore/MulticoreSDK" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="multicore">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
    </component>
    <component id="middleware.mmcau.common_files.MIMXRT1173" name="mmcau" brief="MMCAU common library source files" version="2.0.4" full_name="Kinetis MMCAU common source files" category="MMCAU Security/MMCAU library" user_visible="true" type="middleware" package_base_path="middleware/mmcau" project_base_path="mmcau">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="cau_api.h"/>
        <files mask="fsl_mmcau.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mmcau.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mmcau_common_files.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mmcau.mmcau_files.MIMXRT1173" name="mmcau" brief="MMCAU security function library source files" version="2.0.4" full_name="Kinetis MMCAU security function library source files" category="MMCAU Security/MMCAU library" user_visible="false" type="middleware" package_base_path="middleware/mmcau" project_base_path="mmcau">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="CMakeLists.txt"/>
        <files mask="ChangeLogKSDK.txt"/>
        <files mask="README.txt"/>
        <files mask="SCR.txt"/>
      </source>
      <source relative_path="asm-cm4-cm7/src" type="other" device_cores="cm4_MIMXRT1173xxxxx cm7_MIMXRT1173xxxxx">
        <files mask="cau2_defines.hdr"/>
      </source>
      <source relative_path="asm-cm4-cm7/src" type="asm_include" device_cores="cm4_MIMXRT1173xxxxx cm7_MIMXRT1173xxxxx">
        <files mask="mmcau_aes_functions.s"/>
        <files mask="mmcau_des_functions.s"/>
        <files mask="mmcau_md5_functions.s"/>
        <files mask="mmcau_sha1_functions.s"/>
        <files mask="mmcau_sha256_functions.s"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mmcau_mmcau_files.cmake" hidden="true"/>
      </source>
    </component>
    <!--<component id="middleware.mmcau.unused_files.MIMXRT1173" name="MMCAU_unused_files" version="2.0.4" package_base_path="middleware/mmcau" project_base_path="mmcau">
  <source exclude="true" relative_path="doxygen" type="other">
    <files mask="fsl_mmcau.dox" hidden="true"/>
  </source>
</component>-->
    <component id="middleware.mbedtls.port.els_option.MIMXRT1173" name="mbedtls_els_option" brief="mbedTLS port library for ELS" version="2.28.8" full_name="MbedTLS MCUX SDK port layer via ELS" category="Security/mbedTLS library" user_visible="true" type="middleware" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
    </component>
    <component id="middleware.mbedtls.port.ksdk_option.MIMXRT1173" name="mbedtls_ksdk_option" brief="mbedTLS port library for KPSDK" version="2.28.8" full_name="MbedTLS MCUX SDK port layer option" category="Security/mbedTLS library" user_visible="true" type="middleware" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
    </component>
    <!--<component id="container.middleware.mbedtls.unused_files.MIMXRT1173" name="unused_files" version="2.28.8" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
  <source exclude="true" relative_path=".github" type="other">
    <files mask="issue_template.md" hidden="true"/>
    <files mask="pull_request_template.md" hidden="true"/>
  </source>
  <source exclude="true" relative_path="3rdparty" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="3rdparty" type="asm_include">
    <files mask="Makefile.inc" hidden="true"/>
  </source>
  <source exclude="true" relative_path="ChangeLog.d" type="other">
    <files mask="00README.md" hidden="true"/>
  </source>
  <source exclude="true" relative_path="configs" type="doc">
    <files mask="README.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="configs" type="c_include">
    <files mask="config-ccm-psk-dtls1_2.h" hidden="true"/>
    <files mask="config-ccm-psk-tls1_2.h" hidden="true"/>
    <files mask="config-mini-tls1_1.h" hidden="true"/>
    <files mask="config-no-entropy.h" hidden="true"/>
    <files mask="config-suite-b.h" hidden="true"/>
    <files mask="config-symmetric-only.h" hidden="true"/>
    <files mask="config-thread.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="docs" type="script">
    <files mask="conf.py" hidden="true"/>
  </source>
  <source exclude="true" relative_path="docs" type="other">
    <files mask="index.rst" hidden="true"/>
    <files mask="requirements.in" hidden="true"/>
    <files mask="use-psa-crypto.md" hidden="true"/>
  </source>
  <source exclude="true" relative_path="docs" type="doc">
    <files mask="requirements.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="doxygen" type="other">
    <files mask="mbedtls.doxyfile" hidden="true"/>
  </source>
  <source exclude="true" relative_path="doxygen/input" type="c_include">
    <files mask="doc_encdec.h" hidden="true"/>
    <files mask="doc_hashing.h" hidden="true"/>
    <files mask="doc_mainpage.h" hidden="true"/>
    <files mask="doc_rng.h" hidden="true"/>
    <files mask="doc_ssltls.h" hidden="true"/>
    <files mask="doc_tcpip.h" hidden="true"/>
    <files mask="doc_x509.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="include" type="other">
    <files mask=".gitignore" hidden="true"/>
  </source>
  <source exclude="true" relative_path="include" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="library" type="other">
    <files mask=".gitignore" hidden="true"/>
    <files mask="Makefile" hidden="true"/>
  </source>
  <source exclude="true" relative_path="library" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="pkgconfig" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="pkgconfig" type="script">
    <files mask="JoinPaths.cmake" hidden="true"/>
  </source>
  <source exclude="true" relative_path="pkgconfig" type="other">
    <files mask="mbedcrypto.pc.in" hidden="true"/>
    <files mask="mbedtls.pc.in" hidden="true"/>
    <files mask="mbedx509.pc.in" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs" type="other">
    <files mask="README.md" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs" type="script">
    <files mask="demo_common.sh" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs" type="src">
    <files mask="wince_main.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/aes" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/aes" type="src">
    <files mask="crypt_and_hash.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/fuzz" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/fuzz" type="other">
    <files mask="README.md" hidden="true"/>
    <files mask="fuzz_client.options" hidden="true"/>
    <files mask="fuzz_dtlsclient.options" hidden="true"/>
    <files mask="fuzz_dtlsserver.options" hidden="true"/>
    <files mask="fuzz_privkey.options" hidden="true"/>
    <files mask="fuzz_pubkey.options" hidden="true"/>
    <files mask="fuzz_server.options" hidden="true"/>
    <files mask="fuzz_x509crl.options" hidden="true"/>
    <files mask="fuzz_x509crt.options" hidden="true"/>
    <files mask="fuzz_x509csr.options" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/fuzz" type="src">
    <files mask="common.c" hidden="true"/>
    <files mask="fuzz_client.c" hidden="true"/>
    <files mask="fuzz_dtlsclient.c" hidden="true"/>
    <files mask="fuzz_dtlsserver.c" hidden="true"/>
    <files mask="fuzz_privkey.c" hidden="true"/>
    <files mask="fuzz_pubkey.c" hidden="true"/>
    <files mask="fuzz_server.c" hidden="true"/>
    <files mask="fuzz_x509crl.c" hidden="true"/>
    <files mask="fuzz_x509crt.c" hidden="true"/>
    <files mask="fuzz_x509csr.c" hidden="true"/>
    <files mask="onefile.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/fuzz" type="c_include">
    <files mask="common.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/hash" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/hash" type="src">
    <files mask="generic_sum.c" hidden="true"/>
    <files mask="hello.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/pkey" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
    <files mask="dh_prime.txt" hidden="true"/>
    <files mask="rsa_priv.txt" hidden="true"/>
    <files mask="rsa_pub.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/pkey" type="src">
    <files mask="dh_client.c" hidden="true"/>
    <files mask="dh_genprime.c" hidden="true"/>
    <files mask="dh_server.c" hidden="true"/>
    <files mask="ecdh_curve25519.c" hidden="true"/>
    <files mask="ecdsa.c" hidden="true"/>
    <files mask="gen_key.c" hidden="true"/>
    <files mask="key_app.c" hidden="true"/>
    <files mask="key_app_writer.c" hidden="true"/>
    <files mask="mpi_demo.c" hidden="true"/>
    <files mask="pk_decrypt.c" hidden="true"/>
    <files mask="pk_encrypt.c" hidden="true"/>
    <files mask="pk_sign.c" hidden="true"/>
    <files mask="pk_verify.c" hidden="true"/>
    <files mask="rsa_decrypt.c" hidden="true"/>
    <files mask="rsa_encrypt.c" hidden="true"/>
    <files mask="rsa_genkey.c" hidden="true"/>
    <files mask="rsa_sign.c" hidden="true"/>
    <files mask="rsa_sign_pss.c" hidden="true"/>
    <files mask="rsa_verify.c" hidden="true"/>
    <files mask="rsa_verify_pss.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/random" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/random" type="src">
    <files mask="gen_entropy.c" hidden="true"/>
    <files mask="gen_random_ctr_drbg.c" hidden="true"/>
    <files mask="gen_random_havege.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/ssl" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/ssl" type="src">
    <files mask="dtls_client.c" hidden="true"/>
    <files mask="dtls_server.c" hidden="true"/>
    <files mask="mini_client.c" hidden="true"/>
    <files mask="ssl_client1.c" hidden="true"/>
    <files mask="ssl_client2.c" hidden="true"/>
    <files mask="ssl_context_info.c" hidden="true"/>
    <files mask="ssl_fork_server.c" hidden="true"/>
    <files mask="ssl_mail_client.c" hidden="true"/>
    <files mask="ssl_pthread_server.c" hidden="true"/>
    <files mask="ssl_server.c" hidden="true"/>
    <files mask="ssl_server2.c" hidden="true"/>
    <files mask="ssl_test_common_source.c" hidden="true"/>
    <files mask="ssl_test_lib.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/ssl" type="c_include">
    <files mask="ssl_test_lib.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/test" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/test" type="src">
    <files mask="benchmark.c" hidden="true"/>
    <files mask="dlopen.c" hidden="true"/>
    <files mask="metatest.c" hidden="true"/>
    <files mask="query_compile_time_config.c" hidden="true"/>
    <files mask="query_config.c" hidden="true"/>
    <files mask="selftest.c" hidden="true"/>
    <files mask="udp_proxy.c" hidden="true"/>
    <files mask="zeroize.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/test" type="script">
    <files mask="dlopen_demo.sh" hidden="true"/>
    <files mask="generate_cpp_dummy_build.sh" hidden="true"/>
    <files mask="udp_proxy_wrapper.sh" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/test" type="c_include">
    <files mask="query_config.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/util" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/util" type="src">
    <files mask="pem2der.c" hidden="true"/>
    <files mask="strerror.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/x509" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/x509" type="src">
    <files mask="cert_app.c" hidden="true"/>
    <files mask="cert_req.c" hidden="true"/>
    <files mask="cert_write.c" hidden="true"/>
    <files mask="crl_app.c" hidden="true"/>
    <files mask="load_roots.c" hidden="true"/>
    <files mask="req_app.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="scripts" type="script">
    <files mask="abi_check.py" hidden="true"/>
    <files mask="apidoc_full.sh" hidden="true"/>
    <files mask="assemble_changelog.py" hidden="true"/>
    <files mask="bump_version.sh" hidden="true"/>
    <files mask="code_style.py" hidden="true"/>
    <files mask="config.py" hidden="true"/>
    <files mask="ecc-heap.sh" hidden="true"/>
    <files mask="footprint.sh" hidden="true"/>
    <files mask="generate_psa_constants.py" hidden="true"/>
    <files mask="lcov.sh" hidden="true"/>
    <files mask="memory.sh" hidden="true"/>
    <files mask="min_requirements.py" hidden="true"/>
    <files mask="output_env.sh" hidden="true"/>
    <files mask="tmp_ignore_makefiles.sh" hidden="true"/>
    <files mask="windows_msbuild.bat" hidden="true"/>
  </source>
  <source exclude="true" relative_path="scripts" type="doc">
    <files mask="ci.requirements.txt" hidden="true"/>
    <files mask="maintainer.requirements.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="scripts" type="other">
    <files mask="config.pl" hidden="true"/>
    <files mask="generate_errors.pl" hidden="true"/>
    <files mask="generate_features.pl" hidden="true"/>
    <files mask="generate_query_config.pl" hidden="true"/>
    <files mask="generate_visualc_files.pl" hidden="true"/>
    <files mask="massif_max.pl" hidden="true"/>
    <files mask="rename.pl" hidden="true"/>
  </source>
  <source exclude="true" relative_path="scripts/data_files" type="other">
    <files mask="error.fmt" hidden="true"/>
    <files mask="query_config.fmt" hidden="true"/>
    <files mask="version_features.fmt" hidden="true"/>
    <files mask="vs2010-app-template.vcxproj" hidden="true"/>
    <files mask="vs2010-main-template.vcxproj" hidden="true"/>
    <files mask="vs2010-sln-template.sln" hidden="true"/>
    <files mask="vs6-app-template.dsp" hidden="true"/>
    <files mask="vs6-main-template.dsp" hidden="true"/>
    <files mask="vs6-workspace-template.dsw" hidden="true"/>
  </source>
  <source exclude="true" relative_path="scripts/data_files" type="doc">
    <files mask="rename-1.3-2.0.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="scripts/mbedtls_dev" type="script">
    <files mask="__init__.py" hidden="true"/>
    <files mask="asymmetric_key_data.py" hidden="true"/>
    <files mask="build_tree.py" hidden="true"/>
    <files mask="c_build_helper.py" hidden="true"/>
    <files mask="c_parsing_helper.py" hidden="true"/>
    <files mask="c_wrapper_generator.py" hidden="true"/>
    <files mask="crypto_data_tests.py" hidden="true"/>
    <files mask="crypto_knowledge.py" hidden="true"/>
    <files mask="macro_collector.py" hidden="true"/>
    <files mask="psa_information.py" hidden="true"/>
    <files mask="psa_storage.py" hidden="true"/>
    <files mask="test_case.py" hidden="true"/>
    <files mask="test_data_generation.py" hidden="true"/>
    <files mask="typing_util.py" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests" type="other">
    <files mask="Makefile" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/.jenkins" type="other">
    <files mask="Jenkinsfile" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/data_files" type="other">
    <files mask="Makefile" hidden="true"/>
    <files mask="hash_file_1" hidden="true"/>
    <files mask="hash_file_2" hidden="true"/>
    <files mask="hash_file_3" hidden="true"/>
    <files mask="hash_file_4" hidden="true"/>
    <files mask="hash_file_5" hidden="true"/>
    <files mask="mpi_16" hidden="true"/>
    <files mask="mpi_too_big" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/data_files/dir3" type="other">
    <files mask="Readme" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/data_files/dir4" type="other">
    <files mask="Readme" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/git-scripts" type="other">
    <files mask="README.md" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/git-scripts" type="script">
    <files mask="pre-commit.sh" hidden="true"/>
    <files mask="pre-push.sh" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/scripts" type="script">
    <files mask="all-in-docker.sh" hidden="true"/>
    <files mask="all.sh" hidden="true"/>
    <files mask="analyze_outcomes.py" hidden="true"/>
    <files mask="basic-build-test.sh" hidden="true"/>
    <files mask="basic-in-docker.sh" hidden="true"/>
    <files mask="check-generated-files.sh" hidden="true"/>
    <files mask="check-python-files.sh" hidden="true"/>
    <files mask="check_files.py" hidden="true"/>
    <files mask="check_names.py" hidden="true"/>
    <files mask="check_test_cases.py" hidden="true"/>
    <files mask="depends.py" hidden="true"/>
    <files mask="docker_env.sh" hidden="true"/>
    <files mask="doxygen.sh" hidden="true"/>
    <files mask="generate-afl-tests.sh" hidden="true"/>
    <files mask="generate_bignum_tests.py" hidden="true"/>
    <files mask="generate_psa_tests.py" hidden="true"/>
    <files mask="generate_psa_wrappers.py" hidden="true"/>
    <files mask="generate_server9_bad_saltlen.py" hidden="true"/>
    <files mask="generate_test_code.py" hidden="true"/>
    <files mask="list-identifiers.sh" hidden="true"/>
    <files mask="list_internal_identifiers.py" hidden="true"/>
    <files mask="psa_collect_statuses.py" hidden="true"/>
    <files mask="run-metatests.sh" hidden="true"/>
    <files mask="run_demos.py" hidden="true"/>
    <files mask="scripts_path.py" hidden="true"/>
    <files mask="set_psa_test_dependencies.py" hidden="true"/>
    <files mask="test_config_script.py" hidden="true"/>
    <files mask="test_generate_test_code.py" hidden="true"/>
    <files mask="test_psa_compliance.py" hidden="true"/>
    <files mask="test_psa_constant_names.py" hidden="true"/>
    <files mask="travis-log-failure.sh" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/scripts" type="other">
    <files mask="check-doxy-blocks.pl" hidden="true"/>
    <files mask="gen_ctr_drbg.pl" hidden="true"/>
    <files mask="gen_gcm_decrypt.pl" hidden="true"/>
    <files mask="gen_gcm_encrypt.pl" hidden="true"/>
    <files mask="gen_pkcs1_v21_sign_verify.pl" hidden="true"/>
    <files mask="recursion.pl" hidden="true"/>
    <files mask="run-test-suites.pl" hidden="true"/>
    <files mask="tcp_client.pl" hidden="true"/>
    <files mask="test-ref-configs.pl" hidden="true"/>
    <files mask="test_zeroize.gdb" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/src" type="src">
    <files mask="asn1_helpers.c" hidden="true"/>
    <files mask="fake_external_rng_for_test.c" hidden="true"/>
    <files mask="helpers.c" hidden="true"/>
    <files mask="psa_crypto_helpers.c" hidden="true"/>
    <files mask="psa_exercise_key.c" hidden="true"/>
    <files mask="psa_memory_poisoning_wrappers.c" hidden="true"/>
    <files mask="psa_test_wrappers.c" hidden="true"/>
    <files mask="random.c" hidden="true"/>
    <files mask="test_memory.c" hidden="true"/>
    <files mask="threading_helpers.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/suites" type="other">
    <files mask="helpers.function" hidden="true"/>
    <files mask="host_test.function" hidden="true"/>
    <files mask="main_test.function" hidden="true"/>
    <files mask="test_suite_aes.cbc.data" hidden="true"/>
    <files mask="test_suite_aes.cfb.data" hidden="true"/>
    <files mask="test_suite_aes.ecb.data" hidden="true"/>
    <files mask="test_suite_aes.function" hidden="true"/>
    <files mask="test_suite_aes.ofb.data" hidden="true"/>
    <files mask="test_suite_aes.rest.data" hidden="true"/>
    <files mask="test_suite_aes.xts.data" hidden="true"/>
    <files mask="test_suite_arc4.data" hidden="true"/>
    <files mask="test_suite_arc4.function" hidden="true"/>
    <files mask="test_suite_aria.data" hidden="true"/>
    <files mask="test_suite_aria.function" hidden="true"/>
    <files mask="test_suite_asn1parse.data" hidden="true"/>
    <files mask="test_suite_asn1parse.function" hidden="true"/>
    <files mask="test_suite_asn1write.data" hidden="true"/>
    <files mask="test_suite_asn1write.function" hidden="true"/>
    <files mask="test_suite_base64.data" hidden="true"/>
    <files mask="test_suite_base64.function" hidden="true"/>
    <files mask="test_suite_bignum.function" hidden="true"/>
    <files mask="test_suite_bignum.generated.data" hidden="true"/>
    <files mask="test_suite_bignum.misc.data" hidden="true"/>
    <files mask="test_suite_blowfish.data" hidden="true"/>
    <files mask="test_suite_blowfish.function" hidden="true"/>
    <files mask="test_suite_camellia.data" hidden="true"/>
    <files mask="test_suite_camellia.function" hidden="true"/>
    <files mask="test_suite_ccm.data" hidden="true"/>
    <files mask="test_suite_ccm.function" hidden="true"/>
    <files mask="test_suite_chacha20.data" hidden="true"/>
    <files mask="test_suite_chacha20.function" hidden="true"/>
    <files mask="test_suite_chachapoly.data" hidden="true"/>
    <files mask="test_suite_chachapoly.function" hidden="true"/>
    <files mask="test_suite_cipher.aes.data" hidden="true"/>
    <files mask="test_suite_cipher.arc4.data" hidden="true"/>
    <files mask="test_suite_cipher.aria.data" hidden="true"/>
    <files mask="test_suite_cipher.blowfish.data" hidden="true"/>
    <files mask="test_suite_cipher.camellia.data" hidden="true"/>
    <files mask="test_suite_cipher.ccm.data" hidden="true"/>
    <files mask="test_suite_cipher.chacha20.data" hidden="true"/>
    <files mask="test_suite_cipher.chachapoly.data" hidden="true"/>
    <files mask="test_suite_cipher.des.data" hidden="true"/>
    <files mask="test_suite_cipher.function" hidden="true"/>
    <files mask="test_suite_cipher.gcm.data" hidden="true"/>
    <files mask="test_suite_cipher.misc.data" hidden="true"/>
    <files mask="test_suite_cipher.nist_kw.data" hidden="true"/>
    <files mask="test_suite_cipher.null.data" hidden="true"/>
    <files mask="test_suite_cipher.padding.data" hidden="true"/>
    <files mask="test_suite_cmac.data" hidden="true"/>
    <files mask="test_suite_cmac.function" hidden="true"/>
    <files mask="test_suite_constant_time.data" hidden="true"/>
    <files mask="test_suite_constant_time.function" hidden="true"/>
    <files mask="test_suite_constant_time_hmac.data" hidden="true"/>
    <files mask="test_suite_constant_time_hmac.function" hidden="true"/>
    <files mask="test_suite_ctr_drbg.data" hidden="true"/>
    <files mask="test_suite_ctr_drbg.function" hidden="true"/>
    <files mask="test_suite_debug.data" hidden="true"/>
    <files mask="test_suite_debug.function" hidden="true"/>
    <files mask="test_suite_des.data" hidden="true"/>
    <files mask="test_suite_des.function" hidden="true"/>
    <files mask="test_suite_dhm.data" hidden="true"/>
    <files mask="test_suite_dhm.function" hidden="true"/>
    <files mask="test_suite_ecdh.data" hidden="true"/>
    <files mask="test_suite_ecdh.function" hidden="true"/>
    <files mask="test_suite_ecdsa.data" hidden="true"/>
    <files mask="test_suite_ecdsa.function" hidden="true"/>
    <files mask="test_suite_ecjpake.data" hidden="true"/>
    <files mask="test_suite_ecjpake.function" hidden="true"/>
    <files mask="test_suite_ecp.data" hidden="true"/>
    <files mask="test_suite_ecp.function" hidden="true"/>
    <files mask="test_suite_entropy.data" hidden="true"/>
    <files mask="test_suite_entropy.function" hidden="true"/>
    <files mask="test_suite_error.data" hidden="true"/>
    <files mask="test_suite_error.function" hidden="true"/>
    <files mask="test_suite_gcm.aes128_de.data" hidden="true"/>
    <files mask="test_suite_gcm.aes128_en.data" hidden="true"/>
    <files mask="test_suite_gcm.aes192_de.data" hidden="true"/>
    <files mask="test_suite_gcm.aes192_en.data" hidden="true"/>
    <files mask="test_suite_gcm.aes256_de.data" hidden="true"/>
    <files mask="test_suite_gcm.aes256_en.data" hidden="true"/>
    <files mask="test_suite_gcm.camellia.data" hidden="true"/>
    <files mask="test_suite_gcm.function" hidden="true"/>
    <files mask="test_suite_gcm.misc.data" hidden="true"/>
    <files mask="test_suite_hkdf.data" hidden="true"/>
    <files mask="test_suite_hkdf.function" hidden="true"/>
    <files mask="test_suite_hmac_drbg.function" hidden="true"/>
    <files mask="test_suite_hmac_drbg.misc.data" hidden="true"/>
    <files mask="test_suite_hmac_drbg.no_reseed.data" hidden="true"/>
    <files mask="test_suite_hmac_drbg.nopr.data" hidden="true"/>
    <files mask="test_suite_hmac_drbg.pr.data" hidden="true"/>
    <files mask="test_suite_md.data" hidden="true"/>
    <files mask="test_suite_md.function" hidden="true"/>
    <files mask="test_suite_mdx.data" hidden="true"/>
    <files mask="test_suite_mdx.function" hidden="true"/>
    <files mask="test_suite_memory_buffer_alloc.data" hidden="true"/>
    <files mask="test_suite_memory_buffer_alloc.function" hidden="true"/>
    <files mask="test_suite_mps.data" hidden="true"/>
    <files mask="test_suite_mps.function" hidden="true"/>
    <files mask="test_suite_net.data" hidden="true"/>
    <files mask="test_suite_net.function" hidden="true"/>
    <files mask="test_suite_nist_kw.data" hidden="true"/>
    <files mask="test_suite_nist_kw.function" hidden="true"/>
    <files mask="test_suite_oid.data" hidden="true"/>
    <files mask="test_suite_oid.function" hidden="true"/>
    <files mask="test_suite_pem.data" hidden="true"/>
    <files mask="test_suite_pem.function" hidden="true"/>
    <files mask="test_suite_pk.data" hidden="true"/>
    <files mask="test_suite_pk.function" hidden="true"/>
    <files mask="test_suite_pkcs12.data" hidden="true"/>
    <files mask="test_suite_pkcs12.function" hidden="true"/>
    <files mask="test_suite_pkcs1_v15.data" hidden="true"/>
    <files mask="test_suite_pkcs1_v15.function" hidden="true"/>
    <files mask="test_suite_pkcs1_v21.data" hidden="true"/>
    <files mask="test_suite_pkcs1_v21.function" hidden="true"/>
    <files mask="test_suite_pkcs5.data" hidden="true"/>
    <files mask="test_suite_pkcs5.function" hidden="true"/>
    <files mask="test_suite_pkparse.data" hidden="true"/>
    <files mask="test_suite_pkparse.function" hidden="true"/>
    <files mask="test_suite_pkwrite.data" hidden="true"/>
    <files mask="test_suite_pkwrite.function" hidden="true"/>
    <files mask="test_suite_platform_printf.data" hidden="true"/>
    <files mask="test_suite_platform_printf.function" hidden="true"/>
    <files mask="test_suite_poly1305.data" hidden="true"/>
    <files mask="test_suite_poly1305.function" hidden="true"/>
    <files mask="test_suite_psa_crypto.data" hidden="true"/>
    <files mask="test_suite_psa_crypto.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_attributes.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_attributes.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_driver_wrappers.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_driver_wrappers.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_entropy.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_entropy.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_generate_key.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_generate_key.generated.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_hash.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_hash.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_init.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_init.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_low_hash.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_low_hash.generated.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_memory.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_memory.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_metadata.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_metadata.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_not_supported.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_not_supported.generated.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_not_supported.misc.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_op_fail.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_op_fail.generated.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_op_fail.misc.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_persistent_key.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_persistent_key.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_se_driver_hal.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_se_driver_hal.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_se_driver_hal_mocks.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_se_driver_hal_mocks.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_slot_management.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_slot_management.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_storage_format.current.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_storage_format.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_storage_format.misc.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_storage_format.v0.data" hidden="true"/>
    <files mask="test_suite_psa_its.data" hidden="true"/>
    <files mask="test_suite_psa_its.function" hidden="true"/>
    <files mask="test_suite_random.data" hidden="true"/>
    <files mask="test_suite_random.function" hidden="true"/>
    <files mask="test_suite_rsa.data" hidden="true"/>
    <files mask="test_suite_rsa.function" hidden="true"/>
    <files mask="test_suite_shax.data" hidden="true"/>
    <files mask="test_suite_shax.function" hidden="true"/>
    <files mask="test_suite_ssl.data" hidden="true"/>
    <files mask="test_suite_ssl.function" hidden="true"/>
    <files mask="test_suite_ssl_decrypt.function" hidden="true"/>
    <files mask="test_suite_ssl_decrypt.misc.data" hidden="true"/>
    <files mask="test_suite_test_helpers.data" hidden="true"/>
    <files mask="test_suite_test_helpers.function" hidden="true"/>
    <files mask="test_suite_timing.data" hidden="true"/>
    <files mask="test_suite_timing.function" hidden="true"/>
    <files mask="test_suite_version.data" hidden="true"/>
    <files mask="test_suite_version.function" hidden="true"/>
    <files mask="test_suite_x509parse.data" hidden="true"/>
    <files mask="test_suite_x509parse.function" hidden="true"/>
    <files mask="test_suite_x509write.data" hidden="true"/>
    <files mask="test_suite_x509write.function" hidden="true"/>
    <files mask="test_suite_xtea.data" hidden="true"/>
    <files mask="test_suite_xtea.function" hidden="true"/>
  </source>
  <source exclude="true" relative_path="visualc/VS2010" type="other">
    <files mask="benchmark.vcxproj" hidden="true"/>
    <files mask="cert_app.vcxproj" hidden="true"/>
    <files mask="cert_req.vcxproj" hidden="true"/>
    <files mask="cert_write.vcxproj" hidden="true"/>
    <files mask="crl_app.vcxproj" hidden="true"/>
    <files mask="crypt_and_hash.vcxproj" hidden="true"/>
    <files mask="crypto_examples.vcxproj" hidden="true"/>
    <files mask="dh_client.vcxproj" hidden="true"/>
    <files mask="dh_genprime.vcxproj" hidden="true"/>
    <files mask="dh_server.vcxproj" hidden="true"/>
    <files mask="dtls_client.vcxproj" hidden="true"/>
    <files mask="dtls_server.vcxproj" hidden="true"/>
    <files mask="ecdh_curve25519.vcxproj" hidden="true"/>
    <files mask="ecdsa.vcxproj" hidden="true"/>
    <files mask="gen_entropy.vcxproj" hidden="true"/>
    <files mask="gen_key.vcxproj" hidden="true"/>
    <files mask="gen_random_ctr_drbg.vcxproj" hidden="true"/>
    <files mask="gen_random_havege.vcxproj" hidden="true"/>
    <files mask="generic_sum.vcxproj" hidden="true"/>
    <files mask="hello.vcxproj" hidden="true"/>
    <files mask="key_app.vcxproj" hidden="true"/>
    <files mask="key_app_writer.vcxproj" hidden="true"/>
    <files mask="key_ladder_demo.vcxproj" hidden="true"/>
    <files mask="load_roots.vcxproj" hidden="true"/>
    <files mask="mbedTLS.sln" hidden="true"/>
    <files mask="mbedTLS.vcxproj" hidden="true"/>
    <files mask="metatest.vcxproj" hidden="true"/>
    <files mask="mini_client.vcxproj" hidden="true"/>
    <files mask="mpi_demo.vcxproj" hidden="true"/>
    <files mask="pem2der.vcxproj" hidden="true"/>
    <files mask="pk_decrypt.vcxproj" hidden="true"/>
    <files mask="pk_encrypt.vcxproj" hidden="true"/>
    <files mask="pk_sign.vcxproj" hidden="true"/>
    <files mask="pk_verify.vcxproj" hidden="true"/>
    <files mask="psa_constant_names.vcxproj" hidden="true"/>
    <files mask="query_compile_time_config.vcxproj" hidden="true"/>
    <files mask="req_app.vcxproj" hidden="true"/>
    <files mask="rsa_decrypt.vcxproj" hidden="true"/>
    <files mask="rsa_encrypt.vcxproj" hidden="true"/>
    <files mask="rsa_genkey.vcxproj" hidden="true"/>
    <files mask="rsa_sign.vcxproj" hidden="true"/>
    <files mask="rsa_sign_pss.vcxproj" hidden="true"/>
    <files mask="rsa_verify.vcxproj" hidden="true"/>
    <files mask="rsa_verify_pss.vcxproj" hidden="true"/>
    <files mask="selftest.vcxproj" hidden="true"/>
    <files mask="ssl_client1.vcxproj" hidden="true"/>
    <files mask="ssl_client2.vcxproj" hidden="true"/>
    <files mask="ssl_context_info.vcxproj" hidden="true"/>
    <files mask="ssl_fork_server.vcxproj" hidden="true"/>
    <files mask="ssl_mail_client.vcxproj" hidden="true"/>
    <files mask="ssl_server.vcxproj" hidden="true"/>
    <files mask="ssl_server2.vcxproj" hidden="true"/>
    <files mask="strerror.vcxproj" hidden="true"/>
    <files mask="udp_proxy.vcxproj" hidden="true"/>
    <files mask="zeroize.vcxproj" hidden="true"/>
  </source>
  <source exclude="true" relative_path="./" type="other">
    <files mask="BRANCHES.md" hidden="true"/>
    <files mask="BUGS.md" hidden="true"/>
    <files mask="CONTRIBUTING.md" hidden="true"/>
    <files mask="DartConfiguration.tcl" hidden="true"/>
    <files mask="README.md" hidden="true"/>
    <files mask="SECURITY.md" hidden="true"/>
    <files mask="SUPPORT.md" hidden="true"/>
    <files mask="ChangeLog" hidden="true"/>
    <files mask="Kconfig" hidden="true"/>
    <files mask="LICENSE" hidden="true"/>
    <files mask="Makefile" hidden="true"/>
  </source>
  <source exclude="true" relative_path="./" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
    <files mask="ChangeLogKSDK.txt" hidden="true"/>
    <files mask="dco.txt" hidden="true"/>
    <files mask="mbeTLS_for_Kinetis_SDK_v2.0_readme.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="./" type="script">
    <files mask="mcux.cmake" hidden="true"/>
  </source>
</component>-->
    <component id="middleware.mbedtls.tests.MIMXRT1173" name="mbedtls_tests" brief="mbedTLS test suite" version="2.28.8" full_name="MbedTLS open source Crypto library" category="Security/mbedTLS library" user_visible="false" type="middleware" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <defines>
        <define name="MBEDTLS_CONFIG_FILE" value="'&quot;mcux_mbedtls_testsuite_config.h&quot;'"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="tests/src" type="src">
        <files mask="asn1_helpers.c"/>
        <files mask="helpers.c"/>
        <files mask="psa_crypto_helpers.c"/>
        <files mask="psa_exercise_key.c"/>
        <files mask="random.c"/>
        <files mask="threading_helpers.c"/>
        <files mask="fake_external_rng_for_test.c"/>
      </source>
      <source relative_path="tests/src/test_helpers" type="src">
        <files mask="ssl_helpers.c"/>
      </source>
      <source relative_path="tests/include/test" type="c_include">
        <files mask="arguments.h"/>
        <files mask="asn1_helpers.h"/>
        <files mask="constant_flow.h"/>
        <files mask="fake_external_rng_for_test.h"/>
        <files mask="helpers.h"/>
        <files mask="macros.h"/>
        <files mask="psa_crypto_helpers.h"/>
        <files mask="psa_exercise_key.h"/>
        <files mask="psa_helpers.h"/>
        <files mask="random.h"/>
        <files mask="ssl_helpers.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mbedtls_tests.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="tests/include/test" type="c_include"/>
        <include_path relative_path="tests/include" type="c_include"/>
        <include_path relative_path="tests/include/test" type="asm_include"/>
        <include_path relative_path="tests/include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls.3rdparty.MIMXRT1173" name="mbedtls_3rdparty" brief="mbedTLS 3rdparty code" version="2.28.8" full_name="MbedTLS open source Crypto library 3rdparty" category="Security/mbedTLS library" user_visible="false" type="middleware" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="3rdparty" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="3rdparty" type="asm_include">
        <files mask="Makefile.inc"/>
      </source>
      <source relative_path="3rdparty/everest" type="doc">
        <files mask="CMakeLists.txt"/>
        <files mask="README.md"/>
      </source>
      <source relative_path="3rdparty/everest" type="asm_include">
        <files mask="Makefile.inc"/>
      </source>
      <source relative_path="3rdparty/everest/include/everest" type="c_include">
        <files mask="Hacl_Curve25519.h"/>
        <files mask="everest.h"/>
        <files mask="kremlib.h"/>
        <files mask="x25519.h"/>
      </source>
      <source relative_path="3rdparty/everest/include/everest/kremlib" type="c_include">
        <files mask="FStar_UInt128.h"/>
        <files mask="FStar_UInt64_FStar_UInt32_FStar_UInt16_FStar_UInt8.h"/>
      </source>
      <source relative_path="3rdparty/everest/include/everest/kremlin" type="c_include">
        <files mask="c_endianness.h"/>
      </source>
      <source relative_path="3rdparty/everest/include/everest/kremlin/internal" type="c_include">
        <files mask="builtin.h"/>
        <files mask="callconv.h"/>
        <files mask="compat.h"/>
        <files mask="debug.h"/>
        <files mask="target.h"/>
        <files mask="types.h"/>
        <files mask="wasmsupport.h"/>
      </source>
      <source relative_path="3rdparty/everest/include/everest/vs2010" type="c_include">
        <files mask="Hacl_Curve25519.h"/>
        <files mask="inttypes.h"/>
        <files mask="stdbool.h"/>
      </source>
      <source relative_path="3rdparty/everest/library" type="src">
        <files mask="Hacl_Curve25519.c"/>
        <files mask="Hacl_Curve25519_joined.c"/>
        <files mask="everest.c"/>
        <files mask="x25519.c"/>
      </source>
      <source relative_path="3rdparty/everest/library/kremlib" type="src">
        <files mask="FStar_UInt128_extracted.c"/>
        <files mask="FStar_UInt64_FStar_UInt32_FStar_UInt16_FStar_UInt8.c"/>
      </source>
      <source relative_path="3rdparty/everest/library/legacy" type="src">
        <files mask="Hacl_Curve25519.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mbedtls_3rdparty.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="3rdparty/everest/include" type="c_include"/>
        <include_path relative_path="3rdparty/everest/include/everest" type="c_include"/>
        <include_path relative_path="3rdparty/everest/include/everest/kremlib" type="c_include"/>
        <include_path relative_path="3rdparty/everest/include/everest/kremlin" type="c_include"/>
        <include_path relative_path="3rdparty/everest/include/everest/kremlin/internal" type="c_include"/>
        <include_path relative_path="3rdparty/everest/include" type="asm_include"/>
        <include_path relative_path="3rdparty/everest/include/everest" type="asm_include"/>
        <include_path relative_path="3rdparty/everest/include/everest/kremlib" type="asm_include"/>
        <include_path relative_path="3rdparty/everest/include/everest/kremlin" type="asm_include"/>
        <include_path relative_path="3rdparty/everest/include/everest/kremlin/internal" type="asm_include"/>
      </include_paths>
    </component>
    <!--<component id="middleware.lwip.unused_files.MIMXRT1173" name="lwIP_unused_files" version="2.2.1" package_base_path="middleware/lwip" project_base_path="lwip">
  <source exclude="true" relative_path="src" type="other">
    <files mask="Filelists.cmake" hidden="true"/>
    <files mask="Filelists.mk" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz" type="other">
    <files mask="Makefile" hidden="true"/>
    <files mask="README" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz" type="c_include">
    <files mask="config.h" hidden="true"/>
    <files mask="fuzz_common.h" hidden="true"/>
    <files mask="lwipopts.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz" type="src">
    <files mask="fuzz.c" hidden="true"/>
    <files mask="fuzz2.c" hidden="true"/>
    <files mask="fuzz3.c" hidden="true"/>
    <files mask="fuzz_common.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz/inputs/arp" type="binary">
    <files mask="arp_req.bin" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz/inputs/icmp" type="binary">
    <files mask="icmp_ping.bin" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz/inputs/ipv6" type="binary">
    <files mask="neighbor_solicitation.bin" hidden="true"/>
    <files mask="router_adv.bin" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz/inputs/tcp" type="binary">
    <files mask="tcp_syn.bin" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz/inputs/udp" type="binary">
    <files mask="udp_port_5000.bin" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz" type="script">
    <files mask="output_to_pcap.sh" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/sockets" type="src">
    <files mask="sockets_stresstest.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/sockets" type="c_include">
    <files mask="sockets_stresstest.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit" type="script">
    <files mask="Filelists.cmake" hidden="true"/>
    <files mask="Filelists.mk" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit" type="other">
    <files mask="Makefile" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/api" type="src">
    <files mask="test_sockets.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/api" type="c_include">
    <files mask="test_sockets.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/arch" type="src">
    <files mask="sys_arch.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/arch" type="c_include">
    <files mask="sys_arch.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/core" type="src">
    <files mask="test_def.c" hidden="true"/>
    <files mask="test_dns.c" hidden="true"/>
    <files mask="test_mem.c" hidden="true"/>
    <files mask="test_netif.c" hidden="true"/>
    <files mask="test_pbuf.c" hidden="true"/>
    <files mask="test_timers.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/core" type="c_include">
    <files mask="test_def.h" hidden="true"/>
    <files mask="test_dns.h" hidden="true"/>
    <files mask="test_mem.h" hidden="true"/>
    <files mask="test_netif.h" hidden="true"/>
    <files mask="test_pbuf.h" hidden="true"/>
    <files mask="test_timers.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/dhcp" type="src">
    <files mask="test_dhcp.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/dhcp" type="c_include">
    <files mask="test_dhcp.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/dhcp6" type="src">
    <files mask="test_dhcp6.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/dhcp6" type="c_include">
    <files mask="test_dhcp6.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/etharp" type="src">
    <files mask="test_etharp.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/etharp" type="c_include">
    <files mask="test_etharp.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/ip4" type="src">
    <files mask="test_ip4.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/ip4" type="c_include">
    <files mask="test_ip4.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/ip6" type="src">
    <files mask="test_ip6.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/ip6" type="c_include">
    <files mask="test_ip6.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit" type="c_include">
    <files mask="lwip_check.h" hidden="true"/>
    <files mask="lwipopts.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit" type="src">
    <files mask="lwip_unittests.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/mdns" type="src">
    <files mask="test_mdns.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/mdns" type="c_include">
    <files mask="test_mdns.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/mqtt" type="src">
    <files mask="test_mqtt.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/mqtt" type="c_include">
    <files mask="test_mqtt.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/ppp" type="src">
    <files mask="test_pppos.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/ppp" type="c_include">
    <files mask="test_pppos.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/tcp" type="src">
    <files mask="tcp_helper.c" hidden="true"/>
    <files mask="test_tcp.c" hidden="true"/>
    <files mask="test_tcp_oos.c" hidden="true"/>
    <files mask="test_tcp_state.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/tcp" type="c_include">
    <files mask="tcp_helper.h" hidden="true"/>
    <files mask="test_tcp.h" hidden="true"/>
    <files mask="test_tcp_oos.h" hidden="true"/>
    <files mask="test_tcp_state.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/udp" type="src">
    <files mask="test_udp.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/udp" type="c_include">
    <files mask="test_udp.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib" type="script">
    <files mask="Filelists.cmake" hidden="true"/>
    <files mask="Filelists.mk" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/dhcp_extra_opts" type="other">
    <files mask="README" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/dhcp_extra_opts" type="src">
    <files mask="dhcp_extra_opts.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/dhcp_extra_opts" type="c_include">
    <files mask="dhcp_extra_opts.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/ipv6_static_routing" type="other">
    <files mask="README" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/ipv6_static_routing" type="src">
    <files mask="ip6_route_table.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/ipv6_static_routing" type="c_include">
    <files mask="ip6_route_table.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/netconn/external_resolve" type="src">
    <files mask="dnssd.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/netconn/external_resolve" type="c_include">
    <files mask="dnssd.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/tcp_isn" type="src">
    <files mask="tcp_isn.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/tcp_isn" type="c_include">
    <files mask="tcp_isn.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/tcp_md5" type="other">
    <files mask="README" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/tcp_md5" type="src">
    <files mask="tcp_md5.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/tcp_md5" type="c_include">
    <files mask="tcp_md5.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/chargen" type="other">
    <files mask="README" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/chargen" type="src">
    <files mask="chargen.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/chargen" type="c_include">
    <files mask="chargen.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/httpserver" type="other">
    <files mask="README" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/httpserver" type="src">
    <files mask="httpserver-netconn.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/httpserver" type="c_include">
    <files mask="httpserver-netconn.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/netio" type="src">
    <files mask="netio.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/netio" type="c_include">
    <files mask="netio.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/rtp" type="src">
    <files mask="rtp.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/rtp" type="c_include">
    <files mask="rtp.h" hidden="true"/>
    <files mask="rtpdata.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/shell" type="src">
    <files mask="shell.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/shell" type="c_include">
    <files mask="shell.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/socket_examples" type="src">
    <files mask="socket_examples.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/socket_examples" type="c_include">
    <files mask="socket_examples.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/Coverity" type="src">
    <files mask="coverity.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/ethernetif" type="src">
    <files mask="ethernetif.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/example_app" type="c_include">
    <files mask="default_netif.h" hidden="true"/>
    <files mask="lwipopts.h" hidden="true"/>
    <files mask="lwippools.h" hidden="true"/>
    <files mask="ppp_settings.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/example_app" type="other">
    <files mask="lwipcfg.h.ci" hidden="true"/>
    <files mask="lwipcfg.h.example" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/example_app" type="src">
    <files mask="test.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/example_app/test_configs" type="c_include">
    <files mask="opt_default.h" hidden="true"/>
    <files mask="opt_dualstack.h" hidden="true"/>
    <files mask="opt_ipv4only.h" hidden="true"/>
    <files mask="opt_ipv6only.h" hidden="true"/>
    <files mask="opt_no_tcp_dualstack.h" hidden="true"/>
    <files mask="opt_no_tcp_ipv4only.h" hidden="true"/>
    <files mask="opt_no_tcp_ipv6only.h" hidden="true"/>
    <files mask="opt_no_udp_dualstack.h" hidden="true"/>
    <files mask="opt_no_udp_ipv4only.h" hidden="true"/>
    <files mask="opt_no_udp_ipv6only.h" hidden="true"/>
    <files mask="opt_none.h" hidden="true"/>
    <files mask="opt_nosys_dual.h" hidden="true"/>
    <files mask="opt_nosys_ipv4.h" hidden="true"/>
    <files mask="opt_nosys_ipv6.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/cgi_example" type="src">
    <files mask="cgi_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/cgi_example" type="c_include">
    <files mask="cgi_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/examples_fs" type="doc">
    <files mask="404.html" hidden="true"/>
    <files mask="index.html" hidden="true"/>
    <files mask="login.html" hidden="true"/>
    <files mask="loginfail.html" hidden="true"/>
    <files mask="session.html" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/examples_fs/img" type="image">
    <files mask="sics.gif" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/examples_fs" type="other">
    <files mask="ssi.shtml" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd" type="src">
    <files mask="examples_fsdata.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/fs_example" type="src">
    <files mask="fs_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/fs_example" type="c_include">
    <files mask="fs_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/genfiles_example" type="src">
    <files mask="genfiles_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/genfiles_example" type="c_include">
    <files mask="genfiles_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/https_example" type="src">
    <files mask="https_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/https_example" type="c_include">
    <files mask="https_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/post_example" type="src">
    <files mask="post_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/ssi_example" type="src">
    <files mask="ssi_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/ssi_example" type="c_include">
    <files mask="ssi_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/lwiperf" type="src">
    <files mask="lwiperf_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/lwiperf" type="c_include">
    <files mask="lwiperf_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/mdns" type="src">
    <files mask="mdns_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/mdns" type="c_include">
    <files mask="mdns_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/mqtt" type="src">
    <files mask="mqtt_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/mqtt" type="c_include">
    <files mask="mqtt_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/ppp" type="src">
    <files mask="pppos_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/ppp" type="c_include">
    <files mask="pppos_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/snmp" type="src">
    <files mask="snmp_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/snmp" type="c_include">
    <files mask="snmp_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/snmp/snmp_private_mib" type="src">
    <files mask="lwip_prvmib.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/snmp/snmp_private_mib" type="c_include">
    <files mask="private_mib.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/snmp/snmp_v3" type="src">
    <files mask="snmpv3_dummy.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/snmp/snmp_v3" type="c_include">
    <files mask="snmpv3_dummy.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/sntp" type="src">
    <files mask="sntp_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/sntp" type="c_include">
    <files mask="sntp_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/tftp" type="src">
    <files mask="tftp_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/tftp" type="c_include">
    <files mask="tftp_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports" type="script">
    <files mask="CMakeCommon.cmake" hidden="true"/>
    <files mask="Common.allports.mk" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/freertos/include/arch" type="c_include">
    <files mask="sys_arch.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/freertos" type="src">
    <files mask="sys_arch.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix" type="script">
    <files mask="Common.mk" hidden="true"/>
    <files mask="Filelists.cmake" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix" type="other">
    <files mask="README" hidden="true"/>
    <files mask="setup-tapif" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/check" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/check" type="other">
    <files mask="Makefile" hidden="true"/>
    <files mask="README" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/check" type="c_include">
    <files mask="config.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/example_app" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/example_app" type="other">
    <files mask="Makefile" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/example_app" type="src">
    <files mask="default_netif.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/example_app" type="script">
    <files mask="iteropts.sh" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/lib" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/lib" type="other">
    <files mask="README" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/lib" type="c_include">
    <files mask="lwipopts.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/port/include/arch" type="c_include">
    <files mask="cc.h" hidden="true"/>
    <files mask="perf.h" hidden="true"/>
    <files mask="sys_arch.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/port/include/netif" type="c_include">
    <files mask="fifo.h" hidden="true"/>
    <files mask="list.h" hidden="true"/>
    <files mask="pcapif.h" hidden="true"/>
    <files mask="sio.h" hidden="true"/>
    <files mask="tapif.h" hidden="true"/>
    <files mask="vdeif.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/port/netif" type="src">
    <files mask="fifo.c" hidden="true"/>
    <files mask="list.c" hidden="true"/>
    <files mask="pcapif.c" hidden="true"/>
    <files mask="sio.c" hidden="true"/>
    <files mask="tapif.c" hidden="true"/>
    <files mask="vdeif.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/port" type="src">
    <files mask="perf.c" hidden="true"/>
    <files mask="sys_arch.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/posixlib" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/posixlib" type="script">
    <files mask="Uninstall.cmake" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/posixlib/include/posix" type="c_include">
    <files mask="inet.h" hidden="true"/>
    <files mask="sockets.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/posixlib" type="c_include">
    <files mask="lwipopts.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32" type="script">
    <files mask="Common.mk" hidden="true"/>
    <files mask="Filelists.cmake" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32/check" type="c_include">
    <files mask="check_stdint.h" hidden="true"/>
    <files mask="config.h" hidden="true"/>
    <files mask="stdbool.h" hidden="true"/>
    <files mask="unistd.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32/check/sys" type="c_include">
    <files mask="time.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32/check" type="src">
    <files mask="time.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32/example_app" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32/example_app" type="other">
    <files mask="Makefile" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32/example_app" type="src">
    <files mask="default_netif.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32/include/arch" type="c_include">
    <files mask="bpstruct.h" hidden="true"/>
    <files mask="cc.h" hidden="true"/>
    <files mask="epstruct.h" hidden="true"/>
    <files mask="perf.h" hidden="true"/>
    <files mask="sys_arch.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32/msvc" type="other">
    <files mask="build_coverity.cmd" hidden="true"/>
    <files mask="libcheck.vcxproj" hidden="true"/>
    <files mask="libcheck.vcxproj.filters" hidden="true"/>
    <files mask="lwIP.vcxproj" hidden="true"/>
    <files mask="lwIP.vcxproj.filters" hidden="true"/>
    <files mask="lwIP_Test.sln" hidden="true"/>
    <files mask="lwIP_Test.vcxproj" hidden="true"/>
    <files mask="lwIP_Test.vcxproj.filters" hidden="true"/>
    <files mask="lwIP_fuzz.sln" hidden="true"/>
    <files mask="lwIP_pcapif.vcxproj" hidden="true"/>
    <files mask="lwIP_pcapif.vcxproj.filters" hidden="true"/>
    <files mask="lwIP_unittests.sln" hidden="true"/>
    <files mask="lwip_fuzz.vcxproj" hidden="true"/>
    <files mask="lwip_unittests.vcxproj" hidden="true"/>
    <files mask="lwip_unittests.vcxproj.filters" hidden="true"/>
    <files mask="makefsdata.vcxproj" hidden="true"/>
    <files mask="makefsdata.vcxproj.filters" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32" type="src">
    <files mask="pcapif.c" hidden="true"/>
    <files mask="pcapif_helper.c" hidden="true"/>
    <files mask="sio.c" hidden="true"/>
    <files mask="sys_arch.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32" type="c_include">
    <files mask="pcapif.h" hidden="true"/>
    <files mask="pcapif_helper.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32" type="doc">
    <files mask="readme.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/apps/altcp_tls" type="src">
    <files mask="altcp_tls_mbedtls.c" hidden="true"/>
    <files mask="altcp_tls_mbedtls_mem.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/apps/altcp_tls" type="c_include">
    <files mask="altcp_tls_mbedtls_mem.h" hidden="true"/>
    <files mask="altcp_tls_mbedtls_structs.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/apps/http" type="src">
    <files mask="altcp_proxyconnect.c" hidden="true"/>
    <files mask="http_client.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/apps/netbiosns" type="src">
    <files mask="netbiosns.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/apps/smtp" type="src">
    <files mask="smtp.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/apps/snmp" type="src">
    <files mask="snmp_asn1.c" hidden="true"/>
    <files mask="snmp_core.c" hidden="true"/>
    <files mask="snmp_mib2.c" hidden="true"/>
    <files mask="snmp_mib2_icmp.c" hidden="true"/>
    <files mask="snmp_mib2_interfaces.c" hidden="true"/>
    <files mask="snmp_mib2_ip.c" hidden="true"/>
    <files mask="snmp_mib2_snmp.c" hidden="true"/>
    <files mask="snmp_mib2_system.c" hidden="true"/>
    <files mask="snmp_mib2_tcp.c" hidden="true"/>
    <files mask="snmp_mib2_udp.c" hidden="true"/>
    <files mask="snmp_msg.c" hidden="true"/>
    <files mask="snmp_netconn.c" hidden="true"/>
    <files mask="snmp_pbuf_stream.c" hidden="true"/>
    <files mask="snmp_raw.c" hidden="true"/>
    <files mask="snmp_scalar.c" hidden="true"/>
    <files mask="snmp_snmpv2_framework.c" hidden="true"/>
    <files mask="snmp_snmpv2_usm.c" hidden="true"/>
    <files mask="snmp_table.c" hidden="true"/>
    <files mask="snmp_threadsync.c" hidden="true"/>
    <files mask="snmp_traps.c" hidden="true"/>
    <files mask="snmpv3.c" hidden="true"/>
    <files mask="snmpv3_mbedtls.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/apps/snmp" type="c_include">
    <files mask="snmp_asn1.h" hidden="true"/>
    <files mask="snmp_core_priv.h" hidden="true"/>
    <files mask="snmp_msg.h" hidden="true"/>
    <files mask="snmp_pbuf_stream.h" hidden="true"/>
    <files mask="snmpv3_priv.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/apps/tftp" type="src">
    <files mask="tftp.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/include/lwip" type="other">
    <files mask="init.h.cmake.in" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/include/lwip/apps" type="c_include">
    <files mask="altcp_proxyconnect.h" hidden="true"/>
    <files mask="altcp_tls_mbedtls_opts.h" hidden="true"/>
    <files mask="http_client.h" hidden="true"/>
    <files mask="netbiosns.h" hidden="true"/>
    <files mask="netbiosns_opts.h" hidden="true"/>
    <files mask="smtp.h" hidden="true"/>
    <files mask="smtp_opts.h" hidden="true"/>
    <files mask="snmp.h" hidden="true"/>
    <files mask="snmpv3.h" hidden="true"/>
    <files mask="snmp_core.h" hidden="true"/>
    <files mask="snmp_mib2.h" hidden="true"/>
    <files mask="snmp_opts.h" hidden="true"/>
    <files mask="snmp_scalar.h" hidden="true"/>
    <files mask="snmp_snmpv2_framework.h" hidden="true"/>
    <files mask="snmp_snmpv2_usm.h" hidden="true"/>
    <files mask="snmp_table.h" hidden="true"/>
    <files mask="snmp_threadsync.h" hidden="true"/>
    <files mask="tftp_client.h" hidden="true"/>
    <files mask="tftp_common.h" hidden="true"/>
    <files mask="tftp_opts.h" hidden="true"/>
    <files mask="tftp_server.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/include/lwip/apps" type="other">
    <files mask="FILES" hidden="true"/>
  </source>
</component>-->
    <component id="middleware.lvgl.template.MIMXRT1173" name="lvgl_template" brief="lvgl template" version="9.2.1" full_name="lvgl template configuration" category="Graphics/lvgl graphics library" user_visible="false" type="project_template" package_base_path="middleware/lvgl" project_base_path="lvgl">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="template" config="true" type="c_include">
        <files mask="lv_conf.h"/>
      </source>
      <source relative_path="template" config="true" type="src">
        <files mask="lvgl_support.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.littlefs.MIMXRT1173" name="LittleFS" brief="littlefs" version="2.9.1" full_name="LittleFS File System stack" category="File System/LittleFS File System" user_visible="true" type="middleware" package_base_path="middleware/littlefs" project_base_path="littlefs">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lfs.c"/>
        <files mask="lfs_util.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lfs.h"/>
        <files mask="lfs_util.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_littlefs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.libjpeg.MIMXRT1173" name="libjpeg" brief="JPEG library" version="9.2.0" revision="1" full_name="Middleware libjpeg" category="Image/JPEG library" user_visible="true" type="middleware" package_base_path="middleware/libjpeg" project_base_path="libjpeg">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="change.log" hidden="true"/>
        <files mask="README" hidden="true"/>
      </source>
      <source relative_path="inc" type="c_include">
        <files mask="cderror.h"/>
        <files mask="cdjpeg.h"/>
        <files mask="jdct.h"/>
        <files mask="jerror.h"/>
        <files mask="jinclude.h"/>
        <files mask="jmemsys.h"/>
        <files mask="jmorecfg.h"/>
        <files mask="jpegint.h"/>
        <files mask="jpeglib.h"/>
        <files mask="jversion.h"/>
        <files mask="transupp.h"/>
      </source>
      <source relative_path="src" type="src">
        <files mask="jaricom.c"/>
        <files mask="jcapimin.c"/>
        <files mask="jcapistd.c"/>
        <files mask="jcarith.c"/>
        <files mask="jccoefct.c"/>
        <files mask="jccolor.c"/>
        <files mask="jcdctmgr.c"/>
        <files mask="jchuff.c"/>
        <files mask="jcinit.c"/>
        <files mask="jcmainct.c"/>
        <files mask="jcmarker.c"/>
        <files mask="jcmaster.c"/>
        <files mask="jcomapi.c"/>
        <files mask="jcparam.c"/>
        <files mask="jcprepct.c"/>
        <files mask="jcsample.c"/>
        <files mask="jctrans.c"/>
        <files mask="jdapimin.c"/>
        <files mask="jdapistd.c"/>
        <files mask="jdarith.c"/>
        <files mask="jdatadst.c"/>
        <files mask="jdatasrc.c"/>
        <files mask="jdcoefct.c"/>
        <files mask="jdcolor.c"/>
        <files mask="jddctmgr.c"/>
        <files mask="jdhuff.c"/>
        <files mask="jdinput.c"/>
        <files mask="jdmainct.c"/>
        <files mask="jdmarker.c"/>
        <files mask="jdmaster.c"/>
        <files mask="jdmerge.c"/>
        <files mask="jdpostct.c"/>
        <files mask="jdsample.c"/>
        <files mask="jdtrans.c"/>
        <files mask="jerror.c"/>
        <files mask="jfdctflt.c"/>
        <files mask="jfdctfst.c"/>
        <files mask="jfdctint.c"/>
        <files mask="jidctflt.c"/>
        <files mask="jidctfst.c"/>
        <files mask="jidctint.c"/>
        <files mask="jmemmgr.c"/>
        <files mask="jmemnobs.c"/>
        <files mask="jquant1.c"/>
        <files mask="jquant2.c"/>
        <files mask="jutils.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_libjpeg.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="inc" type="c_include"/>
        <include_path relative_path="inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.libjpeg.template.MIMXRT1173" name="LIBJPEG configuration template" brief="Template configuration file to be edited by user. Users could map the file system functions to the file system they are using." version="9.2.0" revision="1" full_name="LIBJPEG configuration template" category="Image/JPEG library" user_visible="false" type="project_template" package_base_path="middleware/libjpeg" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="template" config="true" type="c_include">
        <files mask="jconfig.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_libjpeg_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.MIMXRT1173" name="fatfs" brief="FatFs" version="0.15.0" full_name="FAT File System stack" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="diskio.c"/>
        <files mask="ff.c"/>
        <files mask="ffsystem.c"/>
        <files mask="ffunicode.c"/>
      </source>
      <source relative_path="source" type="c_include">
        <files mask="diskio.h"/>
        <files mask="ff.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source" type="c_include"/>
        <include_path relative_path="source" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_mmc.MIMXRT1173" name="fatfs_mmc" brief="FatFs template MMC" version="0.15.0" full_name="FatFs template configuration for MMC disk" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="template/mmc" config="true" type="c_include">
        <files mask="ffconf_gen.h"/>
      </source>
      <source relative_path="template" config="true" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_template_mmc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/mmc" type="c_include"/>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/mmc" type="asm_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_nand.MIMXRT1173" name="fatfs_nand" brief="FatFs template NAND" version="0.15.0" full_name="FatFs template configuration for NAND disk" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="template/nand" config="true" type="c_include">
        <files mask="ffconf_gen.h"/>
      </source>
      <source relative_path="template" config="true" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_template_nand.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/nand" type="c_include"/>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/nand" type="asm_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_ram.MIMXRT1173" name="fatfs_ram" brief="FatFs template RAM" version="0.15.0" full_name="FatFs template configuration for RAM disk" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="template/ram" config="true" type="c_include">
        <files mask="ffconf_gen.h"/>
      </source>
      <source relative_path="template" config="true" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_template_ram.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/ram" type="c_include"/>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/ram" type="asm_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_sd.MIMXRT1173" name="fatfs_sd" brief="FatFs template SD" version="0.15.0" full_name="FatFs template configuration for SD disk" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="template/sd" config="true" type="c_include">
        <files mask="ffconf_gen.h"/>
      </source>
      <source relative_path="template" config="true" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_template_sd.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/sd" type="c_include"/>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/sd" type="asm_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_sdspi.MIMXRT1173" name="fatfs_sdspi" brief="FatFs template SDSPI" version="0.15.0" full_name="FatFs template configuration for SDSPI disk" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="template/sdspi" config="true" type="c_include">
        <files mask="ffconf_gen.h"/>
      </source>
      <source relative_path="template" config="true" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_template_sdspi.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/sdspi" type="c_include"/>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/sdspi" type="asm_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_usb.MIMXRT1173" name="fatfs_usb" brief="FatFs template USB" version="0.15.0" full_name="FatFs template configuration for USB disk" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="template/usb" config="true" type="c_include">
        <files mask="ffconf_gen.h"/>
      </source>
      <source relative_path="template" config="true" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_template_usb.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/usb" type="c_include"/>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/usb" type="asm_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.emwin.template.MIMXRT1173" name="emwin_template" brief="emwin template" version="6.38" full_name="emWin template configuration" category="Graphics/emWin graphics library" user_visible="false" type="project_template" package_base_path="middleware/emwin" project_base_path="emwin">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="template" config="true" type="src">
        <files mask="emwin_support.c"/>
      </source>
      <source relative_path="template" config="true" type="c_include">
        <files mask="emwin_support.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_emwin_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="emWin_Config" type="c_include"/>
        <include_path relative_path="emWin_header" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.dhara.MIMXRT1173" name="dhara" brief="Middleware dhara" version="2.0.0" full_name="dhara" category="Memories/Nand flash management stack" user_visible="true" type="middleware" package_base_path="middleware/dhara" project_base_path="dhara">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="dhara" type="src">
        <files mask="map.c"/>
        <files mask="journal.c"/>
        <files mask="error.c"/>
      </source>
      <source relative_path="dhara" type="c_include">
        <files mask="map.h"/>
        <files mask="journal.h"/>
        <files mask="error.h"/>
        <files mask="bytes.h"/>
        <files mask="nand.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_dhara.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="dhara" type="c_include"/>
        <include_path relative_path="dhara" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.cjson.MIMXRT1173" name="cjson" brief="CJSON library" version="1.7.4" revision="0" full_name="Middleware cjson" category="JSON/CJSON library" user_visible="true" type="middleware" package_base_path="middleware/cjson" project_base_path="cjson">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="CHANGELOG.md" hidden="true"/>
        <files mask="LICENSE" hidden="true"/>
        <files mask="README.md" hidden="true"/>
        <files mask="CONTRIBUTORS.md" hidden="true"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="cJSON.h"/>
        <files mask="cJSON_Utils.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="cJSON.c"/>
        <files mask="cJSON_Utils.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_cjson.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.aws_iot.device_defender.MIMXRT1173" name="device-defender-for-aws-iot-embedded-sdk" brief="Client library for using the AWS IoT Device Defender service on embedded devices." version="1.3.0" full_name="AWS IoT Device Defender Library" category="AWS IoT/AWS IoT Device Defender" user_visible="false" type="middleware" package_base_path="middleware/aws_iot/device-defender" project_base_path="aws_iot/device-defender">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="defender.c"/>
      </source>
      <source relative_path="source/include" type="c_include">
        <files mask="defender.h"/>
        <files mask="defender_config_defaults.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_aws_iot_device_defender.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/include" type="c_include"/>
        <include_path relative_path="source/include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.wifi_bt_module.config.MIMXRT1173" name="wifi_bt_module_config" brief="Wi-Fi and BT module configs" version="1.0.0" full_name="Wi-Fi and BT module configs" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/wifi_bt_module" project_base_path="component/wifi_bt_module">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="incl" type="c_include">
        <files mask="wifi_bt_module_config.h"/>
      </source>
      <include_paths>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="incl" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.wifi_bt_module.tx_pwr_limits.MIMXRT1173" name="wifi_bt_module_tx_pwr_limits" brief="Wi-Fi module Tx power limits" version="1.0.0" full_name="Wi-Fi module Tx power limits" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/wifi_bt_module" project_base_path="component/wifi_bt_module">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="AzureWave/tx_pwr_limits" type="c_include">
        <files mask="wlan_txpwrlimit_cfg_WW.h"/>
        <files mask="wlan_txpwrlimit_cfg_WW_rw610.h"/>
      </source>
      <source relative_path="Murata/tx_pwr_limits" type="c_include">
        <files mask="wlan_txpwrlimit_cfg_murata_1XK_WW.h"/>
        <files mask="wlan_txpwrlimit_cfg_murata_1ZM_WW.h"/>
        <files mask="wlan_txpwrlimit_cfg_murata_2DS_WW.h"/>
        <files mask="wlan_txpwrlimit_cfg_murata_2EL_WW.h"/>
        <files mask="wlan_txpwrlimit_cfg_murata_NH_FCC.h"/>
      </source>
      <source relative_path="u-blox/tx_pwr_limits" type="c_include">
        <files mask="wlan_txpwrlimit_cfg_jody_w5_WW.h"/>
      </source>
      <include_paths>
        <include_path relative_path="AzureWave/tx_pwr_limits" type="c_include"/>
        <include_path relative_path="Murata/tx_pwr_limits" type="c_include"/>
        <include_path relative_path="u-blox/tx_pwr_limits" type="c_include"/>
        <include_path relative_path="AzureWave/tx_pwr_limits" type="asm_include"/>
        <include_path relative_path="Murata/tx_pwr_limits" type="asm_include"/>
        <include_path relative_path="u-blox/tx_pwr_limits" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.ektf2k.MIMXRT1173" name="ektf2k" brief="Driver ektf2k" version="1.0.0" full_name="Driver ektf2k" category="Device/SDK Drivers" user_visible="false" type="board_component" package_base_path="components/touch/ektf2k" project_base_path="touchpanel">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ektf2k.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ektf2k.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.ft3267.MIMXRT1173" name="ft3267" brief="Touch panel controller FT3267 driver" version="1.0.1" full_name="Driver ft3267" category="Device/SDK Drivers" user_visible="false" type="board_component" package_base_path="components/touch/ft3267" project_base_path="touchpanel">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ft3267.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ft3267.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.ft5406.MIMXRT1173" name="ft5406" brief="Driver ft5406" version="1.0.0" full_name="Driver ft5406" category="Device/SDK Drivers" user_visible="false" type="board_component" package_base_path="components/touch/ft5406" project_base_path="touchpanel">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ft5406.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ft5406.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.gt911.MIMXRT1173" name="gt911" brief="Driver gt911" version="1.0.4" full_name="Driver gt911" category="Device/SDK Drivers" user_visible="false" type="board_component" package_base_path="components/touch/gt911" project_base_path="touchpanel">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_gt911.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_gt911.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.tma525b.MIMXRT1173" name="tma525b" brief="Driver tma525b" version="1.0.0" full_name="Driver tma525b" category="Device/SDK Drivers" user_visible="false" type="board_component" package_base_path="components/touch/tma525b" project_base_path="touchpanel">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_tma525b.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_tma525b.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.silicon_id_imx8.MIMXRT1173" name="silicon_id_imx8" brief="Driver silicon_id imx8" version="2.0.0" full_name="Driver silicon_id_imx8" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/silicon_id/socs/imx8" project_base_path="component/silicon_id">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_silicon_id_soc.c"/>
      </source>
      <source relative_path=".." type="c_include">
        <files mask="fsl_silicon_id_soc.h"/>
      </source>
      <include_paths>
        <include_path relative_path=".." type="c_include"/>
        <include_path relative_path=".." type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.silicon_id_imx93.MIMXRT1173" name="silicon_id_imx93" brief="Driver silicon_id imx93" version="2.0.0" full_name="Driver silicon_id_imx93" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/silicon_id/socs/imx93" project_base_path="component/silicon_id">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_silicon_id_soc.c"/>
      </source>
      <source relative_path=".." type="c_include">
        <files mask="fsl_silicon_id_soc.h"/>
      </source>
      <include_paths>
        <include_path relative_path=".." type="c_include"/>
        <include_path relative_path=".." type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.silicon_id_imxrt10xx.MIMXRT1173" name="silicon_id_rt10xx" brief="Driver silicon_id rt10xx" version="2.0.0" full_name="Driver silicon_id_rt10xx" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/silicon_id/socs/rt10xx" project_base_path="component/silicon_id">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_silicon_id_soc.c"/>
      </source>
      <source relative_path=".." type="c_include">
        <files mask="fsl_silicon_id_soc.h"/>
      </source>
      <include_paths>
        <include_path relative_path=".." type="c_include"/>
        <include_path relative_path=".." type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.silicon_id_imxrt1170.MIMXRT1173" name="silicon_id_rt1170" brief="Driver silicon_id imxrt1170" version="2.0.0" full_name="Driver silicon_id_rt1170" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/silicon_id/socs/imxrt1170" project_base_path="component/silicon_id">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_silicon_id_soc.c"/>
      </source>
      <source relative_path=".." type="c_include">
        <files mask="fsl_silicon_id_soc.h"/>
      </source>
      <include_paths>
        <include_path relative_path=".." type="c_include"/>
        <include_path relative_path=".." type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.silicon_id_imxrt1180.MIMXRT1173" name="silicon_id_rt1180" brief="Driver silicon_id imxrt1180" version="2.0.0" full_name="Driver silicon_id_rt1180" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/silicon_id/socs/imxrt1180" project_base_path="component/silicon_id">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_silicon_id_soc.c"/>
      </source>
      <source relative_path=".." type="c_include">
        <files mask="fsl_silicon_id_soc.h"/>
      </source>
      <include_paths>
        <include_path relative_path=".." type="c_include"/>
        <include_path relative_path=".." type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.silicon_id_rw610.MIMXRT1173" name="silicon_id_rw610" brief="Driver silicon_id rw610" version="2.0.0" full_name="Driver silicon_id_rw610" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/silicon_id/socs/rw610" project_base_path="component/silicon_id">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_silicon_id_soc.c"/>
      </source>
      <source relative_path=".." type="c_include">
        <files mask="fsl_silicon_id_soc.h"/>
      </source>
      <include_paths>
        <include_path relative_path=".." type="c_include"/>
        <include_path relative_path=".." type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.silicon_id_scfw.MIMXRT1173" name="silicon_id_scfw" brief="Driver silicon_id scfw" version="2.0.0" full_name="Driver silicon_id_scfw" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/silicon_id/socs/scfw" project_base_path="component/silicon_id">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_silicon_id_soc.c"/>
      </source>
      <source relative_path=".." type="c_include">
        <files mask="fsl_silicon_id_soc.h"/>
      </source>
      <include_paths>
        <include_path relative_path=".." type="c_include"/>
        <include_path relative_path=".." type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_swo.MIMXRT1173" name="serial_manager_swo" brief="Component serial_manager_swo" version="1.0.0" full_name="Serial Manager Swo" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_SWO" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_swo.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_swo.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_virtual.MIMXRT1173" name="serial_manager_virtual" brief="Component serial_manager_virtual" version="1.0.0" full_name="Serial Manager Virtual" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SSERIAL_PORT_TYPE_VIRTUAL" value="1"/>
        <define name="DEBUG_CONSOLE_TRANSFER_NON_BLOCKING" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_virtual.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_virtual.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.software_rng_adapter.MIMXRT1173" name="software_rng_adapter" brief="Component software_rng_adapter" version="1.0.0" full_name="Component software_rng_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/rng" project_base_path="component/rng">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_rng.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_software_rng.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.reset_adapter.MIMXRT1173" name="reset_adapter" brief="Component reset_adapter" version="1.0.0" full_name="Component reset_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/reset" project_base_path="component/reset">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_reset.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_reset.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.panic.MIMXRT1173" name="panic" brief="Component panic" version="1.0.0" full_name="Component panic" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/panic" project_base_path="component/panic">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_panic.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_panic.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.osa_template_config.MIMXRT1173" name="osa" brief="Component osa template config" version="1.0.0" full_name="Component osa template config" category="NXP Component/OS Abstraction Layer" user_visible="true" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="config" config="true" type="c_include">
        <files mask="fsl_os_abstraction_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_osa_template_config.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="config" type="c_include"/>
        <include_path relative_path="config" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.mx25r_flash.MIMXRT1173" name="mx25r_flash" brief="Driver mx25r_flash" version="2.0.0" full_name="Driver mx25r_flash" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/mx25r_flash" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="mx25r_flash.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="mx25r_flash.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.mflash_onchip_fmu.MIMXRT1173" name="mflash onchip_fmu" brief="mflash onchip_fmu" version="1.0.0" full_name="mflash onchip_fmu" category="Device/SDK Drivers" user_visible="false" type="software_component" package_base_path="components/flash/mflash" project_base_path="flash/mflash">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
    </component>
    <component id="component.software_crc_adapter.MIMXRT1173" name="software_crc_adapter" brief="Component software_crc_adapter" version="1.0.0" full_name="Component software_crc_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/crc" project_base_path="component/crc">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_crc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_software_crc.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.ak4497_adapter.MIMXRT1173" name="codec_ak4497_adapter" brief="Component ak4497 adapter for single codec" version="2.2.0" full_name="Component ak4497_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="port/ak4497" type="c_include">
        <files mask="fsl_codec_ak4497_adapter.h"/>
      </source>
      <source relative_path="port/ak4497" type="src">
        <files mask="fsl_codec_ak4497_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="port/ak4497" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/ak4497" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.codec_adapters.MIMXRT1173" name="codec_adapters" brief="Component codec adapters for multi codec" version="2.2.0" full_name="Component codec_adapters" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec/" project_base_path="codec">
      <defines>
        <define name="CODEC_MULTI_ADAPTERS" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="port" type="src">
        <files mask="fsl_codec_adapter.c"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.cs42448_adapter.MIMXRT1173" name="codec_cs42448_adapter" brief="Component cs42448 adapter for single codec" version="2.2.1" full_name="Component cs42448_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="port/cs42448" type="c_include">
        <files mask="fsl_codec_cs42448_adapter.h"/>
      </source>
      <source relative_path="port/cs42448" type="src">
        <files mask="fsl_codec_cs42448_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="port/cs42448" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/cs42448" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.cs42888_adapter.MIMXRT1173" name="codec_cs42888_adapter" brief="Component cs42888 adapter for single codec" version="2.2.1" full_name="Component cs42888_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="port/cs42888" type="c_include">
        <files mask="fsl_codec_cs42888_adapter.h"/>
      </source>
      <source relative_path="port/cs42888" type="src">
        <files mask="fsl_codec_cs42888_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="port/cs42888" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/cs42888" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.da7212_adapter.MIMXRT1173" name="codec_da7212_adapter" brief="Component da7212 adapter for single codec" version="2.2.0" full_name="Component da7212_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="port/da7212" type="c_include">
        <files mask="fsl_codec_da7212_adapter.h"/>
      </source>
      <source relative_path="port/da7212" type="src">
        <files mask="fsl_codec_da7212_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="port/da7212" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/da7212" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.pcm186x_adapter.MIMXRT1173" name="codec_pcm186x_adapter" brief="Component pcm186x adapter for single codec" version="2.0.0" full_name="Component pcm186x_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="port/pcm186x" type="c_include">
        <files mask="fsl_codec_pcm186x_adapter.h"/>
      </source>
      <source relative_path="port/pcm186x" type="src">
        <files mask="fsl_codec_pcm186x_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="port/pcm186x" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/pcm186x" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.pcm512x_adapter.MIMXRT1173" name="codec_pcm512x_adapter" brief="Component pcm512x adapter for single codec" version="2.0.0" full_name="Component pcm512x_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="port/pcm512x" type="c_include">
        <files mask="fsl_codec_pcm512x_adapter.h"/>
      </source>
      <source relative_path="port/pcm512x" type="src">
        <files mask="fsl_codec_pcm512x_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="port/pcm512x" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/pcm512x" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.sgtl_adapter.MIMXRT1173" name="codec_sgtl_adapter" brief="Component sgtl5000 adapter for single codec" version="2.2.0" full_name="Component sgtl_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="port/sgtl5000" type="c_include">
        <files mask="fsl_codec_sgtl_adapter.h"/>
      </source>
      <source relative_path="port/sgtl5000" type="src">
        <files mask="fsl_codec_sgtl_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="port/sgtl5000" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/sgtl5000" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.tfa9896_adapter.MIMXRT1173" name="codec_tfa9896_adapter" brief="Component tfa9896 adapter for single codec" version="2.2.0" full_name="Component tfa9896_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="port/tfa9896" type="c_include">
        <files mask="fsl_codec_tfa9896_adapter.h"/>
      </source>
      <source relative_path="port/tfa9896" type="src">
        <files mask="fsl_codec_tfa9896_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="port/tfa9896" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/tfa9896" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.tfa9xxx_adapter.MIMXRT1173" name="codec_tfa9xxx_adapter" brief="Component tfa9xxx adapter for single codec" version="2.2.0" full_name="Component tfa9xxx_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="port/tfa9xxx" type="c_include">
        <files mask="fsl_codec_tfa9xxx_adapter.h"/>
      </source>
      <source relative_path="port/tfa9xxx" type="src">
        <files mask="fsl_codec_tfa9xxx_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="port/tfa9xxx" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/tfa9xxx" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.wm8524_adapter.MIMXRT1173" name="codec_wm8524_adapter" brief="Component wm8524 adapter for single codec" version="2.2.0" full_name="Component wm8524_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="port/wm8524" type="c_include">
        <files mask="fsl_codec_wm8524_adapter.h"/>
      </source>
      <source relative_path="port/wm8524" type="src">
        <files mask="fsl_codec_wm8524_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="port/wm8524" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/wm8524" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.wm8904_adapter.MIMXRT1173" name="codec_wm8904_adapter" brief="Component wm8904 adapter for single codec" version="2.2.0" full_name="Component wm8904_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec/" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="port/wm8904" type="c_include">
        <files mask="fsl_codec_wm8904_adapter.h"/>
      </source>
      <source relative_path="port/wm8904" type="src">
        <files mask="fsl_codec_wm8904_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="port/wm8904" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/wm8904" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.wm8960_adapter.MIMXRT1173" name="codec_wm8960_adapter" brief="Component wm8960 adapter for single codecs" version="2.2.0" full_name="Component wm8960_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec/" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="port/wm8960" type="c_include">
        <files mask="fsl_codec_wm8960_adapter.h"/>
      </source>
      <source relative_path="port/wm8960" type="src">
        <files mask="fsl_codec_wm8960_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="port/wm8960" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/wm8960" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.wm8962_adapter.MIMXRT1173" name="codec_wm8962_adapter" brief="Component wm8962 adapter for single codecs" version="2.2.0" full_name="Component wm8962_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec/" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="port/wm8962" type="c_include">
        <files mask="fsl_codec_wm8962_adapter.h"/>
      </source>
      <source relative_path="port/wm8962" type="src">
        <files mask="fsl_codec_wm8962_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="port/wm8962" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/wm8962" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.codec.MIMXRT1173" name="codec" brief="Driver codec" version="2.3.1" full_name="Driver codec" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_codec_common.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_codec_common.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="project_template.MIMXRT1173.MIMXRT1173" name="MIMXRT1173" brief="Devices_project_template MIMXRT1173" version="1.0.0" full_name="Devices_project_template MIMXRT1173" category="Board Support/SDK Project Template" user_visible="true" type="project_template" package_base_path="devices/MIMXRT1173/project_template" project_base_path="board">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Include_core_cm.MIMXRT1173"/>
          <component_dependency value="device.MIMXRT1173_startup.MIMXRT1173"/>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <component_dependency value="platform.drivers.clock.MIMXRT1173"/>
          <component_dependency value="platform.drivers.igpio.MIMXRT1173"/>
          <component_dependency value="platform.drivers.iomuxc.MIMXRT1173"/>
          <component_dependency value="platform.drivers.pmu_1.MIMXRT1173"/>
          <component_dependency value="platform.drivers.anatop_ai.MIMXRT1173"/>
          <component_dependency value="platform.drivers.memory.MIMXRT1173"/>
          <component_dependency value="platform.drivers.dcdc_soc.MIMXRT1173"/>
          <component_dependency value="platform.drivers.gpc_3.MIMXRT1173"/>
          <component_dependency value="platform.drivers.pgmc.MIMXRT1173"/>
          <component_dependency value="platform.drivers.soc_src.MIMXRT1173"/>
          <component_dependency value="platform.drivers.nic301.MIMXRT1173"/>
          <component_dependency value="platform.drivers.xip_device.MIMXRT1173"/>
          <component_dependency value="component.lpuart_adapter.MIMXRT1173"/>
          <component_dependency value="utility.debug_console_lite.MIMXRT1173"/>
          <component_dependency value="platform.utilities.assert_lite.MIMXRT1173"/>
          <component_dependency value="utility.str.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" config="true" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="pin_mux.h"/>
        <files mask="peripherals.h"/>
      </source>
      <source relative_path="./" config="true" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="pin_mux.c"/>
        <files mask="peripherals.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.devices.MIMXRT1173_linker.MIMXRT1173" name="MIMXRT1173_linker" brief="Device MIMXRT1173_linker" version="1.0.0" full_name="Device MIMXRT1173_linker" category="Device/SDK Utilities" user_visible="true" type="linker" package_base_path="devices/MIMXRT1173" project_base_path="MIMXRT1173">
      <dependencies>
        <device_dependency value="MIMXRT1173xxxxx"/>
      </dependencies>
      <source toolchain="mdk" relative_path="arm" config="true" type="linker" device_cores="cm4_MIMXRT1173xxxxx">
        <files mask="MIMXRT1173xxxxx_cm4_flexspi_nor.scf"/>
        <files mask="MIMXRT1173xxxxx_cm4_flexspi_nor_sdram.scf"/>
        <files mask="MIMXRT1173xxxxx_cm4_ram.scf"/>
        <files mask="MIMXRT1173xxxxx_cm4_sdram.scf"/>
        <files mask="MIMXRT1173xxxxx_cm4_sdram_txt.scf"/>
      </source>
      <source toolchain="armgcc" relative_path="gcc" config="true" type="linker" device_cores="cm4_MIMXRT1173xxxxx">
        <files mask="MIMXRT1173xxxxx_cm4_flexspi_nor.ld"/>
        <files mask="MIMXRT1173xxxxx_cm4_flexspi_nor_sdram.ld"/>
        <files mask="MIMXRT1173xxxxx_cm4_ram.ld"/>
        <files mask="MIMXRT1173xxxxx_cm4_sdram.ld"/>
        <files mask="MIMXRT1173xxxxx_cm4_sdram_txt.ld"/>
      </source>
      <source toolchain="iar" relative_path="iar" config="true" type="linker" device_cores="cm4_MIMXRT1173xxxxx">
        <files mask="MIMXRT1173xxxxx_cm4_flexspi_nor.icf"/>
        <files mask="MIMXRT1173xxxxx_cm4_flexspi_nor_sdram.icf"/>
        <files mask="MIMXRT1173xxxxx_cm4_ram.icf"/>
        <files mask="MIMXRT1173xxxxx_cm4_sdram.icf"/>
        <files mask="MIMXRT1173xxxxx_cm4_sdram_txt.icf"/>
      </source>
      <source toolchain="mdk" relative_path="arm" config="true" type="linker" device_cores="cm7_MIMXRT1173xxxxx">
        <files mask="MIMXRT1173xxxxx_cm7_flexspi_nor.scf"/>
        <files mask="MIMXRT1173xxxxx_cm7_flexspi_nor_sdram.scf"/>
        <files mask="MIMXRT1173xxxxx_cm7_ram.scf"/>
        <files mask="MIMXRT1173xxxxx_cm7_sdram.scf"/>
        <files mask="MIMXRT1173xxxxx_cm7_sdram_txt.scf"/>
      </source>
      <source toolchain="armgcc" relative_path="gcc" config="true" type="linker" device_cores="cm7_MIMXRT1173xxxxx">
        <files mask="MIMXRT1173xxxxx_cm7_flexspi_nor.ld"/>
        <files mask="MIMXRT1173xxxxx_cm7_flexspi_nor_sdram.ld"/>
        <files mask="MIMXRT1173xxxxx_cm7_ram.ld"/>
        <files mask="MIMXRT1173xxxxx_cm7_sdram.ld"/>
        <files mask="MIMXRT1173xxxxx_cm7_sdram_txt.ld"/>
      </source>
      <source toolchain="iar" relative_path="iar" config="true" type="linker" device_cores="cm7_MIMXRT1173xxxxx">
        <files mask="MIMXRT1173xxxxx_cm7_flexspi_nor.icf"/>
        <files mask="MIMXRT1173xxxxx_cm7_flexspi_nor_sdram.icf"/>
        <files mask="MIMXRT1173xxxxx_cm7_ram.icf"/>
        <files mask="MIMXRT1173xxxxx_cm7_sdram.icf"/>
        <files mask="MIMXRT1173xxxxx_cm7_sdram_txt.icf"/>
      </source>
    </component>
    <component id="platform.drivers.cache_lmem.MIMXRT1173" name="cache_lmem" brief="CACHE LMEM Driver" version="2.0.6" full_name="CACHE LMEM Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers/cm4" project_base_path="drivers">
      <dependencies>
        <all>
          <device_dependency value="MIMXRT1173xxxxx"/>
          <device_core_dependency value="cm4_MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_cache.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cache.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.cache_armv7_m7.MIMXRT1173" name="cache" brief="CACHE Driver" version="2.0.4" full_name="CACHE Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers/cm7" project_base_path="drivers">
      <dependencies>
        <all>
          <device_dependency value="MIMXRT1173xxxxx"/>
          <device_core_dependency value="cm7_MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_cache.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cache.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.nic301.MIMXRT1173" name="nic301" brief="NIC301 Driver" version="2.0.1" full_name="NIC301 Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_nic301.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.iomuxc.MIMXRT1173" name="iomuxc" brief="IOMUXC Driver" version="2.0.2" full_name="IOMUXC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_iomuxc.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.soc_mipi_csi2rx.MIMXRT1173" name="soc_mipi_csi2rx" brief="SOC MIPI CSI2RX Driver" version="2.0.2" full_name="SOC MIPI CSI2RX Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_soc_mipi_csi2rx.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_soc_mipi_csi2rx.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.soc_mipi_dsi.MIMXRT1173" name="soc_mipi_dsi" brief="SOC MIPI DSI Driver" version="2.0.0" full_name="SOC MIPI DSI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_soc_mipi_dsi.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.anatop_ai.MIMXRT1173" name="anatop_ai" brief="ANATOP AI Driver" version="1.0.0" full_name="ANATOP AI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_anatop_ai.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_anatop_ai.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.memory.MIMXRT1173" name="memory" brief="MEMORY Driver" version="2.0.0" full_name="Memory Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_memory.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dcdc_soc.MIMXRT1173" name="dcdc_soc" brief="DCDC SOC Driver" version="2.1.2" full_name="DCDC SOC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_dcdc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dcdc.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.gpc_3.MIMXRT1173" name="gpc" brief="GPC Driver" version="2.5.0" full_name="GPC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_gpc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_gpc.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pgmc.MIMXRT1173" name="pgmc" brief="PGMC Driver" version="2.1.2" full_name="PGMC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pgmc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pgmc.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.soc_src.MIMXRT1173" name="soc_src" brief="SOC SRC Driver" version="2.1.1" full_name="SOC SRC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_soc_src.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_soc_src.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.romapi.MIMXRT1173" name="ROMAPI" brief="ROMAPI Driver" version="1.1.1" full_name="ROMAPI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_romapi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_romapi.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.soc_flexram_allocate.MIMXRT1173" name="soc_flexram_allocate" brief="SOC FLEXRAM ALLOCATE Driver" version="2.0.2" full_name="SOC FLEXRAM ALLOCATE Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexram_allocate.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexram_allocate.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="device.MIMXRT1173_CMSIS.MIMXRT1173" name="MIMXRT1173_CMSIS" brief="Device MIMXRT1173_cmsis" version="1.0.0" full_name="Device MIMXRT1173_cmsis" category="Device/CMSIS" user_visible="true" type="CMSIS_Include" package_base_path="devices/MIMXRT1173" project_base_path="device">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Include_core_cm.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_device_registers.h"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm4_MIMXRT1173xxxxx">
        <files mask="MIMXRT1173_cm4.h"/>
        <files mask="MIMXRT1173_cm4_COMMON.h"/>
        <files mask="MIMXRT1173_cm4_features.h"/>
      </source>
      <source relative_path="periph" type="c_include">
        <files mask="PERI_ADC.h"/>
        <files mask="PERI_ADC_ETC.h"/>
        <files mask="PERI_ANADIG_LDO_SNVS.h"/>
        <files mask="PERI_ANADIG_LDO_SNVS_DIG.h"/>
        <files mask="PERI_ANADIG_MISC.h"/>
        <files mask="PERI_ANADIG_OSC.h"/>
        <files mask="PERI_ANADIG_PLL.h"/>
        <files mask="PERI_ANADIG_PMU.h"/>
        <files mask="PERI_ANADIG_TEMPSENSOR.h"/>
        <files mask="PERI_AOI.h"/>
        <files mask="PERI_ASRC.h"/>
        <files mask="PERI_AUDIO_PLL.h"/>
        <files mask="PERI_CAAM.h"/>
        <files mask="PERI_CAN.h"/>
        <files mask="PERI_CAN_WRAPPER.h"/>
        <files mask="PERI_CCM.h"/>
        <files mask="PERI_CCM_OBS.h"/>
        <files mask="PERI_CDOG.h"/>
        <files mask="PERI_CMP.h"/>
        <files mask="PERI_CSI.h"/>
        <files mask="PERI_DAC.h"/>
        <files mask="PERI_DCDC.h"/>
        <files mask="PERI_DCIC.h"/>
        <files mask="PERI_DMA.h"/>
        <files mask="PERI_DMAMUX.h"/>
        <files mask="PERI_DSI_HOST.h"/>
        <files mask="PERI_DSI_HOST_APB_PKT_IF.h"/>
        <files mask="PERI_DSI_HOST_DPI_INTFC.h"/>
        <files mask="PERI_DSI_HOST_NXP_FDSOI28_DPHY_INTFC.h"/>
        <files mask="PERI_EMVSIM.h"/>
        <files mask="PERI_ENC.h"/>
        <files mask="PERI_ENET.h"/>
        <files mask="PERI_ENET_QOS.h"/>
        <files mask="PERI_ETHERNET_PLL.h"/>
        <files mask="PERI_EWM.h"/>
        <files mask="PERI_FLEXIO.h"/>
        <files mask="PERI_FLEXRAM.h"/>
        <files mask="PERI_FLEXSPI.h"/>
        <files mask="PERI_GPC_CPU_MODE_CTRL.h"/>
        <files mask="PERI_GPC_SET_POINT_CTRL.h"/>
        <files mask="PERI_GPC_STBY_CTRL.h"/>
        <files mask="PERI_GPIO.h"/>
        <files mask="PERI_GPT.h"/>
        <files mask="PERI_I2S.h"/>
        <files mask="PERI_IEE.h"/>
        <files mask="PERI_IEE_APC.h"/>
        <files mask="PERI_IOMUXC.h"/>
        <files mask="PERI_IOMUXC_GPR.h"/>
        <files mask="PERI_IOMUXC_LPSR.h"/>
        <files mask="PERI_IOMUXC_LPSR_GPR.h"/>
        <files mask="PERI_IOMUXC_SNVS.h"/>
        <files mask="PERI_IOMUXC_SNVS_GPR.h"/>
        <files mask="PERI_IPS_DOMAIN.h"/>
        <files mask="PERI_KEY_MANAGER.h"/>
        <files mask="PERI_KPP.h"/>
        <files mask="PERI_LCDIF.h"/>
        <files mask="PERI_LCDIFV2.h"/>
        <files mask="PERI_LMEM.h"/>
        <files mask="PERI_LPI2C.h"/>
        <files mask="PERI_LPSPI.h"/>
        <files mask="PERI_LPUART.h"/>
        <files mask="PERI_MCM.h"/>
        <files mask="PERI_MECC.h"/>
        <files mask="PERI_MIPI_CSI2RX.h"/>
        <files mask="PERI_MMCAU.h"/>
        <files mask="PERI_MU.h"/>
        <files mask="PERI_OCOTP.h"/>
        <files mask="PERI_OSC_RC_400M.h"/>
        <files mask="PERI_OTFAD.h"/>
        <files mask="PERI_PDM.h"/>
        <files mask="PERI_PGMC_BPC.h"/>
        <files mask="PERI_PGMC_CPC.h"/>
        <files mask="PERI_PGMC_MIF.h"/>
        <files mask="PERI_PGMC_PPC.h"/>
        <files mask="PERI_PHY_LDO.h"/>
        <files mask="PERI_PIT.h"/>
        <files mask="PERI_PUF.h"/>
        <files mask="PERI_PWM.h"/>
        <files mask="PERI_PXP.h"/>
        <files mask="PERI_RDC.h"/>
        <files mask="PERI_RDC_SEMAPHORE.h"/>
        <files mask="PERI_RTWDOG.h"/>
        <files mask="PERI_SEMA4.h"/>
        <files mask="PERI_SEMC.h"/>
        <files mask="PERI_SNVS.h"/>
        <files mask="PERI_SPDIF.h"/>
        <files mask="PERI_SRAM.h"/>
        <files mask="PERI_SRC.h"/>
        <files mask="PERI_SSARC_HP.h"/>
        <files mask="PERI_SSARC_LP.h"/>
        <files mask="PERI_TMPSNS.h"/>
        <files mask="PERI_TMR.h"/>
        <files mask="PERI_USB.h"/>
        <files mask="PERI_USBHSDCD.h"/>
        <files mask="PERI_USBNC.h"/>
        <files mask="PERI_USBPHY.h"/>
        <files mask="PERI_USDHC.h"/>
        <files mask="PERI_VIDEO_MUX.h"/>
        <files mask="PERI_VIDEO_PLL.h"/>
        <files mask="PERI_VMBANDGAP.h"/>
        <files mask="PERI_WDOG.h"/>
        <files mask="PERI_XBARA.h"/>
        <files mask="PERI_XBARB.h"/>
        <files mask="PERI_XECC.h"/>
        <files mask="PERI_XRDC2.h"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm7_MIMXRT1173xxxxx">
        <files mask="MIMXRT1173_cm7.h"/>
        <files mask="MIMXRT1173_cm7_COMMON.h"/>
        <files mask="MIMXRT1173_cm7_features.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="periph" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="periph" type="asm_include"/>
      </include_paths>
    </component>
    <component id="device.MIMXRT1173_system.MIMXRT1173" name="MIMXRT1173_system" brief="Device MIMXRT1173_system" version="1.0.0" full_name="Device MIMXRT1173_system" category="Device/CMSIS" user_visible="true" type="CMSIS_Include" package_base_path="devices/MIMXRT1173" project_base_path="device">
      <dependencies>
        <all>
          <component_dependency value="device.MIMXRT1173_CMSIS.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src" device_cores="cm4_MIMXRT1173xxxxx">
        <files mask="system_MIMXRT1173_cm4.c"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm4_MIMXRT1173xxxxx">
        <files mask="system_MIMXRT1173_cm4.h"/>
      </source>
      <source relative_path="./" type="src" device_cores="cm7_MIMXRT1173xxxxx">
        <files mask="system_MIMXRT1173_cm7.c"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm7_MIMXRT1173xxxxx">
        <files mask="system_MIMXRT1173_cm7.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="device.MIMXRT1173_startup.MIMXRT1173" name="MIMXRT1173_startup" brief="Device MIMXRT1173_startup" version="1.0.0" full_name="Device MIMXRT1173_startup" category="Device/Startup" user_visible="true" type="startup" package_base_path="devices/MIMXRT1173" project_base_path="startup">
      <dependencies>
        <all>
          <component_dependency value="device.MIMXRT1173_system.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" config="true" type="src_c" device_cores="cm4_MIMXRT1173xxxxx">
        <files mask="startup_mimxrt1173_cm4.c"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" config="true" type="src_cpp" device_cores="cm4_MIMXRT1173xxxxx">
        <files mask="startup_mimxrt1173_cm4.cpp"/>
      </source>
      <source toolchain="iar" relative_path="iar" config="true" type="asm_include" device_cores="cm4_MIMXRT1173xxxxx">
        <files mask="startup_MIMXRT1173_cm4.s"/>
      </source>
      <source toolchain="armgcc" relative_path="gcc" config="true" type="asm_include" device_cores="cm4_MIMXRT1173xxxxx">
        <files mask="startup_MIMXRT1173_cm4.S"/>
      </source>
      <source toolchain="mdk" relative_path="arm" config="true" type="asm_include" device_cores="cm4_MIMXRT1173xxxxx">
        <files mask="startup_MIMXRT1173_cm4.S"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" config="true" type="src_c" device_cores="cm7_MIMXRT1173xxxxx">
        <files mask="startup_mimxrt1173_cm7.c"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" config="true" type="src_cpp" device_cores="cm7_MIMXRT1173xxxxx">
        <files mask="startup_mimxrt1173_cm7.cpp"/>
      </source>
      <source toolchain="iar" relative_path="iar" config="true" type="asm_include" device_cores="cm7_MIMXRT1173xxxxx">
        <files mask="startup_MIMXRT1173_cm7.s"/>
      </source>
      <source toolchain="armgcc" relative_path="gcc" config="true" type="asm_include" device_cores="cm7_MIMXRT1173xxxxx">
        <files mask="startup_MIMXRT1173_cm7.S"/>
      </source>
      <source toolchain="mdk" relative_path="arm" config="true" type="asm_include" device_cores="cm7_MIMXRT1173xxxxx">
        <files mask="startup_MIMXRT1173_cm7.S"/>
      </source>
    </component>
    <component id="CMSIS_Include_core_cm.MIMXRT1173" name="CMSIS_Include_CM" brief="CMSIS-CORE for Cortex-M, ARMv8-M, ARMv8.1-M" version="6.1.0" full_name="CMSIS Include For Cortex-M, ARMv8-M, ARMv8.1-M" category="CMSIS/CORE" user_visible="true" type="CMSIS_Include" package_base_path="CMSIS/Core/Include" project_base_path="CMSIS">
      <dependencies>
        <all>
          <any_of>
            <device_core_dependency value="cm4_MIMXRT1173xxxxx"/>
            <device_core_dependency value="cm7_MIMXRT1173xxxxx"/>
          </any_of>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source compiler="compiler_armclang" relative_path="./" type="c_include">
        <files mask="cmsis_armclang.h"/>
      </source>
      <source compiler="compiler_armclang" relative_path="m-profile" type="c_include">
        <files mask="cmsis_armclang_m.h"/>
      </source>
      <source compiler="compiler_armclang compiler_gcc compiler_iar" relative_path="./" type="c_include">
        <files mask="cmsis_compiler.h"/>
        <files mask="cmsis_version.h"/>
      </source>
      <source compiler="compiler_iar" relative_path="m-profile" type="c_include">
        <files mask="cmsis_iccarm_m.h"/>
      </source>
      <source compiler="compiler_gcc" relative_path="./" type="c_include">
        <files mask="cmsis_gcc.h"/>
      </source>
      <source compiler="compiler_gcc" relative_path="m-profile" type="c_include">
        <files mask="cmsis_gcc_m.h"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm4_MIMXRT1173xxxxx">
        <files mask="core_cm4.h"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm7_MIMXRT1173xxxxx">
        <files mask="core_cm7.h"/>
      </source>
      <source relative_path="m-profile" type="c_include" device_cores="cm7_MIMXRT1173xxxxx">
        <files mask="armv7m_cachel1.h"/>
      </source>
      <source relative_path="m-profile" type="c_include" device_cores="cm4_MIMXRT1173xxxxx cm7_MIMXRT1173xxxxx">
        <files mask="armv7m_mpu.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Include_core_cm.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="m-profile" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="m-profile" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_RTOS2_RTX.MIMXRT1173" name="CMSIS_RTOS2_RTX5" brief="CMSIS-RTOS2 RTX5 for Cortex-M, SC000, C300 and Armv8-M (Library)" version="5.9.0" full_name="CMSIS RTOS2 RTX5" category="CMSIS/RTOS2" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/RTOS2" project_base_path="CMSIS/RTOS2">
      <defines>
        <define name="CMSIS_device_header" value="'&quot;fsl_device_registers.h&quot;'"/>
        <define name="RTE_COMPONENTS_H" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Device_API_OSTick.MIMXRT1173"/>
          <component_dependency value="CMSIS_Device_API_RTOS2.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="RTX/Source" type="c_include">
        <files mask="rtx_core_c.h"/>
        <files mask="rtx_core_ca.h"/>
        <files mask="rtx_core_cm.h"/>
        <files mask="rtx_lib.h"/>
      </source>
      <source relative_path="RTX/Source" type="src">
        <files mask="rtx_delay.c"/>
        <files mask="rtx_evflags.c"/>
        <files mask="rtx_evr.c"/>
        <files mask="rtx_kernel.c"/>
        <files mask="rtx_memory.c"/>
        <files mask="rtx_mempool.c"/>
        <files mask="rtx_msgqueue.c"/>
        <files mask="rtx_mutex.c"/>
        <files mask="rtx_semaphore.c"/>
        <files mask="rtx_system.c"/>
        <files mask="rtx_thread.c"/>
        <files mask="rtx_timer.c"/>
        <files mask="rtx_lib.c"/>
      </source>
      <source relative_path="RTX/Include" type="c_include">
        <files mask="rtx_evr.h"/>
        <files mask="rtx_os.h"/>
        <files mask="rtx_def.h"/>
      </source>
      <source relative_path="RTX/Config" type="src">
        <files mask="RTX_Config.c"/>
      </source>
      <source relative_path="RTX/Config" type="c_include">
        <files mask="RTX_Config.h"/>
      </source>
      <source relative_path="Source" type="src" device_cores="cm4_MIMXRT1173xxxxx cm7_MIMXRT1173xxxxx">
        <files mask="os_systick.c"/>
      </source>
      <source toolchain="mdk armgcc mcuxpresso" relative_path="RTX/Source/GCC" type="asm_include" device_cores="cm4_MIMXRT1173xxxxx cm7_MIMXRT1173xxxxx">
        <files mask="irq_armv7m.S"/>
      </source>
      <source toolchain="iar" relative_path="RTX/Source/IAR" type="asm_include" device_cores="cm4_MIMXRT1173xxxxx cm7_MIMXRT1173xxxxx">
        <files mask="irq_armv7m.s"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_RTOS2_RTX.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="RTX/Include" type="c_include"/>
        <include_path relative_path="RTX/Config" type="c_include"/>
        <include_path relative_path="RTX/Include" type="asm_include"/>
        <include_path relative_path="RTX/Config" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_RTOS2_RTX_LIB.MIMXRT1173" name="CMSIS_RTOS2_RTX5_Library" brief="CMSIS-RTOS2 RTX5 for Cortex-M, SC000, C300 and Armv8-M (Library)" version="5.9.0" full_name="CMSIS RTOS2 RTX5" category="CMSIS/RTOS2" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/RTOS2" project_base_path="CMSIS/RTOS2">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Device_API_OSTick.MIMXRT1173"/>
          <component_dependency value="CMSIS_Device_API_RTOS2.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="iar" relative_path="RTX/Library/IAR" project_relative_path="./" type="lib" device_cores="cm4_MIMXRT1173xxxxx cm7_MIMXRT1173xxxxx">
        <files mask="RTX_V7MF.a"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="RTX/Library/GCC" project_relative_path="./" type="lib" device_cores="cm4_MIMXRT1173xxxxx cm7_MIMXRT1173xxxxx">
        <files mask="libRTX_V7MF.a"/>
      </source>
      <source toolchain="mdk" relative_path="RTX/Library/ARM" project_relative_path="./" type="lib" device_cores="cm4_MIMXRT1173xxxxx cm7_MIMXRT1173xxxxx">
        <files mask="RTX_V7MF.lib"/>
      </source>
      <source relative_path="RTX/Source" type="c_include">
        <files mask="rtx_core_c.h"/>
        <files mask="rtx_core_ca.h"/>
        <files mask="rtx_core_cm.h"/>
        <files mask="rtx_lib.h"/>
      </source>
      <source relative_path="RTX/Source" type="src">
        <files mask="rtx_lib.c"/>
      </source>
      <source relative_path="RTX/Include" type="c_include">
        <files mask="rtx_evr.h"/>
        <files mask="rtx_os.h"/>
        <files mask="rtx_def.h"/>
      </source>
      <source relative_path="RTX/Config" type="src">
        <files mask="RTX_Config.c"/>
      </source>
      <source relative_path="RTX/Config" type="c_include">
        <files mask="RTX_Config.h"/>
      </source>
      <source toolchain="iar" relative_path="RTX/Library/IAR" type="lib" device_cores="cm4_MIMXRT1173xxxxx cm7_MIMXRT1173xxxxx">
        <files mask="RTX_V7MF.a"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="RTX/Library/GCC" type="lib" device_cores="cm4_MIMXRT1173xxxxx cm7_MIMXRT1173xxxxx">
        <files mask="libRTX_V7MF.a"/>
      </source>
      <source toolchain="mdk" relative_path="RTX/Library/ARM" type="lib" device_cores="cm4_MIMXRT1173xxxxx cm7_MIMXRT1173xxxxx">
        <files mask="RTX_V7MF.lib"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_RTOS2_RTX_LIB.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="RTX/Source" type="c_include"/>
        <include_path relative_path="RTX/Include" type="c_include"/>
        <include_path relative_path="RTX/Config" type="c_include"/>
        <include_path relative_path="RTX/Source" type="asm_include"/>
        <include_path relative_path="RTX/Include" type="asm_include"/>
        <include_path relative_path="RTX/Config" type="asm_include"/>
      </include_paths>
    </component>
    <component id="utility.str.MIMXRT1173" name="utility_str" brief="Utility str" version="1.0.0" full_name="Utility str" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT1173/utilities" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="str" type="c_include">
        <files mask="fsl_str.h"/>
      </source>
      <source relative_path="str" type="src">
        <files mask="fsl_str.c"/>
      </source>
      <include_paths>
        <include_path relative_path="str" type="c_include"/>
        <include_path relative_path="str" type="asm_include"/>
      </include_paths>
    </component>
    <component id="utility.debug_console_lite.MIMXRT1173" name="debug_console_lite" brief="Utility debug_console_lite" version="1.0.0" full_name="Utility debug_console_lite" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT1173/utilities" project_base_path="utilities">
      <dependencies>
        <all>
          <not>
            <component_dependency value="utility.debug_console.MIMXRT1173"/>
          </not>
          <component_dependency value="platform.drivers.lpuart.MIMXRT1173"/>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <component_dependency value="utility.str.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="debug_console_lite" type="c_include">
        <files mask="fsl_debug_console.h"/>
      </source>
      <source relative_path="debug_console_lite" type="src">
        <files mask="fsl_debug_console.c"/>
      </source>
      <include_paths>
        <include_path relative_path="debug_console_lite" type="c_include"/>
        <include_path relative_path="debug_console_lite" type="asm_include"/>
      </include_paths>
    </component>
    <component id="utility.debug_console.MIMXRT1173" name="debug_console" brief="Utility debug_console" version="1.0.1" full_name="Utility debug_console" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT1173/utilities" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="component.serial_manager.MIMXRT1173"/>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <component_dependency value="utility.str.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="debug_console" type="c_include">
        <files mask="fsl_debug_console.h"/>
      </source>
      <source relative_path="debug_console" type="src">
        <files mask="fsl_debug_console.c"/>
      </source>
      <include_paths>
        <include_path relative_path="debug_console" type="c_include"/>
        <include_path relative_path="debug_console" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.utilities.assert.MIMXRT1173" name="assert" brief="Utility assert" version="1.0.0" full_name="Utility assert" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT1173/utilities" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <component_dependency value="utility.debug_console.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_assert.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_assert.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.utilities.assert_lite.MIMXRT1173" name="assert_lite" brief="Utility assert_lite" version="1.0.0" full_name="Utility assert_lite" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT1173/utilities/debug_console_lite" project_base_path="utilities">
      <dependencies>
        <all>
          <not>
            <component_dependency value="platform.utilities.assert.MIMXRT1173"/>
          </not>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <component_dependency value="utility.debug_console_lite.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_assert.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_assert.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.MIMXRT1173" name="FreeRTOS kernel" brief="FreeRTOS kernel" version="11.0.1" full_name="FreeRTOS kernel" category="RTOS/Core" user_visible="true" type="OS" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <defines>
        <define name="SDK_OS_FREE_RTOS" value=""/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.freertos-kernel.heap_1.MIMXRT1173"/>
            <component_dependency value="middleware.freertos-kernel.heap_2.MIMXRT1173"/>
            <component_dependency value="middleware.freertos-kernel.heap_3.MIMXRT1173"/>
            <component_dependency value="middleware.freertos-kernel.heap_4.MIMXRT1173"/>
            <component_dependency value="middleware.freertos-kernel.heap_5.MIMXRT1173"/>
          </any_of>
          <component_dependency value="middleware.freertos-kernel.config.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="croutine.c"/>
        <files mask="event_groups.c"/>
        <files mask="list.c"/>
        <files mask="queue.c"/>
        <files mask="stream_buffer.c"/>
        <files mask="tasks.c"/>
        <files mask="timers.c"/>
      </source>
      <source relative_path="include" type="c_include">
        <files mask="atomic.h"/>
        <files mask="croutine.h"/>
        <files mask="deprecated_definitions.h"/>
        <files mask="event_groups.h"/>
        <files mask="FreeRTOS.h"/>
        <files mask="list.h"/>
        <files mask="message_buffer.h"/>
        <files mask="mpu_prototypes.h"/>
        <files mask="mpu_syscall_numbers.h"/>
        <files mask="mpu_wrappers.h"/>
        <files mask="portable.h"/>
        <files mask="projdefs.h"/>
        <files mask="queue.h"/>
        <files mask="semphr.h"/>
        <files mask="stack_macros.h"/>
        <files mask="StackMacros.h"/>
        <files mask="stream_buffer.h"/>
        <files mask="task.h"/>
        <files mask="timers.h"/>
      </source>
      <source relative_path="include" type="doc">
        <files mask="stdint.readme"/>
      </source>
      <source relative_path="portable/MemMang" type="other">
        <files mask="ReadMe.url"/>
      </source>
      <source relative_path="portable" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source toolchain="armgcc mcuxpresso mdk" compiler="compiler_armclang compiler_gcc" relative_path="portable/GCC/ARM_CM4F" type="src" device_cores="cm4_MIMXRT1173xxxxx cm7_MIMXRT1173xxxxx">
        <files mask="port.c"/>
      </source>
      <source toolchain="armgcc mcuxpresso mdk" compiler="compiler_armclang compiler_gcc" relative_path="portable/GCC/ARM_CM4F" type="c_include" device_cores="cm4_MIMXRT1173xxxxx cm7_MIMXRT1173xxxxx">
        <files mask="portmacro.h"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM4F" type="src" device_cores="cm4_MIMXRT1173xxxxx cm7_MIMXRT1173xxxxx">
        <files mask="port.c"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM4F" type="asm_include" device_cores="cm4_MIMXRT1173xxxxx cm7_MIMXRT1173xxxxx">
        <files mask="portasm.s"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM4F" type="c_include" device_cores="cm4_MIMXRT1173xxxxx cm7_MIMXRT1173xxxxx">
        <files mask="portmacro.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="portable/GCC/ARM_CM4F" toolchain="armgcc mcuxpresso mdk" type="c_include" device_cores="cm4_MIMXRT1173xxxxx cm7_MIMXRT1173xxxxx"/>
        <include_path relative_path="portable/IAR/ARM_CM4F" toolchain="iar" type="c_include" device_cores="cm4_MIMXRT1173xxxxx cm7_MIMXRT1173xxxxx"/>
        <include_path relative_path="include" type="asm_include"/>
        <include_path relative_path="portable/GCC/ARM_CM4F" toolchain="armgcc mcuxpresso mdk" type="asm_include" device_cores="cm4_MIMXRT1173xxxxx cm7_MIMXRT1173xxxxx"/>
        <include_path relative_path="portable/IAR/ARM_CM4F" toolchain="iar" type="asm_include" device_cores="cm4_MIMXRT1173xxxxx cm7_MIMXRT1173xxxxx"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.extension.MIMXRT1173" name="FreeRTOS NXP extension" brief="FreeRTOS NXP extension" version="11.0.1" full_name="FreeRTOS NXP extension" category="RTOS/TAD extension" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="include" type="c_include">
        <files mask="freertos_tasks_c_additions.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_extension.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.heap_1.MIMXRT1173" name="FreeRTOS heap 1" brief="FreeRTOS heap 1" version="11.0.1" full_name="FreeRTOS heap 1" category="RTOS/Heap" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_1.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_heap_1.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_2.MIMXRT1173" name="FreeRTOS heap 2" brief="FreeRTOS heap 2" version="11.0.1" full_name="FreeRTOS heap 2" category="RTOS/Heap" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_2.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_heap_2.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_3.MIMXRT1173" name="FreeRTOS heap 3" brief="FreeRTOS heap 3" version="11.0.1" full_name="FreeRTOS heap_3" category="RTOS/Heap" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_3.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_heap_3.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_4.MIMXRT1173" name="FreeRTOS heap 4" brief="FreeRTOS heap 4" version="11.0.1" full_name="FreeRTOS heap 4" category="RTOS/Heap" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_4.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_heap_4.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_5.MIMXRT1173" name="FreeRTOS heap 5" brief="FreeRTOS heap 5" version="11.0.1" full_name="FreeRTOS heap 5" category="RTOS/Heap" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_5.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_heap_5.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.mpu_wrappers.MIMXRT1173" name="old FreeRTOS MPU wrappers used before V10.6.0" brief="old FreeRTOS MPU wrappers used before V10.6.0" version="11.0.1" full_name="old FreeRTOS MPU wrappers used before V10.6.0" category="RTOS/MPU wrappers" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="portable/Common" type="src">
        <files mask="mpu_wrappers.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_mpu_wrappers.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.mpu_wrappers_v2.MIMXRT1173" name="new V2 FreeRTOS MPU wrappers introduced in V10.6.0" brief="new V2 FreeRTOS MPU wrappers introduced in V10.6.0" version="11.0.1" full_name="new V2 FreeRTOS MPU wrappers introduced in V10.6.0" category="RTOS/MPU wrappers V2" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="portable/Common" type="src">
        <files mask="mpu_wrappers_v2.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_mpu_wrappers_v2.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.config.MIMXRT1173" name="FreeRTOS configuration template" brief="Template configuration file to be edited by user. Provides also memory allocator (heap_x), change variant if needed." version="11.0.1" full_name="FreeRTOS configuration template" category="RTOS/freertos template" user_visible="true" type="project_template" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="template" config="true" type="c_include">
        <files mask="FreeRTOSConfig.h"/>
      </source>
      <source relative_path="template/ARM_CM4F_4_priority_bits" config="true" type="c_include" device_cores="cm4_MIMXRT1173xxxxx cm7_MIMXRT1173xxxxx">
        <files mask="FreeRTOSConfig_Gen.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_config.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/ARM_CM4F_4_priority_bits" type="c_include" device_cores="cm4_MIMXRT1173xxxxx cm7_MIMXRT1173xxxxx"/>
        <include_path relative_path="template" type="asm_include"/>
        <include_path relative_path="template/ARM_CM4F_4_priority_bits" type="asm_include" device_cores="cm4_MIMXRT1173xxxxx cm7_MIMXRT1173xxxxx"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpuart_freertos.MIMXRT1173" name="lpuart_freertos" brief="LPUART Freertos Driver" version="2.5.0" full_name="LPUART Freertos Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpuart.MIMXRT1173"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart_freertos.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpspi_freertos.MIMXRT1173" name="lpspi_freertos" brief="LPSPI FreeRTOS Driver" version="2.3.1" full_name="LPSPI FreeRTOS Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpspi.MIMXRT1173"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpspi_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpspi_freertos.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpi2c_freertos.MIMXRT1173" name="i2c_freertos" brief="LPI2C FreeRTOS Driver" version="2.3.2" full_name="LPI2C FreeRTOS Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1173"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpi2c_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpi2c_freertos.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos.corepkcs11.template.MIMXRT1173" name="corepkcs11 configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="corePKCS11 configuration template" category="FreeRTOS/corePKCS11" user_visible="false" type="project_template" package_base_path="rtos/freertos/corepkcs11" project_base_path="freertos/corepkcs11">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1173"/>
          <component_dependency value="middleware.freertos.corepkcs11.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="template" config="true" type="c_include">
        <files mask="core_pkcs11_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos_corepkcs11_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos.corepkcs11.MIMXRT1173" name="corepkcs11" brief="Software implementation of the PKCS #11 standard." version="3.5.0" full_name="corePKCS11" category="FreeRTOS/corePKCS11" user_visible="true" type="middleware" package_base_path="rtos/freertos/corepkcs11" project_base_path="freertos/corepkcs11">
      <dependencies>
        <all>
          <component_dependency value="middleware.pkcs11.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="core_pkcs11.c"/>
        <files mask="core_pki_utils.c"/>
      </source>
      <source relative_path="source/include" type="c_include">
        <files mask="core_pkcs11.h"/>
        <files mask="core_pkcs11_config_defaults.h"/>
        <files mask="core_pkcs11_pal.h"/>
        <files mask="core_pki_utils.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos_corepkcs11.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/include" type="c_include"/>
        <include_path relative_path="source/include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos.corepkcs11.mbedtls.MIMXRT1173" name="corepkcs11 mbedtls" brief="PKCS #11, mbedtls port." version="3.5.0" full_name="corePKCS11 mbedtls" category="FreeRTOS/corePKCS11" user_visible="true" type="middleware" package_base_path="rtos/freertos/corepkcs11" project_base_path="freertos/corepkcs11">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos.corepkcs11.MIMXRT1173"/>
          <component_dependency value="middleware.pkcs11.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/portable/mbedtls" type="src">
        <files mask="core_pkcs11_mbedtls.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos_corepkcs11_mbedtls.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos.corepkcs11.mbedtls_utils.MIMXRT1173" name="corepkcs11 mbedtls_utils" brief="PKCS #11, mbedtls_utils" version="3.5.0" full_name="corePKCS11 mbedtls_utils" category="FreeRTOS/corePKCS11" user_visible="true" type="middleware" package_base_path="rtos/freertos/corepkcs11" project_base_path="freertos/corepkcs11">
      <defines>
        <define name="MBEDTLS_THREADING_ALT" value=""/>
        <define name="MBEDTLS_THREADING_C" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos.corepkcs11.MIMXRT1173"/>
          <component_dependency value="middleware.pkcs11.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/dependency/3rdparty/mbedtls_utils" type="src">
        <files mask="mbedtls_utils.c"/>
      </source>
      <source relative_path="source/dependency/3rdparty/mbedtls_utils" type="c_include">
        <files mask="mbedtls_utils.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos_corepkcs11_mbedtls_utils.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/dependency/3rdparty/mbedtls_utils" type="c_include"/>
        <include_path relative_path="source/dependency/3rdparty/mbedtls_utils" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos.coremqtt.template.MIMXRT1173" name="coremqtt configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="coreMQTT configuration template" category="FreeRTOS/coreMQTT" user_visible="false" type="project_template" package_base_path="rtos/freertos/coremqtt" project_base_path="freertos/coremqtt">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos.coremqtt.MIMXRT1173"/>
          <component_dependency value="middleware.iot_reference.logging.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="template" type="c_include">
        <files mask="core_mqtt_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos_coremqtt_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos.coremqtt-agent.MIMXRT1173" name="coremqtt-agent" brief="Agent for thread-safe use of coreMQTT." version="1.2.0" full_name="coreMQTT-Agent" category="FreeRTOS/coreMQTT Agent" user_visible="true" type="middleware" package_base_path="rtos/freertos/coremqtt-agent" project_base_path="freertos/coremqtt-agent">
      <defines>
        <define name="MQTT_AGENT_DO_NOT_USE_CUSTOM_CONFIG" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos.coremqtt.MIMXRT1173"/>
          <component_dependency value="middleware.iot_reference.logging.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/include" type="c_include">
        <files mask="core_mqtt_agent.h"/>
        <files mask="core_mqtt_agent_command_functions.h"/>
        <files mask="core_mqtt_agent_config_defaults.h"/>
        <files mask="core_mqtt_agent_default_logging.h"/>
        <files mask="core_mqtt_agent_message_interface.h"/>
      </source>
      <source relative_path="source" type="src">
        <files mask="core_mqtt_agent_command_functions.c"/>
        <files mask="core_mqtt_agent.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos_coremqtt-agent.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/include" type="c_include"/>
        <include_path relative_path="source/include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos.corehttp.MIMXRT1173" name="corehttp" brief="Client implementation of the HTTP/1.1 specification for embedded devices." version="3.0.0" full_name="coreHTTP" category="FreeRTOS/coreHTTP" user_visible="false" type="middleware" package_base_path="rtos/freertos/corehttp" project_base_path="freertos/corehttp">
      <dependencies>
        <all>
          <component_dependency value="middleware.llhttp.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="core_http_client.c"/>
      </source>
      <source relative_path="source/include" type="c_include">
        <files mask="core_http_client.h"/>
        <files mask="core_http_client_private.h"/>
        <files mask="core_http_config_defaults.h"/>
      </source>
      <source relative_path="source/interface" type="c_include">
        <files mask="transport_interface.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos_corehttp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/include" type="c_include"/>
        <include_path relative_path="source/interface" type="c_include"/>
        <include_path relative_path="source/include" type="asm_include"/>
        <include_path relative_path="source/interface" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.xrdc2.MIMXRT1173" name="xrdc2" brief="XRDC2 Driver" version="2.0.3" full_name="XRDC2 Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_xrdc2.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_xrdc2.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.xecc.MIMXRT1173" name="xecc" brief="XECC Driver" version="2.0.0" full_name="XECC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_xecc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_xecc.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.xbarb.MIMXRT1173" name="xbarb" brief="XBARB Driver" version="2.0.2" full_name="XBARB Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_xbarb.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_xbarb.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.xbara.MIMXRT1173" name="xbara" brief="XBARA Driver" version="2.0.6" full_name="XBARA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_xbara.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_xbara.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.wdog01.MIMXRT1173" name="wdog" brief="wdog01 Driver" version="2.2.0" full_name="wdog01 Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wdog.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wdog.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.usdhc.MIMXRT1173" name="sdhc" brief="USDHC Driver" version="2.8.4" full_name="USDHC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_usdhc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_usdhc.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.tempsensor.MIMXRT1173" name="tempsensor" brief="TEMPSENSOR Driver" version="2.1.2" full_name="TEMPSENSOR Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_tempsensor.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_tempsensor.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.ssarc.MIMXRT1173" name="ssarc" brief="SSARC Driver" version="2.1.0" full_name="SSARC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ssarc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ssarc.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.spdif.MIMXRT1173" name="spdif" brief="SPDIF Driver" version="2.0.7" full_name="SPDIF Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_spdif.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_spdif.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.spdif_edma.MIMXRT1173" name="spdif_edma" brief="SPDIF EDMA Driver" version="2.0.8" full_name="SPDIF EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.spdif.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_spdif_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_spdif_edma.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.snvs_lp.MIMXRT1173" name="snvs_lp" brief="SNVS LP Driver" version="2.4.6" full_name="SNVS LP Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_snvs_lp.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_snvs_lp.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.snvs_hp.MIMXRT1173" name="snvs_hp" brief="SNVS HP Driver" version="2.3.2" full_name="SNVS HP Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_snvs_hp.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_snvs_hp.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.smartcard_emvsim.MIMXRT1173" name="smartcard_emvsim" brief="SMARTCARD EMVSIM Driver" version="2.3.0" full_name="SMARTCARD EMVSIM Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_smartcard.h"/>
        <files mask="fsl_smartcard_emvsim.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_smartcard_emvsim.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.smartcard_phy_emvsim.MIMXRT1173" name="smartcard_phy_emvsim" brief="SMARTCARD PHY EMVSIM, use only one SMARTCARD PHY in the project" version="2.3.0" full_name="SMARTCARD PHY EMVSIM" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <defines>
        <define name="USING_PHY_EMVSIM" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <component_dependency value="platform.drivers.smartcard_emvsim.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_smartcard_phy.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_smartcard_phy_emvsim.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.smartcard_uart.MIMXRT1173" name="smartcard_uart" brief="SMARTCARD UART Driver" version="2.3.0" full_name="SMARTCARD UART Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_smartcard.h"/>
        <files mask="fsl_smartcard_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_smartcard_uart.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.semc.MIMXRT1173" name="semc" brief="SEMC Driver" version="2.7.0" full_name="SEMC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_semc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_semc.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sema4.MIMXRT1173" name="sema4" brief="SEMA4 Driver" version="2.0.3" full_name="SEMA4 Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sema4.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sema4.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sai.MIMXRT1173" name="sai" brief="SAI Driver" version="2.4.4" full_name="SAI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sai.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sai.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sai_edma.MIMXRT1173" name="sai_edma" brief="SAI EDMA Driver" version="2.7.1" full_name="SAI EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma.MIMXRT1173"/>
          <component_dependency value="platform.drivers.sai.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sai_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sai_edma.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.rtwdog.MIMXRT1173" name="rtwdog" brief="RTWDOG Driver" version="2.1.2" full_name="RTWDOG Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rtwdog.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rtwdog.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.rdc_sema42.MIMXRT1173" name="rdc_sema42" brief="RDC SEMA42 Driver" version="2.0.4" full_name="RDC SEMA42 Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rdc_sema42.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rdc_sema42.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.rdc.MIMXRT1173" name="rdc" brief="RDC Driver" version="2.2.0" full_name="RDC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rdc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rdc.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.qtmr.MIMXRT1173" name="qtmr" brief="QTMR Driver" version="2.2.2" full_name="QTMR Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_qtmr.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_qtmr.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pxp.MIMXRT1173" name="pxp" brief="PXP Driver" version="2.6.1" full_name="PXP Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pxp.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pxp.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pwm.MIMXRT1173" name="pwm" brief="PWM Driver" version="2.8.4" full_name="PWM Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pwm.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pwm.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.puf.MIMXRT1173" name="PUF" brief="PUF Driver" version="2.1.6" full_name="PUF Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_puf.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_puf.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pit.MIMXRT1173" name="pit" brief="PIT Driver" version="2.0.5" full_name="PIT Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pit.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pit.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pdm.MIMXRT1173" name="pdm" brief="PDM Driver" version="2.9.1" full_name="PDM Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pdm.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pdm.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pdm_edma.MIMXRT1173" name="pdm_edma" brief="PDM EDMA Driver" version="2.6.3" full_name="PDM EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma.MIMXRT1173"/>
          <component_dependency value="platform.drivers.pdm.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pdm_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pdm_edma.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.ocotp.MIMXRT1173" name="ocotp" brief="OCOTP Driver" version="2.1.4" full_name="OCOTP Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ocotp.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ocotp.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.mu.MIMXRT1173" name="mu" brief="MU Driver" version="2.2.0" full_name="MU Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mu.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mu.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.mipi_dsi_split.MIMXRT1173" name="mipi_dsi" brief="MIPI DSI Driver" version="2.2.5" full_name="MIPI DSI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <component_dependency value="platform.drivers.soc_mipi_csi2rx.MIMXRT1173"/>
          <component_dependency value="platform.drivers.soc_mipi_dsi.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_mipi_dsi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mipi_dsi.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.mipi_csi2rx.MIMXRT1173" name="mipi_csi2rx" brief="MIPI CSI2RX Driver" version="2.0.4" full_name="MIPI CSI2RX Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <component_dependency value="platform.drivers.soc_mipi_csi2rx.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_mipi_csi2rx.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mipi_csi2rx.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.mecc.MIMXRT1173" name="mecc" brief="MECC Driver" version="2.1.1" full_name="MECC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_mecc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mecc.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpuart.MIMXRT1173" name="lpuart" brief="LPUART Driver" version="2.8.2" full_name="LPUART Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpuart_edma.MIMXRT1173" name="lpuart_edma" brief="LPUART Driver" version="2.6.0" full_name="LPUART Edma Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma.MIMXRT1173"/>
          <component_dependency value="platform.drivers.lpuart.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart_edma.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpuart_cmsis.MIMXRT1173" name="lpuart_cmsis" brief="LPUART CMSIS Driver" version="1.0.0" full_name="LPUART CMSIS Driver" category="CMSIS Driver/USART" user_visible="true" type="CMSIS_driver" package_base_path="devices/MIMXRT1173/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Driver_Include.USART.MIMXRT1173"/>
          <component_dependency value="platform.drivers.lpuart.MIMXRT1173"/>
          <component_dependency value="device.RTE.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpuart_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpuart_cmsis.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpspi.MIMXRT1173" name="lpspi" brief="LPSPI Driver" version="2.6.9" full_name="LPSPI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lpspi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpspi.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpspi_edma.MIMXRT1173" name="lpspi_edma" brief="LPSPI Driver" version="2.4.5" full_name="LPSPI Edma Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma.MIMXRT1173"/>
          <component_dependency value="platform.drivers.lpspi.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpspi_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpspi_edma.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpspi_cmsis.MIMXRT1173" name="lpspi_cmsis" brief="LPSPI CMSIS Driver" version="1.0.0" full_name="LPSPI CMSIS Driver" category="CMSIS Driver/SPI" user_visible="true" type="CMSIS_driver" package_base_path="devices/MIMXRT1173/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Driver_Include.SPI.MIMXRT1173"/>
          <component_dependency value="platform.drivers.lpspi.MIMXRT1173"/>
          <component_dependency value="device.RTE.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpspi_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpspi_cmsis.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpi2c.MIMXRT1173" name="i2c" brief="LPI2C Driver" version="2.5.5" full_name="LPI2C Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lpi2c.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpi2c.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpi2c_edma.MIMXRT1173" name="i2c_edma" brief="LPI2C Driver" version="2.4.2" full_name="LPI2C Edma Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma.MIMXRT1173"/>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lpi2c_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpi2c_edma.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpi2c_cmsis.MIMXRT1173" name="lpi2c_cmsis" brief="LPI2C CMSIS Driver" version="1.0.0" full_name="LPI2C CMSIS Driver" category="CMSIS Driver/I2C" user_visible="true" type="CMSIS_driver" package_base_path="devices/MIMXRT1173/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Driver_Include.I2C.MIMXRT1173"/>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1173"/>
          <component_dependency value="device.RTE.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpi2c_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lpi2c_cmsis.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpadc.MIMXRT1173" name="lpadc" brief="LPADC Driver" version="2.9.1" full_name="LPADC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lpadc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpadc.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lcdifv2.MIMXRT1173" name="lcdifv2" brief="LCDIFV2 Driver" version="2.3.3" full_name="LCDIFV2 Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lcdifv2.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lcdifv2.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.kpp.MIMXRT1173" name="kpp" brief="KPP Driver" version="2.0.1" full_name="KPP Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_kpp.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_kpp.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.key_manager.MIMXRT1173" name="key_manager" brief="Key Manager Driver" version="2.0.2" full_name="Key Manager Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_key_manager.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_key_manager.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.igpio.MIMXRT1173" name="gpio" brief="GPIO Driver" version="2.0.6" full_name="igpio" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_gpio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_gpio.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.iee_apc.MIMXRT1173" name="iee_apc" brief="IEE APC Driver" version="2.0.2" full_name="IEE APC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_iee_apc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_iee_apc.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.iee.MIMXRT1173" name="iee" brief="IEE Driver" version="2.1.1" full_name="IEE Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_iee.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_iee.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.gpt.MIMXRT1173" name="gpt" brief="GPT Driver" version="2.0.5" full_name="GPT Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_gpt.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_gpt.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexspi.MIMXRT1173" name="flexspi" brief="FLEXSPI Driver" version="2.6.2" full_name="FLEXSPI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexspi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexspi.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexspi_edma.MIMXRT1173" name="flexspi_edma" brief="FLEXSPI Driver" version="2.3.3" full_name="FLEXSPI EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma.MIMXRT1173"/>
          <component_dependency value="platform.drivers.flexspi.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexspi_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexspi_edma.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexram.MIMXRT1173" name="flexram" brief="FLEXRAM Driver" version="2.3.0" full_name="FLEXRAM Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <component_dependency value="driver.soc_flexram_allocate.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexram.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexram.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_uart.MIMXRT1173" name="flexio_uart" brief="FLEXIO UART Driver" version="2.5.0" full_name="FLEXIO UART Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_uart.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_uart.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_uart_edma.MIMXRT1173" name="flexio_uart_edma" brief="FLEXIO UART EDMA Driver" version="2.4.1" full_name="FLEXIO UART EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma.MIMXRT1173"/>
          <component_dependency value="platform.drivers.flexio_uart.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_uart_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_uart_edma.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_spi.MIMXRT1173" name="flexio_spi" brief="FLEXIO SPI Driver" version="2.3.4" full_name="FLEXIO SPI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_spi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_spi.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_spi_edma.MIMXRT1173" name="flexio_spi_edma" brief="FLEXIO SPI EDMA Driver" version="2.3.0" full_name="FLEXIO SPI EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma.MIMXRT1173"/>
          <component_dependency value="platform.drivers.flexio_spi.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_spi_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_spi_edma.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_mculcd.MIMXRT1173" name="flexio_mculcd" brief="FLEXIO MCULCD Driver" version="2.1.0" full_name="FLEXIO MCULCD Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_mculcd.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_mculcd.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_mculcd_edma.MIMXRT1173" name="flexio_mculcd_edma" brief="FLEXIO MCULCD EDMA Driver" version="2.0.5" full_name="FLEXIO MCULCD EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma.MIMXRT1173"/>
          <component_dependency value="platform.drivers.flexio_mculcd.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_mculcd_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_mculcd_edma.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_i2s.MIMXRT1173" name="flexio_i2s" brief="FLEXIO I2S Driver" version="2.2.0" full_name="FLEXIO I2S Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_i2s.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_i2s.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_i2s_edma.MIMXRT1173" name="flexio_i2s_edma" brief="FLEXIO I2S EDMA Driver" version="2.1.8" full_name="FLEXIO I2S EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma.MIMXRT1173"/>
          <component_dependency value="platform.drivers.flexio_i2s.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_i2s_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_i2s_edma.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_i2c_master.MIMXRT1173" name="flexio_i2c_master" brief="FLEXIO I2C Driver" version="2.5.0" full_name="FLEXIO I2C Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_i2c_master.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_i2c_master.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio.MIMXRT1173" name="flexio" brief="FLEXIO Driver" version="2.2.3" full_name="FLEXIO Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_camera.MIMXRT1173" name="flexio_camera" brief="FLEXIO Driver" version="2.1.3" full_name="FLEXIO CAMERA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_camera.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_camera.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_camera_edma.MIMXRT1173" name="flexio_camera_edma" brief="FLEXIO CAMERA EDMA Driver" version="2.1.3" full_name="FLEXIO CAMERA EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma.MIMXRT1173"/>
          <component_dependency value="platform.drivers.flexio_camera.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_camera_edma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_camera_edma.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcan.MIMXRT1173" name="flexcan" brief="FLEXCAN Driver" version="2.13.0" full_name="FLEXCAN Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexcan.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_flexcan.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcan_edma.MIMXRT1173" name="flexcan_edma" brief="FLEXCAN Driver" version="2.11.7" full_name="FLEXCAN EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma.MIMXRT1173"/>
          <component_dependency value="platform.drivers.flexcan.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexcan_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_flexcan_edma.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.ewm.MIMXRT1173" name="ewm" brief="EWM Driver" version="2.0.3" full_name="EWM Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_ewm.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ewm.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.enet.MIMXRT1173" name="enet" brief="ENET Driver" version="2.9.2" full_name="ENET Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_enet.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_enet.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.enet_cmsis.MIMXRT1173" name="enet_cmsis" brief="ENET CMSIS Driver" version="1.0.0" full_name="ENET CMSIS Driver" category="CMSIS Driver/Ethernet" user_visible="true" type="CMSIS_driver" package_base_path="devices/MIMXRT1173/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Driver_Include.Ethernet.MIMXRT1173"/>
          <component_dependency value="CMSIS_Driver_Include.Ethernet_MAC.MIMXRT1173"/>
          <component_dependency value="CMSIS_Driver_Include.Ethernet_PHY.MIMXRT1173"/>
          <component_dependency value="component.eth_phy_common.MIMXRT1173"/>
          <component_dependency value="device.RTE.MIMXRT1173"/>
          <component_dependency value="platform.drivers.enet.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_enet_cmsis.h"/>
        <files mask="fsl_enet_phy_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_enet_cmsis.c"/>
        <files mask="fsl_enet_phy_cmsis.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.enc.MIMXRT1173" name="enc" brief="ENC Driver" version="2.2.1" full_name="ENC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_enc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_enc.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.elcdif.MIMXRT1173" name="elcdif" brief="ELCDIF Driver" version="2.1.0" full_name="ELCDIF Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_elcdif.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_elcdif.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.edma.MIMXRT1173" name="edma" brief="EDMA Driver" version="2.4.4" full_name="EDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <component_dependency value="platform.drivers.dmamux.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_edma.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dmamux.MIMXRT1173" name="dmamux" brief="DMAMUX Driver" version="2.1.0" full_name="DMAMUX Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dmamux.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dmamux.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dcic.MIMXRT1173" name="dcic" brief="DCIC Driver" version="2.0.2" full_name="DCIC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_dcic.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dcic.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dac12.MIMXRT1173" name="dac" brief="DAC12 Driver" version="2.1.1" full_name="DAC12 Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_dac12.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dac12.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.csi.MIMXRT1173" name="csi" brief="CSI Driver" version="2.2.0" full_name="CSI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_csi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_csi.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.caam.MIMXRT1173" name="caam" brief="CAAM Driver" version="2.3.2" full_name="CAAM Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <defines>
        <define name="CRYPTO_USE_DRIVER_CAAM" value=""/>
        <define name="CACHE_MODE_WRITE_THROUGH" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_caam.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_caam.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.asrc.MIMXRT1173" name="asrc" brief="asrc Driver" version="2.1.3" full_name="asrc Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_asrc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_asrc.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.asrc_edma.MIMXRT1173" name="asrc_edma" brief="asrc_edma Driver" version="2.2.0" full_name="asrc_edma Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma.MIMXRT1173"/>
          <component_dependency value="platform.drivers.asrc.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_asrc_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_asrc_edma.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.aoi.MIMXRT1173" name="aoi" brief="AOI Driver" version="2.0.2" full_name="AOI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_aoi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_aoi.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.adc_etc.MIMXRT1173" name="adc_etc" brief="ADC_ETC Driver" version="2.3.0" full_name="ADC_ETC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_adc_etc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adc_etc.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.acmp.MIMXRT1173" name="acmp" brief="ACMP Driver" version="2.3.0" full_name="ACMP Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT1173/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_acmp.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_acmp.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.template.MIMXRT1173" name="Wi-Fi configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="Wi-Fi configuration template" category="Wireless/NXP Wi-Fi" user_visible="false" type="project_template" package_base_path="components/wifi_bt_module/template" project_base_path="wifi/template">
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="component.wifi_bt_module.config.MIMXRT1173"/>
              <component_dependency value="component.wifi_bt_module.tx_pwr_limits.MIMXRT1173"/>
              <component_dependency value="middleware.wifi.wifi_bt_config.template.MIMXRT1173"/>
            </all>
            <component_dependency value="component.wifi_bt_module.tx_pwr_limits.MIMXRT1173"/>
          </any_of>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_template.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.wifi.osa.MIMXRT1173" name="nxp wifi osa" brief="NXP WLAN OSA" version="1.0.0" full_name="NXP WLAN OSA" category="Wireless/NXP Wi-Fi" user_visible="true" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="incl/port/osa" type="c_include">
        <files mask="osa.h"/>
        <files mask="mem_pool.h"/>
        <files mask="mem_pool_config.h"/>
        <files mask="slist.h"/>
        <files mask="stack_simple.h"/>
      </source>
      <source relative_path="port/osa" type="src">
        <files mask="osa.c"/>
        <files mask="mem_pool.c"/>
        <files mask="mem_pool_config.c"/>
        <files mask="slist.c"/>
        <files mask="stack_simple.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_osa.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="incl/port" type="c_include"/>
        <include_path relative_path="incl/port/osa" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="incl/port" type="asm_include"/>
        <include_path relative_path="incl/port/osa" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.common_files.MIMXRT1173" name="nxp_wireless_common_files" brief="NXP WLAN common files" version="1.0.0" full_name="NXP WLAN common files" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.osa.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="incl" type="c_include">
        <files mask="wifi_config_default.h"/>
        <files mask="wifi_cal_data_ext.h"/>
        <files mask="wm_utils.h"/>
        <files mask="wmerrno.h"/>
        <files mask="wmlog.h"/>
        <files mask="wmtypes.h"/>
        <files mask="wifi_cal_data_frdmrw61x_1ant.h"/>
        <files mask="wifi_cal_data_rw61x_1ant.h"/>
        <files mask="wifi_cal_data_rw61x_1ant_diversity.h"/>
        <files mask="wifi_cal_data_rw61x_2ant.h"/>
        <files mask="wifi_cal_data_rw61x_3ant_diversity.h"/>
        <files mask="wifi_cal_data_rw61x_override.h"/>
      </source>
      <source relative_path="incl/wifidriver" type="c_include">
        <files mask="wifi-decl.h"/>
        <files mask="wifi.h"/>
        <files mask="wifi_events.h"/>
      </source>
      <source relative_path="wifidriver/incl" type="c_include">
        <files mask="mlan_decl.h"/>
        <files mask="mlan_ioctl.h"/>
        <files mask="type_decls.h"/>
      </source>
      <source relative_path="wifi_bt_firmware" type="c_include">
        <files mask="wlan_bt_fw.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_common_files.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="incl/port/osa" type="c_include"/>
        <include_path relative_path="incl/wifidriver" type="c_include"/>
        <include_path relative_path="wifi_bt_firmware" type="c_include"/>
        <include_path relative_path="wifidriver" type="c_include"/>
        <include_path relative_path="wifidriver/incl" type="c_include"/>
        <include_path relative_path="incl" type="asm_include"/>
        <include_path relative_path="incl/port/osa" type="asm_include"/>
        <include_path relative_path="incl/wifidriver" type="asm_include"/>
        <include_path relative_path="wifi_bt_firmware" type="asm_include"/>
        <include_path relative_path="wifidriver" type="asm_include"/>
        <include_path relative_path="wifidriver/incl" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.fwdnld.MIMXRT1173" name="nxp_wireless_fwdnld" brief="NXP WLAN f/w dnld driver" version="1.0.0" full_name="NXP WLAN f/w dnld driver" category="Wireless/NXP Wi-Fi" user_visible="true" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.common_files.MIMXRT1173"/>
          <component_dependency value="middleware.wifi.fwdnld_intf_abs.MIMXRT1173"/>
          <component_dependency value="middleware.wifi.mlan_sdio.MIMXRT1173"/>
          <component_dependency value="middleware.wifi.template.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="incl" type="c_include">
        <files mask="WIFI_IW416_BOARD_AW_AM457_CAL_DATA_EXT.h"/>
      </source>
      <source relative_path="wifidriver/incl" type="c_include">
        <files mask="mlan_main_defs.h"/>
      </source>
      <source relative_path="wifi_bt_firmware/8801" type="asm_include">
        <files mask="sd8801_wlan.bin.inc"/>
      </source>
      <source relative_path="wifi_bt_firmware/8801" type="c_include">
        <files mask="sd8801_wlan.h"/>
      </source>
      <source relative_path="wifi_bt_firmware/8801" type="src">
        <files mask="8801_cpu1.c"/>
      </source>
      <source relative_path="wifi_bt_firmware/IW416" type="asm_include">
        <files mask="sduartIW416_wlan_bt.bin.inc"/>
        <files mask="sdIW416_wlan.bin.inc"/>
        <files mask="uartIW416_bt.bin.inc"/>
      </source>
      <source relative_path="wifi_bt_firmware/IW416" type="c_include">
        <files mask="sduartIW416_wlan_bt.h"/>
        <files mask="sdIW416_wlan.h"/>
        <files mask="uartIW416_bt.h"/>
      </source>
      <source relative_path="wifi_bt_firmware/IW416" type="src">
        <files mask="IW416_cpu12.c"/>
        <files mask="IW416_cpu1.c"/>
        <files mask="IW416_cpu2.c"/>
      </source>
      <source relative_path="wifi_bt_firmware/8987" type="asm_include">
        <files mask="sduart8987_wlan_bt.bin.inc"/>
        <files mask="sd8987_wlan.bin.inc"/>
        <files mask="uart8987_bt.bin.inc"/>
      </source>
      <source relative_path="wifi_bt_firmware/8987" type="c_include">
        <files mask="sduart8987_wlan_bt.h"/>
        <files mask="sd8987_wlan.h"/>
        <files mask="uart8987_bt.h"/>
      </source>
      <source relative_path="wifi_bt_firmware/8987" type="src">
        <files mask="8987_cpu12.c"/>
        <files mask="8987_cpu1.c"/>
        <files mask="8987_cpu2.c"/>
      </source>
      <source relative_path="wifi_bt_firmware/nw61x" type="asm_include">
        <files mask="sduart_nw61x.bin.se.inc"/>
        <files mask="sd_nw61x.bin.se.inc"/>
        <files mask="uart_nw61x.bin.se.inc"/>
      </source>
      <source relative_path="wifi_bt_firmware/nw61x" type="c_include">
        <files mask="sduart_nw61x_se.h"/>
        <files mask="sd_nw61x_se.h"/>
        <files mask="uart_nw61x_se.h"/>
      </source>
      <source relative_path="wifi_bt_firmware/nw61x" type="src">
        <files mask="nw61x_cpu12_se.c"/>
        <files mask="nw61x_cpu1_se.c"/>
        <files mask="nw61x_cpu2_se.c"/>
      </source>
      <source relative_path="wifi_bt_firmware/iw610" type="asm_include">
        <files mask="sduart_iw610.bin.se.inc"/>
        <files mask="sd_iw610.bin.se.inc"/>
        <files mask="uart_iw610_bt.bin.se.inc"/>
      </source>
      <source relative_path="wifi_bt_firmware/iw610" type="c_include">
        <files mask="sduart_iw610_se.h"/>
        <files mask="sd_iw610_se.h"/>
        <files mask="uart_iw610_se.h"/>
      </source>
      <source relative_path="wifi_bt_firmware/iw610" type="src">
        <files mask="iw610_cpu12_se.c"/>
        <files mask="iw610_cpu2_se.c"/>
        <files mask="iw610_cpu1_se.c"/>
      </source>
      <source relative_path="wifidriver" type="src">
        <files mask="sdio.c"/>
      </source>
      <source relative_path="wifidriver" type="c_include">
        <files mask="sdio.h"/>
      </source>
      <source relative_path="firmware_dnld" type="src">
        <files mask="firmware_dnld.c"/>
      </source>
      <source relative_path="firmware_dnld" type="c_include">
        <files mask="firmware_dnld.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_fwdnld.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="wifi_bt_firmware" type="c_include"/>
        <include_path relative_path="wifi_bt_firmware/8801" type="c_include"/>
        <include_path relative_path="wifi_bt_firmware/IW416" type="c_include"/>
        <include_path relative_path="wifi_bt_firmware/8987" type="c_include"/>
        <include_path relative_path="wifi_bt_firmware/nw61x" type="c_include"/>
        <include_path relative_path="wifi_bt_firmware/iw610" type="c_include"/>
        <include_path relative_path="wifidriver" type="c_include"/>
        <include_path relative_path="wifidriver/incl" type="c_include"/>
        <include_path relative_path="firmware_dnld" type="c_include"/>
        <include_path relative_path="sdio_nxp_abs" type="c_include"/>
        <include_path relative_path="sdio_nxp_abs/incl" type="c_include"/>
        <include_path relative_path="fwdnld_intf_abs" type="c_include"/>
        <include_path relative_path="incl" type="asm_include"/>
        <include_path relative_path="wifi_bt_firmware" type="asm_include"/>
        <include_path relative_path="wifi_bt_firmware/8801" type="asm_include"/>
        <include_path relative_path="wifi_bt_firmware/IW416" type="asm_include"/>
        <include_path relative_path="wifi_bt_firmware/8987" type="asm_include"/>
        <include_path relative_path="wifi_bt_firmware/nw61x" type="asm_include"/>
        <include_path relative_path="wifi_bt_firmware/iw610" type="asm_include"/>
        <include_path relative_path="wifidriver" type="asm_include"/>
        <include_path relative_path="wifidriver/incl" type="asm_include"/>
        <include_path relative_path="firmware_dnld" type="asm_include"/>
        <include_path relative_path="sdio_nxp_abs" type="asm_include"/>
        <include_path relative_path="sdio_nxp_abs/incl" type="asm_include"/>
        <include_path relative_path="fwdnld_intf_abs" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.net_free_rtos.MIMXRT1173" name="nxp wifi osa free_rtos" brief="NXP WLAN OSA" version="1.0.0" full_name="NXP WLAN OSA" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1173"/>
          <component_dependency value="middleware.lwip.MIMXRT1173"/>
          <component_dependency value="middleware.lwip.apps.lwiperf.MIMXRT1173"/>
          <component_dependency value="middleware.wifi.net.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="incl/port/net" type="c_include">
        <files mask="wm_net.h"/>
      </source>
      <source relative_path="port/net" type="src">
        <files mask="net.c"/>
        <files mask="wifi_netif.c"/>
      </source>
      <source relative_path="port/net" type="c_include">
        <files mask="netif_decl.h"/>
      </source>
      <source relative_path="incl/port/net/hooks" type="c_include">
        <files mask="lwip_default_hooks.h"/>
      </source>
      <source relative_path="port/net/hooks" type="src">
        <files mask="lwip_default_hooks.c"/>
      </source>
      <source relative_path="dhcpd" type="c_include">
        <files mask="dhcp-bootp.h"/>
        <files mask="dhcp-priv.h"/>
        <files mask="dns.h"/>
      </source>
      <source relative_path="dhcpd" type="src">
        <files mask="dhcp-server-main.c"/>
        <files mask="dhcp-server.c"/>
        <files mask="dns-server.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_net_free_rtos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="incl/port/osa" type="c_include"/>
        <include_path relative_path="port/osa" type="c_include"/>
        <include_path relative_path="incl/port/net" type="c_include"/>
        <include_path relative_path="incl/port/net/hooks" type="c_include"/>
        <include_path relative_path="dhcpd" type="c_include"/>
        <include_path relative_path="incl/wlcmgr" type="c_include"/>
        <include_path relative_path="incl/wifidriver" type="c_include"/>
        <include_path relative_path="wifidriver/incl" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="incl" type="asm_include"/>
        <include_path relative_path="incl/port/osa" type="asm_include"/>
        <include_path relative_path="port/osa" type="asm_include"/>
        <include_path relative_path="incl/port/net" type="asm_include"/>
        <include_path relative_path="incl/port/net/hooks" type="asm_include"/>
        <include_path relative_path="dhcpd" type="asm_include"/>
        <include_path relative_path="incl/wlcmgr" type="asm_include"/>
        <include_path relative_path="incl/wifidriver" type="asm_include"/>
        <include_path relative_path="wifidriver/incl" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.net.MIMXRT1173" name="nxp wifi osa" brief="NXP WLAN OSA" version="1.0.0" full_name="NXP WLAN OSA" category="Wireless/NXP Wi-Fi" user_visible="true" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="incl/port/net" type="c_include">
        <files mask="wm_net.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_net.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="incl/port/osa" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="incl/port/osa" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.wifidriver.MIMXRT1173" name="nxp_wifi_driver" brief="NXP Wi-Fi driver" version="1.3.46" full_name="NXP Wi-Fi driver" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="utility.debug_console.MIMXRT1173"/>
            <component_dependency value="utility.debug_console_lite.MIMXRT1173"/>
          </any_of>
          <component_dependency value="middleware.wifi.fwdnld.MIMXRT1173"/>
          <component_dependency value="middleware.wifi.fwdnld_intf_abs.MIMXRT1173"/>
          <component_dependency value="middleware.wifi.sdio.MIMXRT1173"/>
          <component_dependency value="middleware.wifi.net.MIMXRT1173"/>
          <component_dependency value="middleware.wifi.osa.MIMXRT1173"/>
          <component_dependency value="middleware.wifi.template.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="incl" type="c_include">
        <files mask="dhcp-server.h"/>
        <files mask="nxp_wifi.h"/>
      </source>
      <source relative_path="incl/wlcmgr" type="c_include">
        <files mask="wlan.h"/>
        <files mask="wlan_11d.h"/>
      </source>
      <source relative_path="incl/wifidriver" type="c_include">
        <files mask="wifi_nxp.h"/>
      </source>
      <source relative_path="wifidriver/incl" type="c_include">
        <files mask="mlan.h"/>
        <files mask="mlan_11ac.h"/>
        <files mask="mlan_11ax.h"/>
        <files mask="mlan_11h.h"/>
        <files mask="mlan_11n.h"/>
        <files mask="mlan_11n_aggr.h"/>
        <files mask="mlan_11n_rxreorder.h"/>
        <files mask="mlan_11v.h"/>
        <files mask="mlan_action.h"/>
        <files mask="mlan_11k.h"/>
        <files mask="mlan_mbo.h"/>
        <files mask="mlan_api.h"/>
        <files mask="mlan_fw.h"/>
        <files mask="mlan_ieee.h"/>
        <files mask="mlan_init.h"/>
        <files mask="mlan_join.h"/>
        <files mask="mlan_main.h"/>
        <files mask="mlan_meas.h"/>
        <files mask="mlan_remap_mem_operations.h"/>
        <files mask="mlan_uap.h"/>
        <files mask="mlan_util.h"/>
        <files mask="mlan_wmm.h"/>
      </source>
      <source relative_path="wifidriver" type="src">
        <files mask="mlan_11ac.c"/>
        <files mask="mlan_11ax.c"/>
        <files mask="mlan_11d.c"/>
        <files mask="mlan_11h.c"/>
        <files mask="mlan_11n.c"/>
        <files mask="mlan_11n_aggr.c"/>
        <files mask="mlan_11n_rxreorder.c"/>
        <files mask="mlan_11v.c"/>
        <files mask="mlan_action.c"/>
        <files mask="mlan_11k.c"/>
        <files mask="mlan_mbo.c"/>
        <files mask="mlan_api.c"/>
        <files mask="mlan_cfp.c"/>
        <files mask="mlan_cmdevt.c"/>
        <files mask="mlan_glue.c"/>
        <files mask="mlan_init.c"/>
        <files mask="mlan_join.c"/>
        <files mask="mlan_misc.c"/>
        <files mask="mlan_scan.c"/>
        <files mask="mlan_shim.c"/>
        <files mask="mlan_sta_cmd.c"/>
        <files mask="mlan_sta_cmdresp.c"/>
        <files mask="mlan_sta_event.c"/>
        <files mask="mlan_sta_ioctl.c"/>
        <files mask="mlan_sta_rx.c"/>
        <files mask="mlan_txrx.c"/>
        <files mask="mlan_wmm.c"/>
        <files mask="wifi-debug.c"/>
        <files mask="wifi-mem.c"/>
        <files mask="wifi.c"/>
        <files mask="wifi_pwrmgr.c"/>
        <files mask="wifi-wps.c"/>
      </source>
      <source relative_path="wifidriver" type="c_include">
        <files mask="wifi-debug.h"/>
        <files mask="wifi-internal.h"/>
        <files mask="wifi_common.h"/>
      </source>
      <source relative_path="wifidriver/wpa_supp_if/incl" type="c_include">
        <files mask="rtos_wpa_supp_if.h"/>
        <files mask="wifi_nxp_internal.h"/>
      </source>
      <source relative_path="wifidriver/wpa_supp_if" type="src">
        <files mask="wifi_nxp.c"/>
        <files mask="rtos_wpa_supp_if.c"/>
        <files mask="wifi_nxp_internal.c"/>
      </source>
      <source relative_path="certs" type="c_include">
        <files mask="ca-cert.h"/>
        <files mask="client-cert.h"/>
        <files mask="client-key.h"/>
        <files mask="server-cert.h"/>
        <files mask="server-key.h"/>
        <files mask="dh-param.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_wifidriver.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="incl/wlcmgr" type="c_include"/>
        <include_path relative_path="wifidriver" type="c_include"/>
        <include_path relative_path="wifidriver/incl" type="c_include"/>
        <include_path relative_path="wifidriver/wpa_supp_if" type="c_include"/>
        <include_path relative_path="wifidriver/wpa_supp_if/incl" type="c_include"/>
        <include_path relative_path="certs" type="c_include"/>
        <include_path relative_path="firmware_dnld" type="c_include"/>
        <include_path relative_path="sdio_nxp_abs" type="c_include"/>
        <include_path relative_path="sdio_nxp_abs/incl" type="c_include"/>
        <include_path relative_path="incl" type="asm_include"/>
        <include_path relative_path="incl/wlcmgr" type="asm_include"/>
        <include_path relative_path="wifidriver" type="asm_include"/>
        <include_path relative_path="wifidriver/incl" type="asm_include"/>
        <include_path relative_path="wifidriver/wpa_supp_if" type="asm_include"/>
        <include_path relative_path="wifidriver/wpa_supp_if/incl" type="asm_include"/>
        <include_path relative_path="certs" type="asm_include"/>
        <include_path relative_path="firmware_dnld" type="asm_include"/>
        <include_path relative_path="sdio_nxp_abs" type="asm_include"/>
        <include_path relative_path="sdio_nxp_abs/incl" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.wifidriver.softap.MIMXRT1173" name="nxp_wifi_driver_softap" brief="NXP Wi-Fi driver Soft AP" version="1.3.46" full_name="NXP Wi-Fi driver Soft AP" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <defines>
        <define name="CONFIG_NXP_WIFI_SOFTAP_SUPPORT" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.wifidriver.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="wifidriver" type="src">
        <files mask="wifi-uap.c"/>
        <files mask="mlan_uap_ioctl.c"/>
        <files mask="mlan_uap_cmdevent.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_wifidriver_softap.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="wifidriver" type="c_include"/>
        <include_path relative_path="wifidriver" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.MIMXRT1173" name="wifi_nxp" brief="NXP Wi-Fi functionality enables customers to quickly develop applications of interest to add connectivity to different sensors and appliances" version="1.3.46" full_name="NXP Wi-Fi" category="Wireless/NXP Wi-Fi" user_visible="true" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="utility.debug_console.MIMXRT1173"/>
            <component_dependency value="utility.debug_console_lite.MIMXRT1173"/>
          </any_of>
          <component_dependency value="middleware.wifi.template.MIMXRT1173"/>
          <component_dependency value="middleware.wifi.wifidriver.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="dhcpd" type="c_include">
        <files mask="dhcp-bootp.h"/>
        <files mask="dhcp-priv.h"/>
        <files mask="dns.h"/>
      </source>
      <source relative_path="dhcpd" type="src">
        <files mask="dhcp-server-main.c"/>
        <files mask="dhcp-server.c"/>
        <files mask="dns-server.c"/>
      </source>
      <source relative_path="incl/port/net" type="c_include">
        <files mask="wm_net.h"/>
      </source>
      <source relative_path="incl" type="c_include">
        <files mask="wmstats.h"/>
      </source>
      <source relative_path="port/net" type="src">
        <files mask="net.c"/>
        <files mask="wifi_netif.c"/>
      </source>
      <source relative_path="port/net" type="c_include">
        <files mask="netif_decl.h"/>
      </source>
      <source relative_path="wlcmgr" type="src">
        <files mask="wlan.c"/>
        <files mask="wlan_txpwrlimit_cfg.c"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
        <files mask="CMakeLists.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="incl/wifidriver" type="c_include"/>
        <include_path relative_path="incl/port/net" type="c_include"/>
        <include_path relative_path="port/net" type="c_include"/>
        <include_path relative_path="incl/port/net/hooks" type="c_include"/>
        <include_path relative_path="incl" type="asm_include"/>
        <include_path relative_path="incl/wifidriver" type="asm_include"/>
        <include_path relative_path="incl/port/net" type="asm_include"/>
        <include_path relative_path="port/net" type="asm_include"/>
        <include_path relative_path="incl/port/net/hooks" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.sdio.MIMXRT1173" name="wifi_nxp_sdio" brief="NXP Wi-Fi SDIO driver" version="1.3.46" full_name="NXP Wi-Fi SDIO" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.mlan_sdio.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="wifidriver" type="src">
        <files mask="wifi-sdio.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_sdio.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.wifi.mlan_sdio.MIMXRT1173" name="wifi_nxp_mlan_sdio" brief="NXP Wi-Fi SDIO driver" version="1.3.46" full_name="NXP Wi-Fi SDIO" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.host.usdhc.MIMXRT1173"/>
          <component_dependency value="middleware.sdmmc.sdio.MIMXRT1173"/>
          <component_dependency value="middleware.wifi.common_files.MIMXRT1173"/>
          <component_dependency value="middleware.wifi.template.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="sdio_nxp_abs" type="src">
        <files mask="mlan_sdio.c"/>
        <files mask="fwdnld_sdio.c"/>
      </source>
      <source relative_path="sdio_nxp_abs/incl" type="c_include">
        <files mask="fwdnld_sdio.h"/>
        <files mask="mlan_sdio_defs.h"/>
        <files mask="mlan_sdio.h"/>
        <files mask="mlan_sdio_api.h"/>
      </source>
      <source relative_path="wifidriver" type="c_include">
        <files mask="wifi-sdio.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_mlan_sdio.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="wifidriver" type="c_include"/>
        <include_path relative_path="sdio_nxp_abs/incl" type="c_include"/>
        <include_path relative_path="wifidriver" type="asm_include"/>
        <include_path relative_path="sdio_nxp_abs/incl" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.cli.MIMXRT1173" name="wifi_nxp_cli" brief="Middlware Wi-Fi CLI" version="1.3.46" full_name="NXP Wi-Fi CLI" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="utility.debug_console.MIMXRT1173"/>
            <component_dependency value="utility.debug_console_lite.MIMXRT1173"/>
          </any_of>
          <component_dependency value="middleware.wifi.MIMXRT1173"/>
          <component_dependency value="middleware.wifi.wifidriver.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="cli" type="c_include">
        <files mask="cli_mem.h"/>
        <files mask="wifi_shell.h"/>
      </source>
      <source relative_path="cli" type="src">
        <files mask="cli.c"/>
        <files mask="cli_mem_simple.c"/>
        <files mask="cli_utils.c"/>
        <files mask="wifi_shell.c"/>
      </source>
      <source relative_path="incl" type="c_include">
        <files mask="cli.h"/>
        <files mask="cli_utils.h"/>
        <files mask="iperf.h"/>
        <files mask="wifi_ping.h"/>
      </source>
      <source relative_path="port/osa" type="src">
        <files mask="osa_cli.c"/>
      </source>
      <source relative_path="dhcpd" type="src">
        <files mask="dhcp-server-cli.c"/>
      </source>
      <source relative_path="nw_utils" type="src">
        <files mask="wifi_ping.c"/>
        <files mask="iperf.c"/>
        <files mask="init_enet.c"/>
      </source>
      <source relative_path="nw_utils" type="c_include">
        <files mask="network_cfg.h"/>
      </source>
      <source relative_path="nw_utils/telnet" type="c_include">
        <files mask="telnet_server.h"/>
      </source>
      <source relative_path="nw_utils/telnet" type="src">
        <files mask="telnet_server.c"/>
      </source>
      <source relative_path="wlcmgr" type="src">
        <files mask="wlan_basic_cli.c"/>
        <files mask="wlan_enhanced_tests.c"/>
        <files mask="wlan_tests.c"/>
        <files mask="wlan_test_mode_tests.c"/>
      </source>
      <source relative_path="incl/wlcmgr" type="c_include">
        <files mask="wlan_tests.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_cli.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="cli" type="c_include"/>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="incl/wlcmgr" type="c_include"/>
        <include_path relative_path="nw_utils" type="c_include"/>
        <include_path relative_path="nw_utils/telnet" type="c_include"/>
        <include_path relative_path="cli" type="asm_include"/>
        <include_path relative_path="incl" type="asm_include"/>
        <include_path relative_path="incl/wlcmgr" type="asm_include"/>
        <include_path relative_path="nw_utils" type="asm_include"/>
        <include_path relative_path="nw_utils/telnet" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.wmcrypto.MIMXRT1173" name="wifi_nxp_wmcrypto" brief="Middlware Wi-Fi WMCRYPTO" version="1.0.0" full_name="NXP Wi-Fi WMCRYPTO" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.MIMXRT1173"/>
          <component_dependency value="middleware.wifi.wifidriver.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="wmcrypto" type="src">
        <files mask="wmcrypto.c"/>
        <files mask="wmcrypto_mem.c"/>
        <files mask="wm_mbedtls_entropy.c"/>
        <files mask="wm_mbedtls_mem.c"/>
        <files mask="wm_mbedtls_net.c"/>
        <files mask="wm_mbedtls_helper_api.c"/>
        <files mask="wm_utils.c"/>
      </source>
      <source relative_path="incl/wmcrypto" type="c_include">
        <files mask="wmcrypto.h"/>
      </source>
      <source relative_path="wmcrypto" type="c_include">
        <files mask="wmcrypto_mem.h"/>
        <files mask="wm_mbedtls_debug.h"/>
        <files mask="wm_mbedtls_entropy.h"/>
        <files mask="wm_mbedtls_mem.h"/>
        <files mask="wm_mbedtls_net.h"/>
        <files mask="wm_mbedtls_helper_api.h"/>
      </source>
      <source relative_path="wmcrypto/aescrypto" type="c_include">
        <files mask="aes.h"/>
        <files mask="aes_siv.h"/>
        <files mask="aes_wrap.h"/>
        <files mask="common.h"/>
        <files mask="crypto.h"/>
        <files mask="includes.h"/>
        <files mask="type_def.h"/>
      </source>
      <source relative_path="wmcrypto/aescrypto" type="src">
        <files mask="aes-siv.c"/>
        <files mask="aes-ctr.c"/>
        <files mask="aes-omac1.c"/>
        <files mask="aes-wrap.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_wmcrypto.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="wmcrypto" type="c_include"/>
        <include_path relative_path="incl/wmcrypto" type="c_include"/>
        <include_path relative_path="wmcrypto/aescrypto" type="c_include"/>
        <include_path relative_path="wmcrypto" type="asm_include"/>
        <include_path relative_path="incl/wmcrypto" type="asm_include"/>
        <include_path relative_path="wmcrypto/aescrypto" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.wmtime.MIMXRT1173" name="wifi_nxp_wmtime" brief="Middlware Wi-Fi WMTIME" version="1.0.0" full_name="NXP Wi-Fi WMTIME" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.MIMXRT1173"/>
          <component_dependency value="middleware.wifi.wifidriver.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="wmtime" type="src">
        <files mask="wmtime.c"/>
      </source>
      <source relative_path="incl" type="c_include">
        <files mask="wmtime.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_wmtime.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="wmtime" type="c_include"/>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="wmtime" type="asm_include"/>
        <include_path relative_path="incl" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.ncp_supp_wmcrypto.MIMXRT1173" name="ncp_supp_wmcrypto" brief="Middlware Wi-Fi NCP_SUPP_WMCRYPTO" version="1.0.0" full_name="NXP Wi-Fi NCP_SUPP_WMCRYPTO" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.MIMXRT1173"/>
          <component_dependency value="middleware.wifi.wifidriver.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="incl/wmcrypto" type="c_include">
        <files mask="wmcrypto.h"/>
      </source>
      <source relative_path="wmcrypto" type="src">
        <files mask="wmcrypto_mem.c"/>
        <files mask="wm_mbedtls_entropy.c"/>
        <files mask="wm_mbedtls_mem.c"/>
        <files mask="wm_mbedtls_net.c"/>
        <files mask="wm_mbedtls_helper_api.c"/>
        <files mask="wm_utils.c"/>
      </source>
      <source relative_path="wmcrypto" type="c_include">
        <files mask="wmcrypto_mem.h"/>
        <files mask="wm_mbedtls_debug.h"/>
        <files mask="wm_mbedtls_entropy.h"/>
        <files mask="wm_mbedtls_mem.h"/>
        <files mask="wm_mbedtls_net.h"/>
        <files mask="wm_mbedtls_helper_api.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_ncp_supp_wmcrypto.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="wmcrypto" type="c_include"/>
        <include_path relative_path="incl/wmcrypto" type="c_include"/>
        <include_path relative_path="wmcrypto" type="asm_include"/>
        <include_path relative_path="incl/wmcrypto" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.wls.MIMXRT1173" name="wifi_nxp_wls" brief="Middlware Wi-Fi Location Service" version="1.3.46" full_name="NXP Wi-Fi WLS" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.MIMXRT1173"/>
          <component_dependency value="middleware.wifi.wifidriver.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="wls" type="c_include">
        <files mask="range_kalman.h"/>
        <files mask="wls_api.h"/>
        <files mask="wls_param_defines.h"/>
        <files mask="wls_processing.h"/>
        <files mask="wls_QR_algorithm.h"/>
        <files mask="wls_radix4Fft.h"/>
        <files mask="wls_structure_defs.h"/>
        <files mask="wls_subspace_processing.h"/>
      </source>
      <source relative_path="wls" type="src">
        <files mask="range_kalman.c"/>
        <files mask="wls_api.c"/>
        <files mask="wls_processing.c"/>
        <files mask="wls_QR_algorithm.c"/>
        <files mask="wls_radix4Fft.c"/>
        <files mask="wls_subspace_processing.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_wls.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="wls" type="c_include"/>
        <include_path relative_path="wls" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.pd.MIMXRT1173" name="PD Stack" brief="Middleware usb_pd" version="2.11.0" full_name="USB Type-C PD Stack" category="USB/USB Type-C PD Stack" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.pd.phy.ptn5110.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="pd" type="c_include">
        <files mask="usb_pd.h"/>
        <files mask="usb_pd_interface.h"/>
        <files mask="usb_pd_phy.h"/>
        <files mask="usb_pd_spec.h"/>
        <files mask="usb_pd_timer.h"/>
        <files mask="usb_pd_auto_policy.h"/>
      </source>
      <source relative_path="pd" type="src">
        <files mask="usb_pd_connect.c"/>
        <files mask="usb_pd_interface.c"/>
        <files mask="usb_pd_msg.c"/>
        <files mask="usb_pd_policy.c"/>
        <files mask="usb_pd_timer.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_pd.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="pd" type="c_include"/>
        <include_path relative_path="pd" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.pd.altmode.MIMXRT1173" name="PD Alternate Mode" brief="Middleware usb_pd altmode" version="2.11.0" full_name="USB Type-C PD Alternate Mode" category="USB/USB Type-C PD Stack" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.pd.MIMXRT1173"/>
          <component_dependency value="middleware.usb.pd.phy.ptn5110.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="pd/alt_mode" type="src">
        <files mask="usb_pd_alt_mode.c"/>
        <files mask="usb_pd_alt_mode_dp.c"/>
      </source>
      <source relative_path="pd/alt_mode" type="c_include">
        <files mask="usb_pd_alt_mode.h"/>
        <files mask="usb_pd_alt_mode_dp.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_pd_altmode.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="pd/alt_mode" type="c_include"/>
        <include_path relative_path="pd/alt_mode" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.pd.phy.ptn5110.MIMXRT1173" name="PD PTN5110 Driver" brief="Middleware usb_pd phy ptn5110" version="2.11.0" full_name="USB Type-C PD Stack" category="USB/USB PD PHY" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.igpio.MIMXRT1173"/>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1173"/>
          <component_dependency value="component.i2c_adapter_interface.MIMXRT1173"/>
          <component_dependency value="middleware.usb.common_header.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="pd/ptn5110" type="c_include">
        <files mask="usb_pd_ptn5110.h"/>
        <files mask="usb_pd_ptn5110_register.h"/>
      </source>
      <source relative_path="pd/ptn5110" type="src">
        <files mask="usb_pd_ptn5110_connect.c"/>
        <files mask="usb_pd_ptn5110_hal.c"/>
        <files mask="usb_pd_ptn5110_interface.c"/>
        <files mask="usb_pd_ptn5110_msg.c"/>
      </source>
      <source relative_path="pd" type="src">
        <files mask="usb_pd_timer.c"/>
      </source>
      <source relative_path="pd/phy_interface" type="c_include">
        <files mask="usb_pd_i2c.h"/>
      </source>
      <source relative_path="pd/phy_interface" type="src">
        <files mask="usb_pd_i2c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_pd_phy_ptn5110.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="pd" type="c_include"/>
        <include_path relative_path="pd/ptn5110" type="c_include"/>
        <include_path relative_path="pd/phy_interface" type="c_include"/>
        <include_path relative_path="pd" type="asm_include"/>
        <include_path relative_path="pd/ptn5110" type="asm_include"/>
        <include_path relative_path="pd/phy_interface" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.pd.compliance_test_report.MIMXRT1173" name="PD Compliance Test Report" brief="Middleware usb_pd compliance_test_report" version="2.11.0" full_name="USB Type-C PD Stack" category="USB/USB Type-C PD Stack" user_visible="false" type="middleware" package_base_path="middleware/usb" project_base_path="./">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.pd.phy.ptn5110.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="pd/compliance_test_report/ellisys/consumer_provider" type="doc">
        <files mask="USB Compliance Report.html"/>
      </source>
      <source relative_path="pd/compliance_test_report/ellisys/drp" type="doc">
        <files mask="USB Compliance Report.html"/>
      </source>
      <source relative_path="pd/compliance_test_report/ellisys/drp_try_snk" type="doc">
        <files mask="USB Compliance Report.html"/>
      </source>
      <source relative_path="pd/compliance_test_report/ellisys/drp_try_src" type="doc">
        <files mask="USB Compliance Report.html"/>
      </source>
      <source relative_path="pd/compliance_test_report/ellisys/provider_consumer" type="doc">
        <files mask="USB Compliance Report.html"/>
      </source>
      <source relative_path="pd/compliance_test_report/ellisys/displayport_dock" type="doc">
        <files mask="USB Compliance Report.html"/>
      </source>
      <source relative_path="pd/compliance_test_report/ellisys/displayport_host" type="doc">
        <files mask="USB Compliance Report.html"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_pd_compliance_test_report.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.usb.common_header.MIMXRT1173" name="USB Common Header" brief="Middleware usb common_header" version="2.11.0" full_name="USB Common Header" category="USB/USB Common Header" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="platform.drivers.memory.MIMXRT1173"/>
              <device_dependency value="MIMXRT1173xxxxx"/>
            </all>
            <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          </any_of>
          <component_dependency value="component.osa.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="include" type="c_include">
        <files mask="usb.h"/>
        <files mask="usb_misc.h"/>
        <files mask="usb_spec.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_common_header.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.common_header.MIMXRT1173" name="USB Device Common Header" brief="Middleware usb device common_header" version="2.11.0" full_name="USB Device Common Header" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="device" type="c_include">
        <files mask="usb_device.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_common_header.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device" type="c_include"/>
        <include_path relative_path="device" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device_controller_ehci.MIMXRT1173" name="USB Device EHCI Controller Driver(HS)" brief="Middleware usb device ehci" version="2.11.0" full_name="USB Device EHCI Controller Driver(HS)" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.device.controller.driver.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="device" type="src">
        <files mask="usb_device_ehci.c"/>
      </source>
      <source relative_path="device" type="c_include">
        <files mask="usb_device_ehci.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_ehci.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device" type="c_include"/>
        <include_path relative_path="device" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.controller.driver.MIMXRT1173" name="USB Device Common Controller" brief="Middleware usb device controller driver" version="2.11.0" full_name="USB Device Common Controller" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.device.stack.MIMXRT1173"/>
          <component_dependency value="middleware.usb.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="device" type="src">
        <files mask="usb_device_dci.c"/>
      </source>
      <source relative_path="device" type="c_include">
        <files mask="usb_device_dci.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_controller_driver.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device" type="c_include"/>
        <include_path relative_path="device" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.stack.MIMXRT1173" name="USB Device Stack" brief="Middleware usb device stack" version="2.11.0" full_name="USB Device Stack" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.device.controller.driver.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="device" type="src">
        <files mask="usb_device_ch9.c"/>
      </source>
      <source relative_path="device" type="c_include">
        <files mask="usb_device_ch9.h"/>
      </source>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_class.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_class.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_stack.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device" type="c_include"/>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device" type="asm_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.audio.MIMXRT1173" name="USB Device Audio" brief="Middleware usb device audio" version="2.11.0" full_name="USB Device Audio" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_audio.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_audio.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_audio.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.cdc.MIMXRT1173" name="USB Device CDC" brief="Middleware usb device cdc" version="2.11.0" full_name="USB Device CDC" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_cdc_acm.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_cdc_acm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_cdc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.cdc.ecm.MIMXRT1173" name="USB Device CDC ECM" brief="Middleware usb device cdc ecm" version="2.11.0" full_name="USB Device CDC ECM" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_cdc_ecm.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_cdc_ecm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_cdc_ecm.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.cdc.rndis.MIMXRT1173" name="USB Device CDC RNDIS" brief="Middleware usb device cdc rndis" version="2.11.0" full_name="USB Device CDC RNDIS" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.device.cdc.MIMXRT1173"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_cdc_rndis.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_cdc_rndis.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_cdc_rndis.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.hid.MIMXRT1173" name="USB Device HID" brief="Middleware usb device hid" version="2.11.0" full_name="USB Device HID" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_hid.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_hid.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_hid.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.dfu.MIMXRT1173" name="USB Device DFU" brief="Middleware usb device dfu" version="2.11.0" full_name="USB Device DFU" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_dfu.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_dfu.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_dfu.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.msd.MIMXRT1173" name="USB Device MSD" brief="Middleware usb device msd" version="2.11.0" full_name="USB Device MSD" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_msc.c"/>
        <files mask="usb_device_msc_ufi.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_msc.h"/>
        <files mask="usb_device_msc_ufi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_msd.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.mtp.MIMXRT1173" name="USB Device MTP" brief="Middleware usb device mtp" version="2.11.0" full_name="USB Device MTP" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_mtp.c"/>
        <files mask="usb_device_mtp_operation.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_mtp.h"/>
        <files mask="usb_device_mtp_operation.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_mtp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.phdc.MIMXRT1173" name="USB Device PHDC" brief="Middleware usb device phdc" version="2.11.0" full_name="USB Device PHDC" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_phdc.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_phdc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_phdc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.video.MIMXRT1173" name="USB Device Video" brief="Middleware usb device video" version="2.11.0" full_name="USB Device Video" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_video.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_video.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_video.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.ccid.MIMXRT1173" name="USB Device CCID" brief="Middleware usb device ccid" version="2.11.0" full_name="USB Device CCID" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_ccid.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_ccid.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_ccid.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.printer.MIMXRT1173" name="USB Device Printer" brief="Middleware usb device printer" version="2.11.0" full_name="USB Device Printer" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_printer.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_printer.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_printer.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.phy.MIMXRT1173" name="USB PHY" brief="Middleware usb phy" version="2.11.0" full_name="USB PHY" category="USB/USB PHY" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="phy" type="src">
        <files mask="usb_phy.c"/>
      </source>
      <source relative_path="phy" type="c_include">
        <files mask="usb_phy.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_phy.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="phy" type="c_include"/>
        <include_path relative_path="phy" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.hsdcd.MIMXRT1173" name="USB HSDCD" brief="Middleware usb HSDCD (Select manually if needed)" version="2.11.0" full_name="USB HSDCD" category="USB/USB DCD" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="dcd" type="src">
        <files mask="usb_hsdcd.c"/>
      </source>
      <source relative_path="dcd" type="c_include">
        <files mask="usb_hsdcd.h"/>
        <files mask="usb_charger_detect.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_hsdcd.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="dcd" type="c_include"/>
        <include_path relative_path="dcd" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host.common_header.MIMXRT1173" name="USB Host Common Header" brief="Middleware usb host common_header" version="2.11.0" full_name="USB Host Common Header" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="host" type="c_include">
        <files mask="usb_host.h"/>
        <files mask="usb_host_hci.h"/>
        <files mask="usb_host_devices.h"/>
        <files mask="usb_host_framework.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_common_header.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host" type="c_include"/>
        <include_path relative_path="host" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_controller_ehci.MIMXRT1173" name="USB Host EHCI Controller Driver(HS)" brief="Middleware usb host ehci" version="2.11.0" full_name="USB Host EHCI Controller Driver(HS)" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="host" type="src">
        <files mask="usb_host_ehci.c"/>
      </source>
      <source relative_path="host" type="c_include">
        <files mask="usb_host_ehci.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_ehci.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host" type="c_include"/>
        <include_path relative_path="host" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host.stack.MIMXRT1173" name="USB Host Stack" brief="Middleware usb host stack" version="2.11.0" full_name="USB Host Stack" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="host" type="src">
        <files mask="usb_host_hci.c"/>
        <files mask="usb_host_devices.c"/>
        <files mask="usb_host_framework.c"/>
      </source>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_hub.c"/>
        <files mask="usb_host_hub_app.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_hub.h"/>
        <files mask="usb_host_hub_app.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_stack.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host" type="c_include"/>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host" type="asm_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_audio.MIMXRT1173" name="USB Host Audio" brief="Middleware usb host audio" version="2.11.0" full_name="USB Host Audio" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_audio.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_audio.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_audio.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_cdc.MIMXRT1173" name="USB Host CDC" brief="Middleware usb host cdc" version="2.11.0" full_name="USB Host CDC" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_cdc.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_cdc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_cdc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_cdc_ecm.MIMXRT1173" name="USB Host CDC ECM" brief="Middleware usb host cdc_ecm" version="2.11.0" full_name="USB Host CDC ECM" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.host_cdc.MIMXRT1173"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_cdc_ecm.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_cdc_ecm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_cdc_ecm.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_cdc_rndis.MIMXRT1173" name="USB Host CDC RNDIS" brief="Middleware usb host cdc_rndis" version="2.11.0" full_name="USB Host CDC RNDIS" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.host_cdc.MIMXRT1173"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_cdc_rndis.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_cdc_rndis.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_cdc_rndis.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_hid.MIMXRT1173" name="USB Host HID" brief="Middleware usb host hid" version="2.11.0" full_name="USB Host HID" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_hid.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_hid.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_hid.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_msd.MIMXRT1173" name="USB Host MSD" brief="Middleware usb host msd" version="2.11.0" full_name="USB Host MSD" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_msd.c"/>
        <files mask="usb_host_msd_ufi.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_msd.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_msd.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_video.MIMXRT1173" name="USB Host Video" brief="Middleware usb host video" version="2.11.0" full_name="USB Host Video" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_video.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_video.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_video.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_phdc.MIMXRT1173" name="USB Host PHDC" brief="Middleware usb host phdc" version="2.11.0" full_name="USB Host PHDC" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_phdc.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_phdc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_phdc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_printer.MIMXRT1173" name="USB Host Printer" brief="Middleware usb host printer" version="2.11.0" full_name="USB Host Printer" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_printer.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_printer.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_printer.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.osa.freertos.MIMXRT1173" name="sdmmc_osa" brief="Middleware sdmmc osa" version="2.3.0" full_name="SDMMC osa stack" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="osa" type="c_include">
        <files mask="fsl_sdmmc_osa.h"/>
      </source>
      <source relative_path="osa" type="src">
        <files mask="fsl_sdmmc_osa.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_osa.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="osa" type="c_include"/>
        <include_path relative_path="osa" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.sd.MIMXRT1173" name="sd" brief="Middleware sdmmc sd" version="2.4.1" full_name="SDMMC sd stack" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <defines>
        <define name="SD_ENABLED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="sd" type="src">
        <files mask="fsl_sd.c"/>
      </source>
      <source relative_path="sd" type="c_include">
        <files mask="fsl_sd.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_sd.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="sd" type="c_include"/>
        <include_path relative_path="sd" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.mmc.MIMXRT1173" name="mmc" brief="Middleware sdmmc mmc" version="2.5.1" full_name="SDMMC mmc stack" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <defines>
        <define name="MMC_ENABLED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="mmc" type="src">
        <files mask="fsl_mmc.c"/>
      </source>
      <source relative_path="mmc" type="c_include">
        <files mask="fsl_mmc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_mmc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="mmc" type="c_include"/>
        <include_path relative_path="mmc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.sdio.MIMXRT1173" name="sdio" brief="Middleware sdmmc sdio" version="2.4.1" full_name="SDMMC sdio stack" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <defines>
        <define name="SDIO_ENABLED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="sdio" type="src">
        <files mask="fsl_sdio.c"/>
      </source>
      <source relative_path="sdio" type="c_include">
        <files mask="fsl_sdio.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_sdio.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="sdio" type="c_include"/>
        <include_path relative_path="sdio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.sdspi.MIMXRT1173" name="sdspi" brief="Middleware sdmmc sdspi" version="2.2.1" full_name="SDMMC sdspi stack" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <defines>
        <define name="SDSPI_ENABLED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="sdspi" type="src">
        <files mask="fsl_sdspi.c"/>
      </source>
      <source relative_path="sdspi" type="c_include">
        <files mask="fsl_sdspi.h"/>
      </source>
      <source relative_path="common" type="c_include">
        <files mask="fsl_sdmmc_spec.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_sdspi.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="sdspi" type="c_include"/>
        <include_path relative_path="common" type="c_include"/>
        <include_path relative_path="sdspi" type="asm_include"/>
        <include_path relative_path="common" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.host.usdhc.MIMXRT1173" name="sdmmc_host_usdhc" brief="Middleware sdmmc host usdhc" version="2.6.3" full_name="Middleware sdmmc host usdhc" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.sdmmc.host.usdhc.polling.MIMXRT1173"/>
            <component_dependency value="middleware.sdmmc.host.usdhc.non_blocking.MIMXRT1173"/>
          </any_of>
          <component_dependency value="platform.drivers.usdhc.MIMXRT1173"/>
          <component_dependency value="middleware.sdmmc.common.MIMXRT1173"/>
          <component_dependency value="middleware.sdmmc.osa.freertos.MIMXRT1173"/>
          <component_dependency value="middleware.sdmmc.usdhc.template.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="host/usdhc" type="c_include">
        <files mask="fsl_sdmmc_host.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_host_usdhc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/usdhc" type="c_include"/>
        <include_path relative_path="host/usdhc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.host.usdhc.non_blocking.MIMXRT1173" name="sdmmc_host_usdhc_non_blocking" brief="Middleware sdmmc host usdhc non_blocking" version="2.6.3" full_name="Middleware sdmmc host usdhc non_blocking" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.host.usdhc.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="host/usdhc/non_blocking" type="src">
        <files mask="fsl_sdmmc_host.c"/>
      </source>
      <source relative_path="host/usdhc" type="c_include">
        <files mask="fsl_sdmmc_host.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_host_usdhc_non_blocking.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/usdhc" type="c_include"/>
        <include_path relative_path="host/usdhc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.host.usdhc.polling.MIMXRT1173" name="sdmmc_host_usdhc_blocking" brief="Middleware sdmmc host usdhc blocking" version="2.6.3" full_name="Middleware sdmmc host usdhc blocking" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.host.usdhc.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="host/usdhc/blocking" type="src">
        <files mask="fsl_sdmmc_host.c"/>
      </source>
      <source relative_path="host/usdhc" type="c_include">
        <files mask="fsl_sdmmc_host.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_host_usdhc_blocking.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/usdhc" type="c_include"/>
        <include_path relative_path="host/usdhc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.openh264.decoder.MIMXRT1173" name="openh264_decoder" brief="openh264 decoder" version="2.1.1" full_name="OpenH264 decoder" category="Graphics/H.264 Codec Library" user_visible="false" type="middleware" package_base_path="middleware/openh264" project_base_path="openh264">
      <dependencies>
        <all>
          <component_dependency value="middleware.openh264.api.MIMXRT1173"/>
          <component_dependency value="middleware.openh264.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="codec/decoder/core/inc" type="c_include">
        <files mask="au_parser.h"/>
        <files mask="bit_stream.h"/>
        <files mask="cabac_decoder.h"/>
        <files mask="deblocking.h"/>
        <files mask="dec_frame.h"/>
        <files mask="dec_golomb.h"/>
        <files mask="decode_mb_aux.h"/>
        <files mask="decode_slice.h"/>
        <files mask="decoder.h"/>
        <files mask="decoder_context.h"/>
        <files mask="decoder_core.h"/>
        <files mask="error_code.h"/>
        <files mask="error_concealment.h"/>
        <files mask="fmo.h"/>
        <files mask="get_intra_predictor.h"/>
        <files mask="manage_dec_ref.h"/>
        <files mask="mb_cache.h"/>
        <files mask="memmgr_nal_unit.h"/>
        <files mask="mv_pred.h"/>
        <files mask="nal_prefix.h"/>
        <files mask="nalu.h"/>
        <files mask="parameter_sets.h"/>
        <files mask="parse_mb_syn_cabac.h"/>
        <files mask="parse_mb_syn_cavlc.h"/>
        <files mask="pic_queue.h"/>
        <files mask="picture.h"/>
        <files mask="rec_mb.h"/>
        <files mask="slice.h"/>
        <files mask="vlc_decoder.h"/>
        <files mask="wels_common_basis.h"/>
        <files mask="wels_const.h"/>
        <files mask="wels_decoder_thread.h"/>
      </source>
      <source relative_path="codec/decoder/core/src" type="src">
        <files mask="au_parser.cpp"/>
        <files mask="bit_stream.cpp"/>
        <files mask="cabac_decoder.cpp"/>
        <files mask="deblocking.cpp"/>
        <files mask="decode_mb_aux.cpp"/>
        <files mask="decode_slice.cpp"/>
        <files mask="decoder.cpp"/>
        <files mask="decoder_core.cpp"/>
        <files mask="decoder_data_tables.cpp"/>
        <files mask="error_concealment.cpp"/>
        <files mask="fmo.cpp"/>
        <files mask="get_intra_predictor.cpp"/>
        <files mask="manage_dec_ref.cpp"/>
        <files mask="memmgr_nal_unit.cpp"/>
        <files mask="mv_pred.cpp"/>
        <files mask="parse_mb_syn_cabac.cpp"/>
        <files mask="parse_mb_syn_cavlc.cpp"/>
        <files mask="pic_queue.cpp"/>
        <files mask="rec_mb.cpp"/>
        <files mask="wels_decoder_thread.cpp"/>
      </source>
      <source relative_path="codec/decoder/plus/inc" type="c_include">
        <files mask="welsDecoderExt.h"/>
      </source>
      <source relative_path="codec/decoder/plus/src" type="src">
        <files mask="welsDecoderExt.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_openh264_decoder.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="codec/decoder/core/inc" type="c_include"/>
        <include_path relative_path="codec/decoder/plus/inc" type="c_include"/>
        <include_path relative_path="codec/decoder/core/inc" type="asm_include"/>
        <include_path relative_path="codec/decoder/plus/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.openh264.encoder.MIMXRT1173" name="openh264_encoder" brief="openh264 encoder" version="2.1.1" full_name="OpenH264 encoder" category="Graphics/H.264 Codec Library" user_visible="false" type="middleware" package_base_path="middleware/openh264" project_base_path="openh264">
      <dependencies>
        <all>
          <component_dependency value="middleware.openh264.api.MIMXRT1173"/>
          <component_dependency value="middleware.openh264.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="codec/encoder/core/inc" type="c_include">
        <files mask="as264_common.h"/>
        <files mask="au_set.h"/>
        <files mask="deblocking.h"/>
        <files mask="decode_mb_aux.h"/>
        <files mask="dq_map.h"/>
        <files mask="encode_mb_aux.h"/>
        <files mask="encoder.h"/>
        <files mask="encoder_context.h"/>
        <files mask="extern.h"/>
        <files mask="get_intra_predictor.h"/>
        <files mask="mb_cache.h"/>
        <files mask="md.h"/>
        <files mask="mt_defs.h"/>
        <files mask="mv_pred.h"/>
        <files mask="nal_encap.h"/>
        <files mask="param_svc.h"/>
        <files mask="parameter_sets.h"/>
        <files mask="paraset_strategy.h"/>
        <files mask="picture.h"/>
        <files mask="picture_handle.h"/>
        <files mask="rc.h"/>
        <files mask="ref_list_mgr_svc.h"/>
        <files mask="sample.h"/>
        <files mask="set_mb_syn_cabac.h"/>
        <files mask="set_mb_syn_cavlc.h"/>
        <files mask="slice.h"/>
        <files mask="slice_multi_threading.h"/>
        <files mask="stat.h"/>
        <files mask="svc_base_layer_md.h"/>
        <files mask="svc_enc_frame.h"/>
        <files mask="svc_enc_golomb.h"/>
        <files mask="svc_enc_macroblock.h"/>
        <files mask="svc_enc_slice_segment.h"/>
        <files mask="svc_encode_mb.h"/>
        <files mask="svc_encode_slice.h"/>
        <files mask="svc_mode_decision.h"/>
        <files mask="svc_motion_estimate.h"/>
        <files mask="svc_set_mb_syn.h"/>
        <files mask="svc_set_mb_syn_cavlc.h"/>
        <files mask="vlc_encoder.h"/>
        <files mask="wels_common_basis.h"/>
        <files mask="wels_const.h"/>
        <files mask="wels_func_ptr_def.h"/>
        <files mask="wels_preprocess.h"/>
        <files mask="wels_task_base.h"/>
        <files mask="wels_task_encoder.h"/>
        <files mask="wels_task_management.h"/>
        <files mask="wels_transpose_matrix.h"/>
      </source>
      <source relative_path="codec/encoder/core/src" type="src">
        <files mask="au_set.cpp"/>
        <files mask="deblocking.cpp"/>
        <files mask="decode_mb_aux.cpp"/>
        <files mask="encode_mb_aux.cpp"/>
        <files mask="encoder.cpp"/>
        <files mask="encoder_data_tables.cpp"/>
        <files mask="encoder_ext.cpp"/>
        <files mask="get_intra_predictor.cpp"/>
        <files mask="md.cpp"/>
        <files mask="mv_pred.cpp"/>
        <files mask="nal_encap.cpp"/>
        <files mask="paraset_strategy.cpp"/>
        <files mask="picture_handle.cpp"/>
        <files mask="ratectl.cpp"/>
        <files mask="ref_list_mgr_svc.cpp"/>
        <files mask="sample.cpp"/>
        <files mask="set_mb_syn_cabac.cpp"/>
        <files mask="set_mb_syn_cavlc.cpp"/>
        <files mask="slice_multi_threading.cpp"/>
        <files mask="svc_base_layer_md.cpp"/>
        <files mask="svc_enc_slice_segment.cpp"/>
        <files mask="svc_encode_mb.cpp"/>
        <files mask="svc_encode_slice.cpp"/>
        <files mask="svc_mode_decision.cpp"/>
        <files mask="svc_motion_estimate.cpp"/>
        <files mask="svc_set_mb_syn_cabac.cpp"/>
        <files mask="svc_set_mb_syn_cavlc.cpp"/>
        <files mask="wels_preprocess.cpp"/>
        <files mask="wels_task_base.cpp"/>
        <files mask="wels_task_encoder.cpp"/>
        <files mask="wels_task_management.cpp"/>
      </source>
      <source relative_path="codec/encoder/plus/inc" type="c_include">
        <files mask="welsEncoderExt.h"/>
      </source>
      <source relative_path="codec/encoder/plus/src" type="src">
        <files mask="DllEntry.cpp"/>
        <files mask="welsEncoderExt.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_openh264_encoder.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="codec/encoder/core/inc" type="c_include"/>
        <include_path relative_path="codec/encoder/plus/inc" type="c_include"/>
        <include_path relative_path="codec/encoder/core/inc" type="asm_include"/>
        <include_path relative_path="codec/encoder/plus/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.openh264.unused_files.MIMXRT1173" name="unused_files" brief="openh264 files unused by projects" version="2.1.1" full_name="openh264 unused" category="Graphics/H.264 Codec Library" user_visible="false" type="other" package_base_path="middleware/openh264" project_base_path="openh264">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.openh264.decoder.MIMXRT1173"/>
            <component_dependency value="middleware.openh264.encoder.MIMXRT1173"/>
          </any_of>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="other">
        <files mask="LICENSE"/>
        <files mask="CONTRIBUTORS"/>
        <files mask="CODING_STYLE"/>
        <files mask="RELEASES"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="README.md"/>
        <files mask="ChangeLogKSDK.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_openh264_unused_files.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.rpmsg-lite.bm.MIMXRT1173" name="rpmsg_lite" brief="RPMsg-Lite BM environment sources" version="5.1.2" full_name="RPMsg-Lite baremetal environment layer sources" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include/environment/bm" type="c_include">
        <files mask="rpmsg_env_specific.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite/porting/environment" type="src">
        <files mask="rpmsg_env_bm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_bm.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include/environment/bm" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include/environment/bm" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.freertos.MIMXRT1173" name="rpmsg_lite" brief="RPMsg-Lite FreeRTOS environment sources" version="5.1.2" full_name="RPMsg-Lite FreeRTOS environment layer sources" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include/environment/freertos" type="c_include">
        <files mask="rpmsg_env_specific.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite/porting/environment" type="src">
        <files mask="rpmsg_env_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_freertos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include/environment/freertos" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include/environment/freertos" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.xos.MIMXRT1173" name="rpmsg_lite xos" brief="RPMsg-Lite XOS environment layer sources" version="5.1.2" full_name="RPMsg-Lite XOS environment layer sources" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include/environment/xos" type="c_include">
        <files mask="rpmsg_env_specific.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite/porting/environment" type="src">
        <files mask="rpmsg_env_xos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_xos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include/environment/xos" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include/environment/xos" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.qnx.MIMXRT1173" name="rpmsg_lite qnx" brief="RPMsg-Lite QNX environment layer sources" version="5.1.2" full_name="RPMsg-Lite QNX environment layer sources" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include/environment/qnx" type="c_include">
        <files mask="rpmsg_env_specific.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite/porting/environment" type="src">
        <files mask="rpmsg_env_qnx.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_qnx.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include/environment/qnx" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include/environment/qnx" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.threadx.MIMXRT1173" name="rpmsg_lite threadx" brief="RPMsg-Lite ThreadX environment layer sources" version="5.1.2" full_name="RPMsg-Lite ThreadX environment layer sources" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include/environment/threadx" type="c_include">
        <files mask="rpmsg_env_specific.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite/porting/environment" type="src">
        <files mask="rpmsg_env_threadx.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_threadx.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include/environment/threadx" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include/environment/threadx" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.zephyr.MIMXRT1173" name="rpmsg_lite zephyr" brief="RPMsg-Lite Zephyr environment sources" version="5.1.2" full_name="RPMsg-Lite Zephyr environment layer sources" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include/environment/zephyr" type="c_include">
        <files mask="rpmsg_env_specific.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite/porting/environment" type="src">
        <files mask="rpmsg_env_zephyr.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_zephyr.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include/environment/zephyr" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include/environment/zephyr" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.MIMXRT1173" name="rpmsg_lite" brief="RPMsg-Lite" version="5.1.2" full_name="Remote Procedure Messaging Lite library" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.rpmsg-lite.bm.MIMXRT1173"/>
            <component_dependency value="middleware.multicore.rpmsg-lite.freertos.MIMXRT1173"/>
            <component_dependency value="middleware.multicore.rpmsg-lite.qnx.MIMXRT1173"/>
            <component_dependency value="middleware.multicore.rpmsg-lite.threadx.MIMXRT1173"/>
            <component_dependency value="middleware.multicore.rpmsg-lite.xos.MIMXRT1173"/>
            <component_dependency value="middleware.multicore.rpmsg-lite.zephyr.MIMXRT1173"/>
          </any_of>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include" type="c_include">
        <files mask="llist.h"/>
        <files mask="rpmsg_compiler.h"/>
        <files mask="rpmsg_default_config.h"/>
        <files mask="rpmsg_env.h"/>
        <files mask="rpmsg_lite.h"/>
        <files mask="virtio_ring.h"/>
        <files mask="virtqueue.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/common" type="src">
        <files mask="llist.c"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite" type="src">
        <files mask="rpmsg_lite.c"/>
      </source>
      <source relative_path="rpmsg-lite/lib/virtio" type="src">
        <files mask="virtqueue.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.ns.MIMXRT1173" name="rpmsg_lite" brief="RPMsg-Lite NS" version="5.1.2" full_name="Remote Procedure Messaging Lite NS library" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include" type="c_include">
        <files mask="rpmsg_ns.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite" type="src">
        <files mask="rpmsg_ns.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_ns.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.rpmsg-lite.queue.MIMXRT1173" name="rpmsg_lite" brief="RPMsg-Lite Queue" version="5.1.2" full_name="Remote Procedure Messaging Queue NS library" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include" type="c_include">
        <files mask="rpmsg_queue.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite" type="src">
        <files mask="rpmsg_queue.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_queue.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.rpmsg-lite.imxrt1170.MIMXRT1173" name="rpmsg_lite_imxrt1170" brief="RPMsg-Lite for evkmimxrt1170 application" version="5.1.2" full_name="Remote Procedure Messaging Lite porting layer for evkmimxrt1170 board" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include/platform/imxrt1170" type="c_include">
        <files mask="rpmsg_platform.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite/porting/platform/imxrt1170" type="src">
        <files mask="rpmsg_platform.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_imxrt1170.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include/platform/imxrt1170" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include/platform/imxrt1170" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.mcmgr.imxrt1170.MIMXRT1173" name="mcmgr_imxrt1170" brief="Multicore Manager for evkmimxrt1170 board" version="4.1.5" full_name="Multicore Manager for evkmimxrt1170 board" category="Multicore/Core Management" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="mcmgr">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.mu.MIMXRT1173"/>
          <component_dependency value="middleware.multicore.mcmgr.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="mcmgr/src" type="src">
        <files mask="mcmgr_internal_core_api_imxrt1170.c"/>
        <files mask="mcmgr_mu_internal.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_mcmgr_imxrt1170.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.erpc.client.MIMXRT1173" name="eRPC_client" brief="eRPC_client" version="1.13.0" full_name="eRPC client" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/infra" type="c_include">
        <files mask="erpc_client_manager.h"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_client_manager.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="c_include">
        <files mask="erpc_client_setup.h"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_client_setup.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_client.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.server.MIMXRT1173" name="eRPC_server" brief="eRPC_server" version="1.13.0" full_name="eRPC server" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_simple_server.hpp"/>
        <files mask="erpc_server.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_simple_server.cpp"/>
        <files mask="erpc_server.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="c_include">
        <files mask="erpc_server_setup.h"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_server_setup.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_server.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.arbitrator.MIMXRT1173" name="eRPC_arbitrator" brief="eRPC_arbitrator" version="1.13.0" full_name="eRPC arbitrator" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_arbitrated_client_manager.hpp"/>
        <files mask="erpc_simple_server.hpp"/>
        <files mask="erpc_server.hpp"/>
        <files mask="erpc_transport_arbitrator.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_arbitrated_client_manager.cpp"/>
        <files mask="erpc_client_manager.cpp"/>
        <files mask="erpc_simple_server.cpp"/>
        <files mask="erpc_server.cpp"/>
        <files mask="erpc_transport_arbitrator.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="c_include">
        <files mask="erpc_client_manager.h"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="c_include">
        <files mask="erpc_arbitrated_client_setup.h"/>
        <files mask="erpc_server_setup.h"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_arbitrated_client_setup.cpp"/>
        <files mask="erpc_server_setup.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/port" type="c_include">
        <files mask="erpc_threading.h"/>
      </source>
      <source relative_path="erpc/erpc_c/port" type="src">
        <files mask="erpc_threading_freertos.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_arbitrator.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/port" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.port_stdlib.MIMXRT1173" name="eRPC_port_stdlib" brief="eRPC_port_stdlib" version="1.13.0" full_name="eRPC stdlib port layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/port" type="c_include">
        <files mask="erpc_port.h"/>
      </source>
      <source relative_path="erpc/erpc_c/port" type="src">
        <files mask="erpc_port_stdlib.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_port_stdlib.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/port" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.port_freertos.MIMXRT1173" name="eRPC_port_freertos" brief="eRPC_port_freertos" version="1.13.0" full_name="eRPC FreeRTOS port layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/port" type="c_include">
        <files mask="erpc_port.h"/>
        <files mask="erpc_threading.h"/>
        <files mask="erpc_setup_extensions.h"/>
      </source>
      <source relative_path="erpc/erpc_c/port" type="src">
        <files mask="erpc_port_freertos.cpp"/>
        <files mask="erpc_threading_freertos.cpp"/>
        <files mask="erpc_setup_extensions_freertos.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_port_freertos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/port" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_mu_transport.MIMXRT1173" name="eRPC_mu_transport" brief="eRPC_mu_transport" version="1.13.0" full_name="eRPC MU transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT1173"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT1173"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_mu_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_mu_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
        <files mask="erpc_setup_mu.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_mu_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_lite_transport_master.MIMXRT1173" name="eRPC_rpmsg_lite_transport_master" brief="eRPC_rpmsg_lite_transport_master" version="1.13.0" full_name="eRPC RPMsg-Lite transport layer master" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT1173"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT1173"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_rpmsg_lite_base.hpp"/>
        <files mask="erpc_rpmsg_lite_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_rpmsg_lite_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_static_queue.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_rpmsg.cpp"/>
        <files mask="erpc_setup_rpmsg_lite_master.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_rpmsg_lite_transport_master.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_lite_transport_remote.MIMXRT1173" name="eRPC_rpmsg_lite_transport_remote" brief="eRPC_rpmsg_lite_transport_remote" version="1.13.0" full_name="eRPC RPMsg-Lite transport layer remote" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT1173"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT1173"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_rpmsg_lite_base.hpp"/>
        <files mask="erpc_rpmsg_lite_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_rpmsg_lite_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_static_queue.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_rpmsg.cpp"/>
        <files mask="erpc_setup_rpmsg_lite_remote.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_rpmsg_lite_transport_remote.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_lite_rtos_transport_master.MIMXRT1173" name="eRPC_rpmsg_lite_rtos_transport_master" brief="eRPC_rpmsg_lite_rtos_transport_master" version="1.13.0" full_name="eRPC RPMsg-Lite RTOS transport layer master" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT1173"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT1173"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_rpmsg_lite_base.hpp"/>
        <files mask="erpc_rpmsg_lite_rtos_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_rpmsg_lite_rtos_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_rpmsg.cpp"/>
        <files mask="erpc_setup_rpmsg_lite_rtos_master.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_rpmsg_lite_rtos_transport_master.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_lite_rtos_transport_remote.MIMXRT1173" name="eRPC_rpmsg_lite_rtos_transport_remote" brief="eRPC_rpmsg_lite_rtos_transport_remote" version="1.13.0" full_name="eRPC RPMsg-Lite RTOS transport layer remote" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT1173"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT1173"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_rpmsg_lite_base.hpp"/>
        <files mask="erpc_rpmsg_lite_rtos_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_rpmsg_lite_rtos_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_rpmsg.cpp"/>
        <files mask="erpc_setup_rpmsg_lite_rtos_remote.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_rpmsg_lite_rtos_transport_remote.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_rpmsg_tty_rtos_transport.MIMXRT1173" name="eRPC_rpmsg_tty_rtos_transport" brief="eRPC_rpmsg_tty_rtos_transport" version="1.13.0" full_name="eRPC RPMsg-Lite TTY RTOS transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT1173"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT1173"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_rpmsg_lite_base.hpp"/>
        <files mask="erpc_rpmsg_tty_rtos_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_rpmsg_tty_rtos_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_rpmsg.cpp"/>
        <files mask="erpc_setup_rpmsg_tty_rtos_remote.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_rpmsg_tty_rtos_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_uart_cmsis_transport.MIMXRT1173" name="eRPC_uart_cmsis_transport" brief="eRPC_uart_cmsis_transport" version="1.13.0" full_name="eRPC UART CMSIS transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT1173"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT1173"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_uart_cmsis_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_uart_cmsis_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
        <files mask="erpc_setup_uart_cmsis.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_uart_cmsis_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_dspi_master_transport.MIMXRT1173" name="eRPC_dspi_master_transport" brief="eRPC_dspi_master_transport" version="1.13.0" full_name="eRPC DSPI master transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT1173"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT1173"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_dspi_master_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_dspi_master_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
        <files mask="erpc_setup_dspi_master.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_dspi_master_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_dspi_slave_transport.MIMXRT1173" name="eRPC_dspi_slave_transport" brief="eRPC_dspi_slave_transport" version="1.13.0" full_name="eRPC DSPI slave transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT1173"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT1173"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_dspi_slave_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_dspi_slave_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
        <files mask="erpc_setup_dspi_slave.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_dspi_slave_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_spi_master_transport.MIMXRT1173" name="eRPC_spi_master_transport" brief="eRPC_spi_master_transport" version="1.13.0" full_name="eRPC SPI master transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT1173"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT1173"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_spi_master_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_spi_master_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
        <files mask="erpc_setup_spi_master.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_spi_master_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_spi_slave_transport.MIMXRT1173" name="eRPC_spi_slave_transport" brief="eRPC_spi_slave_transport" version="1.13.0" full_name="eRPC SPI slave transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT1173"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT1173"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_spi_slave_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_spi_slave_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
        <files mask="erpc_setup_spi_slave.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_spi_slave_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_lpspi_slave_transport.MIMXRT1173" name="eRPC_lpspi_slave_transport" brief="eRPC_lpspi_slave_transport" version="1.13.0" full_name="eRPC LPSPI slave transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT1173"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT1173"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_lpspi_slave_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_lpspi_slave_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
        <files mask="erpc_setup_lpspi_slave.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_lpspi_slave_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_i2c_slave_transport.MIMXRT1173" name="eRPC_i2c_slave_transport" brief="eRPC_i2c_slave_transport" version="1.13.0" full_name="eRPC I2C slave transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT1173"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT1173"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_i2c_slave_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_i2c_slave_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
        <files mask="erpc_setup_i2c_slave.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_i2c_slave_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.eRPC_lpi2c_slave_transport.MIMXRT1173" name="eRPC_lpi2c_slave_transport" brief="eRPC_lpi2c_slave_transport" version="1.13.0" full_name="eRPC LPI2C slave transport layer" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.erpc.port_freertos.MIMXRT1173"/>
            <component_dependency value="middleware.multicore.erpc.port_stdlib.MIMXRT1173"/>
          </any_of>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/erpc_c/transports" type="cpp_include">
        <files mask="erpc_lpi2c_slave_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/transports" type="src">
        <files mask="erpc_lpi2c_slave_transport.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/setup" type="src">
        <files mask="erpc_setup_mbf_dynamic.cpp"/>
        <files mask="erpc_setup_lpi2c_slave.cpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="cpp_include">
        <files mask="erpc_framed_transport.hpp"/>
      </source>
      <source relative_path="erpc/erpc_c/infra" type="src">
        <files mask="erpc_framed_transport.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_eRPC_lpi2c_slave_transport.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/erpc_c/transports" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="c_include"/>
        <include_path relative_path="erpc/erpc_c/transports" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/setup" type="asm_include"/>
        <include_path relative_path="erpc/erpc_c/infra" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.examples.erpc_common_multicore.MIMXRT1173" name="eRPC_common" brief="eRPC" version="1.13.0" full_name="Embedded Remote Procedure Call" category="Multicore/Remote Procedure Call" user_visible="true" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK" type="c_include">
        <files mask="erpc_error_handler.h"/>
      </source>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK" type="src">
        <files mask="erpc_error_handler.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_examples_erpc_common_multicore.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK" type="c_include"/>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.examples.erpc_matrix_multiply_client.MIMXRT1173" name="eRPC_examples Matrix Multiply Client" brief="erpc_examples Matrix Multiply Client" version="1.13.0" full_name="eRPC examples" category="Multicore/Remote Procedure Call" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="c_include">
        <files mask="erpc_matrix_multiply_common.h"/>
        <files mask="c_erpc_matrix_multiply_client.h"/>
      </source>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="cpp_include">
        <files mask="erpc_matrix_multiply_common.hpp"/>
        <files mask="erpc_matrix_multiply_client.hpp"/>
        <files mask="erpc_matrix_multiply_interface.hpp"/>
      </source>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="src">
        <files mask="erpc_matrix_multiply_client.cpp"/>
        <files mask="erpc_matrix_multiply_interface.cpp"/>
        <files mask="c_erpc_matrix_multiply_client.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_examples_erpc_matrix_multiply_client.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="c_include"/>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.examples.erpc_matrix_multiply_server.MIMXRT1173" name="eRPC_examples Matrix Multiply Server" brief="erpc_examples Matrix Multiply Server" version="1.13.0" full_name="eRPC examples" category="Multicore/Remote Procedure Call" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="c_include">
        <files mask="erpc_matrix_multiply_common.h"/>
        <files mask="c_erpc_matrix_multiply_server.h"/>
      </source>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="cpp_include">
        <files mask="erpc_matrix_multiply_common.hpp"/>
        <files mask="erpc_matrix_multiply_server.hpp"/>
        <files mask="erpc_matrix_multiply_interface.hpp"/>
      </source>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="src">
        <files mask="erpc_matrix_multiply_server.cpp"/>
        <files mask="erpc_matrix_multiply_interface.cpp"/>
        <files mask="c_erpc_matrix_multiply_server.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_examples_erpc_matrix_multiply_server.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="c_include"/>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_matrix_multiply/service" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.examples.erpc_two_way_rpc_core0.MIMXRT1173" name="eRPC_examples Two Way RPC core0" brief="erpc_examples Two Way RPC core0" version="1.13.0" full_name="eRPC examples" category="Multicore/Remote Procedure Call" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="c_include">
        <files mask="erpc_two_way_rpc_Core0Interface_common.h"/>
        <files mask="c_erpc_two_way_rpc_Core0Interface_client.h"/>
        <files mask="erpc_two_way_rpc_Core1Interface_common.h"/>
        <files mask="c_erpc_two_way_rpc_Core1Interface_server.h"/>
      </source>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="cpp_include">
        <files mask="erpc_two_way_rpc_Core0Interface_common.hpp"/>
        <files mask="erpc_two_way_rpc_Core0Interface_client.hpp"/>
        <files mask="erpc_two_way_rpc_Core0Interface_interface.hpp"/>
        <files mask="erpc_two_way_rpc_Core1Interface_common.hpp"/>
        <files mask="erpc_two_way_rpc_Core1Interface_server.hpp"/>
        <files mask="erpc_two_way_rpc_Core1Interface_interface.hpp"/>
      </source>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="src">
        <files mask="erpc_two_way_rpc_Core0Interface_client.cpp"/>
        <files mask="c_erpc_two_way_rpc_Core0Interface_client.cpp"/>
        <files mask="erpc_two_way_rpc_Core0Interface_interface.cpp"/>
        <files mask="erpc_two_way_rpc_Core1Interface_server.cpp"/>
        <files mask="c_erpc_two_way_rpc_Core1Interface_server.cpp"/>
        <files mask="erpc_two_way_rpc_Core1Interface_interface.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_examples_erpc_two_way_rpc_core0.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="c_include"/>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.erpc.examples.erpc_two_way_rpc_core1.MIMXRT1173" name="eRPC_examples Two Way RPC core1" brief="erpc_examples Two Way RPC core1" version="1.13.0" full_name="eRPC examples" category="Multicore/Remote Procedure Call" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="erpc">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.erpc.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="c_include">
        <files mask="erpc_two_way_rpc_Core1Interface_common.h"/>
        <files mask="c_erpc_two_way_rpc_Core1Interface_client.h"/>
        <files mask="erpc_two_way_rpc_Core0Interface_common.h"/>
        <files mask="c_erpc_two_way_rpc_Core0Interface_server.h"/>
      </source>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="cpp_include">
        <files mask="erpc_two_way_rpc_Core1Interface_common.hpp"/>
        <files mask="erpc_two_way_rpc_Core1Interface_client.hpp"/>
        <files mask="erpc_two_way_rpc_Core1Interface_interface.hpp"/>
        <files mask="erpc_two_way_rpc_Core0Interface_common.hpp"/>
        <files mask="erpc_two_way_rpc_Core0Interface_server.hpp"/>
        <files mask="erpc_two_way_rpc_Core0Interface_interface.hpp"/>
      </source>
      <source relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="src">
        <files mask="erpc_two_way_rpc_Core1Interface_client.cpp"/>
        <files mask="c_erpc_two_way_rpc_Core1Interface_client.cpp"/>
        <files mask="erpc_two_way_rpc_Core1Interface_interface.cpp"/>
        <files mask="erpc_two_way_rpc_Core0Interface_server.cpp"/>
        <files mask="c_erpc_two_way_rpc_Core0Interface_server.cpp"/>
        <files mask="erpc_two_way_rpc_Core0Interface_interface.cpp"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_erpc_examples_erpc_two_way_rpc_core1.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="c_include"/>
        <include_path relative_path="erpc/examples/MCUXPRESSO_SDK/erpc_two_way_rpc/service" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mmcau.cm4_cm7.MIMXRT1173" name="mmcau_cm4_cm7" brief="MMCAU library for ARM Cortex M4/M7 core" version="2.0.4" full_name="Kinetis MMCAU security function library for Arm Cortex-M4 and Cortex-M7" category="MMCAU Security/MMCAU library" user_visible="true" type="middleware" package_base_path="middleware/mmcau" project_base_path="mmcau">
      <dependencies>
        <all>
          <any_of>
            <device_core_dependency value="cm4_MIMXRT1173xxxxx"/>
            <device_core_dependency value="cm7_MIMXRT1173xxxxx"/>
          </any_of>
          <component_dependency value="platform.drivers.clock.MIMXRT1173"/>
          <component_dependency value="middleware.mmcau.common_files.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="armgcc mcuxpresso iar" relative_path="asm-cm4-cm7" type="lib">
        <files mask="lib_mmcau.a"/>
      </source>
      <source toolchain="mdk" relative_path="asm-cm4-cm7" type="lib">
        <files mask="lib_mmcau.lib"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mmcau_cm4_cm7.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls.port.ksdk.MIMXRT1173" name="mbedtls_ksdk" brief="mbedTLS port library for KPSDK" version="2.28.8" full_name="MbedTLS MCUX SDK port layer" category="Security/mbedTLS library" user_visible="true" type="middleware" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <defines>
        <define name="MBEDTLS_CONFIG_FILE" value="'&quot;ksdk_mbedtls_config.h&quot;'"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.caam.MIMXRT1173"/>
          <component_dependency value="middleware.mbedtls.MIMXRT1173"/>
          <component_dependency value="middleware.mbedtls.port.ksdk_option.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="port/ksdk" type="src">
        <files mask="ksdk_mbedtls.c"/>
        <files mask="des_alt.c"/>
        <files mask="aes_alt.c"/>
        <files mask="ecp_alt.c"/>
        <files mask="ecp_curves_alt.c"/>
        <files mask="ecp_alt_ksdk.c"/>
      </source>
      <source relative_path="port/ksdk" type="c_include">
        <files mask="ksdk_mbedtls.h"/>
        <files mask="ksdk_mbedtls_config.h"/>
        <files mask="sha1_alt.h"/>
        <files mask="sha256_alt.h"/>
        <files mask="des_alt.h"/>
        <files mask="aes_alt.h"/>
        <files mask="ccm_alt.h"/>
        <files mask="ecp_alt.h"/>
        <files mask="threading_alt.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mbedtls_port_ksdk.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/ksdk" type="c_include"/>
        <include_path relative_path="port/ksdk" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls.MIMXRT1173" name="mbedtls" brief="mbedTLS library" version="2.28.8" full_name="MbedTLS open source SSL library" category="Security/mbedTLS library" user_visible="true" type="middleware" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <dependencies>
        <all>
          <component_dependency value="middleware.mbedtls.port.ksdk.MIMXRT1173"/>
          <component_dependency value="middleware.mbedtls.port.ksdk_option.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="include/mbedtls" type="c_include">
        <files mask="aes.h"/>
        <files mask="aesni.h"/>
        <files mask="arc4.h"/>
        <files mask="aria.h"/>
        <files mask="asn1.h"/>
        <files mask="asn1write.h"/>
        <files mask="base64.h"/>
        <files mask="bignum.h"/>
        <files mask="blowfish.h"/>
        <files mask="bn_mul.h"/>
        <files mask="camellia.h"/>
        <files mask="ccm.h"/>
        <files mask="certs.h"/>
        <files mask="chacha20.h"/>
        <files mask="chachapoly.h"/>
        <files mask="check_config.h"/>
        <files mask="cipher.h"/>
        <files mask="cipher_internal.h"/>
        <files mask="cmac.h"/>
        <files mask="compat-1.3.h"/>
        <files mask="config.h"/>
        <files mask="config_psa.h"/>
        <files mask="constant_time.h"/>
        <files mask="ctr_drbg.h"/>
        <files mask="debug.h"/>
        <files mask="des.h"/>
        <files mask="dhm.h"/>
        <files mask="ecdh.h"/>
        <files mask="ecdsa.h"/>
        <files mask="ecjpake.h"/>
        <files mask="ecp.h"/>
        <files mask="ecp_internal.h"/>
        <files mask="entropy.h"/>
        <files mask="entropy_poll.h"/>
        <files mask="error.h"/>
        <files mask="gcm.h"/>
        <files mask="havege.h"/>
        <files mask="hkdf.h"/>
        <files mask="hmac_drbg.h"/>
        <files mask="md.h"/>
        <files mask="md_internal.h"/>
        <files mask="md2.h"/>
        <files mask="md4.h"/>
        <files mask="md5.h"/>
        <files mask="memory_buffer_alloc.h"/>
        <files mask="net.h"/>
        <files mask="net_sockets.h"/>
        <files mask="nist_kw.h"/>
        <files mask="oid.h"/>
        <files mask="padlock.h"/>
        <files mask="pem.h"/>
        <files mask="pk.h"/>
        <files mask="pk_internal.h"/>
        <files mask="pkcs5.h"/>
        <files mask="pkcs11.h"/>
        <files mask="pkcs12.h"/>
        <files mask="platform.h"/>
        <files mask="platform_time.h"/>
        <files mask="platform_util.h"/>
        <files mask="poly1305.h"/>
        <files mask="psa_util.h"/>
        <files mask="ripemd160.h"/>
        <files mask="rsa.h"/>
        <files mask="rsa_internal.h"/>
        <files mask="sha1.h"/>
        <files mask="sha256.h"/>
        <files mask="sha512.h"/>
        <files mask="ssl.h"/>
        <files mask="ssl_cache.h"/>
        <files mask="ssl_ciphersuites.h"/>
        <files mask="ssl_cookie.h"/>
        <files mask="ssl_internal.h"/>
        <files mask="ssl_ticket.h"/>
        <files mask="threading.h"/>
        <files mask="timing.h"/>
        <files mask="version.h"/>
        <files mask="x509.h"/>
        <files mask="x509_crl.h"/>
        <files mask="x509_crt.h"/>
        <files mask="x509_csr.h"/>
        <files mask="xtea.h"/>
      </source>
      <source relative_path="include/psa" type="c_include">
        <files mask="crypto.h"/>
        <files mask="crypto_builtin_composites.h"/>
        <files mask="crypto_builtin_primitives.h"/>
        <files mask="crypto_compat.h"/>
        <files mask="crypto_config.h"/>
        <files mask="crypto_driver_common.h"/>
        <files mask="crypto_driver_contexts_composites.h"/>
        <files mask="crypto_driver_contexts_primitives.h"/>
        <files mask="crypto_extra.h"/>
        <files mask="crypto_platform.h"/>
        <files mask="crypto_se_driver.h"/>
        <files mask="crypto_sizes.h"/>
        <files mask="crypto_struct.h"/>
        <files mask="crypto_types.h"/>
        <files mask="crypto_values.h"/>
      </source>
      <source relative_path="library" type="src">
        <files mask="aes.c"/>
        <files mask="aesni.c"/>
        <files mask="arc4.c"/>
        <files mask="aria.c"/>
        <files mask="asn1parse.c"/>
        <files mask="asn1write.c"/>
        <files mask="base64.c"/>
        <files mask="bignum.c"/>
        <files mask="blowfish.c"/>
        <files mask="camellia.c"/>
        <files mask="ccm.c"/>
        <files mask="certs.c"/>
        <files mask="chacha20.c"/>
        <files mask="chachapoly.c"/>
        <files mask="cipher.c"/>
        <files mask="cipher_wrap.c"/>
        <files mask="cmac.c"/>
        <files mask="constant_time.c"/>
        <files mask="ctr_drbg.c"/>
        <files mask="debug.c"/>
        <files mask="des.c"/>
        <files mask="dhm.c"/>
        <files mask="ecdh.c"/>
        <files mask="ecdsa.c"/>
        <files mask="ecjpake.c"/>
        <files mask="ecp.c"/>
        <files mask="ecp_curves.c"/>
        <files mask="entropy.c"/>
        <files mask="entropy_poll.c"/>
        <files mask="error.c"/>
        <files mask="gcm.c"/>
        <files mask="havege.c"/>
        <files mask="hkdf.c"/>
        <files mask="hmac_drbg.c"/>
        <files mask="md.c"/>
        <files mask="md2.c"/>
        <files mask="md4.c"/>
        <files mask="md5.c"/>
        <files mask="memory_buffer_alloc.c"/>
        <files mask="mps_reader.c"/>
        <files mask="mps_trace.c"/>
        <files mask="net_sockets.c"/>
        <files mask="nist_kw.c"/>
        <files mask="oid.c"/>
        <files mask="padlock.c"/>
        <files mask="pem.c"/>
        <files mask="pk.c"/>
        <files mask="pk_wrap.c"/>
        <files mask="pkcs5.c"/>
        <files mask="pkcs11.c"/>
        <files mask="pkcs12.c"/>
        <files mask="pkparse.c"/>
        <files mask="pkwrite.c"/>
        <files mask="platform.c"/>
        <files mask="platform_util.c"/>
        <files mask="poly1305.c"/>
        <files mask="psa_crypto.c"/>
        <files mask="psa_crypto_aead.c"/>
        <files mask="psa_crypto_cipher.c"/>
        <files mask="psa_crypto_client.c"/>
        <files mask="psa_crypto_driver_wrappers.c"/>
        <files mask="psa_crypto_ecp.c"/>
        <files mask="psa_crypto_hash.c"/>
        <files mask="psa_crypto_mac.c"/>
        <files mask="psa_crypto_rsa.c"/>
        <files mask="psa_crypto_se.c"/>
        <files mask="psa_crypto_slot_management.c"/>
        <files mask="psa_crypto_storage.c"/>
        <files mask="psa_its_file.c"/>
        <files mask="ripemd160.c"/>
        <files mask="rsa.c"/>
        <files mask="rsa_internal.c"/>
        <files mask="sha1.c"/>
        <files mask="sha256.c"/>
        <files mask="sha512.c"/>
        <files mask="ssl_cache.c"/>
        <files mask="ssl_ciphersuites.c"/>
        <files mask="ssl_cli.c"/>
        <files mask="ssl_cookie.c"/>
        <files mask="ssl_msg.c"/>
        <files mask="ssl_srv.c"/>
        <files mask="ssl_ticket.c"/>
        <files mask="ssl_tls.c"/>
        <files mask="ssl_tls13_keys.c"/>
        <files mask="threading.c"/>
        <files mask="timing.c"/>
        <files mask="version.c"/>
        <files mask="version_features.c"/>
        <files mask="x509.c"/>
        <files mask="x509_create.c"/>
        <files mask="x509_crl.c"/>
        <files mask="x509_crt.c"/>
        <files mask="x509_csr.c"/>
        <files mask="x509write_crt.c"/>
        <files mask="x509write_csr.c"/>
        <files mask="xtea.c"/>
      </source>
      <source relative_path="library" type="c_include">
        <files mask="bignum_internal.h"/>
        <files mask="check_crypto_config.h"/>
        <files mask="common.h"/>
        <files mask="constant_time_internal.h"/>
        <files mask="constant_time_invasive.h"/>
        <files mask="ecp_invasive.h"/>
        <files mask="mps_common.h"/>
        <files mask="mps_error.h"/>
        <files mask="mps_reader.h"/>
        <files mask="mps_trace.h"/>
        <files mask="psa_crypto_aead.h"/>
        <files mask="psa_crypto_cipher.h"/>
        <files mask="psa_crypto_core.h"/>
        <files mask="psa_crypto_driver_wrappers.h"/>
        <files mask="psa_crypto_ecp.h"/>
        <files mask="psa_crypto_hash.h"/>
        <files mask="psa_crypto_invasive.h"/>
        <files mask="psa_crypto_its.h"/>
        <files mask="psa_crypto_mac.h"/>
        <files mask="psa_crypto_random_impl.h"/>
        <files mask="psa_crypto_rsa.h"/>
        <files mask="psa_crypto_se.h"/>
        <files mask="psa_crypto_slot_management.h"/>
        <files mask="psa_crypto_storage.h"/>
        <files mask="ssl_tls13_keys.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mbedtls.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="library" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
        <include_path relative_path="library" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.MIMXRT1173" name="lwIP" brief="lwIP - A Lightweight TCP/IP Stack" version="2.2.1" revision="2" full_name="lwIP" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <any_of>
            <all>
              <not>
                <component_dependency value="middleware.lwip.sys_arch.static.MIMXRT1173"/>
              </not>
              <component_dependency value="middleware.lwip.sys_arch.dynamic.MIMXRT1173"/>
            </all>
            <all>
              <not>
                <component_dependency value="middleware.lwip.sys_arch.dynamic.MIMXRT1173"/>
              </not>
              <not>
                <component_dependency value="middleware.lwip.usb_ethernetif.MIMXRT1173"/>
              </not>
              <not>
                <component_dependency value="middleware.lwip.kinetis_ethernetif.MIMXRT1173"/>
              </not>
              <not>
                <component_dependency value="middleware.lwip.eoe_ethernetif.MIMXRT1173"/>
              </not>
              <component_dependency value="middleware.lwip.sys_arch.static.MIMXRT1173"/>
            </all>
          </any_of>
          <any_of>
            <component_dependency value="middleware.lwip.usb_ethernetif.MIMXRT1173"/>
            <component_dependency value="middleware.lwip.kinetis_ethernetif.MIMXRT1173"/>
            <component_dependency value="middleware.lwip.empty_ethernetif.MIMXRT1173"/>
            <component_dependency value="middleware.lwip.eoe_ethernetif.MIMXRT1173"/>
            <component_dependency value="middleware.wifi.MIMXRT1173"/>
          </any_of>
          <component_dependency value="middleware.lwip.template.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="BUILDING" hidden="true"/>
        <files mask="CHANGELOG" hidden="true"/>
        <files mask="ChangeLogKSDK.txt" hidden="true"/>
        <files mask="COPYING" hidden="true"/>
        <files mask="FEATURES" hidden="true"/>
        <files mask="README" hidden="true"/>
        <files mask="UPGRADING" hidden="true"/>
      </source>
      <source exclude="true" relative_path="./" type="other">
        <files mask="CMakeLists_upstream.txt" hidden="true"/>
        <files mask="codespell_changed_files.sh" hidden="true"/>
        <files mask="codespell_check.sh" hidden="true"/>
        <files mask="FILES" hidden="true"/>
      </source>
      <source exclude="true" relative_path="port" type="doc">
        <files mask="README.md" hidden="true"/>
      </source>
      <source exclude="true" relative_path="doc" type="doc">
        <files mask="FILES" hidden="true"/>
        <files mask="NO_SYS_SampleCode.c" hidden="true"/>
        <files mask="ZeroCopyRx.c" hidden="true"/>
        <files mask="contrib.txt" hidden="true"/>
        <files mask="mdns.txt" hidden="true"/>
        <files mask="mqtt_client.txt" hidden="true"/>
        <files mask="ppp.txt" hidden="true"/>
        <files mask="savannah.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="doc/doxygen" type="doc">
        <files mask="generate.bat" hidden="true"/>
        <files mask="generate.sh" hidden="true"/>
        <files mask="lwip.Doxyfile" hidden="true"/>
        <files mask="lwip.Doxyfile.cmake.in" hidden="true"/>
        <files mask="main_page.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="doc/doxygen/output" type="doc">
        <files mask="index.html" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src" type="other">
        <files mask="FILES" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/netif" type="other">
        <files mask="FILES" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/netif/ppp" type="doc">
        <files mask="PPPD_FOLLOWUP" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/netif/ppp/polarssl" type="src_c">
        <files mask="arc4.c" hidden="true"/>
        <files mask="des.c" hidden="true"/>
        <files mask="md4.c" hidden="true"/>
        <files mask="md5.c" hidden="true"/>
        <files mask="sha1.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/netif/ppp/polarssl" type="doc">
        <files mask="README" hidden="true"/>
      </source>
      <source relative_path="port/arch" type="c_include">
        <files mask="cc.h"/>
        <files mask="perf.h"/>
      </source>
      <source relative_path="src/api" type="src">
        <files mask="api_lib.c"/>
        <files mask="api_msg.c"/>
        <files mask="err.c"/>
        <files mask="if_api.c"/>
        <files mask="netbuf.c"/>
        <files mask="netdb.c"/>
        <files mask="netifapi.c"/>
        <files mask="sockets.c"/>
        <files mask="tcpip.c"/>
      </source>
      <source relative_path="src/core" type="src">
        <files mask="altcp.c"/>
        <files mask="altcp_alloc.c"/>
        <files mask="altcp_tcp.c"/>
        <files mask="def.c"/>
        <files mask="dns.c"/>
        <files mask="inet_chksum.c"/>
        <files mask="init.c"/>
        <files mask="ip.c"/>
        <files mask="mem.c"/>
        <files mask="memp.c"/>
        <files mask="netif.c"/>
        <files mask="pbuf.c"/>
        <files mask="raw.c"/>
        <files mask="stats.c"/>
        <files mask="sys.c"/>
        <files mask="tcp.c"/>
        <files mask="tcp_in.c"/>
        <files mask="tcp_out.c"/>
        <files mask="timeouts.c"/>
        <files mask="udp.c"/>
      </source>
      <source relative_path="src/core/ipv4" type="src">
        <files mask="acd.c"/>
        <files mask="autoip.c"/>
        <files mask="dhcp.c"/>
        <files mask="etharp.c"/>
        <files mask="icmp.c"/>
        <files mask="igmp.c"/>
        <files mask="ip4.c"/>
        <files mask="ip4_addr.c"/>
        <files mask="ip4_frag.c"/>
      </source>
      <source relative_path="src/core/ipv6" type="src">
        <files mask="dhcp6.c"/>
        <files mask="ethip6.c"/>
        <files mask="icmp6.c"/>
        <files mask="inet6.c"/>
        <files mask="ip6.c"/>
        <files mask="ip6_addr.c"/>
        <files mask="ip6_frag.c"/>
        <files mask="mld6.c"/>
        <files mask="nd6.c"/>
      </source>
      <source relative_path="src/include/compat/posix" type="c_include">
        <files mask="netdb.h"/>
      </source>
      <source relative_path="src/include/compat/posix/arpa" type="c_include">
        <files mask="inet.h"/>
      </source>
      <source relative_path="src/include/compat/posix/net" type="c_include">
        <files mask="if.h"/>
      </source>
      <source relative_path="src/include/compat/posix/sys" type="c_include">
        <files mask="socket.h"/>
      </source>
      <source relative_path="src/include/compat/stdc" type="c_include">
        <files mask="errno.h"/>
      </source>
      <source relative_path="src/include/lwip" type="c_include">
        <files mask="acd.h"/>
        <files mask="altcp.h"/>
        <files mask="altcp_tcp.h"/>
        <files mask="altcp_tls.h"/>
        <files mask="api.h"/>
        <files mask="arch.h"/>
        <files mask="autoip.h"/>
        <files mask="debug.h"/>
        <files mask="def.h"/>
        <files mask="dhcp.h"/>
        <files mask="dhcp6.h"/>
        <files mask="dns.h"/>
        <files mask="err.h"/>
        <files mask="errno.h"/>
        <files mask="etharp.h"/>
        <files mask="ethip6.h"/>
        <files mask="icmp.h"/>
        <files mask="icmp6.h"/>
        <files mask="if_api.h"/>
        <files mask="igmp.h"/>
        <files mask="inet.h"/>
        <files mask="inet_chksum.h"/>
        <files mask="init.h"/>
        <files mask="ip.h"/>
        <files mask="ip4.h"/>
        <files mask="ip4_addr.h"/>
        <files mask="ip4_frag.h"/>
        <files mask="ip6.h"/>
        <files mask="ip6_addr.h"/>
        <files mask="ip6_frag.h"/>
        <files mask="ip6_zone.h"/>
        <files mask="ip_addr.h"/>
        <files mask="mem.h"/>
        <files mask="memp.h"/>
        <files mask="mld6.h"/>
        <files mask="nd6.h"/>
        <files mask="netbuf.h"/>
        <files mask="netdb.h"/>
        <files mask="netif.h"/>
        <files mask="netifapi.h"/>
        <files mask="opt.h"/>
        <files mask="pbuf.h"/>
        <files mask="raw.h"/>
        <files mask="sio.h"/>
        <files mask="snmp.h"/>
        <files mask="sockets.h"/>
        <files mask="stats.h"/>
        <files mask="sys.h"/>
        <files mask="tcp.h"/>
        <files mask="tcpbase.h"/>
        <files mask="tcpip.h"/>
        <files mask="timeouts.h"/>
        <files mask="udp.h"/>
      </source>
      <source relative_path="src/include/lwip/priv" type="c_include">
        <files mask="altcp_priv.h"/>
        <files mask="api_msg.h"/>
        <files mask="memp_priv.h"/>
        <files mask="memp_std.h"/>
        <files mask="mem_priv.h"/>
        <files mask="nd6_priv.h"/>
        <files mask="raw_priv.h"/>
        <files mask="sockets_priv.h"/>
        <files mask="tcpip_priv.h"/>
        <files mask="tcp_priv.h"/>
      </source>
      <source relative_path="src/include/lwip/prot" type="c_include">
        <files mask="acd.h"/>
        <files mask="autoip.h"/>
        <files mask="dhcp.h"/>
        <files mask="dhcp6.h"/>
        <files mask="dns.h"/>
        <files mask="etharp.h"/>
        <files mask="ethernet.h"/>
        <files mask="iana.h"/>
        <files mask="icmp.h"/>
        <files mask="icmp6.h"/>
        <files mask="ieee.h"/>
        <files mask="igmp.h"/>
        <files mask="ip.h"/>
        <files mask="ip4.h"/>
        <files mask="ip6.h"/>
        <files mask="mld6.h"/>
        <files mask="nd6.h"/>
        <files mask="tcp.h"/>
        <files mask="udp.h"/>
      </source>
      <source relative_path="src/include/netif" type="c_include">
        <files mask="bridgeif.h"/>
        <files mask="bridgeif_opts.h"/>
        <files mask="etharp.h"/>
        <files mask="ethernet.h"/>
        <files mask="ieee802154.h"/>
        <files mask="lowpan6.h"/>
        <files mask="lowpan6_ble.h"/>
        <files mask="lowpan6_common.h"/>
        <files mask="lowpan6_opts.h"/>
        <files mask="slipif.h"/>
        <files mask="zepif.h"/>
      </source>
      <source relative_path="src/include/netif/ppp" type="c_include">
        <files mask="ccp.h"/>
        <files mask="chap-md5.h"/>
        <files mask="chap-new.h"/>
        <files mask="chap_ms.h"/>
        <files mask="eap.h"/>
        <files mask="ecp.h"/>
        <files mask="eui64.h"/>
        <files mask="fsm.h"/>
        <files mask="ipcp.h"/>
        <files mask="ipv6cp.h"/>
        <files mask="lcp.h"/>
        <files mask="magic.h"/>
        <files mask="mppe.h"/>
        <files mask="ppp.h"/>
        <files mask="pppapi.h"/>
        <files mask="pppcrypt.h"/>
        <files mask="pppdebug.h"/>
        <files mask="pppoe.h"/>
        <files mask="pppol2tp.h"/>
        <files mask="pppos.h"/>
        <files mask="ppp_impl.h"/>
        <files mask="ppp_opts.h"/>
        <files mask="upap.h"/>
        <files mask="vj.h"/>
      </source>
      <source relative_path="src/include/netif/ppp/polarssl" type="c_include">
        <files mask="arc4.h"/>
        <files mask="des.h"/>
        <files mask="md4.h"/>
        <files mask="md5.h"/>
        <files mask="sha1.h"/>
      </source>
      <source relative_path="src/netif" type="src">
        <files mask="bridgeif.c"/>
        <files mask="bridgeif_fdb.c"/>
        <files mask="ethernet.c"/>
        <files mask="lowpan6.c"/>
        <files mask="lowpan6_ble.c"/>
        <files mask="lowpan6_common.c"/>
        <files mask="slipif.c"/>
        <files mask="zepif.c"/>
      </source>
      <source relative_path="src/netif/ppp" type="src">
        <files mask="auth.c"/>
        <files mask="ccp.c"/>
        <files mask="chap-md5.c"/>
        <files mask="chap-new.c"/>
        <files mask="chap_ms.c"/>
        <files mask="demand.c"/>
        <files mask="eap.c"/>
        <files mask="ecp.c"/>
        <files mask="eui64.c"/>
        <files mask="fsm.c"/>
        <files mask="ipcp.c"/>
        <files mask="ipv6cp.c"/>
        <files mask="lcp.c"/>
        <files mask="magic.c"/>
        <files mask="mppe.c"/>
        <files mask="multilink.c"/>
        <files mask="ppp.c"/>
        <files mask="pppapi.c"/>
        <files mask="pppcrypt.c"/>
        <files mask="pppoe.c"/>
        <files mask="pppol2tp.c"/>
        <files mask="pppos.c"/>
        <files mask="upap.c"/>
        <files mask="utils.c"/>
        <files mask="vj.c"/>
      </source>
      <source relative_path="src/netif/ppp/polarssl" type="src_c">
        <files mask="arc4.c"/>
        <files mask="des.c"/>
        <files mask="md4.c"/>
        <files mask="md5.c"/>
        <files mask="sha1.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="src" type="c_include"/>
        <include_path relative_path="src/include" type="c_include"/>
        <include_path relative_path="src/include/lwip" type="c_include"/>
        <include_path relative_path="port" type="asm_include"/>
        <include_path relative_path="src" type="asm_include"/>
        <include_path relative_path="src/include" type="asm_include"/>
        <include_path relative_path="src/include/lwip" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.httpd.MIMXRT1173" name="lwIP_HTTPD" brief="lwIP HTTP Daemon" version="2.2.1" revision="2" full_name="lwIP HTTP Daemon" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1173"/>
          <component_dependency value="middleware.lwip.apps.httpd.support.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="src/apps/http" type="src">
        <files mask="httpd.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_httpd.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.lwip.apps.httpd.support.MIMXRT1173" name="lwIP_HTTPD_support" brief="lwIP HTTP Daemon Implementation Support Files" version="2.2.1" revision="2" full_name="lwIP HTTP Daemon Implementation Support Files" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source exclude="true" relative_path="src/apps/http" type="other">
        <files mask="fsdata.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/http/fs" type="other">
        <files mask="404.html" hidden="true"/>
        <files mask="index.html" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/http/fs/img" type="other">
        <files mask="sics.gif" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/http/makefsdata" type="other">
        <files mask="makefsdata" hidden="true"/>
        <files mask="makefsdata.c" hidden="true"/>
        <files mask="readme.txt" hidden="true"/>
        <files mask="tinydir.h" hidden="true"/>
      </source>
      <source relative_path="src/apps/http" type="src">
        <files mask="fs.c"/>
      </source>
      <source relative_path="src/apps/http" type="c_include">
        <files mask="fsdata.h"/>
        <files mask="httpd_structs.h"/>
      </source>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="fs.h"/>
        <files mask="httpd.h"/>
        <files mask="httpd_opts.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_httpd_support.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/apps/http" type="c_include"/>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
        <include_path relative_path="src/apps/http" type="asm_include"/>
        <include_path relative_path="src/include/lwip/apps" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.httpsrv.MIMXRT1173" name="lwIP_HTTP_srv" brief="lwIP HTTP Server Implementation" version="2.2.1" revision="2" full_name="lwIP HTTP Server" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1173"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source exclude="true" relative_path="src/apps/httpsrv/mkfs" type="other">
        <files mask="mkfs.pl" hidden="true"/>
      </source>
      <source relative_path="src/apps/httpsrv" type="src">
        <files mask="httpsrv.c"/>
        <files mask="httpsrv_base64.c"/>
        <files mask="httpsrv_fs.c"/>
        <files mask="httpsrv_script.c"/>
        <files mask="httpsrv_sha1.c"/>
        <files mask="httpsrv_supp.c"/>
        <files mask="httpsrv_task.c"/>
        <files mask="httpsrv_tls.c"/>
        <files mask="httpsrv_utf8.c"/>
        <files mask="httpsrv_ws.c"/>
        <files mask="httpsrv_ws_api.c"/>
      </source>
      <source relative_path="src/apps/httpsrv" type="c_include">
        <files mask="httpsrv.h"/>
        <files mask="httpsrv_base64.h"/>
        <files mask="httpsrv_config.h"/>
        <files mask="httpsrv_fs.h"/>
        <files mask="httpsrv_port.h"/>
        <files mask="httpsrv_prv.h"/>
        <files mask="httpsrv_script.h"/>
        <files mask="httpsrv_sha1.h"/>
        <files mask="httpsrv_supp.h"/>
        <files mask="httpsrv_tls.h"/>
        <files mask="httpsrv_utf8.h"/>
        <files mask="httpsrv_ws.h"/>
        <files mask="httpsrv_ws_prv.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_httpsrv.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/apps/httpsrv" type="c_include"/>
        <include_path relative_path="src/apps/httpsrv" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.httpssrv.MIMXRT1173" name="lwIP_HTTPS_srv" brief="lwIP HTTPS Server Implementation" version="2.2.1" revision="2" full_name="lwIP HTTPS Server" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <defines>
        <define name="MBEDTLS_THREADING_C" value=""/>
        <define name="MBEDTLS_THREADING_ALT" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.apps.httpsrv.MIMXRT1173"/>
          <component_dependency value="middleware.mbedtls.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_httpssrv.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.lwip.apps.lwiperf.MIMXRT1173" name="lwIP_IPERF" brief="lwIP IPERF Implementation" version="2.2.1" revision="2" full_name="lwIP IPERF" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <defines>
        <define name="SO_REUSE" value="1"/>
        <define name="PRINTF_FLOAT_ENABLE" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="src/apps/lwiperf" type="src">
        <files mask="lwiperf.c"/>
      </source>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="lwiperf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_lwiperf.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
        <include_path relative_path="src/include/lwip/apps" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.mdns.MIMXRT1173" name="lwIP_MDNS" brief="lwIP mDNS Implementation" version="2.2.1" revision="2" full_name="lwIP mDNS" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="src/apps/mdns" type="src">
        <files mask="mdns_domain.c"/>
        <files mask="mdns_out.c"/>
        <files mask="mdns.c"/>
      </source>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="mdns.h"/>
        <files mask="mdns_domain.h"/>
        <files mask="mdns_priv.h"/>
        <files mask="mdns_opts.h"/>
        <files mask="mdns_out.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_mdns.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
        <include_path relative_path="src/include/lwip/apps" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.mqtt.MIMXRT1173" name="lwIP_MQTT" brief="lwIP MQTT Client" version="2.2.1" revision="2" full_name="lwIP MQTT Client" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="src/apps/mqtt" type="src">
        <files mask="mqtt.c"/>
      </source>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="mqtt.h"/>
        <files mask="mqtt_opts.h"/>
        <files mask="mqtt_priv.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_mqtt.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
        <include_path relative_path="src/include/lwip/apps" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.sntp.MIMXRT1173" name="lwIP_SNTP" brief="lwIP SNTP" version="2.2.1" revision="2" full_name="lwIP SNTP" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="sntp.h"/>
        <files mask="sntp_opts.h"/>
      </source>
      <source relative_path="src/apps/sntp" type="src">
        <files mask="sntp.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_sntp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
        <include_path relative_path="src/include/lwip/apps" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.ping.MIMXRT1173" name="lwIP_ping" brief="lwIP Ping Sender contrib" version="2.2.1" revision="2" full_name="lwIP Ping Sender" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="contrib/apps/ping" type="src">
        <files mask="ping.c"/>
      </source>
      <source relative_path="contrib/apps/ping" type="c_include">
        <files mask="ping.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_contrib_ping.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/ping" type="c_include"/>
        <include_path relative_path="contrib/apps/ping" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.tcpecho.MIMXRT1173" name="lwIP_tcpecho" brief="lwIP TCP Echo contrib" version="2.2.1" revision="2" full_name="lwIP TCP Echo" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="contrib/apps/tcpecho" type="src">
        <files mask="tcpecho.c"/>
      </source>
      <source relative_path="contrib/apps/tcpecho" type="c_include">
        <files mask="tcpecho.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_contrib_tcpecho.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/tcpecho" type="c_include"/>
        <include_path relative_path="contrib/apps/tcpecho" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.tcpecho_raw.MIMXRT1173" name="lwIP_tcpecho_raw" brief="lwIP TCP Echo Raw API contrib" version="2.2.1" revision="2" full_name="lwIP TCP Echo Raw API" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="contrib/apps/tcpecho_raw" type="src">
        <files mask="tcpecho_raw.c"/>
      </source>
      <source relative_path="contrib/apps/tcpecho_raw" type="c_include">
        <files mask="tcpecho_raw.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_contrib_tcpecho_raw.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/tcpecho_raw" type="c_include"/>
        <include_path relative_path="contrib/apps/tcpecho_raw" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.udpecho.MIMXRT1173" name="lwIP_udpecho" brief="lwIP UDP Echo contrib" version="2.2.1" revision="2" full_name="lwIP UDP Echo" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="contrib/apps/udpecho" type="src">
        <files mask="udpecho.c"/>
      </source>
      <source relative_path="contrib/apps/udpecho" type="c_include">
        <files mask="udpecho.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_contrib_udpecho.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/udpecho" type="c_include"/>
        <include_path relative_path="contrib/apps/udpecho" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.udpecho_raw.MIMXRT1173" name="lwIP_udpecho_raw" brief="lwIP UDP Echo Raw API contrib" version="2.2.1" revision="2" full_name="lwIP UDP Echo Raw API" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="contrib/apps/udpecho_raw" type="src">
        <files mask="udpecho_raw.c"/>
      </source>
      <source relative_path="contrib/apps/udpecho_raw" type="c_include">
        <files mask="udpecho_raw.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_contrib_udpecho_raw.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/udpecho_raw" type="c_include"/>
        <include_path relative_path="contrib/apps/udpecho_raw" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.empty_ethernetif.MIMXRT1173" name="Empty ethernet interface" brief="Empty ethernet interface" version="2.2.1" revision="2" full_name="Empty ethernet interface" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="other">
        <files mask="README"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_empty_ethernetif.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.eoe_ethernetif.MIMXRT1173" name="EtherCAT EOE ethernet interface" brief="EtherCAT EOE ethernet interface" version="2.2.1" revision="2" full_name="EtherCAT EOE ethernet interface" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <defines>
        <define name="CHECKSUM_GEN_IP" value="1"/>
        <define name="CHECKSUM_GEN_UDP" value="1"/>
        <define name="CHECKSUM_GEN_TCP" value="1"/>
        <define name="CHECKSUM_GEN_ICMP" value="1"/>
        <define name="CHECKSUM_CHECK_ICMP" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1173"/>
          <component_dependency value="middleware.lwip.template.MIMXRT1173"/>
          <component_dependency value="middleware.lwip.sys_arch.dynamic.MIMXRT1173"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="port" type="src">
        <files mask="eoe_ethernetif.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="eoe_ethernetif.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_eoe_ethernetif.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.kinetis_ethernetif.MIMXRT1173" name="Kinetis enet ethernet interface" brief="Kinetis ethernet interface" version="2.2.1" revision="2" full_name="Kinetis ethernet interface" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <defines>
        <define name="LWIP_DISABLE_PBUF_POOL_SIZE_SANITY_CHECKS" value="1"/>
        <define name="LWIP_SUPPORT_CUSTOM_PBUF" value="1"/>
        <define name="CHECKSUM_GEN_UDP" value="1"/>
        <define name="CHECKSUM_GEN_TCP" value="1"/>
        <define name="CHECKSUM_GEN_ICMP" value="1"/>
        <define name="CHECKSUM_GEN_ICMP6" value="1"/>
        <define name="CHECKSUM_CHECK_UDP" value="1"/>
        <define name="CHECKSUM_CHECK_TCP" value="1"/>
        <define name="CHECKSUM_CHECK_ICMP" value="1"/>
        <define name="CHECKSUM_CHECK_ICMP6" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1173"/>
          <component_dependency value="platform.drivers.enet.MIMXRT1173"/>
          <component_dependency value="middleware.lwip.sys_arch.dynamic.MIMXRT1173"/>
          <component_dependency value="component.eth_phy_common.MIMXRT1173"/>
          <component_dependency value="component.igpio_adapter.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="port" type="src">
        <files mask="enet_ethernetif.c"/>
        <files mask="ethernetif.c"/>
        <files mask="ethernetif_mmac.c"/>
        <files mask="enet_ethernetif_kinetis.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="ethernetif.h"/>
        <files mask="ethernetif_mmac.h"/>
        <files mask="ethernetif_priv.h"/>
        <files mask="kinetis_configchecks.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_kinetis_ethernetif.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.sys_arch.dynamic.MIMXRT1173" name="Sys Arch Dynamic interface" brief="lwIP System Abstraction Layer using either FreeRTOS dynamic memory allocation APIs or bare-metal" version="2.2.1" revision="2" full_name="Sys Arch Dynamic interface" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="port/sys_arch/dynamic/arch" type="c_include">
        <files mask="sys_arch.h"/>
      </source>
      <source relative_path="port/sys_arch/dynamic" type="src">
        <files mask="sys_arch.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_sys_arch_dynamic.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/sys_arch/dynamic" type="c_include"/>
        <include_path relative_path="port/sys_arch/dynamic" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.sys_arch.static.MIMXRT1173" name="Sys Arch Static interface" brief="Experimental lwIP System Abstraction Layer using FreeRTOS static memory allocation APIs - it is not supported and not guaranteed to work, also might be removed in future" version="2.2.1" revision="2" full_name="Sys Arch Static interface - experimental" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1173"/>
          <component_dependency value="middleware.wifi.MIMXRT1173"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="port/sys_arch/static/arch" type="c_include">
        <files mask="sys_arch.h"/>
      </source>
      <source relative_path="port/sys_arch/static" type="src">
        <files mask="sys_arch.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_sys_arch_static.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/sys_arch/static" type="c_include"/>
        <include_path relative_path="port/sys_arch/static" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.template.MIMXRT1173" name="lwIP_template" brief="lwIP Template" version="2.2.1" revision="2" full_name="lwIP Template Application" category="Network/lwIP TCPIP Networking Stack" user_visible="false" type="project_template" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="template" config="true" type="c_include">
        <files mask="lwipopts.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.usb_ethernetif.MIMXRT1173" name="lwIP_usb_ethernetif" brief="USB network layer" version="2.2.1" revision="2" full_name="lwIP Adaptation for USB Network Layer" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.usb.host_cdc_ecm.MIMXRT1173"/>
            <component_dependency value="middleware.usb.host_cdc_rndis.MIMXRT1173"/>
          </any_of>
          <component_dependency value="middleware.lwip.MIMXRT1173"/>
          <component_dependency value="middleware.lwip.sys_arch.dynamic.MIMXRT1173"/>
          <component_dependency value="middleware.usb.host_cdc.MIMXRT1173"/>
          <component_dependency value="middleware.usb.host_controller_ehci.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="port" type="c_include">
        <files mask="usb_ethernetif.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_usb_ethernetif.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.usb_ethernetif.bm.MIMXRT1173" name="lwip usb_ethernetif bm" brief="Baremetal port layer for USB ethernet" version="2.2.1" revision="2" full_name="lwip usb_ethernetif bm" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <not>
            <component_dependency value="middleware.freertos-kernel.MIMXRT1173"/>
          </not>
          <component_dependency value="middleware.lwip.MIMXRT1173"/>
          <component_dependency value="middleware.lwip.usb_ethernetif.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="port" type="src">
        <files mask="usb_ethernetif_bm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_usb_ethernetif_bm.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.lwip.usb_ethernetif.freertos.MIMXRT1173" name="lwip usb_ethernetif freertos" brief="FreeRTOS port layer for USB ethernet" version="2.2.1" revision="2" full_name="lwip usb_ethernetif freertos" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT1173"/>
          <component_dependency value="middleware.lwip.usb_ethernetif.MIMXRT1173"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="port" type="src">
        <files mask="usb_ethernetif_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_usb_ethernetif_freertos.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.lvgl.MIMXRT1173" name="lvgl" brief="lvgl library" version="9.2.1" full_name="Middleware lvgl" category="Graphics/lvgl graphics library" user_visible="true" type="middleware" package_base_path="middleware/lvgl" project_base_path="lvgl">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.template.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="LICENCE.txt" hidden="true"/>
      </source>
      <source relative_path="src" type="src">
        <files mask="lv_init.c"/>
      </source>
      <source relative_path="src/core" type="src">
        <files mask="lv_group.c"/>
        <files mask="lv_obj.c"/>
        <files mask="lv_obj_class.c"/>
        <files mask="lv_obj_draw.c"/>
        <files mask="lv_obj_event.c"/>
        <files mask="lv_obj_id_builtin.c"/>
        <files mask="lv_obj_pos.c"/>
        <files mask="lv_obj_property.c"/>
        <files mask="lv_obj_scroll.c"/>
        <files mask="lv_obj_style.c"/>
        <files mask="lv_obj_style_gen.c"/>
        <files mask="lv_obj_tree.c"/>
        <files mask="lv_refr.c"/>
      </source>
      <source relative_path="src/display" type="src">
        <files mask="lv_display.c"/>
      </source>
      <source relative_path="src/draw" type="src">
        <files mask="lv_draw.c"/>
        <files mask="lv_draw_arc.c"/>
        <files mask="lv_draw_buf.c"/>
        <files mask="lv_draw_image.c"/>
        <files mask="lv_draw_label.c"/>
        <files mask="lv_draw_line.c"/>
        <files mask="lv_draw_mask.c"/>
        <files mask="lv_draw_rect.c"/>
        <files mask="lv_draw_triangle.c"/>
        <files mask="lv_draw_vector.c"/>
        <files mask="lv_image_decoder.c"/>
      </source>
      <source relative_path="src/draw/nxp/pxp" type="src">
        <files mask="lv_draw_buf_pxp.c"/>
        <files mask="lv_draw_pxp.c"/>
        <files mask="lv_draw_pxp_fill.c"/>
        <files mask="lv_draw_pxp_img.c"/>
        <files mask="lv_draw_pxp_layer.c"/>
        <files mask="lv_pxp_cfg.c"/>
        <files mask="lv_pxp_osa.c"/>
        <files mask="lv_pxp_utils.c"/>
      </source>
      <source relative_path="src/draw/nxp/vglite" type="src">
        <files mask="lv_draw_buf_vglite.c"/>
        <files mask="lv_draw_vglite.c"/>
        <files mask="lv_draw_vglite_arc.c"/>
        <files mask="lv_draw_vglite_border.c"/>
        <files mask="lv_draw_vglite_fill.c"/>
        <files mask="lv_draw_vglite_img.c"/>
        <files mask="lv_draw_vglite_label.c"/>
        <files mask="lv_draw_vglite_layer.c"/>
        <files mask="lv_draw_vglite_line.c"/>
        <files mask="lv_draw_vglite_triangle.c"/>
        <files mask="lv_vglite_buf.c"/>
        <files mask="lv_vglite_matrix.c"/>
        <files mask="lv_vglite_path.c"/>
        <files mask="lv_vglite_utils.c"/>
      </source>
      <source relative_path="src/draw/sdl" type="src">
        <files mask="lv_draw_sdl.c"/>
      </source>
      <source relative_path="src/draw/sw/blend" type="src">
        <files mask="lv_draw_sw_blend.c"/>
        <files mask="lv_draw_sw_blend_to_al88.c"/>
        <files mask="lv_draw_sw_blend_to_argb8888.c"/>
        <files mask="lv_draw_sw_blend_to_i1.c"/>
        <files mask="lv_draw_sw_blend_to_l8.c"/>
        <files mask="lv_draw_sw_blend_to_rgb565.c"/>
        <files mask="lv_draw_sw_blend_to_rgb888.c"/>
      </source>
      <source relative_path="src/draw/sw" type="src">
        <files mask="lv_draw_sw.c"/>
        <files mask="lv_draw_sw_arc.c"/>
        <files mask="lv_draw_sw_border.c"/>
        <files mask="lv_draw_sw_box_shadow.c"/>
        <files mask="lv_draw_sw_fill.c"/>
        <files mask="lv_draw_sw_gradient.c"/>
        <files mask="lv_draw_sw_img.c"/>
        <files mask="lv_draw_sw_letter.c"/>
        <files mask="lv_draw_sw_line.c"/>
        <files mask="lv_draw_sw_mask.c"/>
        <files mask="lv_draw_sw_mask_rect.c"/>
        <files mask="lv_draw_sw_transform.c"/>
        <files mask="lv_draw_sw_triangle.c"/>
        <files mask="lv_draw_sw_vector.c"/>
      </source>
      <source relative_path="src/drivers/display/drm" type="src">
        <files mask="lv_linux_drm.c"/>
      </source>
      <source relative_path="src/drivers/display/fb" type="src">
        <files mask="lv_linux_fbdev.c"/>
      </source>
      <source relative_path="src/drivers/display/ili9341" type="src">
        <files mask="lv_ili9341.c"/>
      </source>
      <source relative_path="src/drivers/display/lcd" type="src">
        <files mask="lv_lcd_generic_mipi.c"/>
      </source>
      <source relative_path="src/drivers/display/st7735" type="src">
        <files mask="lv_st7735.c"/>
      </source>
      <source relative_path="src/drivers/display/st7789" type="src">
        <files mask="lv_st7789.c"/>
      </source>
      <source relative_path="src/drivers/display/st7796" type="src">
        <files mask="lv_st7796.c"/>
      </source>
      <source relative_path="src/drivers/evdev" type="src">
        <files mask="lv_evdev.c"/>
      </source>
      <source relative_path="src/drivers/libinput" type="src">
        <files mask="lv_libinput.c"/>
        <files mask="lv_xkb.c"/>
      </source>
      <source relative_path="src/drivers/nuttx" type="src">
        <files mask="lv_nuttx_cache.c"/>
        <files mask="lv_nuttx_entry.c"/>
        <files mask="lv_nuttx_fbdev.c"/>
        <files mask="lv_nuttx_image_cache.c"/>
        <files mask="lv_nuttx_lcd.c"/>
        <files mask="lv_nuttx_libuv.c"/>
        <files mask="lv_nuttx_profiler.c"/>
        <files mask="lv_nuttx_touchscreen.c"/>
      </source>
      <source relative_path="src/drivers/sdl" type="src">
        <files mask="lv_sdl_keyboard.c"/>
        <files mask="lv_sdl_mouse.c"/>
        <files mask="lv_sdl_mousewheel.c"/>
        <files mask="lv_sdl_window.c"/>
      </source>
      <source relative_path="src/drivers/windows" type="src">
        <files mask="lv_windows_context.c"/>
        <files mask="lv_windows_display.c"/>
        <files mask="lv_windows_input.c"/>
      </source>
      <source relative_path="src/drivers/x11" type="src">
        <files mask="lv_x11_display.c"/>
        <files mask="lv_x11_input.c"/>
      </source>
      <source relative_path="src/drivers/glfw" type="src">
        <files mask="lv_glfw_window.c"/>
        <files mask="lv_opengles_debug.c"/>
        <files mask="lv_opengles_driver.c"/>
        <files mask="lv_opengles_texture.c"/>
      </source>
      <source relative_path="src/drivers/qnx" type="src">
        <files mask="lv_qnx.c"/>
      </source>
      <source relative_path="src/drivers/wayland" type="src">
        <files mask="lv_wayland.c"/>
        <files mask="lv_wayland_smm.c"/>
      </source>
      <source relative_path="src/font" type="src">
        <files mask="lv_binfont_loader.c"/>
        <files mask="lv_font.c"/>
        <files mask="lv_font_dejavu_16_persian_hebrew.c"/>
        <files mask="lv_font_fmt_txt.c"/>
        <files mask="lv_font_montserrat_10.c"/>
        <files mask="lv_font_montserrat_12.c"/>
        <files mask="lv_font_montserrat_14.c"/>
        <files mask="lv_font_montserrat_16.c"/>
        <files mask="lv_font_montserrat_18.c"/>
        <files mask="lv_font_montserrat_20.c"/>
        <files mask="lv_font_montserrat_22.c"/>
        <files mask="lv_font_montserrat_24.c"/>
        <files mask="lv_font_montserrat_26.c"/>
        <files mask="lv_font_montserrat_28.c"/>
        <files mask="lv_font_montserrat_28_compressed.c"/>
        <files mask="lv_font_montserrat_30.c"/>
        <files mask="lv_font_montserrat_32.c"/>
        <files mask="lv_font_montserrat_34.c"/>
        <files mask="lv_font_montserrat_36.c"/>
        <files mask="lv_font_montserrat_38.c"/>
        <files mask="lv_font_montserrat_40.c"/>
        <files mask="lv_font_montserrat_42.c"/>
        <files mask="lv_font_montserrat_44.c"/>
        <files mask="lv_font_montserrat_46.c"/>
        <files mask="lv_font_montserrat_48.c"/>
        <files mask="lv_font_montserrat_8.c"/>
        <files mask="lv_font_simsun_14_cjk.c"/>
        <files mask="lv_font_simsun_16_cjk.c"/>
        <files mask="lv_font_unscii_16.c"/>
        <files mask="lv_font_unscii_8.c"/>
      </source>
      <source relative_path="src/indev" type="src">
        <files mask="lv_indev.c"/>
        <files mask="lv_indev_scroll.c"/>
      </source>
      <source relative_path="src/layouts/flex" type="src">
        <files mask="lv_flex.c"/>
      </source>
      <source relative_path="src/layouts/grid" type="src">
        <files mask="lv_grid.c"/>
      </source>
      <source relative_path="src/layouts" type="src">
        <files mask="lv_layout.c"/>
      </source>
      <source relative_path="src/libs/barcode" type="src">
        <files mask="code128.c"/>
        <files mask="lv_barcode.c"/>
      </source>
      <source relative_path="src/libs/bin_decoder" type="src">
        <files mask="lv_bin_decoder.c"/>
      </source>
      <source relative_path="src/libs/bmp" type="src">
        <files mask="lv_bmp.c"/>
      </source>
      <source relative_path="src/libs/ffmpeg" type="src">
        <files mask="lv_ffmpeg.c"/>
      </source>
      <source relative_path="src/libs/freetype" type="src">
        <files mask="lv_freetype.c"/>
        <files mask="lv_freetype_glyph.c"/>
        <files mask="lv_freetype_image.c"/>
        <files mask="lv_freetype_outline.c"/>
        <files mask="lv_ftsystem.c"/>
      </source>
      <source relative_path="src/libs/fsdrv" type="src">
        <files mask="lv_fs_cbfs.c"/>
        <files mask="lv_fs_fatfs.c"/>
        <files mask="lv_fs_littlefs.c"/>
        <files mask="lv_fs_memfs.c"/>
        <files mask="lv_fs_posix.c"/>
        <files mask="lv_fs_rawfs.c"/>
        <files mask="lv_fs_stdio.c"/>
        <files mask="lv_fs_win32.c"/>
      </source>
      <source relative_path="src/libs/gif" type="src">
        <files mask="gifdec.c"/>
        <files mask="lv_gif.c"/>
      </source>
      <source relative_path="src/libs/libjpeg_turbo" type="src">
        <files mask="lv_libjpeg_turbo.c"/>
      </source>
      <source relative_path="src/libs/libpng" type="src">
        <files mask="lv_libpng.c"/>
      </source>
      <source relative_path="src/libs/lodepng" type="src">
        <files mask="lodepng.c"/>
        <files mask="lv_lodepng.c"/>
      </source>
      <source relative_path="src/libs/lz4" type="src">
        <files mask="lz4.c"/>
      </source>
      <source relative_path="src/libs/qrcode" type="src">
        <files mask="lv_qrcode.c"/>
        <files mask="qrcodegen.c"/>
      </source>
      <source relative_path="src/libs/rle" type="src">
        <files mask="lv_rle.c"/>
      </source>
      <source relative_path="src/libs/rlottie" type="src">
        <files mask="lv_rlottie.c"/>
      </source>
      <source relative_path="src/libs/tiny_ttf" type="src">
        <files mask="lv_tiny_ttf.c"/>
      </source>
      <source relative_path="src/libs/tjpgd" type="src">
        <files mask="lv_tjpgd.c"/>
        <files mask="tjpgd.c"/>
      </source>
      <source relative_path="src/misc/cache" type="src">
        <files mask="lv_cache.c"/>
        <files mask="lv_cache_entry.c"/>
        <files mask="lv_cache_lru_rb.c"/>
        <files mask="lv_image_cache.c"/>
        <files mask="lv_image_header_cache.c"/>
      </source>
      <source relative_path="src/misc" type="src">
        <files mask="lv_anim.c"/>
        <files mask="lv_anim_timeline.c"/>
        <files mask="lv_area.c"/>
        <files mask="lv_array.c"/>
        <files mask="lv_async.c"/>
        <files mask="lv_bidi.c"/>
        <files mask="lv_color.c"/>
        <files mask="lv_color_op.c"/>
        <files mask="lv_event.c"/>
        <files mask="lv_fs.c"/>
        <files mask="lv_ll.c"/>
        <files mask="lv_log.c"/>
        <files mask="lv_lru.c"/>
        <files mask="lv_math.c"/>
        <files mask="lv_matrix.c"/>
        <files mask="lv_palette.c"/>
        <files mask="lv_profiler_builtin.c"/>
        <files mask="lv_rb.c"/>
        <files mask="lv_style.c"/>
        <files mask="lv_style_gen.c"/>
        <files mask="lv_templ.c"/>
        <files mask="lv_text.c"/>
        <files mask="lv_text_ap.c"/>
        <files mask="lv_timer.c"/>
        <files mask="lv_utils.c"/>
      </source>
      <source relative_path="src/osal" type="src">
        <files mask="lv_cmsis_rtos2.c"/>
        <files mask="lv_freertos.c"/>
        <files mask="lv_mqx.c"/>
        <files mask="lv_os.c"/>
        <files mask="lv_os_none.c"/>
        <files mask="lv_pthread.c"/>
        <files mask="lv_rtthread.c"/>
        <files mask="lv_windows.c"/>
      </source>
      <source relative_path="src/others/file_explorer" type="src">
        <files mask="lv_file_explorer.c"/>
      </source>
      <source relative_path="src/others/fragment" type="src">
        <files mask="lv_fragment.c"/>
        <files mask="lv_fragment_manager.c"/>
      </source>
      <source relative_path="src/others/gridnav" type="src">
        <files mask="lv_gridnav.c"/>
      </source>
      <source relative_path="src/others/ime" type="src">
        <files mask="lv_ime_pinyin.c"/>
      </source>
      <source relative_path="src/others/imgfont" type="src">
        <files mask="lv_imgfont.c"/>
      </source>
      <source relative_path="src/others/monkey" type="src">
        <files mask="lv_monkey.c"/>
      </source>
      <source relative_path="src/others/observer" type="src">
        <files mask="lv_observer.c"/>
      </source>
      <source relative_path="src/others/snapshot" type="src">
        <files mask="lv_snapshot.c"/>
      </source>
      <source relative_path="src/others/sysmon" type="src">
        <files mask="lv_sysmon.c"/>
      </source>
      <source relative_path="src/others/vg_lite_tvg" type="src">
        <files mask="vg_lite_matrix.c"/>
      </source>
      <source relative_path="src/stdlib/builtin" type="src">
        <files mask="lv_mem_core_builtin.c"/>
        <files mask="lv_sprintf_builtin.c"/>
        <files mask="lv_string_builtin.c"/>
        <files mask="lv_tlsf.c"/>
      </source>
      <source relative_path="src/stdlib/clib" type="src">
        <files mask="lv_mem_core_clib.c"/>
        <files mask="lv_sprintf_clib.c"/>
        <files mask="lv_string_clib.c"/>
      </source>
      <source relative_path="src/stdlib" type="src">
        <files mask="lv_mem.c"/>
      </source>
      <source relative_path="src/stdlib/micropython" type="src">
        <files mask="lv_mem_core_micropython.c"/>
      </source>
      <source relative_path="src/stdlib/rtthread" type="src">
        <files mask="lv_mem_core_rtthread.c"/>
        <files mask="lv_sprintf_rtthread.c"/>
        <files mask="lv_string_rtthread.c"/>
      </source>
      <source relative_path="src/themes/default" type="src">
        <files mask="lv_theme_default.c"/>
      </source>
      <source relative_path="src/themes" type="src">
        <files mask="lv_theme.c"/>
      </source>
      <source relative_path="src/themes/mono" type="src">
        <files mask="lv_theme_mono.c"/>
      </source>
      <source relative_path="src/themes/simple" type="src">
        <files mask="lv_theme_simple.c"/>
      </source>
      <source relative_path="src/tick" type="src">
        <files mask="lv_tick.c"/>
      </source>
      <source relative_path="src/widgets/animimage" type="src">
        <files mask="lv_animimage.c"/>
      </source>
      <source relative_path="src/widgets/arc" type="src">
        <files mask="lv_arc.c"/>
      </source>
      <source relative_path="src/widgets/bar" type="src">
        <files mask="lv_bar.c"/>
      </source>
      <source relative_path="src/widgets/button" type="src">
        <files mask="lv_button.c"/>
      </source>
      <source relative_path="src/widgets/buttonmatrix" type="src">
        <files mask="lv_buttonmatrix.c"/>
      </source>
      <source relative_path="src/widgets/calendar" type="src">
        <files mask="lv_calendar.c"/>
        <files mask="lv_calendar_chinese.c"/>
        <files mask="lv_calendar_header_arrow.c"/>
        <files mask="lv_calendar_header_dropdown.c"/>
      </source>
      <source relative_path="src/widgets/carousel" type="src">
        <files mask="lv_carousel.c"/>
      </source>
      <source relative_path="src/widgets/canvas" type="src">
        <files mask="lv_canvas.c"/>
      </source>
      <source relative_path="src/widgets/chart" type="src">
        <files mask="lv_chart.c"/>
      </source>
      <source relative_path="src/widgets/checkbox" type="src">
        <files mask="lv_checkbox.c"/>
      </source>
      <source relative_path="src/widgets/dropdown" type="src">
        <files mask="lv_dropdown.c"/>
      </source>
      <source relative_path="src/widgets/image" type="src">
        <files mask="lv_image.c"/>
      </source>
      <source relative_path="src/widgets/imagebutton" type="src">
        <files mask="lv_imagebutton.c"/>
      </source>
      <source relative_path="src/widgets/keyboard" type="src">
        <files mask="lv_keyboard.c"/>
      </source>
      <source relative_path="src/widgets/label" type="src">
        <files mask="lv_label.c"/>
      </source>
      <source relative_path="src/widgets/led" type="src">
        <files mask="lv_led.c"/>
      </source>
      <source relative_path="src/widgets/line" type="src">
        <files mask="lv_line.c"/>
      </source>
      <source relative_path="src/widgets/list" type="src">
        <files mask="lv_list.c"/>
      </source>
      <source relative_path="src/widgets/lottie" type="src">
        <files mask="lv_lottie.c"/>
      </source>
      <source relative_path="src/widgets/menu" type="src">
        <files mask="lv_menu.c"/>
      </source>
      <source relative_path="src/widgets/msgbox" type="src">
        <files mask="lv_msgbox.c"/>
      </source>
      <source relative_path="src/widgets/objx_templ" type="src">
        <files mask="lv_objx_templ.c"/>
      </source>
      <source relative_path="src/widgets/roller" type="src">
        <files mask="lv_roller.c"/>
      </source>
      <source relative_path="src/widgets/scale" type="src">
        <files mask="lv_scale.c"/>
      </source>
      <source relative_path="src/widgets/slider" type="src">
        <files mask="lv_slider.c"/>
      </source>
      <source relative_path="src/widgets/span" type="src">
        <files mask="lv_span.c"/>
      </source>
      <source relative_path="src/widgets/spinbox" type="src">
        <files mask="lv_spinbox.c"/>
      </source>
      <source relative_path="src/widgets/spinner" type="src">
        <files mask="lv_spinner.c"/>
      </source>
      <source relative_path="src/widgets/switch" type="src">
        <files mask="lv_switch.c"/>
      </source>
      <source relative_path="src/widgets/table" type="src">
        <files mask="lv_table.c"/>
      </source>
      <source relative_path="src/widgets/tabview" type="src">
        <files mask="lv_tabview.c"/>
      </source>
      <source relative_path="src/widgets/textarea" type="src">
        <files mask="lv_textarea.c"/>
      </source>
      <source relative_path="src/widgets/tileview" type="src">
        <files mask="lv_tileview.c"/>
      </source>
      <source relative_path="src/widgets/win" type="src">
        <files mask="lv_win.c"/>
      </source>
      <source relative_path="src" type="c_include">
        <files mask="lv_api_map_v8.h"/>
        <files mask="lv_api_map_v9_0.h"/>
        <files mask="lv_api_map_v9_1.h"/>
        <files mask="lv_conf_internal.h"/>
        <files mask="lv_conf_kconfig.h"/>
        <files mask="lv_init.h"/>
        <files mask="lvgl.h"/>
        <files mask="lvgl_private.h"/>
      </source>
      <source relative_path="src/core" type="c_include">
        <files mask="lv_global.h"/>
        <files mask="lv_group.h"/>
        <files mask="lv_group_private.h"/>
        <files mask="lv_obj.h"/>
        <files mask="lv_obj_class.h"/>
        <files mask="lv_obj_class_private.h"/>
        <files mask="lv_obj_draw.h"/>
        <files mask="lv_obj_draw_private.h"/>
        <files mask="lv_obj_event.h"/>
        <files mask="lv_obj_event_private.h"/>
        <files mask="lv_obj_pos.h"/>
        <files mask="lv_obj_private.h"/>
        <files mask="lv_obj_property.h"/>
        <files mask="lv_obj_scroll.h"/>
        <files mask="lv_obj_scroll_private.h"/>
        <files mask="lv_obj_style.h"/>
        <files mask="lv_obj_style_gen.h"/>
        <files mask="lv_obj_style_private.h"/>
        <files mask="lv_obj_tree.h"/>
        <files mask="lv_refr.h"/>
        <files mask="lv_refr_private.h"/>
      </source>
      <source relative_path="src/display" type="c_include">
        <files mask="lv_display.h"/>
        <files mask="lv_display_private.h"/>
      </source>
      <source relative_path="src/draw" type="c_include">
        <files mask="lv_draw.h"/>
        <files mask="lv_draw_arc.h"/>
        <files mask="lv_draw_buf.h"/>
        <files mask="lv_draw_buf_private.h"/>
        <files mask="lv_draw_image.h"/>
        <files mask="lv_draw_image_private.h"/>
        <files mask="lv_draw_label.h"/>
        <files mask="lv_draw_label_private.h"/>
        <files mask="lv_draw_line.h"/>
        <files mask="lv_draw_mask.h"/>
        <files mask="lv_draw_mask_private.h"/>
        <files mask="lv_draw_private.h"/>
        <files mask="lv_draw_rect.h"/>
        <files mask="lv_draw_rect_private.h"/>
        <files mask="lv_draw_triangle.h"/>
        <files mask="lv_draw_triangle_private.h"/>
        <files mask="lv_draw_vector.h"/>
        <files mask="lv_draw_vector_private.h"/>
        <files mask="lv_image_decoder.h"/>
        <files mask="lv_image_decoder_private.h"/>
        <files mask="lv_image_dsc.h"/>
      </source>
      <source relative_path="src/draw/nxp/pxp" type="c_include">
        <files mask="lv_draw_pxp.h"/>
        <files mask="lv_pxp_cfg.h"/>
        <files mask="lv_pxp_osa.h"/>
        <files mask="lv_pxp_utils.h"/>
      </source>
      <source relative_path="src/draw/nxp/vglite" type="c_include">
        <files mask="lv_draw_vglite.h"/>
        <files mask="lv_vglite_buf.h"/>
        <files mask="lv_vglite_matrix.h"/>
        <files mask="lv_vglite_path.h"/>
        <files mask="lv_vglite_utils.h"/>
      </source>
      <source relative_path="src/draw/sdl" type="c_include">
        <files mask="lv_draw_sdl.h"/>
      </source>
      <source relative_path="src/draw/sw/arm2d" type="c_include">
        <files mask="lv_draw_sw_arm2d.h"/>
        <files mask="lv_draw_sw_helium.h"/>
      </source>
      <source relative_path="src/draw/sw/blend/arm2d" type="c_include">
        <files mask="lv_blend_arm2d.h"/>
      </source>
      <source relative_path="src/draw/sw/blend" type="c_include">
        <files mask="lv_draw_sw_blend.h"/>
        <files mask="lv_draw_sw_blend_private.h"/>
        <files mask="lv_draw_sw_blend_to_al88.h"/>
        <files mask="lv_draw_sw_blend_to_argb8888.h"/>
        <files mask="lv_draw_sw_blend_to_i1.h"/>
        <files mask="lv_draw_sw_blend_to_l8.h"/>
        <files mask="lv_draw_sw_blend_to_rgb565.h"/>
        <files mask="lv_draw_sw_blend_to_rgb888.h"/>
      </source>
      <source relative_path="src/draw/sw/blend/neon" type="c_include">
        <files mask="lv_blend_neon.h"/>
      </source>
      <source relative_path="src/draw/sw" type="c_include">
        <files mask="lv_draw_sw.h"/>
        <files mask="lv_draw_sw_gradient.h"/>
        <files mask="lv_draw_sw_gradient_private.h"/>
        <files mask="lv_draw_sw_mask.h"/>
        <files mask="lv_draw_sw_mask_private.h"/>
        <files mask="lv_draw_sw_private.h"/>
      </source>
      <source relative_path="src/drivers" type="c_include">
        <files mask="lv_drivers.h"/>
      </source>
      <source relative_path="src/drivers/display/drm" type="c_include">
        <files mask="lv_linux_drm.h"/>
      </source>
      <source relative_path="src/drivers/display/fb" type="c_include">
        <files mask="lv_linux_fbdev.h"/>
      </source>
      <source relative_path="src/drivers/display/ili9341" type="c_include">
        <files mask="lv_ili9341.h"/>
      </source>
      <source relative_path="src/drivers/display/lcd" type="c_include">
        <files mask="lv_lcd_generic_mipi.h"/>
      </source>
      <source relative_path="src/drivers/display/st7735" type="c_include">
        <files mask="lv_st7735.h"/>
      </source>
      <source relative_path="src/drivers/display/st7789" type="c_include">
        <files mask="lv_st7789.h"/>
      </source>
      <source relative_path="src/drivers/display/st7796" type="c_include">
        <files mask="lv_st7796.h"/>
      </source>
      <source relative_path="src/drivers/display/tft_espi" type="c_include">
        <files mask="lv_tft_espi.h"/>
      </source>
      <source relative_path="src/drivers/evdev" type="c_include">
        <files mask="lv_evdev.h"/>
      </source>
      <source relative_path="src/drivers/libinput" type="c_include">
        <files mask="lv_libinput.h"/>
        <files mask="lv_libinput_private.h"/>
        <files mask="lv_xkb.h"/>
        <files mask="lv_xkb_private.h"/>
      </source>
      <source relative_path="src/drivers/nuttx" type="c_include">
        <files mask="lv_nuttx_cache.h"/>
        <files mask="lv_nuttx_entry.h"/>
        <files mask="lv_nuttx_fbdev.h"/>
        <files mask="lv_nuttx_image_cache.h"/>
        <files mask="lv_nuttx_lcd.h"/>
        <files mask="lv_nuttx_libuv.h"/>
        <files mask="lv_nuttx_profiler.h"/>
        <files mask="lv_nuttx_touchscreen.h"/>
      </source>
      <source relative_path="src/drivers/sdl" type="c_include">
        <files mask="lv_sdl_keyboard.h"/>
        <files mask="lv_sdl_mouse.h"/>
        <files mask="lv_sdl_mousewheel.h"/>
        <files mask="lv_sdl_private.h"/>
        <files mask="lv_sdl_window.h"/>
      </source>
      <source relative_path="src/drivers/windows" type="c_include">
        <files mask="lv_windows_context.h"/>
        <files mask="lv_windows_display.h"/>
        <files mask="lv_windows_input.h"/>
        <files mask="lv_windows_input_private.h"/>
      </source>
      <source relative_path="src/drivers/x11" type="c_include">
        <files mask="lv_x11.h"/>
      </source>
      <source relative_path="src/drivers/glfw" type="c_include">
        <files mask="lv_glfw_window.h"/>
        <files mask="lv_glfw_window_private.h"/>
        <files mask="lv_opengles_debug.h"/>
        <files mask="lv_opengles_driver.h"/>
        <files mask="lv_opengles_texture.h"/>
      </source>
      <source relative_path="src/drivers/qnx" type="c_include">
        <files mask="lv_qnx.h"/>
      </source>
      <source relative_path="src/drivers/wayland" type="c_include">
        <files mask="lv_wayland.h"/>
        <files mask="lv_wayland_smm.h"/>
      </source>
      <source relative_path="src/font" type="c_include">
        <files mask="lv_binfont_loader.h"/>
        <files mask="lv_font.h"/>
        <files mask="lv_font_fmt_txt.h"/>
        <files mask="lv_font_fmt_txt_private.h"/>
        <files mask="lv_symbol_def.h"/>
      </source>
      <source relative_path="src/indev" type="c_include">
        <files mask="lv_indev.h"/>
        <files mask="lv_indev_private.h"/>
        <files mask="lv_indev_scroll.h"/>
      </source>
      <source relative_path="src/layouts/flex" type="c_include">
        <files mask="lv_flex.h"/>
      </source>
      <source relative_path="src/layouts/grid" type="c_include">
        <files mask="lv_grid.h"/>
      </source>
      <source relative_path="src/layouts" type="c_include">
        <files mask="lv_layout.h"/>
        <files mask="lv_layout_private.h"/>
      </source>
      <source relative_path="src/libs/barcode" type="c_include">
        <files mask="code128.h"/>
        <files mask="lv_barcode.h"/>
        <files mask="lv_barcode_private.h"/>
      </source>
      <source relative_path="src/libs/bin_decoder" type="c_include">
        <files mask="lv_bin_decoder.h"/>
      </source>
      <source relative_path="src/libs/bmp" type="c_include">
        <files mask="lv_bmp.h"/>
      </source>
      <source relative_path="src/libs/ffmpeg" type="c_include">
        <files mask="lv_ffmpeg.h"/>
        <files mask="lv_ffmpeg_private.h"/>
      </source>
      <source relative_path="src/libs/freetype" type="c_include">
        <files mask="ftmodule.h"/>
        <files mask="ftoption.h"/>
        <files mask="lv_freetype.h"/>
        <files mask="lv_freetype_private.h"/>
      </source>
      <source relative_path="src/libs/fsdrv" type="c_include">
        <files mask="lv_fsdrv.h"/>
      </source>
      <source relative_path="src/libs/gif" type="c_include">
        <files mask="gifdec.h"/>
        <files mask="gifdec_mve.h"/>
        <files mask="lv_gif.h"/>
        <files mask="lv_gif_private.h"/>
      </source>
      <source relative_path="src/libs/libjpeg_turbo" type="c_include">
        <files mask="lv_libjpeg_turbo.h"/>
      </source>
      <source relative_path="src/libs/libpng" type="c_include">
        <files mask="lv_libpng.h"/>
      </source>
      <source relative_path="src/libs/lodepng" type="c_include">
        <files mask="lodepng.h"/>
        <files mask="lv_lodepng.h"/>
      </source>
      <source relative_path="src/libs/lz4" type="c_include">
        <files mask="lz4.h"/>
      </source>
      <source relative_path="src/libs/qrcode" type="c_include">
        <files mask="lv_qrcode.h"/>
        <files mask="lv_qrcode_private.h"/>
        <files mask="qrcodegen.h"/>
      </source>
      <source relative_path="src/libs/rle" type="c_include">
        <files mask="lv_rle.h"/>
      </source>
      <source relative_path="src/libs/rlottie" type="c_include">
        <files mask="lv_rlottie.h"/>
        <files mask="lv_rlottie_private.h"/>
      </source>
      <source relative_path="src/libs/thorvg" type="c_include">
        <files mask="config.h"/>
        <files mask="thorvg.h"/>
        <files mask="thorvg_capi.h"/>
        <files mask="thorvg_lottie.h"/>
        <files mask="tvgAnimation.h"/>
        <files mask="tvgArray.h"/>
        <files mask="tvgBinaryDesc.h"/>
        <files mask="tvgCanvas.h"/>
        <files mask="tvgCommon.h"/>
        <files mask="tvgCompressor.h"/>
        <files mask="tvgFill.h"/>
        <files mask="tvgFrameModule.h"/>
        <files mask="tvgInlist.h"/>
        <files mask="tvgIteratorAccessor.h"/>
        <files mask="tvgLines.h"/>
        <files mask="tvgLoadModule.h"/>
        <files mask="tvgLoader.h"/>
        <files mask="tvgLock.h"/>
        <files mask="tvgLottieBuilder.h"/>
        <files mask="tvgLottieExpressions.h"/>
        <files mask="tvgLottieInterpolator.h"/>
        <files mask="tvgLottieLoader.h"/>
        <files mask="tvgLottieModel.h"/>
        <files mask="tvgLottieParser.h"/>
        <files mask="tvgLottieParserHandler.h"/>
        <files mask="tvgLottieProperty.h"/>
        <files mask="tvgMath.h"/>
        <files mask="tvgPaint.h"/>
        <files mask="tvgPicture.h"/>
        <files mask="tvgRawLoader.h"/>
        <files mask="tvgRender.h"/>
        <files mask="tvgSaveModule.h"/>
        <files mask="tvgScene.h"/>
        <files mask="tvgShape.h"/>
        <files mask="tvgStr.h"/>
        <files mask="tvgSvgCssStyle.h"/>
        <files mask="tvgSvgLoader.h"/>
        <files mask="tvgSvgLoaderCommon.h"/>
        <files mask="tvgSvgPath.h"/>
        <files mask="tvgSvgSceneBuilder.h"/>
        <files mask="tvgSvgUtil.h"/>
        <files mask="tvgSwCommon.h"/>
        <files mask="tvgSwRasterAvx.h"/>
        <files mask="tvgSwRasterC.h"/>
        <files mask="tvgSwRasterNeon.h"/>
        <files mask="tvgSwRasterTexmap.h"/>
        <files mask="tvgSwRenderer.h"/>
        <files mask="tvgTaskScheduler.h"/>
        <files mask="tvgText.h"/>
        <files mask="tvgXmlParser.h"/>
      </source>
      <source relative_path="src/libs/tiny_ttf" type="c_include">
        <files mask="lv_tiny_ttf.h"/>
        <files mask="stb_rect_pack.h"/>
        <files mask="stb_truetype_htcw.h"/>
      </source>
      <source relative_path="src/libs/tjpgd" type="c_include">
        <files mask="lv_tjpgd.h"/>
        <files mask="tjpgd.h"/>
        <files mask="tjpgdcnf.h"/>
      </source>
      <source relative_path="src/misc/cache" type="c_include">
        <files mask="lv_cache.h"/>
        <files mask="lv_cache_entry.h"/>
        <files mask="lv_cache_entry_private.h"/>
        <files mask="lv_cache_lru_rb.h"/>
        <files mask="lv_cache_private.h"/>
        <files mask="lv_image_cache.h"/>
        <files mask="lv_image_header_cache.h"/>
      </source>
      <source relative_path="src/misc" type="c_include">
        <files mask="lv_anim.h"/>
        <files mask="lv_anim_private.h"/>
        <files mask="lv_anim_timeline.h"/>
        <files mask="lv_area.h"/>
        <files mask="lv_area_private.h"/>
        <files mask="lv_array.h"/>
        <files mask="lv_assert.h"/>
        <files mask="lv_async.h"/>
        <files mask="lv_bidi.h"/>
        <files mask="lv_bidi_private.h"/>
        <files mask="lv_color.h"/>
        <files mask="lv_color_op.h"/>
        <files mask="lv_color_op_private.h"/>
        <files mask="lv_event.h"/>
        <files mask="lv_event_private.h"/>
        <files mask="lv_fs.h"/>
        <files mask="lv_fs_private.h"/>
        <files mask="lv_ll.h"/>
        <files mask="lv_log.h"/>
        <files mask="lv_lru.h"/>
        <files mask="lv_math.h"/>
        <files mask="lv_matrix.h"/>
        <files mask="lv_palette.h"/>
        <files mask="lv_profiler.h"/>
        <files mask="lv_profiler_builtin.h"/>
        <files mask="lv_profiler_builtin_private.h"/>
        <files mask="lv_rb.h"/>
        <files mask="lv_rb_private.h"/>
        <files mask="lv_style.h"/>
        <files mask="lv_style_gen.h"/>
        <files mask="lv_style_private.h"/>
        <files mask="lv_templ.h"/>
        <files mask="lv_text.h"/>
        <files mask="lv_text_ap.h"/>
        <files mask="lv_text_private.h"/>
        <files mask="lv_timer.h"/>
        <files mask="lv_timer_private.h"/>
        <files mask="lv_types.h"/>
        <files mask="lv_utils.h"/>
      </source>
      <source relative_path="src/osal" type="c_include">
        <files mask="lv_cmsis_rtos2.h"/>
        <files mask="lv_freertos.h"/>
        <files mask="lv_mqx.h"/>
        <files mask="lv_os.h"/>
        <files mask="lv_os_none.h"/>
        <files mask="lv_os_private.h"/>
        <files mask="lv_pthread.h"/>
        <files mask="lv_rtthread.h"/>
        <files mask="lv_windows.h"/>
      </source>
      <source relative_path="src/others/file_explorer" type="c_include">
        <files mask="lv_file_explorer.h"/>
        <files mask="lv_file_explorer_private.h"/>
      </source>
      <source relative_path="src/others/fragment" type="c_include">
        <files mask="lv_fragment.h"/>
        <files mask="lv_fragment_private.h"/>
      </source>
      <source relative_path="src/others/gridnav" type="c_include">
        <files mask="lv_gridnav.h"/>
      </source>
      <source relative_path="src/others/ime" type="c_include">
        <files mask="lv_ime_pinyin.h"/>
        <files mask="lv_ime_pinyin_private.h"/>
      </source>
      <source relative_path="src/others/imgfont" type="c_include">
        <files mask="lv_imgfont.h"/>
      </source>
      <source relative_path="src/others/monkey" type="c_include">
        <files mask="lv_monkey.h"/>
        <files mask="lv_monkey_private.h"/>
      </source>
      <source relative_path="src/others/observer" type="c_include">
        <files mask="lv_observer.h"/>
        <files mask="lv_observer_private.h"/>
      </source>
      <source relative_path="src/others/snapshot" type="c_include">
        <files mask="lv_snapshot.h"/>
      </source>
      <source relative_path="src/others/sysmon" type="c_include">
        <files mask="lv_sysmon.h"/>
        <files mask="lv_sysmon_private.h"/>
      </source>
      <source relative_path="src/others/vg_lite_tvg" type="c_include">
        <files mask="vg_lite.h"/>
      </source>
      <source relative_path="src/stdlib/builtin" type="c_include">
        <files mask="lv_tlsf.h"/>
        <files mask="lv_tlsf_private.h"/>
      </source>
      <source relative_path="src/stdlib" type="c_include">
        <files mask="lv_mem.h"/>
        <files mask="lv_mem_private.h"/>
        <files mask="lv_sprintf.h"/>
        <files mask="lv_string.h"/>
      </source>
      <source relative_path="src/themes/default" type="c_include">
        <files mask="lv_theme_default.h"/>
      </source>
      <source relative_path="src/themes" type="c_include">
        <files mask="lv_theme.h"/>
        <files mask="lv_theme_private.h"/>
      </source>
      <source relative_path="src/themes/mono" type="c_include">
        <files mask="lv_theme_mono.h"/>
      </source>
      <source relative_path="src/themes/simple" type="c_include">
        <files mask="lv_theme_simple.h"/>
      </source>
      <source relative_path="src/tick" type="c_include">
        <files mask="lv_tick.h"/>
        <files mask="lv_tick_private.h"/>
      </source>
      <source relative_path="src/widgets/animimage" type="c_include">
        <files mask="lv_animimage.h"/>
        <files mask="lv_animimage_private.h"/>
      </source>
      <source relative_path="src/widgets/arc" type="c_include">
        <files mask="lv_arc.h"/>
        <files mask="lv_arc_private.h"/>
      </source>
      <source relative_path="src/widgets/bar" type="c_include">
        <files mask="lv_bar.h"/>
        <files mask="lv_bar_private.h"/>
      </source>
      <source relative_path="src/widgets/button" type="c_include">
        <files mask="lv_button.h"/>
        <files mask="lv_button_private.h"/>
      </source>
      <source relative_path="src/widgets/buttonmatrix" type="c_include">
        <files mask="lv_buttonmatrix.h"/>
        <files mask="lv_buttonmatrix_private.h"/>
      </source>
      <source relative_path="src/widgets/calendar" type="c_include">
        <files mask="lv_calendar.h"/>
        <files mask="lv_calendar_chinese.h"/>
        <files mask="lv_calendar_chinese_private.h"/>
        <files mask="lv_calendar_header_arrow.h"/>
        <files mask="lv_calendar_header_dropdown.h"/>
        <files mask="lv_calendar_private.h"/>
      </source>
      <source relative_path="src/widgets/canvas" type="c_include">
        <files mask="lv_canvas.h"/>
        <files mask="lv_canvas_private.h"/>
      </source>
      <source relative_path="src/widgets/carousel" type="c_include">
        <files mask="lv_carousel.h"/>
        <files mask="lv_carousel_private.h"/>
      </source>
      <source relative_path="src/widgets/chart" type="c_include">
        <files mask="lv_chart.h"/>
        <files mask="lv_chart_private.h"/>
      </source>
      <source relative_path="src/widgets/checkbox" type="c_include">
        <files mask="lv_checkbox.h"/>
        <files mask="lv_checkbox_private.h"/>
      </source>
      <source relative_path="src/widgets/dropdown" type="c_include">
        <files mask="lv_dropdown.h"/>
        <files mask="lv_dropdown_private.h"/>
      </source>
      <source relative_path="src/widgets/image" type="c_include">
        <files mask="lv_image.h"/>
        <files mask="lv_image_private.h"/>
      </source>
      <source relative_path="src/widgets/imagebutton" type="c_include">
        <files mask="lv_imagebutton.h"/>
        <files mask="lv_imagebutton_private.h"/>
      </source>
      <source relative_path="src/widgets/keyboard" type="c_include">
        <files mask="lv_keyboard.h"/>
        <files mask="lv_keyboard_private.h"/>
      </source>
      <source relative_path="src/widgets/label" type="c_include">
        <files mask="lv_label.h"/>
        <files mask="lv_label_private.h"/>
      </source>
      <source relative_path="src/widgets/led" type="c_include">
        <files mask="lv_led.h"/>
        <files mask="lv_led_private.h"/>
      </source>
      <source relative_path="src/widgets/line" type="c_include">
        <files mask="lv_line.h"/>
        <files mask="lv_line_private.h"/>
      </source>
      <source relative_path="src/widgets/list" type="c_include">
        <files mask="lv_list.h"/>
      </source>
      <source relative_path="src/widgets/lottie" type="c_include">
        <files mask="lv_lottie.h"/>
        <files mask="lv_lottie_private.h"/>
      </source>
      <source relative_path="src/widgets/menu" type="c_include">
        <files mask="lv_menu.h"/>
        <files mask="lv_menu_private.h"/>
      </source>
      <source relative_path="src/widgets/msgbox" type="c_include">
        <files mask="lv_msgbox.h"/>
        <files mask="lv_msgbox_private.h"/>
      </source>
      <source relative_path="src/widgets/objx_templ" type="c_include">
        <files mask="lv_objx_templ.h"/>
      </source>
      <source relative_path="src/widgets/roller" type="c_include">
        <files mask="lv_roller.h"/>
        <files mask="lv_roller_private.h"/>
      </source>
      <source relative_path="src/widgets/scale" type="c_include">
        <files mask="lv_scale.h"/>
        <files mask="lv_scale_private.h"/>
      </source>
      <source relative_path="src/widgets/slider" type="c_include">
        <files mask="lv_slider.h"/>
        <files mask="lv_slider_private.h"/>
      </source>
      <source relative_path="src/widgets/span" type="c_include">
        <files mask="lv_span.h"/>
        <files mask="lv_span_private.h"/>
      </source>
      <source relative_path="src/widgets/spinbox" type="c_include">
        <files mask="lv_spinbox.h"/>
        <files mask="lv_spinbox_private.h"/>
      </source>
      <source relative_path="src/widgets/spinner" type="c_include">
        <files mask="lv_spinner.h"/>
      </source>
      <source relative_path="src/widgets/switch" type="c_include">
        <files mask="lv_switch.h"/>
        <files mask="lv_switch_private.h"/>
      </source>
      <source relative_path="src/widgets/table" type="c_include">
        <files mask="lv_table.h"/>
        <files mask="lv_table_private.h"/>
      </source>
      <source relative_path="src/widgets/tabview" type="c_include">
        <files mask="lv_tabview.h"/>
        <files mask="lv_tabview_private.h"/>
      </source>
      <source relative_path="src/widgets/textarea" type="c_include">
        <files mask="lv_textarea.h"/>
        <files mask="lv_textarea_private.h"/>
      </source>
      <source relative_path="src/widgets/tileview" type="c_include">
        <files mask="lv_tileview.h"/>
        <files mask="lv_tileview_private.h"/>
      </source>
      <source relative_path="src/widgets/win" type="c_include">
        <files mask="lv_win.h"/>
        <files mask="lv_win_private.h"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_conf_template.h"/>
        <files mask="lv_version.h"/>
        <files mask="lvgl.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/draw/nxp/vglite" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/draw/nxp/vglite" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.benchmark.MIMXRT1173" name="LVGL benchamrk demo" brief="LVGL benchmark demo" version="9.2.1" full_name="LVGL benchark demo" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/benchmark" project_base_path="lvgl/demos/benchmark">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_benchmark.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_benchmark.h"/>
      </source>
      <source relative_path="assets" type="src">
        <files mask="img_benchmark_avatar.c"/>
        <files mask="img_benchmark_cogwheel_alpha256.c"/>
        <files mask="img_benchmark_cogwheel_argb.c"/>
        <files mask="img_benchmark_cogwheel_indexed16.c"/>
        <files mask="img_benchmark_cogwheel_rgb.c"/>
        <files mask="lv_font_benchmark_montserrat_12_compr_az.c.c"/>
        <files mask="lv_font_benchmark_montserrat_16_compr_az.c.c"/>
        <files mask="lv_font_benchmark_montserrat_28_compr_az.c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_benchmark.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="assets" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="assets" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.common.MIMXRT1173" name="LVGL demo common" brief="LVGL demo common" version="9.2.1" full_name="LVGL demo common" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos" project_base_path="lvgl/demos">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demos.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demos.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_common.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.transform.MIMXRT1173" name="LVGL demo transform" brief="LVGL demo transform" version="9.2.1" full_name="LVGL demo transform" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/transform" project_base_path="lvgl/demos/transform">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_transform.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_transform.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_transform.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.multilang.MIMXRT1173" name="LVGL demo multilang" brief="LVGL demo multilang" version="9.2.1" full_name="LVGL demo multilang" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/multilang" project_base_path="lvgl/demos/multilang">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_multilang.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_multilang.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_multilang.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.flex_layout.MIMXRT1173" name="LVGL demo flex_layout" brief="LVGL demo flex_layout" version="9.2.1" full_name="LVGL demo flex_layout" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/flex_layout" project_base_path="lvgl/demos/flex_layout">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_flex_layout_ctrl_pad.c"/>
        <files mask="lv_demo_flex_layout_flex_loader.c"/>
        <files mask="lv_demo_flex_layout_main.c"/>
        <files mask="lv_demo_flex_layout_view.c"/>
        <files mask="lv_demo_flex_layout_view_child_node.c"/>
        <files mask="lv_demo_flex_layout_view_ctrl_pad.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_flex_layout.h"/>
        <files mask="lv_demo_flex_layout_main.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_flex_layout.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.scroll.MIMXRT1173" name="LVGL demo scroll" brief="LVGL demo scroll" version="9.2.1" full_name="LVGL demo scroll" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/scroll" project_base_path="lvgl/demos/scroll">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_scroll.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_scroll.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_scroll.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.music.MIMXRT1173" name="LVGL demo music" brief="LVGL demo music" version="9.2.1" full_name="LVGL demo music" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/music" project_base_path="lvgl/demos/music">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_music.c"/>
        <files mask="lv_demo_music_list.c"/>
        <files mask="lv_demo_music_main.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_music.h"/>
        <files mask="lv_demo_music_list.h"/>
        <files mask="lv_demo_music_main.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_music.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.keypad_encoder.MIMXRT1173" name="LVGL demo keypad_encoder" brief="LVGL demo keypad_encoder" version="9.2.1" full_name="LVGL demo keypad_encoder" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/keypad_encoder" project_base_path="lvgl/demos/keypad_encoder">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_keypad_encoder.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_keypad_encoder.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_keypad_encoder.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.stress.MIMXRT1173" name="LVGL stress demo" brief="LVGL stress demo" version="9.2.1" full_name="LVGL stress demo" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/stress" project_base_path="lvgl/demos/stress">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT1173"/>
          <component_dependency value="middleware.lvgl.demo.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_stress.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_stress.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_stress.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.widgets.MIMXRT1173" name="LVGL widgets demo" brief="LVGL widgets demo" version="9.2.1" full_name="LVGL  demo" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/widgets" project_base_path="lvgl/demos/widgets">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT1173"/>
          <component_dependency value="middleware.lvgl.demo.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_widgets.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_widgets.h"/>
      </source>
      <source relative_path="assets" type="src">
        <files mask="img_clothes.c"/>
        <files mask="img_demo_widgets_avatar.c"/>
        <files mask="img_demo_widgets_needle.c"/>
        <files mask="img_lvgl_logo.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_widgets.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="assets" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="assets" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.llhttp.MIMXRT1173" name="llhttp" brief="HTTP parser in LLVM IR" version="6.0.5" full_name="llhttp" category="AWS IoT/llhttp" user_visible="true" type="middleware" package_base_path="middleware/llhttp" project_base_path="llhttp">
      <dependencies>
        <all>
          <component_dependency value="utility.debug_console.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="include" type="c_include">
        <files mask="llhttp.h"/>
      </source>
      <source relative_path="src" type="src">
        <files mask="api.c"/>
        <files mask="http.c"/>
        <files mask="llhttp.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_llhttp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.MIMXRT1173" name="FreeMASTER driver common files" brief="Common FreeMASTER driver code." version="3.0.7" full_name="FreeMASTER communication driver common code" category="FreeMASTER/FreeMASTER Driver" user_visible="true" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.fmstr.platform_56f800e.MIMXRT1173"/>
            <component_dependency value="middleware.fmstr.platform_gen32le.MIMXRT1173"/>
            <component_dependency value="middleware.fmstr.platform_pa32.MIMXRT1173"/>
            <component_dependency value="middleware.fmstr.platform_s12z.MIMXRT1173"/>
            <component_dependency value="middleware.fmstr.platform_s32.MIMXRT1173"/>
          </any_of>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="src/common" type="c_include">
        <files mask="freemaster.h"/>
        <files mask="freemaster_defcfg.h"/>
        <files mask="freemaster_private.h"/>
        <files mask="freemaster_protocol.h"/>
        <files mask="freemaster_rec.h"/>
        <files mask="freemaster_tsa.h"/>
        <files mask="freemaster_ures.h"/>
        <files mask="freemaster_utils.h"/>
        <files mask="freemaster_can.h"/>
        <files mask="freemaster_serial.h"/>
        <files mask="freemaster_net.h"/>
      </source>
      <source relative_path="src/common" type="src">
        <files mask="freemaster_appcmd.c"/>
        <files mask="freemaster_pipes.c"/>
        <files mask="freemaster_protocol.c"/>
        <files mask="freemaster_rec.c"/>
        <files mask="freemaster_scope.c"/>
        <files mask="freemaster_tsa.c"/>
        <files mask="freemaster_ures.c"/>
        <files mask="freemaster_utils.c"/>
        <files mask="freemaster_can.c"/>
        <files mask="freemaster_sha.c"/>
        <files mask="freemaster_pdbdm.c"/>
        <files mask="freemaster_serial.c"/>
        <files mask="freemaster_net.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fmstr.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/common" type="c_include"/>
        <include_path relative_path="src/common" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.platform_gen32le.MIMXRT1173" name="FreeMASTER 32bit driver" brief="FreeMASTER driver code for 32bit platforms, enabling communication between FreeMASTER or FreeMASTER Lite tools and MCU application. Supports Serial, CAN, USB and BDM/JTAG physical interface." version="3.0.7" full_name="FreeMASTER communication driver for 32bit platforms" category="FreeMASTER/FreeMASTER Driver" user_visible="true" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <all>
          <component_dependency value="middleware.fmstr.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="src/platforms/gen32le" type="c_include">
        <files mask="freemaster_gen32le.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/can" type="src">
        <files mask="freemaster_flexcan.c"/>
        <files mask="freemaster_mscan.c"/>
        <files mask="freemaster_mcan.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/can" type="c_include">
        <files mask="freemaster_flexcan.h"/>
        <files mask="freemaster_mscan.h"/>
        <files mask="freemaster_mcan.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/serial" type="src">
        <files mask="freemaster_serial_uart.c"/>
        <files mask="freemaster_serial_lpsci.c"/>
        <files mask="freemaster_serial_lpuart.c"/>
        <files mask="freemaster_serial_usart.c"/>
        <files mask="freemaster_serial_miniusart.c"/>
        <files mask="freemaster_serial_usb.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/serial" type="c_include">
        <files mask="freemaster_serial_uart.h"/>
        <files mask="freemaster_serial_lpsci.h"/>
        <files mask="freemaster_serial_lpuart.h"/>
        <files mask="freemaster_serial_usart.h"/>
        <files mask="freemaster_serial_miniusart.h"/>
        <files mask="freemaster_serial_usb.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/network" type="src">
        <files mask="freemaster_net_segger_rtt.c"/>
        <files mask="freemaster_net_lwip_udp.c"/>
        <files mask="freemaster_net_lwip_tcp.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/network" type="c_include">
        <files mask="freemaster_net_segger_rtt.h"/>
        <files mask="freemaster_net_lwip_udp.h"/>
        <files mask="freemaster_net_lwip_tcp.h"/>
      </source>
      <source relative_path="src/template/gen32le" config="true" type="c_include">
        <files mask="freemaster_cfg.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fmstr_platform_gen32le.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/platforms/gen32le" type="c_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/can" type="c_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/serial" type="c_include"/>
        <include_path relative_path="src/template/gen32le" type="c_include"/>
        <include_path relative_path="src/platforms/gen32le" type="asm_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/can" type="asm_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/serial" type="asm_include"/>
        <include_path relative_path="src/template/gen32le" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.platform_56f800e.MIMXRT1173" name="FreeMASTER DSC driver" brief="FreeMASTER driver code for DSC platforms, enabling communication between FreeMASTER or FreeMASTER Lite tools and MCU application. Supports Serial, CAN, USB and BDM/JTAG physical interface." version="3.0.7" full_name="FreeMASTER communication driver for DSC platforms" category="FreeMASTER/FreeMASTER Driver" user_visible="true" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <all>
          <component_dependency value="middleware.fmstr.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="src/platforms/56f800e" type="c_include">
        <files mask="freemaster_56f800e.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/can" type="src">
        <files mask="freemaster_flexcan_dsc.c"/>
        <files mask="freemaster_mscan_dsc.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/can" type="c_include">
        <files mask="freemaster_flexcan_dsc.h"/>
        <files mask="freemaster_mscan_dsc.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/serial" type="src">
        <files mask="freemaster_serial_qsci.c"/>
        <files mask="freemaster_56f800e_eonce.c"/>
        <files mask="freemaster_serial_usb.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/serial" type="c_include">
        <files mask="freemaster_serial_qsci.h"/>
        <files mask="freemaster_56f800e_eonce.h"/>
        <files mask="freemaster_serial_usb.h"/>
      </source>
      <source relative_path="src/template/56f800e" config="true" type="c_include">
        <files mask="freemaster_cfg.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fmstr_platform_56f800e.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/platforms/56f800e" type="c_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/can" type="c_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/serial" type="c_include"/>
        <include_path relative_path="src/template/56f800e" type="c_include"/>
        <include_path relative_path="src/platforms/56f800e" type="asm_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/can" type="asm_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/serial" type="asm_include"/>
        <include_path relative_path="src/template/56f800e" type="asm_include"/>
      </include_paths>
    </component>
    <!--<component id="middleware.fmstr.all_files.MIMXRT1173" name="FreeMASTER driver all files" version="3.0.7" package_base_path="middleware/freemaster" project_base_path="freemaster">
  <source relative_path="src/common" type="c_include">
    <files mask="freemaster.h"/>
    <files mask="freemaster_can.h"/>
    <files mask="freemaster_defcfg.h"/>
    <files mask="freemaster_net.h"/>
    <files mask="freemaster_private.h"/>
    <files mask="freemaster_protocol.h"/>
    <files mask="freemaster_rec.h"/>
    <files mask="freemaster_serial.h"/>
    <files mask="freemaster_tsa.h"/>
    <files mask="freemaster_ures.h"/>
    <files mask="freemaster_utils.h"/>
  </source>
  <source relative_path="src/common" type="src">
    <files mask="freemaster_appcmd.c"/>
    <files mask="freemaster_can.c"/>
    <files mask="freemaster_net.c"/>
    <files mask="freemaster_pdbdm.c"/>
    <files mask="freemaster_pipes.c"/>
    <files mask="freemaster_protocol.c"/>
    <files mask="freemaster_rec.c"/>
    <files mask="freemaster_scope.c"/>
    <files mask="freemaster_serial.c"/>
    <files mask="freemaster_sha.c"/>
    <files mask="freemaster_tsa.c"/>
    <files mask="freemaster_ures.c"/>
    <files mask="freemaster_utils.c"/>
  </source>
  <source relative_path="src/common" type="other">
    <files mask="freemaster_cfg.h.example"/>
  </source>
  <source relative_path="src/platforms/56f800e" type="c_include">
    <files mask="freemaster_56f800e.h"/>
  </source>
  <source relative_path="src/platforms/gen32be" type="c_include">
    <files mask="freemaster_gen32be.h"/>
  </source>
  <source relative_path="src/platforms/gen32le" type="c_include">
    <files mask="freemaster_gen32le.h"/>
  </source>
  <source relative_path="src/platforms/s12z" type="c_include">
    <files mask="freemaster_s12z.h"/>
  </source>
  <source relative_path="src/drivers" type="doc">
    <files mask="readme.txt"/>
  </source>
  <source relative_path="src/drivers/dreg/DSC" type="src">
    <files mask="freemaster_56f800e_eonce.c"/>
    <files mask="freemaster_56f800e_flexcan.c"/>
    <files mask="freemaster_56f800e_qsci.c"/>
  </source>
  <source relative_path="src/drivers/dreg/DSC" type="c_include">
    <files mask="freemaster_56f800e_eonce.h"/>
    <files mask="freemaster_56f800e_flexcan.h"/>
    <files mask="freemaster_56f800e_qsci.h"/>
  </source>
  <source relative_path="src/drivers/dreg/Kxx" type="src">
    <files mask="freemaster_kxx_uart.c"/>
  </source>
  <source relative_path="src/drivers/dreg/Kxx" type="c_include">
    <files mask="freemaster_kxx_uart.h"/>
  </source>
  <source relative_path="src/drivers/dreg/MPC" type="src">
    <files mask="freemaster_mpc574xp_linflex.c"/>
  </source>
  <source relative_path="src/drivers/dreg/MPC" type="c_include">
    <files mask="freemaster_mpc574xp_linflex.h"/>
  </source>
  <source relative_path="src/drivers/dreg/S12Z" type="src">
    <files mask="freemaster_s12z_mscan.c"/>
    <files mask="freemaster_s12z_sci.c"/>
  </source>
  <source relative_path="src/drivers/dreg/S12Z" type="c_include">
    <files mask="freemaster_s12z_mscan.h"/>
    <files mask="freemaster_s12z_sci.h"/>
  </source>
  <source relative_path="src/drivers/dreg/S32G" type="src">
    <files mask="freemaster_s32g274a_linflexd.c"/>
  </source>
  <source relative_path="src/drivers/dreg/S32G" type="c_include">
    <files mask="freemaster_s32g274a_linflexd.h"/>
  </source>
  <source relative_path="src/drivers/dreg/S32K" type="src">
    <files mask="freemaster_s32k144_lpuart.c"/>
    <files mask="freemaster_s32k3xx_lpuart.c"/>
  </source>
  <source relative_path="src/drivers/dreg/S32K" type="c_include">
    <files mask="freemaster_s32k144_lpuart.h"/>
    <files mask="freemaster_s32k3xx_lpuart.h"/>
  </source>
  <source relative_path="src/drivers/dreg/S32R" type="src">
    <files mask="freemaster_s32r45_linflexd.c"/>
  </source>
  <source relative_path="src/drivers/dreg/S32R" type="c_include">
    <files mask="freemaster_s32r45_linflexd.h"/>
  </source>
  <source relative_path="src/drivers/dreg/S32S" type="src">
    <files mask="freemaster_s32s247tv_linflexd.c"/>
  </source>
  <source relative_path="src/drivers/dreg/S32S" type="c_include">
    <files mask="freemaster_s32s247tv_linflexd.h"/>
  </source>
  <source relative_path="src/drivers/mcuxsdk/can" type="src">
    <files mask="freemaster_flexcan.c"/>
    <files mask="freemaster_flexcan_dsc.c"/>
    <files mask="freemaster_mcan.c"/>
    <files mask="freemaster_mscan.c"/>
    <files mask="freemaster_mscan_dsc.c"/>
  </source>
  <source relative_path="src/drivers/mcuxsdk/can" type="c_include">
    <files mask="freemaster_flexcan.h"/>
    <files mask="freemaster_flexcan_dsc.h"/>
    <files mask="freemaster_mcan.h"/>
    <files mask="freemaster_mscan.h"/>
    <files mask="freemaster_mscan_dsc.h"/>
  </source>
  <source relative_path="src/drivers/mcuxsdk/serial" type="src">
    <files mask="freemaster_56f800e_eonce.c"/>
    <files mask="freemaster_serial_lpsci.c"/>
    <files mask="freemaster_serial_lpuart.c"/>
    <files mask="freemaster_serial_miniusart.c"/>
    <files mask="freemaster_serial_qsci.c"/>
    <files mask="freemaster_serial_uart.c"/>
    <files mask="freemaster_serial_usart.c"/>
    <files mask="freemaster_serial_usb.c"/>
  </source>
  <source relative_path="src/drivers/mcuxsdk/serial" type="c_include">
    <files mask="freemaster_56f800e_eonce.h"/>
    <files mask="freemaster_serial_lpsci.h"/>
    <files mask="freemaster_serial_lpuart.h"/>
    <files mask="freemaster_serial_miniusart.h"/>
    <files mask="freemaster_serial_qsci.h"/>
    <files mask="freemaster_serial_uart.h"/>
    <files mask="freemaster_serial_usart.h"/>
    <files mask="freemaster_serial_usb.h"/>
  </source>
  <source relative_path="src/drivers/ampxsdk/uart/S32K1x" type="src">
    <files mask="freemaster_serial_lpuart.c"/>
  </source>
  <source relative_path="src/drivers/ampxsdk/uart/S32K1x" type="c_include">
    <files mask="freemaster_serial_lpuart.h"/>
  </source>
  <source relative_path="src/drivers/ampxsdk/can/S32K1x" type="src">
    <files mask="freemaster_flexcan.c"/>
  </source>
  <source relative_path="src/drivers/ampxsdk/can/S32K1x" type="c_include">
    <files mask="freemaster_flexcan.h"/>
  </source>
  <source relative_path="src/support/mcuxsdk_usb" type="src">
    <files mask="freemaster_usb.c"/>
    <files mask="freemaster_usb_device_descriptor.c"/>
  </source>
  <source relative_path="src/support/mcuxsdk_usb" type="c_include">
    <files mask="freemaster_usb.h"/>
    <files mask="freemaster_usb_device_descriptor.h"/>
    <files mask="usb_device_descriptor.h"/>
  </source>
  <source relative_path="src/support/mcuxsdk_usb" type="doc">
    <files mask="readme.txt"/>
  </source>
</component>-->
    <component id="middleware.fmstr.platform_s32.MIMXRT1173" name="FreeMASTER S32 driver" brief="FreeMASTER driver code for S32 platform." version="3.0.7" full_name="FreeMASTER communication driver for S32 platform" category="FreeMASTER/FreeMASTER Driver" user_visible="false" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <all>
          <component_dependency value="middleware.fmstr.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="src/platforms/gen32le" type="c_include">
        <files mask="freemaster_gen32le.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fmstr_platform_s32.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/platforms/gen32le" type="c_include"/>
        <include_path relative_path="src/platforms/gen32le" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.platform_pa32.MIMXRT1173" name="FreeMASTER Power Architecture driver" brief="FreeMASTER driver code for Power Architecture 32bit platform." version="3.0.7" full_name="FreeMASTER communication driver for Power Architecture 32bit platform" category="FreeMASTER/FreeMASTER Driver" user_visible="false" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <all>
          <component_dependency value="middleware.fmstr.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="src/platforms/gen32be" type="c_include">
        <files mask="freemaster_gen32be.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fmstr_platform_pa32.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/platforms/gen32be" type="c_include"/>
        <include_path relative_path="src/platforms/gen32be" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.platform_s12z.MIMXRT1173" name="FreeMASTER S12Z driver" brief="FreeMASTER driver code for S12Z platform." version="3.0.7" full_name="FreeMASTER communication driver for S12Z platform" category="FreeMASTER/FreeMASTER Driver" user_visible="false" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <all>
          <component_dependency value="middleware.fmstr.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="src/platforms/s12z" type="c_include">
        <files mask="freemaster_s12z.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fmstr_platform_s12z.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/platforms/s12z" type="c_include"/>
        <include_path relative_path="src/platforms/s12z" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.mmc.MIMXRT1173" name="mmc" brief="FatFs_MMC" version="0.15.0" full_name="Fatfs MMC layer" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.MIMXRT1173"/>
          <component_dependency value="middleware.fatfs.template_mmc.MIMXRT1173"/>
          <component_dependency value="middleware.sdmmc.mmc.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_mmc_disk" type="src">
        <files mask="fsl_mmc_disk.c"/>
      </source>
      <source relative_path="source/fsl_mmc_disk" type="c_include">
        <files mask="fsl_mmc_disk.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_mmc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_mmc_disk" type="c_include"/>
        <include_path relative_path="source/fsl_mmc_disk" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.nand.MIMXRT1173" name="nand" brief="FatFs_NAND" version="0.15.0" full_name="Fatfs NAND layer" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="component.flash_nand_flexspi.MIMXRT1173"/>
            <component_dependency value="component.flash_nand_semc.MIMXRT1173"/>
          </any_of>
          <component_dependency value="middleware.dhara.MIMXRT1173"/>
          <component_dependency value="middleware.fatfs.MIMXRT1173"/>
          <component_dependency value="middleware.fatfs.template_nand.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_nand_disk" type="src">
        <files mask="fsl_nand_disk.c"/>
      </source>
      <source relative_path="source/fsl_nand_disk" type="c_include">
        <files mask="fsl_nand_disk.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_nand.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_nand_disk" type="c_include"/>
        <include_path relative_path="source/fsl_nand_disk" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.ram.MIMXRT1173" name="ram" brief="FatFs_RAM" version="0.15.0" full_name="Fatfs RAM layer" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.MIMXRT1173"/>
          <component_dependency value="middleware.fatfs.template_ram.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_ram_disk" type="src">
        <files mask="fsl_ram_disk.c"/>
      </source>
      <source relative_path="source/fsl_ram_disk" type="c_include">
        <files mask="fsl_ram_disk.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_ram.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_ram_disk" type="c_include"/>
        <include_path relative_path="source/fsl_ram_disk" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.sd.MIMXRT1173" name="sd" brief="FatFs_SD" version="0.15.0" full_name="Fatfs SD layer" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.MIMXRT1173"/>
          <component_dependency value="middleware.fatfs.template_sd.MIMXRT1173"/>
          <component_dependency value="middleware.sdmmc.sd.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_sd_disk" type="src">
        <files mask="fsl_sd_disk.c"/>
      </source>
      <source relative_path="source/fsl_sd_disk" type="c_include">
        <files mask="fsl_sd_disk.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_sd.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_sd_disk" type="c_include"/>
        <include_path relative_path="source/fsl_sd_disk" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.sdspi.MIMXRT1173" name="sdspi" brief="FatFs_SDSPI" version="0.15.0" full_name="Fatfs SDSPI layer" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.MIMXRT1173"/>
          <component_dependency value="middleware.fatfs.template_sdspi.MIMXRT1173"/>
          <component_dependency value="middleware.sdmmc.sdspi.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_sdspi_disk" type="src">
        <files mask="fsl_sdspi_disk.c"/>
      </source>
      <source relative_path="source/fsl_sdspi_disk" type="c_include">
        <files mask="fsl_sdspi_disk.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_sdspi.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_sdspi_disk" type="c_include"/>
        <include_path relative_path="source/fsl_sdspi_disk" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.usb.MIMXRT1173" name="usb" brief="FatFs_USB" version="0.15.0" full_name="Fatfs USB layer" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.MIMXRT1173"/>
          <component_dependency value="middleware.fatfs.template_usb.MIMXRT1173"/>
          <component_dependency value="middleware.usb.host_msd.MIMXRT1173"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_usb_disk" type="c_include">
        <files mask="fsl_usb_disk.h"/>
      </source>
      <source condition="component.osa_bm.MIMXRT1173" relative_path="source/fsl_usb_disk" type="src">
        <files mask="fsl_usb_disk_bm.c"/>
      </source>
      <source condition="component.osa_free_rtos.MIMXRT1173" relative_path="source/fsl_usb_disk" type="src">
        <files mask="fsl_usb_disk_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_usb.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_usb_disk" type="c_include"/>
        <include_path relative_path="source/fsl_usb_disk" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.emwin.MIMXRT1173" name="emwin" brief="emWin library" version="6.38" full_name="middleware emWin" category="Graphics/emWin graphics library" user_visible="true" type="middleware" package_base_path="middleware/emwin" project_base_path="emwin">
      <dependencies>
        <all>
          <component_dependency value="middleware.emwin.template.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="ChangeLogKSDK.txt" hidden="true"/>
        <files mask="readme.txt" hidden="true"/>
      </source>
      <source relative_path="emWin_header" type="c_include">
        <files mask="AppWizard.h"/>
        <files mask="BUTTON.h"/>
        <files mask="BUTTON_Private.h"/>
        <files mask="CALENDAR.h"/>
        <files mask="CHECKBOX.h"/>
        <files mask="CHECKBOX_Private.h"/>
        <files mask="CHOOSECOLOR.h"/>
        <files mask="CHOOSEFILE.h"/>
        <files mask="DIALOG.h"/>
        <files mask="DIALOG_Type.h"/>
        <files mask="DROPDOWN.h"/>
        <files mask="DROPDOWN_Private.h"/>
        <files mask="EDIT.h"/>
        <files mask="EDIT_Private.h"/>
        <files mask="FRAMEWIN.h"/>
        <files mask="FRAMEWIN_Private.h"/>
        <files mask="GAUGE.h"/>
        <files mask="GAUGE_Private.h"/>
        <files mask="GRAPH.h"/>
        <files mask="GRAPH_Private.h"/>
        <files mask="GUI.h"/>
        <files mask="GUIDRV_BitPlains.h"/>
        <files mask="GUIDRV_DCache.h"/>
        <files mask="GUIDRV_DCache_Private.h"/>
        <files mask="GUIDRV_Dist.h"/>
        <files mask="GUIDRV_FlexColor.h"/>
        <files mask="GUIDRV_FlexColor_Private.h"/>
        <files mask="GUIDRV_IST3088.h"/>
        <files mask="GUIDRV_IST3088_Private.h"/>
        <files mask="GUIDRV_Lin.h"/>
        <files mask="GUIDRV_Lin_Opt_16.h"/>
        <files mask="GUIDRV_Lin_Opt_24.h"/>
        <files mask="GUIDRV_Lin_Opt_32.h"/>
        <files mask="GUIDRV_Lin_Opt_8.h"/>
        <files mask="GUIDRV_Lin_Private.h"/>
        <files mask="GUIDRV_NoOpt_1_8.h"/>
        <files mask="GUIDRV_Null.h"/>
        <files mask="GUIDRV_S1D13748.h"/>
        <files mask="GUIDRV_S1D13748_Private.h"/>
        <files mask="GUIDRV_S1D13781.h"/>
        <files mask="GUIDRV_S1D13781_Private.h"/>
        <files mask="GUIDRV_S1D15G00.h"/>
        <files mask="GUIDRV_SH_MEM.h"/>
        <files mask="GUIDRV_SH_MEM_Private.h"/>
        <files mask="GUIDRV_SLin.h"/>
        <files mask="GUIDRV_SLin_Private.h"/>
        <files mask="GUIDRV_SPage.h"/>
        <files mask="GUIDRV_SPage_Private.h"/>
        <files mask="GUIDRV_SSD1926.h"/>
        <files mask="GUIDRV_SSD1926_Private.h"/>
        <files mask="GUIDRV_Template.h"/>
        <files mask="GUIDRV_TemplateI.h"/>
        <files mask="GUIDRV_TemplateI_Private.h"/>
        <files mask="GUITDRV_ADS7846.h"/>
        <files mask="GUI_ARRAY.h"/>
        <files mask="GUI_ARRAY_Private.h"/>
        <files mask="GUI_BMP_Private.h"/>
        <files mask="GUI_ConfDefaults.h"/>
        <files mask="GUI_Debug.h"/>
        <files mask="GUI_FontIntern.h"/>
        <files mask="GUI_GCache_Private.h"/>
        <files mask="GUI_GIF_Private.h"/>
        <files mask="GUI_HOOK.h"/>
        <files mask="GUI_JPEG_Private.h"/>
        <files mask="GUI_Private.h"/>
        <files mask="GUI_Resource.h"/>
        <files mask="GUI_SIM_Win32.h"/>
        <files mask="GUI_SPRITE_Private.h"/>
        <files mask="GUI_SPY_Private.h"/>
        <files mask="GUI_SVG_Global.h"/>
        <files mask="GUI_SVG_NanoVG.h"/>
        <files mask="GUI_SVG_NemaVG.h"/>
        <files mask="GUI_SVG_OpenVG.h"/>
        <files mask="GUI_SVG_Private.h"/>
        <files mask="GUI_SVG_VGLite.h"/>
        <files mask="GUI_SetOrientation.h"/>
        <files mask="GUI_SetOrientationCX.h"/>
        <files mask="GUI_Type.h"/>
        <files mask="GUI_VNC.h"/>
        <files mask="GUI_Version.h"/>
        <files mask="GUI__BiDi2_Brackets_800.h"/>
        <files mask="GUI__BiDi2_Types_800.h"/>
        <files mask="Global.h"/>
        <files mask="HEADER.h"/>
        <files mask="HEADER_Private.h"/>
        <files mask="ICONVIEW.h"/>
        <files mask="ICONVIEW_Private.h"/>
        <files mask="IMAGE.h"/>
        <files mask="IMAGE_Private.h"/>
        <files mask="IP_FS.h"/>
        <files mask="JPEGConf.h"/>
        <files mask="KEYBOARD.h"/>
        <files mask="KEYBOARD_Private.h"/>
        <files mask="KNOB.h"/>
        <files mask="KNOB_Private.h"/>
        <files mask="LCD.h"/>
        <files mask="LCD_ConfDefaults.h"/>
        <files mask="LCD_Private.h"/>
        <files mask="LCD_Protected.h"/>
        <files mask="LCD_SIM.h"/>
        <files mask="LCD_X_8080_16.h"/>
        <files mask="LCD_X_8080_8.h"/>
        <files mask="LCD_X_I2C.h"/>
        <files mask="LCD_X_Serial_3Pin.h"/>
        <files mask="LISTBOX.h"/>
        <files mask="LISTBOX_Private.h"/>
        <files mask="LISTVIEW.h"/>
        <files mask="LISTVIEW_Private.h"/>
        <files mask="LISTWHEEL.h"/>
        <files mask="LISTWHEEL_Private.h"/>
        <files mask="MENU.h"/>
        <files mask="MENU_Private.h"/>
        <files mask="MESSAGEBOX.h"/>
        <files mask="MOVIE.h"/>
        <files mask="MOVIE_Private.h"/>
        <files mask="MULTIEDIT.h"/>
        <files mask="MULTIEDIT_Private.h"/>
        <files mask="MULTIPAGE.h"/>
        <files mask="MULTIPAGE_Private.h"/>
        <files mask="PROGBAR.h"/>
        <files mask="PROGBAR_Private.h"/>
        <files mask="QRCODE.h"/>
        <files mask="QRCODE_Private.h"/>
        <files mask="RADIO.h"/>
        <files mask="RADIO_Private.h"/>
        <files mask="ROTARY.h"/>
        <files mask="ROTARY_Private.h"/>
        <files mask="SCROLLBAR.h"/>
        <files mask="SCROLLBAR_Private.h"/>
        <files mask="SCROLLER.h"/>
        <files mask="SCROLLER_Private.h"/>
        <files mask="SEGGER.h"/>
        <files mask="SLIDER.h"/>
        <files mask="SLIDER_Private.h"/>
        <files mask="SPINBOX.h"/>
        <files mask="SPINBOX_Private.h"/>
        <files mask="SWIPELIST.h"/>
        <files mask="SWIPELIST_Private.h"/>
        <files mask="SWITCH.h"/>
        <files mask="SWITCH_Private.h"/>
        <files mask="TEXT.h"/>
        <files mask="TEXT_Private.h"/>
        <files mask="TICKER.h"/>
        <files mask="TICKER_Private.h"/>
        <files mask="TREEVIEW.h"/>
        <files mask="TREEVIEW_Private.h"/>
        <files mask="WHEEL.h"/>
        <files mask="WHEEL_Private.h"/>
        <files mask="WIDGET.h"/>
        <files mask="WIDGET_ID.h"/>
        <files mask="WINDOW_Private.h"/>
        <files mask="WM.h"/>
        <files mask="WM_GUI.h"/>
        <files mask="WM_Intern.h"/>
      </source>
      <source relative_path="emWin_Config" type="c_include">
        <files mask="GUIConf.h"/>
        <files mask="LCDConf.h"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="emWin_library/ARMGCC" type="lib" device_cores="cm4_MIMXRT1173xxxxx">
        <files mask="libemWin_M4F.a"/>
      </source>
      <source toolchain="iar" relative_path="emWin_library/IAR" type="lib" device_cores="cm4_MIMXRT1173xxxxx">
        <files mask="emWin_M4F.a"/>
      </source>
      <source toolchain="mdk" relative_path="emWin_library/Keil" type="lib" device_cores="cm4_MIMXRT1173xxxxx">
        <files mask="emWin_M4F.lib"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="emWin_library/ARMGCC" type="lib" device_cores="cm7_MIMXRT1173xxxxx">
        <files mask="libemWin_M7.a"/>
      </source>
      <source toolchain="iar" relative_path="emWin_library/IAR" type="lib" device_cores="cm7_MIMXRT1173xxxxx" fpu="true">
        <files mask="emWin_M7.a"/>
      </source>
      <source toolchain="mdk" relative_path="emWin_library/Keil" type="lib" device_cores="cm7_MIMXRT1173xxxxx" fpu="true">
        <files mask="emWin_M7.lib"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_emwin.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="emWin_header" type="c_include"/>
        <include_path relative_path="emWin_Config" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.dhara.dhara_ecc_bch.MIMXRT1173" name="ecc" brief="Middleware dhara dhara_ecc_bch" version="2.0.0" full_name="software ecc" category="Memories/Nand flash management stack" user_visible="true" type="middleware" package_base_path="middleware/dhara" project_base_path="dhara">
      <dependencies>
        <all>
          <component_dependency value="middleware.dhara.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="ecc" type="src">
        <files mask="bch.c"/>
        <files mask="gf13.c"/>
      </source>
      <source relative_path="ecc" type="c_include">
        <files mask="bch.h"/>
        <files mask="gf13.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_dhara_dhara_ecc_bch.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="ecc" type="c_include"/>
        <include_path relative_path="ecc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.dhara.dhara_ecc_hamming.MIMXRT1173" name="ecc" brief="Middleware dhara dhara_ecc_hamming" version="2.0.0" full_name="software ecc" category="Memories/Nand flash management stack" user_visible="true" type="middleware" package_base_path="middleware/dhara" project_base_path="dhara">
      <dependencies>
        <all>
          <component_dependency value="middleware.dhara.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="ecc" type="src">
        <files mask="hamming.c"/>
      </source>
      <source relative_path="ecc" type="c_include">
        <files mask="hamming.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_dhara_dhara_ecc_hamming.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="ecc" type="c_include"/>
        <include_path relative_path="ecc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.aws_iot.ota.MIMXRT1173" name="ota-for-aws-iot-embedded-sdk" brief="Client library for using the AWS Over-the-air Update service on embedded devices." version="3.4.0" full_name="AWS IoT Over-the-air Update Library" category="AWS IoT/AWS IoT Over-the-air Update" user_visible="false" type="middleware" package_base_path="middleware/aws_iot/ota" project_base_path="aws_iot/ota">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos.corejson.MIMXRT1173"/>
          <component_dependency value="middleware.tinycbor.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="ota.c"/>
        <files mask="ota_base64.c"/>
        <files mask="ota_cbor.c"/>
        <files mask="ota_http.c"/>
        <files mask="ota_interface.c"/>
        <files mask="ota_mqtt.c"/>
      </source>
      <source relative_path="source/include" type="c_include">
        <files mask="ota.h"/>
        <files mask="ota_appversion32.h"/>
        <files mask="ota_base64_private.h"/>
        <files mask="ota_cbor_private.h"/>
        <files mask="ota_config_defaults.h"/>
        <files mask="ota_http_interface.h"/>
        <files mask="ota_http_private.h"/>
        <files mask="ota_interface_private.h"/>
        <files mask="ota_mqtt_interface.h"/>
        <files mask="ota_mqtt_private.h"/>
        <files mask="ota_os_interface.h"/>
        <files mask="ota_platform_interface.h"/>
        <files mask="ota_private.h"/>
      </source>
      <source relative_path="source/include" type="doc">
        <files mask="stdbool.readme"/>
        <files mask="stdint.readme"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_aws_iot_ota.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/include" type="c_include"/>
        <include_path relative_path="source/include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.aws_iot.ota.freertos.MIMXRT1173" name="ota-for-aws-iot-embedded-sdk - freertos" brief="Client library for using the AWS Over-the-air Update service on embedded devices. FreeRTOS port." version="3.4.0" full_name="ota-for-aws-iot-embedded-sdk - FreeRTOS" category="AWS IoT/AWS IoT Over-the-air Update" user_visible="false" type="middleware" package_base_path="middleware/aws_iot/ota" project_base_path="aws_iot/ota">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source/portable/os" type="src">
        <files mask="ota_os_freertos.c"/>
      </source>
      <source relative_path="source/portable/os" type="c_include">
        <files mask="ota_os_freertos.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_aws_iot_ota_freertos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/portable/os" type="c_include"/>
        <include_path relative_path="source/portable/os" type="asm_include"/>
      </include_paths>
    </component>
    <component id="docs.AWS.OTA.MIMXRT1173" name="doc_AWS_OTA" brief="Amazon FreeRTOS Over-The-Air documentation" version="1.0.0" full_name="AWS OTA documentation" category="docs/AWS IoT Over-the-air" user_visible="true" type="documentation" package_base_path="docs/AWS" project_base_path="AWS">
      <dependencies>
        <all>
          <component_dependency value="middleware.aws_iot.ota.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
    </component>
    <component id="middleware.aws_iot.jobs.MIMXRT1173" name="jobs-for-aws-iot-embedded-sdk" brief="Library for using the AWS IoT Jobs service on embedded devices." version="1.3.0" full_name="AWS IoT Jobs library" category="AWS IoT/AWS IoT Jobs" user_visible="false" type="middleware" package_base_path="middleware/aws_iot/jobs" project_base_path="aws_iot/jobs">
      <dependencies>
        <all>
          <component_dependency value="middleware.llhttp.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="jobs.c"/>
      </source>
      <source relative_path="source/include" type="c_include">
        <files mask="jobs.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_aws_iot_jobs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/include" type="c_include"/>
        <include_path relative_path="source/include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.iot_reference.kvstore.MIMXRT1173" name="kvstore" brief="kvstore, IoT reference common example component" version="1.0.0" full_name="kvstore" category="AWS IoT/IoT Reference" user_visible="false" type="middleware" package_base_path="components/aws_iot/kvstore" project_base_path="aws_iot/kvstore">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="kvstore.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="kvstore.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_iot_reference_kvstore.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.iot_reference.logging.MIMXRT1173" name="logging" brief="logging, IoT reference common example component" version="1.0.0" full_name="logging" category="AWS IoT/IoT Reference" user_visible="true" type="middleware" package_base_path="components/aws_iot/logging" project_base_path="aws_iot/logging">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="logging.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="logging.h"/>
        <files mask="logging_levels.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_iot_reference_logging.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.iot_reference.mqtt_agent.MIMXRT1173" name="mqtt_agent" brief="mqtt_agent, IoT reference common example component" version="1.0.0" full_name="mqtt_agent" category="AWS IoT/IoT Reference" user_visible="true" type="middleware" package_base_path="components/aws_iot/mqtt_agent" project_base_path="aws_iot/mqtt_agent">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1173"/>
          <component_dependency value="middleware.freertos.backoffalgorithm.MIMXRT1173"/>
          <component_dependency value="middleware.freertos.coremqtt-agent.MIMXRT1173"/>
          <component_dependency value="middleware.freertos.corepkcs11.MIMXRT1173"/>
          <component_dependency value="middleware.iot_reference.kvstore.MIMXRT1173"/>
          <component_dependency value="middleware.iot_reference.mqtt_agent_interface.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="mqtt_agent_task.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="mqtt_agent_task.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_iot_reference_mqtt_agent.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.iot_reference.mqtt_agent_interface.MIMXRT1173" name="mqtt-agent-interface" brief="mqtt-agent-interface, IoT reference common example component" version="1.0.0" full_name="mqtt-agent-interface" category="AWS IoT/IoT Reference" user_visible="false" type="middleware" package_base_path="components/aws_iot/mqtt-agent-interface" project_base_path="aws_iot/mqtt-agent-interface">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1173"/>
          <component_dependency value="middleware.freertos.coremqtt-agent.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="freertos_agent_message.c"/>
        <files mask="freertos_command_pool.c"/>
      </source>
      <source relative_path="include" type="c_include">
        <files mask="freertos_agent_message.h"/>
        <files mask="freertos_command_pool.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_iot_reference_mqtt_agent_interface.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.iot_reference.transport_mbedtls.MIMXRT1173" name="transport_mbedtls" brief="transport_mbedtls, IoT reference common example component" version="1.0.0" full_name="transport_mbedtls" category="AWS IoT/IoT Reference" user_visible="true" type="middleware" package_base_path="components/aws_iot/using_mbedtls_pkcs11" project_base_path="aws_iot/using_mbedtls_pkcs11">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos.coremqtt.MIMXRT1173"/>
          <component_dependency value="middleware.freertos.corepkcs11.MIMXRT1173"/>
          <component_dependency value="middleware.iot_reference.logging.MIMXRT1173"/>
          <component_dependency value="middleware.lwip.MIMXRT1173"/>
          <component_dependency value="middleware.mbedtls.MIMXRT1173"/>
          <component_dependency value="middleware.pkcs11.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="using_mbedtls.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="using_mbedtls.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_iot_reference_transport_mbedtls.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.iot_reference.transport_mbedtls_psa.MIMXRT1173" name="transport_mbedtls_psa" brief="transport_mbedtls_psa, IoT reference common example component" version="1.0.0" full_name="transport_mbedtls_psa" category="AWS IoT/IoT Reference" user_visible="true" type="middleware" package_base_path="components/aws_iot/using_mbedtls_psa" project_base_path="aws_iot/using_mbedtls_psa">
      <dependencies>
        <all>
          <component_dependency value="middleware.iot_reference.logging.MIMXRT1173"/>
          <component_dependency value="middleware.lwip.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="using_mbedtls.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="using_mbedtls.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_iot_reference_transport_mbedtls_psa.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.aws_iot.device_shadow.template.MIMXRT1173" name="device_shadow configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="device_shadow configuration template" category="AWS IoT/AWS IoT Device Shadow" user_visible="false" type="project_template" package_base_path="middleware/aws_iot/device-shadow" project_base_path="aws_iot/device-shadow">
      <dependencies>
        <all>
          <component_dependency value="middleware.iot_reference.logging.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="template" type="c_include">
        <files mask="shadow_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_aws_iot_device_shadow_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.aws_iot.device_shadow.MIMXRT1173" name="device_shadow" brief="Client library for using the AWS IoT Device Shadow service on embedded devices." version="1.3.0" full_name="AWS IoT Device Shadow library" category="AWS IoT/AWS IoT Device Shadow" user_visible="true" type="middleware" package_base_path="middleware/aws_iot/device-shadow" project_base_path="aws_iot/device-shadow">
      <dependencies>
        <all>
          <component_dependency value="middleware.aws_iot.device_shadow.template.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="shadow.c"/>
      </source>
      <source relative_path="source/include" type="c_include">
        <files mask="shadow.h"/>
        <files mask="shadow_config_defaults.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_aws_iot_device_shadow.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/include" type="c_include"/>
        <include_path relative_path="source/include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-common.MIMXRT1173" name="camera-common" brief="Driver camera-common" version="1.0.0" full_name="Driver camera-common" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/camera" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.video-common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_camera.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-ap1302.MIMXRT1173" name="camera-device-ap1302" brief="Driver camera-device-ap1302" version="1.0.1" full_name="Driver camera-device-ap1302" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/camera/device/ap1302" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-device-common.MIMXRT1173"/>
          <component_dependency value="driver.video-i2c.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ap1302.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ap1302.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-common.MIMXRT1173" name="camera-device-common" brief="Driver camera-device-common" version="1.0.0" full_name="Driver camera-device-common" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/camera/device" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_camera_device.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-max9286.MIMXRT1173" name="camera-device-max9286" brief="Driver camera-device-max9286" version="1.0.2" full_name="Driver camera-device-max9286" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/camera/device/max9286" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-device-common.MIMXRT1173"/>
          <component_dependency value="driver.video-i2c.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_max9286.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_max9286.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-mt9m114.MIMXRT1173" name="camera-device-mt9m114" brief="Driver camera-device-mt9m114" version="1.0.2" full_name="Driver camera-device-mt9m114" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/camera/device/mt9m114" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-device-common.MIMXRT1173"/>
          <component_dependency value="driver.video-i2c.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mt9m114.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mt9m114.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-ov5640.MIMXRT1173" name="camera-device-ov5640" brief="Driver camera-device-ov5640" version="1.0.1" full_name="Driver camera-device-ov5640" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/camera/device/ov5640" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-device-common.MIMXRT1173"/>
          <component_dependency value="driver.camera-device-sccb.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ov5640.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ov5640.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-ov7670.MIMXRT1173" name="camera-device-ov7670" brief="Driver camera-device-ov7670" version="1.0.2" full_name="Driver camera-device-ov7670" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/camera/device/ov7670" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-device-common.MIMXRT1173"/>
          <component_dependency value="driver.camera-device-sccb.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ov7670.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ov7670.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-ov7725.MIMXRT1173" name="camera-device-ov7725" brief="Driver camera-device-ov7725" version="1.0.1" full_name="Driver camera-device-ov7725" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/camera/device/ov7725" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-device-common.MIMXRT1173"/>
          <component_dependency value="driver.camera-device-sccb.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ov7725.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ov7725.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-sccb.MIMXRT1173" name="camera-device-sccb" brief="Driver camera-device-sccb" version="1.0.1" full_name="Driver camera-device-sccb" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/video/camera/device/sccb" project_base_path="video">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1173"/>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sccb.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sccb.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-receiver-common.MIMXRT1173" name="camera-receiver-common" brief="Driver camera-receiver-common" version="1.0.0" full_name="Driver camera-receiver-common" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/camera/receiver" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_camera_receiver.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-receiver-csi.MIMXRT1173" name="camera-receiver-csi" brief="Driver camera-receiver-csi" version="1.0.2" full_name="Driver camera-receiver-csi" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/camera/receiver/csi" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-receiver-common.MIMXRT1173"/>
          <component_dependency value="platform.drivers.csi.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_csi_camera_adapter.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_csi_camera_adapter.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-receiver-flexio.MIMXRT1173" name="camera-receiver-flexio" brief="Driver camera-receiver-flexio" version="1.0.2" full_name="Driver camera-receiver-flexio" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/camera/receiver/flexio" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-receiver-common.MIMXRT1173"/>
          <component_dependency value="platform.drivers.flexio_camera_edma.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_camera_adapter.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_camera_adapter.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dbi.MIMXRT1173" name="dbi" brief="Driver dbi" version="1.0.0" full_name="Driver dbi" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dbi" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.video-common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dbi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dbi.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dbi_flexio_edma.MIMXRT1173" name="dbi_flexio_edma" brief="Driver dbi_flexio_edma" version="1.0.1" full_name="Driver dbi_flexio_edma" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dbi/flexio" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.dbi.MIMXRT1173"/>
          <component_dependency value="platform.drivers.flexio_mculcd.MIMXRT1173"/>
          <component_dependency value="platform.drivers.flexio_mculcd_edma.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dbi_flexio_edma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dbi_flexio_edma.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dc-fb-common.MIMXRT1173" name="dc-fb-common" brief="Driver dc-fb-common" version="1.0.0" full_name="Driver dc-fb-common" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dc" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.video-common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dc_fb.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dc-fb-dbi.MIMXRT1173" name="dc-fb-dbi" brief="Driver dc-fb-dbi" version="1.0.0" full_name="Driver dc-fb-dbi" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dc/dbi" project_base_path="video">
      <defines>
        <define name="MCUX_DBI_LEGACY" value="0"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <component_dependency value="driver.dbi.MIMXRT1173"/>
          <component_dependency value="driver.dc-fb-common.MIMXRT1173"/>
          <component_dependency value="driver.display-common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dc_fb_dbi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dc_fb_dbi.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dc-fb-dsi-cmd.MIMXRT1173" name="dc-fb-dsi-cmd" brief="Driver dc-fb-dsi-cmd" version="1.1.1" full_name="Driver dc-fb-dsi-cmd" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dc/dsi_cmd" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <component_dependency value="driver.dc-fb-common.MIMXRT1173"/>
          <component_dependency value="driver.display-common.MIMXRT1173"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dc_fb_dsi_cmd.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dc_fb_dsi_cmd.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dc-fb-elcdif.MIMXRT1173" name="dc-fb-elcdif" brief="Driver dc-fb-elcdif" version="1.0.1" full_name="Driver dc-fb-elcdif" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dc/elcdif" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <component_dependency value="driver.dc-fb-common.MIMXRT1173"/>
          <component_dependency value="driver.display-common.MIMXRT1173"/>
          <component_dependency value="platform.drivers.elcdif.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dc_fb_elcdif.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dc_fb_elcdif.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dc-fb-lcdifv2.MIMXRT1173" name="dc-fb-lcdifv2" brief="Driver dc-fb-lcdifv2" version="1.0.2" full_name="Driver dc-fb-lcdifv2" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dc/lcdifv2" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <component_dependency value="driver.dc-fb-common.MIMXRT1173"/>
          <component_dependency value="driver.display-common.MIMXRT1173"/>
          <component_dependency value="platform.drivers.lcdifv2.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dc_fb_lcdifv2.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dc_fb_lcdifv2.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dc-fb-ssd1963.MIMXRT1173" name="dc-fb-ssd1963" brief="Driver dc-fb-ssd1963" version="1.0.2" full_name="Driver dc-fb-ssd1963" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dc/ssd1963" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <component_dependency value="driver.dc-fb-common.MIMXRT1173"/>
          <component_dependency value="driver.display-common.MIMXRT1173"/>
          <component_dependency value="driver.ssd1963.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dc_fb_ssd1963.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dc_fb_ssd1963.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-adv7535.MIMXRT1173" name="display-adv7535" brief="Driver display-adv7535" version="1.0.1" full_name="Driver display-adv7535" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/adv7535" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT1173"/>
          <component_dependency value="driver.video-i2c.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adv7535.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adv7535.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-sn65dsi83.MIMXRT1173" name="display-sn65dsi83" brief="Driver display-sn65dsi83" version="1.0.0" full_name="Driver display-sn65dsi83" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/sn65dsi83" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT1173"/>
          <component_dependency value="driver.video-i2c.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sn65dsi83.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sn65dsi83.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-common.MIMXRT1173" name="display-common" brief="Driver display-common" version="1.0.0" full_name="Driver display-common" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.video-common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_display.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-hx8394.MIMXRT1173" name="display-hx8394" brief="Driver display-hx8394" version="1.0.0" full_name="Driver display-hx8394" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/hx8394" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT1173"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_hx8394.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_hx8394.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-it6161.MIMXRT1173" name="display-it6161" brief="Driver display-it6161" version="1.0.0" full_name="Driver display-it6161" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/it6161" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT1173"/>
          <component_dependency value="driver.video-i2c.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_it6161.h"/>
        <files mask="hdmi_tx.h"/>
        <files mask="mipi_rx.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_it6161.c"/>
        <files mask="hdmi_tx.c"/>
        <files mask="mipi_rx.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-it6263.MIMXRT1173" name="display-it6263" brief="Driver display-it6263" version="1.0.1" full_name="Driver display-it6263" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/it6263" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT1173"/>
          <component_dependency value="driver.video-i2c.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_it6263.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_it6263.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-mipi-dsi-cmd.MIMXRT1173" name="display-mipi-dsi-cmd" brief="Driver display-mipi-dsi-cmd" version="1.0.2" full_name="Driver display-mipi-dsi-cmd" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/video/display/mipi_dsi_cmd" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.mipi_dsi_split.MIMXRT1173"/>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mipi_dsi_cmd.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mipi_dsi_cmd.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-rm67162.MIMXRT1173" name="display-rm67162" brief="Driver display-rm67162" version="1.0.2" full_name="Driver display-rm67162" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/rm67162" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT1173"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rm67162.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rm67162.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-co5300.MIMXRT1173" name="display-co5300" brief="Driver display-co5300" version="1.0.0" full_name="Driver display-co5300" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/co5300" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT1173"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_co5300.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_co5300.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-rm67191.MIMXRT1173" name="display-rm67191" brief="Driver display-rm67191" version="1.1.0" full_name="Driver display-rm67191" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/rm67191" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT1173"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rm67191.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rm67191.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-rm68191.MIMXRT1173" name="display-rm68191" brief="Driver display-rm68191" version="1.1.0" full_name="Driver display-rm68191" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/rm68191" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT1173"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rm68191.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rm68191.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-rm68200.MIMXRT1173" name="display-rm68200" brief="Driver display-rm68200" version="1.1.1" full_name="Driver display-rm68200" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/rm68200" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT1173"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rm68200.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rm68200.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-rm692c9.MIMXRT1173" name="display-rm692c9" brief="Driver display-rm692c9" version="1.1.0" full_name="Driver display-rm692c9" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/rm692c9" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT1173"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rm692c9.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rm692c9.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-rpi.MIMXRT1173" name="display-rpi" brief="Driver display-rpi" version="1.0.0" full_name="Driver display-rpi" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/rpi" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT1173"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rpi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rpi.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.fbdev.MIMXRT1173" name="fbdev" brief="Driver fbdev" version="1.0.4" full_name="Driver fbdev" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/video/display/fbdev" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.video-common.MIMXRT1173"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_fbdev.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_fbdev.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.video-common.MIMXRT1173" name="video-common" brief="Driver video-common" version="1.1.0" full_name="Driver video-common" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/video" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_video_common.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_video_common.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.video-i2c.MIMXRT1173" name="video-i2c" brief="Driver video-i2c" version="1.0.1" full_name="Driver video-i2c" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/i2c" project_base_path="video">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1173"/>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_video_i2c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_video_i2c.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.lpuart_adapter.MIMXRT1173" name="lpuart_adapter" brief="Component lpuart_adapter" version="1.0.0" full_name="lpuart_adapter" category="Device/SDK Drivers" user_visible="true" type="utilities" package_base_path="components/uart" project_base_path="component/uart">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpuart.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpuart.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.lpuart_dma_adapter.MIMXRT1173" name="lpuart_dma_adapter" brief="Component lpuart_dma_adapter" version="1.0.0" full_name="lpuart_dma_adapter" category="Device/SDK Drivers" user_visible="true" type="utilities" package_base_path="components/uart" project_base_path="component/uart">
      <defines>
        <define name="HAL_UART_DMA_ENABLE" value="0"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.edma.MIMXRT1173"/>
          <component_dependency value="component.lpuart_adapter.MIMXRT1173"/>
          <component_dependency value="component.timer_manager.MIMXRT1173"/>
          <component_dependency value="platform.drivers.lpuart.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpuart.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.ft5406_rt.MIMXRT1173" name="ft5406_rt" brief="Driver ft5406_rt" version="1.0.0" full_name="Driver ft5406_rt" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/touch/ft5406_rt" project_base_path="touchpanel">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ft5406_rt.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ft5406_rt.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.ft6x06.MIMXRT1173" name="ft6x06" brief="Driver ft6x06" version="1.0.0" full_name="Driver ft6x06" category="Device/SDK Drivers" user_visible="false" type="board_component" package_base_path="components/touch/ft6x06" project_base_path="touchpanel">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Driver_Include.I2C.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ft6x06.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ft6x06.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.timer_manager.MIMXRT1173" name="timer_manager" brief="Component timer_manager" version="1.0.0" full_name="Component timer_manager" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/timer_manager" project_base_path="component/timer_manager">
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="component.gpt_adapter.MIMXRT1173"/>
              <component_dependency value="platform.drivers.gpt.MIMXRT1173"/>
            </all>
            <all>
              <component_dependency value="component.pit_adapter.MIMXRT1173"/>
              <component_dependency value="platform.drivers.pit.MIMXRT1173"/>
            </all>
          </any_of>
          <component_dependency value="component.lists.MIMXRT1173"/>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_timer_manager.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_timer_manager.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.gpt_adapter.MIMXRT1173" name="gpt_adapter" brief="Component gpt_adapter" version="1.0.0" full_name="Component gpt_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/timer" project_base_path="component/timer">
      <defines>
        <define name="TIMER_PORT_TYPE_GPT" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.gpt.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_gpt.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.pit_adapter.MIMXRT1173" name="pit_adapter" brief="Component pit_adapter" version="1.0.0" full_name="Component pit_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/timer" project_base_path="component/timer">
      <defines>
        <define name="TIMER_PORT_TYPE_PIT" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.pit.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_pit.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.gpt_time_stamp_adapter.MIMXRT1173" name="gpt time stamp adapter" brief="Component gpt time stamp adapter" version="1.0.0" full_name="component gpt time stamp adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/time_stamp" project_base_path="component/time_stamp">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.gpt.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_time_stamp.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_gpt_time_stamp.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.pit_time_stamp_adapter.MIMXRT1173" name="pit time stamp adapter" brief="Component pit time stamp adapter" version="1.0.0" full_name="component pit time stamp adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/time_stamp" project_base_path="component/time_stamp">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.pit.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_time_stamp.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_pit_time_stamp.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.lpspi_adapter.MIMXRT1173" name="lpspi_adapter" brief="Component lpspi_adapter" version="1.0.0" full_name="Component lpspi_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/spi" project_base_path="component/spi">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <component_dependency value="platform.drivers.lpspi.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_spi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpspi.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.silicon_id.MIMXRT1173" name="silicon_id" brief="Driver silicon_id" version="2.0.1" full_name="Driver silicon_id" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/silicon_id" project_base_path="component/silicon_id">
      <dependencies>
        <all>
          <component_dependency value="component.silicon_id_imxrt1170.MIMXRT1173"/>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_silicon_id.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_silicon_id.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="utility.shell.MIMXRT1173" name="shell" brief="Utility shell" version="1.0.0" full_name="Utility shell" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT1173/utilities/shell" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="component.lists.MIMXRT1173"/>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <component_dependency value="utility.str.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_shell.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_shell.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager.MIMXRT1173" name="serial_manager" brief="Component serial_manager" version="1.0.1" full_name="Serial Manager" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="component.serial_manager_spi.MIMXRT1173"/>
            <component_dependency value="component.serial_manager_swo.MIMXRT1173"/>
            <component_dependency value="component.serial_manager_uart.MIMXRT1173"/>
            <component_dependency value="component.serial_manager_usb_cdc.MIMXRT1173"/>
            <component_dependency value="component.serial_manager_virtual.MIMXRT1173"/>
          </any_of>
          <component_dependency value="component.lists.MIMXRT1173"/>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_manager.h"/>
        <files mask="fsl_component_serial_port_internal.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_manager.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_spi.MIMXRT1173" name="serial_manager_spi" brief="Component serial_manager_spi" version="1.0.0" full_name="Serial Manager spi" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_SPI" value="1"/>
        <define name="SERIAL_PORT_TYPE_SPI_MASTER" value="1"/>
        <define name="SERIAL_PORT_TYPE_SPI_SLAVE" value="1"/>
        <define name="SERIAL_MANAGER_NON_BLOCKING_MODE" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.lpspi_adapter.MIMXRT1173"/>
          <component_dependency value="platform.drivers.lpspi.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_spi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_spi.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_uart.MIMXRT1173" name="serial_manager_uart" brief="Component serial_manager_uart" version="1.0.0" full_name="Serial Manager uart" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_UART" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpuart.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_uart.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_usb_cdc.MIMXRT1173" name="serial_manager_usb_cdc" brief="Component serial_manager_usb_cdc" version="1.0.0" full_name="Serial Manager USB CDC" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_USBCDC" value="1"/>
        <define name="DEBUG_CONSOLE_TRANSFER_NON_BLOCKING" value=""/>
        <define name="USB_DEVICE_CONFIG_CDC_ACM" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT1173"/>
          <component_dependency value="middleware.usb.device.cdc.MIMXRT1173"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_usb.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_usb.c"/>
      </source>
      <source relative_path="usb_cdc_adapter" type="c_include">
        <files mask="usb_device_descriptor.h"/>
        <files mask="usb_device_config.h"/>
      </source>
      <source relative_path="usb_cdc_adapter" type="src">
        <files mask="usb_device_descriptor.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="usb_cdc_adapter" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="usb_cdc_adapter" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.fxas21002cq.MIMXRT1173" name="fxas21002cq" brief="Driver fxas21002cq" version="1.0.0" full_name="Driver fxas21002cq" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/fxas21002cq" project_base_path="gyroscope">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1173"/>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_fxas.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_fxas.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.fxls8974cf.MIMXRT1173" name="fxls8974cf" brief="Driver fxls8974cf" version="1.0.0" full_name="Driver fxls8974cf" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/fxls8974cf" project_base_path="accel">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1173"/>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_fxls.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_fxls.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.fxos8700cq.MIMXRT1173" name="fxos8700cq" brief="Driver fxos8700cq" version="1.0.0" full_name="Driver fxos8700cq" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/fxos8700cq" project_base_path="accel">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1173"/>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_fxos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_fxos.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.htu21d.MIMXRT1173" name="htu21d" brief="Driver htu21d" version="1.0.0" full_name="Driver htu21d" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/htu21d" project_base_path="htu">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1173"/>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_htu21d.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_htu21d.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.icm42688p.MIMXRT1173" name="icm42688p" brief="Driver icm42688p" version="1.0.0" full_name="Driver icm42688p" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/icm42688p" project_base_path="icm42688p">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1173"/>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_icm42688p.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_icm42688p.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.lsm6dso.MIMXRT1173" name="lsm6dso" brief="Driver lsm6dso" version="1.0.0" full_name="Driver lsm6dso" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/lsm6dso" project_base_path="tilt_pedo">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1173"/>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lsm.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lsm.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.max30101.MIMXRT1173" name="max30101" brief="Driver max30101" version="1.0.0" full_name="Driver max30101" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/max30101" project_base_path="heartrate">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1173"/>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_max.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_max.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.mma8451q.MIMXRT1173" name="mma8451q" brief="Driver mma8451q" version="1.0.0" full_name="Driver mma8451q" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/mma8451q" project_base_path="accel">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1173"/>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mma.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.mma8652fc.MIMXRT1173" name="mma8652fc" brief="Driver mma8652fc" version="1.0.0" full_name="Driver mma8652fc" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/mma8652fc" project_base_path="accel">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1173"/>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mma.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.p3t1755.MIMXRT1173" name="p3t1755" brief="Driver p3t1755" version="2.0.0" full_name="Driver p3t1755" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/p3t1755" project_base_path="component/p3t1755">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1173"/>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_p3t1755.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_p3t1755.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.tsl2561.MIMXRT1173" name="tsl2561" brief="Driver tsl2561" version="1.0.0" full_name="Driver tsl2561" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/tsl2561" project_base_path="tsl">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1173"/>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_tsl2561.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_tsl2561.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.power_manager_framework.MIMXRT1173" name="power_manager_core" brief="Component power manager core level" version="2.0.0" full_name="Component power manager core" category="Device/SDK Drivers" user_visible="false" type="software_component" package_base_path="components/power_manager/core" project_base_path="component/power_manager">
      <defines>
        <define name="GENERIC_LIST_LIGHT" value="1"/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="platform.drivers.common.MIMXRT1173"/>
            <component_dependency value="platform.drivers.pgmc.MIMXRT1173"/>
            <component_dependency value="platform.drivers.ssarc.MIMXRT1173"/>
          </any_of>
          <component_dependency value="component.lists.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pm_core.h"/>
        <files mask="fsl_pm_config.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pm_core.c"/>
      </source>
      <source relative_path="../devices/RT1170" type="src">
        <files mask="fsl_pm_device.c"/>
      </source>
      <source relative_path="../devices/RT1170" type="c_include">
        <files mask="fsl_pm_device.h"/>
        <files mask="fsl_pm_device_config.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="../devices/RT1170" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="../devices/RT1170" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.pf1550.MIMXRT1173" name="pf1550" brief="Driver pf1550" version="1.0.0" full_name="Driver pf1550" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/pmic/pf1550" project_base_path="component/pmic/pf1550">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1173"/>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pf1550.c"/>
        <files mask="fsl_pf1550_charger.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pf1550.h"/>
        <files mask="fsl_pf1550_charger.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.pf3000.MIMXRT1173" name="pf3000" brief="Driver pf3000" version="1.0.0" full_name="Driver pf3000" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/pmic/pf3000" project_base_path="component/pmic/pf3000">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1173"/>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pf3000.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pf3000.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.pf5020.MIMXRT1173" name="pf5020" brief="Driver pf5020" version="2.0.0" full_name="Driver pf5020" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/pmic/pf5020" project_base_path="component/pmic/pf5020">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1173"/>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pf5020.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pf5020.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.eth_phy_common.MIMXRT1173" name="phy-common" brief="Driver phy-common" version="2.0.0" full_name="Driver phy-common" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/phy" project_base_path="component/phy">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_phy.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.phyaqr113c.MIMXRT1173" name="phy-device-aqr113c" brief="Driver phy-device-aqr113c" version="2.0.0" full_name="Driver phy-device-aqr113c" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/phy/device/phyaqr113c" project_base_path="component/phy">
      <dependencies>
        <all>
          <component_dependency value="component.eth_phy_common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_phyaqr113c.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_phyaqr113c.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.phyar8031.MIMXRT1173" name="phy-device-ar8031" brief="Driver phy-device-ar8031" version="2.0.0" full_name="Driver phy-device-ar8031" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/phy/device/phyar8031" project_base_path="component/phy">
      <dependencies>
        <all>
          <component_dependency value="component.eth_phy_common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_phyar8031.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_phyar8031.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.phydp83848.MIMXRT1173" name="phy-device-dp83848" brief="Driver phy-device-dp83848" version="2.0.0" full_name="Driver phy-device-dp83848" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/phy/device/phydp83848" project_base_path="component/phy">
      <dependencies>
        <all>
          <component_dependency value="component.eth_phy_common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_phydp83848.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_phydp83848.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.phyksz8041.MIMXRT1173" name="phy-device-ksz8041" brief="Driver phy-device-ksz8041" version="2.0.0" full_name="Driver phy-device-ksz8041" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/phy/device/phyksz8041" project_base_path="component/phy">
      <dependencies>
        <all>
          <component_dependency value="component.eth_phy_common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_phyksz8041.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_phyksz8041.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.phyksz8081.MIMXRT1173" name="phy-device-ksz8081" brief="Driver phy-device-ksz8081" version="2.0.0" full_name="Driver phy-device-ksz8081" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/phy/device/phyksz8081" project_base_path="component/phy">
      <dependencies>
        <all>
          <component_dependency value="component.eth_phy_common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_phyksz8081.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_phyksz8081.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.phylan8720a.MIMXRT1173" name="phy-device-lan8720a" brief="Driver phy-device-lan8720a" version="2.0.0" full_name="Driver phy-device-lan8720a" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/phy/device/phylan8720a" project_base_path="component/phy">
      <dependencies>
        <all>
          <component_dependency value="component.eth_phy_common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_phylan8720a.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_phylan8720a.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.phylan8741.MIMXRT1173" name="phy-device-lan8741" brief="Driver phy-device-lan8741" version="2.0.0" full_name="Driver phy-device-lan8741" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/phy/device/phylan8741" project_base_path="phy">
      <dependencies>
        <all>
          <component_dependency value="component.eth_phy_common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_phylan8741.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_phylan8741.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.phyrtl8201.MIMXRT1173" name="phy-device-rtl8201" brief="Driver phy-device-rtl8201" version="2.0.0" full_name="Driver phy-device-rtl8201" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/phy/device/phyrtl8201" project_base_path="component/phy">
      <dependencies>
        <all>
          <component_dependency value="component.eth_phy_common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_phyrtl8201.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_phyrtl8201.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.phyrtl8211f.MIMXRT1173" name="phy-device-rtl8211f" brief="Driver phy-device-rtl8211f" version="2.0.0" full_name="Driver phy-device-rtl8211f" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/phy/device/phyrtl8211f" project_base_path="component/phy">
      <dependencies>
        <all>
          <component_dependency value="component.eth_phy_common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_phyrtl8211f.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_phyrtl8211f.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.phyvsc8541.MIMXRT1173" name="phy-device-vsc8541" brief="Driver phy-device-vsc8541" version="2.0.0" full_name="Driver phy-device-vsc8541" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/phy/device/phyvsc8541" project_base_path="component/phy">
      <dependencies>
        <all>
          <component_dependency value="component.eth_phy_common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_phyvsc8541.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_phyvsc8541.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.osa.MIMXRT1173" name="osa" brief="Component osa" version="1.0.0" full_name="Component osa" category="NXP Component/OS Abstraction Layer" user_visible="false" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <any_of>
            <all>
              <not>
                <component_dependency value="middleware.freertos-kernel.MIMXRT1173"/>
              </not>
              <component_dependency value="component.osa_bm.MIMXRT1173"/>
            </all>
            <all>
              <component_dependency value="component.osa_free_rtos.MIMXRT1173"/>
              <component_dependency value="middleware.freertos-kernel.MIMXRT1173"/>
            </all>
          </any_of>
          <component_dependency value="component.osa_interface.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_osa.cmake" hidden="true"/>
      </source>
    </component>
    <component id="component.osa_bm.MIMXRT1173" name="osa_bm" brief="Component osa_bm" version="1.0.0" full_name="Component osa_bm" category="NXP Component/OS Abstraction Layer" user_visible="true" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <defines>
        <define name="USE_RTOS" value="0"/>
      </defines>
      <dependencies>
        <all>
          <not>
            <component_dependency value="middleware.freertos-kernel.MIMXRT1173"/>
          </not>
          <component_dependency value="component.osa.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction_bm.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_os_abstraction_bm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_osa_bm.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.osa_free_rtos.MIMXRT1173" name="osa_free_rtos" brief="Component osa_free_rtos" version="1.0.0" full_name="Component osa_free_rtos" category="NXP Component/OS Abstraction Layer" user_visible="true" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <defines>
        <define name="USE_RTOS" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMXRT1173"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction_free_rtos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_os_abstraction_free_rtos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_osa_free_rtos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.osa_interface.MIMXRT1173" name="osa_interface" brief="Component osa interface" version="1.0.0" full_name="Component osa interface" category="NXP Component/OS Abstraction Layer" user_visible="true" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <component_dependency value="component.lists.MIMXRT1173"/>
          <component_dependency value="component.osa_template_config.MIMXRT1173"/>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_osa_interface.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.mem_manager.MIMXRT1173" name="mem_manager" brief="Component mem_manager" version="1.0.0" full_name="Component mem_manager" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/mem_manager" project_base_path="component/mem_manager">
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="component.mem_manager_freertos.MIMXRT1173"/>
              <component_dependency value="middleware.freertos-kernel.MIMXRT1173"/>
            </all>
            <component_dependency value="component.mem_manager_legacy.MIMXRT1173"/>
            <component_dependency value="component.mem_manager_light.MIMXRT1173"/>
          </any_of>
          <component_dependency value="component.lists.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_mem_manager.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.mem_manager_legacy.MIMXRT1173" name="mem_manager_legacy" brief="Component mem_manager_legacy" version="1.0.0" full_name="Component mem_manager_legacy" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/mem_manager" project_base_path="component/mem_manager">
      <dependencies>
        <all>
          <component_dependency value="component.mem_manager.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_component_mem_manager.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.mem_manager_freertos.MIMXRT1173" name="mem_manager_freertos" brief="Component mem_manager_freertos" version="1.0.0" full_name="Component mem_manager_freertos" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/mem_manager" project_base_path="component/mem_manager">
      <dependencies>
        <all>
          <component_dependency value="component.mem_manager.MIMXRT1173"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_component_mem_manager_freertos.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.mem_manager_light.MIMXRT1173" name="mem_manager_light" brief="Component mem_manager_light" version="1.0.0" full_name="Component mem_manager_light" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/mem_manager" project_base_path="component/mem_manager">
      <dependencies>
        <all>
          <component_dependency value="component.mem_manager.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_component_mem_manager_light.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.log.MIMXRT1173" name="log" brief="Component log" version="1.0.0" full_name="Component log" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <component_dependency value="utility.str.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log.h"/>
        <files mask="fsl_component_log_config.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.log.backend.debug_console.MIMXRT1173" name="log_backend_debug_console" brief="Component log backend debug console" version="1.0.0" full_name="Component log backend debug console" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="component.log.MIMXRT1173"/>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <component_dependency value="utility.debug_console.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log_backend_debugconsole.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log_backend_debugconsole.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.log.backend.debug_console_lite.MIMXRT1173" name="log_backend_debug_console_lite" brief="Component log backend debug console lite" version="1.0.0" full_name="Component log backend debug console lite" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="component.log.MIMXRT1173"/>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <component_dependency value="utility.debug_console_lite.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log_backend_debugconsole.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log_backend_debugconsole.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.log.backend.ringbuffer.MIMXRT1173" name="log_backend_ring_buffer" brief="Component log backend ring buffer" version="1.0.0" full_name="Component log backend ring buffer" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="component.log.MIMXRT1173"/>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log_backend_ringbuffer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log_backend_ringbuffer.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.lists.MIMXRT1173" name="lists" brief="Component lists" version="1.0.0" full_name="Component lists" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/lists" project_base_path="component/lists">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_generic_list.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_generic_list.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.led.MIMXRT1173" name="led" brief="Component led" version="1.0.0" full_name="Component led" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/led" project_base_path="component/led">
      <dependencies>
        <all>
          <component_dependency value="component.igpio_adapter.MIMXRT1173"/>
          <component_dependency value="platform.drivers.igpio.MIMXRT1173"/>
          <component_dependency value="component.timer_manager.MIMXRT1173"/>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_led.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_led.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.flash_adapter.MIMXRT1173" name="flash_adapter" brief="Component flash_adapter" version="1.0.0" full_name="Component flash_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/internal_flash" project_base_path="component/internal_flash">
      <dependencies>
        <all>
          <component_dependency value="component.flexspi_nor_flash_adapter_rt1170evkb.MIMXRT1173"/>
          <board_dependency value="evkbmimxrt1170"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
    </component>
    <component id="component.flexspi_nor_flash_adapter_rt1170evkb.MIMXRT1173" name="flexspi_nor_flash_adapter_rt1170evkb" brief="Component flexspi_nor_flash_adapter_rt1170evkb" version="1.0.0" full_name="Component flexspi_nor_flash_adapter_rt1170evkb" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/internal_flash" project_base_path="component/internal_flash">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexspi.MIMXRT1173"/>
          <board_dependency value="evkbmimxrt1170"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="evkbmimxrt1170" type="src">
        <files mask="fsl_adapter_flexspi_nor_flash.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_flash.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.lpi2c_adapter.MIMXRT1173" name="lpi2c_adapter" brief="Component lpi2c_adapter" version="1.0.0" full_name="Component lpi2c_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/i2c" project_base_path="component/i2c">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1173"/>
          <component_dependency value="component.i2c_adapter_interface.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpi2c.c"/>
      </source>
    </component>
    <component id="component.i2c_adapter_interface.MIMXRT1173" name="i2c_adapter_interface" brief="Component i2c_adapter_interface" version="1.0.0" full_name="Component i2c_adapter_interface" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/i2c" project_base_path="component/i2c">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpi2c.MIMXRT1173"/>
          <component_dependency value="component.lpi2c_adapter.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_i2c.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.igpio_adapter.MIMXRT1173" name="igpio_adapter" brief="Component igpio_adapter" version="1.0.1" full_name="Component igpio_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/gpio" project_base_path="component/gpio">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.igpio.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_gpio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_igpio.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.flash_nand_flexspi.MIMXRT1173" name="flash_nand_flexspi" brief="Component.flash_nand_flexspi" version="1.0.0" full_name="Component flash_nand_flexspi" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/flash" project_base_path="nand_flash">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexspi.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="nand" type="c_include">
        <files mask="fsl_nand_flash.h"/>
      </source>
      <source relative_path="nand/flexspi" type="src">
        <files mask="fsl_flexspi_nand_flash.c"/>
      </source>
      <source relative_path="nand/flexspi" type="c_include">
        <files mask="fsl_flexspi_nand_flash.h"/>
      </source>
      <include_paths>
        <include_path relative_path="nand" type="c_include"/>
        <include_path relative_path="nand/flexspi" type="c_include"/>
        <include_path relative_path="nand" type="asm_include"/>
        <include_path relative_path="nand/flexspi" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.flash_nand_semc.MIMXRT1173" name="flash_nand_semc" brief="Component flash_nand_semc" version="1.0.0" full_name="Component flash_nand_semc" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/flash" project_base_path="nand_flash">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.semc.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="nand" type="c_include">
        <files mask="fsl_nand_flash.h"/>
      </source>
      <source relative_path="nand/semc" type="src">
        <files mask="fsl_semc_nand_flash.c"/>
      </source>
      <source relative_path="nand/semc" type="c_include">
        <files mask="fsl_semc_nand_flash.h"/>
      </source>
      <include_paths>
        <include_path relative_path="nand" type="c_include"/>
        <include_path relative_path="nand/semc" type="c_include"/>
        <include_path relative_path="nand" type="asm_include"/>
        <include_path relative_path="nand/semc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.flash_nor_flexspi.MIMXRT1173" name="flash_nor_flexspi" brief="Component flash_nor_flexspi" version="1.0.0" full_name="Component flash_nor_flexspi" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/flash" project_base_path="nor_flash">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexspi.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="nor" type="c_include">
        <files mask="fsl_nor_flash.h"/>
      </source>
      <source relative_path="nor/flexspi" type="src">
        <files mask="fsl_flexspi_nor_flash.c"/>
      </source>
      <source relative_path="nor/flexspi" type="c_include">
        <files mask="fsl_flexspi_nor_flash.h"/>
      </source>
      <include_paths>
        <include_path relative_path="nor" type="c_include"/>
        <include_path relative_path="nor/flexspi" type="c_include"/>
        <include_path relative_path="nor" type="asm_include"/>
        <include_path relative_path="nor/flexspi" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.flash_nor_lpspi.MIMXRT1173" name="flash_nor_lpspi" brief="Component flash_nor_lpspi" version="1.0.0" full_name="Component flash_nor_lpspi" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/flash" project_base_path="nor_flash">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpspi.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="nor" type="c_include">
        <files mask="fsl_nor_flash.h"/>
      </source>
      <source relative_path="nor/lpspi" type="src">
        <files mask="fsl_lpspi_nor_flash.c"/>
        <files mask="fsl_lpspi_mem_adapter.c"/>
      </source>
      <source relative_path="nor/lpspi" type="c_include">
        <files mask="fsl_lpspi_nor_flash.h"/>
        <files mask="fsl_lpspi_mem_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="nor" type="c_include"/>
        <include_path relative_path="nor/lpspi" type="c_include"/>
        <include_path relative_path="nor" type="asm_include"/>
        <include_path relative_path="nor/lpspi" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.mflash_onchip.MIMXRT1173" name="mflash onchip" brief="mflash onchip" version="1.0.0" full_name="mflash onchip" category="Device/SDK Drivers" user_visible="false" type="software_component" package_base_path="components/flash/mflash" project_base_path="flash/mflash">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="platform.drivers.cache_armv7_m7.MIMXRT1173"/>
            <component_dependency value="platform.drivers.cache_lmem.MIMXRT1173"/>
            <component_dependency value="driver.romapi.MIMXRT1173"/>
          </any_of>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
    </component>
    <component id="component.mflash_offchip.MIMXRT1173" name="mflash offchip" brief="mflash offchip" version="1.0.0" full_name="mflash offchip" category="Device/SDK Drivers" user_visible="false" type="software_component" package_base_path="components/flash/mflash" project_base_path="flash/mflash">
      <defines>
        <define name="MFLASH_FILE_BASEADDR" value="14221312"/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="platform.drivers.cache_armv7_m7.MIMXRT1173"/>
            <component_dependency value="platform.drivers.cache_lmem.MIMXRT1173"/>
            <component_dependency value="platform.drivers.flexspi.MIMXRT1173"/>
            <component_dependency value="driver.romapi.MIMXRT1173"/>
          </any_of>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="mflash_common.h"/>
        <files mask="mflash_file.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="mflash_file.c"/>
      </source>
      <source relative_path="mimxrt1170evkb" type="src" boards="evkbmimxrt1170">
        <files mask="mflash_drv.c"/>
      </source>
      <source relative_path="mimxrt1170evkb" type="c_include" boards="evkbmimxrt1170">
        <files mask="mflash_drv.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="mimxrt1170evkb" type="c_include" boards="evkbmimxrt1170"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="mimxrt1170evkb" type="asm_include" boards="evkbmimxrt1170"/>
      </include_paths>
    </component>
    <component id="component.exception_handling_cm7.MIMXRT1173" name="exception_handling_cm7" brief="Component exception_handling_cm7" version="1.0.0" full_name="Component exception_handling_cm7" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/exception_handling" project_base_path="component/exception_handling">
      <dependencies>
        <all>
          <component_dependency value="platform.utilities.assert.MIMXRT1173"/>
          <component_dependency value="utility.debug_console.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_exception_handling.h"/>
      </source>
      <source relative_path="cm7" type="src">
        <files mask="fsl_component_exception_handling.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_wifi_nxp.MIMXRT1173" name="edgefast_wifi_nxp" brief="Edgefast Wi-Fi NXP is a blocking layer for Wi-Fi NXP" version="1.0.0" full_name="Edgefast Wi-Fi NXP" category="Wireless/Edgefast Wi-Fi" user_visible="true" type="middleware" package_base_path="components/edgefast_wifi" project_base_path="edgefast_wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT1173"/>
          <component_dependency value="middleware.lwip.MIMXRT1173"/>
          <component_dependency value="middleware.wifi.MIMXRT1173"/>
          <component_dependency value="middleware.wifi.osa_free_rtos.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="include" type="c_include">
        <files mask="wpl.h"/>
      </source>
      <source relative_path="source" type="src">
        <files mask="wpl_nxp.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_wifi_nxp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.ili9341.MIMXRT1173" name="ili9341" brief="Driver ili9341" version="1.0.2" full_name="Driver ili9341" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/display/ili9341" project_base_path="lcdc">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ili9341.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ili9341.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.psp27801.MIMXRT1173" name="psp27801" brief="Driver psp27801" version="1.0.0" full_name="Driver psp27801" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/display/psp27801" project_base_path="oled">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_psp27801.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_psp27801.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.ssd1963.MIMXRT1173" name="ssd1963" brief="Driver ssd1963" version="1.2.0" full_name="Driver ssd1963" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/display/ssd1963" project_base_path="lcdc">
      <dependencies>
        <all>
          <component_dependency value="driver.dbi.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ssd1963.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ssd1963.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.st7796s.MIMXRT1173" name="st7796s" brief="Driver st7796s" version="1.0.0" full_name="Driver st7796s" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/display/st7796s" project_base_path="lcdc">
      <dependencies>
        <all>
          <component_dependency value="driver.dbi.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_st7796s.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_st7796s.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.common_task.MIMXRT1173" name="common_task" brief="Component common_task" version="1.0.0" full_name="Component common_task" category="NXP Component/OS Abstraction Layer" user_visible="true" type="software_component" package_base_path="components/common_task" project_base_path="component/common_task">
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_common_task.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_common_task.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_common_task.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.codec_i2c.MIMXRT1173" name="codec_i2c" brief="Component codec_i2c" version="2.1.0" full_name="Component codec_i2c" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/i2c" project_base_path="codec">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.i2c_adapter_interface.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_codec_i2c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_codec_i2c.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.ak4497.MIMXRT1173" name="ak4497" brief="Driver ak4497" version="2.1.2" full_name="Driver ak4497" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/ak4497" project_base_path="codec">
      <defines>
        <define name="CODEC_AK4497_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.ak4497_adapter.MIMXRT1173"/>
          <component_dependency value="component.codec_adapters.MIMXRT1173"/>
          <component_dependency value="component.codec_i2c.MIMXRT1173"/>
          <component_dependency value="driver.codec.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ak4497.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ak4497.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.cs42448.MIMXRT1173" name="cs42448" brief="Driver cs42448" version="2.0.1" full_name="Driver cs42448" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/cs42448" project_base_path="codec">
      <defines>
        <define name="CODEC_CS42448_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT1173"/>
          <component_dependency value="component.codec_i2c.MIMXRT1173"/>
          <component_dependency value="component.cs42448_adapter.MIMXRT1173"/>
          <component_dependency value="driver.codec.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cs42448.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_cs42448.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.cs42888.MIMXRT1173" name="cs42888" brief="Driver cs42888" version="2.1.3" full_name="Driver cs42888" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/cs42888" project_base_path="codec">
      <defines>
        <define name="CODEC_CS42888_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT1173"/>
          <component_dependency value="component.codec_i2c.MIMXRT1173"/>
          <component_dependency value="component.cs42888_adapter.MIMXRT1173"/>
          <component_dependency value="driver.codec.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cs42888.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_cs42888.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dialog7212.MIMXRT1173" name="dialog7212" brief="Driver dialog7212" version="2.3.1" full_name="Driver dialog7212" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/da7212" project_base_path="codec">
      <defines>
        <define name="CODEC_DA7212_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT1173"/>
          <component_dependency value="component.codec_i2c.MIMXRT1173"/>
          <component_dependency value="component.da7212_adapter.MIMXRT1173"/>
          <component_dependency value="driver.codec.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dialog7212.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dialog7212.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.pcm186x.MIMXRT1173" name="pcm186x" brief="Driver pcm186x" version="2.0.1" full_name="Driver pcm186x" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/pcm186x" project_base_path="codec">
      <defines>
        <define name="CODEC_PCM186X_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT1173"/>
          <component_dependency value="component.codec_i2c.MIMXRT1173"/>
          <component_dependency value="component.pcm186x_adapter.MIMXRT1173"/>
          <component_dependency value="driver.codec.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pcm186x.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pcm186x.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.pcm512x.MIMXRT1173" name="pcm512x" brief="Driver pcm512x" version="2.0.1" full_name="Driver pcm512x" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/pcm512x" project_base_path="codec">
      <defines>
        <define name="CODEC_PCM512X_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT1173"/>
          <component_dependency value="component.codec_i2c.MIMXRT1173"/>
          <component_dependency value="component.pcm512x_adapter.MIMXRT1173"/>
          <component_dependency value="driver.codec.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pcm512x.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pcm512x.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.sgtl5000.MIMXRT1173" name="sgtl5000" brief="Driver sgtl5000" version="2.1.1" full_name="Driver sgtl5000" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/sgtl5000" project_base_path="codec">
      <defines>
        <define name="CODEC_SGTL5000_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT1173"/>
          <component_dependency value="component.codec_i2c.MIMXRT1173"/>
          <component_dependency value="component.sgtl_adapter.MIMXRT1173"/>
          <component_dependency value="driver.codec.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sgtl5000.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sgtl5000.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.tfa9896.MIMXRT1173" name="tfa9896" brief="Driver tfa9896" version="6.0.2" full_name="Driver tfa9896" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/tfa9896" project_base_path="codec">
      <defines>
        <define name="CODEC_TFA9896_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT1173"/>
          <component_dependency value="component.codec_i2c.MIMXRT1173"/>
          <component_dependency value="component.tfa9896_adapter.MIMXRT1173"/>
          <component_dependency value="driver.codec.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_tfa9896_buffer.h"/>
        <files mask="fsl_tfa9896.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_hal_registers.c"/>
        <files mask="fsl_tfa9896.c"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="MIMXRT595595-EVK_TFA9896_SW.pdf"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.tfa9xxx.MIMXRT1173" name="tfa9xxx" brief="Driver tfa9xxx" version="2.1.0" full_name="Driver tfa9xxx" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/tfa9xxx" project_base_path="codec/tfa9xxx">
      <defines>
        <define name="CODEC_TFA9XXX_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT1173"/>
          <component_dependency value="component.codec_i2c.MIMXRT1173"/>
          <component_dependency value="component.tfa9xxx_adapter.MIMXRT1173"/>
          <component_dependency value="driver.codec.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="tfa_config_TFA9892N1.h"/>
        <files mask="tfa_config_TFA9894N1.h"/>
        <files mask="tfa_config_TFA9894N2.h"/>
        <files mask="fsl_tfa9xxx.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_tfa9xxx.c"/>
        <files mask="fsl_tfa9xxx_IMX.c"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="README.md"/>
      </source>
      <source relative_path="vas_tfa_drv" type="c_include">
        <files mask="config.h"/>
        <files mask="tfa2_container.h"/>
        <files mask="tfa2_dev.h"/>
        <files mask="tfa2_dsp_fw.h"/>
        <files mask="tfa2_haptic.h"/>
        <files mask="tfa9xxx_parameters.h"/>
        <files mask="tfa_haptic_fw_defs.h"/>
      </source>
      <source relative_path="vas_tfa_drv" type="src">
        <files mask="tfa2_container.c"/>
        <files mask="tfa2_dev.c"/>
        <files mask="tfa2_haptic.c"/>
        <files mask="tfa2_init.c"/>
        <files mask="tfa_container_crc32.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="vas_tfa_drv" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="vas_tfa_drv" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.tfa9xxx_hal.MIMXRT1173" name="tfa9xxx_hal" brief="Driver tfa9xxx_hal" version="2.1.0" full_name="Driver tfa9xxx_hal" category="Device/SDK Drivers" user_visible="false" type="software_component" package_base_path="components/codec/tfa9xxx" project_base_path="codec/tfa9xxx">
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT1173"/>
          <component_dependency value="component.codec_i2c.MIMXRT1173"/>
          <component_dependency value="driver.codec.MIMXRT1173"/>
          <component_dependency value="driver.tfa9xxx.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="tfa_device_hal.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="tfa_device_hal.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.wm8524.MIMXRT1173" name="wm8524" brief="Driver wm8524" version="2.1.1" full_name="Driver wm8524" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/wm8524" project_base_path="codec">
      <defines>
        <define name="CODEC_WM8524_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT1173"/>
          <component_dependency value="component.codec_i2c.MIMXRT1173"/>
          <component_dependency value="component.wm8524_adapter.MIMXRT1173"/>
          <component_dependency value="driver.codec.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wm8524.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wm8524.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.wm8904.MIMXRT1173" name="wm8904" brief="Driver wm8904" version="2.5.1" full_name="Driver wm8904" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/wm8904" project_base_path="codec">
      <defines>
        <define name="CODEC_WM8904_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT1173"/>
          <component_dependency value="component.codec_i2c.MIMXRT1173"/>
          <component_dependency value="component.wm8904_adapter.MIMXRT1173"/>
          <component_dependency value="driver.codec.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wm8904.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wm8904.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.wm8960.MIMXRT1173" name="wm8960" brief="Driver wm8960" version="2.2.4" full_name="Driver wm8960" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/wm8960" project_base_path="codec">
      <defines>
        <define name="CODEC_WM8960_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT1173"/>
          <component_dependency value="component.codec_i2c.MIMXRT1173"/>
          <component_dependency value="component.wm8960_adapter.MIMXRT1173"/>
          <component_dependency value="driver.codec.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wm8960.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wm8960.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.wm8962.MIMXRT1173" name="wm8962" brief="Driver wm8962" version="2.2.0" full_name="Driver wm8962" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/wm8962" project_base_path="codec">
      <defines>
        <define name="CODEC_WM8962_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT1173"/>
          <component_dependency value="component.codec_i2c.MIMXRT1173"/>
          <component_dependency value="component.wm8962_adapter.MIMXRT1173"/>
          <component_dependency value="driver.codec.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wm8962.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wm8962.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.button.MIMXRT1173" name="button" brief="Component button" version="1.0.0" full_name="Component button" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/button" project_base_path="component/button">
      <dependencies>
        <all>
          <component_dependency value="component.igpio_adapter.MIMXRT1173"/>
          <component_dependency value="platform.drivers.igpio.MIMXRT1173"/>
          <component_dependency value="component.timer_manager.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_button.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_button.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.audio_sai_edma_adapter.MIMXRT1173" name="sai_edma_adapter" brief="Component sai_edma_adapter" version="1.0.0" full_name="Component sai_edma_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/audio" project_base_path="component/audio">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.sai_edma.MIMXRT1173"/>
          <device_dependency value="MIMXRT1173xxxxx"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_audio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_sai.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
  </components>
</ksdk:manifest>
