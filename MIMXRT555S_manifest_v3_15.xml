<?xml version="1.0" encoding="UTF-8"?>
<ksdk:manifest xmlns:ksdk="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" id="SDK_2.x_MIMXRT555S" name="MIMXRT555S" brief="This is SDK version 24.12.00 manifest file. It describes the content of the MIMXRT555S and additional settings for tools that support SDK version 24.12.00" format_version="3.15" api_version="2.0.0" configuration="d961dc4a82185f20d3b19eebb4cb11ad" xsi:schemaLocation="http://nxp.com/ksdk/2.0/ksdk_manifest_v3.0.xsd http://nxp.com/mcuxpresso/sdk/sdk_manifest_v3.15.xsd">
  <!--Timestamp (UTC): 2025-01-16 12:46:22.027335-->
  <!--This manifest is generated based on sdk repo commit: TODO-->
  <externalDefinitions>
    <definition extID="fusionf1_MIMXRT595S"/>
  </externalDefinitions>
  <ksdk id="MCUXpresso241200" name="MCUXpresso241200" version="24.12.00" revision="871 2025-01-14"/>
  <compilers>
    <compiler id="compiler_armclang" name="armclang" type="armclang"/>
    <compiler id="compiler_gcc" name="gcc" type="gcc"/>
    <compiler id="compiler_iar" name="iar" type="iar"/>
  </compilers>
  <toolchainSettings>
    <toolchainSetting id="com.nxp.mcuxpresso" name="mcuxpresso" version="24.12.00" full_name="MCUXpresso IDE" compiler="compiler_gcc" toolchain="mcuxpresso">
      <option id="gnu.cpp.compiler.option.optimization.flags" type="string" user_name="">
        <value>-fno-common</value>
      </option>
      <option id="gnu.c.compiler.option.optimization.flags" type="string" user_name="">
        <value>-fno-common</value>
      </option>
      <option id="gnu.cpp.link.option.nostdlibs" type="boolean" user_name="">
        <value>true</value>
      </option>
      <option id="com.crt.advproject.link.cpp.flashconfigenable" type="boolean" user_name="">
        <value>true</value>
      </option>
      <option id="com.crt.advproject.link.flashconfigenable" type="boolean" user_name="">
        <value>true</value>
      </option>
      <option id="gnu.c.link.option.nostdlibs" type="boolean" user_name="">
        <value>true</value>
      </option>
    </toolchainSetting>
  </toolchainSettings>
  <toolchains>
    <toolchain id="armgcc" name="GCC_ARM_Embedded_10-2021.10" version="13.2.1" full_name="GCC ARM Embedded 10-2021.10" compiler="compiler_gcc" type="armgcc" vendor="GCC ARM Embedded" vendor_url="http://launchpad.net/gcc-arm-embedded"/>
    <toolchain id="mdk" name="Keil_MDK" version="5.41" full_name="Keil MDK" compiler="compiler_armclang" type="mdk" vendor="ARM" vendor_url="http://www.arm.com"/>
    <toolchain id="iar" name="IAR_Embedded_Workbench_for_ARM" version="9.60.3" full_name="IAR Embedded Workbench for ARM" compiler="compiler_iar" type="iar" vendor="IAR Systems" vendor_url="http://www.iar.com"/>
    <toolchain id="mcuxpresso" name="MCUXpresso_IDE" version="24.12.00" full_name="MCUXpresso IDE" compiler="compiler_gcc" type="mcuxpresso" vendor="NXP Semiconductors" vendor_url="http://www.nxp.com">
      <debug>
        <debug_configuration id="com.crt.advproject.config.exe.release" name="Release Configuration" probe="LinkServer">
          <scripts>
            <script type="init" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>
set remotetimeout 60000
##target_extended_remote##
set mem inaccessible-by-default ${mem.access}
mon ondisconnect ${ondisconnect}
set arm force-mode thumb
${load}</script>
            </script>
            <script type="run" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>${run}</script>
            </script>
          </scripts>
          <params>
            <params id="vector.catch.release.mcuxpresso" name="vector.catch" value="false"/>
            <params id="internal.cache.release.mcuxpresso" name="internal.cache" value="Disable"/>
          </params>
        </debug_configuration>
        <debug_configuration id="com.crt.advproject.config.exe.debug" name="Debug Configuration" probe="LinkServer">
          <scripts>
            <script type="init" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>
set remotetimeout 60000
##target_extended_remote##
set mem inaccessible-by-default ${mem.access}
mon ondisconnect ${ondisconnect}
set arm force-mode thumb
${load}</script>
            </script>
            <script type="run" silent="false" emulators="${gdb.stub} -mi -info-emu">
              <script>${run}</script>
            </script>
          </scripts>
          <params>
            <params id="vector.catch.debug.mcuxpresso" name="vector.catch" value="false"/>
            <params id="internal.cache.debug.mcuxpresso" name="internal.cache" value="Disable"/>
          </params>
        </debug_configuration>
        <debug_configuration id="com.nxp.mcuxpresso.core.debug.support.segger.debug" name="Debug Configuration" probe="Segger"/>
        <debug_configuration id="com.nxp.mcuxpresso.core.debug.support.segger.release" name="Release Configuration" probe="Segger"/>
      </debug>
    </toolchain>
  </toolchains>
  <boards>
    <board id="evkmimxrt595" name="EVK-MIMXRT595" href="https://www.nxp.com/pip/MIMXRT595-EVK" version="1.0.0" package="MIMXRT595SFFOC">
      <description>i.MX RT595 Evaluation Kit</description>
      <image path="boards/evkmimxrt595" type="image">
        <files mask="evkmimxrt595.png"/>
      </image>
      <memory>
        <memoryBlock id="QSPI_FLASH_evkmimxrt595" name="QSPI_FLASH" addr="08000000" size="00800000" type="ExtFlash" access="RO"/>
      </memory>
      <examples>
        <example id="evkmimxrt595_wifi_wpa_supplicant_cm33" name="wifi_wpa_supplicant_cm33" brief="wifi_wpa_supplicant" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="wifi_examples" path="boards/evkmimxrt595/wifi_examples/wifi_wpa_supplicant">
          <external path="boards/evkmimxrt595/wifi_examples/wifi_wpa_supplicant" type="xml">
            <files mask="wifi_wpa_supplicant_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_wifi_test_mode_cm33" name="wifi_test_mode_cm33" brief="wifi_test_mode" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="wifi_examples" path="boards/evkmimxrt595/wifi_examples/wifi_test_mode">
          <external path="boards/evkmimxrt595/wifi_examples/wifi_test_mode" type="xml">
            <files mask="wifi_test_mode_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_wifi_ipv4_ipv6_echo_cm33" name="wifi_ipv4_ipv6_echo_cm33" brief="The wifi_ipv4_ipv6_echo demo application demonstrates a TCP or UDP echo demo on the lwIP TCP/IP stack with FreeRTOS. The demo uses the TCP or UDP protocol over both IPv4 and IPv6 and acts as an echo server. The application sends back the received TCP or UDP packets from the PC, which can be used to test whether a TCP or UDP is available." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="wifi_examples" path="boards/evkmimxrt595/wifi_examples/wifi_ipv4_ipv6_echo">
          <external path="boards/evkmimxrt595/wifi_examples/wifi_ipv4_ipv6_echo" type="xml">
            <files mask="wifi_ipv4_ipv6_echo_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_wifi_cli_cm33" name="wifi_cli_cm33" brief="wifi_cli" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="wifi_examples" path="boards/evkmimxrt595/wifi_examples/wifi_cli">
          <external path="boards/evkmimxrt595/wifi_examples/wifi_cli" type="xml">
            <files mask="wifi_cli_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_wifi_webconfig_cm33" name="wifi_webconfig_cm33" brief="Simple AP to Client configuration over web." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="wifi_examples" path="boards/evkmimxrt595/wifi_examples/wifi_webconfig">
          <external path="boards/evkmimxrt595/wifi_examples/wifi_webconfig" type="xml">
            <files mask="wifi_webconfig_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_wifi_setup_cm33" name="wifi_setup_cm33" brief="The wifi_setup demo implements a simple Wi-Fi station setup. The application will automatically scan local wireless networks at startup, then the user will be able to connect to one of the available networks and setup a ping task that will test the connection." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="wifi_examples" path="boards/evkmimxrt595/wifi_examples/wifi_setup">
          <external path="boards/evkmimxrt595/wifi_examples/wifi_setup" type="xml">
            <files mask="wifi_setup_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_cube_freertos_cm33" name="cube_freertos_cm33" brief="This example shows how to use the vglite component. This application draws a cube object with each face having high render quality." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="vglite_examples" path="boards/evkmimxrt595/vglite_examples/cube_freertos/cm33">
          <external path="boards/evkmimxrt595/vglite_examples/cube_freertos/cm33" type="xml">
            <files mask="cube_freertos_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_vector_freertos_cm33" name="vector_freertos_cm33" brief="This example shows how to use the vglite component. This application draws a polygon vector graphic with high render quality on blue buffer." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="vglite_examples" path="boards/evkmimxrt595/vglite_examples/vector_freertos/cm33">
          <external path="boards/evkmimxrt595/vglite_examples/vector_freertos/cm33" type="xml">
            <files mask="vector_freertos_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_tiled_freertos_cm33" name="tiled_freertos_cm33" brief="This example shows how to use the vglite component. This application renders a polygon vector graphic with high render quality on a black buffer using blit." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="vglite_examples" path="boards/evkmimxrt595/vglite_examples/tiled_freertos/cm33">
          <external path="boards/evkmimxrt595/vglite_examples/tiled_freertos/cm33" type="xml">
            <files mask="tiled_freertos_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_tiger_freertos_cm33" name="tiger_freertos_cm33" brief="This example shows how to use the vglite component. This application draws a tiger on the screen." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="vglite_examples" path="boards/evkmimxrt595/vglite_examples/tiger_freertos/cm33">
          <external path="boards/evkmimxrt595/vglite_examples/tiger_freertos/cm33" type="xml">
            <files mask="tiger_freertos_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_clock_freertos_cm33" name="clock_freertos_cm33" brief="This example shows how to use the vglite component. This application draws a clock on the screen." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="vglite_examples" path="boards/evkmimxrt595/vglite_examples/clock_freertos/cm33">
          <external path="boards/evkmimxrt595/vglite_examples/clock_freertos/cm33" type="xml">
            <files mask="clock_freertos_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_ota_mcuboot_basic_cm33" name="ota_mcuboot_basic_cm33" brief="This projects gives an example of a basic application bootable by MCUBoot" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="ota_examples" path="boards/evkmimxrt595/ota_examples/ota_mcuboot_basic">
          <external path="boards/evkmimxrt595/ota_examples/ota_mcuboot_basic" type="xml">
            <files mask="ota_mcuboot_basic_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_ota_mcuboot_server_wifi_cm33" name="ota_mcuboot_server_wifi_cm33" brief="This ota_mcuboot_server application demonstrates OTA using an HTTP server based on lwIP TCP/IP stack with FreeRTOS. The user uses an Internet browser to upload new update package to reprogram application running on the board." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="ota_examples" path="boards/evkmimxrt595/ota_examples/ota_mcuboot_server/wifi">
          <external path="boards/evkmimxrt595/ota_examples/ota_mcuboot_server/wifi" type="xml">
            <files mask="ota_mcuboot_server_wifi_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_ota_mcuboot_client_wifi_cm33" name="ota_mcuboot_client_wifi_cm33" brief="The ota_mcuboot_client demo application demonstrates an HTTPS OTA client using FreeRTOS + LWIP + MbedTLS + CoreHTTP. The client connects to a HTTPS server and requests an OTA binary for download and subsequent installation by MCUBoot." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="ota_examples" path="boards/evkmimxrt595/ota_examples/ota_mcuboot_client/wifi">
          <external path="boards/evkmimxrt595/ota_examples/ota_mcuboot_client/wifi" type="xml">
            <files mask="ota_mcuboot_client_wifi_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_mcuboot_opensource_cm33" name="mcuboot_opensource_cm33" brief="MCUboot bootloader" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="ota_examples" path="boards/evkmimxrt595/ota_examples/mcuboot_opensource">
          <external path="boards/evkmimxrt595/ota_examples/mcuboot_opensource" type="xml">
            <files mask="mcuboot_opensource_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_wireless_uart_cm33" name="wireless_uart_cm33" brief="The Edgefast Bluetooth wireless uart example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/evkmimxrt595/edgefast_bluetooth_examples/wireless_uart">
          <external path="boards/evkmimxrt595/edgefast_bluetooth_examples/wireless_uart" type="xml">
            <files mask="wireless_uart_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_wifi_cli_over_ble_wu_cm33" name="wifi_cli_over_ble_wu_cm33" brief="wifi_cli_over_ble_wu" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/evkmimxrt595/edgefast_bluetooth_examples/wifi_cli_over_ble_wu">
          <external path="boards/evkmimxrt595/edgefast_bluetooth_examples/wifi_cli_over_ble_wu" type="xml">
            <files mask="wifi_cli_over_ble_wu_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_spp_cm33" name="spp_cm33" brief="The Bluetooth BR SPP example." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/evkmimxrt595/edgefast_bluetooth_examples/spp">
          <external path="boards/evkmimxrt595/edgefast_bluetooth_examples/spp" type="xml">
            <files mask="spp_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_edgefast_bluetooth_shell_cm33" name="edgefast_bluetooth_shell_cm33" brief="The Edgefast Bluetooth shell example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/evkmimxrt595/edgefast_bluetooth_examples/shell">
          <external path="boards/evkmimxrt595/edgefast_bluetooth_examples/shell" type="xml">
            <files mask="edgefast_bluetooth_shell_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_peripheral_pxr_cm33" name="peripheral_pxr_cm33" brief="The Edgefast Bluetooth pxr example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/evkmimxrt595/edgefast_bluetooth_examples/peripheral_pxr">
          <external path="boards/evkmimxrt595/edgefast_bluetooth_examples/peripheral_pxr" type="xml">
            <files mask="peripheral_pxr_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_peripheral_ipsp_cm33" name="peripheral_ipsp_cm33" brief="The Edgefast Bluetooth ipsp example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/evkmimxrt595/edgefast_bluetooth_examples/peripheral_ipsp">
          <external path="boards/evkmimxrt595/edgefast_bluetooth_examples/peripheral_ipsp" type="xml">
            <files mask="peripheral_ipsp_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_peripheral_ht_cm33" name="peripheral_ht_cm33" brief="The Edgefast Bluetooth hts example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/evkmimxrt595/edgefast_bluetooth_examples/peripheral_ht">
          <external path="boards/evkmimxrt595/edgefast_bluetooth_examples/peripheral_ht" type="xml">
            <files mask="peripheral_ht_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_peripheral_hps_cm33" name="peripheral_hps_cm33" brief="The Edgefast Bluetooth hps example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/evkmimxrt595/edgefast_bluetooth_examples/peripheral_hps">
          <external path="boards/evkmimxrt595/edgefast_bluetooth_examples/peripheral_hps" type="xml">
            <files mask="peripheral_hps_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_peripheral_beacon_cm33" name="peripheral_beacon_cm33" brief="The Edgefast Bluetooth beacon example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/evkmimxrt595/edgefast_bluetooth_examples/peripheral_beacon">
          <external path="boards/evkmimxrt595/edgefast_bluetooth_examples/peripheral_beacon" type="xml">
            <files mask="peripheral_beacon_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_handsfree_ag_cm33" name="handsfree_ag_cm33" brief="The Edgefast Bluetooth handsfree AG example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/evkmimxrt595/edgefast_bluetooth_examples/handsfree_ag">
          <external path="boards/evkmimxrt595/edgefast_bluetooth_examples/handsfree_ag" type="xml">
            <files mask="handsfree_ag_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_handsfree_cm33" name="handsfree_cm33" brief="The Edgefast Bluetooth bluetooth handsfree example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/evkmimxrt595/edgefast_bluetooth_examples/handsfree">
          <external path="boards/evkmimxrt595/edgefast_bluetooth_examples/handsfree" type="xml">
            <files mask="handsfree_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_central_pxm_cm33" name="central_pxm_cm33" brief="The Edgefast Bluetooth pxm example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/evkmimxrt595/edgefast_bluetooth_examples/central_pxm">
          <external path="boards/evkmimxrt595/edgefast_bluetooth_examples/central_pxm" type="xml">
            <files mask="central_pxm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_central_ipsp_cm33" name="central_ipsp_cm33" brief="The Edgefast Bluetooth ipsp example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/evkmimxrt595/edgefast_bluetooth_examples/central_ipsp">
          <external path="boards/evkmimxrt595/edgefast_bluetooth_examples/central_ipsp" type="xml">
            <files mask="central_ipsp_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_central_ht_cm33" name="central_ht_cm33" brief="The Edgefast Bluetooth hts example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/evkmimxrt595/edgefast_bluetooth_examples/central_ht">
          <external path="boards/evkmimxrt595/edgefast_bluetooth_examples/central_ht" type="xml">
            <files mask="central_ht_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_central_hpc_cm33" name="central_hpc_cm33" brief="The Edgefast Bluetooth hpc example with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/evkmimxrt595/edgefast_bluetooth_examples/central_hpc">
          <external path="boards/evkmimxrt595/edgefast_bluetooth_examples/central_hpc" type="xml">
            <files mask="central_hpc_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_a2dp_source_cm33" name="a2dp_source_cm33" brief="The Edgefast Bluetooth audio source with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/evkmimxrt595/edgefast_bluetooth_examples/a2dp_source">
          <external path="boards/evkmimxrt595/edgefast_bluetooth_examples/a2dp_source" type="xml">
            <files mask="a2dp_source_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_a2dp_sink_cm33" name="a2dp_sink_cm33" brief="The Edgefast Bluetooth audio source with simplified application." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="edgefast_bluetooth_examples" path="boards/evkmimxrt595/edgefast_bluetooth_examples/a2dp_sink">
          <external path="boards/evkmimxrt595/edgefast_bluetooth_examples/a2dp_sink" type="xml">
            <files mask="a2dp_sink_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_sdio_freertos_cm33" name="sdio_freertos_cm33" brief="The FREERTOS SDIO project is a demonstration program that uses the SDK software. It reads/writes the SDIO card reigister. The purpose of this example is to show how to use SDio driver with freertos." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sdio" path="boards/evkmimxrt595/sdmmc_examples/sdio_freertos">
          <external path="boards/evkmimxrt595/sdmmc_examples/sdio_freertos" type="xml">
            <files mask="sdio_freertos_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_sdio_cm33" name="sdio_cm33" brief="The SDIO project is a demonstration program that uses the SDK software. It reads/writes the SDIO card reigister. The purpose of this example is to show how to use SDio driver and this is a very simple example." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples" path="boards/evkmimxrt595/sdmmc_examples/sdio">
          <external path="boards/evkmimxrt595/sdmmc_examples/sdio" type="xml">
            <files mask="sdio_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_sdcard_polling_cm33" name="sdcard_polling_cm33" brief="The SDCARD Polling project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver andshow how to use polling based transfer API in SDHC driver in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/sdcard_polling" path="boards/evkmimxrt595/sdmmc_examples/sdcard_polling">
          <external path="boards/evkmimxrt595/sdmmc_examples/sdcard_polling" type="xml">
            <files mask="sdcard_polling_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_sdcard_interrupt_cm33" name="sdcard_interrupt_cm33" brief="The SDCARD Interrupt project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver andshow how to use interrupt based transfer API in SDHC driver in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/sdcard_interrupt" path="boards/evkmimxrt595/sdmmc_examples/sdcard_interrupt">
          <external path="boards/evkmimxrt595/sdmmc_examples/sdcard_interrupt" type="xml">
            <files mask="sdcard_interrupt_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_sdcard_freertos_cm33" name="sdcard_freertos_cm33" brief="The SDCARD FreeRTOS project is a demonstration program that uses the SDK software. It reads/writes/erases the SD card continusly. The purpose of this example is to show how to use SDCARD driver with FreeRTOS in SDK software to access SD card.Note: If DATA3 is used as the card detect PIN, please make sure DATA3 is pull down, no matter internal or external, at the same time, make sure the card can pull DATA3 up, then host can detect card through DATA3.And SDHC do not support detect card through CD by host, card can be detected through DATA3 or GPIO.No matter detect card through host or gpio, make sure the pinmux configuration is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/sdcard_freertos" path="boards/evkmimxrt595/sdmmc_examples/sdcard_freertos">
          <external path="boards/evkmimxrt595/sdmmc_examples/sdcard_freertos" type="xml">
            <files mask="sdcard_freertos_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_sdcard_fatfs_freertos_cm33" name="sdcard_fatfs_freertos_cm33" brief="The SDCARD FATFS FREERTOS project is a demonstration program that uses the SDK software. The purpose of this example is to show how to use SDCARD with fatfs and freertos." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/sdcard_fatfs_freertos" path="boards/evkmimxrt595/sdmmc_examples/sdcard_fatfs_freertos">
          <external path="boards/evkmimxrt595/sdmmc_examples/sdcard_fatfs_freertos" type="xml">
            <files mask="sdcard_fatfs_freertos_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_sdcard_fatfs_cm33" name="sdcard_fatfs_cm33" brief="The SDCARD FATFS project is a demonstration program that uses the SDK software. Tt mounts a file system based on a SD card then does &quot;creat directory/read directory/create file/write file/read file&quot;operation. The file sdhc_config.h has default SDHC configuration which can be adjusted to let carddriver has different performance. The purpose of this example is to show how to use SDCARD driver based FATFS disk in SDK software." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/sdcard_fatfs" path="boards/evkmimxrt595/sdmmc_examples/sdcard_fatfs">
          <external path="boards/evkmimxrt595/sdmmc_examples/sdcard_fatfs" type="xml">
            <files mask="sdcard_fatfs_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_mmccard_polling_cm33" name="mmccard_polling_cm33" brief="The MMCCARD Polling project is a demonstration program that uses the SDK software. It reads/writes/erases the MMC card continusly. The purpose of this example is to show how to use MMCCARD driver andshow how to use polling based transfer API in SDK software driver to access MMC card.Note:User can use MMC plus card or emmc(on board IC, but not recommand use emmc socket,due to high speed timing restriction)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/mmccard_polling" path="boards/evkmimxrt595/sdmmc_examples/mmccard_polling">
          <external path="boards/evkmimxrt595/sdmmc_examples/mmccard_polling" type="xml">
            <files mask="mmccard_polling_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_mmccard_interrupt_cm33" name="mmccard_interrupt_cm33" brief="The MMCCARD Interrupt project is a demonstration program that uses the SDK software. It reads/writes/erases the MMC card continusly. The purpose of this example is to show how to use MMCCARD driver andshow how to use interrupt based transfer API in SDK software driver to access MMC card.Note:User can use MMC plus card or emmc(on board IC, but not recommand use emmc socket,due to high speed timing restriction)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/mmccard_interrupt" path="boards/evkmimxrt595/sdmmc_examples/mmccard_interrupt">
          <external path="boards/evkmimxrt595/sdmmc_examples/mmccard_interrupt" type="xml">
            <files mask="mmccard_interrupt_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_mmccard_freertos_cm33" name="mmccard_freertos_cm33" brief="The MMCCARD FreeRTOS project is a demonstration program that uses the SDK software. It reads/writes/erases the MMC card continusly. The purpose of this example is to show how to use MMCCARD driverwith FreeRTOS in SDK software to access MMC card.Note:User can use MMC plus card or emmc(on board IC, but not recommand use emmc socket,due to high speed timing restriction)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/mmccard_freertos" path="boards/evkmimxrt595/sdmmc_examples/mmccard_freertos">
          <external path="boards/evkmimxrt595/sdmmc_examples/mmccard_freertos" type="xml">
            <files mask="mmccard_freertos_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_mmccard_fatfs_freertos_cm33" name="mmccard_fatfs_freertos_cm33" brief="The mmccard FATFS FREERTOS project is a demonstration program that uses the SDK software. The purpose of this example is to show how to use mmccard with fatfs and freertos." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/mmccard_fatfs_freertos" path="boards/evkmimxrt595/sdmmc_examples/mmccard_fatfs_freertos">
          <external path="boards/evkmimxrt595/sdmmc_examples/mmccard_fatfs_freertos" type="xml">
            <files mask="mmccard_fatfs_freertos_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_mmccard_fatfs_cm33" name="mmccard_fatfs_cm33" brief="The MMCCARD FATFS project is a demonstration program that uses the SDK software. Tt mounts a file system based on a MMC card then does &quot;creat directory/read directory/create file/write file/read file&quot; operation. The file sdhc_config.h has default SDHC configuration which can be adjusted to letcard driver has different performance. The purpose of this example is to show how to use MMCCARD driver based FATFS disk in SDK software.Note:User can use MMC plus card or emmc(on board IC, but not recommand use emmc socket,due to high speed timing restriction)" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="sdmmc_examples/mmccard_fatfs" path="boards/evkmimxrt595/sdmmc_examples/mmccard_fatfs">
          <external path="boards/evkmimxrt595/sdmmc_examples/mmccard_fatfs" type="xml">
            <files mask="mmccard_fatfs_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_mbedtls_selftest_cm33" name="mbedtls_selftest_cm33" brief="The mbedTLS SelfTest program performs cryptographic algorithm testing and prints results to the terminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="mbedtls_examples" path="boards/evkmimxrt595/mbedtls_examples/mbedtls_selftest">
          <external path="boards/evkmimxrt595/mbedtls_examples/mbedtls_selftest" type="xml">
            <files mask="mbedtls_selftest_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_mbedtls_benchmark_cm33" name="mbedtls_benchmark_cm33" brief="The mbedTLS Benchmark demo application performs cryptographic algorithm benchmarking and prints results to the terminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="mbedtls_examples" path="boards/evkmimxrt595/mbedtls_examples/mbedtls_benchmark">
          <external path="boards/evkmimxrt595/mbedtls_examples/mbedtls_benchmark" type="xml">
            <files mask="mbedtls_benchmark_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_freertos_tickless_lpc_cm33" name="freertos_tickless_lpc_cm33" brief="This document explains the freertos_tickless example. It shows the CPU enter at sleep mode and then it is waked up by expired time delay that using timer module." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="freertos_examples" path="boards/evkmimxrt595/freertos_examples/freertos_tickless_lpc">
          <external path="boards/evkmimxrt595/freertos_examples/freertos_tickless_lpc" type="xml">
            <files mask="freertos_tickless_lpc_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_freertos_swtimer_cm33" name="freertos_swtimer_cm33" brief="This document explains the freertos_swtimer example. It shows usage of software timer and itscallback.The example application creates one software timer SwTimer. The timer's callback SwTimerCallback isperiodically executed and text &quot;Tick.&quot; is printed to terminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="freertos_examples" path="boards/evkmimxrt595/freertos_examples/freertos_swtimer">
          <external path="boards/evkmimxrt595/freertos_examples/freertos_swtimer" type="xml">
            <files mask="freertos_swtimer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_freertos_sem_static_cm33" name="freertos_sem_static_cm33" brief="This document explains the freertos_sem example, what to expect when running it and a briefintroduction to the API. The freertos_sem example code shows how semaphores works. Two differenttasks are synchronized in bilateral rendezvous model.The example uses four tasks. One producer_task and three consumer_tasks. The producer_task starts bycreating of two semaphores (xSemaphore_producer and xSemaphore_consumer). These semaphores controlaccess to virtual item. The synchronization is based on bilateral rendezvous pattern. Both ofconsumer and producer must be prepared to enable transaction." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="freertos_examples" path="boards/evkmimxrt595/freertos_examples/freertos_sem_static">
          <external path="boards/evkmimxrt595/freertos_examples/freertos_sem_static" type="xml">
            <files mask="freertos_sem_static_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_freertos_sem_cm33" name="freertos_sem_cm33" brief="This document explains the freertos_sem example, what to expect when running it and a briefintroduction to the API. The freertos_sem example code shows how semaphores works. Two different tasks are synchronized in bilateral rendezvous model.The example uses four tasks. One producer_task and three consumer_tasks. The producer_task starts bycreating of two semaphores (xSemaphore_producer and xSemaphore_consumer). These semaphores controlaccess to virtual item. The synchronization is based on bilateral rendezvous pattern. Both ofconsumer and producer must be prepared to enable transaction." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="freertos_examples" path="boards/evkmimxrt595/freertos_examples/freertos_sem">
          <external path="boards/evkmimxrt595/freertos_examples/freertos_sem" type="xml">
            <files mask="freertos_sem_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_freertos_queue_cm33" name="freertos_queue_cm33" brief="This document explains the freertos_queue example. This example introduce simple logging mechanismbased on message passing.Example could be devided in two parts. First part is logger. It contain three tasks:log_add().....Add new message into the log. Call xQueueSend function to pass new message into message queue.log_init()....Initialize logger (create logging task and message queue log_queue).log_task()....Task responsible for printing of log output.Second part is application of this simple logging mechanism. Each of two tasks write_task_1 andwrite_task_2 print 5 messages into log." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="freertos_examples" path="boards/evkmimxrt595/freertos_examples/freertos_queue">
          <external path="boards/evkmimxrt595/freertos_examples/freertos_queue" type="xml">
            <files mask="freertos_queue_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_freertos_mutex_cm33" name="freertos_mutex_cm33" brief="This document explains the freertos_mutex example. It shows how mutex manage access to commonresource (terminal output).The example application creates two identical instances of write_task. Each task will lock the mutexbefore printing and unlock it after printing to ensure that the outputs from tasks are not mixedtogether.The test_task accept output message during creation as function parameter. Output message have twoparts. If xMutex is unlocked, the write_task_1 acquire xMutex and print first part of message. Thenrescheduling is performed. In this moment scheduler check if some other task could run, but secondtask write_task+_2 is blocked because xMutex is already locked by first write task. The firstwrite_task_1 continue from last point by printing of second message part. Finaly the xMutex isunlocked and second instance of write_task_2 is executed." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="freertos_examples" path="boards/evkmimxrt595/freertos_examples/freertos_mutex">
          <external path="boards/evkmimxrt595/freertos_examples/freertos_mutex" type="xml">
            <files mask="freertos_mutex_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_freertos_mpu_s_cm33" name="freertos_mpu_s_cm33" brief="The freertos_mpu example for FreeRTOS demonstrates the possibility to use the trust-zone features of FreeRTOS." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="freertos_examples" linked_projects="evkmimxrt595_freertos_mpu_ns_cm33" path="boards/evkmimxrt595/freertos_examples/freertos_mpu/freertos_mpu_s">
          <external path="boards/evkmimxrt595/freertos_examples/freertos_mpu/freertos_mpu_s" type="xml">
            <files mask="freertos_mpu_s_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_freertos_mpu_ns_cm33" name="freertos_mpu_ns_cm33" brief="The freertos_mpu example for FreeRTOS demonstrates the possibility to use the trust-zone features of FreeRTOS." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="freertos_examples" linked_projects="evkmimxrt595_freertos_mpu_s_cm33" path="boards/evkmimxrt595/freertos_examples/freertos_mpu/freertos_mpu_ns">
          <external path="boards/evkmimxrt595/freertos_examples/freertos_mpu/freertos_mpu_ns" type="xml">
            <files mask="freertos_mpu_ns_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_freertos_hello_cm33" name="freertos_hello_cm33" brief="The Hello World project is a simple demonstration program that uses the SDK UART driver in combination with FreeRTOS. The purpose of this demo is to show how to use the debug console and to provide a simple project for debugging and further development.The example application creates one task called hello_task. This task print &quot;Hello world.&quot; message via debug console utility and suspend itself." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="freertos_examples" path="boards/evkmimxrt595/freertos_examples/freertos_hello">
          <external path="boards/evkmimxrt595/freertos_examples/freertos_hello" type="xml">
            <files mask="freertos_hello_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_freertos_generic_cm33" name="freertos_generic_cm33" brief="This document explains the freertos_generic example. It is based on code FreeRTOS documentation from http://www.freertos.org/Hardware-independent-RTOS-example.html. It shows combination of several tasks with queue, software timer, tick hook and semaphore.The example application creates three tasks. The prvQueueSendTask periodically sending data to xQueue queue. The prvQueueReceiveTask is waiting for incoming message and counting number of received messages. Task prvEventSemaphoreTask is waiting for xEventSemaphore semaphore given from vApplicationTickHook. Tick hook give semaphore every 500 ms.Other hook types used for RTOS and resource statistics are also demonstrated in example:* vApplicationIdleHook* vApplicationStackOverflowHook* vApplicationMallocFailedHook" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="freertos_examples" path="boards/evkmimxrt595/freertos_examples/freertos_generic">
          <external path="boards/evkmimxrt595/freertos_examples/freertos_generic" type="xml">
            <files mask="freertos_generic_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_freertos_event_cm33" name="freertos_event_cm33" brief="This document explains the freertos_event example. It shows how task waits for an event (defined setof bits in event group). This event can be set by any other process or interrupt in the system.The example application creates three tasks. Two write tasks write_task_1 and write_task_2continuously setting event bit 0 and bit 1.Read_task is waiting for any event bit and printing actual state on console. Event bits areautomatically cleared after read task is entered.Three possible states can occurre:Both bits are set.zBit B0 is set.Bit B1 is set." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="freertos_examples" path="boards/evkmimxrt595/freertos_examples/freertos_event">
          <external path="boards/evkmimxrt595/freertos_examples/freertos_event" type="xml">
            <files mask="freertos_event_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_emwin_gui_demo_cm33" name="emwin_gui_demo_cm33" brief="The example demonstrates graphical widgets of the emWin library." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="emwin_examples" path="boards/evkmimxrt595/emwin_examples/emwin_gui_demo">
          <external path="boards/evkmimxrt595/emwin_examples/emwin_gui_demo" type="xml">
            <files mask="emwin_gui_demo_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_fbdev_freertos_cm33" name="fbdev_freertos_cm33" brief="This example shows how to use the fbdev component. The fbdev masks the difference of LCD controllers and provides a unified APIs for upper layers. At the same time, the frame buffers are managed by the FBDEV. When the example runs, you can see a rectangle moving in the screen, and its color changes when reached the border." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="display_examples" path="boards/evkmimxrt595/display_examples/fbdev_freertos">
          <external path="boards/evkmimxrt595/display_examples/fbdev_freertos" type="xml">
            <files mask="fbdev_freertos_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_sd_jpeg_cm33" name="sd_jpeg_cm33" brief="The SD JPEG Demo application reads the JPEG pictures from the SD card, decodesthem, and shows them in the LCD panel one by one." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="display_examples" path="boards/evkmimxrt595/display_examples/sd_jpeg">
          <external path="boards/evkmimxrt595/display_examples/sd_jpeg" type="xml">
            <files mask="sd_jpeg_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_log_bm_cm33" name="log_bm_cm33" brief="The log demo is used to demonstrate how to use log component. The main function of the demo is to prompt the LOG level string according to the user input log level command." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="component_examples" path="boards/evkmimxrt595/component_examples/log/bm">
          <external path="boards/evkmimxrt595/component_examples/log/bm" type="xml">
            <files mask="log_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_log_freertos_cm33" name="log_freertos_cm33" brief="The log demo is used to demonstrate how to use log component. The main function of the demo is to prompt the LOG level string according to the user input log level command." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="component_examples" path="boards/evkmimxrt595/component_examples/log/freertos">
          <external path="boards/evkmimxrt595/component_examples/log/freertos" type="xml">
            <files mask="log_freertos_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_mpi_loader_dsp_hello_world_loader" name="mpi_loader_dsp_hello_world_loader" brief="The mpi_loader_dsp_hello_world example demonstrates how to add secondary bootloader in CM33 application to load the multicore packed image, created by elftosb tool. Once the DSP image is loaded, CM33 can kick off it and both cores then execute in parallel." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="component_examples/mpi_loader" path="boards/evkmimxrt595/component_examples/mpi_loader/dsp_hello_world">
          <external path="boards/evkmimxrt595/component_examples/mpi_loader/dsp_hello_world" type="xml">
            <files mask="mpi_loader_dsp_hello_world_loader_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_mpi_loader_extram_hello_world" name="mpi_loader_extram_hello_world" brief="The mpi_loader_extram_hello_world example is a normal hello world example running in on-board RAM." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="component_examples/mpi_loader" path="boards/evkmimxrt595/component_examples/mpi_loader/extram_hello_world">
          <external path="boards/evkmimxrt595/component_examples/mpi_loader/extram_hello_world" type="xml">
            <files mask="mpi_loader_extram_hello_world_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_flash_component_octal_flexspi_cm33" name="flash_component_octal_flexspi_cm33" brief="octal flash demo shows the use of nor flash component to erase, program, and read an external serial nor flash device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="component_examples/flash_component/flexspi_octal" path="boards/evkmimxrt595/component_examples/flash_component/flexspi_octal">
          <external path="boards/evkmimxrt595/component_examples/flash_component/flexspi_octal" type="xml">
            <files mask="flash_component_octal_flexspi_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_mpi_loader_extram_hello_world_loader" name="mpi_loader_extram_hello_world_loader" brief="The mpi_loader_extram_hello_world_loader application provides an example of a small loader running in SoC internal memory, which is able to initialize the external RAM controller and load the other application to external memory and kick off it. The loader itself is built to run in internal memory, and the application to be loaded is built to run in external RAM. They are combined with elftosb tool. On system reset, ROM loads them as a single image into SoC internal memory, and starts the loader. Then the loader will load the secondary application and kick off it to run in external memory. The elftosb and blhost tool can be downloaded from nxp.com." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="component_examples/mpi_loader" path="boards/evkmimxrt595/component_examples/mpi_loader/extram_loader">
          <external path="boards/evkmimxrt595/component_examples/mpi_loader/extram_loader" type="xml">
            <files mask="mpi_loader_extram_hello_world_loader_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_pca9420" name="pca9420" brief="The pca9420 driver example demonstrates the usage of pca9420 SDK component driver.The example shows the usage of PCA9420 API to dump mode group settings; Or switch mode group; Or dump PCA9420 register content;" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="component_examples/pca9420" path="boards/evkmimxrt595/component_examples/pca9420">
          <external path="boards/evkmimxrt595/component_examples/pca9420" type="xml">
            <files mask="pca9420_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_i3c_bus_slave_cm33" name="i3c_bus_slave_cm33" brief="The i3c_bus_slave example shows how to use i3c_bus component to work as i3c bus slave." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="component_examples/i3c" path="boards/evkmimxrt595/component_examples/i3c_bus/slave">
          <external path="boards/evkmimxrt595/component_examples/i3c_bus/slave" type="xml">
            <files mask="i3c_bus_slave_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_i3c_bus_master_cm33" name="i3c_bus_master_cm33" brief="The i3c_bus_master example shows how to use i3c_bus component to create I3C bus and i3c master on bus." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="component_examples/i3c" path="boards/evkmimxrt595/component_examples/i3c_bus/master">
          <external path="boards/evkmimxrt595/component_examples/i3c_bus/master" type="xml">
            <files mask="i3c_bus_master_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_cmsis_usart_interrupt_transfer_cm33" name="cmsis_usart_interrupt_transfer_cm33" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http:/www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_interrupt_transfer example shows how to use uart cmsis driver in interrupt way:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/usart" path="boards/evkmimxrt595/cmsis_driver_examples/usart/interrupt_transfer">
          <external path="boards/evkmimxrt595/cmsis_driver_examples/usart/interrupt_transfer" type="xml">
            <files mask="cmsis_usart_interrupt_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_cmsis_usart_dma_transfer_cm33" name="cmsis_usart_dma_transfer_cm33" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http:/www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_uart_edma_transfer example shows how to use uart cmsis  driver with EDMA:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/usart" path="boards/evkmimxrt595/cmsis_driver_examples/usart/dma_transfer">
          <external path="boards/evkmimxrt595/cmsis_driver_examples/usart/dma_transfer" type="xml">
            <files mask="cmsis_usart_dma_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_cmsis_lpc_i2c_int_b2b_transfer_slave_cm33" name="cmsis_lpc_i2c_int_b2b_transfer_slave_cm33" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http:/www.keil.com/pack/doc/cmsis/Driver/html/index.html.The i2c_interrupt_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/i2c" path="boards/evkmimxrt595/cmsis_driver_examples/i2c/int_b2b_transfer/slave">
          <external path="boards/evkmimxrt595/cmsis_driver_examples/i2c/int_b2b_transfer/slave" type="xml">
            <files mask="cmsis_lpc_i2c_int_b2b_transfer_slave_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_cmsis_lpc_i2c_int_b2b_transfer_master_cm33" name="cmsis_lpc_i2c_int_b2b_transfer_master_cm33" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http:/www.keil.com/pack/doc/cmsis/Driver/html/index.html.The i2c_interrupt_b2b_transfer_master example shows how to use CMSIS i2c driver as master to do board to board transfer with interrupt:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/i2c" path="boards/evkmimxrt595/cmsis_driver_examples/i2c/int_b2b_transfer/master">
          <external path="boards/evkmimxrt595/cmsis_driver_examples/i2c/int_b2b_transfer/master" type="xml">
            <files mask="cmsis_lpc_i2c_int_b2b_transfer_master_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_cmsis_lpc_i2c_dma_b2b_transfer_slave_cm33" name="cmsis_lpc_i2c_dma_b2b_transfer_slave_cm33" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http:/www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_dma_b2b_transfer_slave example shows how to use i2c driver as slave to do board to board transfer with a DMA master:In this example, one i2c instance as slave and another i2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/i2c" path="boards/evkmimxrt595/cmsis_driver_examples/i2c/dma_b2b_transfer/slave">
          <external path="boards/evkmimxrt595/cmsis_driver_examples/i2c/dma_b2b_transfer/slave" type="xml">
            <files mask="cmsis_lpc_i2c_dma_b2b_transfer_slave_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_cmsis_lpc_i2c_dma_b2b_transfer_master_cm33" name="cmsis_lpc_i2c_dma_b2b_transfer_master_cm33" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http:/www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_i2c_dma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with DMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/i2c" path="boards/evkmimxrt595/cmsis_driver_examples/i2c/dma_b2b_transfer/master">
          <external path="boards/evkmimxrt595/cmsis_driver_examples/i2c/dma_b2b_transfer/master" type="xml">
            <files mask="cmsis_lpc_i2c_dma_b2b_transfer_master_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_cmsis_spi_int_b2b_transfer_slave_cm33" name="cmsis_spi_int_b2b_transfer_slave_cm33" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http:/www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_spi_interrupt_b2b_transfer_slave example shows how to use CMSIS spi driver as master to do board to board transfer with interrupt:In this example, one spi instance as master and another spi instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/spi" path="boards/evkmimxrt595/cmsis_driver_examples/spi/int_b2b_transfer/slave">
          <external path="boards/evkmimxrt595/cmsis_driver_examples/spi/int_b2b_transfer/slave" type="xml">
            <files mask="cmsis_spi_int_b2b_transfer_slave_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_cmsis_spi_int_b2b_transfer_master_cm33" name="cmsis_spi_int_b2b_transfer_master_cm33" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http:/www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_spi_interrupt_b2b_transfer_master example shows how to use CMSIS spi driver as master to do board to board transfer with interrupt:In this example, one spi instance as master and another spi instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/spi" path="boards/evkmimxrt595/cmsis_driver_examples/spi/int_b2b_transfer/master">
          <external path="boards/evkmimxrt595/cmsis_driver_examples/spi/int_b2b_transfer/master" type="xml">
            <files mask="cmsis_spi_int_b2b_transfer_master_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_flexcomm_cmsis_spi_dma_b2b_transfer_slave_cm33" name="flexcomm_cmsis_spi_dma_b2b_transfer_slave_cm33" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http:/www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_spi_dma_b2b_transfer_slave example shows how to use spi driver as master to do board to board transfer with DMA:In this example, one spi instance as master and another spi instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/spi" path="boards/evkmimxrt595/cmsis_driver_examples/spi/dma_b2b_transfer/slave">
          <external path="boards/evkmimxrt595/cmsis_driver_examples/spi/dma_b2b_transfer/slave" type="xml">
            <files mask="flexcomm_cmsis_spi_dma_b2b_transfer_slave_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_cmsis_flexcomm_spi_dma_b2b_transfer_master_cm33" name="cmsis_flexcomm_spi_dma_b2b_transfer_master_cm33" brief="CMSIS-Driver defines generic peripheral driver interfaces for middleware making it reusable across a wide range of supported microcontroller devices. The API connects microcontroller peripherals with middleware that implements for example communication stacks, file systems, or graphic user interfaces. More information and usage methord please refer to http:/www.keil.com/pack/doc/cmsis/Driver/html/index.html.The cmsis_spi_dma_b2b_transfer_master example shows how to use spi driver as master to do board to board transfer with DMA:In this example, one spi instance as master and another spi instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="cmsis_driver_examples/spi" path="boards/evkmimxrt595/cmsis_driver_examples/spi/dma_b2b_transfer/master">
          <external path="boards/evkmimxrt595/cmsis_driver_examples/spi/dma_b2b_transfer/master" type="xml">
            <files mask="cmsis_flexcomm_spi_dma_b2b_transfer_master_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_wwdt_example_cm33" name="wwdt_example_cm33" brief="The WDOG Example project is to demonstrate usage of the KSDK wdog driver.In this example,quick test is first implemented to test the wdog.And then after 5 times of refreshing the watchdog, a timeout reset is generated." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/wwdt" path="boards/evkmimxrt595/driver_examples/wwdt">
          <external path="boards/evkmimxrt595/driver_examples/wwdt" type="xml">
            <files mask="wwdt_example_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_utick_example_cm33" name="utick_example_cm33" brief="The utick project is a simple demonstration program of the SDK utick driver. It sets up the utick hardware block to trigger a periodic interrupt after every 1 second. When the utick interrupt is triggered a message is printed on the UART terminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/utick" path="boards/evkmimxrt595/driver_examples/utick">
          <external path="boards/evkmimxrt595/driver_examples/utick" type="xml">
            <files mask="utick_example_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_trng_random_cm33" name="trng_random_cm33" brief="The True Random Number Generator (TRNG) is a hardware accelerator module that generates a 512-bitentropy as needed by an entropy consuming module or by other post processing functions. The TRNGExample project is a demonstration program that uses the KSDK software to generate random numbersand prints them to the terminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/trng" path="boards/evkmimxrt595/driver_examples/trng/random">
          <external path="boards/evkmimxrt595/driver_examples/trng/random" type="xml">
            <files mask="trng_random_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_syscon_clockout_cm33" name="syscon_clockout_cm33" brief="The syscon_clockout driver example shows how to output the internal clock signal. In this driver example, users can choose the clock signal to be outputted, and the divider of the output clock signal. By probe the output pin, users can observe the selected internal clock signal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/syscon" path="boards/evkmimxrt595/driver_examples/clockout">
          <external path="boards/evkmimxrt595/driver_examples/clockout" type="xml">
            <files mask="syscon_clockout_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_sctimer_simple_pwm_cm33" name="sctimer_simple_pwm_cm33" brief="The SCTimer project is a simple demonstration program of the SDK SCTimer's driver capabiltiy to generate PWM signals." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sctimer" path="boards/evkmimxrt595/driver_examples/sctimer/simple_pwm">
          <external path="boards/evkmimxrt595/driver_examples/sctimer/simple_pwm" type="xml">
            <files mask="sctimer_simple_pwm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_sctimer_pwm_with_dutycyle_change_cm33" name="sctimer_pwm_with_dutycyle_change_cm33" brief="This SCTIMer project is a demonstration program of the SDK SCTimer driver's PWM generation. It sets up a PWM signaland periodically updates the PWM signals dutycycle." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sctimer" path="boards/evkmimxrt595/driver_examples/sctimer/pwm_with_dutycyle_change">
          <external path="boards/evkmimxrt595/driver_examples/sctimer/pwm_with_dutycyle_change" type="xml">
            <files mask="sctimer_pwm_with_dutycyle_change_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_sctimer_multi_state_pwm_cm33" name="sctimer_multi_state_pwm_cm33" brief="The SCTImer multi-state project is a demonstration program of the SCTimer state machine. It shows how to set up events to be triggered in a certain stateand transitioning between states.State 0 has 2 events that generate a PWM signal, it also has an event linked to an input signal to transition to State 1.State 1 has 4 events that generate 2 PWM signals, it also has an event linked to an input signal to transition to State 0." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sctimer" path="boards/evkmimxrt595/driver_examples/sctimer/multi_state_pwm">
          <external path="boards/evkmimxrt595/driver_examples/sctimer/multi_state_pwm" type="xml">
            <files mask="sctimer_multi_state_pwm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_sctimer_16bit_counter_cm33" name="sctimer_16bit_counter_cm33" brief="The SCTimer 16-bit counter project is a demonstration program of the SDK SCTimer driver operation when using the SCTimer counteras two 16-bit counters.The example toggles an output per counter when a match occurs." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/sctimer" path="boards/evkmimxrt595/driver_examples/sctimer/16bit_counter">
          <external path="boards/evkmimxrt595/driver_examples/sctimer/16bit_counter" type="xml">
            <files mask="sctimer_16bit_counter_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_pint_pin_interrupt_cm33" name="pint_pin_interrupt_cm33" brief="This example shows how to use SDK drivers to use the Pin interrupt &amp; pattern match peripheral." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pint" path="boards/evkmimxrt595/driver_examples/pint/pin_interrupt">
          <external path="boards/evkmimxrt595/driver_examples/pint/pin_interrupt" type="xml">
            <files mask="pint_pin_interrupt_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_pint_pattern_match_cm33" name="pint_pattern_match_cm33" brief="This example shows how to use SDK drivers to use the Pin interrupt &amp; pattern match peripheral." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/pint" path="boards/evkmimxrt595/driver_examples/pint/pattern_match">
          <external path="boards/evkmimxrt595/driver_examples/pint/pattern_match" type="xml">
            <files mask="pint_pattern_match_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_otfad_decrypt_flexspi_octal_cm33" name="otfad_decrypt_flexspi_octal_cm33" brief="The OTFAD project is a simple demonstration program of the SDK OTFAD driver. It support for on the fly AES decryption for the data stored in external memories in an encrypted form." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/otfad/decrypt" path="boards/evkmimxrt595/driver_examples/otfad/decrypt">
          <external path="boards/evkmimxrt595/driver_examples/otfad/decrypt" type="xml">
            <files mask="otfad_decrypt_flexspi_octal_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_ostimer_example_cm33" name="ostimer_example_cm33" brief="The OSTIMER project is a simple demonstration program of the SDK OSTIMER driver. It sets the OSTIMER as the wakeup source from deep-sleep mode. After wakeup from deep-sleep mode, OS timer will set match value to trigger the interrupt while the timer count tick reach the match value about every 2 seconds." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/ostimer" path="boards/evkmimxrt595/driver_examples/ostimer">
          <external path="boards/evkmimxrt595/driver_examples/ostimer" type="xml">
            <files mask="ostimer_example_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_mrt_example_cm33" name="mrt_example_cm33" brief="The MRT project is a simple demonstration program of the SDK MRT driver. It sets up the MRThardware block to trigger a periodic interrupt after every 250 milliseconds. When the PIT interrupt is triggereda message a printed on the UART terminal and an LED is toggled on the board." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/mrt" path="boards/evkmimxrt595/driver_examples/mrt">
          <external path="boards/evkmimxrt595/driver_examples/mrt" type="xml">
            <files mask="mrt_example_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_rtc_example_cm33" name="rtc_example_cm33" brief="The RTC project is a simple demonstration program of the SDK RTC driver. It sets up the RTChardware block to trigger an alarm after a user specified time period. The test will set the currentdate and time to a predefined value. The alarm will be set with reference to this predefined dateand time." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/rtc" path="boards/evkmimxrt595/driver_examples/rtc">
          <external path="boards/evkmimxrt595/driver_examples/rtc" type="xml">
            <files mask="rtc_example_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_lpc_i2c_polling_b2b_slave_cm33" name="lpc_i2c_polling_b2b_slave_cm33" brief="The i2c_polling_b2b_slave example shows how to use i2c driver as slave to do board to board transfer with a polling master:In this example, one i2c instance as slave and another i2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/i2c" path="boards/evkmimxrt595/driver_examples/i2c/polling_b2b/slave">
          <external path="boards/evkmimxrt595/driver_examples/i2c/polling_b2b/slave" type="xml">
            <files mask="lpc_i2c_polling_b2b_slave_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_lpc_i2c_polling_b2b_master_cm33" name="lpc_i2c_polling_b2b_master_cm33" brief="The i2c_polling_b2b_master example shows how to use i2c driver as master to do board to board transfer using polling method:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/i2c" path="boards/evkmimxrt595/driver_examples/i2c/polling_b2b/master">
          <external path="boards/evkmimxrt595/driver_examples/i2c/polling_b2b/master" type="xml">
            <files mask="lpc_i2c_polling_b2b_master_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_lpc_i2c_interrupt_b2b_transfer_slave_cm33" name="lpc_i2c_interrupt_b2b_transfer_slave_cm33" brief="The i2c_interrupt_b2b_transfer_slave example shows how to use i2c driver as slave to do board to board transfer with interrupt:In this example, one i2c instance as slave and another i2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/i2c" path="boards/evkmimxrt595/driver_examples/i2c/interrupt_b2b_transfer/slave">
          <external path="boards/evkmimxrt595/driver_examples/i2c/interrupt_b2b_transfer/slave" type="xml">
            <files mask="lpc_i2c_interrupt_b2b_transfer_slave_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_lpc_i2c_interrupt_b2b_transfer_master_cm33" name="lpc_i2c_interrupt_b2b_transfer_master_cm33" brief="The i2c_interrupt_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with interrupt:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/i2c" path="boards/evkmimxrt595/driver_examples/i2c/interrupt_b2b_transfer/master">
          <external path="boards/evkmimxrt595/driver_examples/i2c/interrupt_b2b_transfer/master" type="xml">
            <files mask="lpc_i2c_interrupt_b2b_transfer_master_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_lpc_i2c_dma_b2b_transfer_slave_cm33" name="lpc_i2c_dma_b2b_transfer_slave_cm33" brief="The i2c_dma_b2b_transfer_slave example shows how to use i2c driver as slave to do board to board transfer with a DMA master:In this example, one i2c instance as slave and another i2c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/i2c" path="boards/evkmimxrt595/driver_examples/i2c/dma_b2b_transfer/slave">
          <external path="boards/evkmimxrt595/driver_examples/i2c/dma_b2b_transfer/slave" type="xml">
            <files mask="lpc_i2c_dma_b2b_transfer_slave_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_lpc_i2c_dma_b2b_transfer_master_cm33" name="lpc_i2c_dma_b2b_transfer_master_cm33" brief="The i2c_dma_b2b_transfer_master example shows how to use i2c driver as master to do board to board transfer with DMA:In this example, one i2c instance as master and another i2c instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/i2c" path="boards/evkmimxrt595/driver_examples/i2c/dma_b2b_transfer/master">
          <external path="boards/evkmimxrt595/driver_examples/i2c/dma_b2b_transfer/master" type="xml">
            <files mask="lpc_i2c_dma_b2b_transfer_master_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_lpc_gpio_led_output_cm33" name="lpc_gpio_led_output_cm33" brief="The GPIO Example project is a demonstration program that uses the KSDK software to manipulate the general-purposeoutputs. The example use LEDs and buttons to demonstrates GPIO API for port and pin manipulation (init, set,clear, and toggle)." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/gpio" path="boards/evkmimxrt595/driver_examples/gpio/led_output">
          <external path="boards/evkmimxrt595/driver_examples/gpio/led_output" type="xml">
            <files mask="lpc_gpio_led_output_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_lpc_gpio_input_interrupt_cm33" name="lpc_gpio_input_interrupt_cm33" brief="The GPIO Example project is a demonstration program that uses the KSDK software to manipulate the general-purposeoutputs.The example is supported by the set, clear registers for each GPIO pin output register. " toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/gpio" path="boards/evkmimxrt595/driver_examples/gpio/input_interrupt">
          <external path="boards/evkmimxrt595/driver_examples/gpio/input_interrupt" type="xml">
            <files mask="lpc_gpio_input_interrupt_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_lpc_dma_memory_to_memory_cm33" name="lpc_dma_memory_to_memory_cm33" brief="The DMA memory to memory example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK DMA drivers.The purpose of this example is to show how to use the DMA and to provide a simple example fordebugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/dma" path="boards/evkmimxrt595/driver_examples/dma/memory_to_memory">
          <external path="boards/evkmimxrt595/driver_examples/dma/memory_to_memory" type="xml">
            <files mask="lpc_dma_memory_to_memory_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dma_linked_transfer_cm33" name="dma_linked_transfer_cm33" brief="The DMA linked transfer example is a simple demonstration program that uses the SDK software.It executes a linked transfer from source buffer to destination buffer using the SDK DMA drivers.The purpose of this example is to show how to use the DMA and to provide a linked trnasfer example." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/dma" path="boards/evkmimxrt595/driver_examples/dma/linked_transfer">
          <external path="boards/evkmimxrt595/driver_examples/dma/linked_transfer" type="xml">
            <files mask="dma_linked_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dma_interleave_transfer_cm33" name="dma_interleave_transfer_cm33" brief="The DMA interleave transfer example is a simple demonstration program that uses the SDK software.It executes a linked transfer from source buffer to destination buffer using the SDK DMA drivers.The purpose of this example is to show how to use the DMA interleave feature." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/dma" path="boards/evkmimxrt595/driver_examples/dma/interleave_transfer">
          <external path="boards/evkmimxrt595/driver_examples/dma/interleave_transfer" type="xml">
            <files mask="dma_interleave_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dma_hardware_trigger_cm33" name="dma_hardware_trigger_cm33" brief="The DMA hardware trigger example is a simple demonstration program that uses the SDK software.It executes one shot transfer from source buffer to destination buffer using the SDK DMA drivers by hardware trigger.The purpose of this example is to show how to use the DMA and to provide a simple example fordebugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/dma" path="boards/evkmimxrt595/driver_examples/dma/hardware_trigger">
          <external path="boards/evkmimxrt595/driver_examples/dma/hardware_trigger" type="xml">
            <files mask="dma_hardware_trigger_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dma_channel_chain_cm33" name="dma_channel_chain_cm33" brief="The DMA channel chain example is a simple demonstration program that uses the SDK software.The purpose of this example is to show how to use the DMA channel chain feature." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/dma" path="boards/evkmimxrt595/driver_examples/dma/channel_chain">
          <external path="boards/evkmimxrt595/driver_examples/dma/channel_chain" type="xml">
            <files mask="dma_channel_chain_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_lpc_crc_cm33" name="lpc_crc_cm33" brief="The CRC Example project is a demonstration program that uses the KSDK software to generate checksumsfor an ASCII string. Several CRC protocols are implemented using the CRC driver API." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/crc" path="boards/evkmimxrt595/driver_examples/crc">
          <external path="boards/evkmimxrt595/driver_examples/crc" type="xml">
            <files mask="lpc_crc_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_lpadc_temperature_measurement_cm33" name="lpadc_temperature_measurement_cm33" brief="The lpadc_temperature_measurement example shows how to measure the temperature within the internal sensor. In this example, the ADC input channel is mapped to an internal temperature sensor. When running the project, typing any key into debug console would trigger the conversion. ADC watermark interrupt would be asserted once the number of datawords stored in the ADC Result FIFO is greater than watermark value. In ADC ISR, the watermark flag would be cleared by reading the conversion result value. When the conversion done, two valid result will be put in the FIFO, then the temperature can be calculated within the two results and a specific formula." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpadc" path="boards/evkmimxrt595/driver_examples/lpadc/temperature_measurement">
          <external path="boards/evkmimxrt595/driver_examples/lpadc/temperature_measurement" type="xml">
            <files mask="lpadc_temperature_measurement_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_lpadc_polling_cm33" name="lpadc_polling_cm33" brief="The lpadc_single_polling example shows the simplest way to use LPADC driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the LPADC'ssample input. When running the project, typing any key into debug console would trigger the conversion. The execution would check the FIFO valid flag in loop until the flag is asserted, which means the conversion is completed. Then read the conversion result value and print it to debug console.Note, the default setting of initialization for the ADC converter is just an available configuration. User can changethe configuration structure's setting in application to fit the special requirement." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpadc" path="boards/evkmimxrt595/driver_examples/lpadc/polling">
          <external path="boards/evkmimxrt595/driver_examples/lpadc/polling" type="xml">
            <files mask="lpadc_polling_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_lpadc_interrupt_cm33" name="lpadc_interrupt_cm33" brief="The lpdc_single_interrupt example shows how to use interrupt with LPADC driver.In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the LPADC'ssample input. When running the project, typing any key into debug console would trigger the conversion. ADC watermark interrupt would be asserted once the number of datawords stored in the ADC Result FIFO is greater than watermark value.In ADC ISR, the watermark flag would be cleared by reading the conversion result value. Also, result information wouldbe printed when the execution return to the main function." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpadc" path="boards/evkmimxrt595/driver_examples/lpadc/interrupt">
          <external path="boards/evkmimxrt595/driver_examples/lpadc/interrupt" type="xml">
            <files mask="lpadc_interrupt_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_lpadc_dma_cm33" name="lpadc_dma_cm33" brief="The lpdc_dma example shows how to use ADC to trigger a DMA transfer. In this example, user should indicate a channel to provide a voltage signal (can be controlled by user) as the LPADC's sample input. When running the project, typing any key into debug console would trigger the conversion, the software trigger API is called to start the conversion. When the ADC conversion is completed, it would trigger the DMA in ping-pong transfer mode to move the ADC conversion result from ADC conversion data register to user indicated memory. Then the main loop waits for the transfer to be done and print the result to terminal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lpadc" path="boards/evkmimxrt595/driver_examples/lpadc/dma">
          <external path="boards/evkmimxrt595/driver_examples/lpadc/dma" type="xml">
            <files mask="lpadc_dma_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_lcdif_rgb565_cm33" name="lcdif_rgb565_cm33" brief="This example demonstrates how to use the LCDIF driver to show the RGB565 format frame buffer. When the example runs, a rectangle is moving in the screen, and its color changes when touch border." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lcdif" path="boards/evkmimxrt595/driver_examples/lcdif/rgb565">
          <external path="boards/evkmimxrt595/driver_examples/lcdif/rgb565" type="xml">
            <files mask="lcdif_rgb565_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_lcdif_gamma_cm33" name="lcdif_gamma_cm33" brief="This example demonstrates how to use the LCDIF gamma correction feature. In this example, the gamma corretion table is set to invert the original picture. The original picture is gradual changed gray bars, the gamma correction is continuously enabled and disabled, so you can see the screen switch between the original picture and the inverted picture." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lcdif" path="boards/evkmimxrt595/driver_examples/lcdif/gamma">
          <external path="boards/evkmimxrt595/driver_examples/lcdif/gamma" type="xml">
            <files mask="lcdif_gamma_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_lcdif_cursor_masked_cm33" name="lcdif_cursor_masked_cm33" brief="This example demonstrates how to use the LCDIF cursor in masked mode." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lcdif" path="boards/evkmimxrt595/driver_examples/lcdif/cursor_masked">
          <external path="boards/evkmimxrt595/driver_examples/lcdif/cursor_masked" type="xml">
            <files mask="lcdif_cursor_masked_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_lcdif_cursor_argb_cm33" name="lcdif_cursor_argb_cm33" brief="This example demonstrates how to use the LCDIF cursor in ARGB8888 mode. In this exapmle, the screen is devided into two parts: red and blue. A cursor is moving in the screen, the cursor alpha value changes during moving." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/lcdif" path="boards/evkmimxrt595/driver_examples/lcdif/cursor_argb">
          <external path="boards/evkmimxrt595/driver_examples/lcdif/cursor_argb" type="xml">
            <files mask="lcdif_cursor_argb_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_iap3_otp_cm33" name="iap3_otp_cm33" brief="The IAP project is a simple demonstration program of the SDK IAP driver. It reads fuse word with input index. A message a printed on the UART terminal as fuse read iap operations are performed." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/iap3" path="boards/evkmimxrt595/driver_examples/iap/iap_otp">
          <external path="boards/evkmimxrt595/driver_examples/iap/iap_otp" type="xml">
            <files mask="iap3_otp_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_iap3_flash_cm33" name="iap3_flash_cm33" brief="The IAP flash project is a simple demonstration program of the SDK IAP driver. It provides some flash operations with ROM API, such as automatically detect flash configuration, erase sectors and program pages. All operations are followed by flash memory check to ensure the data operated are successful." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/iap3" path="boards/evkmimxrt595/driver_examples/iap/iap_flash">
          <external path="boards/evkmimxrt595/driver_examples/iap/iap_flash" type="xml">
            <files mask="iap3_flash_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_iap3_boot_cm33" name="iap3_boot_cm33" brief="The IAP project is a simple demonstration program of the SDK IAP driver. It invokes into ROM with user specified parameter." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/iap3" path="boards/evkmimxrt595/driver_examples/iap/iap_boot">
          <external path="boards/evkmimxrt595/driver_examples/iap/iap_boot" type="xml">
            <files mask="iap3_boot_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_iap3_flash_fcb_cm33" name="iap3_flash_fcb_cm33" brief="The IAP flash project is a simple demonstration program of the SDK IAP driver. It provides some flash operations with ROM API, such as using a complete FlexSPI NOR Configuration Block to configure the flash, erasing sectors and programing pages. All operations are followed by flash memory check to ensure the data operated are successful." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/iap3" path="boards/evkmimxrt595/driver_examples/iap/flash_fcb">
          <external path="boards/evkmimxrt595/driver_examples/iap/flash_fcb" type="xml">
            <files mask="iap3_flash_fcb_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_i3c_polling_b2b_transfer_slave_cm33" name="i3c_polling_b2b_transfer_slave_cm33" brief="The i3c_polling_b2b_transfer_slave example shows how to use i3c driver as slave to do board to board transfer with a polling master. In this example, one i3c instance as slave and another i3c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/i3c" path="boards/evkmimxrt595/driver_examples/i3c/polling_b2b_transfer/slave">
          <external path="boards/evkmimxrt595/driver_examples/i3c/polling_b2b_transfer/slave" type="xml">
            <files mask="i3c_polling_b2b_transfer_slave_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_i3c_polling_b2b_transfer_master_cm33" name="i3c_polling_b2b_transfer_master_cm33" brief="The i3c_polling_b2b_transfer_master example shows how to use i3c driver as master to do board to board transfer using polling method. In this example, one i3c instance as master and another i3c instance on the other board as slave. Master will assign dynamic address to slave, then sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/i3c" path="boards/evkmimxrt595/driver_examples/i3c/polling_b2b_transfer/master">
          <external path="boards/evkmimxrt595/driver_examples/i3c/polling_b2b_transfer/master" type="xml">
            <files mask="i3c_polling_b2b_transfer_master_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_i3c_interrupt_b2b_transfer_slave_cm33" name="i3c_interrupt_b2b_transfer_slave_cm33" brief="The i3c_interrupt_b2b_transfer_slave example shows how to use i3c driver as slave to do board to board transfer with a interrupt master. In this example, one i3c instance as slave and another i3c instance on the other board as master. Master sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/i3c" path="boards/evkmimxrt595/driver_examples/i3c/interrupt_b2b_transfer/slave">
          <external path="boards/evkmimxrt595/driver_examples/i3c/interrupt_b2b_transfer/slave" type="xml">
            <files mask="i3c_interrupt_b2b_transfer_slave_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_i3c_interrupt_b2b_transfer_master_cm33" name="i3c_interrupt_b2b_transfer_master_cm33" brief="The i3c_interrupt_b2b_transfer_master example shows how to use i3c driver as master to do board to board transfer using interrupt method. In this example, one i3c instance as master and another i3c instance on the other board as slave. Master will assign dynamic address to slave, then sends a piece of data to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/i3c" path="boards/evkmimxrt595/driver_examples/i3c/interrupt_b2b_transfer/master">
          <external path="boards/evkmimxrt595/driver_examples/i3c/interrupt_b2b_transfer/master" type="xml">
            <files mask="i3c_interrupt_b2b_transfer_master_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_i2c_read_accel_value_transfer_cm33" name="i2c_read_accel_value_transfer_cm33" brief="The i2c_read_accel_value example shows how to use I2C driver to communicate with an i2c device: 1. How to use the i2c driver to read a i2c device who_am_I register. 2. How to use the i2c driver to write/read the device registers.In this example, the values of three-axis accelerometer print to the serial terminal on PC throughthe virtual serial port on board." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/i2c" path="boards/evkmimxrt595/driver_examples/i2c/read_accel_value_transfer">
          <external path="boards/evkmimxrt595/driver_examples/i2c/read_accel_value_transfer" type="xml">
            <files mask="i2c_read_accel_value_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_i2c_accel_event_trigger_cm33" name="i2c_accel_event_trigger_cm33" brief="This example demonstrate how to wake up main device in low power mode with accelerometer trigger event. The accelerometer can keep working while the main device is in low power mode (or deep sleep mode). Only when the configured event was captured, the accelerometer will trigger the interrupt to wake up the main device. This example uses I2C to configure the accelerometer to work in 800Hz data rate with low noise mode. And when the tap event is triggered, it will wake up the main device. And 32 samples around the trigger event will be captured." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/i2c" path="boards/evkmimxrt595/driver_examples/i2c/accel_event_trigger">
          <external path="boards/evkmimxrt595/driver_examples/i2c/accel_event_trigger" type="xml">
            <files mask="i2c_accel_event_trigger_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_hashcrypt_cm33" name="hashcrypt_cm33" brief="The hashcrypt Example project is a demonstration program that uses the KSDK software to encrypt and hash data with hardware acceleration." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/hashcrypt" path="boards/evkmimxrt595/driver_examples/hashcrypt">
          <external path="boards/evkmimxrt595/driver_examples/hashcrypt" type="xml">
            <files mask="hashcrypt_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_fmeas_cm33" name="fmeas_cm33" brief="This example shows how to use SDK drivers to use the Frequency Measure feature of SYSCON module on LPC devices.It shows how to measure a target frequency using a (faster) reference frequency. The example uses the internal main clock as the reference frequency to measure the frequencies of the RTC, watchdog oscillator, and internal RC oscillator." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/fmeas" path="boards/evkmimxrt595/driver_examples/fmeas">
          <external path="boards/evkmimxrt595/driver_examples/fmeas" type="xml">
            <files mask="fmeas_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_flexspi_psram_polling_transfer_cm33" name="flexspi_psram_polling_transfer_cm33" brief="The flexspi_psram_polling_transfer example shows how to use flexspi driver with polling: In this example, flexspi will send data and operate the external PSRAM connected with FLEXSPI. Some simple flash command will be executed, such as Read Data and Write Data.Example will write/read through the whole chip, through IP command and AHB command." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexspi" path="boards/evkmimxrt595/driver_examples/flexspi/psram/polling_transfer">
          <external path="boards/evkmimxrt595/driver_examples/flexspi/psram/polling_transfer" type="xml">
            <files mask="flexspi_psram_polling_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_flexspi_psram_dma_transfer_cm33" name="flexspi_psram_dma_transfer_cm33" brief="The flexspi_psram_dma_transfer example shows how to use flexspi driver with dma: In this example, flexspi will send data and operate the external PSRAM connected with FLEXSPI. Some simple flash command will be executed, such as Read Data and Write Data.Example will write/read through the whole chip, through IP command and AHB command." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexspi" path="boards/evkmimxrt595/driver_examples/flexspi/psram/dma_transfer">
          <external path="boards/evkmimxrt595/driver_examples/flexspi/psram/dma_transfer" type="xml">
            <files mask="flexspi_psram_dma_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_flexspi_octal_polling_transfer_cm33" name="flexspi_octal_polling_transfer_cm33" brief="The flexspi_octal_polling_transfer example shows how to use flexspi driver with polling:In this example, flexspi will send data and operate the external octal flash connected with FLEXSPI. Some simple flash command willbe executed, such as Write Enable, Erase sector, Program page.Example will first erase the sector and program a page into the flash, at last check if the data in flash is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexspi" path="boards/evkmimxrt595/driver_examples/flexspi/octal/polling_transfer">
          <external path="boards/evkmimxrt595/driver_examples/flexspi/octal/polling_transfer" type="xml">
            <files mask="flexspi_octal_polling_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_flexspi_octal_dma_transfer_cm33" name="flexspi_octal_dma_transfer_cm33" brief="The flexspi_octal_dma_transfer example shows how to use flexspi driver with dma:In this example, flexspi will send data and operate the external octal flash connected with FLEXSPI. Some simple flash command willbe executed, such as Write Enable, Erase sector, Program page.Example will first erase the sector and program a page into the flash, at last check if the data in flash is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexspi" path="boards/evkmimxrt595/driver_examples/flexspi/octal/dma_transfer">
          <external path="boards/evkmimxrt595/driver_examples/flexspi/octal/dma_transfer" type="xml">
            <files mask="flexspi_octal_dma_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_flexio_uart_polling_transfer_cm33" name="flexio_uart_polling_transfer_cm33" brief="The flexio_uart_polling example shows how to use flexio uart driver in polling way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send backall characters that PC send to the board." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkmimxrt595/driver_examples/flexio/uart/polling_transfer">
          <external path="boards/evkmimxrt595/driver_examples/flexio/uart/polling_transfer" type="xml">
            <files mask="flexio_uart_polling_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_flexio_uart_interrupt_transfer_cm33" name="flexio_uart_interrupt_transfer_cm33" brief="The flexio_uart_interrupt example shows how to use flexio uart driver in interrupt way:In this example, a flexio simulated uart connect to PC through USB-Serial, the board will send back all charactersthat PC send to the board. Note: two queued transfer in this example, so please input even number characters." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkmimxrt595/driver_examples/flexio/uart/interrupt_transfer">
          <external path="boards/evkmimxrt595/driver_examples/flexio/uart/interrupt_transfer" type="xml">
            <files mask="flexio_uart_interrupt_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_flexio_spi_int_spi_transfer_master_cm33" name="flexio_spi_int_spi_transfer_master_cm33" brief="The flexio_spi_master_interrupt_spi_slave example shows how to use flexio spi master driver in interrupt way:In this example, a flexio simulated master connect to a spi slave ." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkmimxrt595/driver_examples/flexio/spi/int_spi_transfer/master">
          <external path="boards/evkmimxrt595/driver_examples/flexio/spi/int_spi_transfer/master" type="xml">
            <files mask="flexio_spi_int_spi_transfer_master_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_flexio_pwm_cm33" name="flexio_pwm_cm33" brief="This demo describes how to use SDK drivers to implement the PWM feature by FLEXIO IP module. It outputs the PWM singal with fixed frequency defined by &quot;DEMO_FLEXIO_FREQUENCY&quot; in source code and dynamic duty from 99 to 1 to one of the FLEXIO pin." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkmimxrt595/driver_examples/flexio/pwm">
          <external path="boards/evkmimxrt595/driver_examples/flexio/pwm" type="xml">
            <files mask="flexio_pwm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_flexio_i2c_interrupt_flexcomm_i2c_transfer_cm33" name="flexio_i2c_interrupt_flexcomm_i2c_transfer_cm33" brief="The flexio_i2c_interrupt example shows how to use flexio i2c master driver in interrupt way:In this example, a flexio simulated i2c master connect to an flexcomm I2C slave." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/flexio" path="boards/evkmimxrt595/driver_examples/flexio/i2c/interrupt_i2c_transfer">
          <external path="boards/evkmimxrt595/driver_examples/flexio/i2c/interrupt_i2c_transfer" type="xml">
            <files mask="flexio_i2c_interrupt_flexcomm_i2c_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_usart_polling_cm33" name="usart_polling_cm33" brief="The uart_polling example shows how to use uart driver in polling way:In this example, one uart instance connect to PC through uart, the board will send back all characters that PCsend to the board." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/usart" path="boards/evkmimxrt595/driver_examples/usart/polling">
          <external path="boards/evkmimxrt595/driver_examples/usart/polling" type="xml">
            <files mask="usart_polling_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_usart_interrupt_transfer_cm33" name="usart_interrupt_transfer_cm33" brief="The uart_interrupt example shows how to use uart driver in interrupt way:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/usart" path="boards/evkmimxrt595/driver_examples/usart/interrupt_transfer">
          <external path="boards/evkmimxrt595/driver_examples/usart/interrupt_transfer" type="xml">
            <files mask="usart_interrupt_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_usart_interrupt_rb_transfer_cm33" name="usart_interrupt_rb_transfer_cm33" brief="The uart_interrupt_ring_buffer example shows how to use uart driver in interrupt way withRX ring buffer enabled:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/usart" path="boards/evkmimxrt595/driver_examples/usart/interrupt_rb_transfer">
          <external path="boards/evkmimxrt595/driver_examples/usart/interrupt_rb_transfer" type="xml">
            <files mask="usart_interrupt_rb_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_usart_interrupt_cm33" name="usart_interrupt_cm33" brief="The uart_functioncal_interrupt example shows how to use uart driver functionalAPI to receive data with interrupt method:In this example, one uart instance connect to PC through uart, the board willsend back all characters that PC send to the board." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/usart" path="boards/evkmimxrt595/driver_examples/usart/interrupt">
          <external path="boards/evkmimxrt595/driver_examples/usart/interrupt" type="xml">
            <files mask="usart_interrupt_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_usart_dma_transfer_cm33" name="usart_dma_transfer_cm33" brief="The usart_dma example shows how to use usart driver with DMA:In this example, one usart instance connect to PC through usart, the board willsend back all characters that PC send to the board.Note: The example echo every 8 characters, so input 8 characters every time." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/usart" path="boards/evkmimxrt595/driver_examples/usart/dma_transfer">
          <external path="boards/evkmimxrt595/driver_examples/usart/dma_transfer" type="xml">
            <files mask="usart_dma_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_usart_dma_low_power_cm33" name="usart_dma_low_power_cm33" brief="The usart_dma_low_power example shows how to use usart to wake up the system in low power modes, and how to wake up for DMA only. In this example, one usart instance connects to PC through usart, the board will start receiving characters from PC and then go into low power mode. Each character from PC will only wake up the DMA but the CPU keeps in low power mode. Once 8 characters were received, system will be woken up and echo the characters to PC." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/usart" path="boards/evkmimxrt595/driver_examples/usart/dma_low_power">
          <external path="boards/evkmimxrt595/driver_examples/usart/dma_low_power" type="xml">
            <files mask="usart_dma_low_power_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_usart_dma_double_buffer_transfer_cm33" name="usart_dma_double_buffer_transfer_cm33" brief="This example shows how to use the DMA driver to implement a double buffer receive scheme from the USARTThe example shows the double buffer constructed using two descriptors (g_pingpong_desc). These descriptors are cycled from one to the other.Things to note- The descriptors of the ping pong transfer need to be aligned to size 16- The inital transfer will perform the same job as first descriptor of ping pong, so the first linkeage is to go to g_pingpong_desc[1]- g_pingpong_desc[1] then chains the g_pingpong_desc[0] as the next descriptor- The properties are set up such that g_pingpong_desc[0] (and the initial configuration uses INTA to signal back to the callback)- g_pingpong_desc[1] uses INTB to signal to the callback- The scheduled callback uses this information to know which data was last writtenA note on PerformanceThe intent of this example is to illustrate how a double-buffer scheme can be implemented using the dma. The performance of this example will be limited to how quickly the echo printer can read-out the data from the ping pong buffer and display it. This means that the example will work well if characters are entered at a rate where the DMA callback to echo the string can keep up with the input stream. Connecting the USARTRX to a continuous fast speed will cause the DMA to fall behind. " toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/usart" path="boards/evkmimxrt595/driver_examples/usart/dma_double_buffer_transfer">
          <external path="boards/evkmimxrt595/driver_examples/usart/dma_double_buffer_transfer" type="xml">
            <files mask="usart_dma_double_buffer_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_flexcomm_spi_polling_b2b_transfer_slave_cm33" name="flexcomm_spi_polling_b2b_transfer_slave_cm33" brief="The spi_polling_board2board_slave example shows how to use spi driver as slave to do board to board transfer withpolling:Notice: The SPI slave of this example uses interrupt mode, as there is no polling mode for SPI slave.In this example, one spi instance as slave and another spi instance on other board as master. Master sends a piece ofdata to slave, and receive a piece of data from slave. This example checks if the data received from master is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/spi" path="boards/evkmimxrt595/driver_examples/spi/polling_b2b_transfer/slave">
          <external path="boards/evkmimxrt595/driver_examples/spi/polling_b2b_transfer/slave" type="xml">
            <files mask="flexcomm_spi_polling_b2b_transfer_slave_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_flexcomm_spi_polling_b2b_transfer_master_cm33" name="flexcomm_spi_polling_b2b_transfer_master_cm33" brief="The spi_polling_board2board_master example shows how to use spi driver as master to do board to board transfer with polling:In this example, one spi instance as master and another spi instance on othereboard as slave. Master sends a piece ofdata to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/spi" path="boards/evkmimxrt595/driver_examples/spi/polling_b2b_transfer/master">
          <external path="boards/evkmimxrt595/driver_examples/spi/polling_b2b_transfer/master" type="xml">
            <files mask="flexcomm_spi_polling_b2b_transfer_master_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_flexcomm_spi_interrupt_b2b_transfer_slave_cm33" name="flexcomm_spi_interrupt_b2b_transfer_slave_cm33" brief="The spi_interrupt_board2board_slave example shows how to use spi driver as slave to do board to board transfer with interrupt:In this example, one spi instance as slave and another spi instance on other board as master. Master sends a piece ofdata to slave, and receive a piece of data from slave. This example checks if the data received from master is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/spi" path="boards/evkmimxrt595/driver_examples/spi/interrupt_b2b_transfer/slave">
          <external path="boards/evkmimxrt595/driver_examples/spi/interrupt_b2b_transfer/slave" type="xml">
            <files mask="flexcomm_spi_interrupt_b2b_transfer_slave_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_flexcomm_spi_interrupt_b2b_transfer_master_cm33" name="flexcomm_spi_interrupt_b2b_transfer_master_cm33" brief="The spi_interrupt_board2board_master example shows how to use spi driver as master to do board to board transfer withinterrupt:In this example, one spi instance as master and another spi instance on othereboard as slave. Master sends a piece ofdata to slave, and receive a piece of data from slave. This example checks if the data received from slave is correct." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/spi" path="boards/evkmimxrt595/driver_examples/spi/interrupt_b2b_transfer/master">
          <external path="boards/evkmimxrt595/driver_examples/spi/interrupt_b2b_transfer/master" type="xml">
            <files mask="flexcomm_spi_interrupt_b2b_transfer_master_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_flexcomm_spi_interrupt_b2b_slave_cm33" name="flexcomm_spi_interrupt_b2b_slave_cm33" brief="The spi_interrupt_b2b_slave example shows how to use spi functional API to do interrupt transfer as a slave:In this example, the spi instance as slave. Slave receives data froma master and send a peiece of data to master,and check if the data slave received is correct. This example needs to work with spi_interrupt_b2b_master example." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/spi" path="boards/evkmimxrt595/driver_examples/spi/interrupt_b2b/slave">
          <external path="boards/evkmimxrt595/driver_examples/spi/interrupt_b2b/slave" type="xml">
            <files mask="flexcomm_spi_interrupt_b2b_slave_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_flexcomm_spi_interrupt_b2b_master_cm33" name="flexcomm_spi_interrupt_b2b_master_cm33" brief="The spi_interrupt_b2b_master example shows how to use spi functional API to do interrupt transfer as a master:In this example, the spi instance as master. Master sends a piece of data to slave, receive data from slave,and checkif the data master received is correct. This example needs to work with spi_interrupt_b2b_slave example." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/spi" path="boards/evkmimxrt595/driver_examples/spi/interrupt_b2b/master">
          <external path="boards/evkmimxrt595/driver_examples/spi/interrupt_b2b/master" type="xml">
            <files mask="flexcomm_spi_interrupt_b2b_master_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_flexcomm_spi_dma_b2b_transfer_slave_cm33" name="flexcomm_spi_dma_b2b_transfer_slave_cm33" brief="The spi_dma_b2b_transfer_slave example shows how to use driver API to transfer in DMA way.  In this example, one spi instance as master and another spi instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checksif the data received from master is correct. This example needs to work with spi_dma_b2b_transfer_master example." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/spi" path="boards/evkmimxrt595/driver_examples/spi/dma_b2b_transfer/slave">
          <external path="boards/evkmimxrt595/driver_examples/spi/dma_b2b_transfer/slave" type="xml">
            <files mask="flexcomm_spi_dma_b2b_transfer_slave_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_flexcomm_spi_dma_b2b_transfer_master_cm33" name="flexcomm_spi_dma_b2b_transfer_master_cm33" brief="The spi_dma_b2b_transfer_master example shows how to use driver API to transfer in DMA way.  In this example, one spi instance as master and another spi instance on the other board as slave. Master sends a piece of data to slave, and receive a piece of data from slave. This example checksif the data received from slave is correct. This example needs to work with spi_dma_b2b_transfer_slave example.Note: This example will run in master mode, please prepare another board for slave, and the slave       board should be started first.Project Information1.How to set the baudrate of SPI?  The baudrate of SPI is easy to set, just make sure the source clock of SPI." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/spi" path="boards/evkmimxrt595/driver_examples/spi/dma_b2b_transfer/master">
          <external path="boards/evkmimxrt595/driver_examples/spi/dma_b2b_transfer/master" type="xml">
            <files mask="flexcomm_spi_dma_b2b_transfer_master_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_i2s_interrupt_transfer_cm33" name="i2s_interrupt_transfer_cm33" brief="The I2S example project uses one I2S interface to continuously record input sound to a bufferand another I2S interface to playback the buffer to output - digital loopback.It requires NXP Mic/Audio/Oled Shield with WM8904 codec.It needs to have 1-2 connected on JP3." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/i2s" path="boards/evkmimxrt595/driver_examples/i2s/interrupt_transfer">
          <external path="boards/evkmimxrt595/driver_examples/i2s/interrupt_transfer" type="xml">
            <files mask="i2s_interrupt_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_i2s_interrupt_record_playback_cm33" name="i2s_interrupt_record_playback_cm33" brief="The I2S example project uses one I2S interface to continuously record input sound to a bufferand another I2S interface to playback the buffer to output - digital loopback.It requires NXP Mic/Audio/Oled Shield with WM8904 codec.It needs to have 1-2 connected on JP3." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/i2s" path="boards/evkmimxrt595/driver_examples/i2s/interrupt_record_playback">
          <external path="boards/evkmimxrt595/driver_examples/i2s/interrupt_record_playback" type="xml">
            <files mask="i2s_interrupt_record_playback_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_i2s_dma_transfer_cm33" name="i2s_dma_transfer_cm33" brief="The I2S example project uses one I2S interface to continuously record input sound to a bufferand another I2S interface to playback the buffer to output - digital loopback.It requires NXP Mic/Audio/Oled Shield with WM8904 codec.It needs to have 1-2 connected on JP3." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/i2s" path="boards/evkmimxrt595/driver_examples/i2s/dma_transfer">
          <external path="boards/evkmimxrt595/driver_examples/i2s/dma_transfer" type="xml">
            <files mask="i2s_dma_transfer_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_i2s_dma_record_playback_cm33" name="i2s_dma_record_playback_cm33" brief="The I2S example project uses one I2S interface to continuously record input sound to a bufferand another I2S interface to playback the buffer to output - digital loopback.It requires NXP Mic/Audio/Oled Shield with WM8904 codec.It needs to have 1-2 connected on JP3." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/i2s" path="boards/evkmimxrt595/driver_examples/i2s/dma_record_playback">
          <external path="boards/evkmimxrt595/driver_examples/i2s/dma_record_playback" type="xml">
            <files mask="i2s_dma_record_playback_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dmic_multi_channel_cm33" name="dmic_multi_channel_cm33" brief="Demonstrates the DMIC multi channel working with I2S. Audio is converted to samples in the DMIC module.Then, the data is placed memory buffer. Last, it is send data to the I2S buffer and send to the CODEC, then the audio data will be output to Lineout of CODEC.~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/dmic" path="boards/evkmimxrt595/driver_examples/dmic/dmic_multi_channel">
          <external path="boards/evkmimxrt595/driver_examples/dmic/dmic_multi_channel" type="xml">
            <files mask="dmic_multi_channel_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dmic_i2s_dma_cm33" name="dmic_i2s_dma_cm33" brief="Demonstrates the DMIC working with I2S. Audio is converted to samples in the DMIC module.Then, the data is placed memory buffer. Last, it is send data to the I2S buffer and send to the CODEC, then the audio data will be output to Lineout of CODEC.~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/dmic" path="boards/evkmimxrt595/driver_examples/dmic/dmic_i2s_dma">
          <external path="boards/evkmimxrt595/driver_examples/dmic/dmic_i2s_dma" type="xml">
            <files mask="dmic_i2s_dma_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dmic_i2s_codec_cm33" name="dmic_i2s_codec_cm33" brief="Demonstrates the DMIC working with I2S. Audio is converted to samples in the DMIC module.Then, the data is placed into the I2S buffer. Last, it is read from the I2S buffer and sentto the CODEC, then the audio data will be output to Lineout of CODEC.~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/dmic" path="boards/evkmimxrt595/driver_examples/dmic/dmic_i2s_codec">
          <external path="boards/evkmimxrt595/driver_examples/dmic/dmic_i2s_codec" type="xml">
            <files mask="dmic_i2s_codec_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dmic_hwvad_cm33" name="dmic_hwvad_cm33" brief="~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~This demo explains how built in HWVAD( HW voice activity detector) in LPC5411x can be used towake up the device from sleep mode" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/dmic" path="boards/evkmimxrt595/driver_examples/dmic/dmic_hwvad">
          <external path="boards/evkmimxrt595/driver_examples/dmic/dmic_hwvad" type="xml">
            <files mask="dmic_hwvad_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dmic_dma_cm33" name="dmic_dma_cm33" brief="This example shows how to use DMA to transfer data from DMIC to memory." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/dmic" path="boards/evkmimxrt595/driver_examples/dmic/dmic_dma">
          <external path="boards/evkmimxrt595/driver_examples/dmic/dmic_dma" type="xml">
            <files mask="dmic_dma_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_ctimer_pwm_interrupt_example_cm33" name="ctimer_pwm_interrupt_example_cm33" brief="The Simple PWM Interrupt project is to demonstrate usage of the SDK CTimer driver as a PWM with interrupt callback functionsIn this example an IO pin connected to the LED is used as a PWM output line to generate a PWM signal.With an interrupt callback the PWM duty cycle is changed frequently in such a way that the LED brightness can be varied." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/ctimer" path="boards/evkmimxrt595/driver_examples/ctimer/simple_pwm_interrupt">
          <external path="boards/evkmimxrt595/driver_examples/ctimer/simple_pwm_interrupt" type="xml">
            <files mask="ctimer_pwm_interrupt_example_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_ctimer_pwm_example_cm33" name="ctimer_pwm_example_cm33" brief="The CTimer Example project is to demonstrate usage of the KSDK ctimer driver.In this example, CTimer is used to generate a PWM signal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/ctimer" path="boards/evkmimxrt595/driver_examples/ctimer/simple_pwm">
          <external path="boards/evkmimxrt595/driver_examples/ctimer/simple_pwm" type="xml">
            <files mask="ctimer_pwm_example_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_ctimer_match_interrupt_example_cm33" name="ctimer_match_interrupt_example_cm33" brief="The Simple Match Interrupt project is to demonstrate usage of the SDK CTimer driver with interrupt callback functionsIn this example the upon match and IO pin connected to the LED is toggled and the timer is reset, so it would generate a square wave.With an interrupt callback the match value is changed frequently in such a way that the frequency of the output square wave is increased gradually." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/ctimer" path="boards/evkmimxrt595/driver_examples/ctimer/simple_match_interrupt">
          <external path="boards/evkmimxrt595/driver_examples/ctimer/simple_match_interrupt" type="xml">
            <files mask="ctimer_match_interrupt_example_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_ctimer_match_example_cm33" name="ctimer_match_example_cm33" brief="The CTimer Example project is to demonstrate usage of the KSDK ctimer driver.In this example, the match feature of the CTimer is used to toggle the output level." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/ctimer" path="boards/evkmimxrt595/driver_examples/ctimer/simple_match">
          <external path="boards/evkmimxrt595/driver_examples/ctimer/simple_match" type="xml">
            <files mask="ctimer_match_example_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_acmp_round_robin_cm33" name="acmp_round_robin_cm33" brief="The ACMP Round-Robin project is a simple demonstration program that uses the SDK software. Usermust set the round-robin mode trigger in specific board properly according to the board resourcebefore running the example. When the example running, it sets positive port as fixed channel andinternal DAC output as comparison reference in positive port and sets the channels input by useras round-robin checker channel. The example will enter stop mode and wait user to change the voltageof round-robin checker channel. It will exit stop mode after the voltage of round-robin checkerchannel changed by user." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/acmp" path="boards/evkmimxrt595/driver_examples/acmp/round_robin">
          <external path="boards/evkmimxrt595/driver_examples/acmp/round_robin" type="xml">
            <files mask="acmp_round_robin_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_acmp_polling_print_cm33" name="acmp_polling_print_cm33" brief="The ACMP Polling project is a simple demonstration program that uses the SDK software. It comparesthe selected analog input with ACMP internal DAC output continuously and toggle the LED when thefinal comparison result changed. The purpose of this demo is to show how to use the ACMP driverin SDK software by polling way. The ACMP can be configured based on default configuration returnedby the API ACMP_GetDefaultConfig(). The default configuration is: high speed is not enabled, invertoutput is not enabled, unfiltered output is not enabled, pin out is not enabled, offset level islevel 0, hysteresis level is level 0." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/acmp" path="boards/evkmimxrt595/driver_examples/acmp/polling">
          <external path="boards/evkmimxrt595/driver_examples/acmp/polling" type="xml">
            <files mask="acmp_polling_print_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_acmp_interrupt_print_cm33" name="acmp_interrupt_print_cm33" brief="The ACMP Interrupt project is a simple demonstration program that uses the SDK software. Itcompares the selected analog input with ACMP internal DAC output continuously and toggle the LEDwhen the final comparison result changed. The purpose of this demo is to show how to use theACMP driver in SDK software by interrupt way. The ACMP can be configured based on defaultconfiguration returned by the API ACMP_GetDefaultConfig(). The default configuration is: highspeed is not enabled, invert output is not enabled, unfiltered output is not enabled, pin outis not enabled, offset level is level 0, hysteresis level is level 0." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/acmp" path="boards/evkmimxrt595/driver_examples/acmp/interrupt">
          <external path="boards/evkmimxrt595/driver_examples/acmp/interrupt" type="xml">
            <files mask="acmp_interrupt_print_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_puf_cm33" name="puf_cm33" brief="This driver example project demonstrates how to use driver for the PUF controller which provides a secure key storage." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/puf" path="boards/evkmimxrt595/driver_examples/puf">
          <external path="boards/evkmimxrt595/driver_examples/puf" type="xml">
            <files mask="puf_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_powerquad_transform_cm33" name="powerquad_transform_cm33" brief="This example shows how to use powerquad driver transform functions." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/powerquad" path="boards/evkmimxrt595/driver_examples/powerquad/transform">
          <external path="boards/evkmimxrt595/driver_examples/powerquad/transform" type="xml">
            <files mask="powerquad_transform_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_powerquad_matrix_cm33" name="powerquad_matrix_cm33" brief="This example shows how to use powerquad driver matrix functions." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/powerquad" path="boards/evkmimxrt595/driver_examples/powerquad/matrix">
          <external path="boards/evkmimxrt595/driver_examples/powerquad/matrix" type="xml">
            <files mask="powerquad_matrix_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_powerquad_math_cm33" name="powerquad_math_cm33" brief="This example project shows how to use the powerquad driver math functions." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/powerquad" path="boards/evkmimxrt595/driver_examples/powerquad/math">
          <external path="boards/evkmimxrt595/driver_examples/powerquad/math" type="xml">
            <files mask="powerquad_math_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_powerquad_fir_fast_cm33" name="powerquad_fir_fast_cm33" brief="The PowerQuad fetches data from system RAM and private RAM through different path, for the calcutations which need data from two parts of memory, such as FIR, convolve, correlate, and some matrix operations, place the input data B in private RAM improves the performance. PowerQuad private RAM starts from address 0xe0000000, the first 4KByte is used by PowerQuad driver, the RAM starts from 0xe0001000 could be used by user for optimization. In this example, the FIR taps, convolve input data B, and correlate input data B are not changed, so they are converted to float format and saved to private RAM at the beginning. If the example runs successfully, the performance using optimized method is better than the nornal method." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/powerquad" path="boards/evkmimxrt595/driver_examples/powerquad/fir_fast">
          <external path="boards/evkmimxrt595/driver_examples/powerquad/fir_fast" type="xml">
            <files mask="powerquad_fir_fast_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_powerquad_filter_cm33" name="powerquad_filter_cm33" brief="This example shows how to use powerquad driver filter functions." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/powerquad" path="boards/evkmimxrt595/driver_examples/powerquad/filter">
          <external path="boards/evkmimxrt595/driver_examples/powerquad/filter" type="xml">
            <files mask="powerquad_filter_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_powerquad_cmsis_cm33" name="powerquad_cmsis_cm33" brief="This example shows how to use powerquad driver CMSIS DSP compatible functions." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/powerquad" path="boards/evkmimxrt595/driver_examples/powerquad/cmsis">
          <external path="boards/evkmimxrt595/driver_examples/powerquad/cmsis" type="xml">
            <files mask="powerquad_cmsis_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_powerquad_benchmark_vector_cm33" name="powerquad_benchmark_vector_cm33" brief="This example shows the PowerQuad based CMSIS DSP function performance." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/powerquad" path="boards/evkmimxrt595/driver_examples/powerquad/benchmark_vector">
          <external path="boards/evkmimxrt595/driver_examples/powerquad/benchmark_vector" type="xml">
            <files mask="powerquad_benchmark_vector_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_powerquad_benchmark_sw_matrix_cm33" name="powerquad_benchmark_sw_matrix_cm33" brief="This example shows the official CMSIS DSP function performance. It could be compared with the project powerquad_benckmark_matrix to show the PowerQuad performance improvement." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/powerquad" path="boards/evkmimxrt595/driver_examples/powerquad/benchmark_sw_matrix">
          <external path="boards/evkmimxrt595/driver_examples/powerquad/benchmark_sw_matrix" type="xml">
            <files mask="powerquad_benchmark_sw_matrix_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_powerquad_benchmark_sw_math_cm33" name="powerquad_benchmark_sw_math_cm33" brief="This example shows the official CMSIS DSP function performance. It could be compared with the project powerquad_benckmark_math to show the PowerQuad performance improvement." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/powerquad" path="boards/evkmimxrt595/driver_examples/powerquad/benchmark_sw_math">
          <external path="boards/evkmimxrt595/driver_examples/powerquad/benchmark_sw_math" type="xml">
            <files mask="powerquad_benchmark_sw_math_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_powerquad_benchmark_sw_filter_cm33" name="powerquad_benchmark_sw_filter_cm33" brief="This example shows the official CMSIS DSP function performance. It could be compared with the project powerquad_benckmark_filter to show the PowerQuad performance improvement." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/powerquad" path="boards/evkmimxrt595/driver_examples/powerquad/benchmark_sw_filter">
          <external path="boards/evkmimxrt595/driver_examples/powerquad/benchmark_sw_filter" type="xml">
            <files mask="powerquad_benchmark_sw_filter_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_powerquad_benchmark_sw_fft_cm33" name="powerquad_benchmark_sw_fft_cm33" brief="This example shows the official CMSIS DSP function performance. It could be compared with the project powerquad_benckmark_fft to show the PowerQuad performance improvement." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/powerquad" path="boards/evkmimxrt595/driver_examples/powerquad/benchmark_sw_fft">
          <external path="boards/evkmimxrt595/driver_examples/powerquad/benchmark_sw_fft" type="xml">
            <files mask="powerquad_benchmark_sw_fft_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_powerquad_benchmark_matrix_cm33" name="powerquad_benchmark_matrix_cm33" brief="This example shows the PowerQuad based CMSIS DSP function performance. It could be compared with the project powerquad_benckmark_sw_matrix to show the PowerQuad performance improvement." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/powerquad" path="boards/evkmimxrt595/driver_examples/powerquad/benchmark_matrix">
          <external path="boards/evkmimxrt595/driver_examples/powerquad/benchmark_matrix" type="xml">
            <files mask="powerquad_benchmark_matrix_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_powerquad_benchmark_math_cm33" name="powerquad_benchmark_math_cm33" brief="This example shows the PowerQuad based CMSIS DSP function performance. It could be compared with the project powerquad_benckmark_sw_math to show the PowerQuad performance improvement." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/powerquad" path="boards/evkmimxrt595/driver_examples/powerquad/benchmark_math">
          <external path="boards/evkmimxrt595/driver_examples/powerquad/benchmark_math" type="xml">
            <files mask="powerquad_benchmark_math_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_powerquad_benchmark_filter_cm33" name="powerquad_benchmark_filter_cm33" brief="This example shows the PowerQuad based CMSIS DSP function performance. It could be compared with the project powerquad_benckmark_sw_filter to show the PowerQuad performance improvement." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/powerquad" path="boards/evkmimxrt595/driver_examples/powerquad/benchmark_filter">
          <external path="boards/evkmimxrt595/driver_examples/powerquad/benchmark_filter" type="xml">
            <files mask="powerquad_benchmark_filter_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_powerquad_benchmark_fft_cm33" name="powerquad_benchmark_fft_cm33" brief="This example shows the official CMSIS DSP function performance. It could be compared with the project powerquad_benckmark_fft to show the PowerQuad performance improvement." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/powerquad" path="boards/evkmimxrt595/driver_examples/powerquad/benchmark_fft">
          <external path="boards/evkmimxrt595/driver_examples/powerquad/benchmark_fft" type="xml">
            <files mask="powerquad_benchmark_fft_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_i2s_dma_transfer_tfa9896_cm33" name="i2s_dma_transfer_tfa9896_cm33" brief="The I2S example project uses one I2S interface to continuously record input sound to a buffer and another I2S interface to playback the buffer to output - digital loopback. It requires NXP Mic/Audio/Oled Shield with TFA9896 codec. It needs to have 1-2 connected on JP3." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/i2s" path="boards/evkmimxrt595/driver_examples/i2s/dma_transfer_tfa9896">
          <external path="boards/evkmimxrt595/driver_examples/i2s/dma_transfer_tfa9896" type="xml">
            <files mask="i2s_dma_transfer_tfa9896_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_casper_cm33" name="casper_cm33" brief="The CASPER Example project is a demonstration program that uses the KSDK software to calculate RSA." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="driver_examples/casper" path="boards/evkmimxrt595/driver_examples/casper">
          <external path="boards/evkmimxrt595/driver_examples/casper" type="xml">
            <files mask="casper_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_shell_cm33" name="shell_cm33" brief="The Shell Demo application demonstrates to control Leds by commands." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkmimxrt595/demo_apps/shell">
          <external path="boards/evkmimxrt595/demo_apps/shell" type="xml">
            <files mask="shell_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_power_manager_test_bm_cm33" name="power_manager_test_bm_cm33" brief="The power manager test application demonstrates the basic usage of power manager framework without RTOS. The demo tests all features of power manager framework, including notification manager, wakeup source manager and so on." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkmimxrt595/demo_apps/power_manager_test/bm">
          <external path="boards/evkmimxrt595/demo_apps/power_manager_test/bm" type="xml">
            <files mask="power_manager_test_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_power_manager_cm33" name="power_manager_cm33" brief="The power_manager application shows the usage of normal power mode control APIs for entering the four kinds of low power mode: Sleep mode, Deep Sleep mode, Deep Power Down mode and Full Deep Power Down mode. When the application runs to each low power mode, the device would cut off the power for specific modules to save power. The device can be also waken up by prepared wakeup source from external event. Tips: This demo is to show how the various power mode can switch to each other. However, in actual low power use case, to save energy and reduce the consumption even more, many things can be done including: - Disable the clock for unnecessary module during low power mode. That means, programmer can disable the clocks before entering the low power mode and re-enable them after exiting the low power mode when necessary. - Disable the function for unnecessary part of a module when other part would keep working in low power mode. At the most time, more powerful function means more power consumption. For example, disable the digital function for the unnecessary pin mux, and so on. - Set the proper pin state (direction and logic level) according to the actual application hardware. Otherwise, the pin circuit would be activied unexpectedly waste some energy. - Other low power consideration based on the actual application hardware. - In order to meet typedef power consumption of DateSheet manual, Please configure MCU under the following conditions. 1. Configure all pins as GPIO with pull-up resistor disabled in the IOCON block. 2. Configure GPIO pins as outputs using the GPIO DIR register. 3. Write 1 to the GPIO CLR register to drive the outputs LOW. 4. All peripherals disabled." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkmimxrt595/demo_apps/power_manager">
          <external path="boards/evkmimxrt595/demo_apps/power_manager" type="xml">
            <files mask="power_manager_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_pmc_temperature_sensor_cm33" name="pmc_temperature_sensor_cm33" brief="The demo shows how to measure the temperature within the PMC module." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkmimxrt595/demo_apps/pmc_temperature_sensor">
          <external path="boards/evkmimxrt595/demo_apps/pmc_temperature_sensor" type="xml">
            <files mask="pmc_temperature_sensor_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_hello_world_virtual_com_cm33" name="hello_world_virtual_com_cm33" brief="Hello World Virtual Com demonstrates the use of virtual com to print the &quot;Hello World&quot; string to the terminal. Different with Hello World demo (a HW UART peripheral is used to transmit data), the demo transmits data based on a serial port simulated by the USB device stack on target board side via USB peripheral. The purpose of this demo is to demonstrate how to use virtual com and provide a simple project for debugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkmimxrt595/demo_apps/hello_world_virtual_com">
          <external path="boards/evkmimxrt595/demo_apps/hello_world_virtual_com" type="xml">
            <files mask="hello_world_virtual_com_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_hello_world_swo_cm33" name="hello_world_swo_cm33" brief="The Hello World SWO demo prints the &quot;SWO: Hello World&quot; string to the SWO viewer. The purpose of this demo is to show how to use the swo, and to provide a simple project for debugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkmimxrt595/demo_apps/hello_world_swo">
          <external path="boards/evkmimxrt595/demo_apps/hello_world_swo" type="xml">
            <files mask="hello_world_swo_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_hello_world_hybrid_cm33" name="hello_world_hybrid_cm33" brief="The HelloWorldHybrid demo prints the &quot;hello world&quot; string to the terminal using the SDK UART drivers and repeat what user input. The purpose of this demo is to show how to boot from the external flash into the internal SRAM and the remaining code that resides in the flash is fetched/executed directly(XIP)." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkmimxrt595/demo_apps/hello_world_hybrid">
          <external path="boards/evkmimxrt595/demo_apps/hello_world_hybrid" type="xml">
            <files mask="hello_world_hybrid_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_hello_world_cm33" name="hello_world_cm33" brief="The HelloWorld demo prints the &quot;Hello World&quot; string to the terminal using the SDK UART drivers and repeat what user input. The purpose of this demo is to show how to use the UART, and to provide a simple project for debugging and further development." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="demo_apps" path="boards/evkmimxrt595/demo_apps/hello_world">
          <external path="boards/evkmimxrt595/demo_apps/hello_world" type="xml">
            <files mask="hello_world_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_usb_pd_source_charger_freertos_om13790host_cm33" name="usb_pd_source_charger_freertos_om13790host_cm33" brief="The application simulate charger product. The demo only works as source and is external powered" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_pd_source_charger_om13790host/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_pd_source_charger_om13790host/freertos" type="xml">
            <files mask="usb_pd_source_charger_freertos_om13790host_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_usb_pd_source_charger_bm_om13790host_cm33" name="usb_pd_source_charger_bm_om13790host_cm33" brief="The application simulate charger product. The demo only works as source and is external powered" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_pd_source_charger_om13790host/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_pd_source_charger_om13790host/bm" type="xml">
            <files mask="usb_pd_source_charger_bm_om13790host_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_usb_pd_sink_battery_freertos_om13790host_cm33" name="usb_pd_sink_battery_freertos_om13790host_cm33" brief="The application simulate battery product, it prints the battery percent continually. The demo works as sink and get power from partner port" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_pd_sink_battery_om13790host/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_pd_sink_battery_om13790host/freertos" type="xml">
            <files mask="usb_pd_sink_battery_freertos_om13790host_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_usb_pd_sink_battery_bm_om13790host_cm33" name="usb_pd_sink_battery_bm_om13790host_cm33" brief="The application simulate battery product , it prints the battery percent continually. The demo works as sink and get power from partner port" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_pd_sink_battery_om13790host/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_pd_sink_battery_om13790host/bm" type="xml">
            <files mask="usb_pd_sink_battery_bm_om13790host_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_usb_pd_freertos_om13790host_cm33" name="usb_pd_freertos_om13790host_cm33" brief="This PD example is a simple demonstration based on the MCUXpresso SDK PD stack. The application use the board keys and debug console to test the PD functions. The demo works as DRP. When connect, the board can be source or sink." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_pd_om13790host/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_pd_om13790host/freertos" type="xml">
            <files mask="usb_pd_freertos_om13790host_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_usb_pd_bm_om13790host_cm33" name="usb_pd_bm_om13790host_cm33" brief="This PD example is a simple demonstration based on the MCUXpresso SDK PD stack. The application use the board keys and debug console to test the PD functions. The demo works as DRP. When connect, the board can be source or sink." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_pd_om13790host/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_pd_om13790host/bm" type="xml">
            <files mask="usb_pd_bm_om13790host_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_usb_pd_charger_battery_freertos_om13790host_cm33" name="usb_pd_charger_battery_freertos_om13790host_cm33" brief="The application simulate battery product, it prints the battery percent continually. The demo works as sink and get power from partner port" toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_pd_charger_battery_om13790host/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_pd_charger_battery_om13790host/freertos" type="xml">
            <files mask="usb_pd_charger_battery_freertos_om13790host_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_usb_pd_charger_battery_bm_om13790host_cm33" name="usb_pd_charger_battery_bm_om13790host_cm33" brief="the application simulate battery product , it prints the battery percent continually. The demo works as DRP. When connect, the board can be source or sink." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_pd_charger_battery_om13790host/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_pd_charger_battery_om13790host/bm" type="xml">
            <files mask="usb_pd_charger_battery_bm_om13790host_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_usb_pd_alt_mode_dp_host_freertos_om13790host_cm33" name="usb_pd_alt_mode_dp_host_freertos_om13790host_cm33" brief="This PD example is a simple demonstration based on the MCUXpresso SDK PD stack. The application use the shield host board (om13790host) to implement the DisplayPort alternate mode.It recognize attached video adapters (like &quot;Type-C to DisplayPort&quot; or &quot;Type-C to HDMI&quot;), and drive the adapter to work." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_pd_alt_mode_dp_host_om13790host/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_pd_alt_mode_dp_host_om13790host/freertos" type="xml">
            <files mask="usb_pd_alt_mode_dp_host_freertos_om13790host_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_usb_pd_alt_mode_dp_host_bm_om13790host_cm33" name="usb_pd_alt_mode_dp_host_bm_om13790host_cm33" brief="This PD example is a simple demonstration based on the MCUXpresso SDK PD stack. The application use the shield host board (om13790host) to implement the DisplayPort alternate mode.It recognize attached video adapters (like &quot;Type-C to DisplayPort&quot; or &quot;Type-C to HDMI&quot;), and drive the adapter to work." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_pd_alt_mode_dp_host_om13790host/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_pd_alt_mode_dp_host_om13790host/bm" type="xml">
            <files mask="usb_pd_alt_mode_dp_host_bm_om13790host_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_host_suspend_resume_hid_mouse_freertos_cm33" name="host_suspend_resume_hid_mouse_freertos_cm33" brief="This is one example support suspend/resume." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_suspend_resume_host_hid_mouse/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_suspend_resume_host_hid_mouse/freertos" type="xml">
            <files mask="host_suspend_resume_hid_mouse_freertos_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_host_suspend_resume_hid_mouse_bm_cm33" name="host_suspend_resume_hid_mouse_bm_cm33" brief="This is one example support suspend/resume." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_suspend_resume_host_hid_mouse/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_suspend_resume_host_hid_mouse/bm" type="xml">
            <files mask="host_suspend_resume_hid_mouse_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_host_lpm_hid_mouse_freertos_cm33" name="host_lpm_hid_mouse_freertos_cm33" brief="This is one example demo support LPM(Link Power Management)." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_lpm_host_hid_mouse/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_lpm_host_hid_mouse/freertos" type="xml">
            <files mask="host_lpm_hid_mouse_freertos_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_host_lpm_hid_mouse_bm_cm33" name="host_lpm_hid_mouse_bm_cm33" brief="This is one example support LPM(Link Power Management)." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_lpm_host_hid_mouse/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_lpm_host_hid_mouse/bm" type="xml">
            <files mask="host_lpm_hid_mouse_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_host_video_camera_freertos_cm33" name="host_video_camera_freertos_cm33" brief="The application supports to get JPEG image from camera function." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_host_video_camera/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_host_video_camera/freertos" type="xml">
            <files mask="host_video_camera_freertos_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_host_printer_plain_text_freertos_cm33" name="host_printer_plain_text_freertos_cm33" brief="The host printer example demonstrates how to get the status of the printer deviceand how to print a certain test string.." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_host_printer_plain_text/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_host_printer_plain_text/freertos" type="xml">
            <files mask="host_printer_plain_text_freertos_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_host_printer_plain_text_bm_cm33" name="host_printer_plain_text_bm_cm33" brief="The host printer example demonstrates how to get the status of the printer deviceand how to print a certain test string." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_host_printer_plain_text/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_host_printer_plain_text/bm" type="xml">
            <files mask="host_printer_plain_text_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_host_phdc_manager_freertos_cm33" name="host_phdc_manager_freertos_cm33" brief="The Host PHDC Manager Example is a simple demonstration program based on the MCUXpresso SDK.The application supports the USB weight scale device. It prints out the body mass and body mass index information when the USB weight scale device is attached." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_host_phdc_manager/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_host_phdc_manager/freertos" type="xml">
            <files mask="host_phdc_manager_freertos_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_host_phdc_manager_bm_cm33" name="host_phdc_manager_bm_cm33" brief="The Host PHDC Manager Example is a simple demonstration program based on the MCUXpresso SDK.The application supports the USB weight scale device. It prints out the body mass and body mass index information when the USB weight scale device is attached." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_host_phdc_manager/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_host_phdc_manager/bm" type="xml">
            <files mask="host_phdc_manager_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_host_msd_fatfs_freertos_cm33" name="host_msd_fatfs_freertos_cm33" brief="This Host FatFs example supports UFI and SCSI U-disk device. The application prints the attached device information when U-disk device is attached.The application executes some FatFs APIs to test the attached device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_host_msd_fatfs/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_host_msd_fatfs/freertos" type="xml">
            <files mask="host_msd_fatfs_freertos_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_host_msd_fatfs_bm_cm33" name="host_msd_fatfs_bm_cm33" brief="This Host FatFs example supports UFI and SCSI U-disk device. The application prints the attached device information when U-disk device is attached.The application executes some FatFs APIs to test the attached device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_host_msd_fatfs/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_host_msd_fatfs/bm" type="xml">
            <files mask="host_msd_fatfs_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_host_msd_command_freertos_cm33" name="host_msd_command_freertos_cm33" brief="This Host MSD example supports the UFI and SCSI U-disk device.  The application prints the attached device information when the U-disk device is attached.The application executes UFI commands to test the attached device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_host_msd_command/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_host_msd_command/freertos" type="xml">
            <files mask="host_msd_command_freertos_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_host_msd_command_bm_cm33" name="host_msd_command_bm_cm33" brief="This Host MSD example supports the UFI and SCSI U-disk device. The application prints the attached device information when the U-disk device is attached.The application executes UFI commands to test the attached device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_host_msd_command/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_host_msd_command/bm" type="xml">
            <files mask="host_msd_command_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_host_hid_mouse_keyboard_freertos_cm33" name="host_hid_mouse_keyboard_freertos_cm33" brief="This example supports the mouse device and the keyboard device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_host_hid_mouse_keyboard/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_host_hid_mouse_keyboard/freertos" type="xml">
            <files mask="host_hid_mouse_keyboard_freertos_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_host_hid_mouse_keyboard_bm_cm33" name="host_hid_mouse_keyboard_bm_cm33" brief="This example supports the mouse device and the keyboard device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_host_hid_mouse_keyboard/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_host_hid_mouse_keyboard/bm" type="xml">
            <files mask="host_hid_mouse_keyboard_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_host_hid_mouse_freertos_cm33" name="host_hid_mouse_freertos_cm33" brief="The application supports the mouse device. It prints the mouse operation when the mouse device is attached." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_host_hid_mouse/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_host_hid_mouse/freertos" type="xml">
            <files mask="host_hid_mouse_freertos_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_host_hid_mouse_bm_cm33" name="host_hid_mouse_bm_cm33" brief="The application supports the mouse device. It prints the mouse operation when the mouse device is attached." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_host_hid_mouse/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_host_hid_mouse/bm" type="xml">
            <files mask="host_hid_mouse_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_host_hid_generic_freertos_cm33" name="host_hid_generic_freertos_cm33" brief="This application implements a simple HID interrupt in-and-out endpoint bi-directional communication.The application sends one test string to the device. The device receives and sends back the string. The application receives the string and prints it." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_host_hid_generic/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_host_hid_generic/freertos" type="xml">
            <files mask="host_hid_generic_freertos_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_host_hid_generic_bm_cm33" name="host_hid_generic_bm_cm33" brief="This application implements a simple HID interrupt in-and-out endpoint bi-directional communication.The application sends one test string to the device. The device receives and sends back the string. The application receives the string and prints it." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_host_hid_generic/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_host_hid_generic/bm" type="xml">
            <files mask="host_hid_generic_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_host_cdc_freertos_cm33" name="host_cdc_freertos_cm33" brief="The host CDC project is a simple demonstration program based on the MCUXpresso SDK. It enumerates a COM port and echoes back the data from the UART ." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_host_cdc/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_host_cdc/freertos" type="xml">
            <files mask="host_cdc_freertos_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_host_cdc_bm_cm33" name="host_cdc_bm_cm33" brief="The host CDC project is a simple demonstration program based on the MCUXpresso SDK. It enumerates a COM port and echoes back the data from the UART." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_host_cdc/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_host_cdc/bm" type="xml">
            <files mask="host_cdc_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_host_audio_speaker_freertos_cm33" name="host_audio_speaker_freertos_cm33" brief="The Host Audio example supports the audio speaker device. @n The application prints the audio speaker information when the USB speaker device is attached." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_host_audio_speaker/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_host_audio_speaker/freertos" type="xml">
            <files mask="host_audio_speaker_freertos_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_host_audio_speaker_bm_cm33" name="host_audio_speaker_bm_cm33" brief="The Host Audio example supports the audio speaker device. @n The application prints the audio speaker information when the USB speaker device is attached." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_host_audio_speaker/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_host_audio_speaker/bm" type="xml">
            <files mask="host_audio_speaker_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_host_audio_recorder_freertos_cm33" name="host_audio_recorder_freertos_cm33" brief="The Host Audio example supports the audio recorder device. @n The application prints the audio recorder information when the USB recorder device is attached." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_host_audio_recorder/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_host_audio_recorder/freertos" type="xml">
            <files mask="host_audio_recorder_freertos_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_suspend_resume_hid_mouse_lite_bm_cm33" name="dev_suspend_resume_hid_mouse_lite_bm_cm33" brief="the application is enumerated as a mouse. When host releases the USB Bus, the device will enter into low power mode. The device can be waked up when resume signal is detected on the bus. Or the device can remote wake-up the host by delivering the resume signal when the remote wake-up is enabled by the host." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_suspend_resume_device_hid_mouse_lite/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_suspend_resume_device_hid_mouse_lite/bm" type="xml">
            <files mask="dev_suspend_resume_hid_mouse_lite_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_suspend_resume_hid_mouse_freertos_cm33" name="dev_suspend_resume_hid_mouse_freertos_cm33" brief="the application is enumerated as a mouse. When host releases the USB Bus, the device will enter into low power mode. The device can be waked up when resume signal is detected on the bus. Or the device can remote wake-up the host by delivering the resume signal when the remote wake-up is enabled by the host." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_suspend_resume_device_hid_mouse/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_suspend_resume_device_hid_mouse/freertos" type="xml">
            <files mask="dev_suspend_resume_hid_mouse_freertos_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_suspend_resume_hid_mouse_bm_cm33" name="dev_suspend_resume_hid_mouse_bm_cm33" brief="the application is enumerated as a mouse. When host releases the USB Bus, the device will enter into low power mode. The device can be waked up when resume signal is detected on the bus. Or the device can remote wake-up the host by delivering the resume signal when the remote wake-up is enabled by the host." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_suspend_resume_device_hid_mouse/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_suspend_resume_device_hid_mouse/bm" type="xml">
            <files mask="dev_suspend_resume_hid_mouse_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_lpm_hid_mouse_lite_bm_cm33" name="dev_lpm_hid_mouse_lite_bm_cm33" brief="This is one example support LPM(Link Power Management)." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_lpm_device_hid_mouse_lite/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_lpm_device_hid_mouse_lite/bm" type="xml">
            <files mask="dev_lpm_hid_mouse_lite_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_lpm_hid_mouse_freertos_cm33" name="dev_lpm_hid_mouse_freertos_cm33" brief="This is one example support LPM(Link Power Management)." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_lpm_device_hid_mouse/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_lpm_device_hid_mouse/freertos" type="xml">
            <files mask="dev_lpm_hid_mouse_freertos_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_lpm_hid_mouse_bm_cm33" name="dev_lpm_hid_mouse_bm_cm33" brief="This is one example support LPM(Link Power Management)." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_lpm_device_hid_mouse/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_lpm_device_hid_mouse/bm" type="xml">
            <files mask="dev_lpm_hid_mouse_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_video_virtual_camera_lite_bm_cm33" name="dev_video_virtual_camera_lite_bm_cm33" brief="The USB video virtual camera application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a camera and users can see the video of the device by using a PC test tool." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_video_virtual_camera_lite/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_video_virtual_camera_lite/bm" type="xml">
            <files mask="dev_video_virtual_camera_lite_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_video_virtual_camera_freertos_cm33" name="dev_video_virtual_camera_freertos_cm33" brief="The USB video virtual camera application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a camera and users can see the video of the device by using a PC test tool." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_video_virtual_camera/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_video_virtual_camera/freertos" type="xml">
            <files mask="dev_video_virtual_camera_freertos_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_video_virtual_camera_bm_cm33" name="dev_video_virtual_camera_bm_cm33" brief="The USB video virtual camera application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a camera and users can see the video of the device by using a PC test tool." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_video_virtual_camera/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_video_virtual_camera/bm" type="xml">
            <files mask="dev_video_virtual_camera_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_printer_virtual_plain_text_lite_bm_cm33" name="dev_printer_virtual_plain_text_lite_bm_cm33" brief="The USB virtual printer application is a simple application to demonstrate a virtual printer functionality.Because there is no printer language parsing, the received raw data is output directly in the debug console.As a result, only plain text is suitable for testing. For other printer language support, such as postscript, implement the corresponding parser." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_printer_virtual_plain_text_lite/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_printer_virtual_plain_text_lite/bm" type="xml">
            <files mask="dev_printer_virtual_plain_text_lite_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_printer_virtual_plain_text_freertos_cm33" name="dev_printer_virtual_plain_text_freertos_cm33" brief="The USB virtual printer application is a simple application to demonstrate a virtual printer functionality.Because there is no printer language parsing, the received raw data is output directly in the debug console.As a result, only plain text is suitable for testing. For other printer language support, such as postscript, implement the corresponding parser." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_printer_virtual_plain_text/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_printer_virtual_plain_text/freertos" type="xml">
            <files mask="dev_printer_virtual_plain_text_freertos_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_printer_virtual_plain_text_bm_cm33" name="dev_printer_virtual_plain_text_bm_cm33" brief="The USB virtual printer application is a simple application to demonstrate a virtual printer functionality.Because there is no printer language parsing, the received raw data is output directly in the debug console.As a result, only plain text is suitable for testing. For other printer language support, such as postscript, implement the corresponding parser." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_printer_virtual_plain_text/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_printer_virtual_plain_text/bm" type="xml">
            <files mask="dev_printer_virtual_plain_text_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_phdc_weighscale_lite_bm_cm33" name="dev_phdc_weighscale_lite_bm_cm33" brief="The USB PHDC WeighScale application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a weight scale device and the HealthLink software is used to interact with thisdevice to simulate the personal weight scale data, such as body mass and body mass index." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_phdc_weighscale_lite/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_phdc_weighscale_lite/bm" type="xml">
            <files mask="dev_phdc_weighscale_lite_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_phdc_weighscale_freertos_cm33" name="dev_phdc_weighscale_freertos_cm33" brief="The USB PHDC WeighScale application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a weight scale device and the HealthLink software is used to interact with thisdevice to simulate the personal weight scale data, such as body mass and body mass index." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_phdc_weighscale/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_phdc_weighscale/freertos" type="xml">
            <files mask="dev_phdc_weighscale_freertos_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_phdc_weighscale_bm_cm33" name="dev_phdc_weighscale_bm_cm33" brief="The USB PHDC WeighScale application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a weight scale device and the HealthLink software is used to interact with thisdevice to simulate the personal weight scale data, such as body mass and body mass index." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_phdc_weighscale/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_phdc_weighscale/bm" type="xml">
            <files mask="dev_phdc_weighscale_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_mtp_lite_bm_cm33" name="dev_mtp_lite_bm_cm33" brief="The USB MTP application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as portable media device. Users can read and write the SD card or MMC by MTP operations." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_mtp_lite/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_mtp_lite/bm" type="xml">
            <files mask="dev_mtp_lite_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_mtp_freertos_cm33" name="dev_mtp_freertos_cm33" brief="The USB MTP application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as portable media device. Users can read and write the SD card or MMC by MTP operations." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_mtp/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_mtp/freertos" type="xml">
            <files mask="dev_mtp_freertos_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_mtp_bm_cm33" name="dev_mtp_bm_cm33" brief="The USB MTP application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as portable media device. Users can read and write the SD card or MMC by MTP operations." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_mtp/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_mtp/bm" type="xml">
            <files mask="dev_mtp_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_msc_ramdisk_lite_bm_cm33" name="dev_msc_ramdisk_lite_bm_cm33" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk and can be read and written to as a normal U-disk ." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_msc_ramdisk_lite/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_msc_ramdisk_lite/bm" type="xml">
            <files mask="dev_msc_ramdisk_lite_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_msc_ramdisk_freertos_cm33" name="dev_msc_ramdisk_freertos_cm33" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk and can be read and written to as a normal U-disk ." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_msc_ramdisk/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_msc_ramdisk/freertos" type="xml">
            <files mask="dev_msc_ramdisk_freertos_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_msc_ramdisk_bm_cm33" name="dev_msc_ramdisk_bm_cm33" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk and can be read and written to as a normal U-disk ." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_msc_ramdisk/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_msc_ramdisk/bm" type="xml">
            <files mask="dev_msc_ramdisk_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_msc_disk_lite_bm_cm33" name="dev_msc_disk_lite_bm_cm33" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk. Users can read and write the SD card or MMC as a standard U-disk." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_msc_disk_lite/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_msc_disk_lite/bm" type="xml">
            <files mask="dev_msc_disk_lite_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_msc_disk_freertos_cm33" name="dev_msc_disk_freertos_cm33" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk. Users can read and write the SD card or MMC as a standard U-disk." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_msc_disk/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_msc_disk/freertos" type="xml">
            <files mask="dev_msc_disk_freertos_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_msc_disk_bm_cm33" name="dev_msc_disk_bm_cm33" brief="The USB MSC RAM disk application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a U-disk. Users can read and write the SD card or MMC as a standard U-disk." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_msc_disk/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_msc_disk/bm" type="xml">
            <files mask="dev_msc_disk_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_hid_mouse_lite_bm_cm33" name="dev_hid_mouse_lite_bm_cm33" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_hid_mouse_lite/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_hid_mouse_lite/bm" type="xml">
            <files mask="dev_hid_mouse_lite_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_hid_mouse_freertos_cm33" name="dev_hid_mouse_freertos_cm33" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_hid_mouse/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_hid_mouse/freertos" type="xml">
            <files mask="dev_hid_mouse_freertos_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_hid_mouse_bm_cm33" name="dev_hid_mouse_bm_cm33" brief="The USB HID mouse application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a mouse. Users can see the mouse arrow moving on the PC screen according in a rectangular fashion." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_hid_mouse/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_hid_mouse/bm" type="xml">
            <files mask="dev_hid_mouse_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_hid_generic_lite_bm_cm33" name="dev_hid_generic_lite_bm_cm33" brief="The USB HID generic application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a HID-compliant device. A PC application can be used to exchange data with the device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_hid_generic_lite/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_hid_generic_lite/bm" type="xml">
            <files mask="dev_hid_generic_lite_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_hid_generic_freertos_cm33" name="dev_hid_generic_freertos_cm33" brief="The USB HID generic application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a HID-compliant device. A PC application can be used to exchange data with the device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_hid_generic/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_hid_generic/freertos" type="xml">
            <files mask="dev_hid_generic_freertos_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_hid_generic_bm_cm33" name="dev_hid_generic_bm_cm33" brief="The USB HID generic application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a HID-compliant device. A PC application can be used to exchange data with the device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_hid_generic/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_hid_generic/bm" type="xml">
            <files mask="dev_hid_generic_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_composite_hid_mouse_hid_keyboard_lite_bm_cm33" name="dev_composite_hid_mouse_hid_keyboard_lite_bm_cm33" brief="The application is a simple demonstration program based on the MCUXpresso SDK. The application is enumerated as HID-compliant mouse and keyboard devices." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_composite_hid_mouse_hid_keyboard_lite/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_composite_hid_mouse_hid_keyboard_lite/bm" type="xml">
            <files mask="dev_composite_hid_mouse_hid_keyboard_lite_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_composite_hid_mouse_hid_keyboard_freertos_cm33" name="dev_composite_hid_mouse_hid_keyboard_freertos_cm33" brief="The application is a simple demonstration program based on the MCUXpresso SDK. The application is enumerated as HID-compliant mouse and keyboard devices." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/freertos" type="xml">
            <files mask="dev_composite_hid_mouse_hid_keyboard_freertos_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_composite_hid_mouse_hid_keyboard_bm_cm33" name="dev_composite_hid_mouse_hid_keyboard_bm_cm33" brief="The application is a simple demonstration program based on the MCUXpresso SDK. The application is enumerated as HID-compliant mouse and keyboard devices." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_composite_hid_mouse_hid_keyboard/bm" type="xml">
            <files mask="dev_composite_hid_mouse_hid_keyboard_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_composite_hid_audio_unified_lite_bm_cm33" name="dev_composite_hid_audio_unified_lite_bm_cm33" brief="The USB Composite HID and Audio Unified application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a playback and recording device. Users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories and play music with the device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_composite_hid_audio_unified_lite/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_composite_hid_audio_unified_lite/bm" type="xml">
            <files mask="dev_composite_hid_audio_unified_lite_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_composite_hid_audio_unified_freertos_cm33" name="dev_composite_hid_audio_unified_freertos_cm33" brief="The USB Composite device application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a recording device. Users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories with an HID mouse device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_composite_hid_audio_unified/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_composite_hid_audio_unified/freertos" type="xml">
            <files mask="dev_composite_hid_audio_unified_freertos_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_composite_hid_audio_unified_bm_cm33" name="dev_composite_hid_audio_unified_bm_cm33" brief="The USB Composite device application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a recording device. Users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories with an HID mouse device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_composite_hid_audio_unified/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_composite_hid_audio_unified/bm" type="xml">
            <files mask="dev_composite_hid_audio_unified_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_composite_cdc_vcom_cdc_vcom_lite_bm_cm33" name="dev_composite_cdc_vcom_cdc_vcom_lite_bm_cm33" brief="The Composite CDC_VCOM_CDC_VCOM project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as two COM port, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom_lite/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom_lite/bm" type="xml">
            <files mask="dev_composite_cdc_vcom_cdc_vcom_lite_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_composite_cdc_vcom_cdc_vcom_freertos_cm33" name="dev_composite_cdc_vcom_cdc_vcom_freertos_cm33" brief="The Composite CDC_VCOM_CDC_VCOM project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as two COM port, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom/freertos" type="xml">
            <files mask="dev_composite_cdc_vcom_cdc_vcom_freertos_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_composite_cdc_vcom_cdc_vcom_bm_cm33" name="dev_composite_cdc_vcom_cdc_vcom_bm_cm33" brief="The Composite CDC_VCOM_CDC_VCOM project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as two COM port, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_composite_cdc_vcom_cdc_vcom/bm" type="xml">
            <files mask="dev_composite_cdc_vcom_cdc_vcom_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_composite_cdc_msc_disk_lite_bm_cm33" name="dev_composite_cdc_msc_disk_lite_bm_cm33" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a U-disk. The COM  port can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The U-disk can be read and write as a standard SD card." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_composite_cdc_msc_disk_lite/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_composite_cdc_msc_disk_lite/bm" type="xml">
            <files mask="dev_composite_cdc_msc_disk_lite_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_composite_cdc_msc_disk_freertos_cm33" name="dev_composite_cdc_msc_disk_freertos_cm33" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_composite_cdc_msc_disk/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_composite_cdc_msc_disk/freertos" type="xml">
            <files mask="dev_composite_cdc_msc_disk_freertos_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_composite_cdc_msc_disk_bm_cm33" name="dev_composite_cdc_msc_disk_bm_cm33" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_composite_cdc_msc_disk/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_composite_cdc_msc_disk/bm" type="xml">
            <files mask="dev_composite_cdc_msc_disk_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_composite_cdc_msc_lite_bm_cm33" name="dev_composite_cdc_msc_lite_bm_cm33" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_composite_cdc_msc_lite/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_composite_cdc_msc_lite/bm" type="xml">
            <files mask="dev_composite_cdc_msc_lite_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_composite_cdc_msc_freertos_cm33" name="dev_composite_cdc_msc_freertos_cm33" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_composite_cdc_msc/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_composite_cdc_msc/freertos" type="xml">
            <files mask="dev_composite_cdc_msc_freertos_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_composite_cdc_msc_bm_cm33" name="dev_composite_cdc_msc_bm_cm33" brief="The Composite CDC_MSC project is a simple demonstration program based on the MCUXpresso SDK.  It is enumerated as a COM port and a RAM disk, which can be opened using terminal tools, such as TeraTerm. The demo echoes back any character it receives. The RAM disk can be formatted.." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_composite_cdc_msc/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_composite_cdc_msc/bm" type="xml">
            <files mask="dev_composite_cdc_msc_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_composite_cdc_audio_unified_lite_bm_cm33" name="dev_composite_cdc_audio_unified_lite_bm_cm33" brief="The USB Composite device application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a recording device. Users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories with an CDC VCOM device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_composite_cdc_audio_unified_lite/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_composite_cdc_audio_unified_lite/bm" type="xml">
            <files mask="dev_composite_cdc_audio_unified_lite_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_composite_cdc_audio_unified_freertos_cm33" name="dev_composite_cdc_audio_unified_freertos_cm33" brief="The USB Composite device application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a recording device. Users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories with an CDC VCOM device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_composite_cdc_audio_unified/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_composite_cdc_audio_unified/freertos" type="xml">
            <files mask="dev_composite_cdc_audio_unified_freertos_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_composite_cdc_audio_unified_bm_cm33" name="dev_composite_cdc_audio_unified_bm_cm33" brief="The USB Composite device application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a recording device. Users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories with an CDC VCOM device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_composite_cdc_audio_unified/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_composite_cdc_audio_unified/bm" type="xml">
            <files mask="dev_composite_cdc_audio_unified_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_cdc_vcom_lite_bm_cm33" name="dev_cdc_vcom_lite_bm_cm33" brief="The Virtual COM project enumerated as a COM port, which the users can open using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_cdc_vcom_lite/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_cdc_vcom_lite/bm" type="xml">
            <files mask="dev_cdc_vcom_lite_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_cdc_vcom_freertos_cm33" name="dev_cdc_vcom_freertos_cm33" brief="The Virtual COM project is  enumerated as a COM port, which the users can open using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_cdc_vcom/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_cdc_vcom/freertos" type="xml">
            <files mask="dev_cdc_vcom_freertos_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_cdc_vcom_bm_cm33" name="dev_cdc_vcom_bm_cm33" brief="The Virtual COM project is enumerated as a COM port, which the users can open using terminal tools, such as TeraTerm. The demo echoes back any character it receives." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_cdc_vcom/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_cdc_vcom/bm" type="xml">
            <files mask="dev_cdc_vcom_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_audio_speaker_lite_bm_cm33" name="dev_audio_speaker_lite_bm_cm33" brief="The USB Audio Speaker application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a playback device and users can play music using the device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_audio_speaker_lite/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_audio_speaker_lite/bm" type="xml">
            <files mask="dev_audio_speaker_lite_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_audio_speaker_freertos_cm33" name="dev_audio_speaker_freertos_cm33" brief="The USB Audio Speaker application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a playback device and users can play music using the device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_audio_speaker/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_audio_speaker/freertos" type="xml">
            <files mask="dev_audio_speaker_freertos_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_audio_speaker_bm_cm33" name="dev_audio_speaker_bm_cm33" brief="The USB Audio Speaker application is a simple demonstration program based on the MCUXpresso SDK. It is enumerated as a playback device and users can play music using the device." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_audio_speaker/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_audio_speaker/bm" type="xml">
            <files mask="dev_audio_speaker_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_audio_generator_lite_bm_cm33" name="dev_audio_generator_lite_bm_cm33" brief="The USB Audio Generator application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a recording device and users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_audio_generator_lite/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_audio_generator_lite/bm" type="xml">
            <files mask="dev_audio_generator_lite_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_audio_generator_freertos_cm33" name="dev_audio_generator_freertos_cm33" brief="The USB Audio Generator application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a recording device and users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_audio_generator/freertos">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_audio_generator/freertos" type="xml">
            <files mask="dev_audio_generator_freertos_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dev_audio_generator_bm_cm33" name="dev_audio_generator_bm_cm33" brief="The USB Audio Generator application is a simple demonstration program based on the MCUXpresso SDK.It is enumerated as a recording device and users can record the sound from this device via the &quot;Sound Recorder&quot; in the Windows Accessories." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="usb_examples" path="boards/evkmimxrt595/usb_examples/usb_device_audio_generator/bm">
          <external path="boards/evkmimxrt595/usb_examples/usb_device_audio_generator/bm" type="xml">
            <files mask="dev_audio_generator_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_fmstr_example_usb_cdc_cm33" name="fmstr_example_usb_cdc_cm33" brief="FreeMASTER example using virtual serial communication at USB port and CDC VCOM class. This example application demonstrates use of FreeMASTER tool to visualize internal variables and to control the application flow by modifying variables. The application also shows use of advanced FreeMASTER features like TSA tables and Pipes." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="FreeMASTER_examples" path="boards/evkmimxrt595/freemaster_examples/fmstr_usb_cdc">
          <external path="boards/evkmimxrt595/freemaster_examples/fmstr_usb_cdc" type="xml">
            <files mask="fmstr_example_usb_cdc_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_fmstr_example_uart_cm33" name="fmstr_example_uart_cm33" brief="FreeMASTER example using Serial-UART communication with the target microcontroller. This example application demonstrates use of FreeMASTER tool to visualize internal variables and to control the application flow by modifying variables. The application also shows use of advanced FreeMASTER features like TSA tables and Pipes." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="FreeMASTER_examples" path="boards/evkmimxrt595/freemaster_examples/fmstr_uart">
          <external path="boards/evkmimxrt595/freemaster_examples/fmstr_uart" type="xml">
            <files mask="fmstr_example_uart_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_fmstr_example_pdbdm_cm33" name="fmstr_example_pdbdm_cm33" brief="FreeMASTER example using a special packet-driven protocol on top of JTAG or BDM direct memory access. This example application demonstrates use of FreeMASTER tool to visualize internal variables and to control the application flow by modifying variables. The application also shows use of advanced FreeMASTER features like TSA tables and Pipes." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="FreeMASTER_examples" path="boards/evkmimxrt595/freemaster_examples/fmstr_pdbdm">
          <external path="boards/evkmimxrt595/freemaster_examples/fmstr_pdbdm" type="xml">
            <files mask="fmstr_example_pdbdm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_aws_shadow_wifi_nxp" name="aws_shadow_wifi_nxp" brief="Demo for showing how to use the Device Shadow library's API." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="aws_examples" path="boards/evkmimxrt595/aws_examples/shadow_wifi_nxp">
          <external path="boards/evkmimxrt595/aws_examples/shadow_wifi_nxp" type="xml">
            <files mask="aws_shadow_wifi_nxp_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dsp_xaf_usb_demo_cm33" name="dsp_xaf_usb_demo_cm33" brief="The dsp_xaf_usb_demo demo application demonstrates starting DSP core with DSP image. The purpose of this example is to show how to transfer data from a USB host via M33 to a DSP and from a DSP via M33 to a USB host." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="dsp_examples" path="boards/evkmimxrt595/dsp_examples/xaf_usb_demo/cm33">
          <external path="boards/evkmimxrt595/dsp_examples/xaf_usb_demo/cm33" type="xml">
            <files mask="dsp_xaf_usb_demo_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dsp_xaf_record_cm33" name="dsp_xaf_record_cm33" brief="The dsp_xaf_record demo application demonstrates starting DSP core with DSP image." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="dsp_examples" path="boards/evkmimxrt595/dsp_examples/xaf_record/cm33">
          <external path="boards/evkmimxrt595/dsp_examples/xaf_record/cm33" type="xml">
            <files mask="dsp_xaf_record_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dsp_xaf_playback_cm33" name="dsp_xaf_playback_cm33" brief="The dsp_xaf_playback demo application demonstrates starting DSP core with DSP image." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="dsp_examples" path="boards/evkmimxrt595/dsp_examples/xaf_playback/cm33">
          <external path="boards/evkmimxrt595/dsp_examples/xaf_playback/cm33" type="xml">
            <files mask="dsp_xaf_playback_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dsp_sema42_cm33" name="dsp_sema42_cm33" brief="The dsp_sema42 demo application demonstrates starting DSP core with DSP image." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="dsp_examples" path="boards/evkmimxrt595/dsp_examples/sema42/cm33">
          <external path="boards/evkmimxrt595/dsp_examples/sema42/cm33" type="xml">
            <files mask="dsp_sema42_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dsp_naturedsp_cm33" name="dsp_naturedsp_cm33" brief="The dsp_naturedsp demo application demonstrates starting DSP core with DSP image." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="dsp_examples" path="boards/evkmimxrt595/dsp_examples/naturedsp/cm33">
          <external path="boards/evkmimxrt595/dsp_examples/naturedsp/cm33" type="xml">
            <files mask="dsp_naturedsp_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dsp_mu_polling_cm33" name="dsp_mu_polling_cm33" brief="The dsp_mu_polling demo application demonstrates starting DSP core with DSP image." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="dsp_examples" path="boards/evkmimxrt595/dsp_examples/mu_polling/cm33">
          <external path="boards/evkmimxrt595/dsp_examples/mu_polling/cm33" type="xml">
            <files mask="dsp_mu_polling_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dsp_mu_interrupt_cm33" name="dsp_mu_interrupt_cm33" brief="The dsp_mu_interrupt demo application demonstrates starting DSP core with DSP image." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="dsp_examples" path="boards/evkmimxrt595/dsp_examples/mu_interrupt/cm33">
          <external path="boards/evkmimxrt595/dsp_examples/mu_interrupt/cm33" type="xml">
            <files mask="dsp_mu_interrupt_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dsp_hello_world_usart_cm33" name="dsp_hello_world_usart_cm33" brief="The dsp_hello_world_usart demo application demonstrates starting DSP core with DSP image." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="dsp_examples" path="boards/evkmimxrt595/dsp_examples/hello_world_usart/cm33">
          <external path="boards/evkmimxrt595/dsp_examples/hello_world_usart/cm33" type="xml">
            <files mask="dsp_hello_world_usart_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dsp_audio_demo_bm_cm33" name="dsp_audio_demo_bm_cm33" brief="The dsp_audio_demo_bm demo application demonstrates starting DSP core with DSP image." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="dsp_examples" path="boards/evkmimxrt595/dsp_examples/audio_demo_bm/cm33">
          <external path="boards/evkmimxrt595/dsp_examples/audio_demo_bm/cm33" type="xml">
            <files mask="dsp_audio_demo_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_lvgl_demo_benchmark_cm33" name="lvgl_demo_benchmark_cm33" brief="A demo application runs different functions for benchmark test." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lvgl_examples" path="boards/evkmimxrt595/lvgl_examples/lvgl_demo_benchmark">
          <external path="boards/evkmimxrt595/lvgl_examples/lvgl_demo_benchmark" type="xml">
            <files mask="lvgl_demo_benchmark_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_lvgl_demo_benchmark_bm_cm33" name="lvgl_demo_benchmark_bm_cm33" brief="A demo application runs different functions for benchmark test." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lvgl_examples" path="boards/evkmimxrt595/lvgl_examples/lvgl_demo_benchmark_bm">
          <external path="boards/evkmimxrt595/lvgl_examples/lvgl_demo_benchmark_bm" type="xml">
            <files mask="lvgl_demo_benchmark_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_lvgl_demo_widgets_cm33" name="lvgl_demo_widgets_cm33" brief="A demo application to show lvgl widgets." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lvgl_examples" path="boards/evkmimxrt595/lvgl_examples/lvgl_demo_widgets">
          <external path="boards/evkmimxrt595/lvgl_examples/lvgl_demo_widgets" type="xml">
            <files mask="lvgl_demo_widgets_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_lvgl_demo_widgets_bm_cm33" name="lvgl_demo_widgets_bm_cm33" brief="A demo application to show lvgl widgets." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lvgl_examples" path="boards/evkmimxrt595/lvgl_examples/lvgl_demo_widgets_bm">
          <external path="boards/evkmimxrt595/lvgl_examples/lvgl_demo_widgets_bm" type="xml">
            <files mask="lvgl_demo_widgets_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_lvgl_guider_cm33" name="lvgl_guider_cm33" brief="LittleVGL project used with GUI Guider." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lvgl_examples" path="boards/evkmimxrt595/lvgl_examples/lvgl_guider">
          <external path="boards/evkmimxrt595/lvgl_examples/lvgl_guider" type="xml">
            <files mask="lvgl_guider_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_lvgl_guider_bm_cm33" name="lvgl_guider_bm_cm33" brief="LVGL project used with GUI Guider on baremetal." toolchain="armgcc iar mcuxpresso mdk" compiler="compiler_armclang compiler_gcc compiler_iar" category="lvgl_examples" path="boards/evkmimxrt595/lvgl_examples/lvgl_guider_bm">
          <external path="boards/evkmimxrt595/lvgl_examples/lvgl_guider_bm" type="xml">
            <files mask="lvgl_guider_bm_cm33_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dsp_xaf_usb_demo_dsp" name="dsp_xaf_usb_demo_dsp" brief="The dsp_xaf_usb_demo demo application demonstrates starting DSP core with DSP image." category="dsp_examples" path="boards/evkmimxrt595/dsp_examples/xaf_usb_demo/fusionf1">
          <external path="boards/evkmimxrt595/dsp_examples/xaf_usb_demo/fusionf1" type="xml">
            <files mask="dsp_xaf_usb_demo_dsp_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dsp_xaf_record_dsp" name="dsp_xaf_record_dsp" brief="The dsp_xaf_record demo application demonstrates starting DSP core with DSP image." category="dsp_examples" path="boards/evkmimxrt595/dsp_examples/xaf_record/fusionf1">
          <external path="boards/evkmimxrt595/dsp_examples/xaf_record/fusionf1" type="xml">
            <files mask="dsp_xaf_record_dsp_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dsp_xaf_playback_dsp" name="dsp_xaf_playback_dsp" brief="The dsp_xaf_playback demo application demonstrates starting DSP core with DSP image." category="dsp_examples" path="boards/evkmimxrt595/dsp_examples/xaf_playback/fusionf1">
          <external path="boards/evkmimxrt595/dsp_examples/xaf_playback/fusionf1" type="xml">
            <files mask="dsp_xaf_playback_dsp_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dsp_naturedsp_dsp" name="dsp_naturedsp_dsp" brief="The dsp_naturedsp demo application demonstrates starting DSP core with DSP image." category="dsp_examples" path="boards/evkmimxrt595/dsp_examples/naturedsp/fusionf1">
          <external path="boards/evkmimxrt595/dsp_examples/naturedsp/fusionf1" type="xml">
            <files mask="dsp_naturedsp_dsp_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dsp_sema42_dsp" name="dsp_sema42_dsp" brief="The dsp_sema42 demo application demonstrates starting DSP core with DSP image." category="dsp_examples" path="boards/evkmimxrt595/dsp_examples/sema42/fusionf1">
          <external path="boards/evkmimxrt595/dsp_examples/sema42/fusionf1" type="xml">
            <files mask="dsp_sema42_dsp_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dsp_mu_polling_dsp" name="dsp_mu_polling_dsp" brief="The dsp_mu_polling demo application demonstrates starting DSP core with DSP image." category="dsp_examples" path="boards/evkmimxrt595/dsp_examples/mu_polling/fusionf1">
          <external path="boards/evkmimxrt595/dsp_examples/mu_polling/fusionf1" type="xml">
            <files mask="dsp_mu_polling_dsp_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dsp_mu_interrupt_dsp" name="dsp_mu_interrupt_dsp" brief="The dsp_mu_interrupt demo application demonstrates starting DSP core with DSP image." category="dsp_examples" path="boards/evkmimxrt595/dsp_examples/mu_interrupt/fusionf1">
          <external path="boards/evkmimxrt595/dsp_examples/mu_interrupt/fusionf1" type="xml">
            <files mask="dsp_mu_interrupt_dsp_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dsp_hello_world_usart_dsp" name="dsp_hello_world_usart_dsp" brief="The dsp_hello_world_usart demo application demonstrates starting DSP core with DSP image." category="dsp_examples" path="boards/evkmimxrt595/dsp_examples/hello_world_usart/fusionf1">
          <external path="boards/evkmimxrt595/dsp_examples/hello_world_usart/fusionf1" type="xml">
            <files mask="dsp_hello_world_usart_dsp_v3_15.xml"/>
          </external>
        </example>
        <example id="evkmimxrt595_dsp_audio_demo_bm_dsp" name="dsp_audio_demo_bm_dsp" brief="The dsp_audio_demo_bm demo application demonstrates starting DSP core with DSP image." category="dsp_examples" path="boards/evkmimxrt595/dsp_examples/audio_demo_bm/fusionf1">
          <external path="boards/evkmimxrt595/dsp_examples/audio_demo_bm/fusionf1" type="xml">
            <files mask="dsp_audio_demo_bm_dsp_v3_15.xml"/>
          </external>
        </example>
      </examples>
      <debug_configurations>
        <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
          <drivers>
            <driver id_refs="QSPI_FLASH_evkmimxrt595">
              <driverBinary path="devices/MIMXRT595S/mcuxpresso" type="binary">
                <files mask="MIMXRT500_SFDP_MXIC_OSPI.cfx"/>
              </driverBinary>
            </driver>
          </drivers>
        </debug_configuration>
      </debug_configurations>
    </board>
  </boards>
  <devices>
    <device id="MIMXRT555S" name="MIMXRT555S" version="1.0.0" full_name="MIMXRT555S" family="MIMXRT500" platform="i.MX">
      <description>MIMXRT555S</description>
      <metadataSet>
        <metadata key="compatible_device.segger" value="MIMXRT555S"/>
        <metadata key="compatible_device.pemicro" value="MIMXRT555S"/>
        <metadata key="vendor" value="NXP"/>
      </metadataSet>
      <defines>
        <define name="CPU_$|package|" value=""/>
        <define name="CPU_$|package|_$|core|" value=""/>
      </defines>
      <core id="cm33_MIMXRT555S" name="cm33" fpu="true" type="cm33" dsp="true" sau="true" mpu="true" tz="true"/>
      <memory>
        <memoryBlock id="SRAM_MIMXRT555S" name="SRAM" addr="00080000" size="00480000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM_ROM_MIMXRT555S" name="SRAM_ROM" addr="00000000" size="00020000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM_SHARED_MIMXRT555S" name="SRAM_SHARED" addr="00020000" size="00060000" type="RAM" access="RW"/>
        <memoryBlock id="USB_RAM_MIMXRT555S" name="USB_RAM" addr="40140000" size="00004000" type="RAM" access="RW"/>
      </memory>
      <total_memory flash_size_kb="0" ram_size_kb="5120"/>
      <package id="MIMXRT555SFAWC" name="MIMXRT555SFAWC"/>
      <package id="MIMXRT555SFFOC" name="MIMXRT555SFFOC"/>
      <evaluation_boards>
        <evaluation_board name="evkmimxrt595"/>
      </evaluation_boards>
      <debug_configurations>
        <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
          <params>
            <params id="internal.wiretype.release.MIMXRT555S" name="internal.wiretype" value="SWD"/>
            <params id="internal.has_swo.release.MIMXRT555S" name="internal.has_swo" value="true"/>
            <params id="misc.options.MIMXRT555S" name="misc.options" value="--bootromstall 0x50002034"/>
            <params id="internal.connect.script.debug.mcuxpresso.MIMXRT555S" name="internal.connect.script" value="RT500_connect.scp"/>
          </params>
        </debug_configuration>
      </debug_configurations>
      <linkerSettings nature="c_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
      <linkerSettings nature="cpp_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
    </device>
    <device id="MIMXRT595S" name="MIMXRT595S" version="1.0.0" full_name="MIMXRT595S" family="MIMXRT500" platform="i.MX">
      <description>MIMXRT595S: i.MX® MIMXRT595S 200MHz, 5M SRAM Microcontrollers (MCUs) based on ARM® Cortex®-M33 Core</description>
      <metadataSet>
        <metadata key="compatible_device.segger" value="MIMXRT595S_M33"/>
        <metadata key="compatible_device.pemicro" value="MIMXRT595S"/>
        <metadata key="vendor.device.multicore" value="true"/>
        <metadata key="vendor" value="NXP"/>
      </metadataSet>
      <defines>
        <define name="CPU_$|package|" value=""/>
        <define name="CPU_$|package|_$|core|" value=""/>
      </defines>
      <core id="cm33_MIMXRT595S" name="cm33" fpu="true" type="cm33" boot_role="primary" dsp="true" sau="true" mpu="true" tz="true"/>
      <memory>
        <memoryBlock id="SRAM_MIMXRT595S" name="SRAM" addr="00280000" size="00280000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM_ROM_MIMXRT595S" name="SRAM_ROM" addr="00000000" size="00020000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM_SHARED_MIMXRT595S" name="SRAM_SHARED" addr="00020000" size="00060000" type="RAM" access="RW"/>
        <memoryBlock id="SRAM_DSP_MIMXRT595S" name="SRAM_DSP" addr="00080000" size="00200000" type="RAM" access="RW"/>
        <memoryBlock id="USB_RAM_MIMXRT595S" name="USB_RAM" addr="40140000" size="00004000" type="RAM" access="RW"/>
      </memory>
      <total_memory flash_size_kb="0" ram_size_kb="5120"/>
      <package id="MIMXRT595SFAWC" name="MIMXRT595SFAWC"/>
      <package id="MIMXRT595SFFOC" name="MIMXRT595SFFOC"/>
      <evaluation_boards>
        <evaluation_board name="evkmimxrt595"/>
      </evaluation_boards>
      <debug_configurations>
        <debug_configuration id_refs="com.crt.advproject.config.exe.debug com.crt.advproject.config.exe.release">
          <params>
            <params id="internal.wiretype.release.MIMXRT595S" name="internal.wiretype" value="SWD"/>
            <params id="internal.has_swo.release.MIMXRT595S" name="internal.has_swo" value="true"/>
            <params id="misc.options.MIMXRT595S" name="misc.options" value="--bootromstall 0x50002034"/>
            <params id="internal.connect.script.debug.mcuxpresso.MIMXRT595S" name="internal.connect.script" value="RT500_connect.scp"/>
          </params>
        </debug_configuration>
      </debug_configurations>
      <linkerSettings nature="c_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
      <linkerSettings nature="cpp_nature">
        <linker property="start_symbol" value="ResetISR"/>
        <linker property="text_align" value="4"/>
        <linker property="data_align" value="4"/>
        <linker property="bss_align" value="4"/>
        <linker property="mtb_supported" value="false"/>
      </linkerSettings>
    </device>
  </devices>
  <components>
    <component id="platform.devices.MIMXRT555S_debugger.MIMXRT555S" name="Device MIMXRT555S_debugger" brief="Device MIMXRT555S_debugger" version="1.0.0" full_name="Device MIMXRT555S_debugger" category="Device/SDK Utilities" user_visible="true" type="debugger" package_base_path="devices/MIMXRT555S" project_base_path="svd">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="./" type="xml">
        <files mask="MIMXRT555S.xml"/>
      </source>
    </component>
    <component id="platform.utilities.misc_utilities.MIMXRT555S" name="misc_utilities" brief="Utilities which is needed for particular toolchain like the SBRK function required to address limitation between HEAP and STACK in GCC toolchain library." version="1.1.1" full_name="Utilities miscellaneous" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT555S/utilities" project_base_path="utilities">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="src">
        <files mask="fsl_syscall_stub.c"/>
        <files mask="fsl_sbrk.c"/>
      </source>
      <source toolchain="armgcc mcuxpresso mdk" relative_path="./" type="asm_include" device_cores="cm33_MIMXRT555S">
        <files mask="fsl_memcpy.S"/>
      </source>
    </component>
    <component id="utility.incbin.MIMXRT555S" name="incbin" brief="Used to include slave core binary into master core binary." version="1.0.0" full_name="utility incbin" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT555S/utilities/incbin" project_base_path="utilities">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source toolchain="armgcc mdk" relative_path="./" type="asm_include">
        <files mask="fsl_incbin.S"/>
      </source>
    </component>
    <component id="utility.debug_console_template_config.MIMXRT555S" name="debug_console_template_config" brief="Utility debug_console Template Config" version="1.0.0" full_name="Utility debug_console Template Config" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT555S/utilities" project_base_path="utilities">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="debug_console/config" config="true" type="c_include">
        <files mask="fsl_debug_console_conf.h"/>
      </source>
      <include_paths>
        <include_path relative_path="debug_console/config" type="c_include"/>
        <include_path relative_path="debug_console/config" type="asm_include"/>
      </include_paths>
    </component>
    <component id="tools.MIMXRT555S" name="cmake_toolchain" brief="Cmake_toolchain" version="1.0.0" full_name="Cmake_toolchain" category="Device/SDK Utilities" user_visible="true" type="other" package_base_path="tools/cmake_toolchain_files" project_base_path="cmake_toolchain_files">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="./" type="script">
        <files mask="armgcc.cmake"/>
        <files mask="xcc.cmake"/>
        <files mask="xclang.cmake"/>
        <files mask="armgcc_force_cpp.cmake"/>
        <files mask="mcux_config.cmake"/>
        <files mask="riscvllvm.cmake"/>
      </source>
    </component>
    <component id="platform.drivers.clock.MIMXRT555S" name="clock" brief="Clock Driver" version="2.7.1" full_name="Clock Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_clock.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_clock.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.i2s_bridge.MIMXRT555S" name="i2s_bridge" brief="I2S Bridge Driver" version="2.0.0" full_name="I2S Bridging and Signal Sharing Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_i2s_bridge.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i2s_bridge.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.inputmux_connections.MIMXRT555S" name="inputmux_connections" brief="Inputmux_connections Driver" version="2.0.0" full_name="Inputmux_connections Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_inputmux_connections.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.power.MIMXRT555S" name="power" brief="Power driver" version="2.6.1" full_name="Driver power" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_power.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_power.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.reset.MIMXRT555S" name="reset" brief="Reset Driver" version="2.1.0" full_name="Reset Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_reset.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_reset.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.soc_mipi_dsi.MIMXRT555S" name="soc_mipi_dsi" brief="SOC MIPI DSI Driver" version="2.0.0" full_name="SOC MIPI DSI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_soc_mipi_dsi.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="device.RTE.MIMXRT555S" name="RTE_Device" brief="Rte_device" version="1.0.0" full_name="Rte_device" category="Device/SDK Project Template" user_visible="true" type="project_template" package_base_path="devices/MIMXRT555S/template" project_base_path="board">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="./" config="true" type="c_include">
        <files mask="RTE_Device.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_DSP_Include.MIMXRT555S" name="CMSIS_DSP_Library_Header" brief="CMSIS-DSP Library Header" version="1.16.2" full_name="CMSIS DSP Library Header" category="CMSIS/DSP" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/DSP" project_base_path="CMSIS/DSP">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_common_tables_f16.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_const_structs_f16.h"/>
        <files mask="arm_helium_utils.h"/>
        <files mask="arm_math.h"/>
        <files mask="arm_math_f16.h"/>
        <files mask="arm_math_memory.h"/>
        <files mask="arm_math_types.h"/>
        <files mask="arm_math_types_f16.h"/>
        <files mask="arm_mve_tables.h"/>
        <files mask="arm_mve_tables_f16.h"/>
        <files mask="arm_vec_math.h"/>
        <files mask="arm_vec_math_f16.h"/>
      </source>
      <source relative_path="Include/dsp" type="c_include">
        <files mask="basic_math_functions.h"/>
        <files mask="basic_math_functions_f16.h"/>
        <files mask="bayes_functions.h"/>
        <files mask="bayes_functions_f16.h"/>
        <files mask="complex_math_functions.h"/>
        <files mask="complex_math_functions_f16.h"/>
        <files mask="controller_functions.h"/>
        <files mask="controller_functions_f16.h"/>
        <files mask="debug.h"/>
        <files mask="distance_functions.h"/>
        <files mask="distance_functions_f16.h"/>
        <files mask="fast_math_functions.h"/>
        <files mask="fast_math_functions_f16.h"/>
        <files mask="filtering_functions.h"/>
        <files mask="filtering_functions_f16.h"/>
        <files mask="interpolation_functions.h"/>
        <files mask="interpolation_functions_f16.h"/>
        <files mask="matrix_functions.h"/>
        <files mask="matrix_functions_f16.h"/>
        <files mask="matrix_utils.h"/>
        <files mask="none.h"/>
        <files mask="quaternion_math_functions.h"/>
        <files mask="statistics_functions.h"/>
        <files mask="statistics_functions_f16.h"/>
        <files mask="support_functions.h"/>
        <files mask="support_functions_f16.h"/>
        <files mask="svm_defines.h"/>
        <files mask="svm_functions.h"/>
        <files mask="svm_functions_f16.h"/>
        <files mask="transform_functions.h"/>
        <files mask="transform_functions_f16.h"/>
        <files mask="utils.h"/>
        <files mask="window_functions.h"/>
      </source>
      <source relative_path="PrivateInclude" type="c_include">
        <files mask="arm_sorting.h"/>
        <files mask="arm_vec_fft.h"/>
        <files mask="arm_vec_filtering.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_DSP_Include.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="PrivateInclude" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
        <include_path relative_path="PrivateInclude" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_DSP_Source.MIMXRT555S" name="CMSIS_DSP_Library_Source" brief="CMSIS-DSP Library" version="1.16.2" full_name="CMSIS DSP Library Source" category="CMSIS/DSP" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/DSP" project_base_path="CMSIS/DSP">
      <defines>
        <define name="DISABLEFLOAT16" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_common_tables_f16.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_const_structs_f16.h"/>
        <files mask="arm_helium_utils.h"/>
        <files mask="arm_math.h"/>
        <files mask="arm_math_f16.h"/>
        <files mask="arm_math_memory.h"/>
        <files mask="arm_math_types.h"/>
        <files mask="arm_math_types_f16.h"/>
        <files mask="arm_mve_tables.h"/>
        <files mask="arm_mve_tables_f16.h"/>
        <files mask="arm_vec_math.h"/>
        <files mask="arm_vec_math_f16.h"/>
      </source>
      <source relative_path="Include/dsp" type="c_include">
        <files mask="basic_math_functions.h"/>
        <files mask="basic_math_functions_f16.h"/>
        <files mask="bayes_functions.h"/>
        <files mask="bayes_functions_f16.h"/>
        <files mask="complex_math_functions.h"/>
        <files mask="complex_math_functions_f16.h"/>
        <files mask="controller_functions.h"/>
        <files mask="controller_functions_f16.h"/>
        <files mask="debug.h"/>
        <files mask="distance_functions.h"/>
        <files mask="distance_functions_f16.h"/>
        <files mask="fast_math_functions.h"/>
        <files mask="fast_math_functions_f16.h"/>
        <files mask="filtering_functions.h"/>
        <files mask="filtering_functions_f16.h"/>
        <files mask="interpolation_functions.h"/>
        <files mask="interpolation_functions_f16.h"/>
        <files mask="matrix_functions.h"/>
        <files mask="matrix_functions_f16.h"/>
        <files mask="matrix_utils.h"/>
        <files mask="none.h"/>
        <files mask="quaternion_math_functions.h"/>
        <files mask="statistics_functions.h"/>
        <files mask="statistics_functions_f16.h"/>
        <files mask="support_functions.h"/>
        <files mask="support_functions_f16.h"/>
        <files mask="svm_defines.h"/>
        <files mask="svm_functions.h"/>
        <files mask="svm_functions_f16.h"/>
        <files mask="transform_functions.h"/>
        <files mask="transform_functions_f16.h"/>
        <files mask="utils.h"/>
        <files mask="window_functions.h"/>
      </source>
      <source relative_path="PrivateInclude" type="c_include">
        <files mask="arm_sorting.h"/>
        <files mask="arm_vec_fft.h"/>
        <files mask="arm_vec_filtering.h"/>
      </source>
      <source relative_path="Source/BasicMathFunctions" type="src">
        <files mask="BasicMathFunctions.c"/>
        <files mask="BasicMathFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/BasicMathFunctions" type="src">
        <files mask="arm_abs_f32.c"/>
        <files mask="arm_abs_f64.c"/>
        <files mask="arm_abs_q15.c"/>
        <files mask="arm_abs_q31.c"/>
        <files mask="arm_abs_q7.c"/>
        <files mask="arm_add_f32.c"/>
        <files mask="arm_add_f64.c"/>
        <files mask="arm_add_q15.c"/>
        <files mask="arm_add_q31.c"/>
        <files mask="arm_add_q7.c"/>
        <files mask="arm_and_u16.c"/>
        <files mask="arm_and_u32.c"/>
        <files mask="arm_and_u8.c"/>
        <files mask="arm_clip_f32.c"/>
        <files mask="arm_clip_q15.c"/>
        <files mask="arm_clip_q31.c"/>
        <files mask="arm_clip_q7.c"/>
        <files mask="arm_dot_prod_f32.c"/>
        <files mask="arm_dot_prod_f64.c"/>
        <files mask="arm_dot_prod_q15.c"/>
        <files mask="arm_dot_prod_q31.c"/>
        <files mask="arm_dot_prod_q7.c"/>
        <files mask="arm_mult_f32.c"/>
        <files mask="arm_mult_f64.c"/>
        <files mask="arm_mult_q15.c"/>
        <files mask="arm_mult_q31.c"/>
        <files mask="arm_mult_q7.c"/>
        <files mask="arm_negate_f32.c"/>
        <files mask="arm_negate_f64.c"/>
        <files mask="arm_negate_q15.c"/>
        <files mask="arm_negate_q31.c"/>
        <files mask="arm_negate_q7.c"/>
        <files mask="arm_not_u16.c"/>
        <files mask="arm_not_u32.c"/>
        <files mask="arm_not_u8.c"/>
        <files mask="arm_offset_f32.c"/>
        <files mask="arm_offset_f64.c"/>
        <files mask="arm_offset_q15.c"/>
        <files mask="arm_offset_q31.c"/>
        <files mask="arm_offset_q7.c"/>
        <files mask="arm_or_u16.c"/>
        <files mask="arm_or_u32.c"/>
        <files mask="arm_or_u8.c"/>
        <files mask="arm_scale_f32.c"/>
        <files mask="arm_scale_f64.c"/>
        <files mask="arm_scale_q15.c"/>
        <files mask="arm_scale_q31.c"/>
        <files mask="arm_scale_q7.c"/>
        <files mask="arm_shift_q15.c"/>
        <files mask="arm_shift_q31.c"/>
        <files mask="arm_shift_q7.c"/>
        <files mask="arm_sub_f32.c"/>
        <files mask="arm_sub_f64.c"/>
        <files mask="arm_sub_q15.c"/>
        <files mask="arm_sub_q31.c"/>
        <files mask="arm_sub_q7.c"/>
        <files mask="arm_xor_u16.c"/>
        <files mask="arm_xor_u32.c"/>
        <files mask="arm_xor_u8.c"/>
        <files mask="arm_abs_f16.c"/>
        <files mask="arm_add_f16.c"/>
        <files mask="arm_clip_f16.c"/>
        <files mask="arm_dot_prod_f16.c"/>
        <files mask="arm_mult_f16.c"/>
        <files mask="arm_negate_f16.c"/>
        <files mask="arm_offset_f16.c"/>
        <files mask="arm_scale_f16.c"/>
        <files mask="arm_sub_f16.c"/>
      </source>
      <source relative_path="Source/BayesFunctions" type="src">
        <files mask="BayesFunctions.c"/>
        <files mask="BayesFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/BayesFunctions" type="src">
        <files mask="arm_gaussian_naive_bayes_predict_f32.c"/>
        <files mask="arm_gaussian_naive_bayes_predict_f16.c"/>
      </source>
      <source relative_path="Source/CommonTables" type="src">
        <files mask="CommonTables.c"/>
        <files mask="CommonTablesF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/CommonTables" type="src">
        <files mask="arm_common_tables.c"/>
        <files mask="arm_const_structs.c"/>
        <files mask="arm_mve_tables.c"/>
        <files mask="arm_common_tables_f16.c"/>
        <files mask="arm_const_structs_f16.c"/>
        <files mask="arm_mve_tables_f16.c"/>
      </source>
      <source relative_path="Source/ComplexMathFunctions" type="src">
        <files mask="ComplexMathFunctions.c"/>
        <files mask="ComplexMathFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/ComplexMathFunctions" type="src">
        <files mask="arm_cmplx_conj_f32.c"/>
        <files mask="arm_cmplx_conj_q15.c"/>
        <files mask="arm_cmplx_conj_q31.c"/>
        <files mask="arm_cmplx_dot_prod_f32.c"/>
        <files mask="arm_cmplx_dot_prod_q15.c"/>
        <files mask="arm_cmplx_dot_prod_q31.c"/>
        <files mask="arm_cmplx_mag_f32.c"/>
        <files mask="arm_cmplx_mag_f64.c"/>
        <files mask="arm_cmplx_mag_fast_q15.c"/>
        <files mask="arm_cmplx_mag_q15.c"/>
        <files mask="arm_cmplx_mag_q31.c"/>
        <files mask="arm_cmplx_mag_squared_f32.c"/>
        <files mask="arm_cmplx_mag_squared_f64.c"/>
        <files mask="arm_cmplx_mag_squared_q15.c"/>
        <files mask="arm_cmplx_mag_squared_q31.c"/>
        <files mask="arm_cmplx_mult_cmplx_f32.c"/>
        <files mask="arm_cmplx_mult_cmplx_f64.c"/>
        <files mask="arm_cmplx_mult_cmplx_q15.c"/>
        <files mask="arm_cmplx_mult_cmplx_q31.c"/>
        <files mask="arm_cmplx_mult_real_f32.c"/>
        <files mask="arm_cmplx_mult_real_q15.c"/>
        <files mask="arm_cmplx_mult_real_q31.c"/>
        <files mask="arm_cmplx_conj_f16.c"/>
        <files mask="arm_cmplx_dot_prod_f16.c"/>
        <files mask="arm_cmplx_mag_f16.c"/>
        <files mask="arm_cmplx_mag_squared_f16.c"/>
        <files mask="arm_cmplx_mult_cmplx_f16.c"/>
        <files mask="arm_cmplx_mult_real_f16.c"/>
      </source>
      <source relative_path="Source/ControllerFunctions" type="src">
        <files mask="ControllerFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/ControllerFunctions" type="src">
        <files mask="arm_pid_init_f32.c"/>
        <files mask="arm_pid_init_q15.c"/>
        <files mask="arm_pid_init_q31.c"/>
        <files mask="arm_pid_reset_f32.c"/>
        <files mask="arm_pid_reset_q15.c"/>
        <files mask="arm_pid_reset_q31.c"/>
        <files mask="arm_sin_cos_f32.c"/>
        <files mask="arm_sin_cos_q31.c"/>
      </source>
      <source relative_path="Source/DistanceFunctions" type="src">
        <files mask="DistanceFunctions.c"/>
        <files mask="DistanceFunctionsF16.c"/>
      </source>
      <source relative_path="Source/DistanceFunctions" type="c_include">
        <files mask="arm_boolean_distance_template.h"/>
      </source>
      <source exclude="true" relative_path="Source/DistanceFunctions" type="src">
        <files mask="arm_boolean_distance.c"/>
        <files mask="arm_braycurtis_distance_f32.c"/>
        <files mask="arm_canberra_distance_f32.c"/>
        <files mask="arm_chebyshev_distance_f32.c"/>
        <files mask="arm_chebyshev_distance_f64.c"/>
        <files mask="arm_cityblock_distance_f32.c"/>
        <files mask="arm_cityblock_distance_f64.c"/>
        <files mask="arm_correlation_distance_f32.c"/>
        <files mask="arm_cosine_distance_f32.c"/>
        <files mask="arm_cosine_distance_f64.c"/>
        <files mask="arm_dice_distance.c"/>
        <files mask="arm_dtw_distance_f32.c"/>
        <files mask="arm_dtw_init_window_q7.c"/>
        <files mask="arm_dtw_path_f32.c"/>
        <files mask="arm_euclidean_distance_f32.c"/>
        <files mask="arm_euclidean_distance_f64.c"/>
        <files mask="arm_hamming_distance.c"/>
        <files mask="arm_jaccard_distance.c"/>
        <files mask="arm_jensenshannon_distance_f32.c"/>
        <files mask="arm_kulsinski_distance.c"/>
        <files mask="arm_minkowski_distance_f32.c"/>
        <files mask="arm_rogerstanimoto_distance.c"/>
        <files mask="arm_russellrao_distance.c"/>
        <files mask="arm_sokalmichener_distance.c"/>
        <files mask="arm_sokalsneath_distance.c"/>
        <files mask="arm_yule_distance.c"/>
        <files mask="arm_braycurtis_distance_f16.c"/>
        <files mask="arm_chebyshev_distance_f16.c"/>
        <files mask="arm_canberra_distance_f16.c"/>
        <files mask="arm_cityblock_distance_f16.c"/>
        <files mask="arm_correlation_distance_f16.c"/>
        <files mask="arm_cosine_distance_f16.c"/>
        <files mask="arm_euclidean_distance_f16.c"/>
        <files mask="arm_jensenshannon_distance_f16.c"/>
        <files mask="arm_minkowski_distance_f16.c"/>
      </source>
      <source relative_path="Source/FastMathFunctions" type="src">
        <files mask="FastMathFunctions.c"/>
        <files mask="FastMathFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/FastMathFunctions" type="src">
        <files mask="arm_atan2_f32.c"/>
        <files mask="arm_atan2_q15.c"/>
        <files mask="arm_atan2_q31.c"/>
        <files mask="arm_cos_f32.c"/>
        <files mask="arm_cos_q15.c"/>
        <files mask="arm_cos_q31.c"/>
        <files mask="arm_divide_q15.c"/>
        <files mask="arm_divide_q31.c"/>
        <files mask="arm_sin_f32.c"/>
        <files mask="arm_sin_q15.c"/>
        <files mask="arm_sin_q31.c"/>
        <files mask="arm_sqrt_q15.c"/>
        <files mask="arm_sqrt_q31.c"/>
        <files mask="arm_vexp_f32.c"/>
        <files mask="arm_vexp_f64.c"/>
        <files mask="arm_vlog_f32.c"/>
        <files mask="arm_vlog_f64.c"/>
        <files mask="arm_vlog_q15.c"/>
        <files mask="arm_vlog_q31.c"/>
        <files mask="arm_atan2_f16.c"/>
        <files mask="arm_vexp_f16.c"/>
        <files mask="arm_vinverse_f16.c"/>
        <files mask="arm_vlog_f16.c"/>
      </source>
      <source relative_path="Source/FilteringFunctions" type="src">
        <files mask="FilteringFunctions.c"/>
        <files mask="FilteringFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/FilteringFunctions" type="src">
        <files mask="arm_biquad_cascade_df1_32x64_init_q31.c"/>
        <files mask="arm_biquad_cascade_df1_32x64_q31.c"/>
        <files mask="arm_biquad_cascade_df1_f32.c"/>
        <files mask="arm_biquad_cascade_df1_fast_q15.c"/>
        <files mask="arm_biquad_cascade_df1_fast_q31.c"/>
        <files mask="arm_biquad_cascade_df1_init_f32.c"/>
        <files mask="arm_biquad_cascade_df1_init_q15.c"/>
        <files mask="arm_biquad_cascade_df1_init_q31.c"/>
        <files mask="arm_biquad_cascade_df1_q15.c"/>
        <files mask="arm_biquad_cascade_df1_q31.c"/>
        <files mask="arm_biquad_cascade_df2T_f32.c"/>
        <files mask="arm_biquad_cascade_df2T_f64.c"/>
        <files mask="arm_biquad_cascade_df2T_init_f32.c"/>
        <files mask="arm_biquad_cascade_df2T_init_f64.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_f32.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_init_f32.c"/>
        <files mask="arm_conv_f32.c"/>
        <files mask="arm_conv_fast_opt_q15.c"/>
        <files mask="arm_conv_fast_q15.c"/>
        <files mask="arm_conv_fast_q31.c"/>
        <files mask="arm_conv_opt_q15.c"/>
        <files mask="arm_conv_opt_q7.c"/>
        <files mask="arm_conv_partial_f32.c"/>
        <files mask="arm_conv_partial_fast_opt_q15.c"/>
        <files mask="arm_conv_partial_fast_q15.c"/>
        <files mask="arm_conv_partial_fast_q31.c"/>
        <files mask="arm_conv_partial_opt_q15.c"/>
        <files mask="arm_conv_partial_opt_q7.c"/>
        <files mask="arm_conv_partial_q15.c"/>
        <files mask="arm_conv_partial_q31.c"/>
        <files mask="arm_conv_partial_q7.c"/>
        <files mask="arm_conv_q15.c"/>
        <files mask="arm_conv_q31.c"/>
        <files mask="arm_conv_q7.c"/>
        <files mask="arm_correlate_f32.c"/>
        <files mask="arm_correlate_f64.c"/>
        <files mask="arm_correlate_fast_opt_q15.c"/>
        <files mask="arm_correlate_fast_q15.c"/>
        <files mask="arm_correlate_fast_q31.c"/>
        <files mask="arm_correlate_opt_q15.c"/>
        <files mask="arm_correlate_opt_q7.c"/>
        <files mask="arm_correlate_q15.c"/>
        <files mask="arm_correlate_q31.c"/>
        <files mask="arm_correlate_q7.c"/>
        <files mask="arm_fir_decimate_f32.c"/>
        <files mask="arm_fir_decimate_fast_q15.c"/>
        <files mask="arm_fir_decimate_fast_q31.c"/>
        <files mask="arm_fir_decimate_init_f32.c"/>
        <files mask="arm_fir_decimate_init_q15.c"/>
        <files mask="arm_fir_decimate_init_q31.c"/>
        <files mask="arm_fir_decimate_q15.c"/>
        <files mask="arm_fir_decimate_q31.c"/>
        <files mask="arm_fir_f32.c"/>
        <files mask="arm_fir_f64.c"/>
        <files mask="arm_fir_fast_q15.c"/>
        <files mask="arm_fir_fast_q31.c"/>
        <files mask="arm_fir_init_f32.c"/>
        <files mask="arm_fir_init_f64.c"/>
        <files mask="arm_fir_init_q15.c"/>
        <files mask="arm_fir_init_q31.c"/>
        <files mask="arm_fir_init_q7.c"/>
        <files mask="arm_fir_interpolate_f32.c"/>
        <files mask="arm_fir_interpolate_init_f32.c"/>
        <files mask="arm_fir_interpolate_init_q15.c"/>
        <files mask="arm_fir_interpolate_init_q31.c"/>
        <files mask="arm_fir_interpolate_q15.c"/>
        <files mask="arm_fir_interpolate_q31.c"/>
        <files mask="arm_fir_lattice_f32.c"/>
        <files mask="arm_fir_lattice_init_f32.c"/>
        <files mask="arm_fir_lattice_init_q15.c"/>
        <files mask="arm_fir_lattice_init_q31.c"/>
        <files mask="arm_fir_lattice_q15.c"/>
        <files mask="arm_fir_lattice_q31.c"/>
        <files mask="arm_fir_q15.c"/>
        <files mask="arm_fir_q31.c"/>
        <files mask="arm_fir_q7.c"/>
        <files mask="arm_fir_sparse_f32.c"/>
        <files mask="arm_fir_sparse_init_f32.c"/>
        <files mask="arm_fir_sparse_init_q15.c"/>
        <files mask="arm_fir_sparse_init_q31.c"/>
        <files mask="arm_fir_sparse_init_q7.c"/>
        <files mask="arm_fir_sparse_q15.c"/>
        <files mask="arm_fir_sparse_q31.c"/>
        <files mask="arm_fir_sparse_q7.c"/>
        <files mask="arm_iir_lattice_f32.c"/>
        <files mask="arm_iir_lattice_init_f32.c"/>
        <files mask="arm_iir_lattice_init_q15.c"/>
        <files mask="arm_iir_lattice_init_q31.c"/>
        <files mask="arm_iir_lattice_q15.c"/>
        <files mask="arm_iir_lattice_q31.c"/>
        <files mask="arm_levinson_durbin_f32.c"/>
        <files mask="arm_levinson_durbin_q31.c"/>
        <files mask="arm_lms_f32.c"/>
        <files mask="arm_lms_init_f32.c"/>
        <files mask="arm_lms_init_q15.c"/>
        <files mask="arm_lms_init_q31.c"/>
        <files mask="arm_lms_norm_f32.c"/>
        <files mask="arm_lms_norm_init_f32.c"/>
        <files mask="arm_lms_norm_init_q15.c"/>
        <files mask="arm_lms_norm_init_q31.c"/>
        <files mask="arm_lms_norm_q15.c"/>
        <files mask="arm_lms_norm_q31.c"/>
        <files mask="arm_lms_q15.c"/>
        <files mask="arm_lms_q31.c"/>
        <files mask="arm_biquad_cascade_df1_f16.c"/>
        <files mask="arm_biquad_cascade_df1_init_f16.c"/>
        <files mask="arm_biquad_cascade_df2T_f16.c"/>
        <files mask="arm_biquad_cascade_df2T_init_f16.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_f16.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_init_f16.c"/>
        <files mask="arm_correlate_f16.c"/>
        <files mask="arm_fir_f16.c"/>
        <files mask="arm_fir_init_f16.c"/>
        <files mask="arm_levinson_durbin_f16.c"/>
        <files mask="arm_fir_decimate_f64.c"/>
        <files mask="arm_fir_decimate_init_f64.c"/>
      </source>
      <source relative_path="Source/InterpolationFunctions" type="src">
        <files mask="InterpolationFunctions.c"/>
        <files mask="InterpolationFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/InterpolationFunctions" type="src">
        <files mask="arm_bilinear_interp_f32.c"/>
        <files mask="arm_bilinear_interp_q15.c"/>
        <files mask="arm_bilinear_interp_q31.c"/>
        <files mask="arm_bilinear_interp_q7.c"/>
        <files mask="arm_linear_interp_f32.c"/>
        <files mask="arm_linear_interp_q15.c"/>
        <files mask="arm_linear_interp_q31.c"/>
        <files mask="arm_linear_interp_q7.c"/>
        <files mask="arm_spline_interp_f32.c"/>
        <files mask="arm_spline_interp_init_f32.c"/>
        <files mask="arm_bilinear_interp_f16.c"/>
        <files mask="arm_linear_interp_f16.c"/>
      </source>
      <source relative_path="Source/MatrixFunctions" type="src">
        <files mask="MatrixFunctions.c"/>
        <files mask="MatrixFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/MatrixFunctions" type="src">
        <files mask="arm_householder_f32.c"/>
        <files mask="arm_householder_f64.c"/>
        <files mask="arm_mat_add_f32.c"/>
        <files mask="arm_mat_add_q15.c"/>
        <files mask="arm_mat_add_q31.c"/>
        <files mask="arm_mat_cholesky_f32.c"/>
        <files mask="arm_mat_cholesky_f64.c"/>
        <files mask="arm_mat_cmplx_mult_f32.c"/>
        <files mask="arm_mat_cmplx_mult_q15.c"/>
        <files mask="arm_mat_cmplx_mult_q31.c"/>
        <files mask="arm_mat_cmplx_trans_f32.c"/>
        <files mask="arm_mat_cmplx_trans_q15.c"/>
        <files mask="arm_mat_cmplx_trans_q31.c"/>
        <files mask="arm_mat_init_f32.c"/>
        <files mask="arm_mat_init_f64.c"/>
        <files mask="arm_mat_init_q15.c"/>
        <files mask="arm_mat_init_q31.c"/>
        <files mask="arm_mat_inverse_f32.c"/>
        <files mask="arm_mat_inverse_f64.c"/>
        <files mask="arm_mat_ldlt_f32.c"/>
        <files mask="arm_mat_ldlt_f64.c"/>
        <files mask="arm_mat_mult_f32.c"/>
        <files mask="arm_mat_mult_f64.c"/>
        <files mask="arm_mat_mult_fast_q15.c"/>
        <files mask="arm_mat_mult_fast_q31.c"/>
        <files mask="arm_mat_mult_opt_q31.c"/>
        <files mask="arm_mat_mult_q15.c"/>
        <files mask="arm_mat_mult_q31.c"/>
        <files mask="arm_mat_mult_q7.c"/>
        <files mask="arm_mat_qr_f32.c"/>
        <files mask="arm_mat_qr_f64.c"/>
        <files mask="arm_mat_scale_f32.c"/>
        <files mask="arm_mat_scale_q15.c"/>
        <files mask="arm_mat_scale_q31.c"/>
        <files mask="arm_mat_solve_lower_triangular_f32.c"/>
        <files mask="arm_mat_solve_lower_triangular_f64.c"/>
        <files mask="arm_mat_solve_upper_triangular_f32.c"/>
        <files mask="arm_mat_solve_upper_triangular_f64.c"/>
        <files mask="arm_mat_sub_f32.c"/>
        <files mask="arm_mat_sub_f64.c"/>
        <files mask="arm_mat_sub_q15.c"/>
        <files mask="arm_mat_sub_q31.c"/>
        <files mask="arm_mat_trans_f32.c"/>
        <files mask="arm_mat_trans_f64.c"/>
        <files mask="arm_mat_trans_q15.c"/>
        <files mask="arm_mat_trans_q31.c"/>
        <files mask="arm_mat_trans_q7.c"/>
        <files mask="arm_mat_vec_mult_f32.c"/>
        <files mask="arm_mat_vec_mult_q15.c"/>
        <files mask="arm_mat_vec_mult_q31.c"/>
        <files mask="arm_mat_vec_mult_q7.c"/>
        <files mask="arm_householder_f16.c"/>
        <files mask="arm_mat_add_f16.c"/>
        <files mask="arm_mat_cholesky_f16.c"/>
        <files mask="arm_mat_cmplx_mult_f16.c"/>
        <files mask="arm_mat_cmplx_trans_f16.c"/>
        <files mask="arm_mat_init_f16.c"/>
        <files mask="arm_mat_inverse_f16.c"/>
        <files mask="arm_mat_qr_f16.c"/>
        <files mask="arm_mat_mult_f16.c"/>
        <files mask="arm_mat_scale_f16.c"/>
        <files mask="arm_mat_solve_lower_triangular_f16.c"/>
        <files mask="arm_mat_solve_upper_triangular_f16.c"/>
        <files mask="arm_mat_sub_f16.c"/>
        <files mask="arm_mat_trans_f16.c"/>
        <files mask="arm_mat_vec_mult_f16.c"/>
      </source>
      <source relative_path="Source/QuaternionMathFunctions" type="src">
        <files mask="QuaternionMathFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/QuaternionMathFunctions" type="src">
        <files mask="arm_quaternion2rotation_f32.c"/>
        <files mask="arm_quaternion_conjugate_f32.c"/>
        <files mask="arm_quaternion_inverse_f32.c"/>
        <files mask="arm_quaternion_normalize_f32.c"/>
        <files mask="arm_quaternion_norm_f32.c"/>
        <files mask="arm_quaternion_product_f32.c"/>
        <files mask="arm_quaternion_product_single_f32.c"/>
        <files mask="arm_rotation2quaternion_f32.c"/>
      </source>
      <source relative_path="Source/SVMFunctions" type="src">
        <files mask="SVMFunctions.c"/>
        <files mask="SVMFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/SVMFunctions" type="src">
        <files mask="arm_svm_linear_init_f32.c"/>
        <files mask="arm_svm_linear_predict_f32.c"/>
        <files mask="arm_svm_polynomial_init_f32.c"/>
        <files mask="arm_svm_polynomial_predict_f32.c"/>
        <files mask="arm_svm_rbf_init_f32.c"/>
        <files mask="arm_svm_rbf_predict_f32.c"/>
        <files mask="arm_svm_sigmoid_init_f32.c"/>
        <files mask="arm_svm_sigmoid_predict_f32.c"/>
        <files mask="arm_svm_linear_init_f16.c"/>
        <files mask="arm_svm_linear_predict_f16.c"/>
        <files mask="arm_svm_polynomial_init_f16.c"/>
        <files mask="arm_svm_polynomial_predict_f16.c"/>
        <files mask="arm_svm_rbf_init_f16.c"/>
        <files mask="arm_svm_rbf_predict_f16.c"/>
        <files mask="arm_svm_sigmoid_init_f16.c"/>
        <files mask="arm_svm_sigmoid_predict_f16.c"/>
      </source>
      <source relative_path="Source/StatisticsFunctions" type="src">
        <files mask="StatisticsFunctions.c"/>
        <files mask="StatisticsFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/StatisticsFunctions" type="src">
        <files mask="arm_absmax_f32.c"/>
        <files mask="arm_absmax_f64.c"/>
        <files mask="arm_absmax_no_idx_f32.c"/>
        <files mask="arm_absmax_no_idx_f64.c"/>
        <files mask="arm_absmax_no_idx_q15.c"/>
        <files mask="arm_absmax_no_idx_q31.c"/>
        <files mask="arm_absmax_no_idx_q7.c"/>
        <files mask="arm_absmax_q15.c"/>
        <files mask="arm_absmax_q31.c"/>
        <files mask="arm_absmax_q7.c"/>
        <files mask="arm_absmin_f32.c"/>
        <files mask="arm_absmin_f64.c"/>
        <files mask="arm_absmin_no_idx_f32.c"/>
        <files mask="arm_absmin_no_idx_f64.c"/>
        <files mask="arm_absmin_no_idx_q15.c"/>
        <files mask="arm_absmin_no_idx_q31.c"/>
        <files mask="arm_absmin_no_idx_q7.c"/>
        <files mask="arm_absmin_q15.c"/>
        <files mask="arm_absmin_q31.c"/>
        <files mask="arm_absmin_q7.c"/>
        <files mask="arm_accumulate_f32.c"/>
        <files mask="arm_accumulate_f64.c"/>
        <files mask="arm_entropy_f32.c"/>
        <files mask="arm_entropy_f64.c"/>
        <files mask="arm_kullback_leibler_f32.c"/>
        <files mask="arm_kullback_leibler_f64.c"/>
        <files mask="arm_logsumexp_dot_prod_f32.c"/>
        <files mask="arm_logsumexp_f32.c"/>
        <files mask="arm_max_f32.c"/>
        <files mask="arm_max_f64.c"/>
        <files mask="arm_max_no_idx_f32.c"/>
        <files mask="arm_max_no_idx_f64.c"/>
        <files mask="arm_max_no_idx_q15.c"/>
        <files mask="arm_max_no_idx_q31.c"/>
        <files mask="arm_max_no_idx_q7.c"/>
        <files mask="arm_max_q15.c"/>
        <files mask="arm_max_q31.c"/>
        <files mask="arm_max_q7.c"/>
        <files mask="arm_mean_f32.c"/>
        <files mask="arm_mean_f64.c"/>
        <files mask="arm_mean_q15.c"/>
        <files mask="arm_mean_q31.c"/>
        <files mask="arm_mean_q7.c"/>
        <files mask="arm_min_f32.c"/>
        <files mask="arm_min_f64.c"/>
        <files mask="arm_min_no_idx_f32.c"/>
        <files mask="arm_min_no_idx_f64.c"/>
        <files mask="arm_min_no_idx_q15.c"/>
        <files mask="arm_min_no_idx_q31.c"/>
        <files mask="arm_min_no_idx_q7.c"/>
        <files mask="arm_min_q15.c"/>
        <files mask="arm_min_q31.c"/>
        <files mask="arm_min_q7.c"/>
        <files mask="arm_mse_f32.c"/>
        <files mask="arm_mse_f64.c"/>
        <files mask="arm_mse_q15.c"/>
        <files mask="arm_mse_q31.c"/>
        <files mask="arm_mse_q7.c"/>
        <files mask="arm_power_f32.c"/>
        <files mask="arm_power_f64.c"/>
        <files mask="arm_power_q15.c"/>
        <files mask="arm_power_q31.c"/>
        <files mask="arm_power_q7.c"/>
        <files mask="arm_rms_f32.c"/>
        <files mask="arm_rms_q15.c"/>
        <files mask="arm_rms_q31.c"/>
        <files mask="arm_std_f32.c"/>
        <files mask="arm_std_f64.c"/>
        <files mask="arm_std_q15.c"/>
        <files mask="arm_std_q31.c"/>
        <files mask="arm_var_f32.c"/>
        <files mask="arm_var_f64.c"/>
        <files mask="arm_var_q15.c"/>
        <files mask="arm_var_q31.c"/>
        <files mask="arm_absmax_f16.c"/>
        <files mask="arm_absmax_no_idx_f16.c"/>
        <files mask="arm_absmin_f16.c"/>
        <files mask="arm_absmin_no_idx_f16.c"/>
        <files mask="arm_accumulate_f16.c"/>
        <files mask="arm_entropy_f16.c"/>
        <files mask="arm_kullback_leibler_f16.c"/>
        <files mask="arm_logsumexp_dot_prod_f16.c"/>
        <files mask="arm_logsumexp_f16.c"/>
        <files mask="arm_max_f16.c"/>
        <files mask="arm_max_no_idx_f16.c"/>
        <files mask="arm_mean_f16.c"/>
        <files mask="arm_min_f16.c"/>
        <files mask="arm_min_no_idx_f16.c"/>
        <files mask="arm_mse_f16.c"/>
        <files mask="arm_power_f16.c"/>
        <files mask="arm_rms_f16.c"/>
        <files mask="arm_std_f16.c"/>
        <files mask="arm_var_f16.c"/>
      </source>
      <source relative_path="Source/SupportFunctions" type="src">
        <files mask="SupportFunctions.c"/>
        <files mask="SupportFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/SupportFunctions" type="src">
        <files mask="arm_barycenter_f32.c"/>
        <files mask="arm_bitonic_sort_f32.c"/>
        <files mask="arm_bubble_sort_f32.c"/>
        <files mask="arm_copy_f32.c"/>
        <files mask="arm_copy_f64.c"/>
        <files mask="arm_copy_q15.c"/>
        <files mask="arm_copy_q31.c"/>
        <files mask="arm_copy_q7.c"/>
        <files mask="arm_f64_to_float.c"/>
        <files mask="arm_f64_to_q31.c"/>
        <files mask="arm_f64_to_q15.c"/>
        <files mask="arm_f64_to_q7.c"/>
        <files mask="arm_fill_f32.c"/>
        <files mask="arm_fill_f64.c"/>
        <files mask="arm_fill_q15.c"/>
        <files mask="arm_fill_q31.c"/>
        <files mask="arm_fill_q7.c"/>
        <files mask="arm_float_to_f64.c"/>
        <files mask="arm_float_to_q15.c"/>
        <files mask="arm_float_to_q31.c"/>
        <files mask="arm_float_to_q7.c"/>
        <files mask="arm_heap_sort_f32.c"/>
        <files mask="arm_insertion_sort_f32.c"/>
        <files mask="arm_merge_sort_f32.c"/>
        <files mask="arm_merge_sort_init_f32.c"/>
        <files mask="arm_q15_to_f64.c"/>
        <files mask="arm_q15_to_float.c"/>
        <files mask="arm_q15_to_q31.c"/>
        <files mask="arm_q15_to_q7.c"/>
        <files mask="arm_q31_to_f64.c"/>
        <files mask="arm_q31_to_float.c"/>
        <files mask="arm_q31_to_q15.c"/>
        <files mask="arm_q31_to_q7.c"/>
        <files mask="arm_q7_to_f64.c"/>
        <files mask="arm_q7_to_float.c"/>
        <files mask="arm_q7_to_q15.c"/>
        <files mask="arm_q7_to_q31.c"/>
        <files mask="arm_quick_sort_f32.c"/>
        <files mask="arm_selection_sort_f32.c"/>
        <files mask="arm_sort_f32.c"/>
        <files mask="arm_sort_init_f32.c"/>
        <files mask="arm_weighted_average_f32.c"/>
        <files mask="arm_barycenter_f16.c"/>
        <files mask="arm_copy_f16.c"/>
        <files mask="arm_f16_to_float.c"/>
        <files mask="arm_f16_to_q15.c"/>
        <files mask="arm_f16_to_f64.c"/>
        <files mask="arm_f64_to_f16.c"/>
        <files mask="arm_fill_f16.c"/>
        <files mask="arm_float_to_f16.c"/>
        <files mask="arm_q15_to_f16.c"/>
        <files mask="arm_weighted_average_f16.c"/>
      </source>
      <source relative_path="Source/TransformFunctions" type="src">
        <files mask="TransformFunctions.c"/>
        <files mask="TransformFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/TransformFunctions" type="src">
        <files mask="arm_bitreversal.c"/>
        <files mask="arm_bitreversal2.c"/>
        <files mask="arm_cfft_f32.c"/>
        <files mask="arm_cfft_f64.c"/>
        <files mask="arm_cfft_init_f32.c"/>
        <files mask="arm_cfft_init_f64.c"/>
        <files mask="arm_cfft_init_q15.c"/>
        <files mask="arm_cfft_init_q31.c"/>
        <files mask="arm_cfft_q15.c"/>
        <files mask="arm_cfft_q31.c"/>
        <files mask="arm_cfft_radix2_f32.c"/>
        <files mask="arm_cfft_radix2_init_f32.c"/>
        <files mask="arm_cfft_radix2_init_q15.c"/>
        <files mask="arm_cfft_radix2_init_q31.c"/>
        <files mask="arm_cfft_radix2_q15.c"/>
        <files mask="arm_cfft_radix2_q31.c"/>
        <files mask="arm_cfft_radix4_f32.c"/>
        <files mask="arm_cfft_radix4_init_f32.c"/>
        <files mask="arm_cfft_radix4_init_q15.c"/>
        <files mask="arm_cfft_radix4_init_q31.c"/>
        <files mask="arm_cfft_radix4_q15.c"/>
        <files mask="arm_cfft_radix4_q31.c"/>
        <files mask="arm_cfft_radix8_f32.c"/>
        <files mask="arm_dct4_f32.c"/>
        <files mask="arm_dct4_init_f32.c"/>
        <files mask="arm_dct4_init_q15.c"/>
        <files mask="arm_dct4_init_q31.c"/>
        <files mask="arm_dct4_q15.c"/>
        <files mask="arm_dct4_q31.c"/>
        <files mask="arm_mfcc_f32.c"/>
        <files mask="arm_mfcc_init_f32.c"/>
        <files mask="arm_mfcc_init_q15.c"/>
        <files mask="arm_mfcc_init_q31.c"/>
        <files mask="arm_mfcc_q15.c"/>
        <files mask="arm_mfcc_q31.c"/>
        <files mask="arm_rfft_f32.c"/>
        <files mask="arm_rfft_fast_f32.c"/>
        <files mask="arm_rfft_fast_f64.c"/>
        <files mask="arm_rfft_fast_init_f32.c"/>
        <files mask="arm_rfft_fast_init_f64.c"/>
        <files mask="arm_rfft_init_f32.c"/>
        <files mask="arm_rfft_init_q15.c"/>
        <files mask="arm_rfft_init_q31.c"/>
        <files mask="arm_rfft_q15.c"/>
        <files mask="arm_rfft_q31.c"/>
        <files mask="arm_bitreversal_f16.c"/>
        <files mask="arm_cfft_f16.c"/>
        <files mask="arm_cfft_init_f16.c"/>
        <files mask="arm_cfft_radix2_f16.c"/>
        <files mask="arm_cfft_radix2_init_f16.c"/>
        <files mask="arm_cfft_radix4_f16.c"/>
        <files mask="arm_cfft_radix8_f16.c"/>
        <files mask="arm_mfcc_f16.c"/>
        <files mask="arm_cfft_radix4_init_f16.c"/>
        <files mask="arm_mfcc_init_f16.c"/>
        <files mask="arm_rfft_fast_f16.c"/>
        <files mask="arm_rfft_fast_init_f16.c"/>
      </source>
      <source relative_path="Source/WindowFunctions" type="src">
        <files mask="WindowFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/WindowFunctions" type="src">
        <files mask="arm_bartlett_f32.c"/>
        <files mask="arm_bartlett_f64.c"/>
        <files mask="arm_blackman_harris_92db_f32.c"/>
        <files mask="arm_blackman_harris_92db_f64.c"/>
        <files mask="arm_hamming_f32.c"/>
        <files mask="arm_hamming_f64.c"/>
        <files mask="arm_hanning_f32.c"/>
        <files mask="arm_hanning_f64.c"/>
        <files mask="arm_hft116d_f32.c"/>
        <files mask="arm_hft116d_f64.c"/>
        <files mask="arm_hft144d_f32.c"/>
        <files mask="arm_hft144d_f64.c"/>
        <files mask="arm_hft169d_f32.c"/>
        <files mask="arm_hft169d_f64.c"/>
        <files mask="arm_hft196d_f32.c"/>
        <files mask="arm_hft196d_f64.c"/>
        <files mask="arm_hft223d_f32.c"/>
        <files mask="arm_hft223d_f64.c"/>
        <files mask="arm_hft248d_f32.c"/>
        <files mask="arm_hft248d_f64.c"/>
        <files mask="arm_hft90d_f32.c"/>
        <files mask="arm_hft90d_f64.c"/>
        <files mask="arm_hft95_f32.c"/>
        <files mask="arm_hft95_f64.c"/>
        <files mask="arm_nuttall3a_f32.c"/>
        <files mask="arm_nuttall3a_f64.c"/>
        <files mask="arm_nuttall3b_f32.c"/>
        <files mask="arm_nuttall3b_f64.c"/>
        <files mask="arm_nuttall3_f32.c"/>
        <files mask="arm_nuttall3_f64.c"/>
        <files mask="arm_nuttall4a_f32.c"/>
        <files mask="arm_nuttall4a_f64.c"/>
        <files mask="arm_nuttall4b_f32.c"/>
        <files mask="arm_nuttall4b_f64.c"/>
        <files mask="arm_nuttall4c_f32.c"/>
        <files mask="arm_nuttall4c_f64.c"/>
        <files mask="arm_nuttall4_f32.c"/>
        <files mask="arm_nuttall4_f64.c"/>
        <files mask="arm_welch_f32.c"/>
        <files mask="arm_welch_f64.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_DSP_Source.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="PrivateInclude" type="c_include"/>
        <include_path relative_path="Source/DistanceFunctions" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
        <include_path relative_path="PrivateInclude" type="asm_include"/>
        <include_path relative_path="Source/DistanceFunctions" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Device_API_OSTick.MIMXRT555S" name="CMSIS_Device_API_OSTick" brief="Device interrupt controller interface" version="1.0.2" full_name="CMSIS Device API OSTick" category="Device/OS Tick" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/RTOS2/Include" project_base_path="CMSIS/RTOS2/Include">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="os_tick.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Device_API_OSTick.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Device_API_RTOS2.MIMXRT555S" name="CMSIS_Device_API_RTOS2" brief="CMSIS-RTOS API for Cortex-M, SC000, and SC300" version="2.3.0" full_name="CMSIS Device API RTOS2" category="CMSIS/RTOS2" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/RTOS2/Include" project_base_path="CMSIS/RTOS2/Include">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="cmsis_os2.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Device_API_RTOS2.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.CAN.MIMXRT555S" name="CMSIS_Driver_CAN" brief="Access to #include Driver_CAN.h file for custom implementation" version="1.3.0" full_name="CMSIS Driver CAN" category="CMSIS Driver/CAN" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_CAN.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_CAN.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Ethernet.MIMXRT555S" name="CMSIS_Driver_Ethernet_Common" brief="Access to #include Driver_ETH.h file for custom implementation" version="2.2.0" full_name="CMSIS Driver Ethernet Common" category="CMSIS Driver/Ethernet" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_Common.h"/>
        <files mask="Driver_ETH.h"/>
        <files mask="Driver_ETH_MAC.h"/>
        <files mask="Driver_ETH_PHY.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_Ethernet.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Ethernet_MAC.MIMXRT555S" name="CMSIS_Driver_Ethernet_MAC" brief="Access to #include Driver_ETH_MAC.h file for custom implementation" version="2.2.0" full_name="CMSIS Driver Ethernet MAC" category="CMSIS Driver/Ethernet MAC" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_ETH.h"/>
        <files mask="Driver_Common.h"/>
        <files mask="Driver_ETH_MAC.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_Ethernet_MAC.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Ethernet_PHY.MIMXRT555S" name="CMSIS_Driver_Ethernet_PHY" brief="Access to #include Driver_ETH_PHY.h file for custom implementation" version="2.2.0" full_name="CMSIS Driver Ethernet PHY" category="CMSIS Driver/Ethernet PHY" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_ETH.h"/>
        <files mask="Driver_ETH_PHY.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_Ethernet_PHY.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Flash.MIMXRT555S" name="CMSIS_Driver_Flash" brief="Access to #include Driver_Flash.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver Flash" category="CMSIS Driver/Flash" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_Flash.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_Flash.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.GPIO.MIMXRT555S" name="CMSIS_Driver_GPIO" brief="Access to #include Driver_GPIO.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver GPIO" category="CMSIS Driver/GPIO" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="Include/GPIO" template="true" type="c_include">
        <files mask="Driver_GPIO.h"/>
      </source>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_Common.h"/>
      </source>
      <source relative_path="Include/GPIO" type="c_include">
        <files mask="Driver_GPIO.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_GPIO.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include/GPIO" type="c_include"/>
        <include_path relative_path="Include/GPIO" type="asm_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.I2C.MIMXRT555S" name="CMSIS_Driver_I2C" brief="Access to #include Driver_I2C.h file for custom implementation" version="2.4.0" full_name="CMSIS Driver I2C" category="CMSIS Driver/I2C" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_I2C.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_I2C.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.MCI.MIMXRT555S" name="CMSIS_Driver_MCI" brief="Access to #include Driver_MCI.h file for custom implementation" version="2.4.0" full_name="CMSIS Driver MCI" category="CMSIS Driver/MCI" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_MCI.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_MCI.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.NAND.MIMXRT555S" name="CMSIS_Driver_NAND" brief="Access to #include Driver_NAND.h file for custom implementation" version="2.4.0" full_name="CMSIS Driver NAND" category="CMSIS Driver/NAND" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_NAND.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_NAND.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.SAI.MIMXRT555S" name="CMSIS_Driver_SAI" brief="Access to #include Driver_SAI.h file for custom implementation" version="1.2.0" full_name="CMSIS Driver SAI" category="CMSIS Driver/SAI" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_SAI.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_SAI.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.SPI.MIMXRT555S" name="CMSIS_Driver_SPI" brief="Access to #include Driver_SPI.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver SPI" category="CMSIS Driver/SPI" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_SPI.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_SPI.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.USART.MIMXRT555S" name="CMSIS_Driver_USART" brief="Access to #include Driver_USART.h file for custom implementation" version="2.4.0" full_name="CMSIS Driver USART" category="CMSIS Driver/USART" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_USART.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_USART.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.USB_Device.MIMXRT555S" name="CMSIS_Driver_USB_Device" brief="Access to #include Driver_USBD.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver USB Device" category="CMSIS Driver/USB Device" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_USBD.h"/>
        <files mask="Driver_USB.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_USB_Device.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.USB_Host.MIMXRT555S" name="CMSIS_Driver_USB_Host" brief="Access to #include Driver_USBH.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver USB Host" category="CMSIS Driver/USB Host" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_USBH.h"/>
        <files mask="Driver_USB.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_USB_Host.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.WiFi.MIMXRT555S" name="CMSIS_Driver_WiFi" brief="Access to #include Driver_WiFi.h file" version="1.1.0" full_name="CMSIS Driver WiFi" category="CMSIS Driver/WiFi" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_WiFi.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_WiFi.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_NN_Source.MIMXRT555S" name="CMSIS_NN_Library_Source" brief="CMSIS-NN Library" version="6.0.0" full_name="CMSIS NN Library Source" category="CMSIS/NN" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/NN" project_base_path="CMSIS/NN">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="README.md" hidden="true"/>
      </source>
      <source relative_path="Include" type="c_include">
        <files mask="arm_nnfunctions.h"/>
        <files mask="arm_nnsupportfunctions.h"/>
        <files mask="arm_nn_math_types.h"/>
        <files mask="arm_nn_tables.h"/>
        <files mask="arm_nn_types.h"/>
      </source>
      <source relative_path="Include/Internal" type="c_include">
        <files mask="arm_nn_compiler.h"/>
      </source>
      <source relative_path="Source/ActivationFunctions" type="src">
        <files mask="arm_nn_activation_s16.c"/>
        <files mask="arm_relu6_s8.c"/>
        <files mask="arm_relu_q15.c"/>
        <files mask="arm_relu_q7.c"/>
      </source>
      <source relative_path="Source/BasicMathFunctions" type="src">
        <files mask="arm_elementwise_add_s16.c"/>
        <files mask="arm_elementwise_add_s8.c"/>
        <files mask="arm_elementwise_mul_acc_s16.c"/>
        <files mask="arm_elementwise_mul_s16.c"/>
        <files mask="arm_elementwise_mul_s16_s8.c"/>
        <files mask="arm_elementwise_mul_s8.c"/>
        <files mask="arm_elementwise_mul_s16_batch_offset.c"/>
      </source>
      <source relative_path="Source/ConcatenationFunctions" type="src">
        <files mask="arm_concatenation_s8_w.c"/>
        <files mask="arm_concatenation_s8_x.c"/>
        <files mask="arm_concatenation_s8_y.c"/>
        <files mask="arm_concatenation_s8_z.c"/>
      </source>
      <source relative_path="Source/ConvolutionFunctions" type="src">
        <files mask="arm_convolve_1x1_s4.c"/>
        <files mask="arm_convolve_1x1_s4_fast.c"/>
        <files mask="arm_convolve_1x1_s8.c"/>
        <files mask="arm_convolve_1x1_s8_fast.c"/>
        <files mask="arm_convolve_1_x_n_s4.c"/>
        <files mask="arm_convolve_1_x_n_s8.c"/>
        <files mask="arm_convolve_get_buffer_sizes_s16.c"/>
        <files mask="arm_convolve_get_buffer_sizes_s4.c"/>
        <files mask="arm_convolve_get_buffer_sizes_s8.c"/>
        <files mask="arm_convolve_s16.c"/>
        <files mask="arm_convolve_s4.c"/>
        <files mask="arm_convolve_s8.c"/>
        <files mask="arm_convolve_wrapper_s16.c"/>
        <files mask="arm_convolve_wrapper_s4.c"/>
        <files mask="arm_convolve_wrapper_s8.c"/>
        <files mask="arm_depthwise_conv_3x3_s8.c"/>
        <files mask="arm_depthwise_conv_fast_s16.c"/>
        <files mask="arm_depthwise_conv_get_buffer_sizes_s16.c"/>
        <files mask="arm_depthwise_conv_get_buffer_sizes_s4.c"/>
        <files mask="arm_depthwise_conv_get_buffer_sizes_s8.c"/>
        <files mask="arm_depthwise_conv_s16.c"/>
        <files mask="arm_depthwise_conv_s4.c"/>
        <files mask="arm_depthwise_conv_s4_opt.c"/>
        <files mask="arm_depthwise_conv_s8.c"/>
        <files mask="arm_depthwise_conv_s8_opt.c"/>
        <files mask="arm_depthwise_conv_wrapper_s16.c"/>
        <files mask="arm_depthwise_conv_wrapper_s4.c"/>
        <files mask="arm_depthwise_conv_wrapper_s8.c"/>
        <files mask="arm_nn_depthwise_conv_s8_core.c"/>
        <files mask="arm_nn_mat_mult_kernel_row_offset_s8_s16.c"/>
        <files mask="arm_nn_mat_mult_kernel_s4_s16.c"/>
        <files mask="arm_nn_mat_mult_kernel_s8_s16.c"/>
        <files mask="arm_nn_mat_mult_kernel_s16.c"/>
        <files mask="arm_nn_mat_mult_s8.c"/>
        <files mask="arm_transpose_conv_get_buffer_sizes_s8.c"/>
        <files mask="arm_transpose_conv_s8.c"/>
      </source>
      <source relative_path="Source/FullyConnectedFunctions" type="src">
        <files mask="arm_fully_connected_get_buffer_sizes_s16.c"/>
        <files mask="arm_fully_connected_get_buffer_sizes_s8.c"/>
        <files mask="arm_fully_connected_s16.c"/>
        <files mask="arm_fully_connected_s4.c"/>
        <files mask="arm_fully_connected_s8.c"/>
        <files mask="arm_vector_sum_s8.c"/>
        <files mask="arm_vector_sum_s8_s64.c"/>
      </source>
      <source relative_path="Source/LSTMFunctions" type="src">
        <files mask="arm_lstm_unidirectional_s16.c"/>
        <files mask="arm_lstm_unidirectional_s8.c"/>
      </source>
      <source relative_path="Source/NNSupportFunctions" type="src">
        <files mask="arm_nntables.c"/>
        <files mask="arm_nn_depthwise_conv_nt_t_padded_s8.c"/>
        <files mask="arm_nn_depthwise_conv_nt_t_s16.c"/>
        <files mask="arm_nn_depthwise_conv_nt_t_s4.c"/>
        <files mask="arm_nn_depthwise_conv_nt_t_s8.c"/>
        <files mask="arm_nn_lstm_calculate_gate_s16.c"/>
        <files mask="arm_nn_lstm_calculate_gate_s8_s16.c"/>
        <files mask="arm_nn_lstm_step_s16.c"/>
        <files mask="arm_nn_lstm_step_s8.c"/>
        <files mask="arm_nn_mat_mult_nt_t_s16.c"/>
        <files mask="arm_nn_mat_mult_nt_t_s4.c"/>
        <files mask="arm_nn_mat_mult_nt_t_s8.c"/>
        <files mask="arm_nn_mat_mult_nt_t_s8_s32.c"/>
        <files mask="arm_nn_mat_mul_core_1x_s4.c"/>
        <files mask="arm_nn_mat_mul_core_1x_s8.c"/>
        <files mask="arm_nn_mat_mul_core_4x_s8.c"/>
        <files mask="arm_nn_vec_mat_mul_result_acc_s16.c"/>
        <files mask="arm_nn_vec_mat_mul_result_acc_s8_s16.c"/>
        <files mask="arm_nn_vec_mat_mult_t_s16.c"/>
        <files mask="arm_nn_vec_mat_mult_t_s4.c"/>
        <files mask="arm_nn_vec_mat_mult_t_s8.c"/>
        <files mask="arm_nn_vec_mat_mult_t_svdf_s8.c"/>
        <files mask="arm_q7_to_q15_with_offset.c"/>
        <files mask="arm_s8_to_s16_unordered_with_offset.c"/>
      </source>
      <source relative_path="Source/PoolingFunctions" type="src">
        <files mask="arm_avgpool_get_buffer_sizes_s16.c"/>
        <files mask="arm_avgpool_get_buffer_sizes_s8.c"/>
        <files mask="arm_avgpool_s16.c"/>
        <files mask="arm_avgpool_s8.c"/>
        <files mask="arm_max_pool_s16.c"/>
        <files mask="arm_max_pool_s8.c"/>
      </source>
      <source relative_path="Source/ReshapeFunctions" type="src">
        <files mask="arm_reshape_s8.c"/>
      </source>
      <source relative_path="Source/SoftmaxFunctions" type="src">
        <files mask="arm_nn_softmax_common_s8.c"/>
        <files mask="arm_softmax_s16.c"/>
        <files mask="arm_softmax_s8.c"/>
        <files mask="arm_softmax_s8_s16.c"/>
        <files mask="arm_softmax_u8.c"/>
      </source>
      <source relative_path="Source/SVDFunctions" type="src">
        <files mask="arm_svdf_get_buffer_sizes_s8.c"/>
        <files mask="arm_svdf_s8.c"/>
        <files mask="arm_svdf_state_s16_s8.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_NN_Source.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <!--<component id="container.CMSIS_all_files.MIMXRT555S" name="MIMXRT555S" version="1.0.0" package_base_path="CMSIS" project_base_path="./">
  <source relative_path="Driver/Include" type="c_include">
    <files mask="Driver_CAN.h"/>
    <files mask="Driver_Common.h"/>
    <files mask="Driver_ETH.h"/>
    <files mask="Driver_ETH_MAC.h"/>
    <files mask="Driver_ETH_PHY.h"/>
    <files mask="Driver_Flash.h"/>
    <files mask="Driver_I2C.h"/>
    <files mask="Driver_MCI.h"/>
    <files mask="Driver_NAND.h"/>
    <files mask="Driver_SAI.h"/>
    <files mask="Driver_SPI.h"/>
    <files mask="Driver_Storage.h"/>
    <files mask="Driver_USART.h"/>
    <files mask="Driver_USB.h"/>
    <files mask="Driver_USBD.h"/>
    <files mask="Driver_USBH.h"/>
    <files mask="Driver_WiFi.h"/>
  </source>
  <source relative_path="Driver/Include/GPIO" type="c_include">
    <files mask="Driver_GPIO.h"/>
  </source>
  <source relative_path="Driver/VIO/Include" type="c_include">
    <files mask="cmsis_vio.h"/>
  </source>
  <source relative_path="Driver/VIO/Source" type="src">
    <files mask="vio.c"/>
    <files mask="vio_memory.c"/>
  </source>
  <source relative_path="Driver/VIO" type="other">
    <files mask="cmsis_vio.scvd"/>
  </source>
  <source relative_path="Core/Include" type="c_include">
    <files mask="cmsis_clang.h"/>
  </source>
  <source relative_path="Core/Include/m-profile" type="c_include">
    <files mask="cmsis_clang_m.h"/>
  </source>
</component>-->
    <component id="component.cmsis_drivers.MIMXRT555S" name="CMSIS driver" brief="CMSIS driver" version="2.0.0" full_name="CMSIS driver" category="Board Support/SDK Project Template" user_visible="true" type="CMSIS_driver" package_base_path="components/cmsis_drivers" project_base_path="CMSIS_drivers">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
    </component>
    <component id="platform.drivers.common.MIMXRT555S" name="common" brief="common Driver" version="2.5.0" full_name="common Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_common.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_common.c"/>
      </source>
      <source relative_path="./" type="src" device_cores="cm33_MIMXRT555S">
        <files mask="fsl_common_arm.c"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm33_MIMXRT555S">
        <files mask="fsl_common_arm.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.wifi_bt_config.template.MIMXRT555S" name="Wi-Fi configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="Wi-Fi configuration template" category="Wireless/NXP Wi-Fi" user_visible="false" type="project_template" package_base_path="components/wifi_bt_module/template" project_base_path="wifi/template">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="./" config="true" type="c_include">
        <files mask="wifi_bt_config.h"/>
      </source>
      <source relative_path="./" config="true" type="src">
        <files mask="wifi_bt_config.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_wifi_bt_config_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="../../../middleware/wifi_nxp" project_relative_path="./" type="c_include"/>
        <include_path relative_path="../../../middleware/wifi_nxp" project_relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.osa_free_rtos.MIMXRT555S" name="nxp wifi osa free_rtos" brief="NXP WLAN OSA" version="1.0.0" full_name="NXP WLAN OSA" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="port/osa" type="c_include">
        <files mask="osa_freertos.h"/>
      </source>
      <source relative_path="port/osa" type="src">
        <files mask="osa_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_osa_free_rtos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="incl/port/osa" type="c_include"/>
        <include_path relative_path="port/osa" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="incl" type="asm_include"/>
        <include_path relative_path="incl/port/osa" type="asm_include"/>
        <include_path relative_path="port/osa" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.osa_thread.MIMXRT555S" name="nxp wifi osa thread" brief="NXP WLAN OSA" version="1.0.0" full_name="NXP WLAN OSA" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="port/osa" type="c_include">
        <files mask="osa_threadx.h"/>
      </source>
      <source relative_path="port/osa" type="src">
        <files mask="osa_threadx.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_osa_thread.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="incl/port/osa" type="c_include"/>
        <include_path relative_path="port/osa" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="incl/port/osa" type="asm_include"/>
        <include_path relative_path="port/osa" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.firmware_download.MIMXRT555S" name="nxp_wireless_firmware_download" brief="NXP WLAN f/w dnld base" version="1.0.0" full_name="NXP WLAN f/w dnld base" category="Wireless/NXP Wi-Fi" user_visible="true" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="incl" type="c_include">
        <files mask="WIFI_IW416_BOARD_AW_AM457_CAL_DATA_EXT.h"/>
      </source>
      <source relative_path="wifidriver/incl" type="c_include">
        <files mask="mlan_main_defs.h"/>
      </source>
      <source relative_path="wifidriver" type="src">
        <files mask="sdio.c"/>
      </source>
      <source relative_path="wifidriver" type="c_include">
        <files mask="sdio.h"/>
      </source>
      <source relative_path="firmware_dnld" type="src">
        <files mask="firmware_dnld.c"/>
      </source>
      <source relative_path="firmware_dnld" type="c_include">
        <files mask="firmware_dnld.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_firmware_download.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="wifidriver" type="c_include"/>
        <include_path relative_path="wifidriver/incl" type="c_include"/>
        <include_path relative_path="firmware_dnld" type="c_include"/>
        <include_path relative_path="sdio_nxp_abs" type="c_include"/>
        <include_path relative_path="sdio_nxp_abs/incl" type="c_include"/>
        <include_path relative_path="fwdnld_intf_abs" type="c_include"/>
        <include_path relative_path="incl" type="asm_include"/>
        <include_path relative_path="wifidriver" type="asm_include"/>
        <include_path relative_path="wifidriver/incl" type="asm_include"/>
        <include_path relative_path="firmware_dnld" type="asm_include"/>
        <include_path relative_path="sdio_nxp_abs" type="asm_include"/>
        <include_path relative_path="sdio_nxp_abs/incl" type="asm_include"/>
        <include_path relative_path="fwdnld_intf_abs" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.net_thread.MIMXRT555S" name="nxp wifi osa thread" brief="NXP WLAN OSA" version="1.0.0" full_name="NXP WLAN OSA" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="incl/port/net" type="c_include">
        <files mask="wm_net.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_net_thread.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="incl/port/osa" type="c_include"/>
        <include_path relative_path="port/osa" type="c_include"/>
        <include_path relative_path="incl/port/net" type="c_include"/>
        <include_path relative_path="port/net/netxduo" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="incl/port/osa" type="asm_include"/>
        <include_path relative_path="port/osa" type="asm_include"/>
        <include_path relative_path="incl/port/net" type="asm_include"/>
        <include_path relative_path="port/net/netxduo" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.fwdnld_intf_abs.MIMXRT555S" name="wifi_nxp_fwdnld_intf_abs" brief="NXP Wi-Fi Interface Abstraction Layer" version="1.3.46" full_name="NXP Firmware Download abstraction layer" category="Wireless/NXP Wi-Fi" user_visible="true" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="fwdnld_intf_abs" type="src">
        <files mask="fwdnld_intf_abs.c"/>
      </source>
      <source relative_path="fwdnld_intf_abs" type="c_include">
        <files mask="fwdnld_intf_abs.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_fwdnld_intf_abs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="fwdnld_intf_abs" type="c_include"/>
        <include_path relative_path="fwdnld_intf_abs" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.wps.MIMXRT555S" name="wifi_nxp_wps" brief="Middlware Wi-Fi WPS" version="1.0.0" full_name="NXP Wi-Fi WPS" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
    </component>
    <component id="middleware.usb_pd.common_header.MIMXRT555S" name="USB PD Common Header" brief="Middleware usb pd common_header" version="2.11.0" full_name="USB PD Common Header" category="USB/USB PD Common Header" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
    </component>
    <component id="middleware.usb_pd.config_header.MIMXRT555S" name="PD Config Header" brief="USB Type-C PD Stack" version="2.11.0" full_name="USB Type-C PD Stack" category="USB/USB Type-C PD Stack" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
    </component>
    <component id="middleware.usb.host.khci_config_header.MIMXRT555S" name="USB host khci config header" brief="USB host khci config header" version="2.11.0" full_name="USB host khci config header" category="USB/USB Host" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
    </component>
    <component id="middleware.usb.host.ohci_config_header.MIMXRT555S" name="USB host ohci config header" brief="USB host ohci config header" version="2.11.0" full_name="USB host ohci config header" category="USB/USB Host" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
    </component>
    <component id="middleware.usb.host.ip3516hs_config_header.MIMXRT555S" name="USB host ip3516hs config header" brief="USB host ip3516hs config header" version="2.11.0" full_name="USB host ip3516hs config header" category="USB/USB Host" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
    </component>
    <component id="middleware.usb.host.ehci_config_header.MIMXRT555S" name="USB host ehci config header" brief="USB host ehci config header" version="2.11.0" full_name="USB host ehci config header" category="USB/USB Host" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
    </component>
    <component id="middleware.usb.device.khci_config_header.MIMXRT555S" name="USB device khci config header" brief="USB device khci config header" version="2.11.0" full_name="USB device khci config header" category="USB/USB Device" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
    </component>
    <component id="middleware.usb.device.ip3511fs_config_header.MIMXRT555S" name="USB device ip3511fs config header" brief="USB device ip3511fs config header" version="2.11.0" full_name="USB device ip3511fs config header" category="USB/USB Device" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
    </component>
    <component id="middleware.usb.device.ip3511hs_config_header.MIMXRT555S" name="USB device ip3511hs config header" brief="USB device ip3511hs config header" version="2.11.0" full_name="USB device ip3511hs config header" category="USB/USB Device" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
    </component>
    <component id="middleware.usb.device.ehci_config_header.MIMXRT555S" name="USB device ehci config header" brief="USB device ehci config header" version="2.11.0" full_name="USB device ehci config header" category="USB/USB Device" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
    </component>
    <component id="middleware.usb.phydcd_config_header.MIMXRT555S" name="USB device phydcd config header" brief="USB device phydcd config header" version="2.11.0" full_name="USB device phydcd config header" category="USB/USB DCD" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
    </component>
    <component id="middleware.usb.hsdcd_config_header.MIMXRT555S" name="USB device hsdcd config header" brief="USB device hsdcd config header" version="2.11.0" full_name="USB device hsdcd config header" category="USB/USB DCD" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
    </component>
    <component id="middleware.tinycbor.MIMXRT555S" name="tinycbor" brief="Concise Binary Object Representation (CBOR) Library" version="0.6.0" full_name="TinyCBOR" category="TinyCBOR/TinyCBOR" user_visible="true" type="middleware" package_base_path="middleware/tinycbor" project_base_path="tinycbor">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="src" type="c_include">
        <files mask="cbor.h"/>
        <files mask="cborinternal_p.h"/>
        <files mask="compilersupport_p.h"/>
        <files mask="tinycbor-version.h"/>
        <files mask="utf8_p.h"/>
      </source>
      <source relative_path="src" type="src">
        <files mask="cborencoder.c"/>
        <files mask="cborencoder_close_container_checked.c"/>
        <files mask="cborerrorstrings.c"/>
        <files mask="cborparser.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tinycbor.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src" type="c_include"/>
        <include_path relative_path="src" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.common.MIMXRT555S" name="sdmmc_common" brief="Middleware sdmmc common" version="2.3.0" full_name="SDMMC common stack" category="Memories/SDMMC Stack" user_visible="false" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="common" type="c_include">
        <files mask="fsl_sdmmc_spec.h"/>
        <files mask="fsl_sdmmc_common.h"/>
      </source>
      <source relative_path="common" type="src">
        <files mask="fsl_sdmmc_common.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_common.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="common" type="c_include"/>
        <include_path relative_path="common" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.sdhc.template.MIMXRT555S" name="SDMMC configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="SDMMC configuration template" category="Memories/SDMMC Stack" user_visible="false" type="project_template" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="template/sdhc" config="true" type="src">
        <files mask="sdmmc_config.c"/>
      </source>
      <source relative_path="template/sdhc" config="true" type="c_include">
        <files mask="sdmmc_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_sdhc_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/sdhc" type="c_include"/>
        <include_path relative_path="template/sdhc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.sdif.template.MIMXRT555S" name="SDMMC configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="SDMMC configuration template" category="Memories/SDMMC Stack" user_visible="false" type="project_template" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="template/sdif" config="true" type="src">
        <files mask="sdmmc_config.c"/>
      </source>
      <source relative_path="template/sdif" config="true" type="c_include">
        <files mask="sdmmc_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_sdif_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/sdif" type="c_include"/>
        <include_path relative_path="template/sdif" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.usdhc.template.MIMXRT555S" name="SDMMC configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="SDMMC configuration template" category="Memories/SDMMC Stack" user_visible="false" type="project_template" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="template/usdhc" config="true" type="src">
        <files mask="sdmmc_config.c"/>
      </source>
      <source relative_path="template/usdhc" config="true" type="c_include">
        <files mask="sdmmc_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_usdhc_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/usdhc" type="c_include"/>
        <include_path relative_path="template/usdhc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.pkcs11.MIMXRT555S" name="pkcs11" brief="Public Key Cryptography Standard #11 defines generic cryptographic token interface." version="2.40.1" full_name="pkcs11" category="AWS IoT/OASIS PKCS Standard 11" user_visible="true" type="middleware" package_base_path="middleware/pkcs11" project_base_path="pkcs11">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="README.md"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="pkcs11t.h"/>
        <files mask="pkcs11f.h"/>
        <files mask="pkcs11.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_pkcs11.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls.port.els_option.MIMXRT555S" name="mbedtls_els_option" brief="mbedTLS port library for ELS" version="2.28.8" full_name="MbedTLS MCUX SDK port layer via ELS" category="Security/mbedTLS library" user_visible="true" type="middleware" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
    </component>
    <component id="middleware.mbedtls.port.ksdk_option.MIMXRT555S" name="mbedtls_ksdk_option" brief="mbedTLS port library for KPSDK" version="2.28.8" full_name="MbedTLS MCUX SDK port layer option" category="Security/mbedTLS library" user_visible="true" type="middleware" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
    </component>
    <!--<component id="container.middleware.mbedtls.unused_files.MIMXRT555S" name="unused_files" version="2.28.8" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
  <source exclude="true" relative_path=".github" type="other">
    <files mask="issue_template.md" hidden="true"/>
    <files mask="pull_request_template.md" hidden="true"/>
  </source>
  <source exclude="true" relative_path="3rdparty" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="3rdparty" type="asm_include">
    <files mask="Makefile.inc" hidden="true"/>
  </source>
  <source exclude="true" relative_path="ChangeLog.d" type="other">
    <files mask="00README.md" hidden="true"/>
  </source>
  <source exclude="true" relative_path="configs" type="doc">
    <files mask="README.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="configs" type="c_include">
    <files mask="config-ccm-psk-dtls1_2.h" hidden="true"/>
    <files mask="config-ccm-psk-tls1_2.h" hidden="true"/>
    <files mask="config-mini-tls1_1.h" hidden="true"/>
    <files mask="config-no-entropy.h" hidden="true"/>
    <files mask="config-suite-b.h" hidden="true"/>
    <files mask="config-symmetric-only.h" hidden="true"/>
    <files mask="config-thread.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="docs" type="script">
    <files mask="conf.py" hidden="true"/>
  </source>
  <source exclude="true" relative_path="docs" type="other">
    <files mask="index.rst" hidden="true"/>
    <files mask="requirements.in" hidden="true"/>
    <files mask="use-psa-crypto.md" hidden="true"/>
  </source>
  <source exclude="true" relative_path="docs" type="doc">
    <files mask="requirements.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="doxygen" type="other">
    <files mask="mbedtls.doxyfile" hidden="true"/>
  </source>
  <source exclude="true" relative_path="doxygen/input" type="c_include">
    <files mask="doc_encdec.h" hidden="true"/>
    <files mask="doc_hashing.h" hidden="true"/>
    <files mask="doc_mainpage.h" hidden="true"/>
    <files mask="doc_rng.h" hidden="true"/>
    <files mask="doc_ssltls.h" hidden="true"/>
    <files mask="doc_tcpip.h" hidden="true"/>
    <files mask="doc_x509.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="include" type="other">
    <files mask=".gitignore" hidden="true"/>
  </source>
  <source exclude="true" relative_path="include" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="library" type="other">
    <files mask=".gitignore" hidden="true"/>
    <files mask="Makefile" hidden="true"/>
  </source>
  <source exclude="true" relative_path="library" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="pkgconfig" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="pkgconfig" type="script">
    <files mask="JoinPaths.cmake" hidden="true"/>
  </source>
  <source exclude="true" relative_path="pkgconfig" type="other">
    <files mask="mbedcrypto.pc.in" hidden="true"/>
    <files mask="mbedtls.pc.in" hidden="true"/>
    <files mask="mbedx509.pc.in" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs" type="other">
    <files mask="README.md" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs" type="script">
    <files mask="demo_common.sh" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs" type="src">
    <files mask="wince_main.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/aes" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/aes" type="src">
    <files mask="crypt_and_hash.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/fuzz" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/fuzz" type="other">
    <files mask="README.md" hidden="true"/>
    <files mask="fuzz_client.options" hidden="true"/>
    <files mask="fuzz_dtlsclient.options" hidden="true"/>
    <files mask="fuzz_dtlsserver.options" hidden="true"/>
    <files mask="fuzz_privkey.options" hidden="true"/>
    <files mask="fuzz_pubkey.options" hidden="true"/>
    <files mask="fuzz_server.options" hidden="true"/>
    <files mask="fuzz_x509crl.options" hidden="true"/>
    <files mask="fuzz_x509crt.options" hidden="true"/>
    <files mask="fuzz_x509csr.options" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/fuzz" type="src">
    <files mask="common.c" hidden="true"/>
    <files mask="fuzz_client.c" hidden="true"/>
    <files mask="fuzz_dtlsclient.c" hidden="true"/>
    <files mask="fuzz_dtlsserver.c" hidden="true"/>
    <files mask="fuzz_privkey.c" hidden="true"/>
    <files mask="fuzz_pubkey.c" hidden="true"/>
    <files mask="fuzz_server.c" hidden="true"/>
    <files mask="fuzz_x509crl.c" hidden="true"/>
    <files mask="fuzz_x509crt.c" hidden="true"/>
    <files mask="fuzz_x509csr.c" hidden="true"/>
    <files mask="onefile.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/fuzz" type="c_include">
    <files mask="common.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/hash" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/hash" type="src">
    <files mask="generic_sum.c" hidden="true"/>
    <files mask="hello.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/pkey" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
    <files mask="dh_prime.txt" hidden="true"/>
    <files mask="rsa_priv.txt" hidden="true"/>
    <files mask="rsa_pub.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/pkey" type="src">
    <files mask="dh_client.c" hidden="true"/>
    <files mask="dh_genprime.c" hidden="true"/>
    <files mask="dh_server.c" hidden="true"/>
    <files mask="ecdh_curve25519.c" hidden="true"/>
    <files mask="ecdsa.c" hidden="true"/>
    <files mask="gen_key.c" hidden="true"/>
    <files mask="key_app.c" hidden="true"/>
    <files mask="key_app_writer.c" hidden="true"/>
    <files mask="mpi_demo.c" hidden="true"/>
    <files mask="pk_decrypt.c" hidden="true"/>
    <files mask="pk_encrypt.c" hidden="true"/>
    <files mask="pk_sign.c" hidden="true"/>
    <files mask="pk_verify.c" hidden="true"/>
    <files mask="rsa_decrypt.c" hidden="true"/>
    <files mask="rsa_encrypt.c" hidden="true"/>
    <files mask="rsa_genkey.c" hidden="true"/>
    <files mask="rsa_sign.c" hidden="true"/>
    <files mask="rsa_sign_pss.c" hidden="true"/>
    <files mask="rsa_verify.c" hidden="true"/>
    <files mask="rsa_verify_pss.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/random" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/random" type="src">
    <files mask="gen_entropy.c" hidden="true"/>
    <files mask="gen_random_ctr_drbg.c" hidden="true"/>
    <files mask="gen_random_havege.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/ssl" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/ssl" type="src">
    <files mask="dtls_client.c" hidden="true"/>
    <files mask="dtls_server.c" hidden="true"/>
    <files mask="mini_client.c" hidden="true"/>
    <files mask="ssl_client1.c" hidden="true"/>
    <files mask="ssl_client2.c" hidden="true"/>
    <files mask="ssl_context_info.c" hidden="true"/>
    <files mask="ssl_fork_server.c" hidden="true"/>
    <files mask="ssl_mail_client.c" hidden="true"/>
    <files mask="ssl_pthread_server.c" hidden="true"/>
    <files mask="ssl_server.c" hidden="true"/>
    <files mask="ssl_server2.c" hidden="true"/>
    <files mask="ssl_test_common_source.c" hidden="true"/>
    <files mask="ssl_test_lib.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/ssl" type="c_include">
    <files mask="ssl_test_lib.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/test" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/test" type="src">
    <files mask="benchmark.c" hidden="true"/>
    <files mask="dlopen.c" hidden="true"/>
    <files mask="metatest.c" hidden="true"/>
    <files mask="query_compile_time_config.c" hidden="true"/>
    <files mask="query_config.c" hidden="true"/>
    <files mask="selftest.c" hidden="true"/>
    <files mask="udp_proxy.c" hidden="true"/>
    <files mask="zeroize.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/test" type="script">
    <files mask="dlopen_demo.sh" hidden="true"/>
    <files mask="generate_cpp_dummy_build.sh" hidden="true"/>
    <files mask="udp_proxy_wrapper.sh" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/test" type="c_include">
    <files mask="query_config.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/util" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/util" type="src">
    <files mask="pem2der.c" hidden="true"/>
    <files mask="strerror.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/x509" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/x509" type="src">
    <files mask="cert_app.c" hidden="true"/>
    <files mask="cert_req.c" hidden="true"/>
    <files mask="cert_write.c" hidden="true"/>
    <files mask="crl_app.c" hidden="true"/>
    <files mask="load_roots.c" hidden="true"/>
    <files mask="req_app.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="scripts" type="script">
    <files mask="abi_check.py" hidden="true"/>
    <files mask="apidoc_full.sh" hidden="true"/>
    <files mask="assemble_changelog.py" hidden="true"/>
    <files mask="bump_version.sh" hidden="true"/>
    <files mask="code_style.py" hidden="true"/>
    <files mask="config.py" hidden="true"/>
    <files mask="ecc-heap.sh" hidden="true"/>
    <files mask="footprint.sh" hidden="true"/>
    <files mask="generate_psa_constants.py" hidden="true"/>
    <files mask="lcov.sh" hidden="true"/>
    <files mask="memory.sh" hidden="true"/>
    <files mask="min_requirements.py" hidden="true"/>
    <files mask="output_env.sh" hidden="true"/>
    <files mask="tmp_ignore_makefiles.sh" hidden="true"/>
    <files mask="windows_msbuild.bat" hidden="true"/>
  </source>
  <source exclude="true" relative_path="scripts" type="doc">
    <files mask="ci.requirements.txt" hidden="true"/>
    <files mask="maintainer.requirements.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="scripts" type="other">
    <files mask="config.pl" hidden="true"/>
    <files mask="generate_errors.pl" hidden="true"/>
    <files mask="generate_features.pl" hidden="true"/>
    <files mask="generate_query_config.pl" hidden="true"/>
    <files mask="generate_visualc_files.pl" hidden="true"/>
    <files mask="massif_max.pl" hidden="true"/>
    <files mask="rename.pl" hidden="true"/>
  </source>
  <source exclude="true" relative_path="scripts/data_files" type="other">
    <files mask="error.fmt" hidden="true"/>
    <files mask="query_config.fmt" hidden="true"/>
    <files mask="version_features.fmt" hidden="true"/>
    <files mask="vs2010-app-template.vcxproj" hidden="true"/>
    <files mask="vs2010-main-template.vcxproj" hidden="true"/>
    <files mask="vs2010-sln-template.sln" hidden="true"/>
    <files mask="vs6-app-template.dsp" hidden="true"/>
    <files mask="vs6-main-template.dsp" hidden="true"/>
    <files mask="vs6-workspace-template.dsw" hidden="true"/>
  </source>
  <source exclude="true" relative_path="scripts/data_files" type="doc">
    <files mask="rename-1.3-2.0.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="scripts/mbedtls_dev" type="script">
    <files mask="__init__.py" hidden="true"/>
    <files mask="asymmetric_key_data.py" hidden="true"/>
    <files mask="build_tree.py" hidden="true"/>
    <files mask="c_build_helper.py" hidden="true"/>
    <files mask="c_parsing_helper.py" hidden="true"/>
    <files mask="c_wrapper_generator.py" hidden="true"/>
    <files mask="crypto_data_tests.py" hidden="true"/>
    <files mask="crypto_knowledge.py" hidden="true"/>
    <files mask="macro_collector.py" hidden="true"/>
    <files mask="psa_information.py" hidden="true"/>
    <files mask="psa_storage.py" hidden="true"/>
    <files mask="test_case.py" hidden="true"/>
    <files mask="test_data_generation.py" hidden="true"/>
    <files mask="typing_util.py" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests" type="other">
    <files mask="Makefile" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/.jenkins" type="other">
    <files mask="Jenkinsfile" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/data_files" type="other">
    <files mask="Makefile" hidden="true"/>
    <files mask="hash_file_1" hidden="true"/>
    <files mask="hash_file_2" hidden="true"/>
    <files mask="hash_file_3" hidden="true"/>
    <files mask="hash_file_4" hidden="true"/>
    <files mask="hash_file_5" hidden="true"/>
    <files mask="mpi_16" hidden="true"/>
    <files mask="mpi_too_big" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/data_files/dir3" type="other">
    <files mask="Readme" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/data_files/dir4" type="other">
    <files mask="Readme" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/git-scripts" type="other">
    <files mask="README.md" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/git-scripts" type="script">
    <files mask="pre-commit.sh" hidden="true"/>
    <files mask="pre-push.sh" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/scripts" type="script">
    <files mask="all-in-docker.sh" hidden="true"/>
    <files mask="all.sh" hidden="true"/>
    <files mask="analyze_outcomes.py" hidden="true"/>
    <files mask="basic-build-test.sh" hidden="true"/>
    <files mask="basic-in-docker.sh" hidden="true"/>
    <files mask="check-generated-files.sh" hidden="true"/>
    <files mask="check-python-files.sh" hidden="true"/>
    <files mask="check_files.py" hidden="true"/>
    <files mask="check_names.py" hidden="true"/>
    <files mask="check_test_cases.py" hidden="true"/>
    <files mask="depends.py" hidden="true"/>
    <files mask="docker_env.sh" hidden="true"/>
    <files mask="doxygen.sh" hidden="true"/>
    <files mask="generate-afl-tests.sh" hidden="true"/>
    <files mask="generate_bignum_tests.py" hidden="true"/>
    <files mask="generate_psa_tests.py" hidden="true"/>
    <files mask="generate_psa_wrappers.py" hidden="true"/>
    <files mask="generate_server9_bad_saltlen.py" hidden="true"/>
    <files mask="generate_test_code.py" hidden="true"/>
    <files mask="list-identifiers.sh" hidden="true"/>
    <files mask="list_internal_identifiers.py" hidden="true"/>
    <files mask="psa_collect_statuses.py" hidden="true"/>
    <files mask="run-metatests.sh" hidden="true"/>
    <files mask="run_demos.py" hidden="true"/>
    <files mask="scripts_path.py" hidden="true"/>
    <files mask="set_psa_test_dependencies.py" hidden="true"/>
    <files mask="test_config_script.py" hidden="true"/>
    <files mask="test_generate_test_code.py" hidden="true"/>
    <files mask="test_psa_compliance.py" hidden="true"/>
    <files mask="test_psa_constant_names.py" hidden="true"/>
    <files mask="travis-log-failure.sh" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/scripts" type="other">
    <files mask="check-doxy-blocks.pl" hidden="true"/>
    <files mask="gen_ctr_drbg.pl" hidden="true"/>
    <files mask="gen_gcm_decrypt.pl" hidden="true"/>
    <files mask="gen_gcm_encrypt.pl" hidden="true"/>
    <files mask="gen_pkcs1_v21_sign_verify.pl" hidden="true"/>
    <files mask="recursion.pl" hidden="true"/>
    <files mask="run-test-suites.pl" hidden="true"/>
    <files mask="tcp_client.pl" hidden="true"/>
    <files mask="test-ref-configs.pl" hidden="true"/>
    <files mask="test_zeroize.gdb" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/src" type="src">
    <files mask="asn1_helpers.c" hidden="true"/>
    <files mask="fake_external_rng_for_test.c" hidden="true"/>
    <files mask="helpers.c" hidden="true"/>
    <files mask="psa_crypto_helpers.c" hidden="true"/>
    <files mask="psa_exercise_key.c" hidden="true"/>
    <files mask="psa_memory_poisoning_wrappers.c" hidden="true"/>
    <files mask="psa_test_wrappers.c" hidden="true"/>
    <files mask="random.c" hidden="true"/>
    <files mask="test_memory.c" hidden="true"/>
    <files mask="threading_helpers.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/suites" type="other">
    <files mask="helpers.function" hidden="true"/>
    <files mask="host_test.function" hidden="true"/>
    <files mask="main_test.function" hidden="true"/>
    <files mask="test_suite_aes.cbc.data" hidden="true"/>
    <files mask="test_suite_aes.cfb.data" hidden="true"/>
    <files mask="test_suite_aes.ecb.data" hidden="true"/>
    <files mask="test_suite_aes.function" hidden="true"/>
    <files mask="test_suite_aes.ofb.data" hidden="true"/>
    <files mask="test_suite_aes.rest.data" hidden="true"/>
    <files mask="test_suite_aes.xts.data" hidden="true"/>
    <files mask="test_suite_arc4.data" hidden="true"/>
    <files mask="test_suite_arc4.function" hidden="true"/>
    <files mask="test_suite_aria.data" hidden="true"/>
    <files mask="test_suite_aria.function" hidden="true"/>
    <files mask="test_suite_asn1parse.data" hidden="true"/>
    <files mask="test_suite_asn1parse.function" hidden="true"/>
    <files mask="test_suite_asn1write.data" hidden="true"/>
    <files mask="test_suite_asn1write.function" hidden="true"/>
    <files mask="test_suite_base64.data" hidden="true"/>
    <files mask="test_suite_base64.function" hidden="true"/>
    <files mask="test_suite_bignum.function" hidden="true"/>
    <files mask="test_suite_bignum.generated.data" hidden="true"/>
    <files mask="test_suite_bignum.misc.data" hidden="true"/>
    <files mask="test_suite_blowfish.data" hidden="true"/>
    <files mask="test_suite_blowfish.function" hidden="true"/>
    <files mask="test_suite_camellia.data" hidden="true"/>
    <files mask="test_suite_camellia.function" hidden="true"/>
    <files mask="test_suite_ccm.data" hidden="true"/>
    <files mask="test_suite_ccm.function" hidden="true"/>
    <files mask="test_suite_chacha20.data" hidden="true"/>
    <files mask="test_suite_chacha20.function" hidden="true"/>
    <files mask="test_suite_chachapoly.data" hidden="true"/>
    <files mask="test_suite_chachapoly.function" hidden="true"/>
    <files mask="test_suite_cipher.aes.data" hidden="true"/>
    <files mask="test_suite_cipher.arc4.data" hidden="true"/>
    <files mask="test_suite_cipher.aria.data" hidden="true"/>
    <files mask="test_suite_cipher.blowfish.data" hidden="true"/>
    <files mask="test_suite_cipher.camellia.data" hidden="true"/>
    <files mask="test_suite_cipher.ccm.data" hidden="true"/>
    <files mask="test_suite_cipher.chacha20.data" hidden="true"/>
    <files mask="test_suite_cipher.chachapoly.data" hidden="true"/>
    <files mask="test_suite_cipher.des.data" hidden="true"/>
    <files mask="test_suite_cipher.function" hidden="true"/>
    <files mask="test_suite_cipher.gcm.data" hidden="true"/>
    <files mask="test_suite_cipher.misc.data" hidden="true"/>
    <files mask="test_suite_cipher.nist_kw.data" hidden="true"/>
    <files mask="test_suite_cipher.null.data" hidden="true"/>
    <files mask="test_suite_cipher.padding.data" hidden="true"/>
    <files mask="test_suite_cmac.data" hidden="true"/>
    <files mask="test_suite_cmac.function" hidden="true"/>
    <files mask="test_suite_constant_time.data" hidden="true"/>
    <files mask="test_suite_constant_time.function" hidden="true"/>
    <files mask="test_suite_constant_time_hmac.data" hidden="true"/>
    <files mask="test_suite_constant_time_hmac.function" hidden="true"/>
    <files mask="test_suite_ctr_drbg.data" hidden="true"/>
    <files mask="test_suite_ctr_drbg.function" hidden="true"/>
    <files mask="test_suite_debug.data" hidden="true"/>
    <files mask="test_suite_debug.function" hidden="true"/>
    <files mask="test_suite_des.data" hidden="true"/>
    <files mask="test_suite_des.function" hidden="true"/>
    <files mask="test_suite_dhm.data" hidden="true"/>
    <files mask="test_suite_dhm.function" hidden="true"/>
    <files mask="test_suite_ecdh.data" hidden="true"/>
    <files mask="test_suite_ecdh.function" hidden="true"/>
    <files mask="test_suite_ecdsa.data" hidden="true"/>
    <files mask="test_suite_ecdsa.function" hidden="true"/>
    <files mask="test_suite_ecjpake.data" hidden="true"/>
    <files mask="test_suite_ecjpake.function" hidden="true"/>
    <files mask="test_suite_ecp.data" hidden="true"/>
    <files mask="test_suite_ecp.function" hidden="true"/>
    <files mask="test_suite_entropy.data" hidden="true"/>
    <files mask="test_suite_entropy.function" hidden="true"/>
    <files mask="test_suite_error.data" hidden="true"/>
    <files mask="test_suite_error.function" hidden="true"/>
    <files mask="test_suite_gcm.aes128_de.data" hidden="true"/>
    <files mask="test_suite_gcm.aes128_en.data" hidden="true"/>
    <files mask="test_suite_gcm.aes192_de.data" hidden="true"/>
    <files mask="test_suite_gcm.aes192_en.data" hidden="true"/>
    <files mask="test_suite_gcm.aes256_de.data" hidden="true"/>
    <files mask="test_suite_gcm.aes256_en.data" hidden="true"/>
    <files mask="test_suite_gcm.camellia.data" hidden="true"/>
    <files mask="test_suite_gcm.function" hidden="true"/>
    <files mask="test_suite_gcm.misc.data" hidden="true"/>
    <files mask="test_suite_hkdf.data" hidden="true"/>
    <files mask="test_suite_hkdf.function" hidden="true"/>
    <files mask="test_suite_hmac_drbg.function" hidden="true"/>
    <files mask="test_suite_hmac_drbg.misc.data" hidden="true"/>
    <files mask="test_suite_hmac_drbg.no_reseed.data" hidden="true"/>
    <files mask="test_suite_hmac_drbg.nopr.data" hidden="true"/>
    <files mask="test_suite_hmac_drbg.pr.data" hidden="true"/>
    <files mask="test_suite_md.data" hidden="true"/>
    <files mask="test_suite_md.function" hidden="true"/>
    <files mask="test_suite_mdx.data" hidden="true"/>
    <files mask="test_suite_mdx.function" hidden="true"/>
    <files mask="test_suite_memory_buffer_alloc.data" hidden="true"/>
    <files mask="test_suite_memory_buffer_alloc.function" hidden="true"/>
    <files mask="test_suite_mps.data" hidden="true"/>
    <files mask="test_suite_mps.function" hidden="true"/>
    <files mask="test_suite_net.data" hidden="true"/>
    <files mask="test_suite_net.function" hidden="true"/>
    <files mask="test_suite_nist_kw.data" hidden="true"/>
    <files mask="test_suite_nist_kw.function" hidden="true"/>
    <files mask="test_suite_oid.data" hidden="true"/>
    <files mask="test_suite_oid.function" hidden="true"/>
    <files mask="test_suite_pem.data" hidden="true"/>
    <files mask="test_suite_pem.function" hidden="true"/>
    <files mask="test_suite_pk.data" hidden="true"/>
    <files mask="test_suite_pk.function" hidden="true"/>
    <files mask="test_suite_pkcs12.data" hidden="true"/>
    <files mask="test_suite_pkcs12.function" hidden="true"/>
    <files mask="test_suite_pkcs1_v15.data" hidden="true"/>
    <files mask="test_suite_pkcs1_v15.function" hidden="true"/>
    <files mask="test_suite_pkcs1_v21.data" hidden="true"/>
    <files mask="test_suite_pkcs1_v21.function" hidden="true"/>
    <files mask="test_suite_pkcs5.data" hidden="true"/>
    <files mask="test_suite_pkcs5.function" hidden="true"/>
    <files mask="test_suite_pkparse.data" hidden="true"/>
    <files mask="test_suite_pkparse.function" hidden="true"/>
    <files mask="test_suite_pkwrite.data" hidden="true"/>
    <files mask="test_suite_pkwrite.function" hidden="true"/>
    <files mask="test_suite_platform_printf.data" hidden="true"/>
    <files mask="test_suite_platform_printf.function" hidden="true"/>
    <files mask="test_suite_poly1305.data" hidden="true"/>
    <files mask="test_suite_poly1305.function" hidden="true"/>
    <files mask="test_suite_psa_crypto.data" hidden="true"/>
    <files mask="test_suite_psa_crypto.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_attributes.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_attributes.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_driver_wrappers.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_driver_wrappers.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_entropy.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_entropy.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_generate_key.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_generate_key.generated.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_hash.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_hash.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_init.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_init.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_low_hash.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_low_hash.generated.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_memory.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_memory.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_metadata.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_metadata.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_not_supported.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_not_supported.generated.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_not_supported.misc.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_op_fail.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_op_fail.generated.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_op_fail.misc.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_persistent_key.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_persistent_key.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_se_driver_hal.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_se_driver_hal.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_se_driver_hal_mocks.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_se_driver_hal_mocks.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_slot_management.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_slot_management.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_storage_format.current.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_storage_format.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_storage_format.misc.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_storage_format.v0.data" hidden="true"/>
    <files mask="test_suite_psa_its.data" hidden="true"/>
    <files mask="test_suite_psa_its.function" hidden="true"/>
    <files mask="test_suite_random.data" hidden="true"/>
    <files mask="test_suite_random.function" hidden="true"/>
    <files mask="test_suite_rsa.data" hidden="true"/>
    <files mask="test_suite_rsa.function" hidden="true"/>
    <files mask="test_suite_shax.data" hidden="true"/>
    <files mask="test_suite_shax.function" hidden="true"/>
    <files mask="test_suite_ssl.data" hidden="true"/>
    <files mask="test_suite_ssl.function" hidden="true"/>
    <files mask="test_suite_ssl_decrypt.function" hidden="true"/>
    <files mask="test_suite_ssl_decrypt.misc.data" hidden="true"/>
    <files mask="test_suite_test_helpers.data" hidden="true"/>
    <files mask="test_suite_test_helpers.function" hidden="true"/>
    <files mask="test_suite_timing.data" hidden="true"/>
    <files mask="test_suite_timing.function" hidden="true"/>
    <files mask="test_suite_version.data" hidden="true"/>
    <files mask="test_suite_version.function" hidden="true"/>
    <files mask="test_suite_x509parse.data" hidden="true"/>
    <files mask="test_suite_x509parse.function" hidden="true"/>
    <files mask="test_suite_x509write.data" hidden="true"/>
    <files mask="test_suite_x509write.function" hidden="true"/>
    <files mask="test_suite_xtea.data" hidden="true"/>
    <files mask="test_suite_xtea.function" hidden="true"/>
  </source>
  <source exclude="true" relative_path="visualc/VS2010" type="other">
    <files mask="benchmark.vcxproj" hidden="true"/>
    <files mask="cert_app.vcxproj" hidden="true"/>
    <files mask="cert_req.vcxproj" hidden="true"/>
    <files mask="cert_write.vcxproj" hidden="true"/>
    <files mask="crl_app.vcxproj" hidden="true"/>
    <files mask="crypt_and_hash.vcxproj" hidden="true"/>
    <files mask="crypto_examples.vcxproj" hidden="true"/>
    <files mask="dh_client.vcxproj" hidden="true"/>
    <files mask="dh_genprime.vcxproj" hidden="true"/>
    <files mask="dh_server.vcxproj" hidden="true"/>
    <files mask="dtls_client.vcxproj" hidden="true"/>
    <files mask="dtls_server.vcxproj" hidden="true"/>
    <files mask="ecdh_curve25519.vcxproj" hidden="true"/>
    <files mask="ecdsa.vcxproj" hidden="true"/>
    <files mask="gen_entropy.vcxproj" hidden="true"/>
    <files mask="gen_key.vcxproj" hidden="true"/>
    <files mask="gen_random_ctr_drbg.vcxproj" hidden="true"/>
    <files mask="gen_random_havege.vcxproj" hidden="true"/>
    <files mask="generic_sum.vcxproj" hidden="true"/>
    <files mask="hello.vcxproj" hidden="true"/>
    <files mask="key_app.vcxproj" hidden="true"/>
    <files mask="key_app_writer.vcxproj" hidden="true"/>
    <files mask="key_ladder_demo.vcxproj" hidden="true"/>
    <files mask="load_roots.vcxproj" hidden="true"/>
    <files mask="mbedTLS.sln" hidden="true"/>
    <files mask="mbedTLS.vcxproj" hidden="true"/>
    <files mask="metatest.vcxproj" hidden="true"/>
    <files mask="mini_client.vcxproj" hidden="true"/>
    <files mask="mpi_demo.vcxproj" hidden="true"/>
    <files mask="pem2der.vcxproj" hidden="true"/>
    <files mask="pk_decrypt.vcxproj" hidden="true"/>
    <files mask="pk_encrypt.vcxproj" hidden="true"/>
    <files mask="pk_sign.vcxproj" hidden="true"/>
    <files mask="pk_verify.vcxproj" hidden="true"/>
    <files mask="psa_constant_names.vcxproj" hidden="true"/>
    <files mask="query_compile_time_config.vcxproj" hidden="true"/>
    <files mask="req_app.vcxproj" hidden="true"/>
    <files mask="rsa_decrypt.vcxproj" hidden="true"/>
    <files mask="rsa_encrypt.vcxproj" hidden="true"/>
    <files mask="rsa_genkey.vcxproj" hidden="true"/>
    <files mask="rsa_sign.vcxproj" hidden="true"/>
    <files mask="rsa_sign_pss.vcxproj" hidden="true"/>
    <files mask="rsa_verify.vcxproj" hidden="true"/>
    <files mask="rsa_verify_pss.vcxproj" hidden="true"/>
    <files mask="selftest.vcxproj" hidden="true"/>
    <files mask="ssl_client1.vcxproj" hidden="true"/>
    <files mask="ssl_client2.vcxproj" hidden="true"/>
    <files mask="ssl_context_info.vcxproj" hidden="true"/>
    <files mask="ssl_fork_server.vcxproj" hidden="true"/>
    <files mask="ssl_mail_client.vcxproj" hidden="true"/>
    <files mask="ssl_server.vcxproj" hidden="true"/>
    <files mask="ssl_server2.vcxproj" hidden="true"/>
    <files mask="strerror.vcxproj" hidden="true"/>
    <files mask="udp_proxy.vcxproj" hidden="true"/>
    <files mask="zeroize.vcxproj" hidden="true"/>
  </source>
  <source exclude="true" relative_path="./" type="other">
    <files mask="BRANCHES.md" hidden="true"/>
    <files mask="BUGS.md" hidden="true"/>
    <files mask="CONTRIBUTING.md" hidden="true"/>
    <files mask="DartConfiguration.tcl" hidden="true"/>
    <files mask="README.md" hidden="true"/>
    <files mask="SECURITY.md" hidden="true"/>
    <files mask="SUPPORT.md" hidden="true"/>
    <files mask="ChangeLog" hidden="true"/>
    <files mask="Kconfig" hidden="true"/>
    <files mask="LICENSE" hidden="true"/>
    <files mask="Makefile" hidden="true"/>
  </source>
  <source exclude="true" relative_path="./" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
    <files mask="ChangeLogKSDK.txt" hidden="true"/>
    <files mask="dco.txt" hidden="true"/>
    <files mask="mbeTLS_for_Kinetis_SDK_v2.0_readme.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="./" type="script">
    <files mask="mcux.cmake" hidden="true"/>
  </source>
</component>-->
    <component id="middleware.mbedtls.tests.MIMXRT555S" name="mbedtls_tests" brief="mbedTLS test suite" version="2.28.8" full_name="MbedTLS open source Crypto library" category="Security/mbedTLS library" user_visible="false" type="middleware" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <defines>
        <define name="MBEDTLS_CONFIG_FILE" value="'&quot;mcux_mbedtls_testsuite_config.h&quot;'"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="tests/src" type="src">
        <files mask="asn1_helpers.c"/>
        <files mask="helpers.c"/>
        <files mask="psa_crypto_helpers.c"/>
        <files mask="psa_exercise_key.c"/>
        <files mask="random.c"/>
        <files mask="threading_helpers.c"/>
        <files mask="fake_external_rng_for_test.c"/>
      </source>
      <source relative_path="tests/src/test_helpers" type="src">
        <files mask="ssl_helpers.c"/>
      </source>
      <source relative_path="tests/include/test" type="c_include">
        <files mask="arguments.h"/>
        <files mask="asn1_helpers.h"/>
        <files mask="constant_flow.h"/>
        <files mask="fake_external_rng_for_test.h"/>
        <files mask="helpers.h"/>
        <files mask="macros.h"/>
        <files mask="psa_crypto_helpers.h"/>
        <files mask="psa_exercise_key.h"/>
        <files mask="psa_helpers.h"/>
        <files mask="random.h"/>
        <files mask="ssl_helpers.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mbedtls_tests.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="tests/include/test" type="c_include"/>
        <include_path relative_path="tests/include" type="c_include"/>
        <include_path relative_path="tests/include/test" type="asm_include"/>
        <include_path relative_path="tests/include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls.3rdparty.MIMXRT555S" name="mbedtls_3rdparty" brief="mbedTLS 3rdparty code" version="2.28.8" full_name="MbedTLS open source Crypto library 3rdparty" category="Security/mbedTLS library" user_visible="false" type="middleware" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="3rdparty" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="3rdparty" type="asm_include">
        <files mask="Makefile.inc"/>
      </source>
      <source relative_path="3rdparty/everest" type="doc">
        <files mask="CMakeLists.txt"/>
        <files mask="README.md"/>
      </source>
      <source relative_path="3rdparty/everest" type="asm_include">
        <files mask="Makefile.inc"/>
      </source>
      <source relative_path="3rdparty/everest/include/everest" type="c_include">
        <files mask="Hacl_Curve25519.h"/>
        <files mask="everest.h"/>
        <files mask="kremlib.h"/>
        <files mask="x25519.h"/>
      </source>
      <source relative_path="3rdparty/everest/include/everest/kremlib" type="c_include">
        <files mask="FStar_UInt128.h"/>
        <files mask="FStar_UInt64_FStar_UInt32_FStar_UInt16_FStar_UInt8.h"/>
      </source>
      <source relative_path="3rdparty/everest/include/everest/kremlin" type="c_include">
        <files mask="c_endianness.h"/>
      </source>
      <source relative_path="3rdparty/everest/include/everest/kremlin/internal" type="c_include">
        <files mask="builtin.h"/>
        <files mask="callconv.h"/>
        <files mask="compat.h"/>
        <files mask="debug.h"/>
        <files mask="target.h"/>
        <files mask="types.h"/>
        <files mask="wasmsupport.h"/>
      </source>
      <source relative_path="3rdparty/everest/include/everest/vs2010" type="c_include">
        <files mask="Hacl_Curve25519.h"/>
        <files mask="inttypes.h"/>
        <files mask="stdbool.h"/>
      </source>
      <source relative_path="3rdparty/everest/library" type="src">
        <files mask="Hacl_Curve25519.c"/>
        <files mask="Hacl_Curve25519_joined.c"/>
        <files mask="everest.c"/>
        <files mask="x25519.c"/>
      </source>
      <source relative_path="3rdparty/everest/library/kremlib" type="src">
        <files mask="FStar_UInt128_extracted.c"/>
        <files mask="FStar_UInt64_FStar_UInt32_FStar_UInt16_FStar_UInt8.c"/>
      </source>
      <source relative_path="3rdparty/everest/library/legacy" type="src">
        <files mask="Hacl_Curve25519.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mbedtls_3rdparty.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="3rdparty/everest/include" type="c_include"/>
        <include_path relative_path="3rdparty/everest/include/everest" type="c_include"/>
        <include_path relative_path="3rdparty/everest/include/everest/kremlib" type="c_include"/>
        <include_path relative_path="3rdparty/everest/include/everest/kremlin" type="c_include"/>
        <include_path relative_path="3rdparty/everest/include/everest/kremlin/internal" type="c_include"/>
        <include_path relative_path="3rdparty/everest/include" type="asm_include"/>
        <include_path relative_path="3rdparty/everest/include/everest" type="asm_include"/>
        <include_path relative_path="3rdparty/everest/include/everest/kremlib" type="asm_include"/>
        <include_path relative_path="3rdparty/everest/include/everest/kremlin" type="asm_include"/>
        <include_path relative_path="3rdparty/everest/include/everest/kremlin/internal" type="asm_include"/>
      </include_paths>
    </component>
    <!--<component id="middleware.lwip.unused_files.MIMXRT555S" name="lwIP_unused_files" version="2.2.1" package_base_path="middleware/lwip" project_base_path="lwip">
  <source exclude="true" relative_path="src" type="other">
    <files mask="Filelists.cmake" hidden="true"/>
    <files mask="Filelists.mk" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz" type="other">
    <files mask="Makefile" hidden="true"/>
    <files mask="README" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz" type="c_include">
    <files mask="config.h" hidden="true"/>
    <files mask="fuzz_common.h" hidden="true"/>
    <files mask="lwipopts.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz" type="src">
    <files mask="fuzz.c" hidden="true"/>
    <files mask="fuzz2.c" hidden="true"/>
    <files mask="fuzz3.c" hidden="true"/>
    <files mask="fuzz_common.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz/inputs/arp" type="binary">
    <files mask="arp_req.bin" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz/inputs/icmp" type="binary">
    <files mask="icmp_ping.bin" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz/inputs/ipv6" type="binary">
    <files mask="neighbor_solicitation.bin" hidden="true"/>
    <files mask="router_adv.bin" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz/inputs/tcp" type="binary">
    <files mask="tcp_syn.bin" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz/inputs/udp" type="binary">
    <files mask="udp_port_5000.bin" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz" type="script">
    <files mask="output_to_pcap.sh" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/sockets" type="src">
    <files mask="sockets_stresstest.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/sockets" type="c_include">
    <files mask="sockets_stresstest.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit" type="script">
    <files mask="Filelists.cmake" hidden="true"/>
    <files mask="Filelists.mk" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit" type="other">
    <files mask="Makefile" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/api" type="src">
    <files mask="test_sockets.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/api" type="c_include">
    <files mask="test_sockets.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/arch" type="src">
    <files mask="sys_arch.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/arch" type="c_include">
    <files mask="sys_arch.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/core" type="src">
    <files mask="test_def.c" hidden="true"/>
    <files mask="test_dns.c" hidden="true"/>
    <files mask="test_mem.c" hidden="true"/>
    <files mask="test_netif.c" hidden="true"/>
    <files mask="test_pbuf.c" hidden="true"/>
    <files mask="test_timers.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/core" type="c_include">
    <files mask="test_def.h" hidden="true"/>
    <files mask="test_dns.h" hidden="true"/>
    <files mask="test_mem.h" hidden="true"/>
    <files mask="test_netif.h" hidden="true"/>
    <files mask="test_pbuf.h" hidden="true"/>
    <files mask="test_timers.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/dhcp" type="src">
    <files mask="test_dhcp.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/dhcp" type="c_include">
    <files mask="test_dhcp.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/dhcp6" type="src">
    <files mask="test_dhcp6.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/dhcp6" type="c_include">
    <files mask="test_dhcp6.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/etharp" type="src">
    <files mask="test_etharp.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/etharp" type="c_include">
    <files mask="test_etharp.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/ip4" type="src">
    <files mask="test_ip4.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/ip4" type="c_include">
    <files mask="test_ip4.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/ip6" type="src">
    <files mask="test_ip6.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/ip6" type="c_include">
    <files mask="test_ip6.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit" type="c_include">
    <files mask="lwip_check.h" hidden="true"/>
    <files mask="lwipopts.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit" type="src">
    <files mask="lwip_unittests.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/mdns" type="src">
    <files mask="test_mdns.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/mdns" type="c_include">
    <files mask="test_mdns.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/mqtt" type="src">
    <files mask="test_mqtt.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/mqtt" type="c_include">
    <files mask="test_mqtt.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/ppp" type="src">
    <files mask="test_pppos.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/ppp" type="c_include">
    <files mask="test_pppos.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/tcp" type="src">
    <files mask="tcp_helper.c" hidden="true"/>
    <files mask="test_tcp.c" hidden="true"/>
    <files mask="test_tcp_oos.c" hidden="true"/>
    <files mask="test_tcp_state.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/tcp" type="c_include">
    <files mask="tcp_helper.h" hidden="true"/>
    <files mask="test_tcp.h" hidden="true"/>
    <files mask="test_tcp_oos.h" hidden="true"/>
    <files mask="test_tcp_state.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/udp" type="src">
    <files mask="test_udp.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/udp" type="c_include">
    <files mask="test_udp.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib" type="script">
    <files mask="Filelists.cmake" hidden="true"/>
    <files mask="Filelists.mk" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/dhcp_extra_opts" type="other">
    <files mask="README" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/dhcp_extra_opts" type="src">
    <files mask="dhcp_extra_opts.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/dhcp_extra_opts" type="c_include">
    <files mask="dhcp_extra_opts.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/ipv6_static_routing" type="other">
    <files mask="README" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/ipv6_static_routing" type="src">
    <files mask="ip6_route_table.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/ipv6_static_routing" type="c_include">
    <files mask="ip6_route_table.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/netconn/external_resolve" type="src">
    <files mask="dnssd.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/netconn/external_resolve" type="c_include">
    <files mask="dnssd.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/tcp_isn" type="src">
    <files mask="tcp_isn.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/tcp_isn" type="c_include">
    <files mask="tcp_isn.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/tcp_md5" type="other">
    <files mask="README" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/tcp_md5" type="src">
    <files mask="tcp_md5.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/tcp_md5" type="c_include">
    <files mask="tcp_md5.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/chargen" type="other">
    <files mask="README" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/chargen" type="src">
    <files mask="chargen.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/chargen" type="c_include">
    <files mask="chargen.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/httpserver" type="other">
    <files mask="README" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/httpserver" type="src">
    <files mask="httpserver-netconn.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/httpserver" type="c_include">
    <files mask="httpserver-netconn.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/netio" type="src">
    <files mask="netio.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/netio" type="c_include">
    <files mask="netio.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/rtp" type="src">
    <files mask="rtp.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/rtp" type="c_include">
    <files mask="rtp.h" hidden="true"/>
    <files mask="rtpdata.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/shell" type="src">
    <files mask="shell.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/shell" type="c_include">
    <files mask="shell.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/socket_examples" type="src">
    <files mask="socket_examples.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/socket_examples" type="c_include">
    <files mask="socket_examples.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/Coverity" type="src">
    <files mask="coverity.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/ethernetif" type="src">
    <files mask="ethernetif.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/example_app" type="c_include">
    <files mask="default_netif.h" hidden="true"/>
    <files mask="lwipopts.h" hidden="true"/>
    <files mask="lwippools.h" hidden="true"/>
    <files mask="ppp_settings.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/example_app" type="other">
    <files mask="lwipcfg.h.ci" hidden="true"/>
    <files mask="lwipcfg.h.example" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/example_app" type="src">
    <files mask="test.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/example_app/test_configs" type="c_include">
    <files mask="opt_default.h" hidden="true"/>
    <files mask="opt_dualstack.h" hidden="true"/>
    <files mask="opt_ipv4only.h" hidden="true"/>
    <files mask="opt_ipv6only.h" hidden="true"/>
    <files mask="opt_no_tcp_dualstack.h" hidden="true"/>
    <files mask="opt_no_tcp_ipv4only.h" hidden="true"/>
    <files mask="opt_no_tcp_ipv6only.h" hidden="true"/>
    <files mask="opt_no_udp_dualstack.h" hidden="true"/>
    <files mask="opt_no_udp_ipv4only.h" hidden="true"/>
    <files mask="opt_no_udp_ipv6only.h" hidden="true"/>
    <files mask="opt_none.h" hidden="true"/>
    <files mask="opt_nosys_dual.h" hidden="true"/>
    <files mask="opt_nosys_ipv4.h" hidden="true"/>
    <files mask="opt_nosys_ipv6.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/cgi_example" type="src">
    <files mask="cgi_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/cgi_example" type="c_include">
    <files mask="cgi_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/examples_fs" type="doc">
    <files mask="404.html" hidden="true"/>
    <files mask="index.html" hidden="true"/>
    <files mask="login.html" hidden="true"/>
    <files mask="loginfail.html" hidden="true"/>
    <files mask="session.html" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/examples_fs/img" type="image">
    <files mask="sics.gif" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/examples_fs" type="other">
    <files mask="ssi.shtml" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd" type="src">
    <files mask="examples_fsdata.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/fs_example" type="src">
    <files mask="fs_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/fs_example" type="c_include">
    <files mask="fs_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/genfiles_example" type="src">
    <files mask="genfiles_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/genfiles_example" type="c_include">
    <files mask="genfiles_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/https_example" type="src">
    <files mask="https_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/https_example" type="c_include">
    <files mask="https_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/post_example" type="src">
    <files mask="post_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/ssi_example" type="src">
    <files mask="ssi_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/ssi_example" type="c_include">
    <files mask="ssi_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/lwiperf" type="src">
    <files mask="lwiperf_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/lwiperf" type="c_include">
    <files mask="lwiperf_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/mdns" type="src">
    <files mask="mdns_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/mdns" type="c_include">
    <files mask="mdns_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/mqtt" type="src">
    <files mask="mqtt_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/mqtt" type="c_include">
    <files mask="mqtt_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/ppp" type="src">
    <files mask="pppos_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/ppp" type="c_include">
    <files mask="pppos_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/snmp" type="src">
    <files mask="snmp_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/snmp" type="c_include">
    <files mask="snmp_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/snmp/snmp_private_mib" type="src">
    <files mask="lwip_prvmib.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/snmp/snmp_private_mib" type="c_include">
    <files mask="private_mib.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/snmp/snmp_v3" type="src">
    <files mask="snmpv3_dummy.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/snmp/snmp_v3" type="c_include">
    <files mask="snmpv3_dummy.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/sntp" type="src">
    <files mask="sntp_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/sntp" type="c_include">
    <files mask="sntp_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/tftp" type="src">
    <files mask="tftp_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/tftp" type="c_include">
    <files mask="tftp_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports" type="script">
    <files mask="CMakeCommon.cmake" hidden="true"/>
    <files mask="Common.allports.mk" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/freertos/include/arch" type="c_include">
    <files mask="sys_arch.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/freertos" type="src">
    <files mask="sys_arch.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix" type="script">
    <files mask="Common.mk" hidden="true"/>
    <files mask="Filelists.cmake" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix" type="other">
    <files mask="README" hidden="true"/>
    <files mask="setup-tapif" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/check" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/check" type="other">
    <files mask="Makefile" hidden="true"/>
    <files mask="README" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/check" type="c_include">
    <files mask="config.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/example_app" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/example_app" type="other">
    <files mask="Makefile" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/example_app" type="src">
    <files mask="default_netif.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/example_app" type="script">
    <files mask="iteropts.sh" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/lib" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/lib" type="other">
    <files mask="README" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/lib" type="c_include">
    <files mask="lwipopts.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/port/include/arch" type="c_include">
    <files mask="cc.h" hidden="true"/>
    <files mask="perf.h" hidden="true"/>
    <files mask="sys_arch.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/port/include/netif" type="c_include">
    <files mask="fifo.h" hidden="true"/>
    <files mask="list.h" hidden="true"/>
    <files mask="pcapif.h" hidden="true"/>
    <files mask="sio.h" hidden="true"/>
    <files mask="tapif.h" hidden="true"/>
    <files mask="vdeif.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/port/netif" type="src">
    <files mask="fifo.c" hidden="true"/>
    <files mask="list.c" hidden="true"/>
    <files mask="pcapif.c" hidden="true"/>
    <files mask="sio.c" hidden="true"/>
    <files mask="tapif.c" hidden="true"/>
    <files mask="vdeif.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/port" type="src">
    <files mask="perf.c" hidden="true"/>
    <files mask="sys_arch.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/posixlib" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/posixlib" type="script">
    <files mask="Uninstall.cmake" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/posixlib/include/posix" type="c_include">
    <files mask="inet.h" hidden="true"/>
    <files mask="sockets.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/posixlib" type="c_include">
    <files mask="lwipopts.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32" type="script">
    <files mask="Common.mk" hidden="true"/>
    <files mask="Filelists.cmake" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32/check" type="c_include">
    <files mask="check_stdint.h" hidden="true"/>
    <files mask="config.h" hidden="true"/>
    <files mask="stdbool.h" hidden="true"/>
    <files mask="unistd.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32/check/sys" type="c_include">
    <files mask="time.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32/check" type="src">
    <files mask="time.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32/example_app" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32/example_app" type="other">
    <files mask="Makefile" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32/example_app" type="src">
    <files mask="default_netif.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32/include/arch" type="c_include">
    <files mask="bpstruct.h" hidden="true"/>
    <files mask="cc.h" hidden="true"/>
    <files mask="epstruct.h" hidden="true"/>
    <files mask="perf.h" hidden="true"/>
    <files mask="sys_arch.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32/msvc" type="other">
    <files mask="build_coverity.cmd" hidden="true"/>
    <files mask="libcheck.vcxproj" hidden="true"/>
    <files mask="libcheck.vcxproj.filters" hidden="true"/>
    <files mask="lwIP.vcxproj" hidden="true"/>
    <files mask="lwIP.vcxproj.filters" hidden="true"/>
    <files mask="lwIP_Test.sln" hidden="true"/>
    <files mask="lwIP_Test.vcxproj" hidden="true"/>
    <files mask="lwIP_Test.vcxproj.filters" hidden="true"/>
    <files mask="lwIP_fuzz.sln" hidden="true"/>
    <files mask="lwIP_pcapif.vcxproj" hidden="true"/>
    <files mask="lwIP_pcapif.vcxproj.filters" hidden="true"/>
    <files mask="lwIP_unittests.sln" hidden="true"/>
    <files mask="lwip_fuzz.vcxproj" hidden="true"/>
    <files mask="lwip_unittests.vcxproj" hidden="true"/>
    <files mask="lwip_unittests.vcxproj.filters" hidden="true"/>
    <files mask="makefsdata.vcxproj" hidden="true"/>
    <files mask="makefsdata.vcxproj.filters" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32" type="src">
    <files mask="pcapif.c" hidden="true"/>
    <files mask="pcapif_helper.c" hidden="true"/>
    <files mask="sio.c" hidden="true"/>
    <files mask="sys_arch.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32" type="c_include">
    <files mask="pcapif.h" hidden="true"/>
    <files mask="pcapif_helper.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32" type="doc">
    <files mask="readme.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/apps/altcp_tls" type="src">
    <files mask="altcp_tls_mbedtls.c" hidden="true"/>
    <files mask="altcp_tls_mbedtls_mem.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/apps/altcp_tls" type="c_include">
    <files mask="altcp_tls_mbedtls_mem.h" hidden="true"/>
    <files mask="altcp_tls_mbedtls_structs.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/apps/http" type="src">
    <files mask="altcp_proxyconnect.c" hidden="true"/>
    <files mask="http_client.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/apps/netbiosns" type="src">
    <files mask="netbiosns.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/apps/smtp" type="src">
    <files mask="smtp.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/apps/snmp" type="src">
    <files mask="snmp_asn1.c" hidden="true"/>
    <files mask="snmp_core.c" hidden="true"/>
    <files mask="snmp_mib2.c" hidden="true"/>
    <files mask="snmp_mib2_icmp.c" hidden="true"/>
    <files mask="snmp_mib2_interfaces.c" hidden="true"/>
    <files mask="snmp_mib2_ip.c" hidden="true"/>
    <files mask="snmp_mib2_snmp.c" hidden="true"/>
    <files mask="snmp_mib2_system.c" hidden="true"/>
    <files mask="snmp_mib2_tcp.c" hidden="true"/>
    <files mask="snmp_mib2_udp.c" hidden="true"/>
    <files mask="snmp_msg.c" hidden="true"/>
    <files mask="snmp_netconn.c" hidden="true"/>
    <files mask="snmp_pbuf_stream.c" hidden="true"/>
    <files mask="snmp_raw.c" hidden="true"/>
    <files mask="snmp_scalar.c" hidden="true"/>
    <files mask="snmp_snmpv2_framework.c" hidden="true"/>
    <files mask="snmp_snmpv2_usm.c" hidden="true"/>
    <files mask="snmp_table.c" hidden="true"/>
    <files mask="snmp_threadsync.c" hidden="true"/>
    <files mask="snmp_traps.c" hidden="true"/>
    <files mask="snmpv3.c" hidden="true"/>
    <files mask="snmpv3_mbedtls.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/apps/snmp" type="c_include">
    <files mask="snmp_asn1.h" hidden="true"/>
    <files mask="snmp_core_priv.h" hidden="true"/>
    <files mask="snmp_msg.h" hidden="true"/>
    <files mask="snmp_pbuf_stream.h" hidden="true"/>
    <files mask="snmpv3_priv.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/apps/tftp" type="src">
    <files mask="tftp.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/include/lwip" type="other">
    <files mask="init.h.cmake.in" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/include/lwip/apps" type="c_include">
    <files mask="altcp_proxyconnect.h" hidden="true"/>
    <files mask="altcp_tls_mbedtls_opts.h" hidden="true"/>
    <files mask="http_client.h" hidden="true"/>
    <files mask="netbiosns.h" hidden="true"/>
    <files mask="netbiosns_opts.h" hidden="true"/>
    <files mask="smtp.h" hidden="true"/>
    <files mask="smtp_opts.h" hidden="true"/>
    <files mask="snmp.h" hidden="true"/>
    <files mask="snmpv3.h" hidden="true"/>
    <files mask="snmp_core.h" hidden="true"/>
    <files mask="snmp_mib2.h" hidden="true"/>
    <files mask="snmp_opts.h" hidden="true"/>
    <files mask="snmp_scalar.h" hidden="true"/>
    <files mask="snmp_snmpv2_framework.h" hidden="true"/>
    <files mask="snmp_snmpv2_usm.h" hidden="true"/>
    <files mask="snmp_table.h" hidden="true"/>
    <files mask="snmp_threadsync.h" hidden="true"/>
    <files mask="tftp_client.h" hidden="true"/>
    <files mask="tftp_common.h" hidden="true"/>
    <files mask="tftp_opts.h" hidden="true"/>
    <files mask="tftp_server.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/include/lwip/apps" type="other">
    <files mask="FILES" hidden="true"/>
  </source>
</component>-->
    <component id="middleware.lvgl.template.MIMXRT555S" name="lvgl_template" brief="lvgl template" version="9.2.1" full_name="lvgl template configuration" category="Graphics/lvgl graphics library" user_visible="false" type="project_template" package_base_path="middleware/lvgl" project_base_path="lvgl">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="template" config="true" type="c_include">
        <files mask="lv_conf.h"/>
      </source>
      <source relative_path="template" config="true" type="src">
        <files mask="lvgl_support.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.libjpeg.MIMXRT555S" name="libjpeg" brief="JPEG library" version="9.2.0" revision="1" full_name="Middleware libjpeg" category="Image/JPEG library" user_visible="true" type="middleware" package_base_path="middleware/libjpeg" project_base_path="libjpeg">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="change.log" hidden="true"/>
        <files mask="README" hidden="true"/>
      </source>
      <source relative_path="inc" type="c_include">
        <files mask="cderror.h"/>
        <files mask="cdjpeg.h"/>
        <files mask="jdct.h"/>
        <files mask="jerror.h"/>
        <files mask="jinclude.h"/>
        <files mask="jmemsys.h"/>
        <files mask="jmorecfg.h"/>
        <files mask="jpegint.h"/>
        <files mask="jpeglib.h"/>
        <files mask="jversion.h"/>
        <files mask="transupp.h"/>
      </source>
      <source relative_path="src" type="src">
        <files mask="jaricom.c"/>
        <files mask="jcapimin.c"/>
        <files mask="jcapistd.c"/>
        <files mask="jcarith.c"/>
        <files mask="jccoefct.c"/>
        <files mask="jccolor.c"/>
        <files mask="jcdctmgr.c"/>
        <files mask="jchuff.c"/>
        <files mask="jcinit.c"/>
        <files mask="jcmainct.c"/>
        <files mask="jcmarker.c"/>
        <files mask="jcmaster.c"/>
        <files mask="jcomapi.c"/>
        <files mask="jcparam.c"/>
        <files mask="jcprepct.c"/>
        <files mask="jcsample.c"/>
        <files mask="jctrans.c"/>
        <files mask="jdapimin.c"/>
        <files mask="jdapistd.c"/>
        <files mask="jdarith.c"/>
        <files mask="jdatadst.c"/>
        <files mask="jdatasrc.c"/>
        <files mask="jdcoefct.c"/>
        <files mask="jdcolor.c"/>
        <files mask="jddctmgr.c"/>
        <files mask="jdhuff.c"/>
        <files mask="jdinput.c"/>
        <files mask="jdmainct.c"/>
        <files mask="jdmarker.c"/>
        <files mask="jdmaster.c"/>
        <files mask="jdmerge.c"/>
        <files mask="jdpostct.c"/>
        <files mask="jdsample.c"/>
        <files mask="jdtrans.c"/>
        <files mask="jerror.c"/>
        <files mask="jfdctflt.c"/>
        <files mask="jfdctfst.c"/>
        <files mask="jfdctint.c"/>
        <files mask="jidctflt.c"/>
        <files mask="jidctfst.c"/>
        <files mask="jidctint.c"/>
        <files mask="jmemmgr.c"/>
        <files mask="jmemnobs.c"/>
        <files mask="jquant1.c"/>
        <files mask="jquant2.c"/>
        <files mask="jutils.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_libjpeg.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="inc" type="c_include"/>
        <include_path relative_path="inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.libjpeg.template.MIMXRT555S" name="LIBJPEG configuration template" brief="Template configuration file to be edited by user. Users could map the file system functions to the file system they are using." version="9.2.0" revision="1" full_name="LIBJPEG configuration template" category="Image/JPEG library" user_visible="false" type="project_template" package_base_path="middleware/libjpeg" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="template" config="true" type="c_include">
        <files mask="jconfig.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_libjpeg_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.MIMXRT555S" name="fatfs" brief="FatFs" version="0.15.0" full_name="FAT File System stack" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="diskio.c"/>
        <files mask="ff.c"/>
        <files mask="ffsystem.c"/>
        <files mask="ffunicode.c"/>
      </source>
      <source relative_path="source" type="c_include">
        <files mask="diskio.h"/>
        <files mask="ff.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source" type="c_include"/>
        <include_path relative_path="source" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_mmc.MIMXRT555S" name="fatfs_mmc" brief="FatFs template MMC" version="0.15.0" full_name="FatFs template configuration for MMC disk" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="template/mmc" config="true" type="c_include">
        <files mask="ffconf_gen.h"/>
      </source>
      <source relative_path="template" config="true" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_template_mmc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/mmc" type="c_include"/>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/mmc" type="asm_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_nand.MIMXRT555S" name="fatfs_nand" brief="FatFs template NAND" version="0.15.0" full_name="FatFs template configuration for NAND disk" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="template/nand" config="true" type="c_include">
        <files mask="ffconf_gen.h"/>
      </source>
      <source relative_path="template" config="true" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_template_nand.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/nand" type="c_include"/>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/nand" type="asm_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_ram.MIMXRT555S" name="fatfs_ram" brief="FatFs template RAM" version="0.15.0" full_name="FatFs template configuration for RAM disk" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="template/ram" config="true" type="c_include">
        <files mask="ffconf_gen.h"/>
      </source>
      <source relative_path="template" config="true" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_template_ram.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/ram" type="c_include"/>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/ram" type="asm_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_sd.MIMXRT555S" name="fatfs_sd" brief="FatFs template SD" version="0.15.0" full_name="FatFs template configuration for SD disk" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="template/sd" config="true" type="c_include">
        <files mask="ffconf_gen.h"/>
      </source>
      <source relative_path="template" config="true" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_template_sd.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/sd" type="c_include"/>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/sd" type="asm_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_sdspi.MIMXRT555S" name="fatfs_sdspi" brief="FatFs template SDSPI" version="0.15.0" full_name="FatFs template configuration for SDSPI disk" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="template/sdspi" config="true" type="c_include">
        <files mask="ffconf_gen.h"/>
      </source>
      <source relative_path="template" config="true" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_template_sdspi.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/sdspi" type="c_include"/>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/sdspi" type="asm_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_usb.MIMXRT555S" name="fatfs_usb" brief="FatFs template USB" version="0.15.0" full_name="FatFs template configuration for USB disk" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="template/usb" config="true" type="c_include">
        <files mask="ffconf_gen.h"/>
      </source>
      <source relative_path="template" config="true" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_template_usb.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/usb" type="c_include"/>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/usb" type="asm_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.emwin.template.MIMXRT555S" name="emwin_template" brief="emwin template" version="6.38" full_name="emWin template configuration" category="Graphics/emWin graphics library" user_visible="false" type="project_template" package_base_path="middleware/emwin" project_base_path="emwin">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="template" config="true" type="src">
        <files mask="emwin_support.c"/>
      </source>
      <source relative_path="template" config="true" type="c_include">
        <files mask="emwin_support.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_emwin_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="emWin_Config" type="c_include"/>
        <include_path relative_path="emWin_header" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.cjson.MIMXRT555S" name="cjson" brief="CJSON library" version="1.7.4" revision="0" full_name="Middleware cjson" category="JSON/CJSON library" user_visible="true" type="middleware" package_base_path="middleware/cjson" project_base_path="cjson">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="CHANGELOG.md" hidden="true"/>
        <files mask="LICENSE" hidden="true"/>
        <files mask="README.md" hidden="true"/>
        <files mask="CONTRIBUTORS.md" hidden="true"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="cJSON.h"/>
        <files mask="cJSON_Utils.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="cJSON.c"/>
        <files mask="cJSON_Utils.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_cjson.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.wifi_bt_module.config.MIMXRT555S" name="wifi_bt_module_config" brief="Wi-Fi and BT module configs" version="1.0.0" full_name="Wi-Fi and BT module configs" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/wifi_bt_module" project_base_path="component/wifi_bt_module">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="incl" type="c_include">
        <files mask="wifi_bt_module_config.h"/>
      </source>
      <include_paths>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="incl" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.wifi_bt_module.tx_pwr_limits.MIMXRT555S" name="wifi_bt_module_tx_pwr_limits" brief="Wi-Fi module Tx power limits" version="1.0.0" full_name="Wi-Fi module Tx power limits" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/wifi_bt_module" project_base_path="component/wifi_bt_module">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="AzureWave/tx_pwr_limits" type="c_include">
        <files mask="wlan_txpwrlimit_cfg_WW.h"/>
        <files mask="wlan_txpwrlimit_cfg_WW_rw610.h"/>
      </source>
      <source relative_path="Murata/tx_pwr_limits" type="c_include">
        <files mask="wlan_txpwrlimit_cfg_murata_1XK_WW.h"/>
        <files mask="wlan_txpwrlimit_cfg_murata_1ZM_WW.h"/>
        <files mask="wlan_txpwrlimit_cfg_murata_2DS_WW.h"/>
        <files mask="wlan_txpwrlimit_cfg_murata_2EL_WW.h"/>
        <files mask="wlan_txpwrlimit_cfg_murata_NH_FCC.h"/>
      </source>
      <source relative_path="u-blox/tx_pwr_limits" type="c_include">
        <files mask="wlan_txpwrlimit_cfg_jody_w5_WW.h"/>
      </source>
      <include_paths>
        <include_path relative_path="AzureWave/tx_pwr_limits" type="c_include"/>
        <include_path relative_path="Murata/tx_pwr_limits" type="c_include"/>
        <include_path relative_path="u-blox/tx_pwr_limits" type="c_include"/>
        <include_path relative_path="AzureWave/tx_pwr_limits" type="asm_include"/>
        <include_path relative_path="Murata/tx_pwr_limits" type="asm_include"/>
        <include_path relative_path="u-blox/tx_pwr_limits" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.ektf2k.MIMXRT555S" name="ektf2k" brief="Driver ektf2k" version="1.0.0" full_name="Driver ektf2k" category="Device/SDK Drivers" user_visible="false" type="board_component" package_base_path="components/touch/ektf2k" project_base_path="touchpanel">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ektf2k.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ektf2k.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.ft3267.MIMXRT555S" name="ft3267" brief="Touch panel controller FT3267 driver" version="1.0.1" full_name="Driver ft3267" category="Device/SDK Drivers" user_visible="false" type="board_component" package_base_path="components/touch/ft3267" project_base_path="touchpanel">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ft3267.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ft3267.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.ft5406.MIMXRT555S" name="ft5406" brief="Driver ft5406" version="1.0.0" full_name="Driver ft5406" category="Device/SDK Drivers" user_visible="false" type="board_component" package_base_path="components/touch/ft5406" project_base_path="touchpanel">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ft5406.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ft5406.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.gt911.MIMXRT555S" name="gt911" brief="Driver gt911" version="1.0.4" full_name="Driver gt911" category="Device/SDK Drivers" user_visible="false" type="board_component" package_base_path="components/touch/gt911" project_base_path="touchpanel">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_gt911.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_gt911.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.tma525b.MIMXRT555S" name="tma525b" brief="Driver tma525b" version="1.0.0" full_name="Driver tma525b" category="Device/SDK Drivers" user_visible="false" type="board_component" package_base_path="components/touch/tma525b" project_base_path="touchpanel">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_tma525b.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_tma525b.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_swo.MIMXRT555S" name="serial_manager_swo" brief="Component serial_manager_swo" version="1.0.0" full_name="Serial Manager Swo" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_SWO" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_swo.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_swo.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_virtual.MIMXRT555S" name="serial_manager_virtual" brief="Component serial_manager_virtual" version="1.0.0" full_name="Serial Manager Virtual" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SSERIAL_PORT_TYPE_VIRTUAL" value="1"/>
        <define name="DEBUG_CONSOLE_TRANSFER_NON_BLOCKING" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_virtual.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_virtual.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.software_rng_adapter.MIMXRT555S" name="software_rng_adapter" brief="Component software_rng_adapter" version="1.0.0" full_name="Component software_rng_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/rng" project_base_path="component/rng">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_rng.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_software_rng.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.reset_adapter.MIMXRT555S" name="reset_adapter" brief="Component reset_adapter" version="1.0.0" full_name="Component reset_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/reset" project_base_path="component/reset">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_reset.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_reset.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.panic.MIMXRT555S" name="panic" brief="Component panic" version="1.0.0" full_name="Component panic" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/panic" project_base_path="component/panic">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_panic.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_panic.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.osa_template_config.MIMXRT555S" name="osa" brief="Component osa template config" version="1.0.0" full_name="Component osa template config" category="NXP Component/OS Abstraction Layer" user_visible="true" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="config" config="true" type="c_include">
        <files mask="fsl_os_abstraction_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_osa_template_config.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="config" type="c_include"/>
        <include_path relative_path="config" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.mpi_loader.MIMXRT555S" name="mpi_loader" brief="Component mpi_loader" version="1.0.0" full_name="Component mpi_loader" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/mpi_loader" project_base_path="mpi_loader">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mpi_loader.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mpi_loader.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.mflash_onchip_fmu.MIMXRT555S" name="mflash onchip_fmu" brief="mflash onchip_fmu" version="1.0.0" full_name="mflash onchip_fmu" category="Device/SDK Drivers" user_visible="false" type="software_component" package_base_path="components/flash/mflash" project_base_path="flash/mflash">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
    </component>
    <component id="component.software_crc_adapter.MIMXRT555S" name="software_crc_adapter" brief="Component software_crc_adapter" version="1.0.0" full_name="Component software_crc_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/crc" project_base_path="component/crc">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_crc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_software_crc.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.ak4497_adapter.MIMXRT555S" name="codec_ak4497_adapter" brief="Component ak4497 adapter for single codec" version="2.2.0" full_name="Component ak4497_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="port/ak4497" type="c_include">
        <files mask="fsl_codec_ak4497_adapter.h"/>
      </source>
      <source relative_path="port/ak4497" type="src">
        <files mask="fsl_codec_ak4497_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="port/ak4497" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/ak4497" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.codec_adapters.MIMXRT555S" name="codec_adapters" brief="Component codec adapters for multi codec" version="2.2.0" full_name="Component codec_adapters" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec/" project_base_path="codec">
      <defines>
        <define name="CODEC_MULTI_ADAPTERS" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="port" type="src">
        <files mask="fsl_codec_adapter.c"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.cs42448_adapter.MIMXRT555S" name="codec_cs42448_adapter" brief="Component cs42448 adapter for single codec" version="2.2.1" full_name="Component cs42448_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="port/cs42448" type="c_include">
        <files mask="fsl_codec_cs42448_adapter.h"/>
      </source>
      <source relative_path="port/cs42448" type="src">
        <files mask="fsl_codec_cs42448_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="port/cs42448" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/cs42448" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.cs42888_adapter.MIMXRT555S" name="codec_cs42888_adapter" brief="Component cs42888 adapter for single codec" version="2.2.1" full_name="Component cs42888_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="port/cs42888" type="c_include">
        <files mask="fsl_codec_cs42888_adapter.h"/>
      </source>
      <source relative_path="port/cs42888" type="src">
        <files mask="fsl_codec_cs42888_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="port/cs42888" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/cs42888" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.da7212_adapter.MIMXRT555S" name="codec_da7212_adapter" brief="Component da7212 adapter for single codec" version="2.2.0" full_name="Component da7212_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="port/da7212" type="c_include">
        <files mask="fsl_codec_da7212_adapter.h"/>
      </source>
      <source relative_path="port/da7212" type="src">
        <files mask="fsl_codec_da7212_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="port/da7212" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/da7212" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.pcm186x_adapter.MIMXRT555S" name="codec_pcm186x_adapter" brief="Component pcm186x adapter for single codec" version="2.0.0" full_name="Component pcm186x_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="port/pcm186x" type="c_include">
        <files mask="fsl_codec_pcm186x_adapter.h"/>
      </source>
      <source relative_path="port/pcm186x" type="src">
        <files mask="fsl_codec_pcm186x_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="port/pcm186x" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/pcm186x" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.pcm512x_adapter.MIMXRT555S" name="codec_pcm512x_adapter" brief="Component pcm512x adapter for single codec" version="2.0.0" full_name="Component pcm512x_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="port/pcm512x" type="c_include">
        <files mask="fsl_codec_pcm512x_adapter.h"/>
      </source>
      <source relative_path="port/pcm512x" type="src">
        <files mask="fsl_codec_pcm512x_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="port/pcm512x" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/pcm512x" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.sgtl_adapter.MIMXRT555S" name="codec_sgtl_adapter" brief="Component sgtl5000 adapter for single codec" version="2.2.0" full_name="Component sgtl_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="port/sgtl5000" type="c_include">
        <files mask="fsl_codec_sgtl_adapter.h"/>
      </source>
      <source relative_path="port/sgtl5000" type="src">
        <files mask="fsl_codec_sgtl_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="port/sgtl5000" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/sgtl5000" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.tfa9896_adapter.MIMXRT555S" name="codec_tfa9896_adapter" brief="Component tfa9896 adapter for single codec" version="2.2.0" full_name="Component tfa9896_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="port/tfa9896" type="c_include">
        <files mask="fsl_codec_tfa9896_adapter.h"/>
      </source>
      <source relative_path="port/tfa9896" type="src">
        <files mask="fsl_codec_tfa9896_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="port/tfa9896" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/tfa9896" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.tfa9xxx_adapter.MIMXRT555S" name="codec_tfa9xxx_adapter" brief="Component tfa9xxx adapter for single codec" version="2.2.0" full_name="Component tfa9xxx_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="port/tfa9xxx" type="c_include">
        <files mask="fsl_codec_tfa9xxx_adapter.h"/>
      </source>
      <source relative_path="port/tfa9xxx" type="src">
        <files mask="fsl_codec_tfa9xxx_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="port/tfa9xxx" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/tfa9xxx" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.wm8524_adapter.MIMXRT555S" name="codec_wm8524_adapter" brief="Component wm8524 adapter for single codec" version="2.2.0" full_name="Component wm8524_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="port/wm8524" type="c_include">
        <files mask="fsl_codec_wm8524_adapter.h"/>
      </source>
      <source relative_path="port/wm8524" type="src">
        <files mask="fsl_codec_wm8524_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="port/wm8524" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/wm8524" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.wm8904_adapter.MIMXRT555S" name="codec_wm8904_adapter" brief="Component wm8904 adapter for single codec" version="2.2.0" full_name="Component wm8904_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec/" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="port/wm8904" type="c_include">
        <files mask="fsl_codec_wm8904_adapter.h"/>
      </source>
      <source relative_path="port/wm8904" type="src">
        <files mask="fsl_codec_wm8904_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="port/wm8904" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/wm8904" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.wm8960_adapter.MIMXRT555S" name="codec_wm8960_adapter" brief="Component wm8960 adapter for single codecs" version="2.2.0" full_name="Component wm8960_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec/" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="port/wm8960" type="c_include">
        <files mask="fsl_codec_wm8960_adapter.h"/>
      </source>
      <source relative_path="port/wm8960" type="src">
        <files mask="fsl_codec_wm8960_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="port/wm8960" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/wm8960" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.wm8962_adapter.MIMXRT555S" name="codec_wm8962_adapter" brief="Component wm8962 adapter for single codecs" version="2.2.0" full_name="Component wm8962_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec/" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="port/wm8962" type="c_include">
        <files mask="fsl_codec_wm8962_adapter.h"/>
      </source>
      <source relative_path="port/wm8962" type="src">
        <files mask="fsl_codec_wm8962_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <include_paths>
        <include_path relative_path="port/wm8962" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/wm8962" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.codec.MIMXRT555S" name="codec" brief="Driver codec" version="2.3.1" full_name="Driver codec" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_codec_common.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_codec_common.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="project_template.MIMXRT555S.MIMXRT555S" name="MIMXRT555S" brief="Devices_project_template MIMXRT555S" version="1.0.0" full_name="Devices_project_template MIMXRT555S" category="Board Support/SDK Project Template" user_visible="true" type="project_template" package_base_path="devices/MIMXRT555S/project_template" project_base_path="board">
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="component.serial_manager.MIMXRT555S"/>
              <component_dependency value="component.serial_manager_uart.MIMXRT555S"/>
              <component_dependency value="platform.utilities.assert.MIMXRT555S"/>
              <component_dependency value="utility.debug_console.MIMXRT555S"/>
              <component_dependency value="utility.debug_console_template_config.MIMXRT555S"/>
            </all>
            <all>
              <component_dependency value="platform.utilities.assert_lite.MIMXRT555S"/>
              <component_dependency value="utility.debug_console_lite.MIMXRT555S"/>
            </all>
          </any_of>
          <component_dependency value="component.usart_adapter.MIMXRT555S"/>
          <component_dependency value="device.MIMXRT555S_startup.MIMXRT555S"/>
          <component_dependency value="platform.drivers.cache_cache64.MIMXRT555S"/>
          <component_dependency value="platform.drivers.clock.MIMXRT555S"/>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <component_dependency value="platform.drivers.flexcomm_usart.MIMXRT555S"/>
          <component_dependency value="platform.drivers.flexspi.MIMXRT555S"/>
          <component_dependency value="platform.drivers.lpc_gpio.MIMXRT555S"/>
          <component_dependency value="platform.drivers.lpc_iopctl.MIMXRT555S"/>
          <component_dependency value="platform.drivers.power.MIMXRT555S"/>
          <component_dependency value="platform.drivers.reset.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" config="true" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="pin_mux.h"/>
        <files mask="peripherals.h"/>
      </source>
      <source relative_path="./" config="true" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="pin_mux.c"/>
        <files mask="peripherals.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.devices.MIMXRT555S_linker.MIMXRT555S" name="MIMXRT555S_linker" brief="Device MIMXRT555S_linker" version="1.0.0" full_name="Device MIMXRT555S_linker" category="Device/SDK Utilities" user_visible="true" type="linker" package_base_path="devices/MIMXRT555S" project_base_path="MIMXRT555S">
      <dependencies>
        <device_dependency value="MIMXRT555S"/>
      </dependencies>
      <source toolchain="mdk" relative_path="arm" config="true" type="linker" device_cores="cm33_MIMXRT555S">
        <files mask="MIMXRT555Sxxxx_ram.scf"/>
        <files mask="MIMXRT555Sxxxx_flash.scf"/>
      </source>
      <source toolchain="armgcc" relative_path="gcc" config="true" type="linker" device_cores="cm33_MIMXRT555S">
        <files mask="MIMXRT555Sxxxx_ram.ld"/>
        <files mask="MIMXRT555Sxxxx_flash.ld"/>
      </source>
      <source toolchain="iar" relative_path="iar" config="true" type="linker" device_cores="cm33_MIMXRT555S">
        <files mask="MIMXRT555Sxxxx_ram.icf"/>
        <files mask="MIMXRT555Sxxxx_flash.icf"/>
      </source>
    </component>
    <component id="utility.str.MIMXRT555S" name="utility_str" brief="Utility str" version="1.0.0" full_name="Utility str" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT555S/utilities" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="str" type="c_include">
        <files mask="fsl_str.h"/>
      </source>
      <source relative_path="str" type="src">
        <files mask="fsl_str.c"/>
      </source>
      <include_paths>
        <include_path relative_path="str" type="c_include"/>
        <include_path relative_path="str" type="asm_include"/>
      </include_paths>
    </component>
    <component id="utility.debug_console_lite.MIMXRT555S" name="debug_console_lite" brief="Utility debug_console_lite" version="1.0.0" full_name="Utility debug_console_lite" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT555S/utilities" project_base_path="utilities">
      <dependencies>
        <all>
          <not>
            <component_dependency value="utility.debug_console.MIMXRT555S"/>
          </not>
          <component_dependency value="platform.drivers.flexcomm_usart.MIMXRT555S"/>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <component_dependency value="utility.str.MIMXRT555S"/>
          <component_dependency value="component.usart_adapter.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="debug_console_lite" type="c_include">
        <files mask="fsl_debug_console.h"/>
      </source>
      <source relative_path="debug_console_lite" type="src">
        <files mask="fsl_debug_console.c"/>
      </source>
      <include_paths>
        <include_path relative_path="debug_console_lite" type="c_include"/>
        <include_path relative_path="debug_console_lite" type="asm_include"/>
      </include_paths>
    </component>
    <component id="utility.debug_console.MIMXRT555S" name="debug_console" brief="Utility debug_console" version="1.0.1" full_name="Utility debug_console" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT555S/utilities" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="component.serial_manager.MIMXRT555S"/>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <component_dependency value="utility.str.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="debug_console" type="c_include">
        <files mask="fsl_debug_console.h"/>
      </source>
      <source relative_path="debug_console" type="src">
        <files mask="fsl_debug_console.c"/>
      </source>
      <include_paths>
        <include_path relative_path="debug_console" type="c_include"/>
        <include_path relative_path="debug_console" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.utilities.assert.MIMXRT555S" name="assert" brief="Utility assert" version="1.0.0" full_name="Utility assert" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT555S/utilities" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <component_dependency value="utility.debug_console.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_assert.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_assert.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.utilities.assert_lite.MIMXRT555S" name="assert_lite" brief="Utility assert_lite" version="1.0.0" full_name="Utility assert_lite" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT555S/utilities/debug_console_lite" project_base_path="utilities">
      <dependencies>
        <all>
          <not>
            <component_dependency value="platform.utilities.assert.MIMXRT555S"/>
          </not>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <component_dependency value="utility.debug_console_lite.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_assert.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_assert.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="device.MIMXRT555S_startup.MIMXRT555S" name="MIMXRT555S_startup" brief="Device MIMXRT555S_startup" version="1.0.0" full_name="Device MIMXRT555S_startup" category="Device/Startup" user_visible="true" type="startup" package_base_path="devices/MIMXRT555S" project_base_path="startup">
      <dependencies>
        <all>
          <component_dependency value="device.MIMXRT555S_system.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" config="true" type="src_c">
        <files mask="startup_mimxrt555s.c"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" config="true" type="src_cpp">
        <files mask="startup_mimxrt555s.cpp"/>
      </source>
      <source toolchain="iar" relative_path="iar" config="true" type="asm_include">
        <files mask="startup_MIMXRT555S.s"/>
      </source>
      <source toolchain="armgcc" relative_path="gcc" config="true" type="asm_include">
        <files mask="startup_MIMXRT555S.S"/>
      </source>
      <source toolchain="mdk" relative_path="arm" config="true" type="asm_include">
        <files mask="startup_MIMXRT555S.S"/>
      </source>
    </component>
    <component id="device.MIMXRT555S_CMSIS.MIMXRT555S" name="MIMXRT555S_CMSIS" brief="Device MIMXRT555S_cmsis" version="1.0.0" full_name="Device MIMXRT555S_cmsis" category="Device/CMSIS" user_visible="true" type="CMSIS_Include" package_base_path="devices/MIMXRT555S" project_base_path="device">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Include_core_cm.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_device_registers.h"/>
        <files mask="MIMXRT555S.h"/>
        <files mask="MIMXRT555S_features.h"/>
        <files mask="MIMXRT555S_COMMON.h"/>
      </source>
      <source relative_path="periph" type="c_include">
        <files mask="PERI_ADC.h"/>
        <files mask="PERI_AHB_SECURE_CTRL.h"/>
        <files mask="PERI_AXI_SWITCH_AMIB.h"/>
        <files mask="PERI_AXI_SWITCH_ASIB.h"/>
        <files mask="PERI_CACHE64_CTRL.h"/>
        <files mask="PERI_CACHE64_POLSEL.h"/>
        <files mask="PERI_CASPER.h"/>
        <files mask="PERI_CLKCTL0.h"/>
        <files mask="PERI_CLKCTL1.h"/>
        <files mask="PERI_CMP.h"/>
        <files mask="PERI_CRC.h"/>
        <files mask="PERI_CTIMER.h"/>
        <files mask="PERI_DEBUGGER_MAILBOX.h"/>
        <files mask="PERI_DMA.h"/>
        <files mask="PERI_DMIC.h"/>
        <files mask="PERI_FLEXCOMM.h"/>
        <files mask="PERI_FLEXIO.h"/>
        <files mask="PERI_FLEXSPI.h"/>
        <files mask="PERI_FREQME.h"/>
        <files mask="PERI_GPIO.h"/>
        <files mask="PERI_HASHCRYPT.h"/>
        <files mask="PERI_I2C.h"/>
        <files mask="PERI_I2S.h"/>
        <files mask="PERI_I3C.h"/>
        <files mask="PERI_INPUTMUX.h"/>
        <files mask="PERI_IOPCTL.h"/>
        <files mask="PERI_LCDIF.h"/>
        <files mask="PERI_MIPI_DSI_HOST.h"/>
        <files mask="PERI_MRT.h"/>
        <files mask="PERI_MU.h"/>
        <files mask="PERI_OCOTP.h"/>
        <files mask="PERI_OSTIMER.h"/>
        <files mask="PERI_OTFAD.h"/>
        <files mask="PERI_PINT.h"/>
        <files mask="PERI_PMC.h"/>
        <files mask="PERI_POWERQUAD.h"/>
        <files mask="PERI_PUF.h"/>
        <files mask="PERI_ROMCP.h"/>
        <files mask="PERI_RSTCTL0.h"/>
        <files mask="PERI_RSTCTL1.h"/>
        <files mask="PERI_RTC.h"/>
        <files mask="PERI_SCT.h"/>
        <files mask="PERI_SEMA42.h"/>
        <files mask="PERI_SPI.h"/>
        <files mask="PERI_SYSCTL0.h"/>
        <files mask="PERI_SYSCTL1.h"/>
        <files mask="PERI_TRNG.h"/>
        <files mask="PERI_USART.h"/>
        <files mask="PERI_USBHSD.h"/>
        <files mask="PERI_USBHSDCD.h"/>
        <files mask="PERI_USBHSH.h"/>
        <files mask="PERI_USBPHY.h"/>
        <files mask="PERI_USDHC.h"/>
        <files mask="PERI_UTICK.h"/>
        <files mask="PERI_WWDT.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="periph" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="periph" type="asm_include"/>
      </include_paths>
    </component>
    <component id="device.MIMXRT555S_system.MIMXRT555S" name="MIMXRT555S_system" brief="Device MIMXRT555S_system" version="1.0.0" full_name="Device MIMXRT555S_system" category="Device/CMSIS" user_visible="true" type="CMSIS_Include" package_base_path="devices/MIMXRT555S" project_base_path="device">
      <dependencies>
        <all>
          <component_dependency value="device.MIMXRT555S_CMSIS.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="system_MIMXRT555S.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="system_MIMXRT555S.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Include_core_cm.MIMXRT555S" name="CMSIS_Include_CM" brief="CMSIS-CORE for Cortex-M, ARMv8-M, ARMv8.1-M" version="6.1.0" full_name="CMSIS Include For Cortex-M, ARMv8-M, ARMv8.1-M" category="CMSIS/CORE" user_visible="true" type="CMSIS_Include" package_base_path="CMSIS/Core/Include" project_base_path="CMSIS">
      <dependencies>
        <all>
          <device_dependency value="MIMXRT555S"/>
          <device_core_dependency value="cm33_MIMXRT555S"/>
        </all>
      </dependencies>
      <source compiler="compiler_armclang" relative_path="./" type="c_include">
        <files mask="cmsis_armclang.h"/>
      </source>
      <source compiler="compiler_armclang" relative_path="m-profile" type="c_include">
        <files mask="cmsis_armclang_m.h"/>
      </source>
      <source compiler="compiler_armclang compiler_gcc compiler_iar" relative_path="./" type="c_include">
        <files mask="cmsis_compiler.h"/>
        <files mask="cmsis_version.h"/>
      </source>
      <source compiler="compiler_iar" relative_path="m-profile" type="c_include">
        <files mask="cmsis_iccarm_m.h"/>
      </source>
      <source compiler="compiler_gcc" relative_path="./" type="c_include">
        <files mask="cmsis_gcc.h"/>
      </source>
      <source compiler="compiler_gcc" relative_path="m-profile" type="c_include">
        <files mask="cmsis_gcc_m.h"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm33_MIMXRT555S">
        <files mask="core_cm33.h"/>
        <files mask="tz_context.h"/>
      </source>
      <source relative_path="m-profile" type="c_include" device_cores="cm33_MIMXRT555S">
        <files mask="armv8m_mpu.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Include_core_cm.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="m-profile" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="m-profile" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_RTOS2_RTX.MIMXRT555S" name="CMSIS_RTOS2_RTX5" brief="CMSIS-RTOS2 RTX5 for Cortex-M, SC000, C300 and Armv8-M (Library)" version="5.9.0" full_name="CMSIS RTOS2 RTX5" category="CMSIS/RTOS2" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/RTOS2" project_base_path="CMSIS/RTOS2">
      <defines>
        <define name="CMSIS_device_header" value="'&quot;fsl_device_registers.h&quot;'"/>
        <define name="RTE_COMPONENTS_H" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Device_API_OSTick.MIMXRT555S"/>
          <component_dependency value="CMSIS_Device_API_RTOS2.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="RTX/Source" type="c_include">
        <files mask="rtx_core_c.h"/>
        <files mask="rtx_core_ca.h"/>
        <files mask="rtx_core_cm.h"/>
        <files mask="rtx_lib.h"/>
      </source>
      <source relative_path="RTX/Source" type="src">
        <files mask="rtx_delay.c"/>
        <files mask="rtx_evflags.c"/>
        <files mask="rtx_evr.c"/>
        <files mask="rtx_kernel.c"/>
        <files mask="rtx_memory.c"/>
        <files mask="rtx_mempool.c"/>
        <files mask="rtx_msgqueue.c"/>
        <files mask="rtx_mutex.c"/>
        <files mask="rtx_semaphore.c"/>
        <files mask="rtx_system.c"/>
        <files mask="rtx_thread.c"/>
        <files mask="rtx_timer.c"/>
        <files mask="rtx_lib.c"/>
      </source>
      <source relative_path="RTX/Include" type="c_include">
        <files mask="rtx_evr.h"/>
        <files mask="rtx_os.h"/>
        <files mask="rtx_def.h"/>
      </source>
      <source relative_path="RTX/Config" type="src">
        <files mask="RTX_Config.c"/>
      </source>
      <source relative_path="RTX/Config" type="c_include">
        <files mask="RTX_Config.h"/>
      </source>
      <source relative_path="Source" type="src" device_cores="cm33_MIMXRT555S">
        <files mask="os_systick.c"/>
      </source>
      <source toolchain="mdk armgcc mcuxpresso" relative_path="RTX/Source/GCC" type="asm_include" device_cores="cm33_MIMXRT555S">
        <files mask="irq_armv8mml.S"/>
      </source>
      <source toolchain="iar" relative_path="RTX/Source/IAR" type="asm_include" device_cores="cm33_MIMXRT555S">
        <files mask="irq_armv8mml.s"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_RTOS2_RTX.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="RTX/Include" type="c_include"/>
        <include_path relative_path="RTX/Config" type="c_include"/>
        <include_path relative_path="RTX/Include" type="asm_include"/>
        <include_path relative_path="RTX/Config" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_RTOS2_RTX_LIB.MIMXRT555S" name="CMSIS_RTOS2_RTX5_Library" brief="CMSIS-RTOS2 RTX5 for Cortex-M, SC000, C300 and Armv8-M (Library)" version="5.9.0" full_name="CMSIS RTOS2 RTX5" category="CMSIS/RTOS2" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/RTOS2" project_base_path="CMSIS/RTOS2">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Device_API_OSTick.MIMXRT555S"/>
          <component_dependency value="CMSIS_Device_API_RTOS2.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source toolchain="iar" relative_path="RTX/Library/IAR" project_relative_path="./" type="lib" device_cores="cm33_MIMXRT555S" dsp="true" fpu="true">
        <files mask="RTX_V8MMF.a"/>
      </source>
      <source toolchain="iar" relative_path="RTX/Library/IAR" project_relative_path="./" type="lib" device_cores="cm33_MIMXRT555S" dsp="true" fpu="true">
        <files mask="RTX_V8MMFN.a"/>
      </source>
      <source compiler="compiler_gcc" relative_path="RTX/Library/GCC" project_relative_path="./" type="lib" device_cores="cm33_MIMXRT555S" dsp="true" fpu="true">
        <files mask="libRTX_V8MMF.a"/>
      </source>
      <source compiler="compiler_gcc" relative_path="RTX/Library/GCC" project_relative_path="./" type="lib" device_cores="cm33_MIMXRT555S" dsp="true" fpu="true">
        <files mask="libRTX_V8MMFN.a"/>
      </source>
      <source compiler="compiler_armclang" relative_path="RTX/Library/CLANG" project_relative_path="./" type="lib" device_cores="cm33_MIMXRT555S" dsp="true" fpu="true">
        <files mask="libRTX_V8MMF.a"/>
      </source>
      <source compiler="compiler_armclang" relative_path="RTX/Library/CLANG" project_relative_path="./" type="lib" device_cores="cm33_MIMXRT555S" dsp="true" fpu="true">
        <files mask="libRTX_V8MMFN.a"/>
      </source>
      <source relative_path="RTX/Source" type="c_include">
        <files mask="rtx_core_c.h"/>
        <files mask="rtx_core_ca.h"/>
        <files mask="rtx_core_cm.h"/>
        <files mask="rtx_lib.h"/>
      </source>
      <source relative_path="RTX/Source" type="src">
        <files mask="rtx_lib.c"/>
      </source>
      <source relative_path="RTX/Include" type="c_include">
        <files mask="rtx_evr.h"/>
        <files mask="rtx_os.h"/>
        <files mask="rtx_def.h"/>
      </source>
      <source relative_path="RTX/Config" type="src">
        <files mask="RTX_Config.c"/>
      </source>
      <source relative_path="RTX/Config" type="c_include">
        <files mask="RTX_Config.h"/>
      </source>
      <source toolchain="iar" relative_path="RTX/Library/IAR" type="lib" device_cores="cm33_MIMXRT555S" dsp="true" fpu="true" tz="true">
        <files mask="RTX_V8MMF.a"/>
      </source>
      <source toolchain="iar" relative_path="RTX/Library/IAR" type="lib" device_cores="cm33_MIMXRT555S" dsp="true" fpu="true">
        <files mask="RTX_V8MMFN.a"/>
      </source>
      <source compiler="compiler_gcc" relative_path="RTX/Library/GCC" type="lib" device_cores="cm33_MIMXRT555S" dsp="true" fpu="true" tz="true">
        <files mask="libRTX_V8MMF.a"/>
      </source>
      <source compiler="compiler_gcc" relative_path="RTX/Library/GCC" type="lib" device_cores="cm33_MIMXRT555S" dsp="true" fpu="true">
        <files mask="libRTX_V8MMFN.a"/>
      </source>
      <source compiler="compiler_armclang" relative_path="RTX/Library/CLANG" type="lib" device_cores="cm33_MIMXRT555S" dsp="true" fpu="true" tz="true">
        <files mask="libRTX_V8MMF.a"/>
      </source>
      <source compiler="compiler_armclang" relative_path="RTX/Library/CLANG" type="lib" device_cores="cm33_MIMXRT555S" dsp="true" fpu="true">
        <files mask="libRTX_V8MMFN.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_RTOS2_RTX_LIB.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="RTX/Source" type="c_include"/>
        <include_path relative_path="RTX/Include" type="c_include"/>
        <include_path relative_path="RTX/Config" type="c_include"/>
        <include_path relative_path="RTX/Source" type="asm_include"/>
        <include_path relative_path="RTX/Include" type="asm_include"/>
        <include_path relative_path="RTX/Config" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.MIMXRT555S" name="FreeRTOS kernel" brief="FreeRTOS kernel" version="11.0.1" full_name="FreeRTOS kernel" category="RTOS/Core" user_visible="true" type="OS" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <defines>
        <define name="SDK_OS_FREE_RTOS" value=""/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.freertos-kernel.heap_1.MIMXRT555S"/>
            <component_dependency value="middleware.freertos-kernel.heap_2.MIMXRT555S"/>
            <component_dependency value="middleware.freertos-kernel.heap_3.MIMXRT555S"/>
            <component_dependency value="middleware.freertos-kernel.heap_4.MIMXRT555S"/>
            <component_dependency value="middleware.freertos-kernel.heap_5.MIMXRT555S"/>
          </any_of>
          <component_dependency value="middleware.freertos-kernel.config.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="croutine.c"/>
        <files mask="event_groups.c"/>
        <files mask="list.c"/>
        <files mask="queue.c"/>
        <files mask="stream_buffer.c"/>
        <files mask="tasks.c"/>
        <files mask="timers.c"/>
      </source>
      <source relative_path="include" type="c_include">
        <files mask="atomic.h"/>
        <files mask="croutine.h"/>
        <files mask="deprecated_definitions.h"/>
        <files mask="event_groups.h"/>
        <files mask="FreeRTOS.h"/>
        <files mask="list.h"/>
        <files mask="message_buffer.h"/>
        <files mask="mpu_prototypes.h"/>
        <files mask="mpu_syscall_numbers.h"/>
        <files mask="mpu_wrappers.h"/>
        <files mask="portable.h"/>
        <files mask="projdefs.h"/>
        <files mask="queue.h"/>
        <files mask="semphr.h"/>
        <files mask="stack_macros.h"/>
        <files mask="StackMacros.h"/>
        <files mask="stream_buffer.h"/>
        <files mask="task.h"/>
        <files mask="timers.h"/>
      </source>
      <source relative_path="include" type="doc">
        <files mask="stdint.readme"/>
      </source>
      <source relative_path="portable/MemMang" type="other">
        <files mask="ReadMe.url"/>
      </source>
      <source relative_path="portable" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.cm33_non_trustzone.MIMXRT555S" name="cm33 nontrustzone port" brief="FreeRTOS cm33 non trustzone port" version="11.0.1" full_name="FreeRTOS cm33 non trustzone port" category="RTOS/cm33_non_trustzone_port" user_visible="true" type="middleware" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
          <device_core_dependency value="cm33_MIMXRT555S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc mcuxpresso mdk" relative_path="portable/GCC/ARM_CM33_NTZ/non_secure" type="src" device_cores="cm33_MIMXRT555S" fpu="true">
        <files mask="mpu_wrappers_v2_asm.c"/>
        <files mask="port.c"/>
        <files mask="portasm.c"/>
      </source>
      <source toolchain="armgcc mcuxpresso mdk" relative_path="portable/GCC/ARM_CM33_NTZ/non_secure" type="c_include" device_cores="cm33_MIMXRT555S" fpu="true">
        <files mask="portasm.h"/>
        <files mask="portmacro.h"/>
        <files mask="portmacrocommon.h"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33_NTZ/non_secure" type="asm_include" device_cores="cm33_MIMXRT555S" fpu="true">
        <files mask="mpu_wrappers_v2_asm.S"/>
        <files mask="portasm.s"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33_NTZ/non_secure" type="src" device_cores="cm33_MIMXRT555S" fpu="true">
        <files mask="port.c"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33_NTZ/non_secure" type="c_include" device_cores="cm33_MIMXRT555S" fpu="true">
        <files mask="portasm.h"/>
        <files mask="portmacro.h"/>
        <files mask="portmacrocommon.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_cm33_non_trustzone.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="portable/IAR/ARM_CM33_NTZ/non_secure" toolchain="iar" type="c_include" device_cores="cm33_MIMXRT555S" fpu="true"/>
        <include_path relative_path="portable/GCC/ARM_CM33_NTZ/non_secure" toolchain="armgcc mcuxpresso mdk" type="c_include" device_cores="cm33_MIMXRT555S" fpu="true"/>
        <include_path relative_path="portable/IAR/ARM_CM33_NTZ/non_secure" toolchain="iar" type="asm_include" device_cores="cm33_MIMXRT555S" fpu="true"/>
        <include_path relative_path="portable/GCC/ARM_CM33_NTZ/non_secure" toolchain="armgcc mcuxpresso mdk" type="asm_include" device_cores="cm33_MIMXRT555S" fpu="true"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.cm33_trustzone.non_secure.MIMXRT555S" name="cm33 secure port" brief="FreeRTOS cm33 secure port" version="11.0.1" full_name="FreeRTOS cm33 secure port" category="RTOS/cm33_secure_port" user_visible="true" type="middleware" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
          <device_core_dependency value="cm33_MIMXRT555S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc mcuxpresso mdk" relative_path="portable/GCC/ARM_CM33/non_secure" type="src" device_cores="cm33_MIMXRT555S" fpu="true">
        <files mask="mpu_wrappers_v2_asm.c"/>
        <files mask="port.c"/>
        <files mask="portasm.c"/>
      </source>
      <source toolchain="armgcc mcuxpresso mdk" relative_path="portable/GCC/ARM_CM33/non_secure" type="c_include" device_cores="cm33_MIMXRT555S" fpu="true">
        <files mask="portasm.h"/>
        <files mask="portmacro.h"/>
        <files mask="portmacrocommon.h"/>
      </source>
      <source toolchain="armgcc mcuxpresso mdk" relative_path="portable/GCC/ARM_CM33/secure" type="c_include" device_cores="cm33_MIMXRT555S" fpu="true">
        <files mask="secure_context.h"/>
        <files mask="secure_init.h"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33/non_secure" type="asm_include" device_cores="cm33_MIMXRT555S" fpu="true">
        <files mask="mpu_wrappers_v2_asm.S"/>
        <files mask="portasm.s"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33/non_secure" type="src" device_cores="cm33_MIMXRT555S" fpu="true">
        <files mask="port.c"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33/non_secure" type="c_include" device_cores="cm33_MIMXRT555S" fpu="true">
        <files mask="portasm.h"/>
        <files mask="portmacro.h"/>
        <files mask="portmacrocommon.h"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33/secure" type="c_include" device_cores="cm33_MIMXRT555S" fpu="true">
        <files mask="secure_context.h"/>
        <files mask="secure_init.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_cm33_trustzone_non_secure.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="portable/IAR/ARM_CM33/non_secure" toolchain="iar" type="c_include" device_cores="cm33_MIMXRT555S" fpu="true"/>
        <include_path relative_path="portable/IAR/ARM_CM33/secure" toolchain="iar" type="c_include" device_cores="cm33_MIMXRT555S" fpu="true"/>
        <include_path relative_path="portable/GCC/ARM_CM33/non_secure" toolchain="armgcc mcuxpresso mdk" type="c_include" device_cores="cm33_MIMXRT555S" fpu="true"/>
        <include_path relative_path="portable/GCC/ARM_CM33/secure" toolchain="armgcc mcuxpresso mdk" type="c_include" device_cores="cm33_MIMXRT555S" fpu="true"/>
        <include_path relative_path="portable/IAR/ARM_CM33/non_secure" toolchain="iar" type="asm_include" device_cores="cm33_MIMXRT555S" fpu="true"/>
        <include_path relative_path="portable/IAR/ARM_CM33/secure" toolchain="iar" type="asm_include" device_cores="cm33_MIMXRT555S" fpu="true"/>
        <include_path relative_path="portable/GCC/ARM_CM33/non_secure" toolchain="armgcc mcuxpresso mdk" type="asm_include" device_cores="cm33_MIMXRT555S" fpu="true"/>
        <include_path relative_path="portable/GCC/ARM_CM33/secure" toolchain="armgcc mcuxpresso mdk" type="asm_include" device_cores="cm33_MIMXRT555S" fpu="true"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.cm33_trustzone.secure.MIMXRT555S" name="cm33 secure port" brief="FreeRTOS Secure Context" version="11.0.1" full_name="FreeRTOS Secure Context" category="RTOS/cm33 secure port" user_visible="true" type="middleware" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <device_dependency value="MIMXRT555S"/>
          <device_core_dependency value="cm33_MIMXRT555S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc mcuxpresso mdk" relative_path="portable/GCC/ARM_CM33/secure" type="src" device_cores="cm33_MIMXRT555S" fpu="true">
        <files mask="secure_context.c"/>
        <files mask="secure_context_port.c"/>
        <files mask="secure_heap.c"/>
        <files mask="secure_init.c"/>
      </source>
      <source toolchain="armgcc mcuxpresso mdk" relative_path="portable/GCC/ARM_CM33/secure" type="c_include" device_cores="cm33_MIMXRT555S" fpu="true">
        <files mask="secure_context.h"/>
        <files mask="secure_heap.h"/>
        <files mask="secure_init.h"/>
        <files mask="secure_port_macros.h"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33/secure" type="src" device_cores="cm33_MIMXRT555S">
        <files mask="secure_context.c"/>
        <files mask="secure_heap.c"/>
        <files mask="secure_init.c"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33/secure" type="c_include" device_cores="cm33_MIMXRT555S">
        <files mask="secure_context.h"/>
        <files mask="secure_heap.h"/>
        <files mask="secure_init.h"/>
        <files mask="secure_port_macros.h"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33/secure" type="asm_include" device_cores="cm33_MIMXRT555S">
        <files mask="secure_context_port_asm.s"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_cm33_trustzone_secure.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="portable/GCC/ARM_CM33/secure" toolchain="armgcc mcuxpresso mdk" type="c_include"/>
        <include_path relative_path="portable/GCC/ARM_CM33/non_secure" toolchain="armgcc mcuxpresso mdk" type="c_include"/>
        <include_path relative_path="portable/IAR/ARM_CM33/secure" toolchain="iar" type="c_include"/>
        <include_path relative_path="portable/IAR/ARM_CM33/non_secure" toolchain="iar" type="c_include"/>
        <include_path relative_path="portable/GCC/ARM_CM33/secure" toolchain="armgcc mcuxpresso mdk" type="asm_include"/>
        <include_path relative_path="portable/GCC/ARM_CM33/non_secure" toolchain="armgcc mcuxpresso mdk" type="asm_include"/>
        <include_path relative_path="portable/IAR/ARM_CM33/secure" toolchain="iar" type="asm_include"/>
        <include_path relative_path="portable/IAR/ARM_CM33/non_secure" toolchain="iar" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.extension.MIMXRT555S" name="FreeRTOS NXP extension" brief="FreeRTOS NXP extension" version="11.0.1" full_name="FreeRTOS NXP extension" category="RTOS/TAD extension" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="include" type="c_include">
        <files mask="freertos_tasks_c_additions.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_extension.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.heap_1.MIMXRT555S" name="FreeRTOS heap 1" brief="FreeRTOS heap 1" version="11.0.1" full_name="FreeRTOS heap 1" category="RTOS/Heap" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_1.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_heap_1.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_2.MIMXRT555S" name="FreeRTOS heap 2" brief="FreeRTOS heap 2" version="11.0.1" full_name="FreeRTOS heap 2" category="RTOS/Heap" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_2.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_heap_2.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_3.MIMXRT555S" name="FreeRTOS heap 3" brief="FreeRTOS heap 3" version="11.0.1" full_name="FreeRTOS heap_3" category="RTOS/Heap" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_3.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_heap_3.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_4.MIMXRT555S" name="FreeRTOS heap 4" brief="FreeRTOS heap 4" version="11.0.1" full_name="FreeRTOS heap 4" category="RTOS/Heap" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_4.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_heap_4.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_5.MIMXRT555S" name="FreeRTOS heap 5" brief="FreeRTOS heap 5" version="11.0.1" full_name="FreeRTOS heap 5" category="RTOS/Heap" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_5.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_heap_5.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.mpu_wrappers.MIMXRT555S" name="old FreeRTOS MPU wrappers used before V10.6.0" brief="old FreeRTOS MPU wrappers used before V10.6.0" version="11.0.1" full_name="old FreeRTOS MPU wrappers used before V10.6.0" category="RTOS/MPU wrappers" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="portable/Common" type="src">
        <files mask="mpu_wrappers.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_mpu_wrappers.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.mpu_wrappers_v2.MIMXRT555S" name="new V2 FreeRTOS MPU wrappers introduced in V10.6.0" brief="new V2 FreeRTOS MPU wrappers introduced in V10.6.0" version="11.0.1" full_name="new V2 FreeRTOS MPU wrappers introduced in V10.6.0" category="RTOS/MPU wrappers V2" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="portable/Common" type="src">
        <files mask="mpu_wrappers_v2.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_mpu_wrappers_v2.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.config.MIMXRT555S" name="FreeRTOS configuration template" brief="Template configuration file to be edited by user. Provides also memory allocator (heap_x), change variant if needed." version="11.0.1" full_name="FreeRTOS configuration template" category="RTOS/freertos template" user_visible="true" type="project_template" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="template" config="true" type="c_include">
        <files mask="FreeRTOSConfig.h"/>
      </source>
      <source relative_path="template/ARM_CM33_3_priority_bits" config="true" type="c_include" device_cores="cm33_MIMXRT555S" fpu="true">
        <files mask="FreeRTOSConfig_Gen.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_config.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/ARM_CM33_3_priority_bits" type="c_include" device_cores="cm33_MIMXRT555S" fpu="true"/>
        <include_path relative_path="template" type="asm_include"/>
        <include_path relative_path="template/ARM_CM33_3_priority_bits" type="asm_include" device_cores="cm33_MIMXRT555S" fpu="true"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_usart_freertos.MIMXRT555S" name="usart_freertos" brief="FLEXCOMM USART FreeRTOS Driver" version="2.0.8" full_name="FLEXCOMM USART FreeRTOS Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm.MIMXRT555S"/>
          <component_dependency value="platform.drivers.flexcomm_usart.MIMXRT555S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_usart_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_usart_freertos.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_spi_freertos.MIMXRT555S" name="spi_freertos" brief="FLEXCOMM SPI FreeRTOS Driver" version="2.1.0" full_name="FLEXCOMM SPI FreeRTOS Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <component_dependency value="platform.drivers.flexcomm.MIMXRT555S"/>
          <component_dependency value="platform.drivers.flexcomm_spi.MIMXRT555S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_spi_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_spi_freertos.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_i2c_freertos.MIMXRT555S" name="i2c_freertos" brief="FLEXCOMM I2C FreeRTOS Driver" version="2.0.8" full_name="FLEXCOMM I2C FreeRTOS Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <component_dependency value="platform.drivers.flexcomm.MIMXRT555S"/>
          <component_dependency value="platform.drivers.flexcomm_i2c.MIMXRT555S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i2c_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_i2c_freertos.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos.corehttp.MIMXRT555S" name="corehttp" brief="Client implementation of the HTTP/1.1 specification for embedded devices." version="3.0.0" full_name="coreHTTP" category="FreeRTOS/coreHTTP" user_visible="false" type="middleware" package_base_path="rtos/freertos/corehttp" project_base_path="freertos/corehttp">
      <dependencies>
        <all>
          <component_dependency value="middleware.llhttp.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="core_http_client.c"/>
      </source>
      <source relative_path="source/include" type="c_include">
        <files mask="core_http_client.h"/>
        <files mask="core_http_client_private.h"/>
        <files mask="core_http_config_defaults.h"/>
      </source>
      <source relative_path="source/interface" type="c_include">
        <files mask="transport_interface.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos_corehttp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/include" type="c_include"/>
        <include_path relative_path="source/interface" type="c_include"/>
        <include_path relative_path="source/include" type="asm_include"/>
        <include_path relative_path="source/interface" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.wwdt.MIMXRT555S" name="wwdt" brief="WWDT Driver" version="2.1.9" full_name="WWDT Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wwdt.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wwdt.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.utick.MIMXRT555S" name="utick" brief="UTICK Driver" version="2.0.5" full_name="UTICK Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <component_dependency value="platform.drivers.power.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_utick.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_utick.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.usdhc.MIMXRT555S" name="sdhc" brief="USDHC Driver" version="2.8.4" full_name="USDHC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_usdhc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_usdhc.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.trng.MIMXRT555S" name="trng" brief="TRNG Driver" version="2.0.17" full_name="TRNG Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_trng.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_trng.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.smartdma.MIMXRT555S" name="smartdma" brief="SMARTDMA Driver" version="2.10.0" full_name="SMARTDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_smartdma.h"/>
        <files mask="fsl_smartdma_prv.h"/>
        <files mask="fsl_smartdma_rt500.h"/>
        <files mask="fsl_smartdma_mcxn.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_smartdma.c"/>
        <files mask="fsl_smartdma_rt500.c"/>
        <files mask="fsl_smartdma_mcxn.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sema42.MIMXRT555S" name="sema42" brief="SEMA42 Driver" version="2.0.4" full_name="SEMA42 Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sema42.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sema42.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sctimer.MIMXRT555S" name="sctimer" brief="SCT Driver" version="2.5.1" full_name="SCT Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sctimer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sctimer.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.puf.MIMXRT555S" name="PUF" brief="PUF Driver" version="2.1.6" full_name="PUF Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_puf.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_puf.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.powerquad.MIMXRT555S" name="powerquad" brief="POWERQUAD Driver" version="2.2.0" full_name="POWERQUAD Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_powerquad_data.h"/>
        <files mask="fsl_powerquad.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_powerquad_data.c"/>
        <files mask="fsl_powerquad_basic.c"/>
        <files mask="fsl_powerquad_math.c"/>
        <files mask="fsl_powerquad_matrix.c"/>
        <files mask="fsl_powerquad_filter.c"/>
        <files mask="fsl_powerquad_transform.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.powerquad_cmsis.MIMXRT555S" name="powerquad_cmsis" brief="CMSIS DSP functions based on POWERQUAD" version="2.0.4" full_name="POWERQUAD CMSIS DSP Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_DSP_Include.MIMXRT555S"/>
          <component_dependency value="platform.drivers.powerquad.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_powerquad.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_powerquad_cmsis.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pint.MIMXRT555S" name="pint" brief="PINT Driver" version="2.1.13" full_name="PINT Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pint.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pint.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.otfad.MIMXRT555S" name="otfad" brief="OTFAD Driver" version="2.1.4" full_name="OTFAD Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_otfad.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_otfad.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.ostimer.MIMXRT555S" name="ostimer" brief="OSTimer Driver" version="2.2.2" full_name="OSTimer Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ostimer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ostimer.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.mu.MIMXRT555S" name="mu" brief="MU Driver" version="2.2.0" full_name="MU Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mu.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mu.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.mrt.MIMXRT555S" name="mrt" brief="MRT Driver" version="2.0.4" full_name="MRT Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mrt.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mrt.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.mipi_dsi.MIMXRT555S" name="mipi_dsi" brief="MIPI DSI Driver" version="2.2.1" full_name="MIPI DSI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <component_dependency value="platform.drivers.soc_mipi_dsi.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_mipi_dsi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mipi_dsi.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.mipi_dsi_smartdma.MIMXRT555S" name="mipi_dsi_smartdma" brief="MIPI DSI Driver" version="2.3.2" full_name="MIPI DSI SMARTDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.mipi_dsi.MIMXRT555S"/>
          <component_dependency value="platform.drivers.smartdma.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_mipi_dsi_smartdma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mipi_dsi_smartdma.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpc_rtc.MIMXRT555S" name="lpc_rtc" brief="RTC Driver" version="2.2.0" full_name="RTC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rtc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rtc.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpc_iopctl.MIMXRT555S" name="iopctl" brief="iopctl Driver" version="2.0.0" full_name="iopctl Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_iopctl.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpc_gpio.MIMXRT555S" name="gpio" brief="GPIO Driver" version="2.1.7" full_name="GPIO Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_gpio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_gpio.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpc_dma.MIMXRT555S" name="dma" brief="DMA Driver" version="2.5.3" full_name="DMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_dma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dma.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpc_crc.MIMXRT555S" name="lpc_crc" brief="CRC Driver" version="2.1.1" full_name="CRC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_crc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_crc.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpadc.MIMXRT555S" name="lpadc" brief="LPADC Driver" version="2.9.1" full_name="LPADC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lpadc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpadc.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lcdif.MIMXRT555S" name="lcdif" brief="LCDIF Driver" version="2.2.0" full_name="LCDIF Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lcdif.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lcdif.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.inputmux.MIMXRT555S" name="inputmux" brief="INPUTMUX Driver" version="2.0.7" full_name="INPUTMUX Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <component_dependency value="platform.drivers.inputmux_connections.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_inputmux.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_inputmux.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.iap3.MIMXRT555S" name="iap3" brief="IAP3 Driver" version="2.1.3" full_name="IAP3 Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_iap.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_iap.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.i3c.MIMXRT555S" name="i3c" brief="I3C Driver" version="2.13.0" full_name="I3C Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i3c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_i3c.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.i3c_dma.MIMXRT555S" name="i3c_dma" brief="I3C DMA Driver" version="2.1.7" full_name="I3C DMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.i3c.MIMXRT555S"/>
          <component_dependency value="platform.drivers.lpc_dma.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_i3c_dma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i3c_dma.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.hashcrypt.MIMXRT555S" name="hashcrypt" brief="Hashcrypt Driver" version="2.2.16" full_name="Hashcrypt Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_hashcrypt.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_hashcrypt.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.fmeas.MIMXRT555S" name="fmeas" brief="FMEAS Driver" version="2.1.1" full_name="FMEAS Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_fmeas.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_fmeas.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexspi.MIMXRT555S" name="flexspi" brief="FLEXSPI Driver" version="2.6.2" full_name="FLEXSPI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexspi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexspi.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexspi_dma.MIMXRT555S" name="flexspi_dma" brief="FLEXSPI DMA Driver" version="2.2.1" full_name="FLEXSPI DMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexspi.MIMXRT555S"/>
          <component_dependency value="platform.drivers.lpc_dma.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexspi_dma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexspi_dma.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_uart.MIMXRT555S" name="flexio_uart" brief="FLEXIO UART Driver" version="2.5.0" full_name="FLEXIO UART Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_uart.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_uart.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_spi.MIMXRT555S" name="flexio_spi" brief="FLEXIO SPI Driver" version="2.3.4" full_name="FLEXIO SPI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_spi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_spi.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_mculcd.MIMXRT555S" name="flexio_mculcd" brief="FLEXIO MCULCD Driver" version="2.1.0" full_name="FLEXIO MCULCD Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_mculcd.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_mculcd.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_mculcd_smartdma.MIMXRT555S" name="flexio_mculcd_smartdma" brief="FLEXIO MCULCD SMARTDMA Driver" version="2.0.4" full_name="FLEXIO MCULCD SMARTDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio_mculcd.MIMXRT555S"/>
          <component_dependency value="platform.drivers.smartdma.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_mculcd_smartdma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_mculcd_smartdma.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_i2s.MIMXRT555S" name="flexio_i2s" brief="FLEXIO I2S Driver" version="2.2.0" full_name="FLEXIO I2S Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_i2s.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_i2s.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_i2c_master.MIMXRT555S" name="flexio_i2c_master" brief="FLEXIO I2C Driver" version="2.5.0" full_name="FLEXIO I2C Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_i2c_master.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_i2c_master.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio.MIMXRT555S" name="flexio" brief="FLEXIO Driver" version="2.2.3" full_name="FLEXIO Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_usart.MIMXRT555S" name="usart" brief="usart Driver" version="2.3.3" full_name="FLEXCOMM usart Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_usart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_usart.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_usart_dma.MIMXRT555S" name="usart_dma" brief="usart Driver" version="2.3.1" full_name="FLEXCOMM usart DMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_usart.MIMXRT555S"/>
          <component_dependency value="platform.drivers.lpc_dma.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_usart_dma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_usart_dma.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_spi.MIMXRT555S" name="spi" brief="SPI Driver" version="2.3.2" full_name="FLEXCOMM SPI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <component_dependency value="platform.drivers.flexcomm.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_spi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_spi.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_spi_dma.MIMXRT555S" name="spi_dma" brief="SPI Driver" version="2.2.1" full_name="FLEXCOMM SPI DMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_spi.MIMXRT555S"/>
          <component_dependency value="platform.drivers.lpc_dma.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_spi_dma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_spi_dma.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_i2s.MIMXRT555S" name="i2s" brief="i2s Driver" version="2.3.2" full_name="FLEXCOMM i2s Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <component_dependency value="platform.drivers.flexcomm.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i2s.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_i2s.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_i2s_dma.MIMXRT555S" name="i2s_dma" brief="i2s Driver" version="2.3.3" full_name="FLEXCOMM i2s DMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_i2s.MIMXRT555S"/>
          <component_dependency value="platform.drivers.lpc_dma.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i2s_dma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_i2s_dma.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_i2c.MIMXRT555S" name="i2c" brief="I2C Driver" version="2.3.3" full_name="FLEXCOMM I2C Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <component_dependency value="platform.drivers.flexcomm.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i2c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_i2c.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_i2c_dma.MIMXRT555S" name="i2c_dma" brief="I2C Driver" version="2.3.1" full_name="FLEXCOMM I2C DMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_i2c.MIMXRT555S"/>
          <component_dependency value="platform.drivers.lpc_dma.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_i2c_dma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i2c_dma.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm.MIMXRT555S" name="flexcomm" brief="FLEXCOMM Driver" version="2.0.2" full_name="FLEXCOMM Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexcomm.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_flexcomm.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_spi_cmsis.MIMXRT555S" name="spi_cmsis" brief="SPI CMSIS Driver" version="1.0.0" full_name="SPI CMSIS Driver" category="CMSIS Driver/SPI" user_visible="true" type="CMSIS_driver" package_base_path="devices/MIMXRT555S/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Driver_Include.SPI.MIMXRT555S"/>
          <component_dependency value="device.RTE.MIMXRT555S"/>
          <component_dependency value="platform.drivers.flexcomm_spi_dma.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_spi_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_spi_cmsis.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_i2c_cmsis.MIMXRT555S" name="i2c_cmsis" brief="I2C CMSIS Driver" version="1.0.0" full_name="I2C CMSIS Driver" category="CMSIS Driver/I2C" user_visible="true" type="CMSIS_driver" package_base_path="devices/MIMXRT555S/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Driver_Include.I2C.MIMXRT555S"/>
          <component_dependency value="device.RTE.MIMXRT555S"/>
          <component_dependency value="platform.drivers.flexcomm_i2c_dma.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i2c_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_i2c_cmsis.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_usart_cmsis.MIMXRT555S" name="usart_cmsis" brief="USART CMSIS Driver" version="1.0.0" full_name="USART CMSIS Driver" category="CMSIS Driver/USART" user_visible="true" type="CMSIS_driver" package_base_path="devices/MIMXRT555S/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Driver_Include.USART.MIMXRT555S"/>
          <component_dependency value="device.RTE.MIMXRT555S"/>
          <component_dependency value="platform.drivers.flexcomm_usart_dma.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_usart_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_usart_cmsis.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dmic.MIMXRT555S" name="dmic" brief="DMIC Driver" version="2.3.2" full_name="DMIC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_dmic.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dmic.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dmic_dma.MIMXRT555S" name="dmic_dma" brief="DMIC DMA Driver" version="2.4.0" full_name="DMIC DMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.dmic.MIMXRT555S"/>
          <component_dependency value="platform.drivers.lpc_dma.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_dmic_dma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dmic_dma.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dmic_hwvad.MIMXRT555S" name="dmic_hwvad" brief="DMIC HWVAD Driver" version="2.3.0" full_name="DMIC HWVAD Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.dmic.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_dmic.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dmic.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.ctimer.MIMXRT555S" name="ctimer" brief="CTimer Driver" version="2.3.1" full_name="CTimer Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ctimer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ctimer.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.casper.MIMXRT555S" name="casper" brief="CASPER Driver" version="2.2.4" full_name="CASPER Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_casper.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_casper.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.cache_cache64.MIMXRT555S" name="cache" brief="CACHE Driver" version="2.0.9" full_name="CACHE Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_cache.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cache.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.acmp.MIMXRT555S" name="acmp" brief="ACMP Driver" version="2.3.0" full_name="ACMP Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT555S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_acmp.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_acmp.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.template.MIMXRT555S" name="Wi-Fi configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="Wi-Fi configuration template" category="Wireless/NXP Wi-Fi" user_visible="false" type="project_template" package_base_path="components/wifi_bt_module/template" project_base_path="wifi/template">
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="component.wifi_bt_module.config.MIMXRT555S"/>
              <component_dependency value="component.wifi_bt_module.tx_pwr_limits.MIMXRT555S"/>
              <component_dependency value="middleware.wifi.wifi_bt_config.template.MIMXRT555S"/>
            </all>
            <component_dependency value="component.wifi_bt_module.tx_pwr_limits.MIMXRT555S"/>
          </any_of>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_template.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.wifi.osa.MIMXRT555S" name="nxp wifi osa" brief="NXP WLAN OSA" version="1.0.0" full_name="NXP WLAN OSA" category="Wireless/NXP Wi-Fi" user_visible="true" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="incl/port/osa" type="c_include">
        <files mask="osa.h"/>
        <files mask="mem_pool.h"/>
        <files mask="mem_pool_config.h"/>
        <files mask="slist.h"/>
        <files mask="stack_simple.h"/>
      </source>
      <source relative_path="port/osa" type="src">
        <files mask="osa.c"/>
        <files mask="mem_pool.c"/>
        <files mask="mem_pool_config.c"/>
        <files mask="slist.c"/>
        <files mask="stack_simple.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_osa.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="incl/port" type="c_include"/>
        <include_path relative_path="incl/port/osa" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="incl/port" type="asm_include"/>
        <include_path relative_path="incl/port/osa" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.common_files.MIMXRT555S" name="nxp_wireless_common_files" brief="NXP WLAN common files" version="1.0.0" full_name="NXP WLAN common files" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.osa.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="incl" type="c_include">
        <files mask="wifi_config_default.h"/>
        <files mask="wifi_cal_data_ext.h"/>
        <files mask="wm_utils.h"/>
        <files mask="wmerrno.h"/>
        <files mask="wmlog.h"/>
        <files mask="wmtypes.h"/>
        <files mask="wifi_cal_data_frdmrw61x_1ant.h"/>
        <files mask="wifi_cal_data_rw61x_1ant.h"/>
        <files mask="wifi_cal_data_rw61x_1ant_diversity.h"/>
        <files mask="wifi_cal_data_rw61x_2ant.h"/>
        <files mask="wifi_cal_data_rw61x_3ant_diversity.h"/>
        <files mask="wifi_cal_data_rw61x_override.h"/>
      </source>
      <source relative_path="incl/wifidriver" type="c_include">
        <files mask="wifi-decl.h"/>
        <files mask="wifi.h"/>
        <files mask="wifi_events.h"/>
      </source>
      <source relative_path="wifidriver/incl" type="c_include">
        <files mask="mlan_decl.h"/>
        <files mask="mlan_ioctl.h"/>
        <files mask="type_decls.h"/>
      </source>
      <source relative_path="wifi_bt_firmware" type="c_include">
        <files mask="wlan_bt_fw.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_common_files.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="incl/port/osa" type="c_include"/>
        <include_path relative_path="incl/wifidriver" type="c_include"/>
        <include_path relative_path="wifi_bt_firmware" type="c_include"/>
        <include_path relative_path="wifidriver" type="c_include"/>
        <include_path relative_path="wifidriver/incl" type="c_include"/>
        <include_path relative_path="incl" type="asm_include"/>
        <include_path relative_path="incl/port/osa" type="asm_include"/>
        <include_path relative_path="incl/wifidriver" type="asm_include"/>
        <include_path relative_path="wifi_bt_firmware" type="asm_include"/>
        <include_path relative_path="wifidriver" type="asm_include"/>
        <include_path relative_path="wifidriver/incl" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.fwdnld.MIMXRT555S" name="nxp_wireless_fwdnld" brief="NXP WLAN f/w dnld driver" version="1.0.0" full_name="NXP WLAN f/w dnld driver" category="Wireless/NXP Wi-Fi" user_visible="true" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.common_files.MIMXRT555S"/>
          <component_dependency value="middleware.wifi.fwdnld_intf_abs.MIMXRT555S"/>
          <component_dependency value="middleware.wifi.mlan_sdio.MIMXRT555S"/>
          <component_dependency value="middleware.wifi.template.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="incl" type="c_include">
        <files mask="WIFI_IW416_BOARD_AW_AM457_CAL_DATA_EXT.h"/>
      </source>
      <source relative_path="wifidriver/incl" type="c_include">
        <files mask="mlan_main_defs.h"/>
      </source>
      <source relative_path="wifi_bt_firmware/8801" type="asm_include">
        <files mask="sd8801_wlan.bin.inc"/>
      </source>
      <source relative_path="wifi_bt_firmware/8801" type="c_include">
        <files mask="sd8801_wlan.h"/>
      </source>
      <source relative_path="wifi_bt_firmware/8801" type="src">
        <files mask="8801_cpu1.c"/>
      </source>
      <source relative_path="wifi_bt_firmware/IW416" type="asm_include">
        <files mask="sduartIW416_wlan_bt.bin.inc"/>
        <files mask="sdIW416_wlan.bin.inc"/>
        <files mask="uartIW416_bt.bin.inc"/>
      </source>
      <source relative_path="wifi_bt_firmware/IW416" type="c_include">
        <files mask="sduartIW416_wlan_bt.h"/>
        <files mask="sdIW416_wlan.h"/>
        <files mask="uartIW416_bt.h"/>
      </source>
      <source relative_path="wifi_bt_firmware/IW416" type="src">
        <files mask="IW416_cpu12.c"/>
        <files mask="IW416_cpu1.c"/>
        <files mask="IW416_cpu2.c"/>
      </source>
      <source relative_path="wifi_bt_firmware/8987" type="asm_include">
        <files mask="sduart8987_wlan_bt.bin.inc"/>
        <files mask="sd8987_wlan.bin.inc"/>
        <files mask="uart8987_bt.bin.inc"/>
      </source>
      <source relative_path="wifi_bt_firmware/8987" type="c_include">
        <files mask="sduart8987_wlan_bt.h"/>
        <files mask="sd8987_wlan.h"/>
        <files mask="uart8987_bt.h"/>
      </source>
      <source relative_path="wifi_bt_firmware/8987" type="src">
        <files mask="8987_cpu12.c"/>
        <files mask="8987_cpu1.c"/>
        <files mask="8987_cpu2.c"/>
      </source>
      <source relative_path="wifi_bt_firmware/nw61x" type="asm_include">
        <files mask="sduart_nw61x.bin.se.inc"/>
        <files mask="sd_nw61x.bin.se.inc"/>
        <files mask="uart_nw61x.bin.se.inc"/>
      </source>
      <source relative_path="wifi_bt_firmware/nw61x" type="c_include">
        <files mask="sduart_nw61x_se.h"/>
        <files mask="sd_nw61x_se.h"/>
        <files mask="uart_nw61x_se.h"/>
      </source>
      <source relative_path="wifi_bt_firmware/nw61x" type="src">
        <files mask="nw61x_cpu12_se.c"/>
        <files mask="nw61x_cpu1_se.c"/>
        <files mask="nw61x_cpu2_se.c"/>
      </source>
      <source relative_path="wifi_bt_firmware/iw610" type="asm_include">
        <files mask="sduart_iw610.bin.se.inc"/>
        <files mask="sd_iw610.bin.se.inc"/>
        <files mask="uart_iw610_bt.bin.se.inc"/>
      </source>
      <source relative_path="wifi_bt_firmware/iw610" type="c_include">
        <files mask="sduart_iw610_se.h"/>
        <files mask="sd_iw610_se.h"/>
        <files mask="uart_iw610_se.h"/>
      </source>
      <source relative_path="wifi_bt_firmware/iw610" type="src">
        <files mask="iw610_cpu12_se.c"/>
        <files mask="iw610_cpu2_se.c"/>
        <files mask="iw610_cpu1_se.c"/>
      </source>
      <source relative_path="wifidriver" type="src">
        <files mask="sdio.c"/>
      </source>
      <source relative_path="wifidriver" type="c_include">
        <files mask="sdio.h"/>
      </source>
      <source relative_path="firmware_dnld" type="src">
        <files mask="firmware_dnld.c"/>
      </source>
      <source relative_path="firmware_dnld" type="c_include">
        <files mask="firmware_dnld.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_fwdnld.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="wifi_bt_firmware" type="c_include"/>
        <include_path relative_path="wifi_bt_firmware/8801" type="c_include"/>
        <include_path relative_path="wifi_bt_firmware/IW416" type="c_include"/>
        <include_path relative_path="wifi_bt_firmware/8987" type="c_include"/>
        <include_path relative_path="wifi_bt_firmware/nw61x" type="c_include"/>
        <include_path relative_path="wifi_bt_firmware/iw610" type="c_include"/>
        <include_path relative_path="wifidriver" type="c_include"/>
        <include_path relative_path="wifidriver/incl" type="c_include"/>
        <include_path relative_path="firmware_dnld" type="c_include"/>
        <include_path relative_path="sdio_nxp_abs" type="c_include"/>
        <include_path relative_path="sdio_nxp_abs/incl" type="c_include"/>
        <include_path relative_path="fwdnld_intf_abs" type="c_include"/>
        <include_path relative_path="incl" type="asm_include"/>
        <include_path relative_path="wifi_bt_firmware" type="asm_include"/>
        <include_path relative_path="wifi_bt_firmware/8801" type="asm_include"/>
        <include_path relative_path="wifi_bt_firmware/IW416" type="asm_include"/>
        <include_path relative_path="wifi_bt_firmware/8987" type="asm_include"/>
        <include_path relative_path="wifi_bt_firmware/nw61x" type="asm_include"/>
        <include_path relative_path="wifi_bt_firmware/iw610" type="asm_include"/>
        <include_path relative_path="wifidriver" type="asm_include"/>
        <include_path relative_path="wifidriver/incl" type="asm_include"/>
        <include_path relative_path="firmware_dnld" type="asm_include"/>
        <include_path relative_path="sdio_nxp_abs" type="asm_include"/>
        <include_path relative_path="sdio_nxp_abs/incl" type="asm_include"/>
        <include_path relative_path="fwdnld_intf_abs" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.net_free_rtos.MIMXRT555S" name="nxp wifi osa free_rtos" brief="NXP WLAN OSA" version="1.0.0" full_name="NXP WLAN OSA" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT555S"/>
          <component_dependency value="middleware.lwip.MIMXRT555S"/>
          <component_dependency value="middleware.lwip.apps.lwiperf.MIMXRT555S"/>
          <component_dependency value="middleware.wifi.net.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="incl/port/net" type="c_include">
        <files mask="wm_net.h"/>
      </source>
      <source relative_path="port/net" type="src">
        <files mask="net.c"/>
        <files mask="wifi_netif.c"/>
      </source>
      <source relative_path="port/net" type="c_include">
        <files mask="netif_decl.h"/>
      </source>
      <source relative_path="incl/port/net/hooks" type="c_include">
        <files mask="lwip_default_hooks.h"/>
      </source>
      <source relative_path="port/net/hooks" type="src">
        <files mask="lwip_default_hooks.c"/>
      </source>
      <source relative_path="dhcpd" type="c_include">
        <files mask="dhcp-bootp.h"/>
        <files mask="dhcp-priv.h"/>
        <files mask="dns.h"/>
      </source>
      <source relative_path="dhcpd" type="src">
        <files mask="dhcp-server-main.c"/>
        <files mask="dhcp-server.c"/>
        <files mask="dns-server.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_net_free_rtos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="incl/port/osa" type="c_include"/>
        <include_path relative_path="port/osa" type="c_include"/>
        <include_path relative_path="incl/port/net" type="c_include"/>
        <include_path relative_path="incl/port/net/hooks" type="c_include"/>
        <include_path relative_path="dhcpd" type="c_include"/>
        <include_path relative_path="incl/wlcmgr" type="c_include"/>
        <include_path relative_path="incl/wifidriver" type="c_include"/>
        <include_path relative_path="wifidriver/incl" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="incl" type="asm_include"/>
        <include_path relative_path="incl/port/osa" type="asm_include"/>
        <include_path relative_path="port/osa" type="asm_include"/>
        <include_path relative_path="incl/port/net" type="asm_include"/>
        <include_path relative_path="incl/port/net/hooks" type="asm_include"/>
        <include_path relative_path="dhcpd" type="asm_include"/>
        <include_path relative_path="incl/wlcmgr" type="asm_include"/>
        <include_path relative_path="incl/wifidriver" type="asm_include"/>
        <include_path relative_path="wifidriver/incl" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.net.MIMXRT555S" name="nxp wifi osa" brief="NXP WLAN OSA" version="1.0.0" full_name="NXP WLAN OSA" category="Wireless/NXP Wi-Fi" user_visible="true" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="incl/port/net" type="c_include">
        <files mask="wm_net.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_net.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="incl/port/osa" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="incl/port/osa" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.wifidriver.MIMXRT555S" name="nxp_wifi_driver" brief="NXP Wi-Fi driver" version="1.3.46" full_name="NXP Wi-Fi driver" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="utility.debug_console.MIMXRT555S"/>
            <component_dependency value="utility.debug_console_lite.MIMXRT555S"/>
          </any_of>
          <component_dependency value="middleware.wifi.fwdnld.MIMXRT555S"/>
          <component_dependency value="middleware.wifi.fwdnld_intf_abs.MIMXRT555S"/>
          <component_dependency value="middleware.wifi.sdio.MIMXRT555S"/>
          <component_dependency value="middleware.wifi.net.MIMXRT555S"/>
          <component_dependency value="middleware.wifi.osa.MIMXRT555S"/>
          <component_dependency value="middleware.wifi.template.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="incl" type="c_include">
        <files mask="dhcp-server.h"/>
        <files mask="nxp_wifi.h"/>
      </source>
      <source relative_path="incl/wlcmgr" type="c_include">
        <files mask="wlan.h"/>
        <files mask="wlan_11d.h"/>
      </source>
      <source relative_path="incl/wifidriver" type="c_include">
        <files mask="wifi_nxp.h"/>
      </source>
      <source relative_path="wifidriver/incl" type="c_include">
        <files mask="mlan.h"/>
        <files mask="mlan_11ac.h"/>
        <files mask="mlan_11ax.h"/>
        <files mask="mlan_11h.h"/>
        <files mask="mlan_11n.h"/>
        <files mask="mlan_11n_aggr.h"/>
        <files mask="mlan_11n_rxreorder.h"/>
        <files mask="mlan_11v.h"/>
        <files mask="mlan_action.h"/>
        <files mask="mlan_11k.h"/>
        <files mask="mlan_mbo.h"/>
        <files mask="mlan_api.h"/>
        <files mask="mlan_fw.h"/>
        <files mask="mlan_ieee.h"/>
        <files mask="mlan_init.h"/>
        <files mask="mlan_join.h"/>
        <files mask="mlan_main.h"/>
        <files mask="mlan_meas.h"/>
        <files mask="mlan_remap_mem_operations.h"/>
        <files mask="mlan_uap.h"/>
        <files mask="mlan_util.h"/>
        <files mask="mlan_wmm.h"/>
      </source>
      <source relative_path="wifidriver" type="src">
        <files mask="mlan_11ac.c"/>
        <files mask="mlan_11ax.c"/>
        <files mask="mlan_11d.c"/>
        <files mask="mlan_11h.c"/>
        <files mask="mlan_11n.c"/>
        <files mask="mlan_11n_aggr.c"/>
        <files mask="mlan_11n_rxreorder.c"/>
        <files mask="mlan_11v.c"/>
        <files mask="mlan_action.c"/>
        <files mask="mlan_11k.c"/>
        <files mask="mlan_mbo.c"/>
        <files mask="mlan_api.c"/>
        <files mask="mlan_cfp.c"/>
        <files mask="mlan_cmdevt.c"/>
        <files mask="mlan_glue.c"/>
        <files mask="mlan_init.c"/>
        <files mask="mlan_join.c"/>
        <files mask="mlan_misc.c"/>
        <files mask="mlan_scan.c"/>
        <files mask="mlan_shim.c"/>
        <files mask="mlan_sta_cmd.c"/>
        <files mask="mlan_sta_cmdresp.c"/>
        <files mask="mlan_sta_event.c"/>
        <files mask="mlan_sta_ioctl.c"/>
        <files mask="mlan_sta_rx.c"/>
        <files mask="mlan_txrx.c"/>
        <files mask="mlan_wmm.c"/>
        <files mask="wifi-debug.c"/>
        <files mask="wifi-mem.c"/>
        <files mask="wifi.c"/>
        <files mask="wifi_pwrmgr.c"/>
        <files mask="wifi-wps.c"/>
      </source>
      <source relative_path="wifidriver" type="c_include">
        <files mask="wifi-debug.h"/>
        <files mask="wifi-internal.h"/>
        <files mask="wifi_common.h"/>
      </source>
      <source relative_path="wifidriver/wpa_supp_if/incl" type="c_include">
        <files mask="rtos_wpa_supp_if.h"/>
        <files mask="wifi_nxp_internal.h"/>
      </source>
      <source relative_path="wifidriver/wpa_supp_if" type="src">
        <files mask="wifi_nxp.c"/>
        <files mask="rtos_wpa_supp_if.c"/>
        <files mask="wifi_nxp_internal.c"/>
      </source>
      <source relative_path="certs" type="c_include">
        <files mask="ca-cert.h"/>
        <files mask="client-cert.h"/>
        <files mask="client-key.h"/>
        <files mask="server-cert.h"/>
        <files mask="server-key.h"/>
        <files mask="dh-param.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_wifidriver.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="incl/wlcmgr" type="c_include"/>
        <include_path relative_path="wifidriver" type="c_include"/>
        <include_path relative_path="wifidriver/incl" type="c_include"/>
        <include_path relative_path="wifidriver/wpa_supp_if" type="c_include"/>
        <include_path relative_path="wifidriver/wpa_supp_if/incl" type="c_include"/>
        <include_path relative_path="certs" type="c_include"/>
        <include_path relative_path="firmware_dnld" type="c_include"/>
        <include_path relative_path="sdio_nxp_abs" type="c_include"/>
        <include_path relative_path="sdio_nxp_abs/incl" type="c_include"/>
        <include_path relative_path="incl" type="asm_include"/>
        <include_path relative_path="incl/wlcmgr" type="asm_include"/>
        <include_path relative_path="wifidriver" type="asm_include"/>
        <include_path relative_path="wifidriver/incl" type="asm_include"/>
        <include_path relative_path="wifidriver/wpa_supp_if" type="asm_include"/>
        <include_path relative_path="wifidriver/wpa_supp_if/incl" type="asm_include"/>
        <include_path relative_path="certs" type="asm_include"/>
        <include_path relative_path="firmware_dnld" type="asm_include"/>
        <include_path relative_path="sdio_nxp_abs" type="asm_include"/>
        <include_path relative_path="sdio_nxp_abs/incl" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.wifidriver.softap.MIMXRT555S" name="nxp_wifi_driver_softap" brief="NXP Wi-Fi driver Soft AP" version="1.3.46" full_name="NXP Wi-Fi driver Soft AP" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <defines>
        <define name="CONFIG_NXP_WIFI_SOFTAP_SUPPORT" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.wifidriver.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="wifidriver" type="src">
        <files mask="wifi-uap.c"/>
        <files mask="mlan_uap_ioctl.c"/>
        <files mask="mlan_uap_cmdevent.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_wifidriver_softap.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="wifidriver" type="c_include"/>
        <include_path relative_path="wifidriver" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.MIMXRT555S" name="wifi_nxp" brief="NXP Wi-Fi functionality enables customers to quickly develop applications of interest to add connectivity to different sensors and appliances" version="1.3.46" full_name="NXP Wi-Fi" category="Wireless/NXP Wi-Fi" user_visible="true" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="utility.debug_console.MIMXRT555S"/>
            <component_dependency value="utility.debug_console_lite.MIMXRT555S"/>
          </any_of>
          <component_dependency value="middleware.wifi.template.MIMXRT555S"/>
          <component_dependency value="middleware.wifi.wifidriver.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="dhcpd" type="c_include">
        <files mask="dhcp-bootp.h"/>
        <files mask="dhcp-priv.h"/>
        <files mask="dns.h"/>
      </source>
      <source relative_path="dhcpd" type="src">
        <files mask="dhcp-server-main.c"/>
        <files mask="dhcp-server.c"/>
        <files mask="dns-server.c"/>
      </source>
      <source relative_path="incl/port/net" type="c_include">
        <files mask="wm_net.h"/>
      </source>
      <source relative_path="incl" type="c_include">
        <files mask="wmstats.h"/>
      </source>
      <source relative_path="port/net" type="src">
        <files mask="net.c"/>
        <files mask="wifi_netif.c"/>
      </source>
      <source relative_path="port/net" type="c_include">
        <files mask="netif_decl.h"/>
      </source>
      <source relative_path="wlcmgr" type="src">
        <files mask="wlan.c"/>
        <files mask="wlan_txpwrlimit_cfg.c"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
        <files mask="CMakeLists.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="incl/wifidriver" type="c_include"/>
        <include_path relative_path="incl/port/net" type="c_include"/>
        <include_path relative_path="port/net" type="c_include"/>
        <include_path relative_path="incl/port/net/hooks" type="c_include"/>
        <include_path relative_path="incl" type="asm_include"/>
        <include_path relative_path="incl/wifidriver" type="asm_include"/>
        <include_path relative_path="incl/port/net" type="asm_include"/>
        <include_path relative_path="port/net" type="asm_include"/>
        <include_path relative_path="incl/port/net/hooks" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.sdio.MIMXRT555S" name="wifi_nxp_sdio" brief="NXP Wi-Fi SDIO driver" version="1.3.46" full_name="NXP Wi-Fi SDIO" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.mlan_sdio.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="wifidriver" type="src">
        <files mask="wifi-sdio.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_sdio.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.wifi.mlan_sdio.MIMXRT555S" name="wifi_nxp_mlan_sdio" brief="NXP Wi-Fi SDIO driver" version="1.3.46" full_name="NXP Wi-Fi SDIO" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.host.usdhc.MIMXRT555S"/>
          <component_dependency value="middleware.sdmmc.sdio.MIMXRT555S"/>
          <component_dependency value="middleware.wifi.common_files.MIMXRT555S"/>
          <component_dependency value="middleware.wifi.template.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="sdio_nxp_abs" type="src">
        <files mask="mlan_sdio.c"/>
        <files mask="fwdnld_sdio.c"/>
      </source>
      <source relative_path="sdio_nxp_abs/incl" type="c_include">
        <files mask="fwdnld_sdio.h"/>
        <files mask="mlan_sdio_defs.h"/>
        <files mask="mlan_sdio.h"/>
        <files mask="mlan_sdio_api.h"/>
      </source>
      <source relative_path="wifidriver" type="c_include">
        <files mask="wifi-sdio.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_mlan_sdio.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="wifidriver" type="c_include"/>
        <include_path relative_path="sdio_nxp_abs/incl" type="c_include"/>
        <include_path relative_path="wifidriver" type="asm_include"/>
        <include_path relative_path="sdio_nxp_abs/incl" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.cli.MIMXRT555S" name="wifi_nxp_cli" brief="Middlware Wi-Fi CLI" version="1.3.46" full_name="NXP Wi-Fi CLI" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="utility.debug_console.MIMXRT555S"/>
            <component_dependency value="utility.debug_console_lite.MIMXRT555S"/>
          </any_of>
          <component_dependency value="middleware.wifi.MIMXRT555S"/>
          <component_dependency value="middleware.wifi.wifidriver.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="cli" type="c_include">
        <files mask="cli_mem.h"/>
        <files mask="wifi_shell.h"/>
      </source>
      <source relative_path="cli" type="src">
        <files mask="cli.c"/>
        <files mask="cli_mem_simple.c"/>
        <files mask="cli_utils.c"/>
        <files mask="wifi_shell.c"/>
      </source>
      <source relative_path="incl" type="c_include">
        <files mask="cli.h"/>
        <files mask="cli_utils.h"/>
        <files mask="iperf.h"/>
        <files mask="wifi_ping.h"/>
      </source>
      <source relative_path="port/osa" type="src">
        <files mask="osa_cli.c"/>
      </source>
      <source relative_path="dhcpd" type="src">
        <files mask="dhcp-server-cli.c"/>
      </source>
      <source relative_path="nw_utils" type="src">
        <files mask="wifi_ping.c"/>
        <files mask="iperf.c"/>
        <files mask="init_enet.c"/>
      </source>
      <source relative_path="nw_utils" type="c_include">
        <files mask="network_cfg.h"/>
      </source>
      <source relative_path="nw_utils/telnet" type="c_include">
        <files mask="telnet_server.h"/>
      </source>
      <source relative_path="nw_utils/telnet" type="src">
        <files mask="telnet_server.c"/>
      </source>
      <source relative_path="wlcmgr" type="src">
        <files mask="wlan_basic_cli.c"/>
        <files mask="wlan_enhanced_tests.c"/>
        <files mask="wlan_tests.c"/>
        <files mask="wlan_test_mode_tests.c"/>
      </source>
      <source relative_path="incl/wlcmgr" type="c_include">
        <files mask="wlan_tests.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_cli.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="cli" type="c_include"/>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="incl/wlcmgr" type="c_include"/>
        <include_path relative_path="nw_utils" type="c_include"/>
        <include_path relative_path="nw_utils/telnet" type="c_include"/>
        <include_path relative_path="cli" type="asm_include"/>
        <include_path relative_path="incl" type="asm_include"/>
        <include_path relative_path="incl/wlcmgr" type="asm_include"/>
        <include_path relative_path="nw_utils" type="asm_include"/>
        <include_path relative_path="nw_utils/telnet" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.wmcrypto.MIMXRT555S" name="wifi_nxp_wmcrypto" brief="Middlware Wi-Fi WMCRYPTO" version="1.0.0" full_name="NXP Wi-Fi WMCRYPTO" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.MIMXRT555S"/>
          <component_dependency value="middleware.wifi.wifidriver.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="wmcrypto" type="src">
        <files mask="wmcrypto.c"/>
        <files mask="wmcrypto_mem.c"/>
        <files mask="wm_mbedtls_entropy.c"/>
        <files mask="wm_mbedtls_mem.c"/>
        <files mask="wm_mbedtls_net.c"/>
        <files mask="wm_mbedtls_helper_api.c"/>
        <files mask="wm_utils.c"/>
      </source>
      <source relative_path="incl/wmcrypto" type="c_include">
        <files mask="wmcrypto.h"/>
      </source>
      <source relative_path="wmcrypto" type="c_include">
        <files mask="wmcrypto_mem.h"/>
        <files mask="wm_mbedtls_debug.h"/>
        <files mask="wm_mbedtls_entropy.h"/>
        <files mask="wm_mbedtls_mem.h"/>
        <files mask="wm_mbedtls_net.h"/>
        <files mask="wm_mbedtls_helper_api.h"/>
      </source>
      <source relative_path="wmcrypto/aescrypto" type="c_include">
        <files mask="aes.h"/>
        <files mask="aes_siv.h"/>
        <files mask="aes_wrap.h"/>
        <files mask="common.h"/>
        <files mask="crypto.h"/>
        <files mask="includes.h"/>
        <files mask="type_def.h"/>
      </source>
      <source relative_path="wmcrypto/aescrypto" type="src">
        <files mask="aes-siv.c"/>
        <files mask="aes-ctr.c"/>
        <files mask="aes-omac1.c"/>
        <files mask="aes-wrap.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_wmcrypto.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="wmcrypto" type="c_include"/>
        <include_path relative_path="incl/wmcrypto" type="c_include"/>
        <include_path relative_path="wmcrypto/aescrypto" type="c_include"/>
        <include_path relative_path="wmcrypto" type="asm_include"/>
        <include_path relative_path="incl/wmcrypto" type="asm_include"/>
        <include_path relative_path="wmcrypto/aescrypto" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.wmtime.MIMXRT555S" name="wifi_nxp_wmtime" brief="Middlware Wi-Fi WMTIME" version="1.0.0" full_name="NXP Wi-Fi WMTIME" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.MIMXRT555S"/>
          <component_dependency value="middleware.wifi.wifidriver.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="wmtime" type="src">
        <files mask="wmtime.c"/>
      </source>
      <source relative_path="incl" type="c_include">
        <files mask="wmtime.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_wmtime.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="wmtime" type="c_include"/>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="wmtime" type="asm_include"/>
        <include_path relative_path="incl" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.ncp_supp_wmcrypto.MIMXRT555S" name="ncp_supp_wmcrypto" brief="Middlware Wi-Fi NCP_SUPP_WMCRYPTO" version="1.0.0" full_name="NXP Wi-Fi NCP_SUPP_WMCRYPTO" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.MIMXRT555S"/>
          <component_dependency value="middleware.wifi.wifidriver.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="incl/wmcrypto" type="c_include">
        <files mask="wmcrypto.h"/>
      </source>
      <source relative_path="wmcrypto" type="src">
        <files mask="wmcrypto_mem.c"/>
        <files mask="wm_mbedtls_entropy.c"/>
        <files mask="wm_mbedtls_mem.c"/>
        <files mask="wm_mbedtls_net.c"/>
        <files mask="wm_mbedtls_helper_api.c"/>
        <files mask="wm_utils.c"/>
      </source>
      <source relative_path="wmcrypto" type="c_include">
        <files mask="wmcrypto_mem.h"/>
        <files mask="wm_mbedtls_debug.h"/>
        <files mask="wm_mbedtls_entropy.h"/>
        <files mask="wm_mbedtls_mem.h"/>
        <files mask="wm_mbedtls_net.h"/>
        <files mask="wm_mbedtls_helper_api.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_ncp_supp_wmcrypto.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="wmcrypto" type="c_include"/>
        <include_path relative_path="incl/wmcrypto" type="c_include"/>
        <include_path relative_path="wmcrypto" type="asm_include"/>
        <include_path relative_path="incl/wmcrypto" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.wls.MIMXRT555S" name="wifi_nxp_wls" brief="Middlware Wi-Fi Location Service" version="1.3.46" full_name="NXP Wi-Fi WLS" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.MIMXRT555S"/>
          <component_dependency value="middleware.wifi.wifidriver.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="wls" type="c_include">
        <files mask="range_kalman.h"/>
        <files mask="wls_api.h"/>
        <files mask="wls_param_defines.h"/>
        <files mask="wls_processing.h"/>
        <files mask="wls_QR_algorithm.h"/>
        <files mask="wls_radix4Fft.h"/>
        <files mask="wls_structure_defs.h"/>
        <files mask="wls_subspace_processing.h"/>
      </source>
      <source relative_path="wls" type="src">
        <files mask="range_kalman.c"/>
        <files mask="wls_api.c"/>
        <files mask="wls_processing.c"/>
        <files mask="wls_QR_algorithm.c"/>
        <files mask="wls_radix4Fft.c"/>
        <files mask="wls_subspace_processing.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_wls.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="wls" type="c_include"/>
        <include_path relative_path="wls" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.pd.MIMXRT555S" name="PD Stack" brief="Middleware usb_pd" version="2.11.0" full_name="USB Type-C PD Stack" category="USB/USB Type-C PD Stack" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.pd.phy.ptn5110.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="pd" type="c_include">
        <files mask="usb_pd.h"/>
        <files mask="usb_pd_interface.h"/>
        <files mask="usb_pd_phy.h"/>
        <files mask="usb_pd_spec.h"/>
        <files mask="usb_pd_timer.h"/>
        <files mask="usb_pd_auto_policy.h"/>
      </source>
      <source relative_path="pd" type="src">
        <files mask="usb_pd_connect.c"/>
        <files mask="usb_pd_interface.c"/>
        <files mask="usb_pd_msg.c"/>
        <files mask="usb_pd_policy.c"/>
        <files mask="usb_pd_timer.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_pd.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="pd" type="c_include"/>
        <include_path relative_path="pd" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.pd.altmode.MIMXRT555S" name="PD Alternate Mode" brief="Middleware usb_pd altmode" version="2.11.0" full_name="USB Type-C PD Alternate Mode" category="USB/USB Type-C PD Stack" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.pd.MIMXRT555S"/>
          <component_dependency value="middleware.usb.pd.phy.ptn5110.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="pd/alt_mode" type="src">
        <files mask="usb_pd_alt_mode.c"/>
        <files mask="usb_pd_alt_mode_dp.c"/>
      </source>
      <source relative_path="pd/alt_mode" type="c_include">
        <files mask="usb_pd_alt_mode.h"/>
        <files mask="usb_pd_alt_mode_dp.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_pd_altmode.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="pd/alt_mode" type="c_include"/>
        <include_path relative_path="pd/alt_mode" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.pd.phy.ptn5110.MIMXRT555S" name="PD PTN5110 Driver" brief="Middleware usb_pd phy ptn5110" version="2.11.0" full_name="USB Type-C PD Stack" category="USB/USB PD PHY" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="platform.drivers.flexcomm_i2c.MIMXRT555S"/>
            <component_dependency value="platform.drivers.i3c.MIMXRT555S"/>
          </any_of>
          <component_dependency value="platform.drivers.lpc_gpio.MIMXRT555S"/>
          <component_dependency value="component.i2c_adapter_interface.MIMXRT555S"/>
          <component_dependency value="middleware.usb.common_header.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="pd/ptn5110" type="c_include">
        <files mask="usb_pd_ptn5110.h"/>
        <files mask="usb_pd_ptn5110_register.h"/>
      </source>
      <source relative_path="pd/ptn5110" type="src">
        <files mask="usb_pd_ptn5110_connect.c"/>
        <files mask="usb_pd_ptn5110_hal.c"/>
        <files mask="usb_pd_ptn5110_interface.c"/>
        <files mask="usb_pd_ptn5110_msg.c"/>
      </source>
      <source relative_path="pd" type="src">
        <files mask="usb_pd_timer.c"/>
      </source>
      <source relative_path="pd/phy_interface" type="c_include">
        <files mask="usb_pd_i2c.h"/>
      </source>
      <source relative_path="pd/phy_interface" type="src">
        <files mask="usb_pd_i2c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_pd_phy_ptn5110.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="pd" type="c_include"/>
        <include_path relative_path="pd/ptn5110" type="c_include"/>
        <include_path relative_path="pd/phy_interface" type="c_include"/>
        <include_path relative_path="pd" type="asm_include"/>
        <include_path relative_path="pd/ptn5110" type="asm_include"/>
        <include_path relative_path="pd/phy_interface" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.pd.compliance_test_report.MIMXRT555S" name="PD Compliance Test Report" brief="Middleware usb_pd compliance_test_report" version="2.11.0" full_name="USB Type-C PD Stack" category="USB/USB Type-C PD Stack" user_visible="false" type="middleware" package_base_path="middleware/usb" project_base_path="./">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.pd.phy.ptn5110.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="pd/compliance_test_report/ellisys/consumer_provider" type="doc">
        <files mask="USB Compliance Report.html"/>
      </source>
      <source relative_path="pd/compliance_test_report/ellisys/drp" type="doc">
        <files mask="USB Compliance Report.html"/>
      </source>
      <source relative_path="pd/compliance_test_report/ellisys/drp_try_snk" type="doc">
        <files mask="USB Compliance Report.html"/>
      </source>
      <source relative_path="pd/compliance_test_report/ellisys/drp_try_src" type="doc">
        <files mask="USB Compliance Report.html"/>
      </source>
      <source relative_path="pd/compliance_test_report/ellisys/provider_consumer" type="doc">
        <files mask="USB Compliance Report.html"/>
      </source>
      <source relative_path="pd/compliance_test_report/ellisys/displayport_dock" type="doc">
        <files mask="USB Compliance Report.html"/>
      </source>
      <source relative_path="pd/compliance_test_report/ellisys/displayport_host" type="doc">
        <files mask="USB Compliance Report.html"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_pd_compliance_test_report.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.usb.common_header.MIMXRT555S" name="USB Common Header" brief="Middleware usb common_header" version="2.11.0" full_name="USB Common Header" category="USB/USB Common Header" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <component_dependency value="component.osa.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="include" type="c_include">
        <files mask="usb.h"/>
        <files mask="usb_misc.h"/>
        <files mask="usb_spec.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_common_header.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.common_header.MIMXRT555S" name="USB Device Common Header" brief="Middleware usb device common_header" version="2.11.0" full_name="USB Device Common Header" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="device" type="c_include">
        <files mask="usb_device.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_common_header.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device" type="c_include"/>
        <include_path relative_path="device" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device_controller_ip3511hs.MIMXRT555S" name="USB Device IP3511HS Controller Driver(HS)" brief="Middleware usb device ip3511hs" version="2.11.0" full_name="USB Device IP3511HS Controller Driver(HS)" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.device.controller.driver.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="device" type="src">
        <files mask="usb_device_lpcip3511.c"/>
      </source>
      <source relative_path="device" type="c_include">
        <files mask="usb_device_lpcip3511.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_ip3511hs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device" type="c_include"/>
        <include_path relative_path="device" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.controller.driver.MIMXRT555S" name="USB Device Common Controller" brief="Middleware usb device controller driver" version="2.11.0" full_name="USB Device Common Controller" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.device.stack.MIMXRT555S"/>
          <component_dependency value="middleware.usb.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="device" type="src">
        <files mask="usb_device_dci.c"/>
      </source>
      <source relative_path="device" type="c_include">
        <files mask="usb_device_dci.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_controller_driver.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device" type="c_include"/>
        <include_path relative_path="device" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.stack.MIMXRT555S" name="USB Device Stack" brief="Middleware usb device stack" version="2.11.0" full_name="USB Device Stack" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.device.controller.driver.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="device" type="src">
        <files mask="usb_device_ch9.c"/>
      </source>
      <source relative_path="device" type="c_include">
        <files mask="usb_device_ch9.h"/>
      </source>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_class.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_class.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_stack.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device" type="c_include"/>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device" type="asm_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.audio.MIMXRT555S" name="USB Device Audio" brief="Middleware usb device audio" version="2.11.0" full_name="USB Device Audio" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_audio.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_audio.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_audio.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.cdc.MIMXRT555S" name="USB Device CDC" brief="Middleware usb device cdc" version="2.11.0" full_name="USB Device CDC" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_cdc_acm.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_cdc_acm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_cdc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.cdc.ecm.MIMXRT555S" name="USB Device CDC ECM" brief="Middleware usb device cdc ecm" version="2.11.0" full_name="USB Device CDC ECM" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_cdc_ecm.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_cdc_ecm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_cdc_ecm.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.cdc.rndis.MIMXRT555S" name="USB Device CDC RNDIS" brief="Middleware usb device cdc rndis" version="2.11.0" full_name="USB Device CDC RNDIS" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.device.cdc.MIMXRT555S"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_cdc_rndis.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_cdc_rndis.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_cdc_rndis.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.hid.MIMXRT555S" name="USB Device HID" brief="Middleware usb device hid" version="2.11.0" full_name="USB Device HID" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_hid.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_hid.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_hid.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.dfu.MIMXRT555S" name="USB Device DFU" brief="Middleware usb device dfu" version="2.11.0" full_name="USB Device DFU" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_dfu.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_dfu.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_dfu.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.msd.MIMXRT555S" name="USB Device MSD" brief="Middleware usb device msd" version="2.11.0" full_name="USB Device MSD" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_msc.c"/>
        <files mask="usb_device_msc_ufi.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_msc.h"/>
        <files mask="usb_device_msc_ufi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_msd.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.mtp.MIMXRT555S" name="USB Device MTP" brief="Middleware usb device mtp" version="2.11.0" full_name="USB Device MTP" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_mtp.c"/>
        <files mask="usb_device_mtp_operation.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_mtp.h"/>
        <files mask="usb_device_mtp_operation.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_mtp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.phdc.MIMXRT555S" name="USB Device PHDC" brief="Middleware usb device phdc" version="2.11.0" full_name="USB Device PHDC" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_phdc.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_phdc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_phdc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.video.MIMXRT555S" name="USB Device Video" brief="Middleware usb device video" version="2.11.0" full_name="USB Device Video" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_video.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_video.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_video.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.ccid.MIMXRT555S" name="USB Device CCID" brief="Middleware usb device ccid" version="2.11.0" full_name="USB Device CCID" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_ccid.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_ccid.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_ccid.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.printer.MIMXRT555S" name="USB Device Printer" brief="Middleware usb device printer" version="2.11.0" full_name="USB Device Printer" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_printer.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_printer.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_printer.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.phy.MIMXRT555S" name="USB PHY" brief="Middleware usb phy" version="2.11.0" full_name="USB PHY" category="USB/USB PHY" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="phy" type="src">
        <files mask="usb_phy.c"/>
      </source>
      <source relative_path="phy" type="c_include">
        <files mask="usb_phy.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_phy.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="phy" type="c_include"/>
        <include_path relative_path="phy" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.hsdcd.MIMXRT555S" name="USB HSDCD" brief="Middleware usb HSDCD (Select manually if needed)" version="2.11.0" full_name="USB HSDCD" category="USB/USB DCD" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="dcd" type="src">
        <files mask="usb_hsdcd.c"/>
      </source>
      <source relative_path="dcd" type="c_include">
        <files mask="usb_hsdcd.h"/>
        <files mask="usb_charger_detect.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_hsdcd.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="dcd" type="c_include"/>
        <include_path relative_path="dcd" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host.common_header.MIMXRT555S" name="USB Host Common Header" brief="Middleware usb host common_header" version="2.11.0" full_name="USB Host Common Header" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="host" type="c_include">
        <files mask="usb_host.h"/>
        <files mask="usb_host_hci.h"/>
        <files mask="usb_host_devices.h"/>
        <files mask="usb_host_framework.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_common_header.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host" type="c_include"/>
        <include_path relative_path="host" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_controller_ip3516hs.MIMXRT555S" name="USB Host IP3516HS Controller Driver(HS)" brief="Middleware usb host ip3516hs" version="2.11.0" full_name="USB Host IP3516HS Controller Driver(HS)" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="host" type="src">
        <files mask="usb_host_ip3516hs.c"/>
      </source>
      <source relative_path="host" type="c_include">
        <files mask="usb_host_ip3516hs.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_ip3516hs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host" type="c_include"/>
        <include_path relative_path="host" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host.stack.MIMXRT555S" name="USB Host Stack" brief="Middleware usb host stack" version="2.11.0" full_name="USB Host Stack" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="host" type="src">
        <files mask="usb_host_hci.c"/>
        <files mask="usb_host_devices.c"/>
        <files mask="usb_host_framework.c"/>
      </source>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_hub.c"/>
        <files mask="usb_host_hub_app.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_hub.h"/>
        <files mask="usb_host_hub_app.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_stack.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host" type="c_include"/>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host" type="asm_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_audio.MIMXRT555S" name="USB Host Audio" brief="Middleware usb host audio" version="2.11.0" full_name="USB Host Audio" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_audio.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_audio.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_audio.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_cdc.MIMXRT555S" name="USB Host CDC" brief="Middleware usb host cdc" version="2.11.0" full_name="USB Host CDC" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_cdc.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_cdc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_cdc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_cdc_ecm.MIMXRT555S" name="USB Host CDC ECM" brief="Middleware usb host cdc_ecm" version="2.11.0" full_name="USB Host CDC ECM" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.host_cdc.MIMXRT555S"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_cdc_ecm.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_cdc_ecm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_cdc_ecm.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_cdc_rndis.MIMXRT555S" name="USB Host CDC RNDIS" brief="Middleware usb host cdc_rndis" version="2.11.0" full_name="USB Host CDC RNDIS" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.host_cdc.MIMXRT555S"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_cdc_rndis.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_cdc_rndis.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_cdc_rndis.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_hid.MIMXRT555S" name="USB Host HID" brief="Middleware usb host hid" version="2.11.0" full_name="USB Host HID" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_hid.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_hid.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_hid.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_msd.MIMXRT555S" name="USB Host MSD" brief="Middleware usb host msd" version="2.11.0" full_name="USB Host MSD" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_msd.c"/>
        <files mask="usb_host_msd_ufi.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_msd.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_msd.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_video.MIMXRT555S" name="USB Host Video" brief="Middleware usb host video" version="2.11.0" full_name="USB Host Video" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_video.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_video.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_video.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_phdc.MIMXRT555S" name="USB Host PHDC" brief="Middleware usb host phdc" version="2.11.0" full_name="USB Host PHDC" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_phdc.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_phdc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_phdc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_printer.MIMXRT555S" name="USB Host Printer" brief="Middleware usb host printer" version="2.11.0" full_name="USB Host Printer" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_printer.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_printer.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_printer.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.osa.freertos.MIMXRT555S" name="sdmmc_osa" brief="Middleware sdmmc osa" version="2.3.0" full_name="SDMMC osa stack" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="osa" type="c_include">
        <files mask="fsl_sdmmc_osa.h"/>
      </source>
      <source relative_path="osa" type="src">
        <files mask="fsl_sdmmc_osa.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_osa.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="osa" type="c_include"/>
        <include_path relative_path="osa" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.sd.MIMXRT555S" name="sd" brief="Middleware sdmmc sd" version="2.4.1" full_name="SDMMC sd stack" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <defines>
        <define name="SD_ENABLED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="sd" type="src">
        <files mask="fsl_sd.c"/>
      </source>
      <source relative_path="sd" type="c_include">
        <files mask="fsl_sd.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_sd.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="sd" type="c_include"/>
        <include_path relative_path="sd" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.mmc.MIMXRT555S" name="mmc" brief="Middleware sdmmc mmc" version="2.5.1" full_name="SDMMC mmc stack" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <defines>
        <define name="MMC_ENABLED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="mmc" type="src">
        <files mask="fsl_mmc.c"/>
      </source>
      <source relative_path="mmc" type="c_include">
        <files mask="fsl_mmc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_mmc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="mmc" type="c_include"/>
        <include_path relative_path="mmc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.sdio.MIMXRT555S" name="sdio" brief="Middleware sdmmc sdio" version="2.4.1" full_name="SDMMC sdio stack" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <defines>
        <define name="SDIO_ENABLED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="sdio" type="src">
        <files mask="fsl_sdio.c"/>
      </source>
      <source relative_path="sdio" type="c_include">
        <files mask="fsl_sdio.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_sdio.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="sdio" type="c_include"/>
        <include_path relative_path="sdio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.sdspi.MIMXRT555S" name="sdspi" brief="Middleware sdmmc sdspi" version="2.2.1" full_name="SDMMC sdspi stack" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <defines>
        <define name="SDSPI_ENABLED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="sdspi" type="src">
        <files mask="fsl_sdspi.c"/>
      </source>
      <source relative_path="sdspi" type="c_include">
        <files mask="fsl_sdspi.h"/>
      </source>
      <source relative_path="common" type="c_include">
        <files mask="fsl_sdmmc_spec.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_sdspi.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="sdspi" type="c_include"/>
        <include_path relative_path="common" type="c_include"/>
        <include_path relative_path="sdspi" type="asm_include"/>
        <include_path relative_path="common" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.host.usdhc.MIMXRT555S" name="sdmmc_host_usdhc" brief="Middleware sdmmc host usdhc" version="2.6.3" full_name="Middleware sdmmc host usdhc" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.sdmmc.host.usdhc.polling.MIMXRT555S"/>
            <component_dependency value="middleware.sdmmc.host.usdhc.non_blocking.MIMXRT555S"/>
          </any_of>
          <component_dependency value="platform.drivers.usdhc.MIMXRT555S"/>
          <component_dependency value="middleware.sdmmc.common.MIMXRT555S"/>
          <component_dependency value="middleware.sdmmc.osa.freertos.MIMXRT555S"/>
          <component_dependency value="middleware.sdmmc.usdhc.template.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="host/usdhc" type="c_include">
        <files mask="fsl_sdmmc_host.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_host_usdhc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/usdhc" type="c_include"/>
        <include_path relative_path="host/usdhc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.host.usdhc.non_blocking.MIMXRT555S" name="sdmmc_host_usdhc_non_blocking" brief="Middleware sdmmc host usdhc non_blocking" version="2.6.3" full_name="Middleware sdmmc host usdhc non_blocking" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.host.usdhc.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="host/usdhc/non_blocking" type="src">
        <files mask="fsl_sdmmc_host.c"/>
      </source>
      <source relative_path="host/usdhc" type="c_include">
        <files mask="fsl_sdmmc_host.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_host_usdhc_non_blocking.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/usdhc" type="c_include"/>
        <include_path relative_path="host/usdhc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.host.usdhc.polling.MIMXRT555S" name="sdmmc_host_usdhc_blocking" brief="Middleware sdmmc host usdhc blocking" version="2.6.3" full_name="Middleware sdmmc host usdhc blocking" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.host.usdhc.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="host/usdhc/blocking" type="src">
        <files mask="fsl_sdmmc_host.c"/>
      </source>
      <source relative_path="host/usdhc" type="c_include">
        <files mask="fsl_sdmmc_host.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_host_usdhc_blocking.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/usdhc" type="c_include"/>
        <include_path relative_path="host/usdhc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls.port.ksdk.MIMXRT555S" name="mbedtls_ksdk" brief="mbedTLS port library for KPSDK" version="2.28.8" full_name="MbedTLS MCUX SDK port layer" category="Security/mbedTLS library" user_visible="true" type="middleware" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <defines>
        <define name="MBEDTLS_CONFIG_FILE" value="'&quot;ksdk_mbedtls_config.h&quot;'"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.casper.MIMXRT555S"/>
          <component_dependency value="platform.drivers.hashcrypt.MIMXRT555S"/>
          <component_dependency value="platform.drivers.trng.MIMXRT555S"/>
          <component_dependency value="middleware.mbedtls.MIMXRT555S"/>
          <component_dependency value="middleware.mbedtls.port.ksdk_option.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="port/ksdk" type="src">
        <files mask="ksdk_mbedtls.c"/>
        <files mask="des_alt.c"/>
        <files mask="aes_alt.c"/>
        <files mask="ecp_alt.c"/>
        <files mask="ecp_curves_alt.c"/>
        <files mask="ecp_alt_ksdk.c"/>
      </source>
      <source relative_path="port/ksdk" type="c_include">
        <files mask="ksdk_mbedtls.h"/>
        <files mask="ksdk_mbedtls_config.h"/>
        <files mask="sha1_alt.h"/>
        <files mask="sha256_alt.h"/>
        <files mask="des_alt.h"/>
        <files mask="aes_alt.h"/>
        <files mask="ccm_alt.h"/>
        <files mask="ecp_alt.h"/>
        <files mask="threading_alt.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mbedtls_port_ksdk.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/ksdk" type="c_include"/>
        <include_path relative_path="port/ksdk" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls.MIMXRT555S" name="mbedtls" brief="mbedTLS library" version="2.28.8" full_name="MbedTLS open source SSL library" category="Security/mbedTLS library" user_visible="true" type="middleware" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <dependencies>
        <all>
          <component_dependency value="middleware.mbedtls.port.ksdk.MIMXRT555S"/>
          <component_dependency value="middleware.mbedtls.port.ksdk_option.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="include/mbedtls" type="c_include">
        <files mask="aes.h"/>
        <files mask="aesni.h"/>
        <files mask="arc4.h"/>
        <files mask="aria.h"/>
        <files mask="asn1.h"/>
        <files mask="asn1write.h"/>
        <files mask="base64.h"/>
        <files mask="bignum.h"/>
        <files mask="blowfish.h"/>
        <files mask="bn_mul.h"/>
        <files mask="camellia.h"/>
        <files mask="ccm.h"/>
        <files mask="certs.h"/>
        <files mask="chacha20.h"/>
        <files mask="chachapoly.h"/>
        <files mask="check_config.h"/>
        <files mask="cipher.h"/>
        <files mask="cipher_internal.h"/>
        <files mask="cmac.h"/>
        <files mask="compat-1.3.h"/>
        <files mask="config.h"/>
        <files mask="config_psa.h"/>
        <files mask="constant_time.h"/>
        <files mask="ctr_drbg.h"/>
        <files mask="debug.h"/>
        <files mask="des.h"/>
        <files mask="dhm.h"/>
        <files mask="ecdh.h"/>
        <files mask="ecdsa.h"/>
        <files mask="ecjpake.h"/>
        <files mask="ecp.h"/>
        <files mask="ecp_internal.h"/>
        <files mask="entropy.h"/>
        <files mask="entropy_poll.h"/>
        <files mask="error.h"/>
        <files mask="gcm.h"/>
        <files mask="havege.h"/>
        <files mask="hkdf.h"/>
        <files mask="hmac_drbg.h"/>
        <files mask="md.h"/>
        <files mask="md_internal.h"/>
        <files mask="md2.h"/>
        <files mask="md4.h"/>
        <files mask="md5.h"/>
        <files mask="memory_buffer_alloc.h"/>
        <files mask="net.h"/>
        <files mask="net_sockets.h"/>
        <files mask="nist_kw.h"/>
        <files mask="oid.h"/>
        <files mask="padlock.h"/>
        <files mask="pem.h"/>
        <files mask="pk.h"/>
        <files mask="pk_internal.h"/>
        <files mask="pkcs5.h"/>
        <files mask="pkcs11.h"/>
        <files mask="pkcs12.h"/>
        <files mask="platform.h"/>
        <files mask="platform_time.h"/>
        <files mask="platform_util.h"/>
        <files mask="poly1305.h"/>
        <files mask="psa_util.h"/>
        <files mask="ripemd160.h"/>
        <files mask="rsa.h"/>
        <files mask="rsa_internal.h"/>
        <files mask="sha1.h"/>
        <files mask="sha256.h"/>
        <files mask="sha512.h"/>
        <files mask="ssl.h"/>
        <files mask="ssl_cache.h"/>
        <files mask="ssl_ciphersuites.h"/>
        <files mask="ssl_cookie.h"/>
        <files mask="ssl_internal.h"/>
        <files mask="ssl_ticket.h"/>
        <files mask="threading.h"/>
        <files mask="timing.h"/>
        <files mask="version.h"/>
        <files mask="x509.h"/>
        <files mask="x509_crl.h"/>
        <files mask="x509_crt.h"/>
        <files mask="x509_csr.h"/>
        <files mask="xtea.h"/>
      </source>
      <source relative_path="include/psa" type="c_include">
        <files mask="crypto.h"/>
        <files mask="crypto_builtin_composites.h"/>
        <files mask="crypto_builtin_primitives.h"/>
        <files mask="crypto_compat.h"/>
        <files mask="crypto_config.h"/>
        <files mask="crypto_driver_common.h"/>
        <files mask="crypto_driver_contexts_composites.h"/>
        <files mask="crypto_driver_contexts_primitives.h"/>
        <files mask="crypto_extra.h"/>
        <files mask="crypto_platform.h"/>
        <files mask="crypto_se_driver.h"/>
        <files mask="crypto_sizes.h"/>
        <files mask="crypto_struct.h"/>
        <files mask="crypto_types.h"/>
        <files mask="crypto_values.h"/>
      </source>
      <source relative_path="library" type="src">
        <files mask="aes.c"/>
        <files mask="aesni.c"/>
        <files mask="arc4.c"/>
        <files mask="aria.c"/>
        <files mask="asn1parse.c"/>
        <files mask="asn1write.c"/>
        <files mask="base64.c"/>
        <files mask="bignum.c"/>
        <files mask="blowfish.c"/>
        <files mask="camellia.c"/>
        <files mask="ccm.c"/>
        <files mask="certs.c"/>
        <files mask="chacha20.c"/>
        <files mask="chachapoly.c"/>
        <files mask="cipher.c"/>
        <files mask="cipher_wrap.c"/>
        <files mask="cmac.c"/>
        <files mask="constant_time.c"/>
        <files mask="ctr_drbg.c"/>
        <files mask="debug.c"/>
        <files mask="des.c"/>
        <files mask="dhm.c"/>
        <files mask="ecdh.c"/>
        <files mask="ecdsa.c"/>
        <files mask="ecjpake.c"/>
        <files mask="ecp.c"/>
        <files mask="ecp_curves.c"/>
        <files mask="entropy.c"/>
        <files mask="entropy_poll.c"/>
        <files mask="error.c"/>
        <files mask="gcm.c"/>
        <files mask="havege.c"/>
        <files mask="hkdf.c"/>
        <files mask="hmac_drbg.c"/>
        <files mask="md.c"/>
        <files mask="md2.c"/>
        <files mask="md4.c"/>
        <files mask="md5.c"/>
        <files mask="memory_buffer_alloc.c"/>
        <files mask="mps_reader.c"/>
        <files mask="mps_trace.c"/>
        <files mask="net_sockets.c"/>
        <files mask="nist_kw.c"/>
        <files mask="oid.c"/>
        <files mask="padlock.c"/>
        <files mask="pem.c"/>
        <files mask="pk.c"/>
        <files mask="pk_wrap.c"/>
        <files mask="pkcs5.c"/>
        <files mask="pkcs11.c"/>
        <files mask="pkcs12.c"/>
        <files mask="pkparse.c"/>
        <files mask="pkwrite.c"/>
        <files mask="platform.c"/>
        <files mask="platform_util.c"/>
        <files mask="poly1305.c"/>
        <files mask="psa_crypto.c"/>
        <files mask="psa_crypto_aead.c"/>
        <files mask="psa_crypto_cipher.c"/>
        <files mask="psa_crypto_client.c"/>
        <files mask="psa_crypto_driver_wrappers.c"/>
        <files mask="psa_crypto_ecp.c"/>
        <files mask="psa_crypto_hash.c"/>
        <files mask="psa_crypto_mac.c"/>
        <files mask="psa_crypto_rsa.c"/>
        <files mask="psa_crypto_se.c"/>
        <files mask="psa_crypto_slot_management.c"/>
        <files mask="psa_crypto_storage.c"/>
        <files mask="psa_its_file.c"/>
        <files mask="ripemd160.c"/>
        <files mask="rsa.c"/>
        <files mask="rsa_internal.c"/>
        <files mask="sha1.c"/>
        <files mask="sha256.c"/>
        <files mask="sha512.c"/>
        <files mask="ssl_cache.c"/>
        <files mask="ssl_ciphersuites.c"/>
        <files mask="ssl_cli.c"/>
        <files mask="ssl_cookie.c"/>
        <files mask="ssl_msg.c"/>
        <files mask="ssl_srv.c"/>
        <files mask="ssl_ticket.c"/>
        <files mask="ssl_tls.c"/>
        <files mask="ssl_tls13_keys.c"/>
        <files mask="threading.c"/>
        <files mask="timing.c"/>
        <files mask="version.c"/>
        <files mask="version_features.c"/>
        <files mask="x509.c"/>
        <files mask="x509_create.c"/>
        <files mask="x509_crl.c"/>
        <files mask="x509_crt.c"/>
        <files mask="x509_csr.c"/>
        <files mask="x509write_crt.c"/>
        <files mask="x509write_csr.c"/>
        <files mask="xtea.c"/>
      </source>
      <source relative_path="library" type="c_include">
        <files mask="bignum_internal.h"/>
        <files mask="check_crypto_config.h"/>
        <files mask="common.h"/>
        <files mask="constant_time_internal.h"/>
        <files mask="constant_time_invasive.h"/>
        <files mask="ecp_invasive.h"/>
        <files mask="mps_common.h"/>
        <files mask="mps_error.h"/>
        <files mask="mps_reader.h"/>
        <files mask="mps_trace.h"/>
        <files mask="psa_crypto_aead.h"/>
        <files mask="psa_crypto_cipher.h"/>
        <files mask="psa_crypto_core.h"/>
        <files mask="psa_crypto_driver_wrappers.h"/>
        <files mask="psa_crypto_ecp.h"/>
        <files mask="psa_crypto_hash.h"/>
        <files mask="psa_crypto_invasive.h"/>
        <files mask="psa_crypto_its.h"/>
        <files mask="psa_crypto_mac.h"/>
        <files mask="psa_crypto_random_impl.h"/>
        <files mask="psa_crypto_rsa.h"/>
        <files mask="psa_crypto_se.h"/>
        <files mask="psa_crypto_slot_management.h"/>
        <files mask="psa_crypto_storage.h"/>
        <files mask="ssl_tls13_keys.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mbedtls.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="library" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
        <include_path relative_path="library" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.MIMXRT555S" name="lwIP" brief="lwIP - A Lightweight TCP/IP Stack" version="2.2.1" revision="2" full_name="lwIP" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <any_of>
            <all>
              <not>
                <component_dependency value="middleware.lwip.sys_arch.static.MIMXRT555S"/>
              </not>
              <component_dependency value="middleware.lwip.sys_arch.dynamic.MIMXRT555S"/>
            </all>
            <all>
              <not>
                <component_dependency value="middleware.lwip.sys_arch.dynamic.MIMXRT555S"/>
              </not>
              <not>
                <component_dependency value="middleware.lwip.eoe_ethernetif.MIMXRT555S"/>
              </not>
              <component_dependency value="middleware.lwip.sys_arch.static.MIMXRT555S"/>
            </all>
          </any_of>
          <any_of>
            <component_dependency value="middleware.lwip.empty_ethernetif.MIMXRT555S"/>
            <component_dependency value="middleware.lwip.eoe_ethernetif.MIMXRT555S"/>
            <component_dependency value="middleware.wifi.MIMXRT555S"/>
          </any_of>
          <component_dependency value="middleware.lwip.template.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="BUILDING" hidden="true"/>
        <files mask="CHANGELOG" hidden="true"/>
        <files mask="ChangeLogKSDK.txt" hidden="true"/>
        <files mask="COPYING" hidden="true"/>
        <files mask="FEATURES" hidden="true"/>
        <files mask="README" hidden="true"/>
        <files mask="UPGRADING" hidden="true"/>
      </source>
      <source exclude="true" relative_path="./" type="other">
        <files mask="CMakeLists_upstream.txt" hidden="true"/>
        <files mask="codespell_changed_files.sh" hidden="true"/>
        <files mask="codespell_check.sh" hidden="true"/>
        <files mask="FILES" hidden="true"/>
      </source>
      <source exclude="true" relative_path="port" type="doc">
        <files mask="README.md" hidden="true"/>
      </source>
      <source exclude="true" relative_path="doc" type="doc">
        <files mask="FILES" hidden="true"/>
        <files mask="NO_SYS_SampleCode.c" hidden="true"/>
        <files mask="ZeroCopyRx.c" hidden="true"/>
        <files mask="contrib.txt" hidden="true"/>
        <files mask="mdns.txt" hidden="true"/>
        <files mask="mqtt_client.txt" hidden="true"/>
        <files mask="ppp.txt" hidden="true"/>
        <files mask="savannah.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="doc/doxygen" type="doc">
        <files mask="generate.bat" hidden="true"/>
        <files mask="generate.sh" hidden="true"/>
        <files mask="lwip.Doxyfile" hidden="true"/>
        <files mask="lwip.Doxyfile.cmake.in" hidden="true"/>
        <files mask="main_page.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="doc/doxygen/output" type="doc">
        <files mask="index.html" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src" type="other">
        <files mask="FILES" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/netif" type="other">
        <files mask="FILES" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/netif/ppp" type="doc">
        <files mask="PPPD_FOLLOWUP" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/netif/ppp/polarssl" type="src_c">
        <files mask="arc4.c" hidden="true"/>
        <files mask="des.c" hidden="true"/>
        <files mask="md4.c" hidden="true"/>
        <files mask="md5.c" hidden="true"/>
        <files mask="sha1.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/netif/ppp/polarssl" type="doc">
        <files mask="README" hidden="true"/>
      </source>
      <source relative_path="port/arch" type="c_include">
        <files mask="cc.h"/>
        <files mask="perf.h"/>
      </source>
      <source relative_path="src/api" type="src">
        <files mask="api_lib.c"/>
        <files mask="api_msg.c"/>
        <files mask="err.c"/>
        <files mask="if_api.c"/>
        <files mask="netbuf.c"/>
        <files mask="netdb.c"/>
        <files mask="netifapi.c"/>
        <files mask="sockets.c"/>
        <files mask="tcpip.c"/>
      </source>
      <source relative_path="src/core" type="src">
        <files mask="altcp.c"/>
        <files mask="altcp_alloc.c"/>
        <files mask="altcp_tcp.c"/>
        <files mask="def.c"/>
        <files mask="dns.c"/>
        <files mask="inet_chksum.c"/>
        <files mask="init.c"/>
        <files mask="ip.c"/>
        <files mask="mem.c"/>
        <files mask="memp.c"/>
        <files mask="netif.c"/>
        <files mask="pbuf.c"/>
        <files mask="raw.c"/>
        <files mask="stats.c"/>
        <files mask="sys.c"/>
        <files mask="tcp.c"/>
        <files mask="tcp_in.c"/>
        <files mask="tcp_out.c"/>
        <files mask="timeouts.c"/>
        <files mask="udp.c"/>
      </source>
      <source relative_path="src/core/ipv4" type="src">
        <files mask="acd.c"/>
        <files mask="autoip.c"/>
        <files mask="dhcp.c"/>
        <files mask="etharp.c"/>
        <files mask="icmp.c"/>
        <files mask="igmp.c"/>
        <files mask="ip4.c"/>
        <files mask="ip4_addr.c"/>
        <files mask="ip4_frag.c"/>
      </source>
      <source relative_path="src/core/ipv6" type="src">
        <files mask="dhcp6.c"/>
        <files mask="ethip6.c"/>
        <files mask="icmp6.c"/>
        <files mask="inet6.c"/>
        <files mask="ip6.c"/>
        <files mask="ip6_addr.c"/>
        <files mask="ip6_frag.c"/>
        <files mask="mld6.c"/>
        <files mask="nd6.c"/>
      </source>
      <source relative_path="src/include/compat/posix" type="c_include">
        <files mask="netdb.h"/>
      </source>
      <source relative_path="src/include/compat/posix/arpa" type="c_include">
        <files mask="inet.h"/>
      </source>
      <source relative_path="src/include/compat/posix/net" type="c_include">
        <files mask="if.h"/>
      </source>
      <source relative_path="src/include/compat/posix/sys" type="c_include">
        <files mask="socket.h"/>
      </source>
      <source relative_path="src/include/compat/stdc" type="c_include">
        <files mask="errno.h"/>
      </source>
      <source relative_path="src/include/lwip" type="c_include">
        <files mask="acd.h"/>
        <files mask="altcp.h"/>
        <files mask="altcp_tcp.h"/>
        <files mask="altcp_tls.h"/>
        <files mask="api.h"/>
        <files mask="arch.h"/>
        <files mask="autoip.h"/>
        <files mask="debug.h"/>
        <files mask="def.h"/>
        <files mask="dhcp.h"/>
        <files mask="dhcp6.h"/>
        <files mask="dns.h"/>
        <files mask="err.h"/>
        <files mask="errno.h"/>
        <files mask="etharp.h"/>
        <files mask="ethip6.h"/>
        <files mask="icmp.h"/>
        <files mask="icmp6.h"/>
        <files mask="if_api.h"/>
        <files mask="igmp.h"/>
        <files mask="inet.h"/>
        <files mask="inet_chksum.h"/>
        <files mask="init.h"/>
        <files mask="ip.h"/>
        <files mask="ip4.h"/>
        <files mask="ip4_addr.h"/>
        <files mask="ip4_frag.h"/>
        <files mask="ip6.h"/>
        <files mask="ip6_addr.h"/>
        <files mask="ip6_frag.h"/>
        <files mask="ip6_zone.h"/>
        <files mask="ip_addr.h"/>
        <files mask="mem.h"/>
        <files mask="memp.h"/>
        <files mask="mld6.h"/>
        <files mask="nd6.h"/>
        <files mask="netbuf.h"/>
        <files mask="netdb.h"/>
        <files mask="netif.h"/>
        <files mask="netifapi.h"/>
        <files mask="opt.h"/>
        <files mask="pbuf.h"/>
        <files mask="raw.h"/>
        <files mask="sio.h"/>
        <files mask="snmp.h"/>
        <files mask="sockets.h"/>
        <files mask="stats.h"/>
        <files mask="sys.h"/>
        <files mask="tcp.h"/>
        <files mask="tcpbase.h"/>
        <files mask="tcpip.h"/>
        <files mask="timeouts.h"/>
        <files mask="udp.h"/>
      </source>
      <source relative_path="src/include/lwip/priv" type="c_include">
        <files mask="altcp_priv.h"/>
        <files mask="api_msg.h"/>
        <files mask="memp_priv.h"/>
        <files mask="memp_std.h"/>
        <files mask="mem_priv.h"/>
        <files mask="nd6_priv.h"/>
        <files mask="raw_priv.h"/>
        <files mask="sockets_priv.h"/>
        <files mask="tcpip_priv.h"/>
        <files mask="tcp_priv.h"/>
      </source>
      <source relative_path="src/include/lwip/prot" type="c_include">
        <files mask="acd.h"/>
        <files mask="autoip.h"/>
        <files mask="dhcp.h"/>
        <files mask="dhcp6.h"/>
        <files mask="dns.h"/>
        <files mask="etharp.h"/>
        <files mask="ethernet.h"/>
        <files mask="iana.h"/>
        <files mask="icmp.h"/>
        <files mask="icmp6.h"/>
        <files mask="ieee.h"/>
        <files mask="igmp.h"/>
        <files mask="ip.h"/>
        <files mask="ip4.h"/>
        <files mask="ip6.h"/>
        <files mask="mld6.h"/>
        <files mask="nd6.h"/>
        <files mask="tcp.h"/>
        <files mask="udp.h"/>
      </source>
      <source relative_path="src/include/netif" type="c_include">
        <files mask="bridgeif.h"/>
        <files mask="bridgeif_opts.h"/>
        <files mask="etharp.h"/>
        <files mask="ethernet.h"/>
        <files mask="ieee802154.h"/>
        <files mask="lowpan6.h"/>
        <files mask="lowpan6_ble.h"/>
        <files mask="lowpan6_common.h"/>
        <files mask="lowpan6_opts.h"/>
        <files mask="slipif.h"/>
        <files mask="zepif.h"/>
      </source>
      <source relative_path="src/include/netif/ppp" type="c_include">
        <files mask="ccp.h"/>
        <files mask="chap-md5.h"/>
        <files mask="chap-new.h"/>
        <files mask="chap_ms.h"/>
        <files mask="eap.h"/>
        <files mask="ecp.h"/>
        <files mask="eui64.h"/>
        <files mask="fsm.h"/>
        <files mask="ipcp.h"/>
        <files mask="ipv6cp.h"/>
        <files mask="lcp.h"/>
        <files mask="magic.h"/>
        <files mask="mppe.h"/>
        <files mask="ppp.h"/>
        <files mask="pppapi.h"/>
        <files mask="pppcrypt.h"/>
        <files mask="pppdebug.h"/>
        <files mask="pppoe.h"/>
        <files mask="pppol2tp.h"/>
        <files mask="pppos.h"/>
        <files mask="ppp_impl.h"/>
        <files mask="ppp_opts.h"/>
        <files mask="upap.h"/>
        <files mask="vj.h"/>
      </source>
      <source relative_path="src/include/netif/ppp/polarssl" type="c_include">
        <files mask="arc4.h"/>
        <files mask="des.h"/>
        <files mask="md4.h"/>
        <files mask="md5.h"/>
        <files mask="sha1.h"/>
      </source>
      <source relative_path="src/netif" type="src">
        <files mask="bridgeif.c"/>
        <files mask="bridgeif_fdb.c"/>
        <files mask="ethernet.c"/>
        <files mask="lowpan6.c"/>
        <files mask="lowpan6_ble.c"/>
        <files mask="lowpan6_common.c"/>
        <files mask="slipif.c"/>
        <files mask="zepif.c"/>
      </source>
      <source relative_path="src/netif/ppp" type="src">
        <files mask="auth.c"/>
        <files mask="ccp.c"/>
        <files mask="chap-md5.c"/>
        <files mask="chap-new.c"/>
        <files mask="chap_ms.c"/>
        <files mask="demand.c"/>
        <files mask="eap.c"/>
        <files mask="ecp.c"/>
        <files mask="eui64.c"/>
        <files mask="fsm.c"/>
        <files mask="ipcp.c"/>
        <files mask="ipv6cp.c"/>
        <files mask="lcp.c"/>
        <files mask="magic.c"/>
        <files mask="mppe.c"/>
        <files mask="multilink.c"/>
        <files mask="ppp.c"/>
        <files mask="pppapi.c"/>
        <files mask="pppcrypt.c"/>
        <files mask="pppoe.c"/>
        <files mask="pppol2tp.c"/>
        <files mask="pppos.c"/>
        <files mask="upap.c"/>
        <files mask="utils.c"/>
        <files mask="vj.c"/>
      </source>
      <source relative_path="src/netif/ppp/polarssl" type="src_c">
        <files mask="arc4.c"/>
        <files mask="des.c"/>
        <files mask="md4.c"/>
        <files mask="md5.c"/>
        <files mask="sha1.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="src" type="c_include"/>
        <include_path relative_path="src/include" type="c_include"/>
        <include_path relative_path="src/include/lwip" type="c_include"/>
        <include_path relative_path="port" type="asm_include"/>
        <include_path relative_path="src" type="asm_include"/>
        <include_path relative_path="src/include" type="asm_include"/>
        <include_path relative_path="src/include/lwip" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.httpd.MIMXRT555S" name="lwIP_HTTPD" brief="lwIP HTTP Daemon" version="2.2.1" revision="2" full_name="lwIP HTTP Daemon" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT555S"/>
          <component_dependency value="middleware.lwip.apps.httpd.support.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="src/apps/http" type="src">
        <files mask="httpd.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_httpd.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.lwip.apps.httpd.support.MIMXRT555S" name="lwIP_HTTPD_support" brief="lwIP HTTP Daemon Implementation Support Files" version="2.2.1" revision="2" full_name="lwIP HTTP Daemon Implementation Support Files" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source exclude="true" relative_path="src/apps/http" type="other">
        <files mask="fsdata.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/http/fs" type="other">
        <files mask="404.html" hidden="true"/>
        <files mask="index.html" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/http/fs/img" type="other">
        <files mask="sics.gif" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/http/makefsdata" type="other">
        <files mask="makefsdata" hidden="true"/>
        <files mask="makefsdata.c" hidden="true"/>
        <files mask="readme.txt" hidden="true"/>
        <files mask="tinydir.h" hidden="true"/>
      </source>
      <source relative_path="src/apps/http" type="src">
        <files mask="fs.c"/>
      </source>
      <source relative_path="src/apps/http" type="c_include">
        <files mask="fsdata.h"/>
        <files mask="httpd_structs.h"/>
      </source>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="fs.h"/>
        <files mask="httpd.h"/>
        <files mask="httpd_opts.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_httpd_support.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/apps/http" type="c_include"/>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
        <include_path relative_path="src/apps/http" type="asm_include"/>
        <include_path relative_path="src/include/lwip/apps" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.httpsrv.MIMXRT555S" name="lwIP_HTTP_srv" brief="lwIP HTTP Server Implementation" version="2.2.1" revision="2" full_name="lwIP HTTP Server" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT555S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source exclude="true" relative_path="src/apps/httpsrv/mkfs" type="other">
        <files mask="mkfs.pl" hidden="true"/>
      </source>
      <source relative_path="src/apps/httpsrv" type="src">
        <files mask="httpsrv.c"/>
        <files mask="httpsrv_base64.c"/>
        <files mask="httpsrv_fs.c"/>
        <files mask="httpsrv_script.c"/>
        <files mask="httpsrv_sha1.c"/>
        <files mask="httpsrv_supp.c"/>
        <files mask="httpsrv_task.c"/>
        <files mask="httpsrv_tls.c"/>
        <files mask="httpsrv_utf8.c"/>
        <files mask="httpsrv_ws.c"/>
        <files mask="httpsrv_ws_api.c"/>
      </source>
      <source relative_path="src/apps/httpsrv" type="c_include">
        <files mask="httpsrv.h"/>
        <files mask="httpsrv_base64.h"/>
        <files mask="httpsrv_config.h"/>
        <files mask="httpsrv_fs.h"/>
        <files mask="httpsrv_port.h"/>
        <files mask="httpsrv_prv.h"/>
        <files mask="httpsrv_script.h"/>
        <files mask="httpsrv_sha1.h"/>
        <files mask="httpsrv_supp.h"/>
        <files mask="httpsrv_tls.h"/>
        <files mask="httpsrv_utf8.h"/>
        <files mask="httpsrv_ws.h"/>
        <files mask="httpsrv_ws_prv.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_httpsrv.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/apps/httpsrv" type="c_include"/>
        <include_path relative_path="src/apps/httpsrv" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.httpssrv.MIMXRT555S" name="lwIP_HTTPS_srv" brief="lwIP HTTPS Server Implementation" version="2.2.1" revision="2" full_name="lwIP HTTPS Server" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <defines>
        <define name="MBEDTLS_THREADING_C" value=""/>
        <define name="MBEDTLS_THREADING_ALT" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.apps.httpsrv.MIMXRT555S"/>
          <component_dependency value="middleware.mbedtls.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_httpssrv.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.lwip.apps.lwiperf.MIMXRT555S" name="lwIP_IPERF" brief="lwIP IPERF Implementation" version="2.2.1" revision="2" full_name="lwIP IPERF" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <defines>
        <define name="SO_REUSE" value="1"/>
        <define name="PRINTF_FLOAT_ENABLE" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="src/apps/lwiperf" type="src">
        <files mask="lwiperf.c"/>
      </source>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="lwiperf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_lwiperf.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
        <include_path relative_path="src/include/lwip/apps" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.mdns.MIMXRT555S" name="lwIP_MDNS" brief="lwIP mDNS Implementation" version="2.2.1" revision="2" full_name="lwIP mDNS" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="src/apps/mdns" type="src">
        <files mask="mdns_domain.c"/>
        <files mask="mdns_out.c"/>
        <files mask="mdns.c"/>
      </source>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="mdns.h"/>
        <files mask="mdns_domain.h"/>
        <files mask="mdns_priv.h"/>
        <files mask="mdns_opts.h"/>
        <files mask="mdns_out.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_mdns.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
        <include_path relative_path="src/include/lwip/apps" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.mqtt.MIMXRT555S" name="lwIP_MQTT" brief="lwIP MQTT Client" version="2.2.1" revision="2" full_name="lwIP MQTT Client" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="src/apps/mqtt" type="src">
        <files mask="mqtt.c"/>
      </source>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="mqtt.h"/>
        <files mask="mqtt_opts.h"/>
        <files mask="mqtt_priv.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_mqtt.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
        <include_path relative_path="src/include/lwip/apps" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.sntp.MIMXRT555S" name="lwIP_SNTP" brief="lwIP SNTP" version="2.2.1" revision="2" full_name="lwIP SNTP" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="sntp.h"/>
        <files mask="sntp_opts.h"/>
      </source>
      <source relative_path="src/apps/sntp" type="src">
        <files mask="sntp.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_sntp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
        <include_path relative_path="src/include/lwip/apps" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.ping.MIMXRT555S" name="lwIP_ping" brief="lwIP Ping Sender contrib" version="2.2.1" revision="2" full_name="lwIP Ping Sender" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="contrib/apps/ping" type="src">
        <files mask="ping.c"/>
      </source>
      <source relative_path="contrib/apps/ping" type="c_include">
        <files mask="ping.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_contrib_ping.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/ping" type="c_include"/>
        <include_path relative_path="contrib/apps/ping" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.tcpecho.MIMXRT555S" name="lwIP_tcpecho" brief="lwIP TCP Echo contrib" version="2.2.1" revision="2" full_name="lwIP TCP Echo" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="contrib/apps/tcpecho" type="src">
        <files mask="tcpecho.c"/>
      </source>
      <source relative_path="contrib/apps/tcpecho" type="c_include">
        <files mask="tcpecho.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_contrib_tcpecho.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/tcpecho" type="c_include"/>
        <include_path relative_path="contrib/apps/tcpecho" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.tcpecho_raw.MIMXRT555S" name="lwIP_tcpecho_raw" brief="lwIP TCP Echo Raw API contrib" version="2.2.1" revision="2" full_name="lwIP TCP Echo Raw API" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="contrib/apps/tcpecho_raw" type="src">
        <files mask="tcpecho_raw.c"/>
      </source>
      <source relative_path="contrib/apps/tcpecho_raw" type="c_include">
        <files mask="tcpecho_raw.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_contrib_tcpecho_raw.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/tcpecho_raw" type="c_include"/>
        <include_path relative_path="contrib/apps/tcpecho_raw" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.udpecho.MIMXRT555S" name="lwIP_udpecho" brief="lwIP UDP Echo contrib" version="2.2.1" revision="2" full_name="lwIP UDP Echo" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="contrib/apps/udpecho" type="src">
        <files mask="udpecho.c"/>
      </source>
      <source relative_path="contrib/apps/udpecho" type="c_include">
        <files mask="udpecho.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_contrib_udpecho.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/udpecho" type="c_include"/>
        <include_path relative_path="contrib/apps/udpecho" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.udpecho_raw.MIMXRT555S" name="lwIP_udpecho_raw" brief="lwIP UDP Echo Raw API contrib" version="2.2.1" revision="2" full_name="lwIP UDP Echo Raw API" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="contrib/apps/udpecho_raw" type="src">
        <files mask="udpecho_raw.c"/>
      </source>
      <source relative_path="contrib/apps/udpecho_raw" type="c_include">
        <files mask="udpecho_raw.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_contrib_udpecho_raw.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/udpecho_raw" type="c_include"/>
        <include_path relative_path="contrib/apps/udpecho_raw" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.empty_ethernetif.MIMXRT555S" name="Empty ethernet interface" brief="Empty ethernet interface" version="2.2.1" revision="2" full_name="Empty ethernet interface" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="other">
        <files mask="README"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_empty_ethernetif.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.eoe_ethernetif.MIMXRT555S" name="EtherCAT EOE ethernet interface" brief="EtherCAT EOE ethernet interface" version="2.2.1" revision="2" full_name="EtherCAT EOE ethernet interface" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <defines>
        <define name="CHECKSUM_GEN_IP" value="1"/>
        <define name="CHECKSUM_GEN_UDP" value="1"/>
        <define name="CHECKSUM_GEN_TCP" value="1"/>
        <define name="CHECKSUM_GEN_ICMP" value="1"/>
        <define name="CHECKSUM_CHECK_ICMP" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT555S"/>
          <component_dependency value="middleware.lwip.template.MIMXRT555S"/>
          <component_dependency value="middleware.lwip.sys_arch.dynamic.MIMXRT555S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="port" type="src">
        <files mask="eoe_ethernetif.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="eoe_ethernetif.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_eoe_ethernetif.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.sys_arch.dynamic.MIMXRT555S" name="Sys Arch Dynamic interface" brief="lwIP System Abstraction Layer using either FreeRTOS dynamic memory allocation APIs or bare-metal" version="2.2.1" revision="2" full_name="Sys Arch Dynamic interface" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="port/sys_arch/dynamic/arch" type="c_include">
        <files mask="sys_arch.h"/>
      </source>
      <source relative_path="port/sys_arch/dynamic" type="src">
        <files mask="sys_arch.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_sys_arch_dynamic.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/sys_arch/dynamic" type="c_include"/>
        <include_path relative_path="port/sys_arch/dynamic" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.sys_arch.static.MIMXRT555S" name="Sys Arch Static interface" brief="Experimental lwIP System Abstraction Layer using FreeRTOS static memory allocation APIs - it is not supported and not guaranteed to work, also might be removed in future" version="2.2.1" revision="2" full_name="Sys Arch Static interface - experimental" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT555S"/>
          <component_dependency value="middleware.wifi.MIMXRT555S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="port/sys_arch/static/arch" type="c_include">
        <files mask="sys_arch.h"/>
      </source>
      <source relative_path="port/sys_arch/static" type="src">
        <files mask="sys_arch.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_sys_arch_static.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/sys_arch/static" type="c_include"/>
        <include_path relative_path="port/sys_arch/static" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.template.MIMXRT555S" name="lwIP_template" brief="lwIP Template" version="2.2.1" revision="2" full_name="lwIP Template Application" category="Network/lwIP TCPIP Networking Stack" user_visible="false" type="project_template" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="template" config="true" type="c_include">
        <files mask="lwipopts.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.MIMXRT555S" name="lvgl" brief="lvgl library" version="9.2.1" full_name="Middleware lvgl" category="Graphics/lvgl graphics library" user_visible="true" type="middleware" package_base_path="middleware/lvgl" project_base_path="lvgl">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.template.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="LICENCE.txt" hidden="true"/>
      </source>
      <source relative_path="src" type="src">
        <files mask="lv_init.c"/>
      </source>
      <source relative_path="src/core" type="src">
        <files mask="lv_group.c"/>
        <files mask="lv_obj.c"/>
        <files mask="lv_obj_class.c"/>
        <files mask="lv_obj_draw.c"/>
        <files mask="lv_obj_event.c"/>
        <files mask="lv_obj_id_builtin.c"/>
        <files mask="lv_obj_pos.c"/>
        <files mask="lv_obj_property.c"/>
        <files mask="lv_obj_scroll.c"/>
        <files mask="lv_obj_style.c"/>
        <files mask="lv_obj_style_gen.c"/>
        <files mask="lv_obj_tree.c"/>
        <files mask="lv_refr.c"/>
      </source>
      <source relative_path="src/display" type="src">
        <files mask="lv_display.c"/>
      </source>
      <source relative_path="src/draw" type="src">
        <files mask="lv_draw.c"/>
        <files mask="lv_draw_arc.c"/>
        <files mask="lv_draw_buf.c"/>
        <files mask="lv_draw_image.c"/>
        <files mask="lv_draw_label.c"/>
        <files mask="lv_draw_line.c"/>
        <files mask="lv_draw_mask.c"/>
        <files mask="lv_draw_rect.c"/>
        <files mask="lv_draw_triangle.c"/>
        <files mask="lv_draw_vector.c"/>
        <files mask="lv_image_decoder.c"/>
      </source>
      <source relative_path="src/draw/nxp/pxp" type="src">
        <files mask="lv_draw_buf_pxp.c"/>
        <files mask="lv_draw_pxp.c"/>
        <files mask="lv_draw_pxp_fill.c"/>
        <files mask="lv_draw_pxp_img.c"/>
        <files mask="lv_draw_pxp_layer.c"/>
        <files mask="lv_pxp_cfg.c"/>
        <files mask="lv_pxp_osa.c"/>
        <files mask="lv_pxp_utils.c"/>
      </source>
      <source relative_path="src/draw/nxp/vglite" type="src">
        <files mask="lv_draw_buf_vglite.c"/>
        <files mask="lv_draw_vglite.c"/>
        <files mask="lv_draw_vglite_arc.c"/>
        <files mask="lv_draw_vglite_border.c"/>
        <files mask="lv_draw_vglite_fill.c"/>
        <files mask="lv_draw_vglite_img.c"/>
        <files mask="lv_draw_vglite_label.c"/>
        <files mask="lv_draw_vglite_layer.c"/>
        <files mask="lv_draw_vglite_line.c"/>
        <files mask="lv_draw_vglite_triangle.c"/>
        <files mask="lv_vglite_buf.c"/>
        <files mask="lv_vglite_matrix.c"/>
        <files mask="lv_vglite_path.c"/>
        <files mask="lv_vglite_utils.c"/>
      </source>
      <source relative_path="src/draw/sdl" type="src">
        <files mask="lv_draw_sdl.c"/>
      </source>
      <source relative_path="src/draw/sw/blend" type="src">
        <files mask="lv_draw_sw_blend.c"/>
        <files mask="lv_draw_sw_blend_to_al88.c"/>
        <files mask="lv_draw_sw_blend_to_argb8888.c"/>
        <files mask="lv_draw_sw_blend_to_i1.c"/>
        <files mask="lv_draw_sw_blend_to_l8.c"/>
        <files mask="lv_draw_sw_blend_to_rgb565.c"/>
        <files mask="lv_draw_sw_blend_to_rgb888.c"/>
      </source>
      <source relative_path="src/draw/sw" type="src">
        <files mask="lv_draw_sw.c"/>
        <files mask="lv_draw_sw_arc.c"/>
        <files mask="lv_draw_sw_border.c"/>
        <files mask="lv_draw_sw_box_shadow.c"/>
        <files mask="lv_draw_sw_fill.c"/>
        <files mask="lv_draw_sw_gradient.c"/>
        <files mask="lv_draw_sw_img.c"/>
        <files mask="lv_draw_sw_letter.c"/>
        <files mask="lv_draw_sw_line.c"/>
        <files mask="lv_draw_sw_mask.c"/>
        <files mask="lv_draw_sw_mask_rect.c"/>
        <files mask="lv_draw_sw_transform.c"/>
        <files mask="lv_draw_sw_triangle.c"/>
        <files mask="lv_draw_sw_vector.c"/>
      </source>
      <source relative_path="src/drivers/display/drm" type="src">
        <files mask="lv_linux_drm.c"/>
      </source>
      <source relative_path="src/drivers/display/fb" type="src">
        <files mask="lv_linux_fbdev.c"/>
      </source>
      <source relative_path="src/drivers/display/ili9341" type="src">
        <files mask="lv_ili9341.c"/>
      </source>
      <source relative_path="src/drivers/display/lcd" type="src">
        <files mask="lv_lcd_generic_mipi.c"/>
      </source>
      <source relative_path="src/drivers/display/st7735" type="src">
        <files mask="lv_st7735.c"/>
      </source>
      <source relative_path="src/drivers/display/st7789" type="src">
        <files mask="lv_st7789.c"/>
      </source>
      <source relative_path="src/drivers/display/st7796" type="src">
        <files mask="lv_st7796.c"/>
      </source>
      <source relative_path="src/drivers/evdev" type="src">
        <files mask="lv_evdev.c"/>
      </source>
      <source relative_path="src/drivers/libinput" type="src">
        <files mask="lv_libinput.c"/>
        <files mask="lv_xkb.c"/>
      </source>
      <source relative_path="src/drivers/nuttx" type="src">
        <files mask="lv_nuttx_cache.c"/>
        <files mask="lv_nuttx_entry.c"/>
        <files mask="lv_nuttx_fbdev.c"/>
        <files mask="lv_nuttx_image_cache.c"/>
        <files mask="lv_nuttx_lcd.c"/>
        <files mask="lv_nuttx_libuv.c"/>
        <files mask="lv_nuttx_profiler.c"/>
        <files mask="lv_nuttx_touchscreen.c"/>
      </source>
      <source relative_path="src/drivers/sdl" type="src">
        <files mask="lv_sdl_keyboard.c"/>
        <files mask="lv_sdl_mouse.c"/>
        <files mask="lv_sdl_mousewheel.c"/>
        <files mask="lv_sdl_window.c"/>
      </source>
      <source relative_path="src/drivers/windows" type="src">
        <files mask="lv_windows_context.c"/>
        <files mask="lv_windows_display.c"/>
        <files mask="lv_windows_input.c"/>
      </source>
      <source relative_path="src/drivers/x11" type="src">
        <files mask="lv_x11_display.c"/>
        <files mask="lv_x11_input.c"/>
      </source>
      <source relative_path="src/drivers/glfw" type="src">
        <files mask="lv_glfw_window.c"/>
        <files mask="lv_opengles_debug.c"/>
        <files mask="lv_opengles_driver.c"/>
        <files mask="lv_opengles_texture.c"/>
      </source>
      <source relative_path="src/drivers/qnx" type="src">
        <files mask="lv_qnx.c"/>
      </source>
      <source relative_path="src/drivers/wayland" type="src">
        <files mask="lv_wayland.c"/>
        <files mask="lv_wayland_smm.c"/>
      </source>
      <source relative_path="src/font" type="src">
        <files mask="lv_binfont_loader.c"/>
        <files mask="lv_font.c"/>
        <files mask="lv_font_dejavu_16_persian_hebrew.c"/>
        <files mask="lv_font_fmt_txt.c"/>
        <files mask="lv_font_montserrat_10.c"/>
        <files mask="lv_font_montserrat_12.c"/>
        <files mask="lv_font_montserrat_14.c"/>
        <files mask="lv_font_montserrat_16.c"/>
        <files mask="lv_font_montserrat_18.c"/>
        <files mask="lv_font_montserrat_20.c"/>
        <files mask="lv_font_montserrat_22.c"/>
        <files mask="lv_font_montserrat_24.c"/>
        <files mask="lv_font_montserrat_26.c"/>
        <files mask="lv_font_montserrat_28.c"/>
        <files mask="lv_font_montserrat_28_compressed.c"/>
        <files mask="lv_font_montserrat_30.c"/>
        <files mask="lv_font_montserrat_32.c"/>
        <files mask="lv_font_montserrat_34.c"/>
        <files mask="lv_font_montserrat_36.c"/>
        <files mask="lv_font_montserrat_38.c"/>
        <files mask="lv_font_montserrat_40.c"/>
        <files mask="lv_font_montserrat_42.c"/>
        <files mask="lv_font_montserrat_44.c"/>
        <files mask="lv_font_montserrat_46.c"/>
        <files mask="lv_font_montserrat_48.c"/>
        <files mask="lv_font_montserrat_8.c"/>
        <files mask="lv_font_simsun_14_cjk.c"/>
        <files mask="lv_font_simsun_16_cjk.c"/>
        <files mask="lv_font_unscii_16.c"/>
        <files mask="lv_font_unscii_8.c"/>
      </source>
      <source relative_path="src/indev" type="src">
        <files mask="lv_indev.c"/>
        <files mask="lv_indev_scroll.c"/>
      </source>
      <source relative_path="src/layouts/flex" type="src">
        <files mask="lv_flex.c"/>
      </source>
      <source relative_path="src/layouts/grid" type="src">
        <files mask="lv_grid.c"/>
      </source>
      <source relative_path="src/layouts" type="src">
        <files mask="lv_layout.c"/>
      </source>
      <source relative_path="src/libs/barcode" type="src">
        <files mask="code128.c"/>
        <files mask="lv_barcode.c"/>
      </source>
      <source relative_path="src/libs/bin_decoder" type="src">
        <files mask="lv_bin_decoder.c"/>
      </source>
      <source relative_path="src/libs/bmp" type="src">
        <files mask="lv_bmp.c"/>
      </source>
      <source relative_path="src/libs/ffmpeg" type="src">
        <files mask="lv_ffmpeg.c"/>
      </source>
      <source relative_path="src/libs/freetype" type="src">
        <files mask="lv_freetype.c"/>
        <files mask="lv_freetype_glyph.c"/>
        <files mask="lv_freetype_image.c"/>
        <files mask="lv_freetype_outline.c"/>
        <files mask="lv_ftsystem.c"/>
      </source>
      <source relative_path="src/libs/fsdrv" type="src">
        <files mask="lv_fs_cbfs.c"/>
        <files mask="lv_fs_fatfs.c"/>
        <files mask="lv_fs_littlefs.c"/>
        <files mask="lv_fs_memfs.c"/>
        <files mask="lv_fs_posix.c"/>
        <files mask="lv_fs_rawfs.c"/>
        <files mask="lv_fs_stdio.c"/>
        <files mask="lv_fs_win32.c"/>
      </source>
      <source relative_path="src/libs/gif" type="src">
        <files mask="gifdec.c"/>
        <files mask="lv_gif.c"/>
      </source>
      <source relative_path="src/libs/libjpeg_turbo" type="src">
        <files mask="lv_libjpeg_turbo.c"/>
      </source>
      <source relative_path="src/libs/libpng" type="src">
        <files mask="lv_libpng.c"/>
      </source>
      <source relative_path="src/libs/lodepng" type="src">
        <files mask="lodepng.c"/>
        <files mask="lv_lodepng.c"/>
      </source>
      <source relative_path="src/libs/lz4" type="src">
        <files mask="lz4.c"/>
      </source>
      <source relative_path="src/libs/qrcode" type="src">
        <files mask="lv_qrcode.c"/>
        <files mask="qrcodegen.c"/>
      </source>
      <source relative_path="src/libs/rle" type="src">
        <files mask="lv_rle.c"/>
      </source>
      <source relative_path="src/libs/rlottie" type="src">
        <files mask="lv_rlottie.c"/>
      </source>
      <source relative_path="src/libs/tiny_ttf" type="src">
        <files mask="lv_tiny_ttf.c"/>
      </source>
      <source relative_path="src/libs/tjpgd" type="src">
        <files mask="lv_tjpgd.c"/>
        <files mask="tjpgd.c"/>
      </source>
      <source relative_path="src/misc/cache" type="src">
        <files mask="lv_cache.c"/>
        <files mask="lv_cache_entry.c"/>
        <files mask="lv_cache_lru_rb.c"/>
        <files mask="lv_image_cache.c"/>
        <files mask="lv_image_header_cache.c"/>
      </source>
      <source relative_path="src/misc" type="src">
        <files mask="lv_anim.c"/>
        <files mask="lv_anim_timeline.c"/>
        <files mask="lv_area.c"/>
        <files mask="lv_array.c"/>
        <files mask="lv_async.c"/>
        <files mask="lv_bidi.c"/>
        <files mask="lv_color.c"/>
        <files mask="lv_color_op.c"/>
        <files mask="lv_event.c"/>
        <files mask="lv_fs.c"/>
        <files mask="lv_ll.c"/>
        <files mask="lv_log.c"/>
        <files mask="lv_lru.c"/>
        <files mask="lv_math.c"/>
        <files mask="lv_matrix.c"/>
        <files mask="lv_palette.c"/>
        <files mask="lv_profiler_builtin.c"/>
        <files mask="lv_rb.c"/>
        <files mask="lv_style.c"/>
        <files mask="lv_style_gen.c"/>
        <files mask="lv_templ.c"/>
        <files mask="lv_text.c"/>
        <files mask="lv_text_ap.c"/>
        <files mask="lv_timer.c"/>
        <files mask="lv_utils.c"/>
      </source>
      <source relative_path="src/osal" type="src">
        <files mask="lv_cmsis_rtos2.c"/>
        <files mask="lv_freertos.c"/>
        <files mask="lv_mqx.c"/>
        <files mask="lv_os.c"/>
        <files mask="lv_os_none.c"/>
        <files mask="lv_pthread.c"/>
        <files mask="lv_rtthread.c"/>
        <files mask="lv_windows.c"/>
      </source>
      <source relative_path="src/others/file_explorer" type="src">
        <files mask="lv_file_explorer.c"/>
      </source>
      <source relative_path="src/others/fragment" type="src">
        <files mask="lv_fragment.c"/>
        <files mask="lv_fragment_manager.c"/>
      </source>
      <source relative_path="src/others/gridnav" type="src">
        <files mask="lv_gridnav.c"/>
      </source>
      <source relative_path="src/others/ime" type="src">
        <files mask="lv_ime_pinyin.c"/>
      </source>
      <source relative_path="src/others/imgfont" type="src">
        <files mask="lv_imgfont.c"/>
      </source>
      <source relative_path="src/others/monkey" type="src">
        <files mask="lv_monkey.c"/>
      </source>
      <source relative_path="src/others/observer" type="src">
        <files mask="lv_observer.c"/>
      </source>
      <source relative_path="src/others/snapshot" type="src">
        <files mask="lv_snapshot.c"/>
      </source>
      <source relative_path="src/others/sysmon" type="src">
        <files mask="lv_sysmon.c"/>
      </source>
      <source relative_path="src/others/vg_lite_tvg" type="src">
        <files mask="vg_lite_matrix.c"/>
      </source>
      <source relative_path="src/stdlib/builtin" type="src">
        <files mask="lv_mem_core_builtin.c"/>
        <files mask="lv_sprintf_builtin.c"/>
        <files mask="lv_string_builtin.c"/>
        <files mask="lv_tlsf.c"/>
      </source>
      <source relative_path="src/stdlib/clib" type="src">
        <files mask="lv_mem_core_clib.c"/>
        <files mask="lv_sprintf_clib.c"/>
        <files mask="lv_string_clib.c"/>
      </source>
      <source relative_path="src/stdlib" type="src">
        <files mask="lv_mem.c"/>
      </source>
      <source relative_path="src/stdlib/micropython" type="src">
        <files mask="lv_mem_core_micropython.c"/>
      </source>
      <source relative_path="src/stdlib/rtthread" type="src">
        <files mask="lv_mem_core_rtthread.c"/>
        <files mask="lv_sprintf_rtthread.c"/>
        <files mask="lv_string_rtthread.c"/>
      </source>
      <source relative_path="src/themes/default" type="src">
        <files mask="lv_theme_default.c"/>
      </source>
      <source relative_path="src/themes" type="src">
        <files mask="lv_theme.c"/>
      </source>
      <source relative_path="src/themes/mono" type="src">
        <files mask="lv_theme_mono.c"/>
      </source>
      <source relative_path="src/themes/simple" type="src">
        <files mask="lv_theme_simple.c"/>
      </source>
      <source relative_path="src/tick" type="src">
        <files mask="lv_tick.c"/>
      </source>
      <source relative_path="src/widgets/animimage" type="src">
        <files mask="lv_animimage.c"/>
      </source>
      <source relative_path="src/widgets/arc" type="src">
        <files mask="lv_arc.c"/>
      </source>
      <source relative_path="src/widgets/bar" type="src">
        <files mask="lv_bar.c"/>
      </source>
      <source relative_path="src/widgets/button" type="src">
        <files mask="lv_button.c"/>
      </source>
      <source relative_path="src/widgets/buttonmatrix" type="src">
        <files mask="lv_buttonmatrix.c"/>
      </source>
      <source relative_path="src/widgets/calendar" type="src">
        <files mask="lv_calendar.c"/>
        <files mask="lv_calendar_chinese.c"/>
        <files mask="lv_calendar_header_arrow.c"/>
        <files mask="lv_calendar_header_dropdown.c"/>
      </source>
      <source relative_path="src/widgets/carousel" type="src">
        <files mask="lv_carousel.c"/>
      </source>
      <source relative_path="src/widgets/canvas" type="src">
        <files mask="lv_canvas.c"/>
      </source>
      <source relative_path="src/widgets/chart" type="src">
        <files mask="lv_chart.c"/>
      </source>
      <source relative_path="src/widgets/checkbox" type="src">
        <files mask="lv_checkbox.c"/>
      </source>
      <source relative_path="src/widgets/dropdown" type="src">
        <files mask="lv_dropdown.c"/>
      </source>
      <source relative_path="src/widgets/image" type="src">
        <files mask="lv_image.c"/>
      </source>
      <source relative_path="src/widgets/imagebutton" type="src">
        <files mask="lv_imagebutton.c"/>
      </source>
      <source relative_path="src/widgets/keyboard" type="src">
        <files mask="lv_keyboard.c"/>
      </source>
      <source relative_path="src/widgets/label" type="src">
        <files mask="lv_label.c"/>
      </source>
      <source relative_path="src/widgets/led" type="src">
        <files mask="lv_led.c"/>
      </source>
      <source relative_path="src/widgets/line" type="src">
        <files mask="lv_line.c"/>
      </source>
      <source relative_path="src/widgets/list" type="src">
        <files mask="lv_list.c"/>
      </source>
      <source relative_path="src/widgets/lottie" type="src">
        <files mask="lv_lottie.c"/>
      </source>
      <source relative_path="src/widgets/menu" type="src">
        <files mask="lv_menu.c"/>
      </source>
      <source relative_path="src/widgets/msgbox" type="src">
        <files mask="lv_msgbox.c"/>
      </source>
      <source relative_path="src/widgets/objx_templ" type="src">
        <files mask="lv_objx_templ.c"/>
      </source>
      <source relative_path="src/widgets/roller" type="src">
        <files mask="lv_roller.c"/>
      </source>
      <source relative_path="src/widgets/scale" type="src">
        <files mask="lv_scale.c"/>
      </source>
      <source relative_path="src/widgets/slider" type="src">
        <files mask="lv_slider.c"/>
      </source>
      <source relative_path="src/widgets/span" type="src">
        <files mask="lv_span.c"/>
      </source>
      <source relative_path="src/widgets/spinbox" type="src">
        <files mask="lv_spinbox.c"/>
      </source>
      <source relative_path="src/widgets/spinner" type="src">
        <files mask="lv_spinner.c"/>
      </source>
      <source relative_path="src/widgets/switch" type="src">
        <files mask="lv_switch.c"/>
      </source>
      <source relative_path="src/widgets/table" type="src">
        <files mask="lv_table.c"/>
      </source>
      <source relative_path="src/widgets/tabview" type="src">
        <files mask="lv_tabview.c"/>
      </source>
      <source relative_path="src/widgets/textarea" type="src">
        <files mask="lv_textarea.c"/>
      </source>
      <source relative_path="src/widgets/tileview" type="src">
        <files mask="lv_tileview.c"/>
      </source>
      <source relative_path="src/widgets/win" type="src">
        <files mask="lv_win.c"/>
      </source>
      <source relative_path="src" type="c_include">
        <files mask="lv_api_map_v8.h"/>
        <files mask="lv_api_map_v9_0.h"/>
        <files mask="lv_api_map_v9_1.h"/>
        <files mask="lv_conf_internal.h"/>
        <files mask="lv_conf_kconfig.h"/>
        <files mask="lv_init.h"/>
        <files mask="lvgl.h"/>
        <files mask="lvgl_private.h"/>
      </source>
      <source relative_path="src/core" type="c_include">
        <files mask="lv_global.h"/>
        <files mask="lv_group.h"/>
        <files mask="lv_group_private.h"/>
        <files mask="lv_obj.h"/>
        <files mask="lv_obj_class.h"/>
        <files mask="lv_obj_class_private.h"/>
        <files mask="lv_obj_draw.h"/>
        <files mask="lv_obj_draw_private.h"/>
        <files mask="lv_obj_event.h"/>
        <files mask="lv_obj_event_private.h"/>
        <files mask="lv_obj_pos.h"/>
        <files mask="lv_obj_private.h"/>
        <files mask="lv_obj_property.h"/>
        <files mask="lv_obj_scroll.h"/>
        <files mask="lv_obj_scroll_private.h"/>
        <files mask="lv_obj_style.h"/>
        <files mask="lv_obj_style_gen.h"/>
        <files mask="lv_obj_style_private.h"/>
        <files mask="lv_obj_tree.h"/>
        <files mask="lv_refr.h"/>
        <files mask="lv_refr_private.h"/>
      </source>
      <source relative_path="src/display" type="c_include">
        <files mask="lv_display.h"/>
        <files mask="lv_display_private.h"/>
      </source>
      <source relative_path="src/draw" type="c_include">
        <files mask="lv_draw.h"/>
        <files mask="lv_draw_arc.h"/>
        <files mask="lv_draw_buf.h"/>
        <files mask="lv_draw_buf_private.h"/>
        <files mask="lv_draw_image.h"/>
        <files mask="lv_draw_image_private.h"/>
        <files mask="lv_draw_label.h"/>
        <files mask="lv_draw_label_private.h"/>
        <files mask="lv_draw_line.h"/>
        <files mask="lv_draw_mask.h"/>
        <files mask="lv_draw_mask_private.h"/>
        <files mask="lv_draw_private.h"/>
        <files mask="lv_draw_rect.h"/>
        <files mask="lv_draw_rect_private.h"/>
        <files mask="lv_draw_triangle.h"/>
        <files mask="lv_draw_triangle_private.h"/>
        <files mask="lv_draw_vector.h"/>
        <files mask="lv_draw_vector_private.h"/>
        <files mask="lv_image_decoder.h"/>
        <files mask="lv_image_decoder_private.h"/>
        <files mask="lv_image_dsc.h"/>
      </source>
      <source relative_path="src/draw/nxp/pxp" type="c_include">
        <files mask="lv_draw_pxp.h"/>
        <files mask="lv_pxp_cfg.h"/>
        <files mask="lv_pxp_osa.h"/>
        <files mask="lv_pxp_utils.h"/>
      </source>
      <source relative_path="src/draw/nxp/vglite" type="c_include">
        <files mask="lv_draw_vglite.h"/>
        <files mask="lv_vglite_buf.h"/>
        <files mask="lv_vglite_matrix.h"/>
        <files mask="lv_vglite_path.h"/>
        <files mask="lv_vglite_utils.h"/>
      </source>
      <source relative_path="src/draw/sdl" type="c_include">
        <files mask="lv_draw_sdl.h"/>
      </source>
      <source relative_path="src/draw/sw/arm2d" type="c_include">
        <files mask="lv_draw_sw_arm2d.h"/>
        <files mask="lv_draw_sw_helium.h"/>
      </source>
      <source relative_path="src/draw/sw/blend/arm2d" type="c_include">
        <files mask="lv_blend_arm2d.h"/>
      </source>
      <source relative_path="src/draw/sw/blend" type="c_include">
        <files mask="lv_draw_sw_blend.h"/>
        <files mask="lv_draw_sw_blend_private.h"/>
        <files mask="lv_draw_sw_blend_to_al88.h"/>
        <files mask="lv_draw_sw_blend_to_argb8888.h"/>
        <files mask="lv_draw_sw_blend_to_i1.h"/>
        <files mask="lv_draw_sw_blend_to_l8.h"/>
        <files mask="lv_draw_sw_blend_to_rgb565.h"/>
        <files mask="lv_draw_sw_blend_to_rgb888.h"/>
      </source>
      <source relative_path="src/draw/sw/blend/neon" type="c_include">
        <files mask="lv_blend_neon.h"/>
      </source>
      <source relative_path="src/draw/sw" type="c_include">
        <files mask="lv_draw_sw.h"/>
        <files mask="lv_draw_sw_gradient.h"/>
        <files mask="lv_draw_sw_gradient_private.h"/>
        <files mask="lv_draw_sw_mask.h"/>
        <files mask="lv_draw_sw_mask_private.h"/>
        <files mask="lv_draw_sw_private.h"/>
      </source>
      <source relative_path="src/drivers" type="c_include">
        <files mask="lv_drivers.h"/>
      </source>
      <source relative_path="src/drivers/display/drm" type="c_include">
        <files mask="lv_linux_drm.h"/>
      </source>
      <source relative_path="src/drivers/display/fb" type="c_include">
        <files mask="lv_linux_fbdev.h"/>
      </source>
      <source relative_path="src/drivers/display/ili9341" type="c_include">
        <files mask="lv_ili9341.h"/>
      </source>
      <source relative_path="src/drivers/display/lcd" type="c_include">
        <files mask="lv_lcd_generic_mipi.h"/>
      </source>
      <source relative_path="src/drivers/display/st7735" type="c_include">
        <files mask="lv_st7735.h"/>
      </source>
      <source relative_path="src/drivers/display/st7789" type="c_include">
        <files mask="lv_st7789.h"/>
      </source>
      <source relative_path="src/drivers/display/st7796" type="c_include">
        <files mask="lv_st7796.h"/>
      </source>
      <source relative_path="src/drivers/display/tft_espi" type="c_include">
        <files mask="lv_tft_espi.h"/>
      </source>
      <source relative_path="src/drivers/evdev" type="c_include">
        <files mask="lv_evdev.h"/>
      </source>
      <source relative_path="src/drivers/libinput" type="c_include">
        <files mask="lv_libinput.h"/>
        <files mask="lv_libinput_private.h"/>
        <files mask="lv_xkb.h"/>
        <files mask="lv_xkb_private.h"/>
      </source>
      <source relative_path="src/drivers/nuttx" type="c_include">
        <files mask="lv_nuttx_cache.h"/>
        <files mask="lv_nuttx_entry.h"/>
        <files mask="lv_nuttx_fbdev.h"/>
        <files mask="lv_nuttx_image_cache.h"/>
        <files mask="lv_nuttx_lcd.h"/>
        <files mask="lv_nuttx_libuv.h"/>
        <files mask="lv_nuttx_profiler.h"/>
        <files mask="lv_nuttx_touchscreen.h"/>
      </source>
      <source relative_path="src/drivers/sdl" type="c_include">
        <files mask="lv_sdl_keyboard.h"/>
        <files mask="lv_sdl_mouse.h"/>
        <files mask="lv_sdl_mousewheel.h"/>
        <files mask="lv_sdl_private.h"/>
        <files mask="lv_sdl_window.h"/>
      </source>
      <source relative_path="src/drivers/windows" type="c_include">
        <files mask="lv_windows_context.h"/>
        <files mask="lv_windows_display.h"/>
        <files mask="lv_windows_input.h"/>
        <files mask="lv_windows_input_private.h"/>
      </source>
      <source relative_path="src/drivers/x11" type="c_include">
        <files mask="lv_x11.h"/>
      </source>
      <source relative_path="src/drivers/glfw" type="c_include">
        <files mask="lv_glfw_window.h"/>
        <files mask="lv_glfw_window_private.h"/>
        <files mask="lv_opengles_debug.h"/>
        <files mask="lv_opengles_driver.h"/>
        <files mask="lv_opengles_texture.h"/>
      </source>
      <source relative_path="src/drivers/qnx" type="c_include">
        <files mask="lv_qnx.h"/>
      </source>
      <source relative_path="src/drivers/wayland" type="c_include">
        <files mask="lv_wayland.h"/>
        <files mask="lv_wayland_smm.h"/>
      </source>
      <source relative_path="src/font" type="c_include">
        <files mask="lv_binfont_loader.h"/>
        <files mask="lv_font.h"/>
        <files mask="lv_font_fmt_txt.h"/>
        <files mask="lv_font_fmt_txt_private.h"/>
        <files mask="lv_symbol_def.h"/>
      </source>
      <source relative_path="src/indev" type="c_include">
        <files mask="lv_indev.h"/>
        <files mask="lv_indev_private.h"/>
        <files mask="lv_indev_scroll.h"/>
      </source>
      <source relative_path="src/layouts/flex" type="c_include">
        <files mask="lv_flex.h"/>
      </source>
      <source relative_path="src/layouts/grid" type="c_include">
        <files mask="lv_grid.h"/>
      </source>
      <source relative_path="src/layouts" type="c_include">
        <files mask="lv_layout.h"/>
        <files mask="lv_layout_private.h"/>
      </source>
      <source relative_path="src/libs/barcode" type="c_include">
        <files mask="code128.h"/>
        <files mask="lv_barcode.h"/>
        <files mask="lv_barcode_private.h"/>
      </source>
      <source relative_path="src/libs/bin_decoder" type="c_include">
        <files mask="lv_bin_decoder.h"/>
      </source>
      <source relative_path="src/libs/bmp" type="c_include">
        <files mask="lv_bmp.h"/>
      </source>
      <source relative_path="src/libs/ffmpeg" type="c_include">
        <files mask="lv_ffmpeg.h"/>
        <files mask="lv_ffmpeg_private.h"/>
      </source>
      <source relative_path="src/libs/freetype" type="c_include">
        <files mask="ftmodule.h"/>
        <files mask="ftoption.h"/>
        <files mask="lv_freetype.h"/>
        <files mask="lv_freetype_private.h"/>
      </source>
      <source relative_path="src/libs/fsdrv" type="c_include">
        <files mask="lv_fsdrv.h"/>
      </source>
      <source relative_path="src/libs/gif" type="c_include">
        <files mask="gifdec.h"/>
        <files mask="gifdec_mve.h"/>
        <files mask="lv_gif.h"/>
        <files mask="lv_gif_private.h"/>
      </source>
      <source relative_path="src/libs/libjpeg_turbo" type="c_include">
        <files mask="lv_libjpeg_turbo.h"/>
      </source>
      <source relative_path="src/libs/libpng" type="c_include">
        <files mask="lv_libpng.h"/>
      </source>
      <source relative_path="src/libs/lodepng" type="c_include">
        <files mask="lodepng.h"/>
        <files mask="lv_lodepng.h"/>
      </source>
      <source relative_path="src/libs/lz4" type="c_include">
        <files mask="lz4.h"/>
      </source>
      <source relative_path="src/libs/qrcode" type="c_include">
        <files mask="lv_qrcode.h"/>
        <files mask="lv_qrcode_private.h"/>
        <files mask="qrcodegen.h"/>
      </source>
      <source relative_path="src/libs/rle" type="c_include">
        <files mask="lv_rle.h"/>
      </source>
      <source relative_path="src/libs/rlottie" type="c_include">
        <files mask="lv_rlottie.h"/>
        <files mask="lv_rlottie_private.h"/>
      </source>
      <source relative_path="src/libs/thorvg" type="c_include">
        <files mask="config.h"/>
        <files mask="thorvg.h"/>
        <files mask="thorvg_capi.h"/>
        <files mask="thorvg_lottie.h"/>
        <files mask="tvgAnimation.h"/>
        <files mask="tvgArray.h"/>
        <files mask="tvgBinaryDesc.h"/>
        <files mask="tvgCanvas.h"/>
        <files mask="tvgCommon.h"/>
        <files mask="tvgCompressor.h"/>
        <files mask="tvgFill.h"/>
        <files mask="tvgFrameModule.h"/>
        <files mask="tvgInlist.h"/>
        <files mask="tvgIteratorAccessor.h"/>
        <files mask="tvgLines.h"/>
        <files mask="tvgLoadModule.h"/>
        <files mask="tvgLoader.h"/>
        <files mask="tvgLock.h"/>
        <files mask="tvgLottieBuilder.h"/>
        <files mask="tvgLottieExpressions.h"/>
        <files mask="tvgLottieInterpolator.h"/>
        <files mask="tvgLottieLoader.h"/>
        <files mask="tvgLottieModel.h"/>
        <files mask="tvgLottieParser.h"/>
        <files mask="tvgLottieParserHandler.h"/>
        <files mask="tvgLottieProperty.h"/>
        <files mask="tvgMath.h"/>
        <files mask="tvgPaint.h"/>
        <files mask="tvgPicture.h"/>
        <files mask="tvgRawLoader.h"/>
        <files mask="tvgRender.h"/>
        <files mask="tvgSaveModule.h"/>
        <files mask="tvgScene.h"/>
        <files mask="tvgShape.h"/>
        <files mask="tvgStr.h"/>
        <files mask="tvgSvgCssStyle.h"/>
        <files mask="tvgSvgLoader.h"/>
        <files mask="tvgSvgLoaderCommon.h"/>
        <files mask="tvgSvgPath.h"/>
        <files mask="tvgSvgSceneBuilder.h"/>
        <files mask="tvgSvgUtil.h"/>
        <files mask="tvgSwCommon.h"/>
        <files mask="tvgSwRasterAvx.h"/>
        <files mask="tvgSwRasterC.h"/>
        <files mask="tvgSwRasterNeon.h"/>
        <files mask="tvgSwRasterTexmap.h"/>
        <files mask="tvgSwRenderer.h"/>
        <files mask="tvgTaskScheduler.h"/>
        <files mask="tvgText.h"/>
        <files mask="tvgXmlParser.h"/>
      </source>
      <source relative_path="src/libs/tiny_ttf" type="c_include">
        <files mask="lv_tiny_ttf.h"/>
        <files mask="stb_rect_pack.h"/>
        <files mask="stb_truetype_htcw.h"/>
      </source>
      <source relative_path="src/libs/tjpgd" type="c_include">
        <files mask="lv_tjpgd.h"/>
        <files mask="tjpgd.h"/>
        <files mask="tjpgdcnf.h"/>
      </source>
      <source relative_path="src/misc/cache" type="c_include">
        <files mask="lv_cache.h"/>
        <files mask="lv_cache_entry.h"/>
        <files mask="lv_cache_entry_private.h"/>
        <files mask="lv_cache_lru_rb.h"/>
        <files mask="lv_cache_private.h"/>
        <files mask="lv_image_cache.h"/>
        <files mask="lv_image_header_cache.h"/>
      </source>
      <source relative_path="src/misc" type="c_include">
        <files mask="lv_anim.h"/>
        <files mask="lv_anim_private.h"/>
        <files mask="lv_anim_timeline.h"/>
        <files mask="lv_area.h"/>
        <files mask="lv_area_private.h"/>
        <files mask="lv_array.h"/>
        <files mask="lv_assert.h"/>
        <files mask="lv_async.h"/>
        <files mask="lv_bidi.h"/>
        <files mask="lv_bidi_private.h"/>
        <files mask="lv_color.h"/>
        <files mask="lv_color_op.h"/>
        <files mask="lv_color_op_private.h"/>
        <files mask="lv_event.h"/>
        <files mask="lv_event_private.h"/>
        <files mask="lv_fs.h"/>
        <files mask="lv_fs_private.h"/>
        <files mask="lv_ll.h"/>
        <files mask="lv_log.h"/>
        <files mask="lv_lru.h"/>
        <files mask="lv_math.h"/>
        <files mask="lv_matrix.h"/>
        <files mask="lv_palette.h"/>
        <files mask="lv_profiler.h"/>
        <files mask="lv_profiler_builtin.h"/>
        <files mask="lv_profiler_builtin_private.h"/>
        <files mask="lv_rb.h"/>
        <files mask="lv_rb_private.h"/>
        <files mask="lv_style.h"/>
        <files mask="lv_style_gen.h"/>
        <files mask="lv_style_private.h"/>
        <files mask="lv_templ.h"/>
        <files mask="lv_text.h"/>
        <files mask="lv_text_ap.h"/>
        <files mask="lv_text_private.h"/>
        <files mask="lv_timer.h"/>
        <files mask="lv_timer_private.h"/>
        <files mask="lv_types.h"/>
        <files mask="lv_utils.h"/>
      </source>
      <source relative_path="src/osal" type="c_include">
        <files mask="lv_cmsis_rtos2.h"/>
        <files mask="lv_freertos.h"/>
        <files mask="lv_mqx.h"/>
        <files mask="lv_os.h"/>
        <files mask="lv_os_none.h"/>
        <files mask="lv_os_private.h"/>
        <files mask="lv_pthread.h"/>
        <files mask="lv_rtthread.h"/>
        <files mask="lv_windows.h"/>
      </source>
      <source relative_path="src/others/file_explorer" type="c_include">
        <files mask="lv_file_explorer.h"/>
        <files mask="lv_file_explorer_private.h"/>
      </source>
      <source relative_path="src/others/fragment" type="c_include">
        <files mask="lv_fragment.h"/>
        <files mask="lv_fragment_private.h"/>
      </source>
      <source relative_path="src/others/gridnav" type="c_include">
        <files mask="lv_gridnav.h"/>
      </source>
      <source relative_path="src/others/ime" type="c_include">
        <files mask="lv_ime_pinyin.h"/>
        <files mask="lv_ime_pinyin_private.h"/>
      </source>
      <source relative_path="src/others/imgfont" type="c_include">
        <files mask="lv_imgfont.h"/>
      </source>
      <source relative_path="src/others/monkey" type="c_include">
        <files mask="lv_monkey.h"/>
        <files mask="lv_monkey_private.h"/>
      </source>
      <source relative_path="src/others/observer" type="c_include">
        <files mask="lv_observer.h"/>
        <files mask="lv_observer_private.h"/>
      </source>
      <source relative_path="src/others/snapshot" type="c_include">
        <files mask="lv_snapshot.h"/>
      </source>
      <source relative_path="src/others/sysmon" type="c_include">
        <files mask="lv_sysmon.h"/>
        <files mask="lv_sysmon_private.h"/>
      </source>
      <source relative_path="src/others/vg_lite_tvg" type="c_include">
        <files mask="vg_lite.h"/>
      </source>
      <source relative_path="src/stdlib/builtin" type="c_include">
        <files mask="lv_tlsf.h"/>
        <files mask="lv_tlsf_private.h"/>
      </source>
      <source relative_path="src/stdlib" type="c_include">
        <files mask="lv_mem.h"/>
        <files mask="lv_mem_private.h"/>
        <files mask="lv_sprintf.h"/>
        <files mask="lv_string.h"/>
      </source>
      <source relative_path="src/themes/default" type="c_include">
        <files mask="lv_theme_default.h"/>
      </source>
      <source relative_path="src/themes" type="c_include">
        <files mask="lv_theme.h"/>
        <files mask="lv_theme_private.h"/>
      </source>
      <source relative_path="src/themes/mono" type="c_include">
        <files mask="lv_theme_mono.h"/>
      </source>
      <source relative_path="src/themes/simple" type="c_include">
        <files mask="lv_theme_simple.h"/>
      </source>
      <source relative_path="src/tick" type="c_include">
        <files mask="lv_tick.h"/>
        <files mask="lv_tick_private.h"/>
      </source>
      <source relative_path="src/widgets/animimage" type="c_include">
        <files mask="lv_animimage.h"/>
        <files mask="lv_animimage_private.h"/>
      </source>
      <source relative_path="src/widgets/arc" type="c_include">
        <files mask="lv_arc.h"/>
        <files mask="lv_arc_private.h"/>
      </source>
      <source relative_path="src/widgets/bar" type="c_include">
        <files mask="lv_bar.h"/>
        <files mask="lv_bar_private.h"/>
      </source>
      <source relative_path="src/widgets/button" type="c_include">
        <files mask="lv_button.h"/>
        <files mask="lv_button_private.h"/>
      </source>
      <source relative_path="src/widgets/buttonmatrix" type="c_include">
        <files mask="lv_buttonmatrix.h"/>
        <files mask="lv_buttonmatrix_private.h"/>
      </source>
      <source relative_path="src/widgets/calendar" type="c_include">
        <files mask="lv_calendar.h"/>
        <files mask="lv_calendar_chinese.h"/>
        <files mask="lv_calendar_chinese_private.h"/>
        <files mask="lv_calendar_header_arrow.h"/>
        <files mask="lv_calendar_header_dropdown.h"/>
        <files mask="lv_calendar_private.h"/>
      </source>
      <source relative_path="src/widgets/canvas" type="c_include">
        <files mask="lv_canvas.h"/>
        <files mask="lv_canvas_private.h"/>
      </source>
      <source relative_path="src/widgets/carousel" type="c_include">
        <files mask="lv_carousel.h"/>
        <files mask="lv_carousel_private.h"/>
      </source>
      <source relative_path="src/widgets/chart" type="c_include">
        <files mask="lv_chart.h"/>
        <files mask="lv_chart_private.h"/>
      </source>
      <source relative_path="src/widgets/checkbox" type="c_include">
        <files mask="lv_checkbox.h"/>
        <files mask="lv_checkbox_private.h"/>
      </source>
      <source relative_path="src/widgets/dropdown" type="c_include">
        <files mask="lv_dropdown.h"/>
        <files mask="lv_dropdown_private.h"/>
      </source>
      <source relative_path="src/widgets/image" type="c_include">
        <files mask="lv_image.h"/>
        <files mask="lv_image_private.h"/>
      </source>
      <source relative_path="src/widgets/imagebutton" type="c_include">
        <files mask="lv_imagebutton.h"/>
        <files mask="lv_imagebutton_private.h"/>
      </source>
      <source relative_path="src/widgets/keyboard" type="c_include">
        <files mask="lv_keyboard.h"/>
        <files mask="lv_keyboard_private.h"/>
      </source>
      <source relative_path="src/widgets/label" type="c_include">
        <files mask="lv_label.h"/>
        <files mask="lv_label_private.h"/>
      </source>
      <source relative_path="src/widgets/led" type="c_include">
        <files mask="lv_led.h"/>
        <files mask="lv_led_private.h"/>
      </source>
      <source relative_path="src/widgets/line" type="c_include">
        <files mask="lv_line.h"/>
        <files mask="lv_line_private.h"/>
      </source>
      <source relative_path="src/widgets/list" type="c_include">
        <files mask="lv_list.h"/>
      </source>
      <source relative_path="src/widgets/lottie" type="c_include">
        <files mask="lv_lottie.h"/>
        <files mask="lv_lottie_private.h"/>
      </source>
      <source relative_path="src/widgets/menu" type="c_include">
        <files mask="lv_menu.h"/>
        <files mask="lv_menu_private.h"/>
      </source>
      <source relative_path="src/widgets/msgbox" type="c_include">
        <files mask="lv_msgbox.h"/>
        <files mask="lv_msgbox_private.h"/>
      </source>
      <source relative_path="src/widgets/objx_templ" type="c_include">
        <files mask="lv_objx_templ.h"/>
      </source>
      <source relative_path="src/widgets/roller" type="c_include">
        <files mask="lv_roller.h"/>
        <files mask="lv_roller_private.h"/>
      </source>
      <source relative_path="src/widgets/scale" type="c_include">
        <files mask="lv_scale.h"/>
        <files mask="lv_scale_private.h"/>
      </source>
      <source relative_path="src/widgets/slider" type="c_include">
        <files mask="lv_slider.h"/>
        <files mask="lv_slider_private.h"/>
      </source>
      <source relative_path="src/widgets/span" type="c_include">
        <files mask="lv_span.h"/>
        <files mask="lv_span_private.h"/>
      </source>
      <source relative_path="src/widgets/spinbox" type="c_include">
        <files mask="lv_spinbox.h"/>
        <files mask="lv_spinbox_private.h"/>
      </source>
      <source relative_path="src/widgets/spinner" type="c_include">
        <files mask="lv_spinner.h"/>
      </source>
      <source relative_path="src/widgets/switch" type="c_include">
        <files mask="lv_switch.h"/>
        <files mask="lv_switch_private.h"/>
      </source>
      <source relative_path="src/widgets/table" type="c_include">
        <files mask="lv_table.h"/>
        <files mask="lv_table_private.h"/>
      </source>
      <source relative_path="src/widgets/tabview" type="c_include">
        <files mask="lv_tabview.h"/>
        <files mask="lv_tabview_private.h"/>
      </source>
      <source relative_path="src/widgets/textarea" type="c_include">
        <files mask="lv_textarea.h"/>
        <files mask="lv_textarea_private.h"/>
      </source>
      <source relative_path="src/widgets/tileview" type="c_include">
        <files mask="lv_tileview.h"/>
        <files mask="lv_tileview_private.h"/>
      </source>
      <source relative_path="src/widgets/win" type="c_include">
        <files mask="lv_win.h"/>
        <files mask="lv_win_private.h"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_conf_template.h"/>
        <files mask="lv_version.h"/>
        <files mask="lvgl.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/draw/nxp/vglite" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/draw/nxp/vglite" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.benchmark.MIMXRT555S" name="LVGL benchamrk demo" brief="LVGL benchmark demo" version="9.2.1" full_name="LVGL benchark demo" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/benchmark" project_base_path="lvgl/demos/benchmark">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_benchmark.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_benchmark.h"/>
      </source>
      <source relative_path="assets" type="src">
        <files mask="img_benchmark_avatar.c"/>
        <files mask="img_benchmark_cogwheel_alpha256.c"/>
        <files mask="img_benchmark_cogwheel_argb.c"/>
        <files mask="img_benchmark_cogwheel_indexed16.c"/>
        <files mask="img_benchmark_cogwheel_rgb.c"/>
        <files mask="lv_font_benchmark_montserrat_12_compr_az.c.c"/>
        <files mask="lv_font_benchmark_montserrat_16_compr_az.c.c"/>
        <files mask="lv_font_benchmark_montserrat_28_compr_az.c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_benchmark.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="assets" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="assets" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.common.MIMXRT555S" name="LVGL demo common" brief="LVGL demo common" version="9.2.1" full_name="LVGL demo common" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos" project_base_path="lvgl/demos">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demos.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demos.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_common.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.transform.MIMXRT555S" name="LVGL demo transform" brief="LVGL demo transform" version="9.2.1" full_name="LVGL demo transform" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/transform" project_base_path="lvgl/demos/transform">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_transform.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_transform.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_transform.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.multilang.MIMXRT555S" name="LVGL demo multilang" brief="LVGL demo multilang" version="9.2.1" full_name="LVGL demo multilang" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/multilang" project_base_path="lvgl/demos/multilang">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_multilang.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_multilang.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_multilang.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.flex_layout.MIMXRT555S" name="LVGL demo flex_layout" brief="LVGL demo flex_layout" version="9.2.1" full_name="LVGL demo flex_layout" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/flex_layout" project_base_path="lvgl/demos/flex_layout">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_flex_layout_ctrl_pad.c"/>
        <files mask="lv_demo_flex_layout_flex_loader.c"/>
        <files mask="lv_demo_flex_layout_main.c"/>
        <files mask="lv_demo_flex_layout_view.c"/>
        <files mask="lv_demo_flex_layout_view_child_node.c"/>
        <files mask="lv_demo_flex_layout_view_ctrl_pad.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_flex_layout.h"/>
        <files mask="lv_demo_flex_layout_main.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_flex_layout.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.scroll.MIMXRT555S" name="LVGL demo scroll" brief="LVGL demo scroll" version="9.2.1" full_name="LVGL demo scroll" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/scroll" project_base_path="lvgl/demos/scroll">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_scroll.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_scroll.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_scroll.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.music.MIMXRT555S" name="LVGL demo music" brief="LVGL demo music" version="9.2.1" full_name="LVGL demo music" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/music" project_base_path="lvgl/demos/music">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_music.c"/>
        <files mask="lv_demo_music_list.c"/>
        <files mask="lv_demo_music_main.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_music.h"/>
        <files mask="lv_demo_music_list.h"/>
        <files mask="lv_demo_music_main.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_music.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.keypad_encoder.MIMXRT555S" name="LVGL demo keypad_encoder" brief="LVGL demo keypad_encoder" version="9.2.1" full_name="LVGL demo keypad_encoder" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/keypad_encoder" project_base_path="lvgl/demos/keypad_encoder">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_keypad_encoder.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_keypad_encoder.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_keypad_encoder.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.stress.MIMXRT555S" name="LVGL stress demo" brief="LVGL stress demo" version="9.2.1" full_name="LVGL stress demo" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/stress" project_base_path="lvgl/demos/stress">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT555S"/>
          <component_dependency value="middleware.lvgl.demo.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_stress.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_stress.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_stress.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.widgets.MIMXRT555S" name="LVGL widgets demo" brief="LVGL widgets demo" version="9.2.1" full_name="LVGL  demo" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/widgets" project_base_path="lvgl/demos/widgets">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT555S"/>
          <component_dependency value="middleware.lvgl.demo.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_widgets.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_widgets.h"/>
      </source>
      <source relative_path="assets" type="src">
        <files mask="img_clothes.c"/>
        <files mask="img_demo_widgets_avatar.c"/>
        <files mask="img_demo_widgets_needle.c"/>
        <files mask="img_lvgl_logo.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_widgets.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="assets" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="assets" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.llhttp.MIMXRT555S" name="llhttp" brief="HTTP parser in LLVM IR" version="6.0.5" full_name="llhttp" category="AWS IoT/llhttp" user_visible="true" type="middleware" package_base_path="middleware/llhttp" project_base_path="llhttp">
      <dependencies>
        <all>
          <component_dependency value="utility.debug_console.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="include" type="c_include">
        <files mask="llhttp.h"/>
      </source>
      <source relative_path="src" type="src">
        <files mask="api.c"/>
        <files mask="http.c"/>
        <files mask="llhttp.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_llhttp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.MIMXRT555S" name="FreeMASTER driver common files" brief="Common FreeMASTER driver code." version="3.0.7" full_name="FreeMASTER communication driver common code" category="FreeMASTER/FreeMASTER Driver" user_visible="true" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.fmstr.platform_56f800e.MIMXRT555S"/>
            <component_dependency value="middleware.fmstr.platform_gen32le.MIMXRT555S"/>
            <component_dependency value="middleware.fmstr.platform_pa32.MIMXRT555S"/>
            <component_dependency value="middleware.fmstr.platform_s12z.MIMXRT555S"/>
            <component_dependency value="middleware.fmstr.platform_s32.MIMXRT555S"/>
          </any_of>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="src/common" type="c_include">
        <files mask="freemaster.h"/>
        <files mask="freemaster_defcfg.h"/>
        <files mask="freemaster_private.h"/>
        <files mask="freemaster_protocol.h"/>
        <files mask="freemaster_rec.h"/>
        <files mask="freemaster_tsa.h"/>
        <files mask="freemaster_ures.h"/>
        <files mask="freemaster_utils.h"/>
        <files mask="freemaster_can.h"/>
        <files mask="freemaster_serial.h"/>
        <files mask="freemaster_net.h"/>
      </source>
      <source relative_path="src/common" type="src">
        <files mask="freemaster_appcmd.c"/>
        <files mask="freemaster_pipes.c"/>
        <files mask="freemaster_protocol.c"/>
        <files mask="freemaster_rec.c"/>
        <files mask="freemaster_scope.c"/>
        <files mask="freemaster_tsa.c"/>
        <files mask="freemaster_ures.c"/>
        <files mask="freemaster_utils.c"/>
        <files mask="freemaster_can.c"/>
        <files mask="freemaster_sha.c"/>
        <files mask="freemaster_pdbdm.c"/>
        <files mask="freemaster_serial.c"/>
        <files mask="freemaster_net.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fmstr.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/common" type="c_include"/>
        <include_path relative_path="src/common" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.platform_gen32le.MIMXRT555S" name="FreeMASTER 32bit driver" brief="FreeMASTER driver code for 32bit platforms, enabling communication between FreeMASTER or FreeMASTER Lite tools and MCU application. Supports Serial, CAN, USB and BDM/JTAG physical interface." version="3.0.7" full_name="FreeMASTER communication driver for 32bit platforms" category="FreeMASTER/FreeMASTER Driver" user_visible="true" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <all>
          <component_dependency value="middleware.fmstr.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="src/platforms/gen32le" type="c_include">
        <files mask="freemaster_gen32le.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/can" type="src">
        <files mask="freemaster_flexcan.c"/>
        <files mask="freemaster_mscan.c"/>
        <files mask="freemaster_mcan.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/can" type="c_include">
        <files mask="freemaster_flexcan.h"/>
        <files mask="freemaster_mscan.h"/>
        <files mask="freemaster_mcan.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/serial" type="src">
        <files mask="freemaster_serial_uart.c"/>
        <files mask="freemaster_serial_lpsci.c"/>
        <files mask="freemaster_serial_lpuart.c"/>
        <files mask="freemaster_serial_usart.c"/>
        <files mask="freemaster_serial_miniusart.c"/>
        <files mask="freemaster_serial_usb.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/serial" type="c_include">
        <files mask="freemaster_serial_uart.h"/>
        <files mask="freemaster_serial_lpsci.h"/>
        <files mask="freemaster_serial_lpuart.h"/>
        <files mask="freemaster_serial_usart.h"/>
        <files mask="freemaster_serial_miniusart.h"/>
        <files mask="freemaster_serial_usb.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/network" type="src">
        <files mask="freemaster_net_segger_rtt.c"/>
        <files mask="freemaster_net_lwip_udp.c"/>
        <files mask="freemaster_net_lwip_tcp.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/network" type="c_include">
        <files mask="freemaster_net_segger_rtt.h"/>
        <files mask="freemaster_net_lwip_udp.h"/>
        <files mask="freemaster_net_lwip_tcp.h"/>
      </source>
      <source relative_path="src/template/gen32le" config="true" type="c_include">
        <files mask="freemaster_cfg.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fmstr_platform_gen32le.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/platforms/gen32le" type="c_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/can" type="c_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/serial" type="c_include"/>
        <include_path relative_path="src/template/gen32le" type="c_include"/>
        <include_path relative_path="src/platforms/gen32le" type="asm_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/can" type="asm_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/serial" type="asm_include"/>
        <include_path relative_path="src/template/gen32le" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.platform_56f800e.MIMXRT555S" name="FreeMASTER DSC driver" brief="FreeMASTER driver code for DSC platforms, enabling communication between FreeMASTER or FreeMASTER Lite tools and MCU application. Supports Serial, CAN, USB and BDM/JTAG physical interface." version="3.0.7" full_name="FreeMASTER communication driver for DSC platforms" category="FreeMASTER/FreeMASTER Driver" user_visible="true" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <all>
          <component_dependency value="middleware.fmstr.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="src/platforms/56f800e" type="c_include">
        <files mask="freemaster_56f800e.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/can" type="src">
        <files mask="freemaster_flexcan_dsc.c"/>
        <files mask="freemaster_mscan_dsc.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/can" type="c_include">
        <files mask="freemaster_flexcan_dsc.h"/>
        <files mask="freemaster_mscan_dsc.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/serial" type="src">
        <files mask="freemaster_serial_qsci.c"/>
        <files mask="freemaster_56f800e_eonce.c"/>
        <files mask="freemaster_serial_usb.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/serial" type="c_include">
        <files mask="freemaster_serial_qsci.h"/>
        <files mask="freemaster_56f800e_eonce.h"/>
        <files mask="freemaster_serial_usb.h"/>
      </source>
      <source relative_path="src/template/56f800e" config="true" type="c_include">
        <files mask="freemaster_cfg.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fmstr_platform_56f800e.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/platforms/56f800e" type="c_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/can" type="c_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/serial" type="c_include"/>
        <include_path relative_path="src/template/56f800e" type="c_include"/>
        <include_path relative_path="src/platforms/56f800e" type="asm_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/can" type="asm_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/serial" type="asm_include"/>
        <include_path relative_path="src/template/56f800e" type="asm_include"/>
      </include_paths>
    </component>
    <!--<component id="middleware.fmstr.all_files.MIMXRT555S" name="FreeMASTER driver all files" version="3.0.7" package_base_path="middleware/freemaster" project_base_path="freemaster">
  <source relative_path="src/common" type="c_include">
    <files mask="freemaster.h"/>
    <files mask="freemaster_can.h"/>
    <files mask="freemaster_defcfg.h"/>
    <files mask="freemaster_net.h"/>
    <files mask="freemaster_private.h"/>
    <files mask="freemaster_protocol.h"/>
    <files mask="freemaster_rec.h"/>
    <files mask="freemaster_serial.h"/>
    <files mask="freemaster_tsa.h"/>
    <files mask="freemaster_ures.h"/>
    <files mask="freemaster_utils.h"/>
  </source>
  <source relative_path="src/common" type="src">
    <files mask="freemaster_appcmd.c"/>
    <files mask="freemaster_can.c"/>
    <files mask="freemaster_net.c"/>
    <files mask="freemaster_pdbdm.c"/>
    <files mask="freemaster_pipes.c"/>
    <files mask="freemaster_protocol.c"/>
    <files mask="freemaster_rec.c"/>
    <files mask="freemaster_scope.c"/>
    <files mask="freemaster_serial.c"/>
    <files mask="freemaster_sha.c"/>
    <files mask="freemaster_tsa.c"/>
    <files mask="freemaster_ures.c"/>
    <files mask="freemaster_utils.c"/>
  </source>
  <source relative_path="src/common" type="other">
    <files mask="freemaster_cfg.h.example"/>
  </source>
  <source relative_path="src/platforms/56f800e" type="c_include">
    <files mask="freemaster_56f800e.h"/>
  </source>
  <source relative_path="src/platforms/gen32be" type="c_include">
    <files mask="freemaster_gen32be.h"/>
  </source>
  <source relative_path="src/platforms/gen32le" type="c_include">
    <files mask="freemaster_gen32le.h"/>
  </source>
  <source relative_path="src/platforms/s12z" type="c_include">
    <files mask="freemaster_s12z.h"/>
  </source>
  <source relative_path="src/drivers" type="doc">
    <files mask="readme.txt"/>
  </source>
  <source relative_path="src/drivers/dreg/DSC" type="src">
    <files mask="freemaster_56f800e_eonce.c"/>
    <files mask="freemaster_56f800e_flexcan.c"/>
    <files mask="freemaster_56f800e_qsci.c"/>
  </source>
  <source relative_path="src/drivers/dreg/DSC" type="c_include">
    <files mask="freemaster_56f800e_eonce.h"/>
    <files mask="freemaster_56f800e_flexcan.h"/>
    <files mask="freemaster_56f800e_qsci.h"/>
  </source>
  <source relative_path="src/drivers/dreg/Kxx" type="src">
    <files mask="freemaster_kxx_uart.c"/>
  </source>
  <source relative_path="src/drivers/dreg/Kxx" type="c_include">
    <files mask="freemaster_kxx_uart.h"/>
  </source>
  <source relative_path="src/drivers/dreg/MPC" type="src">
    <files mask="freemaster_mpc574xp_linflex.c"/>
  </source>
  <source relative_path="src/drivers/dreg/MPC" type="c_include">
    <files mask="freemaster_mpc574xp_linflex.h"/>
  </source>
  <source relative_path="src/drivers/dreg/S12Z" type="src">
    <files mask="freemaster_s12z_mscan.c"/>
    <files mask="freemaster_s12z_sci.c"/>
  </source>
  <source relative_path="src/drivers/dreg/S12Z" type="c_include">
    <files mask="freemaster_s12z_mscan.h"/>
    <files mask="freemaster_s12z_sci.h"/>
  </source>
  <source relative_path="src/drivers/dreg/S32G" type="src">
    <files mask="freemaster_s32g274a_linflexd.c"/>
  </source>
  <source relative_path="src/drivers/dreg/S32G" type="c_include">
    <files mask="freemaster_s32g274a_linflexd.h"/>
  </source>
  <source relative_path="src/drivers/dreg/S32K" type="src">
    <files mask="freemaster_s32k144_lpuart.c"/>
    <files mask="freemaster_s32k3xx_lpuart.c"/>
  </source>
  <source relative_path="src/drivers/dreg/S32K" type="c_include">
    <files mask="freemaster_s32k144_lpuart.h"/>
    <files mask="freemaster_s32k3xx_lpuart.h"/>
  </source>
  <source relative_path="src/drivers/dreg/S32R" type="src">
    <files mask="freemaster_s32r45_linflexd.c"/>
  </source>
  <source relative_path="src/drivers/dreg/S32R" type="c_include">
    <files mask="freemaster_s32r45_linflexd.h"/>
  </source>
  <source relative_path="src/drivers/dreg/S32S" type="src">
    <files mask="freemaster_s32s247tv_linflexd.c"/>
  </source>
  <source relative_path="src/drivers/dreg/S32S" type="c_include">
    <files mask="freemaster_s32s247tv_linflexd.h"/>
  </source>
  <source relative_path="src/drivers/mcuxsdk/can" type="src">
    <files mask="freemaster_flexcan.c"/>
    <files mask="freemaster_flexcan_dsc.c"/>
    <files mask="freemaster_mcan.c"/>
    <files mask="freemaster_mscan.c"/>
    <files mask="freemaster_mscan_dsc.c"/>
  </source>
  <source relative_path="src/drivers/mcuxsdk/can" type="c_include">
    <files mask="freemaster_flexcan.h"/>
    <files mask="freemaster_flexcan_dsc.h"/>
    <files mask="freemaster_mcan.h"/>
    <files mask="freemaster_mscan.h"/>
    <files mask="freemaster_mscan_dsc.h"/>
  </source>
  <source relative_path="src/drivers/mcuxsdk/serial" type="src">
    <files mask="freemaster_56f800e_eonce.c"/>
    <files mask="freemaster_serial_lpsci.c"/>
    <files mask="freemaster_serial_lpuart.c"/>
    <files mask="freemaster_serial_miniusart.c"/>
    <files mask="freemaster_serial_qsci.c"/>
    <files mask="freemaster_serial_uart.c"/>
    <files mask="freemaster_serial_usart.c"/>
    <files mask="freemaster_serial_usb.c"/>
  </source>
  <source relative_path="src/drivers/mcuxsdk/serial" type="c_include">
    <files mask="freemaster_56f800e_eonce.h"/>
    <files mask="freemaster_serial_lpsci.h"/>
    <files mask="freemaster_serial_lpuart.h"/>
    <files mask="freemaster_serial_miniusart.h"/>
    <files mask="freemaster_serial_qsci.h"/>
    <files mask="freemaster_serial_uart.h"/>
    <files mask="freemaster_serial_usart.h"/>
    <files mask="freemaster_serial_usb.h"/>
  </source>
  <source relative_path="src/drivers/ampxsdk/uart/S32K1x" type="src">
    <files mask="freemaster_serial_lpuart.c"/>
  </source>
  <source relative_path="src/drivers/ampxsdk/uart/S32K1x" type="c_include">
    <files mask="freemaster_serial_lpuart.h"/>
  </source>
  <source relative_path="src/drivers/ampxsdk/can/S32K1x" type="src">
    <files mask="freemaster_flexcan.c"/>
  </source>
  <source relative_path="src/drivers/ampxsdk/can/S32K1x" type="c_include">
    <files mask="freemaster_flexcan.h"/>
  </source>
  <source relative_path="src/support/mcuxsdk_usb" type="src">
    <files mask="freemaster_usb.c"/>
    <files mask="freemaster_usb_device_descriptor.c"/>
  </source>
  <source relative_path="src/support/mcuxsdk_usb" type="c_include">
    <files mask="freemaster_usb.h"/>
    <files mask="freemaster_usb_device_descriptor.h"/>
    <files mask="usb_device_descriptor.h"/>
  </source>
  <source relative_path="src/support/mcuxsdk_usb" type="doc">
    <files mask="readme.txt"/>
  </source>
</component>-->
    <component id="middleware.fmstr.platform_s32.MIMXRT555S" name="FreeMASTER S32 driver" brief="FreeMASTER driver code for S32 platform." version="3.0.7" full_name="FreeMASTER communication driver for S32 platform" category="FreeMASTER/FreeMASTER Driver" user_visible="false" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <all>
          <component_dependency value="middleware.fmstr.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="src/platforms/gen32le" type="c_include">
        <files mask="freemaster_gen32le.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fmstr_platform_s32.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/platforms/gen32le" type="c_include"/>
        <include_path relative_path="src/platforms/gen32le" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.platform_pa32.MIMXRT555S" name="FreeMASTER Power Architecture driver" brief="FreeMASTER driver code for Power Architecture 32bit platform." version="3.0.7" full_name="FreeMASTER communication driver for Power Architecture 32bit platform" category="FreeMASTER/FreeMASTER Driver" user_visible="false" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <all>
          <component_dependency value="middleware.fmstr.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="src/platforms/gen32be" type="c_include">
        <files mask="freemaster_gen32be.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fmstr_platform_pa32.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/platforms/gen32be" type="c_include"/>
        <include_path relative_path="src/platforms/gen32be" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.platform_s12z.MIMXRT555S" name="FreeMASTER S12Z driver" brief="FreeMASTER driver code for S12Z platform." version="3.0.7" full_name="FreeMASTER communication driver for S12Z platform" category="FreeMASTER/FreeMASTER Driver" user_visible="false" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <all>
          <component_dependency value="middleware.fmstr.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="src/platforms/s12z" type="c_include">
        <files mask="freemaster_s12z.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fmstr_platform_s12z.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/platforms/s12z" type="c_include"/>
        <include_path relative_path="src/platforms/s12z" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.mmc.MIMXRT555S" name="mmc" brief="FatFs_MMC" version="0.15.0" full_name="Fatfs MMC layer" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.MIMXRT555S"/>
          <component_dependency value="middleware.fatfs.template_mmc.MIMXRT555S"/>
          <component_dependency value="middleware.sdmmc.mmc.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_mmc_disk" type="src">
        <files mask="fsl_mmc_disk.c"/>
      </source>
      <source relative_path="source/fsl_mmc_disk" type="c_include">
        <files mask="fsl_mmc_disk.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_mmc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_mmc_disk" type="c_include"/>
        <include_path relative_path="source/fsl_mmc_disk" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.ram.MIMXRT555S" name="ram" brief="FatFs_RAM" version="0.15.0" full_name="Fatfs RAM layer" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.MIMXRT555S"/>
          <component_dependency value="middleware.fatfs.template_ram.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_ram_disk" type="src">
        <files mask="fsl_ram_disk.c"/>
      </source>
      <source relative_path="source/fsl_ram_disk" type="c_include">
        <files mask="fsl_ram_disk.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_ram.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_ram_disk" type="c_include"/>
        <include_path relative_path="source/fsl_ram_disk" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.sd.MIMXRT555S" name="sd" brief="FatFs_SD" version="0.15.0" full_name="Fatfs SD layer" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.MIMXRT555S"/>
          <component_dependency value="middleware.fatfs.template_sd.MIMXRT555S"/>
          <component_dependency value="middleware.sdmmc.sd.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_sd_disk" type="src">
        <files mask="fsl_sd_disk.c"/>
      </source>
      <source relative_path="source/fsl_sd_disk" type="c_include">
        <files mask="fsl_sd_disk.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_sd.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_sd_disk" type="c_include"/>
        <include_path relative_path="source/fsl_sd_disk" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.sdspi.MIMXRT555S" name="sdspi" brief="FatFs_SDSPI" version="0.15.0" full_name="Fatfs SDSPI layer" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.MIMXRT555S"/>
          <component_dependency value="middleware.fatfs.template_sdspi.MIMXRT555S"/>
          <component_dependency value="middleware.sdmmc.sdspi.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_sdspi_disk" type="src">
        <files mask="fsl_sdspi_disk.c"/>
      </source>
      <source relative_path="source/fsl_sdspi_disk" type="c_include">
        <files mask="fsl_sdspi_disk.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_sdspi.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_sdspi_disk" type="c_include"/>
        <include_path relative_path="source/fsl_sdspi_disk" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.usb.MIMXRT555S" name="usb" brief="FatFs_USB" version="0.15.0" full_name="Fatfs USB layer" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.MIMXRT555S"/>
          <component_dependency value="middleware.fatfs.template_usb.MIMXRT555S"/>
          <component_dependency value="middleware.usb.host_msd.MIMXRT555S"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_usb_disk" type="c_include">
        <files mask="fsl_usb_disk.h"/>
      </source>
      <source condition="component.osa_bm.MIMXRT555S" relative_path="source/fsl_usb_disk" type="src">
        <files mask="fsl_usb_disk_bm.c"/>
      </source>
      <source condition="component.osa_free_rtos.MIMXRT555S" relative_path="source/fsl_usb_disk" type="src">
        <files mask="fsl_usb_disk_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_usb.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_usb_disk" type="c_include"/>
        <include_path relative_path="source/fsl_usb_disk" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.emwin.MIMXRT555S" name="emwin" brief="emWin library" version="6.38" full_name="middleware emWin" category="Graphics/emWin graphics library" user_visible="true" type="middleware" package_base_path="middleware/emwin" project_base_path="emwin">
      <dependencies>
        <all>
          <component_dependency value="middleware.emwin.template.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="ChangeLogKSDK.txt" hidden="true"/>
        <files mask="readme.txt" hidden="true"/>
      </source>
      <source relative_path="emWin_header" type="c_include">
        <files mask="AppWizard.h"/>
        <files mask="BUTTON.h"/>
        <files mask="BUTTON_Private.h"/>
        <files mask="CALENDAR.h"/>
        <files mask="CHECKBOX.h"/>
        <files mask="CHECKBOX_Private.h"/>
        <files mask="CHOOSECOLOR.h"/>
        <files mask="CHOOSEFILE.h"/>
        <files mask="DIALOG.h"/>
        <files mask="DIALOG_Type.h"/>
        <files mask="DROPDOWN.h"/>
        <files mask="DROPDOWN_Private.h"/>
        <files mask="EDIT.h"/>
        <files mask="EDIT_Private.h"/>
        <files mask="FRAMEWIN.h"/>
        <files mask="FRAMEWIN_Private.h"/>
        <files mask="GAUGE.h"/>
        <files mask="GAUGE_Private.h"/>
        <files mask="GRAPH.h"/>
        <files mask="GRAPH_Private.h"/>
        <files mask="GUI.h"/>
        <files mask="GUIDRV_BitPlains.h"/>
        <files mask="GUIDRV_DCache.h"/>
        <files mask="GUIDRV_DCache_Private.h"/>
        <files mask="GUIDRV_Dist.h"/>
        <files mask="GUIDRV_FlexColor.h"/>
        <files mask="GUIDRV_FlexColor_Private.h"/>
        <files mask="GUIDRV_IST3088.h"/>
        <files mask="GUIDRV_IST3088_Private.h"/>
        <files mask="GUIDRV_Lin.h"/>
        <files mask="GUIDRV_Lin_Opt_16.h"/>
        <files mask="GUIDRV_Lin_Opt_24.h"/>
        <files mask="GUIDRV_Lin_Opt_32.h"/>
        <files mask="GUIDRV_Lin_Opt_8.h"/>
        <files mask="GUIDRV_Lin_Private.h"/>
        <files mask="GUIDRV_NoOpt_1_8.h"/>
        <files mask="GUIDRV_Null.h"/>
        <files mask="GUIDRV_S1D13748.h"/>
        <files mask="GUIDRV_S1D13748_Private.h"/>
        <files mask="GUIDRV_S1D13781.h"/>
        <files mask="GUIDRV_S1D13781_Private.h"/>
        <files mask="GUIDRV_S1D15G00.h"/>
        <files mask="GUIDRV_SH_MEM.h"/>
        <files mask="GUIDRV_SH_MEM_Private.h"/>
        <files mask="GUIDRV_SLin.h"/>
        <files mask="GUIDRV_SLin_Private.h"/>
        <files mask="GUIDRV_SPage.h"/>
        <files mask="GUIDRV_SPage_Private.h"/>
        <files mask="GUIDRV_SSD1926.h"/>
        <files mask="GUIDRV_SSD1926_Private.h"/>
        <files mask="GUIDRV_Template.h"/>
        <files mask="GUIDRV_TemplateI.h"/>
        <files mask="GUIDRV_TemplateI_Private.h"/>
        <files mask="GUITDRV_ADS7846.h"/>
        <files mask="GUI_ARRAY.h"/>
        <files mask="GUI_ARRAY_Private.h"/>
        <files mask="GUI_BMP_Private.h"/>
        <files mask="GUI_ConfDefaults.h"/>
        <files mask="GUI_Debug.h"/>
        <files mask="GUI_FontIntern.h"/>
        <files mask="GUI_GCache_Private.h"/>
        <files mask="GUI_GIF_Private.h"/>
        <files mask="GUI_HOOK.h"/>
        <files mask="GUI_JPEG_Private.h"/>
        <files mask="GUI_Private.h"/>
        <files mask="GUI_Resource.h"/>
        <files mask="GUI_SIM_Win32.h"/>
        <files mask="GUI_SPRITE_Private.h"/>
        <files mask="GUI_SPY_Private.h"/>
        <files mask="GUI_SVG_Global.h"/>
        <files mask="GUI_SVG_NanoVG.h"/>
        <files mask="GUI_SVG_NemaVG.h"/>
        <files mask="GUI_SVG_OpenVG.h"/>
        <files mask="GUI_SVG_Private.h"/>
        <files mask="GUI_SVG_VGLite.h"/>
        <files mask="GUI_SetOrientation.h"/>
        <files mask="GUI_SetOrientationCX.h"/>
        <files mask="GUI_Type.h"/>
        <files mask="GUI_VNC.h"/>
        <files mask="GUI_Version.h"/>
        <files mask="GUI__BiDi2_Brackets_800.h"/>
        <files mask="GUI__BiDi2_Types_800.h"/>
        <files mask="Global.h"/>
        <files mask="HEADER.h"/>
        <files mask="HEADER_Private.h"/>
        <files mask="ICONVIEW.h"/>
        <files mask="ICONVIEW_Private.h"/>
        <files mask="IMAGE.h"/>
        <files mask="IMAGE_Private.h"/>
        <files mask="IP_FS.h"/>
        <files mask="JPEGConf.h"/>
        <files mask="KEYBOARD.h"/>
        <files mask="KEYBOARD_Private.h"/>
        <files mask="KNOB.h"/>
        <files mask="KNOB_Private.h"/>
        <files mask="LCD.h"/>
        <files mask="LCD_ConfDefaults.h"/>
        <files mask="LCD_Private.h"/>
        <files mask="LCD_Protected.h"/>
        <files mask="LCD_SIM.h"/>
        <files mask="LCD_X_8080_16.h"/>
        <files mask="LCD_X_8080_8.h"/>
        <files mask="LCD_X_I2C.h"/>
        <files mask="LCD_X_Serial_3Pin.h"/>
        <files mask="LISTBOX.h"/>
        <files mask="LISTBOX_Private.h"/>
        <files mask="LISTVIEW.h"/>
        <files mask="LISTVIEW_Private.h"/>
        <files mask="LISTWHEEL.h"/>
        <files mask="LISTWHEEL_Private.h"/>
        <files mask="MENU.h"/>
        <files mask="MENU_Private.h"/>
        <files mask="MESSAGEBOX.h"/>
        <files mask="MOVIE.h"/>
        <files mask="MOVIE_Private.h"/>
        <files mask="MULTIEDIT.h"/>
        <files mask="MULTIEDIT_Private.h"/>
        <files mask="MULTIPAGE.h"/>
        <files mask="MULTIPAGE_Private.h"/>
        <files mask="PROGBAR.h"/>
        <files mask="PROGBAR_Private.h"/>
        <files mask="QRCODE.h"/>
        <files mask="QRCODE_Private.h"/>
        <files mask="RADIO.h"/>
        <files mask="RADIO_Private.h"/>
        <files mask="ROTARY.h"/>
        <files mask="ROTARY_Private.h"/>
        <files mask="SCROLLBAR.h"/>
        <files mask="SCROLLBAR_Private.h"/>
        <files mask="SCROLLER.h"/>
        <files mask="SCROLLER_Private.h"/>
        <files mask="SEGGER.h"/>
        <files mask="SLIDER.h"/>
        <files mask="SLIDER_Private.h"/>
        <files mask="SPINBOX.h"/>
        <files mask="SPINBOX_Private.h"/>
        <files mask="SWIPELIST.h"/>
        <files mask="SWIPELIST_Private.h"/>
        <files mask="SWITCH.h"/>
        <files mask="SWITCH_Private.h"/>
        <files mask="TEXT.h"/>
        <files mask="TEXT_Private.h"/>
        <files mask="TICKER.h"/>
        <files mask="TICKER_Private.h"/>
        <files mask="TREEVIEW.h"/>
        <files mask="TREEVIEW_Private.h"/>
        <files mask="WHEEL.h"/>
        <files mask="WHEEL_Private.h"/>
        <files mask="WIDGET.h"/>
        <files mask="WIDGET_ID.h"/>
        <files mask="WINDOW_Private.h"/>
        <files mask="WM.h"/>
        <files mask="WM_GUI.h"/>
        <files mask="WM_Intern.h"/>
      </source>
      <source relative_path="emWin_Config" type="c_include">
        <files mask="GUIConf.h"/>
        <files mask="LCDConf.h"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="emWin_library/ARMGCC" type="lib" device_cores="cm33_MIMXRT555S" dsp="true">
        <files mask="libemWin_M33.a"/>
      </source>
      <source toolchain="iar" relative_path="emWin_library/IAR" type="lib" device_cores="cm33_MIMXRT555S" dsp="true">
        <files mask="emWin_M33.a"/>
      </source>
      <source toolchain="mdk" relative_path="emWin_library/Keil" type="lib" device_cores="cm33_MIMXRT555S" dsp="true">
        <files mask="emWin_M33.lib"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_emwin.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="emWin_header" type="c_include"/>
        <include_path relative_path="emWin_Config" type="c_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-common.MIMXRT555S" name="camera-common" brief="Driver camera-common" version="1.0.0" full_name="Driver camera-common" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/camera" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.video-common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_camera.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-ap1302.MIMXRT555S" name="camera-device-ap1302" brief="Driver camera-device-ap1302" version="1.0.1" full_name="Driver camera-device-ap1302" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/camera/device/ap1302" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-device-common.MIMXRT555S"/>
          <component_dependency value="driver.video-i2c.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ap1302.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ap1302.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-common.MIMXRT555S" name="camera-device-common" brief="Driver camera-device-common" version="1.0.0" full_name="Driver camera-device-common" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/camera/device" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_camera_device.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-max9286.MIMXRT555S" name="camera-device-max9286" brief="Driver camera-device-max9286" version="1.0.2" full_name="Driver camera-device-max9286" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/camera/device/max9286" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-device-common.MIMXRT555S"/>
          <component_dependency value="driver.video-i2c.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_max9286.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_max9286.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-mt9m114.MIMXRT555S" name="camera-device-mt9m114" brief="Driver camera-device-mt9m114" version="1.0.2" full_name="Driver camera-device-mt9m114" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/camera/device/mt9m114" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-device-common.MIMXRT555S"/>
          <component_dependency value="driver.video-i2c.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mt9m114.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mt9m114.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-ov5640.MIMXRT555S" name="camera-device-ov5640" brief="Driver camera-device-ov5640" version="1.0.1" full_name="Driver camera-device-ov5640" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/camera/device/ov5640" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-device-common.MIMXRT555S"/>
          <component_dependency value="driver.camera-device-sccb.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ov5640.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ov5640.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-ov7670.MIMXRT555S" name="camera-device-ov7670" brief="Driver camera-device-ov7670" version="1.0.2" full_name="Driver camera-device-ov7670" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/camera/device/ov7670" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-device-common.MIMXRT555S"/>
          <component_dependency value="driver.camera-device-sccb.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ov7670.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ov7670.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-ov7725.MIMXRT555S" name="camera-device-ov7725" brief="Driver camera-device-ov7725" version="1.0.1" full_name="Driver camera-device-ov7725" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/camera/device/ov7725" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-device-common.MIMXRT555S"/>
          <component_dependency value="driver.camera-device-sccb.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ov7725.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ov7725.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-sccb.MIMXRT555S" name="camera-device-sccb" brief="Driver camera-device-sccb" version="1.0.1" full_name="Driver camera-device-sccb" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/video/camera/device/sccb" project_base_path="video">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_i2c.MIMXRT555S"/>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sccb.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sccb.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-receiver-common.MIMXRT555S" name="camera-receiver-common" brief="Driver camera-receiver-common" version="1.0.0" full_name="Driver camera-receiver-common" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/camera/receiver" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_camera_receiver.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dbi.MIMXRT555S" name="dbi" brief="Driver dbi" version="1.0.0" full_name="Driver dbi" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dbi" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.video-common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dbi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dbi.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dbi_flexio_smartdma.MIMXRT555S" name="dbi_flexio_smartdma" brief="Driver dbi_flexio_smartdma" version="1.0.1" full_name="Driver dbi_flexio_smartdma" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dbi/flexio" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.dbi.MIMXRT555S"/>
          <component_dependency value="platform.drivers.flexio_mculcd.MIMXRT555S"/>
          <component_dependency value="platform.drivers.flexio_mculcd_smartdma.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dbi_flexio_smartdma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dbi_flexio_smartdma.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dbi_lcdif.MIMXRT555S" name="dbi_lcdif" brief="Driver dbi_lcdif" version="1.0.1" full_name="Driver dbi_lcdif" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dbi/lcdif" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.dbi.MIMXRT555S"/>
          <component_dependency value="platform.drivers.lcdif.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dbi_lcdif.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dbi_lcdif.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dbi_lpc_spi_dma.MIMXRT555S" name="dbi_lpc_spi_dma" brief="Driver dbi_lpc_spi_dma" version="1.0.0" full_name="Driver dbi_lpc_spi_dma" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dbi/lpc_spi" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.dbi.MIMXRT555S"/>
          <component_dependency value="platform.drivers.flexcomm_spi_dma.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dbi_spi_dma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dbi_spi_dma.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dc-fb-common.MIMXRT555S" name="dc-fb-common" brief="Driver dc-fb-common" version="1.0.0" full_name="Driver dc-fb-common" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dc" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.video-common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dc_fb.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dc-fb-dbi.MIMXRT555S" name="dc-fb-dbi" brief="Driver dc-fb-dbi" version="1.0.0" full_name="Driver dc-fb-dbi" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dc/dbi" project_base_path="video">
      <defines>
        <define name="MCUX_DBI_LEGACY" value="0"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <component_dependency value="driver.dbi.MIMXRT555S"/>
          <component_dependency value="driver.dc-fb-common.MIMXRT555S"/>
          <component_dependency value="driver.display-common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dc_fb_dbi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dc_fb_dbi.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dc-fb-dsi-cmd.MIMXRT555S" name="dc-fb-dsi-cmd" brief="Driver dc-fb-dsi-cmd" version="1.1.1" full_name="Driver dc-fb-dsi-cmd" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dc/dsi_cmd" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <component_dependency value="driver.dc-fb-common.MIMXRT555S"/>
          <component_dependency value="driver.display-common.MIMXRT555S"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dc_fb_dsi_cmd.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dc_fb_dsi_cmd.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dc-fb-lcdif.MIMXRT555S" name="dc-fb-lcdif" brief="Driver dc-fb-lcdif" version="1.0.1" full_name="Driver dc-fb-lcdif" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dc/lcdif" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <component_dependency value="driver.dc-fb-common.MIMXRT555S"/>
          <component_dependency value="driver.display-common.MIMXRT555S"/>
          <component_dependency value="platform.drivers.lcdif.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dc_fb_lcdif.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dc_fb_lcdif.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dc-fb-ssd1963.MIMXRT555S" name="dc-fb-ssd1963" brief="Driver dc-fb-ssd1963" version="1.0.2" full_name="Driver dc-fb-ssd1963" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dc/ssd1963" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <component_dependency value="driver.dc-fb-common.MIMXRT555S"/>
          <component_dependency value="driver.display-common.MIMXRT555S"/>
          <component_dependency value="driver.ssd1963.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dc_fb_ssd1963.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dc_fb_ssd1963.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-adv7535.MIMXRT555S" name="display-adv7535" brief="Driver display-adv7535" version="1.0.1" full_name="Driver display-adv7535" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/adv7535" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT555S"/>
          <component_dependency value="driver.video-i2c.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adv7535.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adv7535.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-sn65dsi83.MIMXRT555S" name="display-sn65dsi83" brief="Driver display-sn65dsi83" version="1.0.0" full_name="Driver display-sn65dsi83" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/sn65dsi83" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT555S"/>
          <component_dependency value="driver.video-i2c.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sn65dsi83.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sn65dsi83.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-common.MIMXRT555S" name="display-common" brief="Driver display-common" version="1.0.0" full_name="Driver display-common" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.video-common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_display.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-hx8394.MIMXRT555S" name="display-hx8394" brief="Driver display-hx8394" version="1.0.0" full_name="Driver display-hx8394" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/hx8394" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT555S"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_hx8394.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_hx8394.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-it6161.MIMXRT555S" name="display-it6161" brief="Driver display-it6161" version="1.0.0" full_name="Driver display-it6161" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/it6161" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT555S"/>
          <component_dependency value="driver.video-i2c.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_it6161.h"/>
        <files mask="hdmi_tx.h"/>
        <files mask="mipi_rx.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_it6161.c"/>
        <files mask="hdmi_tx.c"/>
        <files mask="mipi_rx.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-it6263.MIMXRT555S" name="display-it6263" brief="Driver display-it6263" version="1.0.1" full_name="Driver display-it6263" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/it6263" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT555S"/>
          <component_dependency value="driver.video-i2c.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_it6263.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_it6263.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-mipi-dsi-cmd.MIMXRT555S" name="display-mipi-dsi-cmd" brief="Driver display-mipi-dsi-cmd" version="1.0.2" full_name="Driver display-mipi-dsi-cmd" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/video/display/mipi_dsi_cmd" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.mipi_dsi.MIMXRT555S"/>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mipi_dsi_cmd.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mipi_dsi_cmd.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-rm67162.MIMXRT555S" name="display-rm67162" brief="Driver display-rm67162" version="1.0.2" full_name="Driver display-rm67162" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/rm67162" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT555S"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rm67162.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rm67162.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-co5300.MIMXRT555S" name="display-co5300" brief="Driver display-co5300" version="1.0.0" full_name="Driver display-co5300" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/co5300" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT555S"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_co5300.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_co5300.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-rm67191.MIMXRT555S" name="display-rm67191" brief="Driver display-rm67191" version="1.1.0" full_name="Driver display-rm67191" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/rm67191" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT555S"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rm67191.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rm67191.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-rm68191.MIMXRT555S" name="display-rm68191" brief="Driver display-rm68191" version="1.1.0" full_name="Driver display-rm68191" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/rm68191" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT555S"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rm68191.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rm68191.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-rm68200.MIMXRT555S" name="display-rm68200" brief="Driver display-rm68200" version="1.1.1" full_name="Driver display-rm68200" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/rm68200" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT555S"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rm68200.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rm68200.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-rm692c9.MIMXRT555S" name="display-rm692c9" brief="Driver display-rm692c9" version="1.1.0" full_name="Driver display-rm692c9" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/rm692c9" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT555S"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rm692c9.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rm692c9.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-rpi.MIMXRT555S" name="display-rpi" brief="Driver display-rpi" version="1.0.0" full_name="Driver display-rpi" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/rpi" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT555S"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rpi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rpi.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.fbdev.MIMXRT555S" name="fbdev" brief="Driver fbdev" version="1.0.4" full_name="Driver fbdev" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/video/display/fbdev" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.video-common.MIMXRT555S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_fbdev.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_fbdev.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.video-common.MIMXRT555S" name="video-common" brief="Driver video-common" version="1.1.0" full_name="Driver video-common" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/video" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_video_common.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_video_common.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.video-i2c.MIMXRT555S" name="video-i2c" brief="Driver video-i2c" version="1.0.1" full_name="Driver video-i2c" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/i2c" project_base_path="video">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_i2c.MIMXRT555S"/>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_video_i2c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_video_i2c.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.usart_adapter.MIMXRT555S" name="usart_adapter" brief="Component usart_adapter" version="1.0.0" full_name="usart_adapter" category="Device/SDK Drivers" user_visible="true" type="utilities" package_base_path="components/uart" project_base_path="component/uart">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm.MIMXRT555S"/>
          <component_dependency value="platform.drivers.flexcomm_usart.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_usart.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.ft6x06.MIMXRT555S" name="ft6x06" brief="Driver ft6x06" version="1.0.0" full_name="Driver ft6x06" category="Device/SDK Drivers" user_visible="false" type="board_component" package_base_path="components/touch/ft6x06" project_base_path="touchpanel">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Driver_Include.I2C.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ft6x06.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ft6x06.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.timer_manager.MIMXRT555S" name="timer_manager" brief="Component timer_manager" version="1.0.0" full_name="Component timer_manager" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/timer_manager" project_base_path="component/timer_manager">
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="component.ctimer_adapter.MIMXRT555S"/>
              <component_dependency value="platform.drivers.ctimer.MIMXRT555S"/>
            </all>
            <all>
              <component_dependency value="component.mrt_adapter.MIMXRT555S"/>
              <component_dependency value="platform.drivers.mrt.MIMXRT555S"/>
            </all>
            <all>
              <component_dependency value="component.ostimer_adapter.MIMXRT555S"/>
              <component_dependency value="platform.drivers.ostimer.MIMXRT555S"/>
            </all>
          </any_of>
          <component_dependency value="component.lists.MIMXRT555S"/>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_timer_manager.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_timer_manager.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.ctimer_adapter.MIMXRT555S" name="ctimer_adapter" brief="Component ctimer_adapter" version="1.0.0" full_name="Component ctimer_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/timer" project_base_path="component/timer">
      <defines>
        <define name="TIMER_PORT_TYPE_CTIMER" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.ctimer.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_ctimer.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.mrt_adapter.MIMXRT555S" name="mrt_adapter" brief="Component mrt_adapter" version="1.0.0" full_name="Component mrt_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/timer" project_base_path="component/timer">
      <defines>
        <define name="TIMER_PORT_TYPE_MRT" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.mrt.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_mrt.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.ostimer_adapter.MIMXRT555S" name="ostimer_adapter" brief="Component ostimer_adapter" version="1.0.0" full_name="Component ostimer_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/timer" project_base_path="component/timer">
      <defines>
        <define name="TIMER_PORT_TYPE_OSTIMER" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.ostimer.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_ostimer.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.flexcomm_spi_adapter.MIMXRT555S" name="flexcomm_spi_adapter" brief="Component flexcomm_spi_adapter" version="1.0.0" full_name="Component flexcomm_spi_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/spi" project_base_path="component/spi">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <component_dependency value="platform.drivers.flexcomm_spi.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_spi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_flexcomm_spi.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="utility.shell.MIMXRT555S" name="shell" brief="Utility shell" version="1.0.0" full_name="Utility shell" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT555S/utilities/shell" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="component.lists.MIMXRT555S"/>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <component_dependency value="utility.str.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_shell.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_shell.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager.MIMXRT555S" name="serial_manager" brief="Component serial_manager" version="1.0.1" full_name="Serial Manager" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="component.serial_manager_spi.MIMXRT555S"/>
            <component_dependency value="component.serial_manager_swo.MIMXRT555S"/>
            <component_dependency value="component.serial_manager_uart.MIMXRT555S"/>
            <component_dependency value="component.serial_manager_usb_cdc.MIMXRT555S"/>
            <component_dependency value="component.serial_manager_virtual.MIMXRT555S"/>
          </any_of>
          <component_dependency value="component.lists.MIMXRT555S"/>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_manager.h"/>
        <files mask="fsl_component_serial_port_internal.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_manager.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_spi.MIMXRT555S" name="serial_manager_spi" brief="Component serial_manager_spi" version="1.0.0" full_name="Serial Manager spi" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_SPI" value="1"/>
        <define name="SERIAL_PORT_TYPE_SPI_MASTER" value="1"/>
        <define name="SERIAL_PORT_TYPE_SPI_SLAVE" value="1"/>
        <define name="SERIAL_MANAGER_NON_BLOCKING_MODE" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.flexcomm_spi_adapter.MIMXRT555S"/>
          <component_dependency value="platform.drivers.flexcomm_spi.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_spi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_spi.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_uart.MIMXRT555S" name="serial_manager_uart" brief="Component serial_manager_uart" version="1.0.0" full_name="Serial Manager uart" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_UART" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_usart.MIMXRT555S"/>
          <component_dependency value="component.usart_adapter.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_uart.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_usb_cdc.MIMXRT555S" name="serial_manager_usb_cdc" brief="Component serial_manager_usb_cdc" version="1.0.0" full_name="Serial Manager USB CDC" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_USBCDC" value="1"/>
        <define name="DEBUG_CONSOLE_TRANSFER_NON_BLOCKING" value=""/>
        <define name="USB_DEVICE_CONFIG_CDC_ACM" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT555S"/>
          <component_dependency value="middleware.usb.device.cdc.MIMXRT555S"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_usb.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_usb.c"/>
      </source>
      <source relative_path="usb_cdc_adapter" type="c_include">
        <files mask="usb_device_descriptor.h"/>
        <files mask="usb_device_config.h"/>
      </source>
      <source relative_path="usb_cdc_adapter" type="src">
        <files mask="usb_device_descriptor.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="usb_cdc_adapter" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="usb_cdc_adapter" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.fxas21002cq.MIMXRT555S" name="fxas21002cq" brief="Driver fxas21002cq" version="1.0.0" full_name="Driver fxas21002cq" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/fxas21002cq" project_base_path="gyroscope">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_i2c.MIMXRT555S"/>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_fxas.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_fxas.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.fxls8974cf.MIMXRT555S" name="fxls8974cf" brief="Driver fxls8974cf" version="1.0.0" full_name="Driver fxls8974cf" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/fxls8974cf" project_base_path="accel">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_i2c.MIMXRT555S"/>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_fxls.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_fxls.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.fxos8700cq.MIMXRT555S" name="fxos8700cq" brief="Driver fxos8700cq" version="1.0.0" full_name="Driver fxos8700cq" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/fxos8700cq" project_base_path="accel">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_i2c.MIMXRT555S"/>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_fxos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_fxos.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.htu21d.MIMXRT555S" name="htu21d" brief="Driver htu21d" version="1.0.0" full_name="Driver htu21d" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/htu21d" project_base_path="htu">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_i2c.MIMXRT555S"/>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_htu21d.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_htu21d.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.icm42688p.MIMXRT555S" name="icm42688p" brief="Driver icm42688p" version="1.0.0" full_name="Driver icm42688p" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/icm42688p" project_base_path="icm42688p">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_i2c.MIMXRT555S"/>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_icm42688p.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_icm42688p.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.lsm6dso.MIMXRT555S" name="lsm6dso" brief="Driver lsm6dso" version="1.0.0" full_name="Driver lsm6dso" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/lsm6dso" project_base_path="tilt_pedo">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_i2c.MIMXRT555S"/>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lsm.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lsm.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.max30101.MIMXRT555S" name="max30101" brief="Driver max30101" version="1.0.0" full_name="Driver max30101" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/max30101" project_base_path="heartrate">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_i2c.MIMXRT555S"/>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_max.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_max.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.mma8451q.MIMXRT555S" name="mma8451q" brief="Driver mma8451q" version="1.0.0" full_name="Driver mma8451q" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/mma8451q" project_base_path="accel">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_i2c.MIMXRT555S"/>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mma.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.mma8652fc.MIMXRT555S" name="mma8652fc" brief="Driver mma8652fc" version="1.0.0" full_name="Driver mma8652fc" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/mma8652fc" project_base_path="accel">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_i2c.MIMXRT555S"/>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mma.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.p3t1755.MIMXRT555S" name="p3t1755" brief="Driver p3t1755" version="2.0.0" full_name="Driver p3t1755" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/p3t1755" project_base_path="component/p3t1755">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_i2c.MIMXRT555S"/>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_p3t1755.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_p3t1755.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.tsl2561.MIMXRT555S" name="tsl2561" brief="Driver tsl2561" version="1.0.0" full_name="Driver tsl2561" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/tsl2561" project_base_path="tsl">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_i2c.MIMXRT555S"/>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_tsl2561.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_tsl2561.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.lpcrtc.MIMXRT555S" name="lpcrtc" brief="Component lpcrtc" version="1.0.0" full_name="Component lpcrtc" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/rtc" project_base_path="component/rtc">
      <defines>
        <define name="RTC_LEGACY_FUNCTION_PROTOTYPE" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpc_rtc.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_rtc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpcrtc.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.trng_adapter.MIMXRT555S" name="trng_adapter" brief="Component trng_adapter" version="1.0.0" full_name="Component trng_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/rng" project_base_path="component/rng">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.trng.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_rng.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_trng.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.pwm_ctimer_adapter.MIMXRT555S" name="pwm_ctimer_adapter" brief="Component pwm_ctimer_adapter" version="1.0.0" full_name="Component pwm_ctimer_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/pwm" project_base_path="component/pwm">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.ctimer.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_pwm.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_pwm_ctimer.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.power_manager_framework.MIMXRT555S" name="power_manager_core" brief="Component power manager core level" version="2.0.0" full_name="Component power manager core" category="Device/SDK Drivers" user_visible="false" type="software_component" package_base_path="components/power_manager/core" project_base_path="component/power_manager">
      <defines>
        <define name="GENERIC_LIST_LIGHT" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <component_dependency value="component.lists.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pm_core.h"/>
        <files mask="fsl_pm_config.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pm_core.c"/>
      </source>
      <source relative_path="../devices/MIMXRT595S" type="src">
        <files mask="fsl_pm_device.c"/>
      </source>
      <source relative_path="../devices/MIMXRT595S" type="c_include">
        <files mask="fsl_pm_device.h"/>
        <files mask="fsl_pm_device_config.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="../devices/MIMXRT595S" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="../devices/MIMXRT595S" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.pca9420.MIMXRT555S" name="pca9420" brief="Driver pca9420" version="1.0.0" full_name="Driver pca9420" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/pmic/pca9420" project_base_path="component/pmic/pca9420">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_i2c.MIMXRT555S"/>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <component_dependency value="platform.drivers.power.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pca9420.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pca9420.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.pca9422.MIMXRT555S" name="pca9422" brief="Driver pca9422" version="1.0.0" full_name="Driver pca9422" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/pmic/pca9422" project_base_path="component/pmic/pca9422">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_i2c.MIMXRT555S"/>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <component_dependency value="platform.drivers.power.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pca9422.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pca9422.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.pf1550.MIMXRT555S" name="pf1550" brief="Driver pf1550" version="1.0.0" full_name="Driver pf1550" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/pmic/pf1550" project_base_path="component/pmic/pf1550">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_i2c.MIMXRT555S"/>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pf1550.c"/>
        <files mask="fsl_pf1550_charger.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pf1550.h"/>
        <files mask="fsl_pf1550_charger.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.pf3000.MIMXRT555S" name="pf3000" brief="Driver pf3000" version="1.0.0" full_name="Driver pf3000" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/pmic/pf3000" project_base_path="component/pmic/pf3000">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_i2c.MIMXRT555S"/>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pf3000.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pf3000.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.pf5020.MIMXRT555S" name="pf5020" brief="Driver pf5020" version="2.0.0" full_name="Driver pf5020" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/pmic/pf5020" project_base_path="component/pmic/pf5020">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_i2c.MIMXRT555S"/>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pf5020.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pf5020.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.osa.MIMXRT555S" name="osa" brief="Component osa" version="1.0.0" full_name="Component osa" category="NXP Component/OS Abstraction Layer" user_visible="false" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <any_of>
            <all>
              <not>
                <component_dependency value="middleware.freertos-kernel.MIMXRT555S"/>
              </not>
              <component_dependency value="component.osa_bm.MIMXRT555S"/>
            </all>
            <all>
              <component_dependency value="component.osa_free_rtos.MIMXRT555S"/>
              <component_dependency value="middleware.freertos-kernel.MIMXRT555S"/>
            </all>
          </any_of>
          <component_dependency value="component.osa_interface.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_osa.cmake" hidden="true"/>
      </source>
    </component>
    <component id="component.osa_bm.MIMXRT555S" name="osa_bm" brief="Component osa_bm" version="1.0.0" full_name="Component osa_bm" category="NXP Component/OS Abstraction Layer" user_visible="true" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <defines>
        <define name="USE_RTOS" value="0"/>
      </defines>
      <dependencies>
        <all>
          <not>
            <component_dependency value="middleware.freertos-kernel.MIMXRT555S"/>
          </not>
          <component_dependency value="component.osa.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction_bm.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_os_abstraction_bm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_osa_bm.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.osa_free_rtos.MIMXRT555S" name="osa_free_rtos" brief="Component osa_free_rtos" version="1.0.0" full_name="Component osa_free_rtos" category="NXP Component/OS Abstraction Layer" user_visible="true" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <defines>
        <define name="USE_RTOS" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMXRT555S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction_free_rtos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_os_abstraction_free_rtos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_osa_free_rtos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.osa_interface.MIMXRT555S" name="osa_interface" brief="Component osa interface" version="1.0.0" full_name="Component osa interface" category="NXP Component/OS Abstraction Layer" user_visible="true" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <component_dependency value="component.lists.MIMXRT555S"/>
          <component_dependency value="component.osa_template_config.MIMXRT555S"/>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_osa_interface.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.mem_manager.MIMXRT555S" name="mem_manager" brief="Component mem_manager" version="1.0.0" full_name="Component mem_manager" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/mem_manager" project_base_path="component/mem_manager">
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="component.mem_manager_freertos.MIMXRT555S"/>
              <component_dependency value="middleware.freertos-kernel.MIMXRT555S"/>
            </all>
            <component_dependency value="component.mem_manager_legacy.MIMXRT555S"/>
            <component_dependency value="component.mem_manager_light.MIMXRT555S"/>
          </any_of>
          <component_dependency value="component.lists.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_mem_manager.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.mem_manager_legacy.MIMXRT555S" name="mem_manager_legacy" brief="Component mem_manager_legacy" version="1.0.0" full_name="Component mem_manager_legacy" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/mem_manager" project_base_path="component/mem_manager">
      <dependencies>
        <all>
          <component_dependency value="component.mem_manager.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_component_mem_manager.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.mem_manager_freertos.MIMXRT555S" name="mem_manager_freertos" brief="Component mem_manager_freertos" version="1.0.0" full_name="Component mem_manager_freertos" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/mem_manager" project_base_path="component/mem_manager">
      <dependencies>
        <all>
          <component_dependency value="component.mem_manager.MIMXRT555S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_component_mem_manager_freertos.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.mem_manager_light.MIMXRT555S" name="mem_manager_light" brief="Component mem_manager_light" version="1.0.0" full_name="Component mem_manager_light" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/mem_manager" project_base_path="component/mem_manager">
      <dependencies>
        <all>
          <component_dependency value="component.mem_manager.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_component_mem_manager_light.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.log.MIMXRT555S" name="log" brief="Component log" version="1.0.0" full_name="Component log" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <component_dependency value="utility.str.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log.h"/>
        <files mask="fsl_component_log_config.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.log.backend.debug_console.MIMXRT555S" name="log_backend_debug_console" brief="Component log backend debug console" version="1.0.0" full_name="Component log backend debug console" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="component.log.MIMXRT555S"/>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <component_dependency value="utility.debug_console.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log_backend_debugconsole.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log_backend_debugconsole.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.log.backend.debug_console_lite.MIMXRT555S" name="log_backend_debug_console_lite" brief="Component log backend debug console lite" version="1.0.0" full_name="Component log backend debug console lite" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="component.log.MIMXRT555S"/>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <component_dependency value="utility.debug_console_lite.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log_backend_debugconsole.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log_backend_debugconsole.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.log.backend.ringbuffer.MIMXRT555S" name="log_backend_ring_buffer" brief="Component log backend ring buffer" version="1.0.0" full_name="Component log backend ring buffer" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="component.log.MIMXRT555S"/>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log_backend_ringbuffer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log_backend_ringbuffer.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.lists.MIMXRT555S" name="lists" brief="Component lists" version="1.0.0" full_name="Component lists" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/lists" project_base_path="component/lists">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_generic_list.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_generic_list.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.led.MIMXRT555S" name="led" brief="Component led" version="1.0.0" full_name="Component led" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/led" project_base_path="component/led">
      <dependencies>
        <all>
          <component_dependency value="component.lpc_gpio_adapter.MIMXRT555S"/>
          <component_dependency value="platform.drivers.lpc_gpio.MIMXRT555S"/>
          <component_dependency value="component.timer_manager.MIMXRT555S"/>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_led.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_led.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.flexcomm_i2c_adapter.MIMXRT555S" name="flexcomm_i2c_adapter" brief="Component flexcomm_i2c_adapter" version="1.0.0" full_name="Component flexcomm_i2c_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/i2c" project_base_path="component/i2c">
      <dependencies>
        <all>
          <component_dependency value="component.i2c_adapter_interface.MIMXRT555S"/>
          <component_dependency value="platform.drivers.flexcomm_i2c.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_flexcomm_i2c.c"/>
      </source>
    </component>
    <component id="component.i3c_adapter.MIMXRT555S" name="i3c_adapter" brief="Component i3c_adapter" version="1.0.0" full_name="Component i3c_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/i2c" project_base_path="component/i2c">
      <defines>
        <define name="SDK_I3C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.i2c_adapter_interface.MIMXRT555S"/>
          <component_dependency value="platform.drivers.i3c.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_i3c.c"/>
      </source>
    </component>
    <component id="component.i2c_adapter_interface.MIMXRT555S" name="i2c_adapter_interface" brief="Component i2c_adapter_interface" version="1.0.0" full_name="Component i2c_adapter_interface" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/i2c" project_base_path="component/i2c">
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="component.flexcomm_i2c_adapter.MIMXRT555S"/>
              <component_dependency value="platform.drivers.flexcomm_i2c.MIMXRT555S"/>
            </all>
            <all>
              <component_dependency value="component.i3c_adapter.MIMXRT555S"/>
              <component_dependency value="platform.drivers.i3c.MIMXRT555S"/>
            </all>
          </any_of>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_i2c.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.lpc_gpio_adapter.MIMXRT555S" name="lpc_gpio_adapter" brief="Component lpc_gpio_adapter" version="1.0.1" full_name="Component lpc_gpio_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/gpio" project_base_path="component/gpio">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.inputmux.MIMXRT555S"/>
          <component_dependency value="platform.drivers.lpc_gpio.MIMXRT555S"/>
          <component_dependency value="platform.drivers.pint.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_gpio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpc_gpio.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.rt_gpio_adapter.MIMXRT555S" name="rt_gpio_adapter" brief="Component rt_gpio_adapter" version="1.0.1" full_name="Component rt_gpio_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/gpio" project_base_path="component/gpio">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpc_gpio.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_gpio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_rt_gpio.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.flash_nand_flexspi.MIMXRT555S" name="flash_nand_flexspi" brief="Component.flash_nand_flexspi" version="1.0.0" full_name="Component flash_nand_flexspi" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/flash" project_base_path="nand_flash">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexspi.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="nand" type="c_include">
        <files mask="fsl_nand_flash.h"/>
      </source>
      <source relative_path="nand/flexspi" type="src">
        <files mask="fsl_flexspi_nand_flash.c"/>
      </source>
      <source relative_path="nand/flexspi" type="c_include">
        <files mask="fsl_flexspi_nand_flash.h"/>
      </source>
      <include_paths>
        <include_path relative_path="nand" type="c_include"/>
        <include_path relative_path="nand/flexspi" type="c_include"/>
        <include_path relative_path="nand" type="asm_include"/>
        <include_path relative_path="nand/flexspi" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.flash_nor_flexspi.MIMXRT555S" name="flash_nor_flexspi" brief="Component flash_nor_flexspi" version="1.0.0" full_name="Component flash_nor_flexspi" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/flash" project_base_path="nor_flash">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexspi.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="nor" type="c_include">
        <files mask="fsl_nor_flash.h"/>
      </source>
      <source relative_path="nor/flexspi" type="src">
        <files mask="fsl_flexspi_nor_flash.c"/>
      </source>
      <source relative_path="nor/flexspi" type="c_include">
        <files mask="fsl_flexspi_nor_flash.h"/>
      </source>
      <include_paths>
        <include_path relative_path="nor" type="c_include"/>
        <include_path relative_path="nor/flexspi" type="c_include"/>
        <include_path relative_path="nor" type="asm_include"/>
        <include_path relative_path="nor/flexspi" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.mflash_offchip.MIMXRT555S" name="mflash offchip" brief="mflash offchip" version="1.0.0" full_name="mflash offchip" category="Device/SDK Drivers" user_visible="false" type="software_component" package_base_path="components/flash/mflash" project_base_path="flash/mflash">
      <defines>
        <define name="MFLASH_FILE_BASEADDR" value="7340032"/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="platform.drivers.cache_cache64.MIMXRT555S"/>
            <component_dependency value="platform.drivers.flexspi.MIMXRT555S"/>
          </any_of>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="mflash_common.h"/>
        <files mask="mflash_file.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="mflash_file.c"/>
      </source>
      <source relative_path="mimxrt595" type="src">
        <files mask="mflash_drv.c"/>
      </source>
      <source relative_path="mimxrt595" type="c_include">
        <files mask="mflash_drv.h"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="mimxrt595" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="mimxrt595" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_wifi_nxp.MIMXRT555S" name="edgefast_wifi_nxp" brief="Edgefast Wi-Fi NXP is a blocking layer for Wi-Fi NXP" version="1.0.0" full_name="Edgefast Wi-Fi NXP" category="Wireless/Edgefast Wi-Fi" user_visible="true" type="middleware" package_base_path="components/edgefast_wifi" project_base_path="edgefast_wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT555S"/>
          <component_dependency value="middleware.lwip.MIMXRT555S"/>
          <component_dependency value="middleware.wifi.MIMXRT555S"/>
          <component_dependency value="middleware.wifi.osa_free_rtos.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="include" type="c_include">
        <files mask="wpl.h"/>
      </source>
      <source relative_path="source" type="src">
        <files mask="wpl_nxp.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_wifi_nxp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.ili9341.MIMXRT555S" name="ili9341" brief="Driver ili9341" version="1.0.2" full_name="Driver ili9341" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/display/ili9341" project_base_path="lcdc">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ili9341.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ili9341.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.psp27801.MIMXRT555S" name="psp27801" brief="Driver psp27801" version="1.0.0" full_name="Driver psp27801" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/display/psp27801" project_base_path="oled">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_psp27801.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_psp27801.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.ssd1963.MIMXRT555S" name="ssd1963" brief="Driver ssd1963" version="1.2.0" full_name="Driver ssd1963" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/display/ssd1963" project_base_path="lcdc">
      <dependencies>
        <all>
          <component_dependency value="driver.dbi.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ssd1963.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ssd1963.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.st7796s.MIMXRT555S" name="st7796s" brief="Driver st7796s" version="1.0.0" full_name="Driver st7796s" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/display/st7796s" project_base_path="lcdc">
      <dependencies>
        <all>
          <component_dependency value="driver.dbi.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_st7796s.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_st7796s.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.lpc_crc_adapter.MIMXRT555S" name="lpc_crc_adapter" brief="Component lpc_crc_adapter" version="1.0.0" full_name="Component lpc_crc_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/crc" project_base_path="component/crc">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpc_crc.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_crc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpc_crc.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.common_task.MIMXRT555S" name="common_task" brief="Component common_task" version="1.0.0" full_name="Component common_task" category="NXP Component/OS Abstraction Layer" user_visible="true" type="software_component" package_base_path="components/common_task" project_base_path="component/common_task">
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_common_task.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_common_task.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_common_task.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.codec_i2c.MIMXRT555S" name="codec_i2c" brief="Component codec_i2c" version="2.1.0" full_name="Component codec_i2c" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/i2c" project_base_path="codec">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.i2c_adapter_interface.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_codec_i2c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_codec_i2c.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.ak4497.MIMXRT555S" name="ak4497" brief="Driver ak4497" version="2.1.2" full_name="Driver ak4497" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/ak4497" project_base_path="codec">
      <defines>
        <define name="CODEC_AK4497_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.ak4497_adapter.MIMXRT555S"/>
          <component_dependency value="component.codec_adapters.MIMXRT555S"/>
          <component_dependency value="component.codec_i2c.MIMXRT555S"/>
          <component_dependency value="driver.codec.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ak4497.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ak4497.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.cs42448.MIMXRT555S" name="cs42448" brief="Driver cs42448" version="2.0.1" full_name="Driver cs42448" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/cs42448" project_base_path="codec">
      <defines>
        <define name="CODEC_CS42448_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT555S"/>
          <component_dependency value="component.codec_i2c.MIMXRT555S"/>
          <component_dependency value="component.cs42448_adapter.MIMXRT555S"/>
          <component_dependency value="driver.codec.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cs42448.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_cs42448.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.cs42888.MIMXRT555S" name="cs42888" brief="Driver cs42888" version="2.1.3" full_name="Driver cs42888" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/cs42888" project_base_path="codec">
      <defines>
        <define name="CODEC_CS42888_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT555S"/>
          <component_dependency value="component.codec_i2c.MIMXRT555S"/>
          <component_dependency value="component.cs42888_adapter.MIMXRT555S"/>
          <component_dependency value="driver.codec.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cs42888.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_cs42888.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dialog7212.MIMXRT555S" name="dialog7212" brief="Driver dialog7212" version="2.3.1" full_name="Driver dialog7212" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/da7212" project_base_path="codec">
      <defines>
        <define name="CODEC_DA7212_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT555S"/>
          <component_dependency value="component.codec_i2c.MIMXRT555S"/>
          <component_dependency value="component.da7212_adapter.MIMXRT555S"/>
          <component_dependency value="driver.codec.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dialog7212.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dialog7212.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.pcm186x.MIMXRT555S" name="pcm186x" brief="Driver pcm186x" version="2.0.1" full_name="Driver pcm186x" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/pcm186x" project_base_path="codec">
      <defines>
        <define name="CODEC_PCM186X_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT555S"/>
          <component_dependency value="component.codec_i2c.MIMXRT555S"/>
          <component_dependency value="component.pcm186x_adapter.MIMXRT555S"/>
          <component_dependency value="driver.codec.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pcm186x.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pcm186x.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.pcm512x.MIMXRT555S" name="pcm512x" brief="Driver pcm512x" version="2.0.1" full_name="Driver pcm512x" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/pcm512x" project_base_path="codec">
      <defines>
        <define name="CODEC_PCM512X_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT555S"/>
          <component_dependency value="component.codec_i2c.MIMXRT555S"/>
          <component_dependency value="component.pcm512x_adapter.MIMXRT555S"/>
          <component_dependency value="driver.codec.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pcm512x.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pcm512x.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.sgtl5000.MIMXRT555S" name="sgtl5000" brief="Driver sgtl5000" version="2.1.1" full_name="Driver sgtl5000" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/sgtl5000" project_base_path="codec">
      <defines>
        <define name="CODEC_SGTL5000_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT555S"/>
          <component_dependency value="component.codec_i2c.MIMXRT555S"/>
          <component_dependency value="component.sgtl_adapter.MIMXRT555S"/>
          <component_dependency value="driver.codec.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sgtl5000.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sgtl5000.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.tfa9896.MIMXRT555S" name="tfa9896" brief="Driver tfa9896" version="6.0.2" full_name="Driver tfa9896" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/tfa9896" project_base_path="codec">
      <defines>
        <define name="CODEC_TFA9896_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT555S"/>
          <component_dependency value="component.codec_i2c.MIMXRT555S"/>
          <component_dependency value="component.tfa9896_adapter.MIMXRT555S"/>
          <component_dependency value="driver.codec.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_tfa9896_buffer.h"/>
        <files mask="fsl_tfa9896.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_hal_registers.c"/>
        <files mask="fsl_tfa9896.c"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="MIMXRT595595-EVK_TFA9896_SW.pdf"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.tfa9xxx.MIMXRT555S" name="tfa9xxx" brief="Driver tfa9xxx" version="2.1.0" full_name="Driver tfa9xxx" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/tfa9xxx" project_base_path="codec/tfa9xxx">
      <defines>
        <define name="CODEC_TFA9XXX_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT555S"/>
          <component_dependency value="component.codec_i2c.MIMXRT555S"/>
          <component_dependency value="component.tfa9xxx_adapter.MIMXRT555S"/>
          <component_dependency value="driver.codec.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="tfa_config_TFA9892N1.h"/>
        <files mask="tfa_config_TFA9894N1.h"/>
        <files mask="tfa_config_TFA9894N2.h"/>
        <files mask="fsl_tfa9xxx.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_tfa9xxx.c"/>
        <files mask="fsl_tfa9xxx_IMX.c"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="README.md"/>
      </source>
      <source relative_path="vas_tfa_drv" type="c_include">
        <files mask="config.h"/>
        <files mask="tfa2_container.h"/>
        <files mask="tfa2_dev.h"/>
        <files mask="tfa2_dsp_fw.h"/>
        <files mask="tfa2_haptic.h"/>
        <files mask="tfa9xxx_parameters.h"/>
        <files mask="tfa_haptic_fw_defs.h"/>
      </source>
      <source relative_path="vas_tfa_drv" type="src">
        <files mask="tfa2_container.c"/>
        <files mask="tfa2_dev.c"/>
        <files mask="tfa2_haptic.c"/>
        <files mask="tfa2_init.c"/>
        <files mask="tfa_container_crc32.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="vas_tfa_drv" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="vas_tfa_drv" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.tfa9xxx_hal.MIMXRT555S" name="tfa9xxx_hal" brief="Driver tfa9xxx_hal" version="2.1.0" full_name="Driver tfa9xxx_hal" category="Device/SDK Drivers" user_visible="false" type="software_component" package_base_path="components/codec/tfa9xxx" project_base_path="codec/tfa9xxx">
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT555S"/>
          <component_dependency value="component.codec_i2c.MIMXRT555S"/>
          <component_dependency value="driver.codec.MIMXRT555S"/>
          <component_dependency value="driver.tfa9xxx.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="tfa_device_hal.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="tfa_device_hal.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.wm8524.MIMXRT555S" name="wm8524" brief="Driver wm8524" version="2.1.1" full_name="Driver wm8524" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/wm8524" project_base_path="codec">
      <defines>
        <define name="CODEC_WM8524_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT555S"/>
          <component_dependency value="component.codec_i2c.MIMXRT555S"/>
          <component_dependency value="component.wm8524_adapter.MIMXRT555S"/>
          <component_dependency value="driver.codec.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wm8524.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wm8524.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.wm8904.MIMXRT555S" name="wm8904" brief="Driver wm8904" version="2.5.1" full_name="Driver wm8904" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/wm8904" project_base_path="codec">
      <defines>
        <define name="CODEC_WM8904_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT555S"/>
          <component_dependency value="component.codec_i2c.MIMXRT555S"/>
          <component_dependency value="component.wm8904_adapter.MIMXRT555S"/>
          <component_dependency value="driver.codec.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wm8904.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wm8904.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.wm8960.MIMXRT555S" name="wm8960" brief="Driver wm8960" version="2.2.4" full_name="Driver wm8960" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/wm8960" project_base_path="codec">
      <defines>
        <define name="CODEC_WM8960_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT555S"/>
          <component_dependency value="component.codec_i2c.MIMXRT555S"/>
          <component_dependency value="component.wm8960_adapter.MIMXRT555S"/>
          <component_dependency value="driver.codec.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wm8960.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wm8960.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.wm8962.MIMXRT555S" name="wm8962" brief="Driver wm8962" version="2.2.0" full_name="Driver wm8962" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/wm8962" project_base_path="codec">
      <defines>
        <define name="CODEC_WM8962_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT555S"/>
          <component_dependency value="component.codec_i2c.MIMXRT555S"/>
          <component_dependency value="component.wm8962_adapter.MIMXRT555S"/>
          <component_dependency value="driver.codec.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wm8962.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wm8962.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.button.MIMXRT555S" name="button" brief="Component button" version="1.0.0" full_name="Component button" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/button" project_base_path="component/button">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="platform.drivers.lpc_gpio.MIMXRT555S"/>
            <board_dependency value="evkmimxrt595"/>
          </any_of>
          <component_dependency value="component.rt_gpio_adapter.MIMXRT555S"/>
          <component_dependency value="component.timer_manager.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_button.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_button.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.audio_flexcomm_i2s_dma_adapter.MIMXRT555S" name="flexcomm_i2s_dma_adapter" brief="Component flexcomm_i2s_dma_adapter" version="1.0.0" full_name="Component flexcomm_i2s_dma_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/audio" project_base_path="component/audio">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_i2s_dma.MIMXRT555S"/>
          <device_dependency value="MIMXRT555S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_audio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_flexcomm_i2s.c"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flash_config.evkmimxrt595.MIMXRT595S" name="flash_config" brief="flash config block" version="2.0.0" full_name="Flash config" category="Device/SDK drivers" user_visible="true" type="board_component" package_base_path="boards/evkmimxrt595/flash_config" project_base_path="flash_config">
      <defines>
        <define name="BOOT_HEADER_ENABLE" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="flash_config.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="flash_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flash_config.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="project_template.evkmimxrt595.MIMXRT595S" name="evkmimxrt595" brief="Board_project_template evkmimxrt595" version="1.0.0" full_name="Board_project_template evkmimxrt595" category="Board Support/SDK Project Template" user_visible="true" type="project_template" package_base_path="boards/evkmimxrt595/project_template" project_base_path="board">
      <defines>
        <define name="FSL_SDK_DRIVER_QUICK_ACCESS_ENABLE" value="1"/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="component.serial_manager.MIMXRT595S"/>
              <component_dependency value="component.serial_manager_uart.MIMXRT595S"/>
              <component_dependency value="platform.utilities.assert.MIMXRT595S"/>
              <component_dependency value="utility.debug_console.MIMXRT595S"/>
              <component_dependency value="utility.debug_console_template_config.MIMXRT595S"/>
            </all>
            <all>
              <component_dependency value="platform.utilities.assert_lite.MIMXRT595S"/>
              <component_dependency value="utility.debug_console_lite.MIMXRT595S"/>
            </all>
          </any_of>
          <component_dependency value="component.usart_adapter.MIMXRT595S"/>
          <component_dependency value="device.MIMXRT595S_startup.MIMXRT595S"/>
          <component_dependency value="platform.drivers.cache_cache64.MIMXRT595S"/>
          <component_dependency value="platform.drivers.clock.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="platform.drivers.flash_config.evkmimxrt595.MIMXRT595S"/>
          <component_dependency value="platform.drivers.flexcomm_usart.MIMXRT595S"/>
          <component_dependency value="platform.drivers.flexspi.MIMXRT595S"/>
          <component_dependency value="platform.drivers.lpc_gpio.MIMXRT595S"/>
          <component_dependency value="platform.drivers.lpc_iopctl.MIMXRT595S"/>
          <component_dependency value="platform.drivers.iap3.MIMXRT595S"/>
          <component_dependency value="platform.drivers.power.MIMXRT595S"/>
          <component_dependency value="platform.drivers.reset.MIMXRT595S"/>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="board.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="board.c"/>
      </source>
      <source relative_path="./" config="true" type="c_include">
        <files mask="clock_config.h"/>
        <files mask="pin_mux.h"/>
        <files mask="peripherals.h"/>
      </source>
      <source relative_path="./" config="true" type="src">
        <files mask="clock_config.c"/>
        <files mask="pin_mux.c"/>
        <files mask="peripherals.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="board_project_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.devices.MIMXRT595S_debugger.MIMXRT595S" name="Device MIMXRT595S_debugger" brief="Device MIMXRT595S_debugger" version="1.0.0" full_name="Device MIMXRT595S_debugger" category="Device/SDK Utilities" user_visible="true" type="debugger" package_base_path="devices/MIMXRT595S" project_base_path="svd">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="xml">
        <files mask="MIMXRT595S_cm33.xml"/>
      </source>
    </component>
    <component id="platform.utilities.misc_utilities.MIMXRT595S" name="misc_utilities" brief="Utilities which is needed for particular toolchain like the SBRK function required to address limitation between HEAP and STACK in GCC toolchain library." version="1.1.1" full_name="Utilities miscellaneous" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT595S/utilities" project_base_path="utilities">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="src">
        <files mask="fsl_syscall_stub.c"/>
        <files mask="fsl_sbrk.c"/>
      </source>
      <source toolchain="armgcc mcuxpresso mdk" relative_path="./" type="asm_include" device_cores="cm33_MIMXRT595S">
        <files mask="fsl_memcpy.S"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utilities_misc_utilities.MIMXRT595S.cmake" hidden="true"/>
      </source>
    </component>
    <component id="utility.incbin.MIMXRT595S" name="incbin" brief="Used to include slave core binary into master core binary." version="1.0.0" full_name="utility incbin" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT595S/utilities/incbin" project_base_path="utilities">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source toolchain="armgcc mdk" relative_path="./" type="asm_include">
        <files mask="fsl_incbin.S"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_incbin.MIMXRT595S.cmake" hidden="true"/>
      </source>
    </component>
    <component id="utility.debug_console_template_config.MIMXRT595S" name="debug_console_template_config" brief="Utility debug_console Template Config" version="1.0.0" full_name="Utility debug_console Template Config" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT595S/utilities" project_base_path="utilities">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="debug_console/config" config="true" type="c_include">
        <files mask="fsl_debug_console_conf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_debug_console_template_config.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="debug_console/config" type="c_include"/>
        <include_path relative_path="debug_console/config" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.clock.MIMXRT595S" name="clock" brief="Clock Driver" version="2.7.1" full_name="Clock Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_clock.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_clock.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_clock.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.i2s_bridge.MIMXRT595S" name="i2s_bridge" brief="I2S Bridge Driver" version="2.0.0" full_name="I2S Bridging and Signal Sharing Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_i2s_bridge.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i2s_bridge.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_i2s_bridge.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.inputmux_connections.MIMXRT595S" name="inputmux_connections" brief="Inputmux_connections Driver" version="2.0.0" full_name="Inputmux_connections Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_inputmux_connections.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_inputmux_connections.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.reset.MIMXRT595S" name="reset" brief="Reset Driver" version="2.1.0" full_name="Reset Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_reset.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_reset.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_reset.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.soc_mipi_dsi.MIMXRT595S" name="soc_mipi_dsi" brief="SOC MIPI DSI Driver" version="2.0.0" full_name="SOC MIPI DSI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_soc_mipi_dsi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_soc_mipi_dsi.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.sdio.template.MIMXRT595S" name="EdgeFast Bluetooth configuration template of SDIO" brief="Template configuration file to be edited by user." version="1.0.0" full_name="EdgeFast Bluetooth configuration template of SDIO" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="project_template" package_base_path="examples/_boards/evkmimxrt595/edgefast_bluetooth_examples/template" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
    </component>
    <component id="middleware.edgefast_bluetooth.low_power.MIMXRT595S" name="middleware.edgefast_bluetooth.low_power" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.low_power" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
    </component>
    <component id="middleware.edgefast_bluetooth.host_low_power.MIMXRT595S" name="middleware.edgefast_bluetooth.host_low_power" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.host_low_power" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
    </component>
    <component id="middleware.edgefast_bluetooth.storage.MIMXRT595S" name="middleware.edgefast_bluetooth.storage" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.storage" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
    </component>
    <component id="middleware.edgefast_bluetooth_flash_adapter_rt1170evkb.MIMXRT595S" name="middleware.edgefast_bluetooth_flash_adapter_rt1170evkb" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth_flash_adapter_rt1170evkb" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
    </component>
    <component id="middleware.edgefast_bluetooth_flash_adapter_rt595evk.MIMXRT595S" name="middleware.edgefast_bluetooth_flash_adapter_rt595evk" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth_flash_adapter_rt595evk" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
    </component>
    <component id="middleware.edgefast_bluetooth_flash_adapter_rt685evk.MIMXRT595S" name="middleware.edgefast_bluetooth_flash_adapter_rt685evk" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth_flash_adapter_rt685evk" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
    </component>
    <component id="middleware.edgefast_bluetooth_mflash_offchip.MIMXRT595S" name="middleware.edgefast_bluetooth_mflash_offchip" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth_mflash_offchip" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
    </component>
    <component id="middleware.edgefast_bluetooth_mflash_onchip_fmu.MIMXRT595S" name="middleware.edgefast_bluetooth_mflash_onchip_fmu" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth_mflash_onchip_fmu" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
    </component>
    <component id="middleware.edgefast_bluetooth.codec.MIMXRT595S" name="middleware.edgefast_bluetooth.codec" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.codec" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
    </component>
    <component id="middleware.edgefast_bluetooth.codec_wm8960.MIMXRT595S" name="middleware.edgefast_bluetooth.codec_wm8960" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.codec_wm8960" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
    </component>
    <component id="middleware.edgefast_bluetooth.codec_wm8962.MIMXRT595S" name="middleware.edgefast_bluetooth.codec_wm8962" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.codec_wm8962" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
    </component>
    <component id="middleware.edgefast_bluetooth.codec_wm8904.MIMXRT595S" name="middleware.edgefast_bluetooth.codec_wm8904" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.codec_wm8904" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
    </component>
    <component id="middleware.edgefast_bluetooth.codec_cs42448.MIMXRT595S" name="middleware.edgefast_bluetooth.codec_cs42448" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.codec_cs42448" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
    </component>
    <component id="middleware.edgefast_bluetooth.codec_dialog7212.MIMXRT595S" name="middleware.edgefast_bluetooth.codec_dialog7212" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.codec_dialog7212" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
    </component>
    <component id="middleware.edgefast_bluetooth.codec_sai_edma.MIMXRT595S" name="middleware.edgefast_bluetooth.codec_sai_edma" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.codec_sai_edma" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
    </component>
    <component id="middleware.edgefast_bluetooth.codec_i2s_dma.MIMXRT595S" name="middleware.edgefast_bluetooth.codec_i2s_dma" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.codec_i2s_dma" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
    </component>
    <component id="middleware.freertos.coremqtt.MIMXRT595S" name="coremqtt" brief="Client implementation of the MQTT 3.1.1 specification for embedded devices." version="2.1.1" full_name="coreMQTT" category="FreeRTOS/coreMQTT" user_visible="true" type="middleware" package_base_path="rtos/freertos/coremqtt" project_base_path="freertos/coremqtt">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="core_mqtt.c"/>
        <files mask="core_mqtt_serializer.c"/>
        <files mask="core_mqtt_state.c"/>
      </source>
      <source relative_path="source/include" type="c_include">
        <files mask="core_mqtt.h"/>
        <files mask="core_mqtt_config_defaults.h"/>
        <files mask="core_mqtt_default_logging.h"/>
        <files mask="core_mqtt_serializer.h"/>
        <files mask="core_mqtt_state.h"/>
      </source>
      <source relative_path="source/interface" type="c_include">
        <files mask="transport_interface.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos_coremqtt.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/include" type="c_include"/>
        <include_path relative_path="source/interface" type="c_include"/>
        <include_path relative_path="source/include" type="asm_include"/>
        <include_path relative_path="source/interface" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos.corejson.MIMXRT595S" name="corejson" brief="A parser strictly enforcing the ECMA-404 JSON standard, suitable for microcontrollers." version="3.2.0" full_name="coreJSON" category="FreeRTOS/coreJSON" user_visible="true" type="middleware" package_base_path="rtos/freertos/corejson" project_base_path="freertos/corejson">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="core_json.c"/>
      </source>
      <source relative_path="source/include" type="c_include">
        <files mask="core_json.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos_corejson.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/include" type="c_include"/>
        <include_path relative_path="source/include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos.backoffalgorithm.MIMXRT595S" name="backoffalgorithm" brief="Algorithm for calculating exponential backoff with jitter for network retry attempts." version="1.3.0" full_name="backoffalgorithm" category="FreeRTOS/backoffAlgorithm" user_visible="true" type="middleware" package_base_path="rtos/freertos/backoffalgorithm" project_base_path="freertos/backoffalgorithm">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="backoff_algorithm.c"/>
      </source>
      <source relative_path="source/include" type="c_include">
        <files mask="backoff_algorithm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos_backoffalgorithm.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/include" type="c_include"/>
        <include_path relative_path="source/include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.cmsis_drivers.MIMXRT595S" name="CMSIS driver" brief="CMSIS driver" version="2.0.0" full_name="CMSIS driver" category="Board Support/SDK Project Template" user_visible="true" type="CMSIS_driver" package_base_path="components/cmsis_drivers" project_base_path="CMSIS_drivers">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
    </component>
    <component id="platform.drivers.common.MIMXRT595S" name="common" brief="common Driver" version="2.5.0" full_name="common Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_common.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_common.c"/>
      </source>
      <source relative_path="./" type="src" device_cores="cm33_MIMXRT595S">
        <files mask="fsl_common_arm.c"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm33_MIMXRT595S">
        <files mask="fsl_common_arm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_common.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.wifi_bt_config.template.MIMXRT595S" name="Wi-Fi configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="Wi-Fi configuration template" category="Wireless/NXP Wi-Fi" user_visible="false" type="project_template" package_base_path="components/wifi_bt_module/template" project_base_path="wifi/template">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" config="true" type="c_include">
        <files mask="wifi_bt_config.h"/>
      </source>
      <source relative_path="./" config="true" type="src">
        <files mask="wifi_bt_config.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_wifi_bt_config_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="../../../middleware/wifi_nxp" project_relative_path="./" type="c_include"/>
        <include_path relative_path="../../../middleware/wifi_nxp" project_relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.osa_free_rtos.MIMXRT595S" name="nxp wifi osa free_rtos" brief="NXP WLAN OSA" version="1.0.0" full_name="NXP WLAN OSA" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="port/osa" type="c_include">
        <files mask="osa_freertos.h"/>
      </source>
      <source relative_path="port/osa" type="src">
        <files mask="osa_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_osa_free_rtos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="incl/port/osa" type="c_include"/>
        <include_path relative_path="port/osa" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="incl" type="asm_include"/>
        <include_path relative_path="incl/port/osa" type="asm_include"/>
        <include_path relative_path="port/osa" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.osa_thread.MIMXRT595S" name="nxp wifi osa thread" brief="NXP WLAN OSA" version="1.0.0" full_name="NXP WLAN OSA" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="port/osa" type="c_include">
        <files mask="osa_threadx.h"/>
      </source>
      <source relative_path="port/osa" type="src">
        <files mask="osa_threadx.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_osa_thread.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="incl/port/osa" type="c_include"/>
        <include_path relative_path="port/osa" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="incl/port/osa" type="asm_include"/>
        <include_path relative_path="port/osa" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.firmware_download.MIMXRT595S" name="nxp_wireless_firmware_download" brief="NXP WLAN f/w dnld base" version="1.0.0" full_name="NXP WLAN f/w dnld base" category="Wireless/NXP Wi-Fi" user_visible="true" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="incl" type="c_include">
        <files mask="WIFI_IW416_BOARD_AW_AM457_CAL_DATA_EXT.h"/>
      </source>
      <source relative_path="wifidriver/incl" type="c_include">
        <files mask="mlan_main_defs.h"/>
      </source>
      <source relative_path="wifidriver" type="src">
        <files mask="sdio.c"/>
      </source>
      <source relative_path="wifidriver" type="c_include">
        <files mask="sdio.h"/>
      </source>
      <source relative_path="firmware_dnld" type="src">
        <files mask="firmware_dnld.c"/>
      </source>
      <source relative_path="firmware_dnld" type="c_include">
        <files mask="firmware_dnld.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_firmware_download.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="wifidriver" type="c_include"/>
        <include_path relative_path="wifidriver/incl" type="c_include"/>
        <include_path relative_path="firmware_dnld" type="c_include"/>
        <include_path relative_path="sdio_nxp_abs" type="c_include"/>
        <include_path relative_path="sdio_nxp_abs/incl" type="c_include"/>
        <include_path relative_path="fwdnld_intf_abs" type="c_include"/>
        <include_path relative_path="incl" type="asm_include"/>
        <include_path relative_path="wifidriver" type="asm_include"/>
        <include_path relative_path="wifidriver/incl" type="asm_include"/>
        <include_path relative_path="firmware_dnld" type="asm_include"/>
        <include_path relative_path="sdio_nxp_abs" type="asm_include"/>
        <include_path relative_path="sdio_nxp_abs/incl" type="asm_include"/>
        <include_path relative_path="fwdnld_intf_abs" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.net_thread.MIMXRT595S" name="nxp wifi osa thread" brief="NXP WLAN OSA" version="1.0.0" full_name="NXP WLAN OSA" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="incl/port/net" type="c_include">
        <files mask="wm_net.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_net_thread.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="incl/port/osa" type="c_include"/>
        <include_path relative_path="port/osa" type="c_include"/>
        <include_path relative_path="incl/port/net" type="c_include"/>
        <include_path relative_path="port/net/netxduo" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="incl/port/osa" type="asm_include"/>
        <include_path relative_path="port/osa" type="asm_include"/>
        <include_path relative_path="incl/port/net" type="asm_include"/>
        <include_path relative_path="port/net/netxduo" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.fwdnld_intf_abs.MIMXRT595S" name="wifi_nxp_fwdnld_intf_abs" brief="NXP Wi-Fi Interface Abstraction Layer" version="1.3.46" full_name="NXP Firmware Download abstraction layer" category="Wireless/NXP Wi-Fi" user_visible="true" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="fwdnld_intf_abs" type="src">
        <files mask="fwdnld_intf_abs.c"/>
      </source>
      <source relative_path="fwdnld_intf_abs" type="c_include">
        <files mask="fwdnld_intf_abs.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_fwdnld_intf_abs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="fwdnld_intf_abs" type="c_include"/>
        <include_path relative_path="fwdnld_intf_abs" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.wps.MIMXRT595S" name="wifi_nxp_wps" brief="Middlware Wi-Fi WPS" version="1.0.0" full_name="NXP Wi-Fi WPS" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
    </component>
    <component id="middleware.vglite.MIMXRT595S" name="vglite" brief="vglite library" version="4.0.90" full_name="Middleware vglite" category="vglite/vglite graphics library" user_visible="false" type="middleware" package_base_path="middleware/vglite/driver" project_base_path="vglite">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="inc" type="c_include">
        <files mask="vg_lite.h"/>
      </source>
      <source relative_path="VGLite" type="src">
        <files mask="vg_lite.c"/>
        <files mask="vg_lite_image.c"/>
        <files mask="vg_lite_matrix.c"/>
        <files mask="vg_lite_path.c"/>
        <files mask="vg_lite_stroke.c"/>
      </source>
      <source relative_path="VGLite" type="c_include">
        <files mask="vg_lite_options.h"/>
        <files mask="vg_lite_context.h"/>
      </source>
      <source relative_path="VGLite/rtos" type="src">
        <files mask="vg_lite_os.c"/>
      </source>
      <source relative_path="VGLite/Series/gc555/0x423_ECO" type="c_include">
        <files mask="vg_lite_options.h"/>
      </source>
      <source relative_path="VGLite/Series/gc355/0x0_1216" type="c_include">
        <files mask="vg_lite_options.h"/>
      </source>
      <source relative_path="VGLite/Series/gc255/0x40A" type="c_include">
        <files mask="vg_lite_options.h"/>
      </source>
      <source relative_path="VGLiteKernel" type="c_include">
        <files mask="vg_lite_hal.h"/>
        <files mask="vg_lite_hw.h"/>
        <files mask="vg_lite_kernel.h"/>
        <files mask="vg_lite_option.h"/>
        <files mask="vg_lite_type.h"/>
        <files mask="vg_lite_debug.h"/>
      </source>
      <source relative_path="VGLiteKernel" type="src">
        <files mask="vg_lite_kernel.c"/>
      </source>
      <source relative_path="VGLiteKernel/rtos" type="src">
        <files mask="vg_lite_hal.c"/>
      </source>
      <source relative_path="VGLiteKernel/rtos" type="c_include">
        <files mask="vg_lite_platform.h"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="RELEASE_NOTES.txt"/>
        <files mask="LICENSE.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_vglite.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="inc" type="c_include"/>
        <include_path relative_path="VGLite" type="c_include"/>
        <include_path relative_path="VGLite/rtos" type="c_include"/>
        <include_path relative_path="VGLite/Series/gc555/0x423_ECO" type="c_include"/>
        <include_path relative_path="VGLite/Series/gc355/0x0_1216" type="c_include"/>
        <include_path relative_path="VGLite/Series/gc255/0x40A" type="c_include"/>
        <include_path relative_path="VGLiteKernel" type="c_include"/>
        <include_path relative_path="VGLiteKernel/rtos" type="c_include"/>
        <include_path relative_path="inc" type="asm_include"/>
        <include_path relative_path="VGLite" type="asm_include"/>
        <include_path relative_path="VGLite/rtos" type="asm_include"/>
        <include_path relative_path="VGLite/Series/gc555/0x423_ECO" type="asm_include"/>
        <include_path relative_path="VGLite/Series/gc355/0x0_1216" type="asm_include"/>
        <include_path relative_path="VGLite/Series/gc255/0x40A" type="asm_include"/>
        <include_path relative_path="VGLiteKernel" type="asm_include"/>
        <include_path relative_path="VGLiteKernel/rtos" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb_pd.common_header.MIMXRT595S" name="USB PD Common Header" brief="Middleware usb pd common_header" version="2.11.0" full_name="USB PD Common Header" category="USB/USB PD Common Header" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
    </component>
    <component id="middleware.usb_pd.config_header.MIMXRT595S" name="PD Config Header" brief="USB Type-C PD Stack" version="2.11.0" full_name="USB Type-C PD Stack" category="USB/USB Type-C PD Stack" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
    </component>
    <component id="middleware.usb.host.khci_config_header.MIMXRT595S" name="USB host khci config header" brief="USB host khci config header" version="2.11.0" full_name="USB host khci config header" category="USB/USB Host" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
    </component>
    <component id="middleware.usb.host.ohci_config_header.MIMXRT595S" name="USB host ohci config header" brief="USB host ohci config header" version="2.11.0" full_name="USB host ohci config header" category="USB/USB Host" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
    </component>
    <component id="middleware.usb.host.ip3516hs_config_header.MIMXRT595S" name="USB host ip3516hs config header" brief="USB host ip3516hs config header" version="2.11.0" full_name="USB host ip3516hs config header" category="USB/USB Host" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
    </component>
    <component id="middleware.usb.host.ehci_config_header.MIMXRT595S" name="USB host ehci config header" brief="USB host ehci config header" version="2.11.0" full_name="USB host ehci config header" category="USB/USB Host" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
    </component>
    <component id="middleware.usb.device.khci_config_header.MIMXRT595S" name="USB device khci config header" brief="USB device khci config header" version="2.11.0" full_name="USB device khci config header" category="USB/USB Device" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
    </component>
    <component id="middleware.usb.device.ip3511fs_config_header.MIMXRT595S" name="USB device ip3511fs config header" brief="USB device ip3511fs config header" version="2.11.0" full_name="USB device ip3511fs config header" category="USB/USB Device" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
    </component>
    <component id="middleware.usb.device.ip3511hs_config_header.MIMXRT595S" name="USB device ip3511hs config header" brief="USB device ip3511hs config header" version="2.11.0" full_name="USB device ip3511hs config header" category="USB/USB Device" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
    </component>
    <component id="middleware.usb.device.ehci_config_header.MIMXRT595S" name="USB device ehci config header" brief="USB device ehci config header" version="2.11.0" full_name="USB device ehci config header" category="USB/USB Device" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
    </component>
    <component id="middleware.usb.phydcd_config_header.MIMXRT595S" name="USB device phydcd config header" brief="USB device phydcd config header" version="2.11.0" full_name="USB device phydcd config header" category="USB/USB DCD" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
    </component>
    <component id="middleware.usb.hsdcd_config_header.MIMXRT595S" name="USB device hsdcd config header" brief="USB device hsdcd config header" version="2.11.0" full_name="USB device hsdcd config header" category="USB/USB DCD" user_visible="true" type="project_template" package_base_path="middleware/usb" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
    </component>
    <component id="middleware.tinycbor.MIMXRT595S" name="tinycbor" brief="Concise Binary Object Representation (CBOR) Library" version="0.6.0" full_name="TinyCBOR" category="TinyCBOR/TinyCBOR" user_visible="true" type="middleware" package_base_path="middleware/tinycbor" project_base_path="tinycbor">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="src" type="c_include">
        <files mask="cbor.h"/>
        <files mask="cborinternal_p.h"/>
        <files mask="compilersupport_p.h"/>
        <files mask="tinycbor-version.h"/>
        <files mask="utf8_p.h"/>
      </source>
      <source relative_path="src" type="src">
        <files mask="cborencoder.c"/>
        <files mask="cborencoder_close_container_checked.c"/>
        <files mask="cborerrorstrings.c"/>
        <files mask="cborparser.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tinycbor.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src" type="c_include"/>
        <include_path relative_path="src" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.tfm.s.board.MIMXRT595S" name="TFM_S_board" brief="TFM Library" version="1.8" full_name="Middleware tfm s board" category="Security/Trusted Firmware - M library" user_visible="true" type="other" package_base_path="middleware/tfm/tf-m" project_base_path="tf-m">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_s_board.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.tfm.lpuart.MIMXRT595S" name="TFM_LPUART" brief="TFM CMSIS driver for LPUART based on USART" version="1.8" full_name="TFM CMSIS LPUART driver" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m" project_base_path="tf-m">
      <defines>
        <define name="TFM_LPUART_FEATRUE" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="platform/ext/target/nxp/common/CMSIS_Driver" type="src">
        <files mask="Driver_LPUART.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_lpuart.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.tfm.qcbor.MIMXRT595S" name="TFM_CQBOR" brief="CQBOR library" version="1.2" full_name="Middleware tfm CQBOR library" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/qcbor" project_base_path="qcbor">
      <defines>
        <define name="QCBOR_DISABLE_FLOAT_HW_USE" value=""/>
        <define name="USEFULBUF_DISABLE_ALL_FLOAT" value=""/>
        <define name="QCBOR_DISABLE_PREFERRED_FLOAT" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="src" type="src">
        <files mask="ieee754.c"/>
        <files mask="qcbor_decode.c"/>
        <files mask="qcbor_encode.c"/>
        <files mask="UsefulBuf.c"/>
      </source>
      <source relative_path="src" type="c_include">
        <files mask="ieee754.h"/>
      </source>
      <source relative_path="inc/qcbor" type="c_include">
        <files mask="qcbor.h"/>
        <files mask="qcbor_common.h"/>
        <files mask="qcbor_decode.h"/>
        <files mask="qcbor_encode.h"/>
        <files mask="qcbor_private.h"/>
        <files mask="qcbor_spiffy_decode.h"/>
        <files mask="UsefulBuf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_qcbor.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src" type="c_include"/>
        <include_path relative_path="inc" type="c_include"/>
        <include_path relative_path="inc/qcbor" type="c_include"/>
        <include_path relative_path="src" type="asm_include"/>
        <include_path relative_path="inc" type="asm_include"/>
        <include_path relative_path="inc/qcbor" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.tfm.qcbor.test.MIMXRT595S" name="TFM_QCBOR_TEST" brief="CQBOR library tests" version="1.2" full_name="Middleware tfm CQBOR library test" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/qcbor" project_base_path="qcbor">
      <defines>
        <define name="QCBOR_DISABLE_FLOAT_HW_USE" value=""/>
        <define name="USEFULBUF_DISABLE_ALL_FLOAT" value=""/>
        <define name="QCBOR_DISABLE_PREFERRED_FLOAT" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="test" type="c_include">
        <files mask="float_tests.h"/>
        <files mask="qcbor_encode_tests.h"/>
        <files mask="not_well_formed_cbor.h"/>
        <files mask="qcbor_decode_tests.h"/>
        <files mask="run_tests.h"/>
        <files mask="UsefulBuf_Tests.h"/>
      </source>
      <source relative_path="test" type="src">
        <files mask="qcbor_encode_tests.c"/>
        <files mask="qcbor_decode_tests.c"/>
        <files mask="run_tests.c"/>
        <files mask="UsefulBuf_Tests.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_qcbor_test.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="test" type="c_include"/>
        <include_path relative_path="test" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.tfm.s.ps.MIMXRT595S" name="TFM_S_Protected_Storage" brief="TFM Secure Storage Service" version="1.8" full_name="Middleware tfm s PS" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m" project_base_path="tf-m">
      <defines>
        <define name="TFM_PARTITION_PROTECTED_STORAGE" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="interface/include" type="c_include">
        <files mask="tfm_ps_defs.h"/>
      </source>
      <source relative_path="interface/src" type="src">
        <files mask="tfm_ps_api.c"/>
      </source>
      <source relative_path="secure_fw/partitions/protected_storage/auto_generated" type="src">
        <files mask="intermedia_tfm_protected_storage.c"/>
        <files mask="load_info_tfm_protected_storage.c"/>
      </source>
      <source relative_path="secure_fw/partitions/protected_storage/crypto" type="src">
        <files mask="ps_crypto_interface.c"/>
      </source>
      <source relative_path="secure_fw/partitions/protected_storage/crypto" type="c_include">
        <files mask="ps_crypto_interface.h"/>
      </source>
      <source relative_path="secure_fw/partitions/protected_storage" type="c_include">
        <files mask="config_ps_check.h"/>
        <files mask="ps_encrypted_object.h"/>
        <files mask="ps_object_defs.h"/>
        <files mask="ps_object_system.h"/>
        <files mask="ps_object_table.h"/>
        <files mask="ps_utils.h"/>
        <files mask="tfm_protected_storage.h"/>
        <files mask="tfm_ps_req_mngr.h"/>
      </source>
      <source relative_path="secure_fw/partitions/protected_storage" type="src">
        <files mask="ps_encrypted_object.c"/>
        <files mask="ps_object_system.c"/>
        <files mask="ps_object_table.c"/>
        <files mask="ps_utils.c"/>
        <files mask="tfm_protected_storage.c"/>
        <files mask="tfm_ps_req_mngr.c"/>
      </source>
      <source relative_path="secure_fw/partitions/protected_storage/psa_manifest" type="c_include">
        <files mask="tfm_protected_storage.h"/>
      </source>
      <source relative_path="secure_fw/partitions/protected_storage/nv_counters" type="c_include">
        <files mask="ps_nv_counters.h"/>
      </source>
      <source relative_path="secure_fw/partitions/protected_storage/nv_counters" type="src">
        <files mask="ps_nv_counters.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_s_ps.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="interface/include" type="c_include"/>
        <include_path relative_path="secure_fw/partitions/protected_storage/crypto" type="c_include"/>
        <include_path relative_path="secure_fw/partitions/protected_storage" type="c_include"/>
        <include_path relative_path="secure_fw/partitions/protected_storage/nv_counters" type="c_include"/>
        <include_path relative_path="secure_fw/partitions/platform" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="interface/include" type="asm_include"/>
        <include_path relative_path="secure_fw/partitions/protected_storage/crypto" type="asm_include"/>
        <include_path relative_path="secure_fw/partitions/protected_storage" type="asm_include"/>
        <include_path relative_path="secure_fw/partitions/protected_storage/nv_counters" type="asm_include"/>
        <include_path relative_path="secure_fw/partitions/platform" type="asm_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.tfm.ns.board.MIMXRT595S" name="TFM_NS_board" brief="TFM Library" version="1.8" full_name="Middleware tfm ns board" category="Security/Trusted Firmware - M library" user_visible="true" type="other" package_base_path="middleware/tfm/tf-m" project_base_path="tf-m">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_ns_board.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.tfm.s.test.ps.MIMXRT595S" name="TFM_S_Test_PS" brief="TFM Test PS Secure" version="1.8" full_name="Middleware tfm s test PS" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m-tests" project_base_path="tf-m-tests">
      <defines>
        <define name="TFM_PARTITION_TEST_PS" value=""/>
        <define name="TEST_S_PS" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="test/secure_fw/suites/ps/secure" type="src">
        <files mask="psa_ps_s_interface_testsuite.c"/>
        <files mask="psa_ps_s_reliability_testsuite.c"/>
      </source>
      <source relative_path="test/secure_fw/suites/ps/secure" type="c_include">
        <files mask="s_test_helpers.h"/>
        <files mask="ps_tests.h"/>
      </source>
      <source relative_path="../tf-m/autogenerated/test/secure_fw/test_services/tfm_ps_test_service/auto_generated" type="src">
        <files mask="intermedia_tfm_ps_test_service.c"/>
        <files mask="load_info_tfm_ps_test_service.c"/>
      </source>
      <source relative_path="../tf-m/autogenerated/test/secure_fw/test_services/tfm_ps_test_service/psa_manifest" type="c_include">
        <files mask="tfm_ps_test_service.h"/>
      </source>
      <source relative_path="test/secure_fw/suites/ps/service" type="src">
        <files mask="tfm_ps_test_service.c"/>
        <files mask="tfm_ps_test_service_api.c"/>
      </source>
      <source relative_path="test/secure_fw/suites/ps/service" type="c_include">
        <files mask="tfm_ps_test_service_api.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_s_test_ps.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="test/secure_fw/suites/ps/secure" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/ps/service" type="c_include"/>
        <include_path relative_path="../tf-m/autogenerated/test/secure_fw/test_services/tfm_ps_test_service/psa_manifest" type="c_include"/>
        <include_path relative_path="../tf-m/autogenerated/test/secure_fw/test_services/tfm_ps_test_service" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/ps/secure" type="asm_include"/>
        <include_path relative_path="test/secure_fw/suites/ps/service" type="asm_include"/>
        <include_path relative_path="../tf-m/autogenerated/test/secure_fw/test_services/tfm_ps_test_service/psa_manifest" type="asm_include"/>
        <include_path relative_path="../tf-m/autogenerated/test/secure_fw/test_services/tfm_ps_test_service" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.tfm.s.test.its.MIMXRT595S" name="TFM_S_Test_ITS" brief="TFM Test ITS Secure" version="1.8" full_name="Middleware tfm s test its" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m-tests" project_base_path="tf-m-tests">
      <defines>
        <define name="TEST_S_ITS" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="test/secure_fw/suites/its" type="src">
        <files mask="its_tests_common.c"/>
      </source>
      <source relative_path="test/secure_fw/suites/its" type="c_include">
        <files mask="its_tests_common.h"/>
      </source>
      <source relative_path="test/secure_fw/suites/its/secure" type="c_include">
        <files mask="its_s_tests.h"/>
      </source>
      <source relative_path="test/secure_fw/suites/its/secure" type="src">
        <files mask="psa_its_s_interface_testsuite.c"/>
        <files mask="psa_its_s_reliability_testsuite.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_s_test_its.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="test/secure_fw/suites/its" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/its/secure" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/its" type="asm_include"/>
        <include_path relative_path="test/secure_fw/suites/its/secure" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.tfm.s.test.attestation.MIMXRT595S" name="TFM_S_Test_attestation" brief="TFM Test Attestation Secure" version="1.8" full_name="Middleware tfm s test attestation" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m-tests" project_base_path="tf-m-tests">
      <defines>
        <define name="TEST_S_ATTESTATION" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="test/secure_fw/suites/attestation/ext/qcbor_util" type="src">
        <files mask="qcbor_util.c"/>
      </source>
      <source relative_path="test/secure_fw/suites/attestation/ext/qcbor_util" type="c_include">
        <files mask="qcbor_util.h"/>
      </source>
      <source relative_path="test/secure_fw/suites/attestation/secure" type="c_include">
        <files mask="attest_s_tests.h"/>
      </source>
      <source relative_path="test/secure_fw/suites/attestation" type="c_include">
        <files mask="attest_token_decode.h"/>
        <files mask="attest_token_test.h"/>
        <files mask="attest_token_test_values.h"/>
        <files mask="attest_tests_common.h"/>
      </source>
      <source relative_path="test/secure_fw/suites/attestation" type="src">
        <files mask="attest_token_decode_common.c"/>
        <files mask="attest_token_test.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_s_test_attestation.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="test/secure_fw/suites/attestation/ext/qcbor_util" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/attestation/secure" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/attestation" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/attestation/ext/qcbor_util" type="asm_include"/>
        <include_path relative_path="test/secure_fw/suites/attestation/secure" type="asm_include"/>
        <include_path relative_path="test/secure_fw/suites/attestation" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.tfm.t_cose.sign1_verify.MIMXRT595S" name="TFM_T_Cose_Sign1_verify" brief="TFM t_cose sign1 verify" version="1.8" full_name="Middleware tfm t_cose sign1 verify" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m" project_base_path="tf-m">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="lib/ext/t_cose/src" type="src">
        <files mask="t_cose_sign1_verify.c"/>
      </source>
      <source relative_path="lib/ext/t_cose/inc" type="c_include">
        <files mask="t_cose_sign1_verify.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_t_cose_sign1_verify.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="lib/ext/t_cose/inc" type="c_include"/>
        <include_path relative_path="lib/ext/t_cose/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.tfm.t_cose.mac0_verify.MIMXRT595S" name="TFM_T_Cose_Mac0_verify" brief="TFM t_cose mac0 verify" version="1.8" full_name="Middleware tfm t_cose mac0 verify" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m" project_base_path="tf-m">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="lib/ext/t_cose/src" type="src">
        <files mask="t_cose_mac0_verify.c"/>
      </source>
      <source relative_path="lib/ext/t_cose/inc" type="c_include">
        <files mask="t_cose_mac0_verify.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_t_cose_mac0_verify.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="lib/ext/t_cose/inc" type="c_include"/>
        <include_path relative_path="lib/ext/t_cose/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.tfm.s.test.crypto.MIMXRT595S" name="TFM_S_Test_crypto" brief="TFM Test Crypto Secure" version="1.8" full_name="Middleware tfm s test crypto" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m-tests" project_base_path="tf-m-tests">
      <defines>
        <define name="TEST_S_CRYPTO" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="test/secure_fw/suites/crypto" type="src">
        <files mask="crypto_tests_common.c"/>
      </source>
      <source relative_path="test/secure_fw/suites/crypto" type="c_include">
        <files mask="crypto_tests_common.h"/>
        <files mask="crypto_tests_check_config.h"/>
      </source>
      <source relative_path="test/secure_fw/suites/crypto/secure" type="c_include">
        <files mask="crypto_s_tests.h"/>
      </source>
      <source relative_path="test/secure_fw/suites/crypto/secure" type="src">
        <files mask="crypto_sec_interface_testsuite.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_s_test_crypto.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="test/secure_fw/suites/crypto" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/crypto/secure" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/crypto" type="asm_include"/>
        <include_path relative_path="test/secure_fw/suites/crypto/secure" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.tfm.platform_test.MIMXRT595S" name="TFM_Platform_test" brief="TFM Platform test" version="1.8" full_name="Middleware TFM Platform test" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m" project_base_path="tf-m">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="platform/ext/target/nxp/common" type="src">
        <files mask="plat_test.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_platform_test.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.tfm.s.test.platform.MIMXRT595S" name="TFM_S_Test_platform" brief="TFM Test Platform Secure" version="1.8" full_name="Middleware tfm s test platform" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m-tests" project_base_path="tf-m-tests">
      <defines>
        <define name="TEST_S_PLATFORM" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="test/secure_fw/suites/platform" type="src">
        <files mask="platform_tests_common.c"/>
      </source>
      <source relative_path="test/secure_fw/suites/platform" type="c_include">
        <files mask="platform_tests_common.h"/>
      </source>
      <source relative_path="test/secure_fw/suites/platform/secure" type="c_include">
        <files mask="platform_s_tests.h"/>
      </source>
      <source relative_path="test/secure_fw/suites/platform/secure" type="src">
        <files mask="platform_s_interface_testsuite.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_s_test_platform.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="test/secure_fw/suites/platform" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/platform/secure" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/platform" type="asm_include"/>
        <include_path relative_path="test/secure_fw/suites/platform/secure" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.tfm.s.test.ipc.MIMXRT595S" name="TFM_S_Test_ipc" brief="TFM Test IPC Secure" version="1.8" full_name="Middleware tfm s test ipc" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m-tests" project_base_path="tf-m-tests">
      <defines>
        <define name="TFM_PARTITION_IPC_TEST" value=""/>
        <define name="TEST_S_IPC" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="test/secure_fw/suites/spm/common" type="c_include">
        <files mask="spm_test_defs.h"/>
      </source>
      <source relative_path="test/secure_fw/suites/spm/common/suites" type="src">
        <files mask="client_api_tests.c"/>
      </source>
      <source relative_path="test/secure_fw/suites/spm/common/suites" type="c_include">
        <files mask="client_api_tests.h"/>
      </source>
      <source relative_path="test/secure_fw/suites/spm/common/service" type="c_include">
        <files mask="client_api_test_defs.h"/>
        <files mask="client_api_test_service.h"/>
      </source>
      <source relative_path="test/secure_fw/suites/spm/common/service" type="src">
        <files mask="client_api_test_service.c"/>
      </source>
      <source relative_path="test/secure_fw/suites/spm/ipc/secure" type="c_include">
        <files mask="ipc_s_tests.h"/>
      </source>
      <source relative_path="test/secure_fw/suites/spm/ipc/secure" type="src">
        <files mask="ipc_s_interface_testsuite.c"/>
      </source>
      <source relative_path="../tf-m/autogenerated/test/secure_fw/test_services/tfm_ipc_service/auto_generated" type="src">
        <files mask="intermedia_tfm_ipc_service_test.c"/>
        <files mask="load_info_tfm_ipc_service_test.c"/>
      </source>
      <source relative_path="../tf-m/autogenerated/test/secure_fw/test_services/tfm_ipc_service/psa_manifest" type="c_include">
        <files mask="tfm_ipc_service_test.h"/>
      </source>
      <source relative_path="test/secure_fw/suites/spm/ipc/service/tfm_ipc_service" type="src">
        <files mask="tfm_ipc_service_test.c"/>
      </source>
      <source relative_path="../tf-m/autogenerated/test/secure_fw/test_services/tfm_ipc_client/auto_generated" type="src">
        <files mask="intermedia_tfm_ipc_client_test.c"/>
        <files mask="load_info_tfm_ipc_client_test.c"/>
      </source>
      <source relative_path="../tf-m/autogenerated/test/secure_fw/test_services/tfm_ipc_client/psa_manifest" type="c_include">
        <files mask="tfm_ipc_client_test.h"/>
      </source>
      <source relative_path="test/secure_fw/suites/spm/ipc/service/tfm_ipc_client" type="src">
        <files mask="tfm_ipc_client_test.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_s_test_ipc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="test/secure_fw/suites/spm/ipc/secure" type="c_include"/>
        <include_path relative_path="../tf-m/autogenerated/test/secure_fw/test_services/tfm_ipc_service/psa_manifest" type="c_include"/>
        <include_path relative_path="../tf-m/autogenerated/test/secure_fw/test_services/tfm_ipc_service" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/spm/common" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/spm/common/suites" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/spm/common/service" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/spm/ipc/service/tfm_ipc_service" type="c_include"/>
        <include_path relative_path="../tf-m/autogenerated/test/secure_fw/test_services/tfm_ipc_client/psa_manifest" type="c_include"/>
        <include_path relative_path="../tf-m/autogenerated/test/secure_fw/test_services/tfm_ipc_client" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/spm/ipc/service/tfm_ipc_client" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/spm/ipc/secure" type="asm_include"/>
        <include_path relative_path="../tf-m/autogenerated/test/secure_fw/test_services/tfm_ipc_service/psa_manifest" type="asm_include"/>
        <include_path relative_path="../tf-m/autogenerated/test/secure_fw/test_services/tfm_ipc_service" type="asm_include"/>
        <include_path relative_path="test/secure_fw/suites/spm/common" type="asm_include"/>
        <include_path relative_path="test/secure_fw/suites/spm/common/suites" type="asm_include"/>
        <include_path relative_path="test/secure_fw/suites/spm/common/service" type="asm_include"/>
        <include_path relative_path="test/secure_fw/suites/spm/ipc/service/tfm_ipc_service" type="asm_include"/>
        <include_path relative_path="../tf-m/autogenerated/test/secure_fw/test_services/tfm_ipc_client/psa_manifest" type="asm_include"/>
        <include_path relative_path="../tf-m/autogenerated/test/secure_fw/test_services/tfm_ipc_client" type="asm_include"/>
        <include_path relative_path="test/secure_fw/suites/spm/ipc/service/tfm_ipc_client" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.tfm.ns.test.ps.MIMXRT595S" name="TFM_NS_Test_PS" brief="TFM Test PS Non Secure" version="1.8" full_name="Middleware tfm ns test ps" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m-tests" project_base_path="tf-m-tests">
      <defines>
        <define name="TEST_NS_PS" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="test/secure_fw/suites/ps/non_secure" type="src">
        <files mask="ns_test_helpers.c"/>
        <files mask="psa_ps_ns_interface_testsuite.c"/>
      </source>
      <source relative_path="test/secure_fw/suites/ps/non_secure" type="c_include">
        <files mask="ns_test_helpers.h"/>
        <files mask="ps_ns_tests.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_ns_test_ps.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="test/secure_fw/suites/ps/non_secure" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/ps/non_secure" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.tfm.ns.test.its.MIMXRT595S" name="TFM_NS_Test_ITS" brief="TFM Test ITS Non Secure" version="1.8" full_name="Middleware tfm ns test its" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m-tests" project_base_path="tf-m-tests">
      <defines>
        <define name="TEST_NS_ITS" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="test/secure_fw/suites/its" type="src">
        <files mask="its_tests_common.c"/>
      </source>
      <source relative_path="test/secure_fw/suites/its" type="c_include">
        <files mask="its_tests_common.h"/>
      </source>
      <source relative_path="test/secure_fw/suites/its/non_secure" type="src">
        <files mask="psa_its_ns_interface_testsuite.c"/>
      </source>
      <source relative_path="test/secure_fw/suites/its/non_secure" type="c_include">
        <files mask="its_ns_tests.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_ns_test_its.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="test/secure_fw/suites/its" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/its/non_secure" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/its" type="asm_include"/>
        <include_path relative_path="test/secure_fw/suites/its/non_secure" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.tfm.ns.test.s.MIMXRT595S" name="TFM_NS_Test_S" brief="TFM Test Secure Framework" version="1.8" full_name="Middleware tfm ns test s" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m-tests" project_base_path="tf-m-tests">
      <defines>
        <define name="TFM_S_REG_TEST" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_ns_test_s.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="test/secure_fw/common_test_services/tfm_secure_client_service" type="c_include"/>
        <include_path relative_path="test/secure_fw/common_test_services/tfm_secure_client_service" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.tfmtests.ns.test.attestation.MIMXRT595S" name="TFMTESTS_NS_Test_Attestation" brief="TFM Tests Attestation Non Secure" version="1.8" full_name="Middleware tfm tests ns test attestation" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m-tests" project_base_path="tf-m-tests">
      <defines>
        <define name="TEST_NS_ATTESTATION" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="test/secure_fw/suites/attestation/ext/qcbor_util" type="src">
        <files mask="qcbor_util.c"/>
      </source>
      <source relative_path="test/secure_fw/suites/attestation/ext/qcbor_util" type="c_include">
        <files mask="qcbor_util.h"/>
      </source>
      <source relative_path="test/secure_fw/suites/attestation/non_secure" type="c_include">
        <files mask="attest_ns_tests.h"/>
      </source>
      <source relative_path="test/secure_fw/suites/attestation" type="c_include">
        <files mask="attest_token_decode.h"/>
        <files mask="attest_token_test.h"/>
        <files mask="attest_token_test_values.h"/>
        <files mask="attest_tests_common.h"/>
      </source>
      <source relative_path="test/secure_fw/suites/attestation" type="src">
        <files mask="attest_token_decode_common.c"/>
        <files mask="attest_token_test.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfmtests_ns_test_attestation.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="test/secure_fw/suites/attestation/ext/qcbor_util" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/attestation/non_secure" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/attestation" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/attestation/ext/qcbor_util" type="asm_include"/>
        <include_path relative_path="test/secure_fw/suites/attestation/non_secure" type="asm_include"/>
        <include_path relative_path="test/secure_fw/suites/attestation" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.tfm.ns.test.crypto.MIMXRT595S" name="TFM_NS_Test_Crypto" brief="TFM Test Crypto Non Secure" version="1.8" full_name="Middleware tfm ns test crypto" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m-tests" project_base_path="tf-m-tests">
      <defines>
        <define name="TEST_NS_CRYPTO" value=""/>
        <define name="TFM_PARTITION_INTERNAL_TRUSTED_STORAGE" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="test/secure_fw/suites/crypto" type="src">
        <files mask="crypto_tests_common.c"/>
      </source>
      <source relative_path="test/secure_fw/suites/crypto" type="c_include">
        <files mask="crypto_tests_common.h"/>
        <files mask="crypto_tests_check_config.h"/>
      </source>
      <source relative_path="test/secure_fw/suites/crypto/non_secure" type="src">
        <files mask="crypto_ns_interface_testsuite.c"/>
      </source>
      <source relative_path="test/secure_fw/suites/crypto/non_secure" type="c_include">
        <files mask="crypto_ns_tests.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_ns_test_crypto.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="test/secure_fw/suites/crypto" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/crypto/non_secure" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/crypto" type="asm_include"/>
        <include_path relative_path="test/secure_fw/suites/crypto/non_secure" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.tfm.ns.test.qcbor.MIMXRT595S" name="TFM_NS_Test_QCBOR" brief="TFM Test QCBOR Non Secure" version="1.8" full_name="Middleware tfm ns test qcbor" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m-tests" project_base_path="tf-m-tests">
      <defines>
        <define name="TEST_NS_QCBOR" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="test/secure_fw/suites/qcbor/non_secure" type="src">
        <files mask="qcbor_ns_testsuite.c"/>
      </source>
      <source relative_path="test/secure_fw/suites/qcbor/non_secure" type="c_include">
        <files mask="qcbor_ns_tests.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_ns_test_qcbor.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="test/secure_fw/suites/qcbor/non_secure" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/qcbor/non_secure" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.tfm.ns.test.ipc.MIMXRT595S" name="TFM_NS_Test_IPC" brief="TFM Test IPC Non Secure" version="1.8" full_name="Middleware tfm ns test ipc" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m-tests" project_base_path="tf-m-tests">
      <defines>
        <define name="TFM_PARTITION_IPC_TEST" value=""/>
        <define name="TEST_NS_IPC" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="test/secure_fw/suites/spm/common/service" type="c_include">
        <files mask="client_api_test_defs.h"/>
      </source>
      <source relative_path="test/secure_fw/suites/spm/common/suites" type="src">
        <files mask="client_api_tests.c"/>
      </source>
      <source relative_path="test/secure_fw/suites/spm/common/suites" type="c_include">
        <files mask="client_api_tests.h"/>
      </source>
      <source relative_path="test/secure_fw/suites/spm/ipc/non_secure" type="src">
        <files mask="ipc_ns_interface_testsuite.c"/>
      </source>
      <source relative_path="test/secure_fw/suites/spm/ipc/non_secure" type="c_include">
        <files mask="ipc_ns_tests.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_ns_test_ipc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="test/secure_fw/suites/spm/common/suites" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/spm/common/service" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/spm/ipc/non_secure" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/spm/common/suites" type="asm_include"/>
        <include_path relative_path="test/secure_fw/suites/spm/common/service" type="asm_include"/>
        <include_path relative_path="test/secure_fw/suites/spm/ipc/non_secure" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.tfm.ns.test.platform.MIMXRT595S" name="TFM_NS_Test_platform" brief="TFM Test Platform Non Secure" version="1.8" full_name="Middleware tfm ns test platform" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m-tests" project_base_path="tf-m-tests">
      <defines>
        <define name="TEST_NS_PLATFORM" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="test/secure_fw/suites/platform" type="src">
        <files mask="platform_tests_common.c"/>
      </source>
      <source relative_path="test/secure_fw/suites/platform" type="c_include">
        <files mask="platform_tests_common.h"/>
      </source>
      <source relative_path="test/secure_fw/suites/platform/non_secure" type="c_include">
        <files mask="platform_ns_tests.h"/>
      </source>
      <source relative_path="test/secure_fw/suites/platform/non_secure" type="src">
        <files mask="platform_ns_interface_testsuite.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_ns_test_platform.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="test/secure_fw/suites/platform" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/platform/non_secure" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/platform" type="asm_include"/>
        <include_path relative_path="test/secure_fw/suites/platform/non_secure" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.tfmtests.ns.test.tcose.MIMXRT595S" name="TFMTESTS_NS_Test_t_cose" brief="TFM Tests T_COSE Non Secure" version="1.8" full_name="Middleware tfm-tests ns test tcose" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m-tests" project_base_path="tf-m-tests">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="test/secure_fw/suites/t_cose/non_secure" type="c_include">
        <files mask="t_cose_ns_tests.h"/>
      </source>
      <source relative_path="test/secure_fw/suites/t_cose/non_secure" type="src">
        <files mask="t_cose_ns_testsuite.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfmtests_ns_test_tcose.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="test/secure_fw/suites/t_cose/non_secure" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/t_cose" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/t_cose/non_secure" type="asm_include"/>
        <include_path relative_path="test/secure_fw/suites/t_cose" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedcrypto.port.config.MIMXRT595S" name="MbedTLS MCUX SDK port config layer" brief="mbedTLS port library common files for MCUX" version="3.4.0" full_name="MbedTLS MCUX SDK port config layer" category="Security/Mbed Crypto library" user_visible="false" type="middleware" package_base_path="middleware/tfm/mbed-crypto" project_base_path="mbed-crypto">
      <defines>
        <define name="CRYPTO_HW_ACCELERATOR" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="port" type="c_include">
        <files mask="mbedcrypto_mcux_config.h"/>
        <files mask="mbedtls_accelerator_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mbedcrypto_port_config.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedcrypto.port.rng.MIMXRT595S" name="Mbed Crypto rng component" brief="mbedTLS port library for entropy for all RNG and TRNG based devices" version="3.4.0" full_name="mbedcrypto MCUX SDK port layer for RNG" category="Security/Mbed Crypto library" user_visible="false" type="middleware" package_base_path="middleware/tfm/mbed-crypto" project_base_path="mbed-crypto">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="port" type="src">
        <files mask="mbedcrypto_mcux_entropy.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mbedcrypto_port_rng.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.psatest.ns.crypto.MIMXRT595S" name="PSATEST_NS_CRYPTO" brief="PSA Test Suite Crypto Non Secure" version="1.4" full_name="Middleware psatest ns crypto" category="Security/Arm PSA Test Suite" user_visible="false" type="other" package_base_path="middleware/tfm/psa-arch-tests/api-tests" project_base_path="api-tests">
      <defines>
        <define name="CRYPTO" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="platform/targets/common/nspe/crypto" type="src">
        <files mask="pal_crypto_intf.c"/>
      </source>
      <source relative_path="platform/targets/common/nspe/crypto" type="c_include">
        <files mask="pal_crypto_intf.h"/>
      </source>
      <source relative_path="dev_apis/crypto/common" type="src">
        <files mask="test_crypto_common.c"/>
      </source>
      <source relative_path="dev_apis/crypto/common" type="c_include">
        <files mask="test_crypto_common.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c001" type="src">
        <files mask="test_c001.c"/>
        <files mask="test_entry_c001.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c001" type="c_include">
        <files mask="test_c001.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c002" type="src">
        <files mask="test_c002.c"/>
        <files mask="test_entry_c002.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c002" type="c_include">
        <files mask="test_c002.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c003" type="src">
        <files mask="test_c003.c"/>
        <files mask="test_entry_c003.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c003" type="c_include">
        <files mask="test_c003.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c004" type="src">
        <files mask="test_c004.c"/>
        <files mask="test_entry_c004.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c004" type="c_include">
        <files mask="test_c004.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c005" type="src">
        <files mask="test_c005.c"/>
        <files mask="test_entry_c005.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c005" type="c_include">
        <files mask="test_c005.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c006" type="src">
        <files mask="test_c006.c"/>
        <files mask="test_entry_c006.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c006" type="c_include">
        <files mask="test_c006.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c007" type="src">
        <files mask="test_c007.c"/>
        <files mask="test_entry_c007.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c007" type="c_include">
        <files mask="test_c007.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c008" type="src">
        <files mask="test_c008.c"/>
        <files mask="test_entry_c008.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c008" type="c_include">
        <files mask="test_c008.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c009" type="src">
        <files mask="test_c009.c"/>
        <files mask="test_entry_c009.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c009" type="c_include">
        <files mask="test_c009.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c010" type="src">
        <files mask="test_c010.c"/>
        <files mask="test_entry_c010.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c010" type="c_include">
        <files mask="test_c010.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c011" type="src">
        <files mask="test_c011.c"/>
        <files mask="test_entry_c011.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c011" type="c_include">
        <files mask="test_c011.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c012" type="src">
        <files mask="test_c012.c"/>
        <files mask="test_entry_c012.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c012" type="c_include">
        <files mask="test_c012.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c013" type="src">
        <files mask="test_c013.c"/>
        <files mask="test_entry_c013.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c013" type="c_include">
        <files mask="test_c013.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c014" type="src">
        <files mask="test_c014.c"/>
        <files mask="test_entry_c014.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c014" type="c_include">
        <files mask="test_c014.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c015" type="src">
        <files mask="test_c015.c"/>
        <files mask="test_entry_c015.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c015" type="c_include">
        <files mask="test_c015.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c016" type="src">
        <files mask="test_c016.c"/>
        <files mask="test_entry_c016.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c016" type="c_include">
        <files mask="test_c016.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c017" type="src">
        <files mask="test_c017.c"/>
        <files mask="test_entry_c017.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c017" type="c_include">
        <files mask="test_c017.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c018" type="src">
        <files mask="test_c018.c"/>
        <files mask="test_entry_c018.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c018" type="c_include">
        <files mask="test_c018.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c019" type="src">
        <files mask="test_c019.c"/>
        <files mask="test_entry_c019.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c019" type="c_include">
        <files mask="test_c019.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c020" type="src">
        <files mask="test_c020.c"/>
        <files mask="test_entry_c020.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c020" type="c_include">
        <files mask="test_c020.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c021" type="src">
        <files mask="test_c021.c"/>
        <files mask="test_entry_c021.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c021" type="c_include">
        <files mask="test_c021.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c022" type="src">
        <files mask="test_c022.c"/>
        <files mask="test_entry_c022.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c022" type="c_include">
        <files mask="test_c022.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c023" type="src">
        <files mask="test_c023.c"/>
        <files mask="test_entry_c023.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c023" type="c_include">
        <files mask="test_c023.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c024" type="src">
        <files mask="test_c024.c"/>
        <files mask="test_entry_c024.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c024" type="c_include">
        <files mask="test_c024.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c025" type="src">
        <files mask="test_c025.c"/>
        <files mask="test_entry_c025.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c025" type="c_include">
        <files mask="test_c025.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c026" type="src">
        <files mask="test_c026.c"/>
        <files mask="test_entry_c026.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c026" type="c_include">
        <files mask="test_c026.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c027" type="src">
        <files mask="test_c027.c"/>
        <files mask="test_entry_c027.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c027" type="c_include">
        <files mask="test_c027.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c028" type="src">
        <files mask="test_c028.c"/>
        <files mask="test_entry_c028.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c028" type="c_include">
        <files mask="test_c028.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c029" type="src">
        <files mask="test_c029.c"/>
        <files mask="test_entry_c029.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c029" type="c_include">
        <files mask="test_c029.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c030" type="src">
        <files mask="test_c030.c"/>
        <files mask="test_entry_c030.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c030" type="c_include">
        <files mask="test_c030.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c031" type="src">
        <files mask="test_c031.c"/>
        <files mask="test_entry_c031.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c031" type="c_include">
        <files mask="test_c031.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c032" type="src">
        <files mask="test_c032.c"/>
        <files mask="test_entry_c032.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c032" type="c_include">
        <files mask="test_c032.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c033" type="src">
        <files mask="test_c033.c"/>
        <files mask="test_entry_c033.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c033" type="c_include">
        <files mask="test_c033.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c034" type="src">
        <files mask="test_c034.c"/>
        <files mask="test_entry_c034.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c034" type="c_include">
        <files mask="test_c034.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c035" type="src">
        <files mask="test_c035.c"/>
        <files mask="test_entry_c035.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c035" type="c_include">
        <files mask="test_c035.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c036" type="src">
        <files mask="test_c036.c"/>
        <files mask="test_entry_c036.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c036" type="c_include">
        <files mask="test_c036.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c037" type="src">
        <files mask="test_c037.c"/>
        <files mask="test_entry_c037.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c037" type="c_include">
        <files mask="test_c037.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c038" type="src">
        <files mask="test_c038.c"/>
        <files mask="test_entry_c038.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c038" type="c_include">
        <files mask="test_c038.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c039" type="src">
        <files mask="test_c039.c"/>
        <files mask="test_entry_c039.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c039" type="c_include">
        <files mask="test_c039.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c040" type="src">
        <files mask="test_c040.c"/>
        <files mask="test_entry_c040.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c040" type="c_include">
        <files mask="test_c040.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c041" type="src">
        <files mask="test_c041.c"/>
        <files mask="test_entry_c041.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c041" type="c_include">
        <files mask="test_c041.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c042" type="src">
        <files mask="test_c042.c"/>
        <files mask="test_entry_c042.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c042" type="c_include">
        <files mask="test_c042.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c043" type="src">
        <files mask="test_c043.c"/>
        <files mask="test_entry_c043.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c043" type="c_include">
        <files mask="test_c043.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c044" type="src">
        <files mask="test_c044.c"/>
        <files mask="test_entry_c044.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c044" type="c_include">
        <files mask="test_c044.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c045" type="src">
        <files mask="test_c045.c"/>
        <files mask="test_entry_c045.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c045" type="c_include">
        <files mask="test_c045.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c046" type="src">
        <files mask="test_c046.c"/>
        <files mask="test_entry_c046.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c046" type="c_include">
        <files mask="test_c046.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c047" type="src">
        <files mask="test_c047.c"/>
        <files mask="test_entry_c047.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c047" type="c_include">
        <files mask="test_c047.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c048" type="src">
        <files mask="test_c048.c"/>
        <files mask="test_entry_c048.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c048" type="c_include">
        <files mask="test_c048.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c049" type="src">
        <files mask="test_c049.c"/>
        <files mask="test_entry_c049.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c049" type="c_include">
        <files mask="test_c049.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c050" type="src">
        <files mask="test_c050.c"/>
        <files mask="test_entry_c050.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c050" type="c_include">
        <files mask="test_c050.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c051" type="src">
        <files mask="test_c051.c"/>
        <files mask="test_entry_c051.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c051" type="c_include">
        <files mask="test_c051.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c052" type="src">
        <files mask="test_c052.c"/>
        <files mask="test_entry_c052.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c052" type="c_include">
        <files mask="test_c052.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c053" type="src">
        <files mask="test_c053.c"/>
        <files mask="test_entry_c053.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c053" type="c_include">
        <files mask="test_c053.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c054" type="src">
        <files mask="test_c054.c"/>
        <files mask="test_entry_c054.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c054" type="c_include">
        <files mask="test_c054.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c055" type="src">
        <files mask="test_c055.c"/>
        <files mask="test_entry_c055.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c055" type="c_include">
        <files mask="test_c055.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c056" type="src">
        <files mask="test_c056.c"/>
        <files mask="test_entry_c056.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c056" type="c_include">
        <files mask="test_c056.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c057" type="src">
        <files mask="test_c057.c"/>
        <files mask="test_entry_c057.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c057" type="c_include">
        <files mask="test_c057.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c058" type="src">
        <files mask="test_c058.c"/>
        <files mask="test_entry_c058.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c058" type="c_include">
        <files mask="test_c058.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c059" type="src">
        <files mask="test_c059.c"/>
        <files mask="test_entry_c059.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c059" type="c_include">
        <files mask="test_c059.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c060" type="src">
        <files mask="test_c060.c"/>
        <files mask="test_entry_c060.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c060" type="c_include">
        <files mask="test_c060.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c061" type="src">
        <files mask="test_c061.c"/>
        <files mask="test_entry_c061.c"/>
      </source>
      <source relative_path="dev_apis/crypto/test_c061" type="c_include">
        <files mask="test_c061.h"/>
        <files mask="test_data.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_psatest_ns_crypto.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="platform/targets/common/nspe/crypto" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/common" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c001" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c002" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c003" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c004" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c005" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c006" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c007" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c008" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c009" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c010" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c011" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c012" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c013" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c014" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c015" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c016" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c017" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c018" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c019" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c020" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c021" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c022" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c023" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c024" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c025" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c026" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c027" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c028" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c029" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c030" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c031" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c032" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c033" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c034" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c035" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c036" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c037" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c038" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c039" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c040" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c041" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c042" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c043" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c044" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c045" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c046" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c047" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c048" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c049" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c050" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c051" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c052" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c053" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c054" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c055" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c056" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c057" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c058" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c059" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c060" type="c_include"/>
        <include_path relative_path="dev_apis/crypto/test_c061" type="c_include"/>
        <include_path relative_path="platform/targets/common/nspe/crypto" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/common" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c001" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c002" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c003" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c004" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c005" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c006" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c007" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c008" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c009" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c010" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c011" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c012" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c013" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c014" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c015" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c016" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c017" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c018" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c019" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c020" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c021" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c022" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c023" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c024" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c025" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c026" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c027" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c028" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c029" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c030" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c031" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c032" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c033" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c034" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c035" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c036" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c037" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c038" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c039" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c040" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c041" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c042" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c043" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c044" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c045" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c046" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c047" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c048" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c049" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c050" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c051" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c052" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c053" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c054" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c055" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c056" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c057" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c058" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c059" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c060" type="asm_include"/>
        <include_path relative_path="dev_apis/crypto/test_c061" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.psatest.ns.t_cose.MIMXRT595S" name="PSATEST_NS_INITIAL_ATTESTATION_1" brief="PSA Test Suite Initial Attestation Non Secure part 1" version="1.4" full_name="Middleware psatest ns initial_attestation part 1" category="Security/Arm PSA Test Suite" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m" project_base_path="tf-m">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="lib/ext/t_cose/inc" type="c_include">
        <files mask="t_cose_sign1_sign.h"/>
        <files mask="t_cose_common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_psatest_ns_t_cose.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="lib/ext/t_cose/inc" type="c_include"/>
        <include_path relative_path="lib/ext/t_cose/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.psatest.ns.protected_storage.MIMXRT595S" name="PSATEST_NS_PROTECTED_STORAGE" brief="PSA Test Suite Protected Storage Non Secure" version="1.4" full_name="Middleware psatest ns protected_storage" category="Security/Arm PSA Test Suite" user_visible="false" type="other" package_base_path="middleware/tfm/psa-arch-tests/api-tests" project_base_path="api-tests">
      <defines>
        <define name="PROTECTED_STORAGE" value=""/>
        <define name="PS_TEST" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="platform/targets/common/nspe/protected_storage" type="src">
        <files mask="pal_protected_storage_intf.c"/>
      </source>
      <source relative_path="platform/targets/common/nspe/protected_storage" type="c_include">
        <files mask="pal_protected_storage_intf.h"/>
      </source>
      <source relative_path="dev_apis/storage" type="c_include">
        <files mask="test_storage_common.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s001" type="src">
        <files mask="test_s001.c"/>
        <files mask="test_entry_s001.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s001" type="c_include">
        <files mask="test_s001.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s002" type="src">
        <files mask="test_s002.c"/>
        <files mask="test_entry_s002.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s002" type="c_include">
        <files mask="test_s002.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s003" type="src">
        <files mask="test_s003.c"/>
        <files mask="test_entry_s003.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s003" type="c_include">
        <files mask="test_s003.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s004" type="src">
        <files mask="test_s004.c"/>
        <files mask="test_entry_s004.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s004" type="c_include">
        <files mask="test_s004.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s005" type="src">
        <files mask="test_s005.c"/>
        <files mask="test_entry_s005.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s005" type="c_include">
        <files mask="test_s005.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s006" type="src">
        <files mask="test_s006.c"/>
        <files mask="test_entry_s006.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s006" type="c_include">
        <files mask="test_s006.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s007" type="src">
        <files mask="test_s007.c"/>
        <files mask="test_entry_s007.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s007" type="c_include">
        <files mask="test_s007.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s008" type="src">
        <files mask="test_s008.c"/>
        <files mask="test_entry_s008.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s008" type="c_include">
        <files mask="test_s008.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s009" type="src">
        <files mask="test_s009.c"/>
        <files mask="test_entry_s009.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s009" type="c_include">
        <files mask="test_s009.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s010" type="src">
        <files mask="test_s010.c"/>
        <files mask="test_entry_s010.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s010" type="c_include">
        <files mask="test_s010.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s011" type="src">
        <files mask="test_s011.c"/>
        <files mask="test_entry_s011.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s011" type="c_include">
        <files mask="test_s011.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s012" type="src">
        <files mask="test_s012.c"/>
        <files mask="test_entry_s012.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s012" type="c_include">
        <files mask="test_s012.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s013" type="src">
        <files mask="test_s013.c"/>
        <files mask="test_entry_s013.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s013" type="c_include">
        <files mask="test_s013.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s014" type="src">
        <files mask="test_s014.c"/>
        <files mask="test_entry_s014.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s014" type="c_include">
        <files mask="test_s014.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s015" type="src">
        <files mask="test_s015.c"/>
        <files mask="test_entry_s015.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s015" type="c_include">
        <files mask="test_s015.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s016" type="src">
        <files mask="test_s016.c"/>
        <files mask="test_entry_s016.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s016" type="c_include">
        <files mask="test_s016.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s017" type="src">
        <files mask="test_s017.c"/>
        <files mask="test_entry_s017.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s017" type="c_include">
        <files mask="test_s017.h"/>
        <files mask="test_data.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_psatest_ns_protected_storage.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="platform/targets/common/nspe/protected_storage" type="c_include"/>
        <include_path relative_path="dev_apis/storage" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s001" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s002" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s003" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s004" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s005" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s006" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s007" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s008" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s009" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s010" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s011" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s012" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s013" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s014" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s015" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s016" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s017" type="c_include"/>
        <include_path relative_path="platform/targets/common/nspe/protected_storage" type="asm_include"/>
        <include_path relative_path="dev_apis/storage" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s001" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s002" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s003" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s004" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s005" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s006" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s007" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s008" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s009" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s010" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s011" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s012" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s013" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s014" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s015" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s016" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s017" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.psatest.ns.internal_trusted_storage.MIMXRT595S" name="PSATEST_NS_INTERNAL_TRUSTED_STORAGE" brief="PSA Test Suite Internal Trusted Storage Non Secure" version="1.4" full_name="Middleware psatest ns internal_trusted_storage" category="Security/Arm PSA Test Suite" user_visible="false" type="other" package_base_path="middleware/tfm/psa-arch-tests/api-tests" project_base_path="api-tests">
      <defines>
        <define name="INTERNAL_TRUSTED_STORAGE" value=""/>
        <define name="ITS_TEST" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="platform/targets/common/nspe/internal_trusted_storage" type="src">
        <files mask="pal_internal_trusted_storage_intf.c"/>
      </source>
      <source relative_path="platform/targets/common/nspe/internal_trusted_storage" type="c_include">
        <files mask="pal_internal_trusted_storage_intf.h"/>
      </source>
      <source relative_path="dev_apis/storage" type="c_include">
        <files mask="test_storage_common.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s001" type="src">
        <files mask="test_s001.c"/>
        <files mask="test_entry_s001.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s001" type="c_include">
        <files mask="test_s001.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s002" type="src">
        <files mask="test_s002.c"/>
        <files mask="test_entry_s002.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s002" type="c_include">
        <files mask="test_s002.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s003" type="src">
        <files mask="test_s003.c"/>
        <files mask="test_entry_s003.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s003" type="c_include">
        <files mask="test_s003.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s004" type="src">
        <files mask="test_s004.c"/>
        <files mask="test_entry_s004.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s004" type="c_include">
        <files mask="test_s004.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s005" type="src">
        <files mask="test_s005.c"/>
        <files mask="test_entry_s005.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s005" type="c_include">
        <files mask="test_s005.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s006" type="src">
        <files mask="test_s006.c"/>
        <files mask="test_entry_s006.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s006" type="c_include">
        <files mask="test_s006.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s007" type="src">
        <files mask="test_s007.c"/>
        <files mask="test_entry_s007.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s007" type="c_include">
        <files mask="test_s007.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s008" type="src">
        <files mask="test_s008.c"/>
        <files mask="test_entry_s008.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s008" type="c_include">
        <files mask="test_s008.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s009" type="src">
        <files mask="test_s009.c"/>
        <files mask="test_entry_s009.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s009" type="c_include">
        <files mask="test_s009.h"/>
        <files mask="test_data.h"/>
      </source>
      <source relative_path="dev_apis/storage/test_s010" type="src">
        <files mask="test_s010.c"/>
        <files mask="test_entry_s010.c"/>
      </source>
      <source relative_path="dev_apis/storage/test_s010" type="c_include">
        <files mask="test_s010.h"/>
        <files mask="test_data.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_psatest_ns_internal_trusted_storage.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="platform/targets/common/nspe/internal_trusted_storage" type="c_include"/>
        <include_path relative_path="dev_apis/storage" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s001" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s002" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s003" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s004" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s005" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s006" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s007" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s008" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s009" type="c_include"/>
        <include_path relative_path="dev_apis/storage/test_s010" type="c_include"/>
        <include_path relative_path="platform/targets/common/nspe/internal_trusted_storage" type="asm_include"/>
        <include_path relative_path="dev_apis/storage" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s001" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s002" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s003" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s004" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s005" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s006" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s007" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s008" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s009" type="asm_include"/>
        <include_path relative_path="dev_apis/storage/test_s010" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.common.MIMXRT595S" name="sdmmc_common" brief="Middleware sdmmc common" version="2.3.0" full_name="SDMMC common stack" category="Memories/SDMMC Stack" user_visible="false" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="common" type="c_include">
        <files mask="fsl_sdmmc_spec.h"/>
        <files mask="fsl_sdmmc_common.h"/>
      </source>
      <source relative_path="common" type="src">
        <files mask="fsl_sdmmc_common.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_common.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="common" type="c_include"/>
        <include_path relative_path="common" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.sdhc.template.MIMXRT595S" name="SDMMC configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="SDMMC configuration template" category="Memories/SDMMC Stack" user_visible="false" type="project_template" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="template/sdhc" config="true" type="src">
        <files mask="sdmmc_config.c"/>
      </source>
      <source relative_path="template/sdhc" config="true" type="c_include">
        <files mask="sdmmc_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_sdhc_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/sdhc" type="c_include"/>
        <include_path relative_path="template/sdhc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.sdif.template.MIMXRT595S" name="SDMMC configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="SDMMC configuration template" category="Memories/SDMMC Stack" user_visible="false" type="project_template" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="template/sdif" config="true" type="src">
        <files mask="sdmmc_config.c"/>
      </source>
      <source relative_path="template/sdif" config="true" type="c_include">
        <files mask="sdmmc_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_sdif_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/sdif" type="c_include"/>
        <include_path relative_path="template/sdif" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.usdhc.template.MIMXRT595S" name="SDMMC configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="SDMMC configuration template" category="Memories/SDMMC Stack" user_visible="false" type="project_template" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="template/usdhc" config="true" type="src">
        <files mask="sdmmc_config.c"/>
      </source>
      <source relative_path="template/usdhc" config="true" type="c_include">
        <files mask="sdmmc_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_usdhc_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/usdhc" type="c_include"/>
        <include_path relative_path="template/usdhc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.pkcs11.MIMXRT595S" name="pkcs11" brief="Public Key Cryptography Standard #11 defines generic cryptographic token interface." version="2.40.1" full_name="pkcs11" category="AWS IoT/OASIS PKCS Standard 11" user_visible="true" type="middleware" package_base_path="middleware/pkcs11" project_base_path="pkcs11">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="README.md"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="pkcs11t.h"/>
        <files mask="pkcs11f.h"/>
        <files mask="pkcs11.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_pkcs11.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.MIMXRT595S" name="multicore middleware" brief="Multicore SDK" version="2.16.0" full_name="Multicore Software Development Kit" category="Multicore/MulticoreSDK" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="multicore">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
    </component>
    <component id="middleware.mcuboot.nxp_bootutil_port.MIMXRT595S" name="mcuboot_bootutil.nxp_port" brief="NXP porting layer for MCUboot's bootutil code" version="2.0.0" full_name="NXP porting layer for MCUboot's bootutil code" category="File System/MCUboot bootloader" user_visible="false" type="middleware" package_base_path="middleware/mcuboot_opensource/boot/nxp_mcux_sdk" project_base_path="bootutil/nxp_port">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source exclude="true" relative_path="keys" type="src">
        <files mask="enc-rsa2048-priv-minimal.c"/>
        <files mask="sign-rsa2048-pub.c"/>
        <files mask="sign-ecdsa-p256-pub.c"/>
      </source>
      <source exclude="true" relative_path="keys" type="other">
        <files mask="sign-rsa2048-pub.pem" hidden="true"/>
        <files mask="sign-rsa2048-priv.pem" hidden="true"/>
        <files mask="sign-ecdsa-p256-pub.pem" hidden="true"/>
        <files mask="sign-ecdsa-p256-priv.pem" hidden="true"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="boot.c"/>
        <files mask="bootutil_hooks.c"/>
        <files mask="keys.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="boot.h"/>
      </source>
      <source relative_path="include" type="c_include">
        <files mask="flash_map.h"/>
      </source>
      <source relative_path="include/flash_map_backend" type="c_include">
        <files mask="flash_map_backend.h"/>
      </source>
      <source relative_path="include/mcuboot_config" type="c_include">
        <files mask="mcuboot_config.h"/>
        <files mask="mcuboot_logging.h"/>
      </source>
      <source relative_path="include/os" type="c_include">
        <files mask="os_malloc.h"/>
      </source>
      <source relative_path="include/sysflash" type="c_include">
        <files mask="sysflash.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mcuboot_nxp_bootutil_port.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="flashapi" type="c_include"/>
        <include_path relative_path="keys" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include/mcuboot_config" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="flashapi" type="asm_include"/>
        <include_path relative_path="keys" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
        <include_path relative_path="include/mcuboot_config" type="asm_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcuboot.stack_heap_default_mbedtls.MIMXRT595S" name="mcuboot_stack_heap_default_mbedtls" brief="MCUboot default stack/heap setup for MbedTLS" version="2.0.0" full_name="MCUboot default stack/heap setup for MbedTLS" category="File System/MCUboot bootloader" user_visible="false" type="middleware" package_base_path="middleware/mcuboot_opensource/boot/nxp_mcux_sdk" project_base_path="bootutil">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mcuboot_stack_heap_default_mbedtls.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.mcuboot.stack_heap_default_tinycrypt.MIMXRT595S" name="mcuboot_stack_heap_default_tinycrypt" brief="MCUboot default stack/heap setup for TinyCrypt" version="2.0.0" full_name="MCUboot default stack/heap setup for TinyCrypt" category="File System/MCUboot bootloader" user_visible="false" type="middleware" package_base_path="middleware/mcuboot_opensource/boot/nxp_mcux_sdk" project_base_path="bootutil">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mcuboot_stack_heap_default_tinycrypt.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.mcuboot.nxp_app_support.MIMXRT595S" name="mcuboot_app_support" brief="MCUboot application support layer" version="2.0.0" full_name="MCUboot application support layer" category="File System/MCUboot bootloader" user_visible="false" type="middleware" package_base_path="middleware/mcuboot_opensource/boot/nxp_mcux_sdk" project_base_path="bootutil/app_support">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="app_support" type="src">
        <files mask="mcuboot_app_support.c"/>
      </source>
      <source relative_path="app_support" type="c_include">
        <files mask="mcuboot_app_support.h"/>
      </source>
      <source relative_path="include/mcuboot_config" type="c_include">
        <files mask="mcuboot_config.h"/>
      </source>
      <source relative_path="include" type="c_include">
        <files mask="flash_map.h"/>
      </source>
      <source relative_path="include/sysflash" type="c_include">
        <files mask="sysflash.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mcuboot_nxp_app_support.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="app_support" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include/mcuboot_config" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="app_support" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
        <include_path relative_path="include/mcuboot_config" type="asm_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <!--<component id="middleware.mcuboot.docs.MIMXRT595S" name="mcuboot_docs" version="2.0.0" package_base_path="middleware/mcuboot_opensource" project_base_path="mcuboot">
  <source relative_path="docs" type="other">
    <files mask=".gitignore"/>
    <files mask="CNAME"/>
    <files mask="Gemfile"/>
    <files mask="Gemfile.lock"/>
    <files mask="PORTING.md"/>
    <files mask="SECURITY.md"/>
    <files mask="SubmittingPatches.md"/>
    <files mask="_config.yml"/>
    <files mask="design.md"/>
    <files mask="ecdsa.md"/>
    <files mask="encrypted_images.md"/>
    <files mask="imgtool.md"/>
    <files mask="index.md"/>
    <files mask="readme-espressif.md"/>
    <files mask="readme-mbed.md"/>
    <files mask="readme-mynewt.md"/>
    <files mask="readme-nuttx.md"/>
    <files mask="readme-riot.md"/>
    <files mask="readme-zephyr.md"/>
    <files mask="readme-nxp_mcux_sdk.md"/>
    <files mask="release-notes.md"/>
    <files mask="release.md"/>
    <files mask="serial_recovery.md"/>
    <files mask="signed_images.md"/>
    <files mask="testplan-mynewt.md"/>
    <files mask="testplan-zephyr.md"/>
  </source>
  <source relative_path="docs/release-notes.d" type="other">
    <files mask="00readme.md"/>
  </source>
</component>-->
    <!--<component id="middleware.mcuboot.scripts.MIMXRT595S" name="mcuboot_scripts" version="2.0.0" package_base_path="middleware/mcuboot_opensource" project_base_path="mcuboot">
  <source relative_path="scripts" type="script">
    <files mask="assemble.py"/>
    <files mask="flash.sh"/>
    <files mask="gdb-boot.sh"/>
    <files mask="imgtool.py"/>
    <files mask="jgdb.sh"/>
    <files mask="jl.sh"/>
    <files mask="setup.py"/>
  </source>
  <source relative_path="scripts" type="other">
    <files mask="imgtool.nix"/>
    <files mask="mcubin.bt"/>
  </source>
  <source relative_path="scripts" type="doc">
    <files mask="requirements.txt"/>
  </source>
  <source relative_path="scripts/imgtool" type="script">
    <files mask="__init__.py"/>
    <files mask="boot_record.py"/>
    <files mask="dumpinfo.py"/>
    <files mask="image.py"/>
    <files mask="main.py"/>
    <files mask="version.py"/>
  </source>
  <source relative_path="scripts/imgtool/keys" type="script">
    <files mask="__init__.py"/>
    <files mask="ecdsa.py"/>
    <files mask="ecdsa_test.py"/>
    <files mask="ed25519.py"/>
    <files mask="ed25519_test.py"/>
    <files mask="general.py"/>
    <files mask="privatebytes.py"/>
    <files mask="rsa.py"/>
    <files mask="rsa_test.py"/>
    <files mask="x25519.py"/>
  </source>
</component>-->
    <component id="middleware.mcuboot.nxp_encrypted_xip.MIMXRT595S" name="mcuboot_encrypted_xip" brief="Encrypted XIP abstraction for MCUBoot" version="1.0.0" full_name="mcuboot_encrypted_xip" category="File System/MCUboot bootloader" user_visible="false" type="middleware" package_base_path="middleware/mcuboot_opensource/ext/nxp_encrypted_xip" project_base_path="encrypted_xip">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="include" type="c_include">
        <files mask="encrypted_xip_mcuboot_support.h"/>
        <files mask="encrypted_xip.h"/>
        <files mask="encrypted_xip_platform.h"/>
      </source>
      <source relative_path="src" type="src">
        <files mask="encrypted_xip_mcuboot_support.c"/>
        <files mask="encrypted_xip.c"/>
        <files mask="encrypted_xip_platform_bee.c"/>
        <files mask="encrypted_xip_platform_iped.c"/>
        <files mask="encrypted_xip_platform_npx.c"/>
        <files mask="encrypted_xip_platform_otfad.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mcuboot_nxp_encrypted_xip.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcuboot.mbedtls-asn1.MIMXRT595S" name="mcuboot_mbedtls_asn1" brief="MCUBoot's subset of MbedTLS for ASN.1 parsing" version="2.0.0" full_name="mcuboot_mbedtls-asn1" category="File System/MCUboot bootloader" user_visible="false" type="middleware" package_base_path="middleware/mcuboot_opensource/ext/mbedtls-asn1" project_base_path="mbedtls-asn1">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="include/mbedtls" type="c_include">
        <files mask="asn1.h"/>
        <files mask="bignum.h"/>
        <files mask="build_info.h"/>
        <files mask="check_config.h"/>
        <files mask="ecdsa.h"/>
        <files mask="ecp.h"/>
        <files mask="error.h"/>
        <files mask="mbedtls_config.h"/>
        <files mask="md.h"/>
        <files mask="oid.h"/>
        <files mask="pk.h"/>
        <files mask="platform.h"/>
        <files mask="platform_util.h"/>
        <files mask="private_access.h"/>
        <files mask="rsa.h"/>
        <files mask="threading.h"/>
        <files mask="version.h"/>
      </source>
      <source relative_path="include" type="c_include">
        <files mask="common.h"/>
      </source>
      <source relative_path="src" type="src">
        <files mask="asn1parse.c"/>
        <files mask="platform_util.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mcuboot_mbedtls-asn1.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <!--<component id="middleware.mcuboot.unused_files.MIMXRT595S" name="mcuboot_unused_files" version="2.0.0" package_base_path="middleware/mcuboot_opensource" project_base_path="mcuboot">
  <source relative_path=".github/workflows" type="other">
    <files mask="espressif.yaml"/>
    <files mask="fih_tests.yaml"/>
    <files mask="imgtool.yaml"/>
    <files mask="mynewt.yaml"/>
    <files mask="sim.yaml"/>
    <files mask="stale_issue.yml"/>
    <files mask="zephyr_build.yaml"/>
  </source>
  <source relative_path="./" type="other">
    <files mask=".gitignore"/>
    <files mask=".gitmodules"/>
    <files mask=".mbedignore"/>
    <files mask=".travis.yml-disabled"/>
    <files mask="CODE_OF_CONDUCT.md"/>
    <files mask="Cargo.lock"/>
    <files mask="Cargo.toml"/>
    <files mask="NOTICE"/>
    <files mask="README.md"/>
    <files mask="enc-aes128kw.b64"/>
    <files mask="enc-aes256kw.b64"/>
    <files mask="enc-ec256-priv.pem"/>
    <files mask="enc-ec256-pub.pem"/>
    <files mask="enc-rsa2048-priv.pem"/>
    <files mask="enc-rsa2048-pub.pem"/>
    <files mask="enc-x25519-priv.pem"/>
    <files mask="enc-x25519-pub.pem"/>
    <files mask="go.mod"/>
    <files mask="project.yml"/>
    <files mask="repository.yml"/>
    <files mask="root-ec-p256-pkcs8.pem"/>
    <files mask="root-ec-p256.pem"/>
    <files mask="root-ec-p384-pkcs8.pem"/>
    <files mask="root-ec-p384.pem"/>
    <files mask="root-ed25519.pem"/>
    <files mask="root-rsa-2048.pem"/>
    <files mask="root-rsa-3072.pem"/>
  </source>
  <source relative_path="./" type="doc">
    <files mask="ChangeLogKSDK.txt"/>
    <files mask="SW-Content-Register.txt"/>
  </source>
  <source relative_path="boot/boot_serial/include/boot_serial" type="c_include">
    <files mask="boot_serial.h"/>
    <files mask="boot_serial_encryption.h"/>
  </source>
  <source relative_path="boot/boot_serial" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
  </source>
  <source relative_path="boot/boot_serial/src" type="src">
    <files mask="boot_serial.c"/>
    <files mask="boot_serial_encryption.c"/>
    <files mask="zcbor_bulk.c"/>
  </source>
  <source relative_path="boot/boot_serial/src" type="c_include">
    <files mask="boot_serial_priv.h"/>
    <files mask="zcbor_bulk.h"/>
  </source>
  <source relative_path="boot/boot_serial/test" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
  </source>
  <source relative_path="boot/boot_serial/test/src" type="src">
    <files mask="boot_test.c"/>
  </source>
  <source relative_path="boot/boot_serial/test/src" type="c_include">
    <files mask="boot_test.h"/>
  </source>
  <source relative_path="boot/boot_serial/test/src/testcases" type="src">
    <files mask="boot_serial_empty_img_msg.c"/>
    <files mask="boot_serial_empty_msg.c"/>
    <files mask="boot_serial_img_msg.c"/>
    <files mask="boot_serial_setup.c"/>
    <files mask="boot_serial_upload_bigger_image.c"/>
  </source>
  <source relative_path="boot/bootutil" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="boot/bootutil" type="other">
    <files mask="pkg.yml"/>
  </source>
  <source relative_path="boot/bootutil/zephyr" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="boot/cypress" type="other">
    <files mask=".gitignore"/>
    <files mask="Makefile"/>
    <files mask="README.md"/>
  </source>
  <source relative_path="boot/cypress/BlinkyApp" type="script">
    <files mask="BlinkyApp.mk"/>
    <files mask="libs.mk"/>
  </source>
  <source relative_path="boot/cypress/BlinkyApp" type="debug">
    <files mask="BlinkyApp_CM4_Debug.launch"/>
  </source>
  <source relative_path="boot/cypress/BlinkyApp" type="other">
    <files mask="Readme.md"/>
  </source>
  <source relative_path="boot/cypress/BlinkyApp/linker" type="linker">
    <files mask="BlinkyApp_template.ld"/>
  </source>
  <source relative_path="boot/cypress/BlinkyApp" type="src">
    <files mask="main.c"/>
  </source>
  <source relative_path="boot/cypress/BlinkyApp" type="c_include">
    <files mask="main.h"/>
  </source>
  <source relative_path="boot/cypress/MCUBootApp" type="other">
    <files mask="ExternalMemory.md"/>
    <files mask="README.md"/>
  </source>
  <source relative_path="boot/cypress/MCUBootApp" type="linker">
    <files mask="MCUBootApp.ld"/>
  </source>
  <source relative_path="boot/cypress/MCUBootApp" type="script">
    <files mask="MCUBootApp.mk"/>
    <files mask="libs.mk"/>
  </source>
  <source relative_path="boot/cypress/MCUBootApp" type="debug">
    <files mask="MCUBootApp_CM0P_Debug.launch"/>
  </source>
  <source relative_path="boot/cypress/MCUBootApp/config/mcuboot_config" type="c_include">
    <files mask="mcuboot_assert.h"/>
    <files mask="mcuboot_config.h"/>
    <files mask="mcuboot_logging.h"/>
  </source>
  <source relative_path="boot/cypress/MCUBootApp/config" type="c_include">
    <files mask="mcuboot_crypto_acc_config.h"/>
    <files mask="mcuboot_crypto_config.h"/>
  </source>
  <source relative_path="boot/cypress/MCUBootApp" type="src">
    <files mask="cy_security_cnt.c"/>
    <files mask="cy_serial_flash_prog.c"/>
    <files mask="keys.c"/>
    <files mask="main.c"/>
  </source>
  <source relative_path="boot/cypress/MCUBootApp/os" type="c_include">
    <files mask="os.h"/>
    <files mask="os_heap.h"/>
    <files mask="os_malloc.h"/>
  </source>
  <source relative_path="boot/cypress/MCUBootApp/sysflash" type="c_include">
    <files mask="sysflash.h"/>
  </source>
  <source relative_path="boot/cypress" type="script">
    <files mask="common_libs.mk"/>
    <files mask="host.mk"/>
    <files mask="platforms.mk"/>
    <files mask="toolchains.mk"/>
  </source>
  <source relative_path="boot/cypress/cy_flash_pal" type="src">
    <files mask="cy_flash_map.c"/>
    <files mask="cy_smif_psoc6.c"/>
  </source>
  <source relative_path="boot/cypress/cy_flash_pal/flash_qspi" type="src">
    <files mask="flash_qspi.c"/>
  </source>
  <source relative_path="boot/cypress/cy_flash_pal/flash_qspi" type="c_include">
    <files mask="flash_qspi.h"/>
  </source>
  <source relative_path="boot/cypress/cy_flash_pal/include" type="c_include">
    <files mask="cy_smif_psoc6.h"/>
  </source>
  <source relative_path="boot/cypress/cy_flash_pal/include/flash_map_backend" type="c_include">
    <files mask="flash_map_backend.h"/>
  </source>
  <source relative_path="boot/cypress/keys" type="other">
    <files mask="cypress-test-ec-p256.pem"/>
    <files mask="cypress-test-ec-p256.pub"/>
  </source>
  <source relative_path="boot/cypress/libs/retarget_io_pdl" type="src">
    <files mask="cy_retarget_io_pdl.c"/>
  </source>
  <source relative_path="boot/cypress/libs/retarget_io_pdl" type="c_include">
    <files mask="cy_retarget_io_pdl.h"/>
  </source>
  <source relative_path="boot/cypress/libs/watchdog" type="src">
    <files mask="watchdog.c"/>
  </source>
  <source relative_path="boot/cypress/libs/watchdog" type="c_include">
    <files mask="watchdog.h"/>
  </source>
  <source relative_path="boot/cypress/platforms/PSOC_062_2M/CM0P/GCC_ARM" type="linker">
    <files mask="cy8c6xxa_cm0plus.ld"/>
  </source>
  <source relative_path="boot/cypress/platforms/PSOC_062_2M/CM0P/GCC_ARM" type="other">
    <files mask="startup_psoc6_02_cm0plus.S"/>
  </source>
  <source relative_path="boot/cypress/platforms/PSOC_062_2M/CM4/GCC_ARM" type="linker">
    <files mask="cy8c6xxa_cm4_dual.ld"/>
  </source>
  <source relative_path="boot/cypress/platforms/PSOC_062_2M/CM4/GCC_ARM" type="other">
    <files mask="startup_psoc6_02_cm4.S"/>
  </source>
  <source relative_path="boot/cypress/platforms" type="src">
    <files mask="cycfg.c"/>
    <files mask="cycfg_clocks.c"/>
    <files mask="cycfg_peripherals.c"/>
    <files mask="cycfg_pins.c"/>
    <files mask="cycfg_routing.c"/>
    <files mask="cycfg_system.c"/>
  </source>
  <source relative_path="boot/cypress/platforms" type="c_include">
    <files mask="cycfg.h"/>
    <files mask="cycfg_clocks.h"/>
    <files mask="cycfg_peripherals.h"/>
    <files mask="cycfg_pins.h"/>
    <files mask="cycfg_routing.h"/>
    <files mask="cycfg_system.h"/>
  </source>
  <source relative_path="boot/cypress/platforms/retarget_io_pdl" type="src">
    <files mask="cy_retarget_io_pdl.c"/>
  </source>
  <source relative_path="boot/cypress/platforms/retarget_io_pdl" type="c_include">
    <files mask="cy_retarget_io_pdl.h"/>
  </source>
  <source relative_path="boot/espressif" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="boot/espressif/ci_configs" type="other">
    <files mask="multi-boot.conf"/>
    <files mask="multi-image.conf"/>
    <files mask="secureboot-sign-ec256.conf"/>
    <files mask="secureboot-sign-ed25519.conf"/>
    <files mask="secureboot-sign-rsa2048.conf"/>
    <files mask="secureboot-sign-rsa3072.conf"/>
    <files mask="serialrecovery.conf"/>
  </source>
  <source relative_path="boot/espressif/hal" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="boot/espressif/hal/include" type="c_include">
    <files mask="app_cpu_start.h"/>
    <files mask="bootloader_wdt.h"/>
    <files mask="esp_log.h"/>
    <files mask="esp_mcuboot_image.h"/>
    <files mask="soc_log.h"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32" type="script">
    <files mask="esp32.cmake"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32" type="c_include">
    <files mask="sdkconfig.h"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32c2" type="script">
    <files mask="esp32c2.cmake"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32c2" type="c_include">
    <files mask="sdkconfig.h"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32c3" type="script">
    <files mask="esp32c3.cmake"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32c3" type="c_include">
    <files mask="sdkconfig.h"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32c6" type="script">
    <files mask="esp32c6.cmake"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32c6" type="c_include">
    <files mask="sdkconfig.h"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32h2" type="script">
    <files mask="esp32h2.cmake"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32h2" type="c_include">
    <files mask="sdkconfig.h"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32s2" type="script">
    <files mask="esp32s2.cmake"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32s2" type="c_include">
    <files mask="sdkconfig.h"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32s3" type="script">
    <files mask="esp32s3.cmake"/>
  </source>
  <source relative_path="boot/espressif/hal/include/esp32s3" type="c_include">
    <files mask="sdkconfig.h"/>
  </source>
  <source relative_path="boot/espressif/hal/include/mcuboot_config" type="c_include">
    <files mask="mcuboot_assert.h"/>
    <files mask="mcuboot_config.h"/>
    <files mask="mcuboot_logging.h"/>
  </source>
  <source relative_path="boot/espressif/hal/src" type="src">
    <files mask="bootloader_banner.c"/>
    <files mask="bootloader_wdt.c"/>
    <files mask="flash_encrypt.c"/>
    <files mask="secure_boot.c"/>
  </source>
  <source relative_path="boot/espressif/hal/src/esp32" type="src">
    <files mask="app_cpu_start.c"/>
    <files mask="console_uart_custom.c"/>
  </source>
  <source relative_path="boot/espressif/hal/src/esp32c2" type="src">
    <files mask="console_uart_custom.c"/>
  </source>
  <source relative_path="boot/espressif/hal/src/esp32c3" type="src">
    <files mask="console_uart_custom.c"/>
  </source>
  <source relative_path="boot/espressif/hal/src/esp32c6" type="src">
    <files mask="console_uart_custom.c"/>
  </source>
  <source relative_path="boot/espressif/hal/src/esp32h2" type="src">
    <files mask="console_uart_custom.c"/>
  </source>
  <source relative_path="boot/espressif/hal/src/esp32s3" type="src">
    <files mask="app_cpu_start.c"/>
  </source>
  <source relative_path="boot/espressif/include/crypto_config" type="script">
    <files mask="ec256.cmake"/>
    <files mask="ed25519.cmake"/>
    <files mask="rsa.cmake"/>
  </source>
  <source relative_path="boot/espressif/include/crypto_config" type="c_include">
    <files mask="mbedtls_custom_config.h"/>
  </source>
  <source relative_path="boot/espressif/include" type="c_include">
    <files mask="esp_loader.h"/>
  </source>
  <source relative_path="boot/espressif/include/flash_map_backend" type="c_include">
    <files mask="flash_map_backend.h"/>
  </source>
  <source relative_path="boot/espressif/include/os" type="c_include">
    <files mask="os.h"/>
    <files mask="os_malloc.h"/>
  </source>
  <source relative_path="boot/espressif/include/serial_adapter" type="c_include">
    <files mask="serial_adapter.h"/>
  </source>
  <source relative_path="boot/espressif/include/sysflash" type="c_include">
    <files mask="sysflash.h"/>
  </source>
  <source relative_path="boot/espressif" type="src">
    <files mask="keys.c"/>
    <files mask="main.c"/>
    <files mask="os.c"/>
  </source>
  <source relative_path="boot/espressif/port/esp32" type="other">
    <files mask="bootloader-multi.conf"/>
    <files mask="bootloader.conf"/>
  </source>
  <source relative_path="boot/espressif/port/esp32/ld" type="linker">
    <files mask="bootloader.ld"/>
  </source>
  <source relative_path="boot/espressif/port/esp32" type="src">
    <files mask="serial_adapter.c"/>
  </source>
  <source relative_path="boot/espressif/port/esp32c2" type="other">
    <files mask="bootloader.conf"/>
  </source>
  <source relative_path="boot/espressif/port/esp32c2/ld" type="linker">
    <files mask="bootloader.ld"/>
  </source>
  <source relative_path="boot/espressif/port/esp32c2" type="src">
    <files mask="serial_adapter.c"/>
  </source>
  <source relative_path="boot/espressif/port/esp32c3" type="other">
    <files mask="bootloader.conf"/>
  </source>
  <source relative_path="boot/espressif/port/esp32c3/ld" type="linker">
    <files mask="bootloader.ld"/>
  </source>
  <source relative_path="boot/espressif/port/esp32c3" type="src">
    <files mask="serial_adapter.c"/>
  </source>
  <source relative_path="boot/espressif/port/esp32c6" type="other">
    <files mask="bootloader.conf"/>
  </source>
  <source relative_path="boot/espressif/port/esp32c6/ld" type="linker">
    <files mask="bootloader.ld"/>
  </source>
  <source relative_path="boot/espressif/port/esp32c6" type="src">
    <files mask="serial_adapter.c"/>
  </source>
  <source relative_path="boot/espressif/port/esp32h2" type="other">
    <files mask="bootloader.conf"/>
  </source>
  <source relative_path="boot/espressif/port/esp32h2/ld" type="linker">
    <files mask="bootloader.ld"/>
  </source>
  <source relative_path="boot/espressif/port/esp32h2" type="src">
    <files mask="serial_adapter.c"/>
  </source>
  <source relative_path="boot/espressif/port/esp32s2" type="other">
    <files mask="bootloader.conf"/>
  </source>
  <source relative_path="boot/espressif/port/esp32s2/ld" type="linker">
    <files mask="bootloader.ld"/>
  </source>
  <source relative_path="boot/espressif/port/esp32s2" type="src">
    <files mask="serial_adapter.c"/>
  </source>
  <source relative_path="boot/espressif/port/esp32s3" type="other">
    <files mask="bootloader-multi.conf"/>
    <files mask="bootloader.conf"/>
  </source>
  <source relative_path="boot/espressif/port/esp32s3/ld" type="linker">
    <files mask="bootloader.ld"/>
  </source>
  <source relative_path="boot/espressif/port/esp32s3" type="src">
    <files mask="serial_adapter.c"/>
  </source>
  <source relative_path="boot/espressif/port" type="src">
    <files mask="esp_loader.c"/>
    <files mask="esp_mcuboot.c"/>
  </source>
  <source relative_path="boot/espressif/tools" type="script">
    <files mask="toolchain-esp32.cmake"/>
    <files mask="toolchain-esp32c2.cmake"/>
    <files mask="toolchain-esp32c3.cmake"/>
    <files mask="toolchain-esp32c6.cmake"/>
    <files mask="toolchain-esp32h2.cmake"/>
    <files mask="toolchain-esp32s2.cmake"/>
    <files mask="toolchain-esp32s3.cmake"/>
    <files mask="utils.cmake"/>
  </source>
  <source relative_path="boot/mbed" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="boot/mbed" type="src">
    <files mask="app_enc_keys.c"/>
    <files mask="mcuboot_main.cpp"/>
  </source>
  <source relative_path="boot/mbed/include/flash_map_backend" type="c_include">
    <files mask="flash_map_backend.h"/>
    <files mask="secondary_bd.h"/>
  </source>
  <source relative_path="boot/mbed/include/mcuboot_config" type="c_include">
    <files mask="mcuboot_assert.h"/>
    <files mask="mcuboot_config.h"/>
    <files mask="mcuboot_logging.h"/>
  </source>
  <source relative_path="boot/mbed/include/os" type="c_include">
    <files mask="os_malloc.h"/>
  </source>
  <source relative_path="boot/mbed/include/sysflash" type="c_include">
    <files mask="sysflash.h"/>
  </source>
  <source relative_path="boot/mbed/include/utils" type="src">
    <files mask="DataShare.cpp"/>
  </source>
  <source relative_path="boot/mbed/include/utils" type="c_include">
    <files mask="DataShare.h"/>
  </source>
  <source relative_path="boot/mbed" type="other">
    <files mask="mbed_lib.json"/>
  </source>
  <source relative_path="boot/mbed/src" type="src">
    <files mask="flash_map_backend.cpp"/>
    <files mask="secondary_bd.cpp"/>
  </source>
  <source relative_path="boot/mynewt" type="other">
    <files mask="README.md"/>
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
  </source>
  <source relative_path="boot/mynewt/boot_uart/include/boot_uart" type="c_include">
    <files mask="boot_uart.h"/>
  </source>
  <source relative_path="boot/mynewt/boot_uart" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
  </source>
  <source relative_path="boot/mynewt/boot_uart/src" type="src">
    <files mask="boot_uart.c"/>
  </source>
  <source relative_path="boot/mynewt/flash_map_backend/include/flash_map_backend" type="c_include">
    <files mask="flash_map_backend.h"/>
  </source>
  <source relative_path="boot/mynewt/flash_map_backend" type="other">
    <files mask="pkg.yml"/>
  </source>
  <source relative_path="boot/mynewt/flash_map_backend/src" type="src">
    <files mask="flash_map_extended.c"/>
  </source>
  <source relative_path="boot/mynewt/mcuboot_config/include/mcuboot_config" type="c_include">
    <files mask="mcuboot_config.h"/>
    <files mask="mcuboot_logging.h"/>
  </source>
  <source relative_path="boot/mynewt/mcuboot_config" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
  </source>
  <source relative_path="boot/mynewt/src" type="src">
    <files mask="main.c"/>
  </source>
  <source relative_path="boot/nuttx/include/flash_map_backend" type="c_include">
    <files mask="flash_map_backend.h"/>
  </source>
  <source relative_path="boot/nuttx/include/mcuboot_config" type="c_include">
    <files mask="mcuboot_config.h"/>
    <files mask="mcuboot_logging.h"/>
  </source>
  <source relative_path="boot/nuttx/include/os" type="c_include">
    <files mask="os_malloc.h"/>
  </source>
  <source relative_path="boot/nuttx/include/sysflash" type="c_include">
    <files mask="sysflash.h"/>
  </source>
  <source relative_path="boot/nuttx/include/watchdog" type="c_include">
    <files mask="watchdog.h"/>
  </source>
  <source relative_path="boot/nuttx" type="src">
    <files mask="main.c"/>
  </source>
  <source relative_path="boot/nuttx/src/flash_map_backend" type="src">
    <files mask="flash_map_backend.c"/>
  </source>
  <source relative_path="boot/nuttx/src/watchdog" type="src">
    <files mask="watchdog.c"/>
  </source>
  <source relative_path="boot/zcbor" type="script">
    <files mask="add_zcbor_copy_version.sh"/>
  </source>
  <source relative_path="boot/zcbor/include" type="c_include">
    <files mask="zcbor_common.h"/>
    <files mask="zcbor_debug.h"/>
    <files mask="zcbor_decode.h"/>
    <files mask="zcbor_encode.h"/>
  </source>
  <source relative_path="boot/zcbor" type="other">
    <files mask="pkg.yml"/>
  </source>
  <source relative_path="boot/zcbor/src" type="src">
    <files mask="zcbor_common.c"/>
    <files mask="zcbor_decode.c"/>
    <files mask="zcbor_encode.c"/>
  </source>
  <source relative_path="boot/zephyr" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="boot/zephyr" type="other">
    <files mask="Kconfig"/>
    <files mask="Kconfig.serial_recovery"/>
    <files mask="VERSION"/>
    <files mask="app.overlay"/>
    <files mask="nrf52840dk_nrf52840_cc310_ecdsa.conf"/>
    <files mask="prj.conf"/>
    <files mask="ram_load.conf"/>
    <files mask="sample.yaml"/>
    <files mask="serial_recovery.conf"/>
    <files mask="single_slot.conf"/>
    <files mask="usb_cdc_acm.overlay"/>
    <files mask="usb_cdc_acm_log_recovery.conf"/>
  </source>
  <source relative_path="boot/zephyr" type="src">
    <files mask="arm_cleanup.c"/>
    <files mask="boot_serial_extension_zephyr_basic.c"/>
    <files mask="boot_serial_extensions.c"/>
    <files mask="flash_map_extended.c"/>
    <files mask="flash_map_legacy.c"/>
    <files mask="hooks_sample.c"/>
    <files mask="keys.c"/>
    <files mask="main.c"/>
    <files mask="os.c"/>
    <files mask="serial_adapter.c"/>
    <files mask="shared_data.c"/>
    <files mask="single_loader.c"/>
  </source>
  <source relative_path="boot/zephyr/boards" type="other">
    <files mask="actinius_icarus.conf"/>
    <files mask="bl5340_dvk_cpuapp.conf"/>
    <files mask="circuitdojo_feather_nrf9160.conf"/>
    <files mask="conexio_stratus.conf"/>
    <files mask="disco_l475_iot1.conf"/>
    <files mask="esp32_devkitc_wroom.conf"/>
    <files mask="esp32_devkitc_wrover.conf"/>
    <files mask="esp32_ethernet_kit.conf"/>
    <files mask="esp32c3_devkitm.conf"/>
    <files mask="esp32s2_franzininho.conf"/>
    <files mask="esp32s2_saola.conf"/>
    <files mask="esp32s3_devkitm.conf"/>
    <files mask="esp_wrover_kit.conf"/>
    <files mask="flash_sim_driver.conf"/>
    <files mask="frdm_k64f.conf"/>
    <files mask="heltec_wifi_lora32_v2.conf"/>
    <files mask="icev_wireless.conf"/>
    <files mask="intel_s1000_crb.conf"/>
    <files mask="intel_s1000_crb.overlay"/>
    <files mask="lpcxpresso55s06.conf"/>
    <files mask="lpcxpresso55s16.conf"/>
    <files mask="lpcxpresso55s36.conf"/>
    <files mask="lpcxpresso55s69_cpu0.conf"/>
    <files mask="m5stickc_plus.conf"/>
    <files mask="mimxrt1020_evk.conf"/>
    <files mask="mimxrt1024_evk.conf"/>
    <files mask="mimxrt1050_evk_qspi.conf"/>
    <files mask="mimxrt1060_evk.conf"/>
    <files mask="mimxrt1060_evkb.conf"/>
    <files mask="mimxrt1064_evk.conf"/>
    <files mask="mimxrt1160_evk_cm7.conf"/>
    <files mask="mimxrt1170_evk_cm7.conf"/>
    <files mask="mimxrt595_evk_cm33.conf"/>
    <files mask="mimxrt685_evk_cm33.conf"/>
    <files mask="nrf51dk_nrf51422.conf"/>
    <files mask="nrf52840_big.overlay"/>
    <files mask="nrf52840_single_slot.overlay"/>
    <files mask="nrf52840dk_hooks_sample_overlay.conf"/>
    <files mask="nrf52840dk_nrf52840.conf"/>
    <files mask="nrf52840dk_qspi_nor.conf"/>
    <files mask="nrf52840dk_qspi_nor_secondary.overlay"/>
    <files mask="nrf52840dk_qspi_secondary_boot.conf"/>
    <files mask="nrf52840dk_ram.overlay"/>
    <files mask="nrf52840dk_ram_multi.overlay"/>
    <files mask="nrf52840dongle_nrf52840.conf"/>
    <files mask="nrf52_minimal_footprint.conf"/>
    <files mask="odroid_go.conf"/>
    <files mask="olimex_esp32_evb.conf"/>
    <files mask="pinnacle_100_dvk.conf"/>
    <files mask="sparkfun_thing_plus_nrf9160.conf"/>
    <files mask="stamp_c3.conf"/>
    <files mask="tlsr9518adk80d.conf"/>
    <files mask="xiao_esp32c3.conf"/>
  </source>
  <source relative_path="boot/zephyr/include" type="c_include">
    <files mask="arm_cleanup.h"/>
    <files mask="config-asn1.h"/>
    <files mask="config-ec.h"/>
    <files mask="config-ed25519.h"/>
    <files mask="config-kw.h"/>
    <files mask="config-rsa-kw.h"/>
    <files mask="config-rsa.h"/>
    <files mask="mcuboot-mbedtls-cfg.h"/>
    <files mask="platform-bench.h"/>
    <files mask="target.h"/>
  </source>
  <source relative_path="boot/zephyr/include/boot_serial" type="linker">
    <files mask="boot_serial.ld"/>
  </source>
  <source relative_path="boot/zephyr/include/boot_serial" type="c_include">
    <files mask="boot_serial_extensions.h"/>
  </source>
  <source relative_path="boot/zephyr/include/flash_map_backend" type="c_include">
    <files mask="flash_map_backend.h"/>
  </source>
  <source relative_path="boot/zephyr/include/hal" type="c_include">
    <files mask="hal_bsp.h"/>
    <files mask="hal_flash.h"/>
  </source>
  <source relative_path="boot/zephyr/include/mcuboot_config" type="c_include">
    <files mask="mcuboot_config.h"/>
    <files mask="mcuboot_logging.h"/>
  </source>
  <source relative_path="boot/zephyr/include/os" type="c_include">
    <files mask="os.h"/>
    <files mask="os_heap.h"/>
    <files mask="os_malloc.h"/>
  </source>
  <source relative_path="boot/zephyr/include/serial_adapter" type="c_include">
    <files mask="serial_adapter.h"/>
  </source>
  <source relative_path="boot/zephyr/include/sysflash" type="c_include">
    <files mask="sysflash.h"/>
  </source>
  <source relative_path="boot/zephyr/targets" type="c_include">
    <files mask="arduino_101.h"/>
  </source>
  <source relative_path="ci" type="script">
    <files mask="check-signed-off-by.sh"/>
    <files mask="compare_versions.py"/>
    <files mask="espressif_install.sh"/>
    <files mask="espressif_run.sh"/>
    <files mask="fih-tests_install.sh"/>
    <files mask="fih-tests_run.sh"/>
    <files mask="get_features.py"/>
    <files mask="imgtool_install.sh"/>
    <files mask="imgtool_run.sh"/>
    <files mask="mynewt_install.sh"/>
    <files mask="mynewt_run.sh"/>
    <files mask="sim_install.sh"/>
    <files mask="sim_run.sh"/>
  </source>
  <source relative_path="ci/fih_test_docker" type="script">
    <files mask="damage_image.py"/>
    <files mask="execute_test.sh"/>
    <files mask="fi_make_manifest.sh"/>
    <files mask="fi_tester_gdb.sh"/>
    <files mask="generate_test_report.py"/>
    <files mask="run_fi_test.sh"/>
    <files mask="utils.py"/>
    <files mask="validate_output.py"/>
  </source>
  <source relative_path="ci/fih_test_docker/docker-build" type="other">
    <files mask="Dockerfile"/>
  </source>
  <source relative_path="ci/fih_test_docker/docker-build" type="script">
    <files mask="build.sh"/>
  </source>
  <source relative_path="ci/mynewt_keys/enc_kw" type="other">
    <files mask="pkg.yml"/>
  </source>
  <source relative_path="ci/mynewt_keys/enc_kw/src" type="src">
    <files mask="keys.c"/>
  </source>
  <source relative_path="ci/mynewt_keys/enc_rsa" type="other">
    <files mask="pkg.yml"/>
  </source>
  <source relative_path="ci/mynewt_keys/enc_rsa/src" type="src">
    <files mask="keys.c"/>
  </source>
  <source relative_path="ci/mynewt_targets/basic" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
    <files mask="target.yml"/>
  </source>
  <source relative_path="ci/mynewt_targets/bootserial" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
    <files mask="target.yml"/>
  </source>
  <source relative_path="ci/mynewt_targets/ecdsa" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
    <files mask="target.yml"/>
  </source>
  <source relative_path="ci/mynewt_targets/ecdsa_kw" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
    <files mask="target.yml"/>
  </source>
  <source relative_path="ci/mynewt_targets/rsa" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
    <files mask="target.yml"/>
  </source>
  <source relative_path="ci/mynewt_targets/rsa_kw" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
    <files mask="target.yml"/>
  </source>
  <source relative_path="ci/mynewt_targets/rsa_overwriteonly" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
    <files mask="target.yml"/>
  </source>
  <source relative_path="ci/mynewt_targets/rsa_rsaoaep" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
    <files mask="target.yml"/>
  </source>
  <source relative_path="ci/mynewt_targets/rsa_rsaoaep_bootstrap" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
    <files mask="target.yml"/>
  </source>
  <source relative_path="ci/mynewt_targets/swap_move" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
    <files mask="target.yml"/>
  </source>
  <source relative_path="ci" type="doc">
    <files mask="requirements.txt"/>
  </source>
  <source relative_path="ext/fiat" type="other">
    <files mask="LICENSE"/>
    <files mask="METADATA"/>
    <files mask="README.chromium"/>
    <files mask="README.md"/>
    <files mask="pkg.yml"/>
  </source>
  <source relative_path="ext/fiat/src" type="src">
    <files mask="curve25519.c"/>
  </source>
  <source relative_path="ext/fiat/src" type="c_include">
    <files mask="curve25519.h"/>
    <files mask="curve25519_tables.h"/>
  </source>
  <source relative_path="ext/mbedtls-asn1" type="other">
    <files mask="README"/>
    <files mask="pkg.yml"/>
  </source>
  <source relative_path="ext/nrf" type="other">
    <files mask="README.md"/>
  </source>
  <source relative_path="ext/nrf" type="src">
    <files mask="cc310_glue.c"/>
  </source>
  <source relative_path="ext/nrf" type="c_include">
    <files mask="cc310_glue.h"/>
  </source>
  <source relative_path="ext/nxp_encrypted_xip/enc_xip_images" type="image">
    <files mask="three_slot_flow.jpg"/>
    <files mask="three_slot.jpg"/>
    <files mask="overwrite_only_flow.jpg"/>
    <files mask="overwrite_only.jpg"/>
    <files mask="keys_scheme.jpg"/>
    <files mask="iped_metadata.jpg"/>
    <files mask="general_metadata.jpg"/>
    <files mask="device_fleet_graph.jpg"/>
    <files mask="bee_rom_layout.jpg"/>
    <files mask="bee_metadata.jpg"/>
  </source>
  <source relative_path="ext/nxp_encrypted_xip" type="other">
    <files mask="mcuboot_encrypted_xip.md"/>
  </source>
  <source relative_path="ext/tinycrypt-sha512/lib/include/tinycrypt" type="c_include">
    <files mask="sha512.h"/>
  </source>
  <source relative_path="ext/tinycrypt-sha512/lib" type="other">
    <files mask="pkg.yml"/>
  </source>
  <source relative_path="ext/tinycrypt-sha512/lib/source" type="src">
    <files mask="sha512.c"/>
  </source>
  <source relative_path="ext/tinycrypt" type="other">
    <files mask=".gitignore"/>
    <files mask="AUTHORS"/>
    <files mask="LICENSE"/>
    <files mask="Makefile"/>
    <files mask="README"/>
    <files mask="VERSION"/>
  </source>
  <source relative_path="ext/tinycrypt" type="script">
    <files mask="config.mk"/>
  </source>
  <source relative_path="ext/tinycrypt/documentation" type="other">
    <files mask="tinycrypt.rst"/>
  </source>
  <source relative_path="ext/tinycrypt/lib" type="other">
    <files mask="Makefile"/>
    <files mask="pkg.yml"/>
  </source>
  <source relative_path="ext/tinycrypt/lib/include/tinycrypt" type="c_include">
    <files mask="ecc_dh.h"/>
  </source>
  <source relative_path="ext/tinycrypt/lib/source" type="src">
    <files mask="ecc_platform_specific.c"/>
    <files mask="ecc_dh.c"/>
  </source>
  <source relative_path="ext/tinycrypt/tests" type="other">
    <files mask="Makefile"/>
  </source>
  <source relative_path="ext/tinycrypt/tests/include" type="c_include">
    <files mask="test_ecc_utils.h"/>
    <files mask="test_utils.h"/>
  </source>
  <source relative_path="ext/tinycrypt/tests" type="binary">
    <files mask="pseudo-random-data.bin"/>
  </source>
  <source relative_path="ext/tinycrypt/tests" type="src">
    <files mask="test_aes.c"/>
    <files mask="test_cbc_mode.c"/>
    <files mask="test_ccm_mode.c"/>
    <files mask="test_cmac_mode.c"/>
    <files mask="test_ctr_mode.c"/>
    <files mask="test_ctr_prng.c"/>
    <files mask="test_ecc_dh.c"/>
    <files mask="test_ecc_dsa.c"/>
    <files mask="test_ecc_utils.c"/>
    <files mask="test_hmac.c"/>
    <files mask="test_hmac_prng.c"/>
    <files mask="test_sha256.c"/>
  </source>
  <source relative_path="ptest" type="other">
    <files mask=".gitignore"/>
    <files mask="Cargo.lock"/>
    <files mask="Cargo.toml"/>
  </source>
  <source relative_path="ptest/src" type="other">
    <files mask="main.rs"/>
  </source>
  <source relative_path="samples/mcuboot_config" type="c_include">
    <files mask="mcuboot_config.template.h"/>
  </source>
  <source relative_path="samples/zephyr" type="other">
    <files mask=".gitignore"/>
    <files mask="Makefile"/>
    <files mask="README.md"/>
    <files mask="overlay-ecdsa-p256.conf"/>
    <files mask="overlay-rsa.conf"/>
    <files mask="overlay-skip-primary-slot-validate.conf"/>
    <files mask="overlay-upgrade-only.conf"/>
    <files mask="run-tests.go"/>
    <files mask="test-compile.go"/>
  </source>
  <source relative_path="samples/zephyr/bad-keys" type="other">
    <files mask="README.md"/>
    <files mask="bad-ec-p256.pem"/>
    <files mask="bad-rsa-2048.pem"/>
  </source>
  <source relative_path="samples/zephyr" type="script">
    <files mask="build-boot.sh"/>
    <files mask="build-hello.sh"/>
    <files mask="run-tests.sh"/>
  </source>
  <source relative_path="samples/zephyr/hello-world" type="doc">
    <files mask="CMakeLists.txt"/>
  </source>
  <source relative_path="samples/zephyr/hello-world" type="other">
    <files mask="README.rst"/>
    <files mask="prj.conf"/>
    <files mask="sample.yaml"/>
  </source>
  <source relative_path="samples/zephyr/hello-world/boards" type="other">
    <files mask=".gitignore"/>
    <files mask="README.rst"/>
  </source>
  <source relative_path="samples/zephyr/hello-world/src" type="other">
    <files mask="Makefile"/>
  </source>
  <source relative_path="samples/zephyr/hello-world/src" type="src">
    <files mask="main.c"/>
  </source>
  <source relative_path="samples/zephyr/mcutests" type="other">
    <files mask="mcutests.go"/>
  </source>
  <source relative_path="sim" type="other">
    <files mask=".gitignore"/>
    <files mask="Cargo.toml"/>
    <files mask="README.rst"/>
  </source>
  <source relative_path="sim/mcuboot-sys" type="other">
    <files mask=".gitignore"/>
    <files mask="Cargo.toml"/>
    <files mask="build.rs"/>
  </source>
  <source relative_path="sim/mcuboot-sys/csupport" type="c_include">
    <files mask="bootsim.h"/>
    <files mask="config-add-psa-crypto.h"/>
    <files mask="config-asn1.h"/>
    <files mask="config-ec-psa.h"/>
    <files mask="config-ec.h"/>
    <files mask="config-ed25519.h"/>
    <files mask="config-kw.h"/>
    <files mask="config-rsa-kw.h"/>
    <files mask="config-rsa.h"/>
    <files mask="devicetree.h"/>
  </source>
  <source relative_path="sim/mcuboot-sys/csupport/flash_map_backend" type="c_include">
    <files mask="flash_map_backend.h"/>
  </source>
  <source relative_path="sim/mcuboot-sys/csupport" type="src">
    <files mask="keys.c"/>
    <files mask="psa_crypto_init_stub.c"/>
    <files mask="run.c"/>
    <files mask="security_cnt.c"/>
  </source>
  <source relative_path="sim/mcuboot-sys/csupport/mcuboot_config" type="c_include">
    <files mask="mcuboot_assert.h"/>
    <files mask="mcuboot_config.h"/>
    <files mask="mcuboot_logging.h"/>
  </source>
  <source relative_path="sim/mcuboot-sys/csupport/os" type="c_include">
    <files mask="os_heap.h"/>
    <files mask="os_malloc.h"/>
  </source>
  <source relative_path="sim/mcuboot-sys/csupport/storage" type="c_include">
    <files mask="flash_map.h"/>
  </source>
  <source relative_path="sim/mcuboot-sys/csupport/sysflash" type="c_include">
    <files mask="sysflash.h"/>
  </source>
  <source relative_path="sim/mcuboot-sys/src" type="other">
    <files mask="api.rs"/>
    <files mask="area.rs"/>
    <files mask="c.rs"/>
    <files mask="lib.rs"/>
  </source>
  <source relative_path="sim/simflash" type="other">
    <files mask=".gitignore"/>
    <files mask="Cargo.toml"/>
  </source>
  <source relative_path="sim/simflash/src" type="other">
    <files mask="lib.rs"/>
    <files mask="pdump.rs"/>
  </source>
  <source relative_path="sim/src" type="other">
    <files mask="caps.rs"/>
    <files mask="depends.rs"/>
    <files mask="image.rs"/>
    <files mask="lib.rs"/>
    <files mask="main.rs"/>
    <files mask="testlog.rs"/>
    <files mask="tlv.rs"/>
    <files mask="utils.rs"/>
  </source>
  <source relative_path="sim/src" type="doc">
    <files mask="ecdsa_pub_key-rs.txt"/>
    <files mask="ed25519_pub_key-rs.txt"/>
    <files mask="rsa3072_pub_key-rs.txt"/>
    <files mask="rsa_pub_key-rs.txt"/>
  </source>
  <source relative_path="sim/tests" type="other">
    <files mask="core.rs"/>
  </source>
  <source relative_path="testplan/mynewt" type="other">
    <files mask="Makefile"/>
    <files mask="key_ec.pem"/>
    <files mask="key_ec256.pem"/>
    <files mask="key_ec256_2.pem"/>
    <files mask="key_ec_2.pem"/>
    <files mask="key_rsa.pem"/>
    <files mask="key_rsa_2.pem"/>
    <files mask="project.yml"/>
  </source>
  <source relative_path="testplan/mynewt/apps/blinky" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
  </source>
  <source relative_path="testplan/mynewt/apps/blinky/src" type="src">
    <files mask="main.c"/>
  </source>
  <source relative_path="testplan/mynewt/apps/slinky" type="other">
    <files mask="pkg.yml"/>
    <files mask="syscfg.yml"/>
  </source>
  <source relative_path="testplan/mynewt/apps/slinky/src" type="src">
    <files mask="main.c"/>
    <files mask="random_data.c"/>
  </source>
  <source relative_path="testplan/mynewt/keys/ec256" type="other">
    <files mask="pkg.yml"/>
  </source>
  <source relative_path="testplan/mynewt/keys/ec256/src" type="src">
    <files mask="keys.c"/>
  </source>
  <source relative_path="testplan/mynewt/keys" type="other">
    <files mask="pkg.yml"/>
  </source>
  <source relative_path="testplan/mynewt/keys/rsa" type="other">
    <files mask="pkg.yml"/>
  </source>
  <source relative_path="testplan/mynewt/keys/rsa/src" type="src">
    <files mask="keys.c"/>
  </source>
  <source relative_path="zephyr" type="other">
    <files mask="module.yml"/>
  </source>
</component>-->
    <component id="middleware.mbedtls.port.els_option.MIMXRT595S" name="mbedtls_els_option" brief="mbedTLS port library for ELS" version="2.28.8" full_name="MbedTLS MCUX SDK port layer via ELS" category="Security/mbedTLS library" user_visible="true" type="middleware" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
    </component>
    <component id="middleware.mbedtls.port.ksdk_option.MIMXRT595S" name="mbedtls_ksdk_option" brief="mbedTLS port library for KPSDK" version="2.28.8" full_name="MbedTLS MCUX SDK port layer option" category="Security/mbedTLS library" user_visible="true" type="middleware" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
    </component>
    <!--<component id="container.middleware.mbedtls.unused_files.MIMXRT595S" name="unused_files" version="2.28.8" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
  <source exclude="true" relative_path=".github" type="other">
    <files mask="issue_template.md" hidden="true"/>
    <files mask="pull_request_template.md" hidden="true"/>
  </source>
  <source exclude="true" relative_path="3rdparty" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="3rdparty" type="asm_include">
    <files mask="Makefile.inc" hidden="true"/>
  </source>
  <source exclude="true" relative_path="ChangeLog.d" type="other">
    <files mask="00README.md" hidden="true"/>
  </source>
  <source exclude="true" relative_path="configs" type="doc">
    <files mask="README.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="configs" type="c_include">
    <files mask="config-ccm-psk-dtls1_2.h" hidden="true"/>
    <files mask="config-ccm-psk-tls1_2.h" hidden="true"/>
    <files mask="config-mini-tls1_1.h" hidden="true"/>
    <files mask="config-no-entropy.h" hidden="true"/>
    <files mask="config-suite-b.h" hidden="true"/>
    <files mask="config-symmetric-only.h" hidden="true"/>
    <files mask="config-thread.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="docs" type="script">
    <files mask="conf.py" hidden="true"/>
  </source>
  <source exclude="true" relative_path="docs" type="other">
    <files mask="index.rst" hidden="true"/>
    <files mask="requirements.in" hidden="true"/>
    <files mask="use-psa-crypto.md" hidden="true"/>
  </source>
  <source exclude="true" relative_path="docs" type="doc">
    <files mask="requirements.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="doxygen" type="other">
    <files mask="mbedtls.doxyfile" hidden="true"/>
  </source>
  <source exclude="true" relative_path="doxygen/input" type="c_include">
    <files mask="doc_encdec.h" hidden="true"/>
    <files mask="doc_hashing.h" hidden="true"/>
    <files mask="doc_mainpage.h" hidden="true"/>
    <files mask="doc_rng.h" hidden="true"/>
    <files mask="doc_ssltls.h" hidden="true"/>
    <files mask="doc_tcpip.h" hidden="true"/>
    <files mask="doc_x509.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="include" type="other">
    <files mask=".gitignore" hidden="true"/>
  </source>
  <source exclude="true" relative_path="include" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="library" type="other">
    <files mask=".gitignore" hidden="true"/>
    <files mask="Makefile" hidden="true"/>
  </source>
  <source exclude="true" relative_path="library" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="pkgconfig" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="pkgconfig" type="script">
    <files mask="JoinPaths.cmake" hidden="true"/>
  </source>
  <source exclude="true" relative_path="pkgconfig" type="other">
    <files mask="mbedcrypto.pc.in" hidden="true"/>
    <files mask="mbedtls.pc.in" hidden="true"/>
    <files mask="mbedx509.pc.in" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs" type="other">
    <files mask="README.md" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs" type="script">
    <files mask="demo_common.sh" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs" type="src">
    <files mask="wince_main.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/aes" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/aes" type="src">
    <files mask="crypt_and_hash.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/fuzz" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/fuzz" type="other">
    <files mask="README.md" hidden="true"/>
    <files mask="fuzz_client.options" hidden="true"/>
    <files mask="fuzz_dtlsclient.options" hidden="true"/>
    <files mask="fuzz_dtlsserver.options" hidden="true"/>
    <files mask="fuzz_privkey.options" hidden="true"/>
    <files mask="fuzz_pubkey.options" hidden="true"/>
    <files mask="fuzz_server.options" hidden="true"/>
    <files mask="fuzz_x509crl.options" hidden="true"/>
    <files mask="fuzz_x509crt.options" hidden="true"/>
    <files mask="fuzz_x509csr.options" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/fuzz" type="src">
    <files mask="common.c" hidden="true"/>
    <files mask="fuzz_client.c" hidden="true"/>
    <files mask="fuzz_dtlsclient.c" hidden="true"/>
    <files mask="fuzz_dtlsserver.c" hidden="true"/>
    <files mask="fuzz_privkey.c" hidden="true"/>
    <files mask="fuzz_pubkey.c" hidden="true"/>
    <files mask="fuzz_server.c" hidden="true"/>
    <files mask="fuzz_x509crl.c" hidden="true"/>
    <files mask="fuzz_x509crt.c" hidden="true"/>
    <files mask="fuzz_x509csr.c" hidden="true"/>
    <files mask="onefile.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/fuzz" type="c_include">
    <files mask="common.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/hash" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/hash" type="src">
    <files mask="generic_sum.c" hidden="true"/>
    <files mask="hello.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/pkey" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
    <files mask="dh_prime.txt" hidden="true"/>
    <files mask="rsa_priv.txt" hidden="true"/>
    <files mask="rsa_pub.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/pkey" type="src">
    <files mask="dh_client.c" hidden="true"/>
    <files mask="dh_genprime.c" hidden="true"/>
    <files mask="dh_server.c" hidden="true"/>
    <files mask="ecdh_curve25519.c" hidden="true"/>
    <files mask="ecdsa.c" hidden="true"/>
    <files mask="gen_key.c" hidden="true"/>
    <files mask="key_app.c" hidden="true"/>
    <files mask="key_app_writer.c" hidden="true"/>
    <files mask="mpi_demo.c" hidden="true"/>
    <files mask="pk_decrypt.c" hidden="true"/>
    <files mask="pk_encrypt.c" hidden="true"/>
    <files mask="pk_sign.c" hidden="true"/>
    <files mask="pk_verify.c" hidden="true"/>
    <files mask="rsa_decrypt.c" hidden="true"/>
    <files mask="rsa_encrypt.c" hidden="true"/>
    <files mask="rsa_genkey.c" hidden="true"/>
    <files mask="rsa_sign.c" hidden="true"/>
    <files mask="rsa_sign_pss.c" hidden="true"/>
    <files mask="rsa_verify.c" hidden="true"/>
    <files mask="rsa_verify_pss.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/random" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/random" type="src">
    <files mask="gen_entropy.c" hidden="true"/>
    <files mask="gen_random_ctr_drbg.c" hidden="true"/>
    <files mask="gen_random_havege.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/ssl" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/ssl" type="src">
    <files mask="dtls_client.c" hidden="true"/>
    <files mask="dtls_server.c" hidden="true"/>
    <files mask="mini_client.c" hidden="true"/>
    <files mask="ssl_client1.c" hidden="true"/>
    <files mask="ssl_client2.c" hidden="true"/>
    <files mask="ssl_context_info.c" hidden="true"/>
    <files mask="ssl_fork_server.c" hidden="true"/>
    <files mask="ssl_mail_client.c" hidden="true"/>
    <files mask="ssl_pthread_server.c" hidden="true"/>
    <files mask="ssl_server.c" hidden="true"/>
    <files mask="ssl_server2.c" hidden="true"/>
    <files mask="ssl_test_common_source.c" hidden="true"/>
    <files mask="ssl_test_lib.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/ssl" type="c_include">
    <files mask="ssl_test_lib.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/test" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/test" type="src">
    <files mask="benchmark.c" hidden="true"/>
    <files mask="dlopen.c" hidden="true"/>
    <files mask="metatest.c" hidden="true"/>
    <files mask="query_compile_time_config.c" hidden="true"/>
    <files mask="query_config.c" hidden="true"/>
    <files mask="selftest.c" hidden="true"/>
    <files mask="udp_proxy.c" hidden="true"/>
    <files mask="zeroize.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/test" type="script">
    <files mask="dlopen_demo.sh" hidden="true"/>
    <files mask="generate_cpp_dummy_build.sh" hidden="true"/>
    <files mask="udp_proxy_wrapper.sh" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/test" type="c_include">
    <files mask="query_config.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/util" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/util" type="src">
    <files mask="pem2der.c" hidden="true"/>
    <files mask="strerror.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/x509" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="programs/x509" type="src">
    <files mask="cert_app.c" hidden="true"/>
    <files mask="cert_req.c" hidden="true"/>
    <files mask="cert_write.c" hidden="true"/>
    <files mask="crl_app.c" hidden="true"/>
    <files mask="load_roots.c" hidden="true"/>
    <files mask="req_app.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="scripts" type="script">
    <files mask="abi_check.py" hidden="true"/>
    <files mask="apidoc_full.sh" hidden="true"/>
    <files mask="assemble_changelog.py" hidden="true"/>
    <files mask="bump_version.sh" hidden="true"/>
    <files mask="code_style.py" hidden="true"/>
    <files mask="config.py" hidden="true"/>
    <files mask="ecc-heap.sh" hidden="true"/>
    <files mask="footprint.sh" hidden="true"/>
    <files mask="generate_psa_constants.py" hidden="true"/>
    <files mask="lcov.sh" hidden="true"/>
    <files mask="memory.sh" hidden="true"/>
    <files mask="min_requirements.py" hidden="true"/>
    <files mask="output_env.sh" hidden="true"/>
    <files mask="tmp_ignore_makefiles.sh" hidden="true"/>
    <files mask="windows_msbuild.bat" hidden="true"/>
  </source>
  <source exclude="true" relative_path="scripts" type="doc">
    <files mask="ci.requirements.txt" hidden="true"/>
    <files mask="maintainer.requirements.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="scripts" type="other">
    <files mask="config.pl" hidden="true"/>
    <files mask="generate_errors.pl" hidden="true"/>
    <files mask="generate_features.pl" hidden="true"/>
    <files mask="generate_query_config.pl" hidden="true"/>
    <files mask="generate_visualc_files.pl" hidden="true"/>
    <files mask="massif_max.pl" hidden="true"/>
    <files mask="rename.pl" hidden="true"/>
  </source>
  <source exclude="true" relative_path="scripts/data_files" type="other">
    <files mask="error.fmt" hidden="true"/>
    <files mask="query_config.fmt" hidden="true"/>
    <files mask="version_features.fmt" hidden="true"/>
    <files mask="vs2010-app-template.vcxproj" hidden="true"/>
    <files mask="vs2010-main-template.vcxproj" hidden="true"/>
    <files mask="vs2010-sln-template.sln" hidden="true"/>
    <files mask="vs6-app-template.dsp" hidden="true"/>
    <files mask="vs6-main-template.dsp" hidden="true"/>
    <files mask="vs6-workspace-template.dsw" hidden="true"/>
  </source>
  <source exclude="true" relative_path="scripts/data_files" type="doc">
    <files mask="rename-1.3-2.0.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="scripts/mbedtls_dev" type="script">
    <files mask="__init__.py" hidden="true"/>
    <files mask="asymmetric_key_data.py" hidden="true"/>
    <files mask="build_tree.py" hidden="true"/>
    <files mask="c_build_helper.py" hidden="true"/>
    <files mask="c_parsing_helper.py" hidden="true"/>
    <files mask="c_wrapper_generator.py" hidden="true"/>
    <files mask="crypto_data_tests.py" hidden="true"/>
    <files mask="crypto_knowledge.py" hidden="true"/>
    <files mask="macro_collector.py" hidden="true"/>
    <files mask="psa_information.py" hidden="true"/>
    <files mask="psa_storage.py" hidden="true"/>
    <files mask="test_case.py" hidden="true"/>
    <files mask="test_data_generation.py" hidden="true"/>
    <files mask="typing_util.py" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests" type="other">
    <files mask="Makefile" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/.jenkins" type="other">
    <files mask="Jenkinsfile" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/data_files" type="other">
    <files mask="Makefile" hidden="true"/>
    <files mask="hash_file_1" hidden="true"/>
    <files mask="hash_file_2" hidden="true"/>
    <files mask="hash_file_3" hidden="true"/>
    <files mask="hash_file_4" hidden="true"/>
    <files mask="hash_file_5" hidden="true"/>
    <files mask="mpi_16" hidden="true"/>
    <files mask="mpi_too_big" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/data_files/dir3" type="other">
    <files mask="Readme" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/data_files/dir4" type="other">
    <files mask="Readme" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/git-scripts" type="other">
    <files mask="README.md" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/git-scripts" type="script">
    <files mask="pre-commit.sh" hidden="true"/>
    <files mask="pre-push.sh" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/scripts" type="script">
    <files mask="all-in-docker.sh" hidden="true"/>
    <files mask="all.sh" hidden="true"/>
    <files mask="analyze_outcomes.py" hidden="true"/>
    <files mask="basic-build-test.sh" hidden="true"/>
    <files mask="basic-in-docker.sh" hidden="true"/>
    <files mask="check-generated-files.sh" hidden="true"/>
    <files mask="check-python-files.sh" hidden="true"/>
    <files mask="check_files.py" hidden="true"/>
    <files mask="check_names.py" hidden="true"/>
    <files mask="check_test_cases.py" hidden="true"/>
    <files mask="depends.py" hidden="true"/>
    <files mask="docker_env.sh" hidden="true"/>
    <files mask="doxygen.sh" hidden="true"/>
    <files mask="generate-afl-tests.sh" hidden="true"/>
    <files mask="generate_bignum_tests.py" hidden="true"/>
    <files mask="generate_psa_tests.py" hidden="true"/>
    <files mask="generate_psa_wrappers.py" hidden="true"/>
    <files mask="generate_server9_bad_saltlen.py" hidden="true"/>
    <files mask="generate_test_code.py" hidden="true"/>
    <files mask="list-identifiers.sh" hidden="true"/>
    <files mask="list_internal_identifiers.py" hidden="true"/>
    <files mask="psa_collect_statuses.py" hidden="true"/>
    <files mask="run-metatests.sh" hidden="true"/>
    <files mask="run_demos.py" hidden="true"/>
    <files mask="scripts_path.py" hidden="true"/>
    <files mask="set_psa_test_dependencies.py" hidden="true"/>
    <files mask="test_config_script.py" hidden="true"/>
    <files mask="test_generate_test_code.py" hidden="true"/>
    <files mask="test_psa_compliance.py" hidden="true"/>
    <files mask="test_psa_constant_names.py" hidden="true"/>
    <files mask="travis-log-failure.sh" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/scripts" type="other">
    <files mask="check-doxy-blocks.pl" hidden="true"/>
    <files mask="gen_ctr_drbg.pl" hidden="true"/>
    <files mask="gen_gcm_decrypt.pl" hidden="true"/>
    <files mask="gen_gcm_encrypt.pl" hidden="true"/>
    <files mask="gen_pkcs1_v21_sign_verify.pl" hidden="true"/>
    <files mask="recursion.pl" hidden="true"/>
    <files mask="run-test-suites.pl" hidden="true"/>
    <files mask="tcp_client.pl" hidden="true"/>
    <files mask="test-ref-configs.pl" hidden="true"/>
    <files mask="test_zeroize.gdb" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/src" type="src">
    <files mask="asn1_helpers.c" hidden="true"/>
    <files mask="fake_external_rng_for_test.c" hidden="true"/>
    <files mask="helpers.c" hidden="true"/>
    <files mask="psa_crypto_helpers.c" hidden="true"/>
    <files mask="psa_exercise_key.c" hidden="true"/>
    <files mask="psa_memory_poisoning_wrappers.c" hidden="true"/>
    <files mask="psa_test_wrappers.c" hidden="true"/>
    <files mask="random.c" hidden="true"/>
    <files mask="test_memory.c" hidden="true"/>
    <files mask="threading_helpers.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="tests/suites" type="other">
    <files mask="helpers.function" hidden="true"/>
    <files mask="host_test.function" hidden="true"/>
    <files mask="main_test.function" hidden="true"/>
    <files mask="test_suite_aes.cbc.data" hidden="true"/>
    <files mask="test_suite_aes.cfb.data" hidden="true"/>
    <files mask="test_suite_aes.ecb.data" hidden="true"/>
    <files mask="test_suite_aes.function" hidden="true"/>
    <files mask="test_suite_aes.ofb.data" hidden="true"/>
    <files mask="test_suite_aes.rest.data" hidden="true"/>
    <files mask="test_suite_aes.xts.data" hidden="true"/>
    <files mask="test_suite_arc4.data" hidden="true"/>
    <files mask="test_suite_arc4.function" hidden="true"/>
    <files mask="test_suite_aria.data" hidden="true"/>
    <files mask="test_suite_aria.function" hidden="true"/>
    <files mask="test_suite_asn1parse.data" hidden="true"/>
    <files mask="test_suite_asn1parse.function" hidden="true"/>
    <files mask="test_suite_asn1write.data" hidden="true"/>
    <files mask="test_suite_asn1write.function" hidden="true"/>
    <files mask="test_suite_base64.data" hidden="true"/>
    <files mask="test_suite_base64.function" hidden="true"/>
    <files mask="test_suite_bignum.function" hidden="true"/>
    <files mask="test_suite_bignum.generated.data" hidden="true"/>
    <files mask="test_suite_bignum.misc.data" hidden="true"/>
    <files mask="test_suite_blowfish.data" hidden="true"/>
    <files mask="test_suite_blowfish.function" hidden="true"/>
    <files mask="test_suite_camellia.data" hidden="true"/>
    <files mask="test_suite_camellia.function" hidden="true"/>
    <files mask="test_suite_ccm.data" hidden="true"/>
    <files mask="test_suite_ccm.function" hidden="true"/>
    <files mask="test_suite_chacha20.data" hidden="true"/>
    <files mask="test_suite_chacha20.function" hidden="true"/>
    <files mask="test_suite_chachapoly.data" hidden="true"/>
    <files mask="test_suite_chachapoly.function" hidden="true"/>
    <files mask="test_suite_cipher.aes.data" hidden="true"/>
    <files mask="test_suite_cipher.arc4.data" hidden="true"/>
    <files mask="test_suite_cipher.aria.data" hidden="true"/>
    <files mask="test_suite_cipher.blowfish.data" hidden="true"/>
    <files mask="test_suite_cipher.camellia.data" hidden="true"/>
    <files mask="test_suite_cipher.ccm.data" hidden="true"/>
    <files mask="test_suite_cipher.chacha20.data" hidden="true"/>
    <files mask="test_suite_cipher.chachapoly.data" hidden="true"/>
    <files mask="test_suite_cipher.des.data" hidden="true"/>
    <files mask="test_suite_cipher.function" hidden="true"/>
    <files mask="test_suite_cipher.gcm.data" hidden="true"/>
    <files mask="test_suite_cipher.misc.data" hidden="true"/>
    <files mask="test_suite_cipher.nist_kw.data" hidden="true"/>
    <files mask="test_suite_cipher.null.data" hidden="true"/>
    <files mask="test_suite_cipher.padding.data" hidden="true"/>
    <files mask="test_suite_cmac.data" hidden="true"/>
    <files mask="test_suite_cmac.function" hidden="true"/>
    <files mask="test_suite_constant_time.data" hidden="true"/>
    <files mask="test_suite_constant_time.function" hidden="true"/>
    <files mask="test_suite_constant_time_hmac.data" hidden="true"/>
    <files mask="test_suite_constant_time_hmac.function" hidden="true"/>
    <files mask="test_suite_ctr_drbg.data" hidden="true"/>
    <files mask="test_suite_ctr_drbg.function" hidden="true"/>
    <files mask="test_suite_debug.data" hidden="true"/>
    <files mask="test_suite_debug.function" hidden="true"/>
    <files mask="test_suite_des.data" hidden="true"/>
    <files mask="test_suite_des.function" hidden="true"/>
    <files mask="test_suite_dhm.data" hidden="true"/>
    <files mask="test_suite_dhm.function" hidden="true"/>
    <files mask="test_suite_ecdh.data" hidden="true"/>
    <files mask="test_suite_ecdh.function" hidden="true"/>
    <files mask="test_suite_ecdsa.data" hidden="true"/>
    <files mask="test_suite_ecdsa.function" hidden="true"/>
    <files mask="test_suite_ecjpake.data" hidden="true"/>
    <files mask="test_suite_ecjpake.function" hidden="true"/>
    <files mask="test_suite_ecp.data" hidden="true"/>
    <files mask="test_suite_ecp.function" hidden="true"/>
    <files mask="test_suite_entropy.data" hidden="true"/>
    <files mask="test_suite_entropy.function" hidden="true"/>
    <files mask="test_suite_error.data" hidden="true"/>
    <files mask="test_suite_error.function" hidden="true"/>
    <files mask="test_suite_gcm.aes128_de.data" hidden="true"/>
    <files mask="test_suite_gcm.aes128_en.data" hidden="true"/>
    <files mask="test_suite_gcm.aes192_de.data" hidden="true"/>
    <files mask="test_suite_gcm.aes192_en.data" hidden="true"/>
    <files mask="test_suite_gcm.aes256_de.data" hidden="true"/>
    <files mask="test_suite_gcm.aes256_en.data" hidden="true"/>
    <files mask="test_suite_gcm.camellia.data" hidden="true"/>
    <files mask="test_suite_gcm.function" hidden="true"/>
    <files mask="test_suite_gcm.misc.data" hidden="true"/>
    <files mask="test_suite_hkdf.data" hidden="true"/>
    <files mask="test_suite_hkdf.function" hidden="true"/>
    <files mask="test_suite_hmac_drbg.function" hidden="true"/>
    <files mask="test_suite_hmac_drbg.misc.data" hidden="true"/>
    <files mask="test_suite_hmac_drbg.no_reseed.data" hidden="true"/>
    <files mask="test_suite_hmac_drbg.nopr.data" hidden="true"/>
    <files mask="test_suite_hmac_drbg.pr.data" hidden="true"/>
    <files mask="test_suite_md.data" hidden="true"/>
    <files mask="test_suite_md.function" hidden="true"/>
    <files mask="test_suite_mdx.data" hidden="true"/>
    <files mask="test_suite_mdx.function" hidden="true"/>
    <files mask="test_suite_memory_buffer_alloc.data" hidden="true"/>
    <files mask="test_suite_memory_buffer_alloc.function" hidden="true"/>
    <files mask="test_suite_mps.data" hidden="true"/>
    <files mask="test_suite_mps.function" hidden="true"/>
    <files mask="test_suite_net.data" hidden="true"/>
    <files mask="test_suite_net.function" hidden="true"/>
    <files mask="test_suite_nist_kw.data" hidden="true"/>
    <files mask="test_suite_nist_kw.function" hidden="true"/>
    <files mask="test_suite_oid.data" hidden="true"/>
    <files mask="test_suite_oid.function" hidden="true"/>
    <files mask="test_suite_pem.data" hidden="true"/>
    <files mask="test_suite_pem.function" hidden="true"/>
    <files mask="test_suite_pk.data" hidden="true"/>
    <files mask="test_suite_pk.function" hidden="true"/>
    <files mask="test_suite_pkcs12.data" hidden="true"/>
    <files mask="test_suite_pkcs12.function" hidden="true"/>
    <files mask="test_suite_pkcs1_v15.data" hidden="true"/>
    <files mask="test_suite_pkcs1_v15.function" hidden="true"/>
    <files mask="test_suite_pkcs1_v21.data" hidden="true"/>
    <files mask="test_suite_pkcs1_v21.function" hidden="true"/>
    <files mask="test_suite_pkcs5.data" hidden="true"/>
    <files mask="test_suite_pkcs5.function" hidden="true"/>
    <files mask="test_suite_pkparse.data" hidden="true"/>
    <files mask="test_suite_pkparse.function" hidden="true"/>
    <files mask="test_suite_pkwrite.data" hidden="true"/>
    <files mask="test_suite_pkwrite.function" hidden="true"/>
    <files mask="test_suite_platform_printf.data" hidden="true"/>
    <files mask="test_suite_platform_printf.function" hidden="true"/>
    <files mask="test_suite_poly1305.data" hidden="true"/>
    <files mask="test_suite_poly1305.function" hidden="true"/>
    <files mask="test_suite_psa_crypto.data" hidden="true"/>
    <files mask="test_suite_psa_crypto.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_attributes.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_attributes.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_driver_wrappers.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_driver_wrappers.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_entropy.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_entropy.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_generate_key.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_generate_key.generated.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_hash.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_hash.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_init.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_init.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_low_hash.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_low_hash.generated.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_memory.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_memory.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_metadata.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_metadata.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_not_supported.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_not_supported.generated.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_not_supported.misc.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_op_fail.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_op_fail.generated.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_op_fail.misc.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_persistent_key.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_persistent_key.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_se_driver_hal.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_se_driver_hal.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_se_driver_hal_mocks.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_se_driver_hal_mocks.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_slot_management.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_slot_management.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_storage_format.current.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_storage_format.function" hidden="true"/>
    <files mask="test_suite_psa_crypto_storage_format.misc.data" hidden="true"/>
    <files mask="test_suite_psa_crypto_storage_format.v0.data" hidden="true"/>
    <files mask="test_suite_psa_its.data" hidden="true"/>
    <files mask="test_suite_psa_its.function" hidden="true"/>
    <files mask="test_suite_random.data" hidden="true"/>
    <files mask="test_suite_random.function" hidden="true"/>
    <files mask="test_suite_rsa.data" hidden="true"/>
    <files mask="test_suite_rsa.function" hidden="true"/>
    <files mask="test_suite_shax.data" hidden="true"/>
    <files mask="test_suite_shax.function" hidden="true"/>
    <files mask="test_suite_ssl.data" hidden="true"/>
    <files mask="test_suite_ssl.function" hidden="true"/>
    <files mask="test_suite_ssl_decrypt.function" hidden="true"/>
    <files mask="test_suite_ssl_decrypt.misc.data" hidden="true"/>
    <files mask="test_suite_test_helpers.data" hidden="true"/>
    <files mask="test_suite_test_helpers.function" hidden="true"/>
    <files mask="test_suite_timing.data" hidden="true"/>
    <files mask="test_suite_timing.function" hidden="true"/>
    <files mask="test_suite_version.data" hidden="true"/>
    <files mask="test_suite_version.function" hidden="true"/>
    <files mask="test_suite_x509parse.data" hidden="true"/>
    <files mask="test_suite_x509parse.function" hidden="true"/>
    <files mask="test_suite_x509write.data" hidden="true"/>
    <files mask="test_suite_x509write.function" hidden="true"/>
    <files mask="test_suite_xtea.data" hidden="true"/>
    <files mask="test_suite_xtea.function" hidden="true"/>
  </source>
  <source exclude="true" relative_path="visualc/VS2010" type="other">
    <files mask="benchmark.vcxproj" hidden="true"/>
    <files mask="cert_app.vcxproj" hidden="true"/>
    <files mask="cert_req.vcxproj" hidden="true"/>
    <files mask="cert_write.vcxproj" hidden="true"/>
    <files mask="crl_app.vcxproj" hidden="true"/>
    <files mask="crypt_and_hash.vcxproj" hidden="true"/>
    <files mask="crypto_examples.vcxproj" hidden="true"/>
    <files mask="dh_client.vcxproj" hidden="true"/>
    <files mask="dh_genprime.vcxproj" hidden="true"/>
    <files mask="dh_server.vcxproj" hidden="true"/>
    <files mask="dtls_client.vcxproj" hidden="true"/>
    <files mask="dtls_server.vcxproj" hidden="true"/>
    <files mask="ecdh_curve25519.vcxproj" hidden="true"/>
    <files mask="ecdsa.vcxproj" hidden="true"/>
    <files mask="gen_entropy.vcxproj" hidden="true"/>
    <files mask="gen_key.vcxproj" hidden="true"/>
    <files mask="gen_random_ctr_drbg.vcxproj" hidden="true"/>
    <files mask="gen_random_havege.vcxproj" hidden="true"/>
    <files mask="generic_sum.vcxproj" hidden="true"/>
    <files mask="hello.vcxproj" hidden="true"/>
    <files mask="key_app.vcxproj" hidden="true"/>
    <files mask="key_app_writer.vcxproj" hidden="true"/>
    <files mask="key_ladder_demo.vcxproj" hidden="true"/>
    <files mask="load_roots.vcxproj" hidden="true"/>
    <files mask="mbedTLS.sln" hidden="true"/>
    <files mask="mbedTLS.vcxproj" hidden="true"/>
    <files mask="metatest.vcxproj" hidden="true"/>
    <files mask="mini_client.vcxproj" hidden="true"/>
    <files mask="mpi_demo.vcxproj" hidden="true"/>
    <files mask="pem2der.vcxproj" hidden="true"/>
    <files mask="pk_decrypt.vcxproj" hidden="true"/>
    <files mask="pk_encrypt.vcxproj" hidden="true"/>
    <files mask="pk_sign.vcxproj" hidden="true"/>
    <files mask="pk_verify.vcxproj" hidden="true"/>
    <files mask="psa_constant_names.vcxproj" hidden="true"/>
    <files mask="query_compile_time_config.vcxproj" hidden="true"/>
    <files mask="req_app.vcxproj" hidden="true"/>
    <files mask="rsa_decrypt.vcxproj" hidden="true"/>
    <files mask="rsa_encrypt.vcxproj" hidden="true"/>
    <files mask="rsa_genkey.vcxproj" hidden="true"/>
    <files mask="rsa_sign.vcxproj" hidden="true"/>
    <files mask="rsa_sign_pss.vcxproj" hidden="true"/>
    <files mask="rsa_verify.vcxproj" hidden="true"/>
    <files mask="rsa_verify_pss.vcxproj" hidden="true"/>
    <files mask="selftest.vcxproj" hidden="true"/>
    <files mask="ssl_client1.vcxproj" hidden="true"/>
    <files mask="ssl_client2.vcxproj" hidden="true"/>
    <files mask="ssl_context_info.vcxproj" hidden="true"/>
    <files mask="ssl_fork_server.vcxproj" hidden="true"/>
    <files mask="ssl_mail_client.vcxproj" hidden="true"/>
    <files mask="ssl_server.vcxproj" hidden="true"/>
    <files mask="ssl_server2.vcxproj" hidden="true"/>
    <files mask="strerror.vcxproj" hidden="true"/>
    <files mask="udp_proxy.vcxproj" hidden="true"/>
    <files mask="zeroize.vcxproj" hidden="true"/>
  </source>
  <source exclude="true" relative_path="./" type="other">
    <files mask="BRANCHES.md" hidden="true"/>
    <files mask="BUGS.md" hidden="true"/>
    <files mask="CONTRIBUTING.md" hidden="true"/>
    <files mask="DartConfiguration.tcl" hidden="true"/>
    <files mask="README.md" hidden="true"/>
    <files mask="SECURITY.md" hidden="true"/>
    <files mask="SUPPORT.md" hidden="true"/>
    <files mask="ChangeLog" hidden="true"/>
    <files mask="Kconfig" hidden="true"/>
    <files mask="LICENSE" hidden="true"/>
    <files mask="Makefile" hidden="true"/>
  </source>
  <source exclude="true" relative_path="./" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
    <files mask="ChangeLogKSDK.txt" hidden="true"/>
    <files mask="dco.txt" hidden="true"/>
    <files mask="mbeTLS_for_Kinetis_SDK_v2.0_readme.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="./" type="script">
    <files mask="mcux.cmake" hidden="true"/>
  </source>
</component>-->
    <component id="middleware.mbedtls.tests.MIMXRT595S" name="mbedtls_tests" brief="mbedTLS test suite" version="2.28.8" full_name="MbedTLS open source Crypto library" category="Security/mbedTLS library" user_visible="false" type="middleware" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <defines>
        <define name="MBEDTLS_CONFIG_FILE" value="'&quot;mcux_mbedtls_testsuite_config.h&quot;'"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="tests/src" type="src">
        <files mask="asn1_helpers.c"/>
        <files mask="helpers.c"/>
        <files mask="psa_crypto_helpers.c"/>
        <files mask="psa_exercise_key.c"/>
        <files mask="random.c"/>
        <files mask="threading_helpers.c"/>
        <files mask="fake_external_rng_for_test.c"/>
      </source>
      <source relative_path="tests/src/test_helpers" type="src">
        <files mask="ssl_helpers.c"/>
      </source>
      <source relative_path="tests/include/test" type="c_include">
        <files mask="arguments.h"/>
        <files mask="asn1_helpers.h"/>
        <files mask="constant_flow.h"/>
        <files mask="fake_external_rng_for_test.h"/>
        <files mask="helpers.h"/>
        <files mask="macros.h"/>
        <files mask="psa_crypto_helpers.h"/>
        <files mask="psa_exercise_key.h"/>
        <files mask="psa_helpers.h"/>
        <files mask="random.h"/>
        <files mask="ssl_helpers.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mbedtls_tests.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="tests/include/test" type="c_include"/>
        <include_path relative_path="tests/include" type="c_include"/>
        <include_path relative_path="tests/include/test" type="asm_include"/>
        <include_path relative_path="tests/include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls.3rdparty.MIMXRT595S" name="mbedtls_3rdparty" brief="mbedTLS 3rdparty code" version="2.28.8" full_name="MbedTLS open source Crypto library 3rdparty" category="Security/mbedTLS library" user_visible="false" type="middleware" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="3rdparty" type="doc">
        <files mask="CMakeLists.txt"/>
      </source>
      <source relative_path="3rdparty" type="asm_include">
        <files mask="Makefile.inc"/>
      </source>
      <source relative_path="3rdparty/everest" type="doc">
        <files mask="CMakeLists.txt"/>
        <files mask="README.md"/>
      </source>
      <source relative_path="3rdparty/everest" type="asm_include">
        <files mask="Makefile.inc"/>
      </source>
      <source relative_path="3rdparty/everest/include/everest" type="c_include">
        <files mask="Hacl_Curve25519.h"/>
        <files mask="everest.h"/>
        <files mask="kremlib.h"/>
        <files mask="x25519.h"/>
      </source>
      <source relative_path="3rdparty/everest/include/everest/kremlib" type="c_include">
        <files mask="FStar_UInt128.h"/>
        <files mask="FStar_UInt64_FStar_UInt32_FStar_UInt16_FStar_UInt8.h"/>
      </source>
      <source relative_path="3rdparty/everest/include/everest/kremlin" type="c_include">
        <files mask="c_endianness.h"/>
      </source>
      <source relative_path="3rdparty/everest/include/everest/kremlin/internal" type="c_include">
        <files mask="builtin.h"/>
        <files mask="callconv.h"/>
        <files mask="compat.h"/>
        <files mask="debug.h"/>
        <files mask="target.h"/>
        <files mask="types.h"/>
        <files mask="wasmsupport.h"/>
      </source>
      <source relative_path="3rdparty/everest/include/everest/vs2010" type="c_include">
        <files mask="Hacl_Curve25519.h"/>
        <files mask="inttypes.h"/>
        <files mask="stdbool.h"/>
      </source>
      <source relative_path="3rdparty/everest/library" type="src">
        <files mask="Hacl_Curve25519.c"/>
        <files mask="Hacl_Curve25519_joined.c"/>
        <files mask="everest.c"/>
        <files mask="x25519.c"/>
      </source>
      <source relative_path="3rdparty/everest/library/kremlib" type="src">
        <files mask="FStar_UInt128_extracted.c"/>
        <files mask="FStar_UInt64_FStar_UInt32_FStar_UInt16_FStar_UInt8.c"/>
      </source>
      <source relative_path="3rdparty/everest/library/legacy" type="src">
        <files mask="Hacl_Curve25519.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mbedtls_3rdparty.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="3rdparty/everest/include" type="c_include"/>
        <include_path relative_path="3rdparty/everest/include/everest" type="c_include"/>
        <include_path relative_path="3rdparty/everest/include/everest/kremlib" type="c_include"/>
        <include_path relative_path="3rdparty/everest/include/everest/kremlin" type="c_include"/>
        <include_path relative_path="3rdparty/everest/include/everest/kremlin/internal" type="c_include"/>
        <include_path relative_path="3rdparty/everest/include" type="asm_include"/>
        <include_path relative_path="3rdparty/everest/include/everest" type="asm_include"/>
        <include_path relative_path="3rdparty/everest/include/everest/kremlib" type="asm_include"/>
        <include_path relative_path="3rdparty/everest/include/everest/kremlin" type="asm_include"/>
        <include_path relative_path="3rdparty/everest/include/everest/kremlin/internal" type="asm_include"/>
      </include_paths>
    </component>
    <!--<component id="middleware.lwip.unused_files.MIMXRT595S" name="lwIP_unused_files" version="2.2.1" package_base_path="middleware/lwip" project_base_path="lwip">
  <source exclude="true" relative_path="src" type="other">
    <files mask="Filelists.cmake" hidden="true"/>
    <files mask="Filelists.mk" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz" type="other">
    <files mask="Makefile" hidden="true"/>
    <files mask="README" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz" type="c_include">
    <files mask="config.h" hidden="true"/>
    <files mask="fuzz_common.h" hidden="true"/>
    <files mask="lwipopts.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz" type="src">
    <files mask="fuzz.c" hidden="true"/>
    <files mask="fuzz2.c" hidden="true"/>
    <files mask="fuzz3.c" hidden="true"/>
    <files mask="fuzz_common.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz/inputs/arp" type="binary">
    <files mask="arp_req.bin" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz/inputs/icmp" type="binary">
    <files mask="icmp_ping.bin" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz/inputs/ipv6" type="binary">
    <files mask="neighbor_solicitation.bin" hidden="true"/>
    <files mask="router_adv.bin" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz/inputs/tcp" type="binary">
    <files mask="tcp_syn.bin" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz/inputs/udp" type="binary">
    <files mask="udp_port_5000.bin" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/fuzz" type="script">
    <files mask="output_to_pcap.sh" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/sockets" type="src">
    <files mask="sockets_stresstest.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/sockets" type="c_include">
    <files mask="sockets_stresstest.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit" type="script">
    <files mask="Filelists.cmake" hidden="true"/>
    <files mask="Filelists.mk" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit" type="other">
    <files mask="Makefile" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/api" type="src">
    <files mask="test_sockets.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/api" type="c_include">
    <files mask="test_sockets.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/arch" type="src">
    <files mask="sys_arch.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/arch" type="c_include">
    <files mask="sys_arch.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/core" type="src">
    <files mask="test_def.c" hidden="true"/>
    <files mask="test_dns.c" hidden="true"/>
    <files mask="test_mem.c" hidden="true"/>
    <files mask="test_netif.c" hidden="true"/>
    <files mask="test_pbuf.c" hidden="true"/>
    <files mask="test_timers.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/core" type="c_include">
    <files mask="test_def.h" hidden="true"/>
    <files mask="test_dns.h" hidden="true"/>
    <files mask="test_mem.h" hidden="true"/>
    <files mask="test_netif.h" hidden="true"/>
    <files mask="test_pbuf.h" hidden="true"/>
    <files mask="test_timers.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/dhcp" type="src">
    <files mask="test_dhcp.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/dhcp" type="c_include">
    <files mask="test_dhcp.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/dhcp6" type="src">
    <files mask="test_dhcp6.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/dhcp6" type="c_include">
    <files mask="test_dhcp6.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/etharp" type="src">
    <files mask="test_etharp.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/etharp" type="c_include">
    <files mask="test_etharp.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/ip4" type="src">
    <files mask="test_ip4.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/ip4" type="c_include">
    <files mask="test_ip4.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/ip6" type="src">
    <files mask="test_ip6.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/ip6" type="c_include">
    <files mask="test_ip6.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit" type="c_include">
    <files mask="lwip_check.h" hidden="true"/>
    <files mask="lwipopts.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit" type="src">
    <files mask="lwip_unittests.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/mdns" type="src">
    <files mask="test_mdns.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/mdns" type="c_include">
    <files mask="test_mdns.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/mqtt" type="src">
    <files mask="test_mqtt.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/mqtt" type="c_include">
    <files mask="test_mqtt.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/ppp" type="src">
    <files mask="test_pppos.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/ppp" type="c_include">
    <files mask="test_pppos.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/tcp" type="src">
    <files mask="tcp_helper.c" hidden="true"/>
    <files mask="test_tcp.c" hidden="true"/>
    <files mask="test_tcp_oos.c" hidden="true"/>
    <files mask="test_tcp_state.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/tcp" type="c_include">
    <files mask="tcp_helper.h" hidden="true"/>
    <files mask="test_tcp.h" hidden="true"/>
    <files mask="test_tcp_oos.h" hidden="true"/>
    <files mask="test_tcp_state.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/udp" type="src">
    <files mask="test_udp.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="test/unit/udp" type="c_include">
    <files mask="test_udp.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib" type="script">
    <files mask="Filelists.cmake" hidden="true"/>
    <files mask="Filelists.mk" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/dhcp_extra_opts" type="other">
    <files mask="README" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/dhcp_extra_opts" type="src">
    <files mask="dhcp_extra_opts.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/dhcp_extra_opts" type="c_include">
    <files mask="dhcp_extra_opts.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/ipv6_static_routing" type="other">
    <files mask="README" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/ipv6_static_routing" type="src">
    <files mask="ip6_route_table.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/ipv6_static_routing" type="c_include">
    <files mask="ip6_route_table.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/netconn/external_resolve" type="src">
    <files mask="dnssd.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/netconn/external_resolve" type="c_include">
    <files mask="dnssd.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/tcp_isn" type="src">
    <files mask="tcp_isn.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/tcp_isn" type="c_include">
    <files mask="tcp_isn.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/tcp_md5" type="other">
    <files mask="README" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/tcp_md5" type="src">
    <files mask="tcp_md5.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/addons/tcp_md5" type="c_include">
    <files mask="tcp_md5.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/chargen" type="other">
    <files mask="README" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/chargen" type="src">
    <files mask="chargen.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/chargen" type="c_include">
    <files mask="chargen.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/httpserver" type="other">
    <files mask="README" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/httpserver" type="src">
    <files mask="httpserver-netconn.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/httpserver" type="c_include">
    <files mask="httpserver-netconn.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/netio" type="src">
    <files mask="netio.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/netio" type="c_include">
    <files mask="netio.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/rtp" type="src">
    <files mask="rtp.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/rtp" type="c_include">
    <files mask="rtp.h" hidden="true"/>
    <files mask="rtpdata.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/shell" type="src">
    <files mask="shell.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/shell" type="c_include">
    <files mask="shell.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/socket_examples" type="src">
    <files mask="socket_examples.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/apps/socket_examples" type="c_include">
    <files mask="socket_examples.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/Coverity" type="src">
    <files mask="coverity.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/ethernetif" type="src">
    <files mask="ethernetif.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/example_app" type="c_include">
    <files mask="default_netif.h" hidden="true"/>
    <files mask="lwipopts.h" hidden="true"/>
    <files mask="lwippools.h" hidden="true"/>
    <files mask="ppp_settings.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/example_app" type="other">
    <files mask="lwipcfg.h.ci" hidden="true"/>
    <files mask="lwipcfg.h.example" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/example_app" type="src">
    <files mask="test.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/example_app/test_configs" type="c_include">
    <files mask="opt_default.h" hidden="true"/>
    <files mask="opt_dualstack.h" hidden="true"/>
    <files mask="opt_ipv4only.h" hidden="true"/>
    <files mask="opt_ipv6only.h" hidden="true"/>
    <files mask="opt_no_tcp_dualstack.h" hidden="true"/>
    <files mask="opt_no_tcp_ipv4only.h" hidden="true"/>
    <files mask="opt_no_tcp_ipv6only.h" hidden="true"/>
    <files mask="opt_no_udp_dualstack.h" hidden="true"/>
    <files mask="opt_no_udp_ipv4only.h" hidden="true"/>
    <files mask="opt_no_udp_ipv6only.h" hidden="true"/>
    <files mask="opt_none.h" hidden="true"/>
    <files mask="opt_nosys_dual.h" hidden="true"/>
    <files mask="opt_nosys_ipv4.h" hidden="true"/>
    <files mask="opt_nosys_ipv6.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/cgi_example" type="src">
    <files mask="cgi_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/cgi_example" type="c_include">
    <files mask="cgi_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/examples_fs" type="doc">
    <files mask="404.html" hidden="true"/>
    <files mask="index.html" hidden="true"/>
    <files mask="login.html" hidden="true"/>
    <files mask="loginfail.html" hidden="true"/>
    <files mask="session.html" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/examples_fs/img" type="image">
    <files mask="sics.gif" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/examples_fs" type="other">
    <files mask="ssi.shtml" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd" type="src">
    <files mask="examples_fsdata.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/fs_example" type="src">
    <files mask="fs_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/fs_example" type="c_include">
    <files mask="fs_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/genfiles_example" type="src">
    <files mask="genfiles_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/genfiles_example" type="c_include">
    <files mask="genfiles_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/https_example" type="src">
    <files mask="https_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/https_example" type="c_include">
    <files mask="https_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/post_example" type="src">
    <files mask="post_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/ssi_example" type="src">
    <files mask="ssi_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/httpd/ssi_example" type="c_include">
    <files mask="ssi_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/lwiperf" type="src">
    <files mask="lwiperf_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/lwiperf" type="c_include">
    <files mask="lwiperf_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/mdns" type="src">
    <files mask="mdns_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/mdns" type="c_include">
    <files mask="mdns_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/mqtt" type="src">
    <files mask="mqtt_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/mqtt" type="c_include">
    <files mask="mqtt_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/ppp" type="src">
    <files mask="pppos_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/ppp" type="c_include">
    <files mask="pppos_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/snmp" type="src">
    <files mask="snmp_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/snmp" type="c_include">
    <files mask="snmp_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/snmp/snmp_private_mib" type="src">
    <files mask="lwip_prvmib.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/snmp/snmp_private_mib" type="c_include">
    <files mask="private_mib.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/snmp/snmp_v3" type="src">
    <files mask="snmpv3_dummy.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/snmp/snmp_v3" type="c_include">
    <files mask="snmpv3_dummy.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/sntp" type="src">
    <files mask="sntp_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/sntp" type="c_include">
    <files mask="sntp_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/tftp" type="src">
    <files mask="tftp_example.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/examples/tftp" type="c_include">
    <files mask="tftp_example.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports" type="script">
    <files mask="CMakeCommon.cmake" hidden="true"/>
    <files mask="Common.allports.mk" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/freertos/include/arch" type="c_include">
    <files mask="sys_arch.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/freertos" type="src">
    <files mask="sys_arch.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix" type="script">
    <files mask="Common.mk" hidden="true"/>
    <files mask="Filelists.cmake" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix" type="other">
    <files mask="README" hidden="true"/>
    <files mask="setup-tapif" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/check" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/check" type="other">
    <files mask="Makefile" hidden="true"/>
    <files mask="README" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/check" type="c_include">
    <files mask="config.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/example_app" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/example_app" type="other">
    <files mask="Makefile" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/example_app" type="src">
    <files mask="default_netif.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/example_app" type="script">
    <files mask="iteropts.sh" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/lib" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/lib" type="other">
    <files mask="README" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/lib" type="c_include">
    <files mask="lwipopts.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/port/include/arch" type="c_include">
    <files mask="cc.h" hidden="true"/>
    <files mask="perf.h" hidden="true"/>
    <files mask="sys_arch.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/port/include/netif" type="c_include">
    <files mask="fifo.h" hidden="true"/>
    <files mask="list.h" hidden="true"/>
    <files mask="pcapif.h" hidden="true"/>
    <files mask="sio.h" hidden="true"/>
    <files mask="tapif.h" hidden="true"/>
    <files mask="vdeif.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/port/netif" type="src">
    <files mask="fifo.c" hidden="true"/>
    <files mask="list.c" hidden="true"/>
    <files mask="pcapif.c" hidden="true"/>
    <files mask="sio.c" hidden="true"/>
    <files mask="tapif.c" hidden="true"/>
    <files mask="vdeif.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/port" type="src">
    <files mask="perf.c" hidden="true"/>
    <files mask="sys_arch.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/posixlib" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/posixlib" type="script">
    <files mask="Uninstall.cmake" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/posixlib/include/posix" type="c_include">
    <files mask="inet.h" hidden="true"/>
    <files mask="sockets.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/unix/posixlib" type="c_include">
    <files mask="lwipopts.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32" type="script">
    <files mask="Common.mk" hidden="true"/>
    <files mask="Filelists.cmake" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32/check" type="c_include">
    <files mask="check_stdint.h" hidden="true"/>
    <files mask="config.h" hidden="true"/>
    <files mask="stdbool.h" hidden="true"/>
    <files mask="unistd.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32/check/sys" type="c_include">
    <files mask="time.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32/check" type="src">
    <files mask="time.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32/example_app" type="doc">
    <files mask="CMakeLists.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32/example_app" type="other">
    <files mask="Makefile" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32/example_app" type="src">
    <files mask="default_netif.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32/include/arch" type="c_include">
    <files mask="bpstruct.h" hidden="true"/>
    <files mask="cc.h" hidden="true"/>
    <files mask="epstruct.h" hidden="true"/>
    <files mask="perf.h" hidden="true"/>
    <files mask="sys_arch.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32/msvc" type="other">
    <files mask="build_coverity.cmd" hidden="true"/>
    <files mask="libcheck.vcxproj" hidden="true"/>
    <files mask="libcheck.vcxproj.filters" hidden="true"/>
    <files mask="lwIP.vcxproj" hidden="true"/>
    <files mask="lwIP.vcxproj.filters" hidden="true"/>
    <files mask="lwIP_Test.sln" hidden="true"/>
    <files mask="lwIP_Test.vcxproj" hidden="true"/>
    <files mask="lwIP_Test.vcxproj.filters" hidden="true"/>
    <files mask="lwIP_fuzz.sln" hidden="true"/>
    <files mask="lwIP_pcapif.vcxproj" hidden="true"/>
    <files mask="lwIP_pcapif.vcxproj.filters" hidden="true"/>
    <files mask="lwIP_unittests.sln" hidden="true"/>
    <files mask="lwip_fuzz.vcxproj" hidden="true"/>
    <files mask="lwip_unittests.vcxproj" hidden="true"/>
    <files mask="lwip_unittests.vcxproj.filters" hidden="true"/>
    <files mask="makefsdata.vcxproj" hidden="true"/>
    <files mask="makefsdata.vcxproj.filters" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32" type="src">
    <files mask="pcapif.c" hidden="true"/>
    <files mask="pcapif_helper.c" hidden="true"/>
    <files mask="sio.c" hidden="true"/>
    <files mask="sys_arch.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32" type="c_include">
    <files mask="pcapif.h" hidden="true"/>
    <files mask="pcapif_helper.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="contrib/ports/win32" type="doc">
    <files mask="readme.txt" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/apps/altcp_tls" type="src">
    <files mask="altcp_tls_mbedtls.c" hidden="true"/>
    <files mask="altcp_tls_mbedtls_mem.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/apps/altcp_tls" type="c_include">
    <files mask="altcp_tls_mbedtls_mem.h" hidden="true"/>
    <files mask="altcp_tls_mbedtls_structs.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/apps/http" type="src">
    <files mask="altcp_proxyconnect.c" hidden="true"/>
    <files mask="http_client.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/apps/netbiosns" type="src">
    <files mask="netbiosns.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/apps/smtp" type="src">
    <files mask="smtp.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/apps/snmp" type="src">
    <files mask="snmp_asn1.c" hidden="true"/>
    <files mask="snmp_core.c" hidden="true"/>
    <files mask="snmp_mib2.c" hidden="true"/>
    <files mask="snmp_mib2_icmp.c" hidden="true"/>
    <files mask="snmp_mib2_interfaces.c" hidden="true"/>
    <files mask="snmp_mib2_ip.c" hidden="true"/>
    <files mask="snmp_mib2_snmp.c" hidden="true"/>
    <files mask="snmp_mib2_system.c" hidden="true"/>
    <files mask="snmp_mib2_tcp.c" hidden="true"/>
    <files mask="snmp_mib2_udp.c" hidden="true"/>
    <files mask="snmp_msg.c" hidden="true"/>
    <files mask="snmp_netconn.c" hidden="true"/>
    <files mask="snmp_pbuf_stream.c" hidden="true"/>
    <files mask="snmp_raw.c" hidden="true"/>
    <files mask="snmp_scalar.c" hidden="true"/>
    <files mask="snmp_snmpv2_framework.c" hidden="true"/>
    <files mask="snmp_snmpv2_usm.c" hidden="true"/>
    <files mask="snmp_table.c" hidden="true"/>
    <files mask="snmp_threadsync.c" hidden="true"/>
    <files mask="snmp_traps.c" hidden="true"/>
    <files mask="snmpv3.c" hidden="true"/>
    <files mask="snmpv3_mbedtls.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/apps/snmp" type="c_include">
    <files mask="snmp_asn1.h" hidden="true"/>
    <files mask="snmp_core_priv.h" hidden="true"/>
    <files mask="snmp_msg.h" hidden="true"/>
    <files mask="snmp_pbuf_stream.h" hidden="true"/>
    <files mask="snmpv3_priv.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/apps/tftp" type="src">
    <files mask="tftp.c" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/include/lwip" type="other">
    <files mask="init.h.cmake.in" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/include/lwip/apps" type="c_include">
    <files mask="altcp_proxyconnect.h" hidden="true"/>
    <files mask="altcp_tls_mbedtls_opts.h" hidden="true"/>
    <files mask="http_client.h" hidden="true"/>
    <files mask="netbiosns.h" hidden="true"/>
    <files mask="netbiosns_opts.h" hidden="true"/>
    <files mask="smtp.h" hidden="true"/>
    <files mask="smtp_opts.h" hidden="true"/>
    <files mask="snmp.h" hidden="true"/>
    <files mask="snmpv3.h" hidden="true"/>
    <files mask="snmp_core.h" hidden="true"/>
    <files mask="snmp_mib2.h" hidden="true"/>
    <files mask="snmp_opts.h" hidden="true"/>
    <files mask="snmp_scalar.h" hidden="true"/>
    <files mask="snmp_snmpv2_framework.h" hidden="true"/>
    <files mask="snmp_snmpv2_usm.h" hidden="true"/>
    <files mask="snmp_table.h" hidden="true"/>
    <files mask="snmp_threadsync.h" hidden="true"/>
    <files mask="tftp_client.h" hidden="true"/>
    <files mask="tftp_common.h" hidden="true"/>
    <files mask="tftp_opts.h" hidden="true"/>
    <files mask="tftp_server.h" hidden="true"/>
  </source>
  <source exclude="true" relative_path="src/include/lwip/apps" type="other">
    <files mask="FILES" hidden="true"/>
  </source>
</component>-->
    <component id="middleware.lvgl.template.MIMXRT595S" name="lvgl_template" brief="lvgl template" version="9.2.1" full_name="lvgl template configuration" category="Graphics/lvgl graphics library" user_visible="false" type="project_template" package_base_path="middleware/lvgl" project_base_path="lvgl">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="template" config="true" type="c_include">
        <files mask="lv_conf.h"/>
      </source>
      <source relative_path="template" config="true" type="src">
        <files mask="lvgl_support.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.littlefs.MIMXRT595S" name="LittleFS" brief="littlefs" version="2.9.1" full_name="LittleFS File System stack" category="File System/LittleFS File System" user_visible="true" type="middleware" package_base_path="middleware/littlefs" project_base_path="littlefs">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lfs.c"/>
        <files mask="lfs_util.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lfs.h"/>
        <files mask="lfs_util.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_littlefs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.libjpeg.MIMXRT595S" name="libjpeg" brief="JPEG library" version="9.2.0" revision="1" full_name="Middleware libjpeg" category="Image/JPEG library" user_visible="true" type="middleware" package_base_path="middleware/libjpeg" project_base_path="libjpeg">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="change.log" hidden="true"/>
        <files mask="README" hidden="true"/>
      </source>
      <source relative_path="inc" type="c_include">
        <files mask="cderror.h"/>
        <files mask="cdjpeg.h"/>
        <files mask="jdct.h"/>
        <files mask="jerror.h"/>
        <files mask="jinclude.h"/>
        <files mask="jmemsys.h"/>
        <files mask="jmorecfg.h"/>
        <files mask="jpegint.h"/>
        <files mask="jpeglib.h"/>
        <files mask="jversion.h"/>
        <files mask="transupp.h"/>
      </source>
      <source relative_path="src" type="src">
        <files mask="jaricom.c"/>
        <files mask="jcapimin.c"/>
        <files mask="jcapistd.c"/>
        <files mask="jcarith.c"/>
        <files mask="jccoefct.c"/>
        <files mask="jccolor.c"/>
        <files mask="jcdctmgr.c"/>
        <files mask="jchuff.c"/>
        <files mask="jcinit.c"/>
        <files mask="jcmainct.c"/>
        <files mask="jcmarker.c"/>
        <files mask="jcmaster.c"/>
        <files mask="jcomapi.c"/>
        <files mask="jcparam.c"/>
        <files mask="jcprepct.c"/>
        <files mask="jcsample.c"/>
        <files mask="jctrans.c"/>
        <files mask="jdapimin.c"/>
        <files mask="jdapistd.c"/>
        <files mask="jdarith.c"/>
        <files mask="jdatadst.c"/>
        <files mask="jdatasrc.c"/>
        <files mask="jdcoefct.c"/>
        <files mask="jdcolor.c"/>
        <files mask="jddctmgr.c"/>
        <files mask="jdhuff.c"/>
        <files mask="jdinput.c"/>
        <files mask="jdmainct.c"/>
        <files mask="jdmarker.c"/>
        <files mask="jdmaster.c"/>
        <files mask="jdmerge.c"/>
        <files mask="jdpostct.c"/>
        <files mask="jdsample.c"/>
        <files mask="jdtrans.c"/>
        <files mask="jerror.c"/>
        <files mask="jfdctflt.c"/>
        <files mask="jfdctfst.c"/>
        <files mask="jfdctint.c"/>
        <files mask="jidctflt.c"/>
        <files mask="jidctfst.c"/>
        <files mask="jidctint.c"/>
        <files mask="jmemmgr.c"/>
        <files mask="jmemnobs.c"/>
        <files mask="jquant1.c"/>
        <files mask="jquant2.c"/>
        <files mask="jutils.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_libjpeg.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="inc" type="c_include"/>
        <include_path relative_path="inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.libjpeg.template.MIMXRT595S" name="LIBJPEG configuration template" brief="Template configuration file to be edited by user. Users could map the file system functions to the file system they are using." version="9.2.0" revision="1" full_name="LIBJPEG configuration template" category="Image/JPEG library" user_visible="false" type="project_template" package_base_path="middleware/libjpeg" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="template" config="true" type="c_include">
        <files mask="jconfig.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_libjpeg_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.MIMXRT595S" name="fatfs" brief="FatFs" version="0.15.0" full_name="FAT File System stack" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="diskio.c"/>
        <files mask="ff.c"/>
        <files mask="ffsystem.c"/>
        <files mask="ffunicode.c"/>
      </source>
      <source relative_path="source" type="c_include">
        <files mask="diskio.h"/>
        <files mask="ff.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source" type="c_include"/>
        <include_path relative_path="source" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_mmc.MIMXRT595S" name="fatfs_mmc" brief="FatFs template MMC" version="0.15.0" full_name="FatFs template configuration for MMC disk" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="template/mmc" config="true" type="c_include">
        <files mask="ffconf_gen.h"/>
      </source>
      <source relative_path="template" config="true" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_template_mmc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/mmc" type="c_include"/>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/mmc" type="asm_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_nand.MIMXRT595S" name="fatfs_nand" brief="FatFs template NAND" version="0.15.0" full_name="FatFs template configuration for NAND disk" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="template/nand" config="true" type="c_include">
        <files mask="ffconf_gen.h"/>
      </source>
      <source relative_path="template" config="true" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_template_nand.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/nand" type="c_include"/>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/nand" type="asm_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_ram.MIMXRT595S" name="fatfs_ram" brief="FatFs template RAM" version="0.15.0" full_name="FatFs template configuration for RAM disk" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="template/ram" config="true" type="c_include">
        <files mask="ffconf_gen.h"/>
      </source>
      <source relative_path="template" config="true" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_template_ram.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/ram" type="c_include"/>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/ram" type="asm_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_sd.MIMXRT595S" name="fatfs_sd" brief="FatFs template SD" version="0.15.0" full_name="FatFs template configuration for SD disk" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="template/sd" config="true" type="c_include">
        <files mask="ffconf_gen.h"/>
      </source>
      <source relative_path="template" config="true" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_template_sd.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/sd" type="c_include"/>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/sd" type="asm_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_sdspi.MIMXRT595S" name="fatfs_sdspi" brief="FatFs template SDSPI" version="0.15.0" full_name="FatFs template configuration for SDSPI disk" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="template/sdspi" config="true" type="c_include">
        <files mask="ffconf_gen.h"/>
      </source>
      <source relative_path="template" config="true" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_template_sdspi.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/sdspi" type="c_include"/>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/sdspi" type="asm_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.template_usb.MIMXRT595S" name="fatfs_usb" brief="FatFs template USB" version="0.15.0" full_name="FatFs template configuration for USB disk" category="File System/FAT File System" user_visible="true" type="project_template" package_base_path="middleware/fatfs" project_base_path="source">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="template/usb" config="true" type="c_include">
        <files mask="ffconf_gen.h"/>
      </source>
      <source relative_path="template" config="true" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_template_usb.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template/usb" type="c_include"/>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/usb" type="asm_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.emwin.template.MIMXRT595S" name="emwin_template" brief="emwin template" version="6.38" full_name="emWin template configuration" category="Graphics/emWin graphics library" user_visible="false" type="project_template" package_base_path="middleware/emwin" project_base_path="emwin">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="template" config="true" type="src">
        <files mask="emwin_support.c"/>
      </source>
      <source relative_path="template" config="true" type="c_include">
        <files mask="emwin_support.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_emwin_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="emWin_Config" type="c_include"/>
        <include_path relative_path="emWin_header" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.cadence.nnlib.MIMXRT595S" name="cadence_nnlib" brief="DSP Neural Networks" version="4.1.0" full_name="Middleware nnlib" category="DSP/Middleware nnlib" user_visible="false" type="middleware" package_base_path="middleware/cadence/nnlib" project_base_path="nnlib">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="other">
        <files mask="license.txt"/>
      </source>
      <source relative_path="include" type="c_include">
        <files mask="xa_type_def.h"/>
      </source>
      <source relative_path="include/nnlib" type="c_include">
        <files mask="xa_nnlib_api.h"/>
        <files mask="xa_nnlib_cnn_api.h"/>
        <files mask="xa_nnlib_gru_api.h"/>
        <files mask="xa_nnlib_kernels_api.h"/>
        <files mask="xa_nnlib_lstm_api.h"/>
        <files mask="xa_nnlib_standards.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_cadence_nnlib.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include/nnlib" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
        <include_path relative_path="include/nnlib" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.cjson.MIMXRT595S" name="cjson" brief="CJSON library" version="1.7.4" revision="0" full_name="Middleware cjson" category="JSON/CJSON library" user_visible="true" type="middleware" package_base_path="middleware/cjson" project_base_path="cjson">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="CHANGELOG.md" hidden="true"/>
        <files mask="LICENSE" hidden="true"/>
        <files mask="README.md" hidden="true"/>
        <files mask="CONTRIBUTORS.md" hidden="true"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="cJSON.h"/>
        <files mask="cJSON_Utils.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="cJSON.c"/>
        <files mask="cJSON_Utils.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_cjson.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.aws_iot.device_defender.MIMXRT595S" name="device-defender-for-aws-iot-embedded-sdk" brief="Client library for using the AWS IoT Device Defender service on embedded devices." version="1.3.0" full_name="AWS IoT Device Defender Library" category="AWS IoT/AWS IoT Device Defender" user_visible="false" type="middleware" package_base_path="middleware/aws_iot/device-defender" project_base_path="aws_iot/device-defender">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="defender.c"/>
      </source>
      <source relative_path="source/include" type="c_include">
        <files mask="defender.h"/>
        <files mask="defender_config_defaults.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_aws_iot_device_defender.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/include" type="c_include"/>
        <include_path relative_path="source/include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.wifi_bt_module.config.MIMXRT595S" name="wifi_bt_module_config" brief="Wi-Fi and BT module configs" version="1.0.0" full_name="Wi-Fi and BT module configs" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/wifi_bt_module" project_base_path="component/wifi_bt_module">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="incl" type="c_include">
        <files mask="wifi_bt_module_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_wifi_bt_module_config.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="incl" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.wifi_bt_module.tx_pwr_limits.MIMXRT595S" name="wifi_bt_module_tx_pwr_limits" brief="Wi-Fi module Tx power limits" version="1.0.0" full_name="Wi-Fi module Tx power limits" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/wifi_bt_module" project_base_path="component/wifi_bt_module">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="AzureWave/tx_pwr_limits" type="c_include">
        <files mask="wlan_txpwrlimit_cfg_WW.h"/>
        <files mask="wlan_txpwrlimit_cfg_WW_rw610.h"/>
      </source>
      <source relative_path="Murata/tx_pwr_limits" type="c_include">
        <files mask="wlan_txpwrlimit_cfg_murata_1XK_WW.h"/>
        <files mask="wlan_txpwrlimit_cfg_murata_1ZM_WW.h"/>
        <files mask="wlan_txpwrlimit_cfg_murata_2DS_WW.h"/>
        <files mask="wlan_txpwrlimit_cfg_murata_2EL_WW.h"/>
        <files mask="wlan_txpwrlimit_cfg_murata_NH_FCC.h"/>
      </source>
      <source relative_path="u-blox/tx_pwr_limits" type="c_include">
        <files mask="wlan_txpwrlimit_cfg_jody_w5_WW.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_wifi_bt_module_tx_pwr_limits.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="AzureWave/tx_pwr_limits" type="c_include"/>
        <include_path relative_path="Murata/tx_pwr_limits" type="c_include"/>
        <include_path relative_path="u-blox/tx_pwr_limits" type="c_include"/>
        <include_path relative_path="AzureWave/tx_pwr_limits" type="asm_include"/>
        <include_path relative_path="Murata/tx_pwr_limits" type="asm_include"/>
        <include_path relative_path="u-blox/tx_pwr_limits" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.ektf2k.MIMXRT595S" name="ektf2k" brief="Driver ektf2k" version="1.0.0" full_name="Driver ektf2k" category="Device/SDK Drivers" user_visible="false" type="board_component" package_base_path="components/touch/ektf2k" project_base_path="touchpanel">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ektf2k.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ektf2k.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_ektf2k.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.ft3267.MIMXRT595S" name="ft3267" brief="Touch panel controller FT3267 driver" version="1.0.1" full_name="Driver ft3267" category="Device/SDK Drivers" user_visible="false" type="board_component" package_base_path="components/touch/ft3267" project_base_path="touchpanel">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ft3267.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ft3267.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_ft3267.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.ft5406.MIMXRT595S" name="ft5406" brief="Driver ft5406" version="1.0.0" full_name="Driver ft5406" category="Device/SDK Drivers" user_visible="false" type="board_component" package_base_path="components/touch/ft5406" project_base_path="touchpanel">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ft5406.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ft5406.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_ft5406.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.gt911.MIMXRT595S" name="gt911" brief="Driver gt911" version="1.0.4" full_name="Driver gt911" category="Device/SDK Drivers" user_visible="false" type="board_component" package_base_path="components/touch/gt911" project_base_path="touchpanel">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_gt911.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_gt911.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_gt911.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.tma525b.MIMXRT595S" name="tma525b" brief="Driver tma525b" version="1.0.0" full_name="Driver tma525b" category="Device/SDK Drivers" user_visible="false" type="board_component" package_base_path="components/touch/tma525b" project_base_path="touchpanel">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_tma525b.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_tma525b.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_tma525b.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_swo.MIMXRT595S" name="serial_manager_swo" brief="Component serial_manager_swo" version="1.0.0" full_name="Serial Manager Swo" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_SWO" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_swo.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_swo.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_serial_manager_swo.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_virtual.MIMXRT595S" name="serial_manager_virtual" brief="Component serial_manager_virtual" version="1.0.0" full_name="Serial Manager Virtual" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SSERIAL_PORT_TYPE_VIRTUAL" value="1"/>
        <define name="DEBUG_CONSOLE_TRANSFER_NON_BLOCKING" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_virtual.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_virtual.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_serial_manager_virtual.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.software_rng_adapter.MIMXRT595S" name="software_rng_adapter" brief="Component software_rng_adapter" version="1.0.0" full_name="Component software_rng_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/rng" project_base_path="component/rng">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_rng.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_software_rng.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_software_rng_adapter.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.reset_adapter.MIMXRT595S" name="reset_adapter" brief="Component reset_adapter" version="1.0.0" full_name="Component reset_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/reset" project_base_path="component/reset">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_reset.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_reset.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_reset_adapter.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.panic.MIMXRT595S" name="panic" brief="Component panic" version="1.0.0" full_name="Component panic" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/panic" project_base_path="component/panic">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_panic.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_panic.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_panic.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.osa_template_config.MIMXRT595S" name="osa" brief="Component osa template config" version="1.0.0" full_name="Component osa template config" category="NXP Component/OS Abstraction Layer" user_visible="true" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="config" config="true" type="c_include">
        <files mask="fsl_os_abstraction_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_osa_template_config.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="config" type="c_include"/>
        <include_path relative_path="config" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.nvm_adapter.MIMXRT595S" name="nvm_adapter" brief="Component nvm_adapter" version="1.0.0" full_name="NVM Adapter" category="Device/SDK Utilities" user_visible="false" type="utilities" package_base_path="components/nvm" project_base_path="component/nvm">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
    </component>
    <component id="driver.mpi_loader.MIMXRT595S" name="mpi_loader" brief="Component mpi_loader" version="1.0.0" full_name="Component mpi_loader" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/mpi_loader" project_base_path="mpi_loader">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mpi_loader.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mpi_loader.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_mpi_loader.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.mflash_onchip_fmu.MIMXRT595S" name="mflash onchip_fmu" brief="mflash onchip_fmu" version="1.0.0" full_name="mflash onchip_fmu" category="Device/SDK Drivers" user_visible="false" type="software_component" package_base_path="components/flash/mflash" project_base_path="flash/mflash">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
    </component>
    <component id="component.software_crc_adapter.MIMXRT595S" name="software_crc_adapter" brief="Component software_crc_adapter" version="1.0.0" full_name="Component software_crc_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/crc" project_base_path="component/crc">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_crc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_software_crc.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_software_crc_adapter.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.ak4497_adapter.MIMXRT595S" name="codec_ak4497_adapter" brief="Component ak4497 adapter for single codec" version="2.2.0" full_name="Component ak4497_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="port/ak4497" type="c_include">
        <files mask="fsl_codec_ak4497_adapter.h"/>
      </source>
      <source relative_path="port/ak4497" type="src">
        <files mask="fsl_codec_ak4497_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_ak4497_adapter.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/ak4497" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/ak4497" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.codec_adapters.MIMXRT595S" name="codec_adapters" brief="Component codec adapters for multi codec" version="2.2.0" full_name="Component codec_adapters" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec/" project_base_path="codec">
      <defines>
        <define name="CODEC_MULTI_ADAPTERS" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="port" type="src">
        <files mask="fsl_codec_adapter.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_codec_adapters.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.cs42448_adapter.MIMXRT595S" name="codec_cs42448_adapter" brief="Component cs42448 adapter for single codec" version="2.2.1" full_name="Component cs42448_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="port/cs42448" type="c_include">
        <files mask="fsl_codec_cs42448_adapter.h"/>
      </source>
      <source relative_path="port/cs42448" type="src">
        <files mask="fsl_codec_cs42448_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_cs42448_adapter.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/cs42448" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/cs42448" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.cs42888_adapter.MIMXRT595S" name="codec_cs42888_adapter" brief="Component cs42888 adapter for single codec" version="2.2.1" full_name="Component cs42888_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="port/cs42888" type="c_include">
        <files mask="fsl_codec_cs42888_adapter.h"/>
      </source>
      <source relative_path="port/cs42888" type="src">
        <files mask="fsl_codec_cs42888_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_cs42888_adapter.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/cs42888" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/cs42888" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.da7212_adapter.MIMXRT595S" name="codec_da7212_adapter" brief="Component da7212 adapter for single codec" version="2.2.0" full_name="Component da7212_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="port/da7212" type="c_include">
        <files mask="fsl_codec_da7212_adapter.h"/>
      </source>
      <source relative_path="port/da7212" type="src">
        <files mask="fsl_codec_da7212_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_da7212_adapter.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/da7212" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/da7212" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.pcm186x_adapter.MIMXRT595S" name="codec_pcm186x_adapter" brief="Component pcm186x adapter for single codec" version="2.0.0" full_name="Component pcm186x_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="port/pcm186x" type="c_include">
        <files mask="fsl_codec_pcm186x_adapter.h"/>
      </source>
      <source relative_path="port/pcm186x" type="src">
        <files mask="fsl_codec_pcm186x_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_pcm186x_adapter.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/pcm186x" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/pcm186x" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.pcm512x_adapter.MIMXRT595S" name="codec_pcm512x_adapter" brief="Component pcm512x adapter for single codec" version="2.0.0" full_name="Component pcm512x_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="port/pcm512x" type="c_include">
        <files mask="fsl_codec_pcm512x_adapter.h"/>
      </source>
      <source relative_path="port/pcm512x" type="src">
        <files mask="fsl_codec_pcm512x_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_pcm512x_adapter.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/pcm512x" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/pcm512x" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.sgtl_adapter.MIMXRT595S" name="codec_sgtl_adapter" brief="Component sgtl5000 adapter for single codec" version="2.2.0" full_name="Component sgtl_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="port/sgtl5000" type="c_include">
        <files mask="fsl_codec_sgtl_adapter.h"/>
      </source>
      <source relative_path="port/sgtl5000" type="src">
        <files mask="fsl_codec_sgtl_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_sgtl_adapter.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/sgtl5000" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/sgtl5000" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.tfa9896_adapter.MIMXRT595S" name="codec_tfa9896_adapter" brief="Component tfa9896 adapter for single codec" version="2.2.0" full_name="Component tfa9896_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="port/tfa9896" type="c_include">
        <files mask="fsl_codec_tfa9896_adapter.h"/>
      </source>
      <source relative_path="port/tfa9896" type="src">
        <files mask="fsl_codec_tfa9896_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_tfa9896_adapter.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/tfa9896" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/tfa9896" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.tfa9xxx_adapter.MIMXRT595S" name="codec_tfa9xxx_adapter" brief="Component tfa9xxx adapter for single codec" version="2.2.0" full_name="Component tfa9xxx_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="port/tfa9xxx" type="c_include">
        <files mask="fsl_codec_tfa9xxx_adapter.h"/>
      </source>
      <source relative_path="port/tfa9xxx" type="src">
        <files mask="fsl_codec_tfa9xxx_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_tfa9xxx_adapter.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/tfa9xxx" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/tfa9xxx" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.wm8524_adapter.MIMXRT595S" name="codec_wm8524_adapter" brief="Component wm8524 adapter for single codec" version="2.2.0" full_name="Component wm8524_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="port/wm8524" type="c_include">
        <files mask="fsl_codec_wm8524_adapter.h"/>
      </source>
      <source relative_path="port/wm8524" type="src">
        <files mask="fsl_codec_wm8524_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_wm8524_adapter.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/wm8524" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/wm8524" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.wm8904_adapter.MIMXRT595S" name="codec_wm8904_adapter" brief="Component wm8904 adapter for single codec" version="2.2.0" full_name="Component wm8904_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec/" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="port/wm8904" type="c_include">
        <files mask="fsl_codec_wm8904_adapter.h"/>
      </source>
      <source relative_path="port/wm8904" type="src">
        <files mask="fsl_codec_wm8904_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_wm8904_adapter.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/wm8904" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/wm8904" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.wm8960_adapter.MIMXRT595S" name="codec_wm8960_adapter" brief="Component wm8960 adapter for single codecs" version="2.2.0" full_name="Component wm8960_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec/" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="port/wm8960" type="c_include">
        <files mask="fsl_codec_wm8960_adapter.h"/>
      </source>
      <source relative_path="port/wm8960" type="src">
        <files mask="fsl_codec_wm8960_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_wm8960_adapter.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/wm8960" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/wm8960" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.wm8962_adapter.MIMXRT595S" name="codec_wm8962_adapter" brief="Component wm8962 adapter for single codecs" version="2.2.0" full_name="Component wm8962_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec/" project_base_path="codec">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="port/wm8962" type="c_include">
        <files mask="fsl_codec_wm8962_adapter.h"/>
      </source>
      <source relative_path="port/wm8962" type="src">
        <files mask="fsl_codec_wm8962_adapter.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="fsl_codec_adapter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_wm8962_adapter.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/wm8962" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port/wm8962" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.codec.MIMXRT595S" name="codec" brief="Driver codec" version="2.3.1" full_name="Driver codec" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/codec" project_base_path="codec">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_codec_common.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_codec_common.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_codec.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="tools.MIMXRT595S" name="cmake_toolchain" brief="Cmake_toolchain" version="1.0.0" full_name="Cmake_toolchain" category="Device/SDK Utilities" user_visible="true" type="other" package_base_path="tools/cmake_toolchain_files" project_base_path="cmake_toolchain_files">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="script">
        <files mask="armgcc.cmake"/>
        <files mask="xcc.cmake"/>
        <files mask="xclang.cmake"/>
        <files mask="armgcc_force_cpp.cmake"/>
        <files mask="mcux_config.cmake"/>
        <files mask="riscvllvm.cmake"/>
      </source>
    </component>
    <component id="device.RTE.MIMXRT595S" name="RTE_Device" brief="Rte_device" version="1.0.0" full_name="Rte_device" category="Device/SDK Project Template" user_visible="true" type="project_template" package_base_path="devices/MIMXRT595S/template" project_base_path="board">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" config="true" type="c_include">
        <files mask="RTE_Device.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="device_RTE.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_DSP_Include.MIMXRT595S" name="CMSIS_DSP_Library_Header" brief="CMSIS-DSP Library Header" version="1.16.2" full_name="CMSIS DSP Library Header" category="CMSIS/DSP" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/DSP" project_base_path="CMSIS/DSP">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_common_tables_f16.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_const_structs_f16.h"/>
        <files mask="arm_helium_utils.h"/>
        <files mask="arm_math.h"/>
        <files mask="arm_math_f16.h"/>
        <files mask="arm_math_memory.h"/>
        <files mask="arm_math_types.h"/>
        <files mask="arm_math_types_f16.h"/>
        <files mask="arm_mve_tables.h"/>
        <files mask="arm_mve_tables_f16.h"/>
        <files mask="arm_vec_math.h"/>
        <files mask="arm_vec_math_f16.h"/>
      </source>
      <source relative_path="Include/dsp" type="c_include">
        <files mask="basic_math_functions.h"/>
        <files mask="basic_math_functions_f16.h"/>
        <files mask="bayes_functions.h"/>
        <files mask="bayes_functions_f16.h"/>
        <files mask="complex_math_functions.h"/>
        <files mask="complex_math_functions_f16.h"/>
        <files mask="controller_functions.h"/>
        <files mask="controller_functions_f16.h"/>
        <files mask="debug.h"/>
        <files mask="distance_functions.h"/>
        <files mask="distance_functions_f16.h"/>
        <files mask="fast_math_functions.h"/>
        <files mask="fast_math_functions_f16.h"/>
        <files mask="filtering_functions.h"/>
        <files mask="filtering_functions_f16.h"/>
        <files mask="interpolation_functions.h"/>
        <files mask="interpolation_functions_f16.h"/>
        <files mask="matrix_functions.h"/>
        <files mask="matrix_functions_f16.h"/>
        <files mask="matrix_utils.h"/>
        <files mask="none.h"/>
        <files mask="quaternion_math_functions.h"/>
        <files mask="statistics_functions.h"/>
        <files mask="statistics_functions_f16.h"/>
        <files mask="support_functions.h"/>
        <files mask="support_functions_f16.h"/>
        <files mask="svm_defines.h"/>
        <files mask="svm_functions.h"/>
        <files mask="svm_functions_f16.h"/>
        <files mask="transform_functions.h"/>
        <files mask="transform_functions_f16.h"/>
        <files mask="utils.h"/>
        <files mask="window_functions.h"/>
      </source>
      <source relative_path="PrivateInclude" type="c_include">
        <files mask="arm_sorting.h"/>
        <files mask="arm_vec_fft.h"/>
        <files mask="arm_vec_filtering.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_DSP_Include.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="PrivateInclude" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
        <include_path relative_path="PrivateInclude" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_DSP_Source.MIMXRT595S" name="CMSIS_DSP_Library_Source" brief="CMSIS-DSP Library" version="1.16.2" full_name="CMSIS DSP Library Source" category="CMSIS/DSP" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/DSP" project_base_path="CMSIS/DSP">
      <defines>
        <define name="DISABLEFLOAT16" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="arm_common_tables.h"/>
        <files mask="arm_common_tables_f16.h"/>
        <files mask="arm_const_structs.h"/>
        <files mask="arm_const_structs_f16.h"/>
        <files mask="arm_helium_utils.h"/>
        <files mask="arm_math.h"/>
        <files mask="arm_math_f16.h"/>
        <files mask="arm_math_memory.h"/>
        <files mask="arm_math_types.h"/>
        <files mask="arm_math_types_f16.h"/>
        <files mask="arm_mve_tables.h"/>
        <files mask="arm_mve_tables_f16.h"/>
        <files mask="arm_vec_math.h"/>
        <files mask="arm_vec_math_f16.h"/>
      </source>
      <source relative_path="Include/dsp" type="c_include">
        <files mask="basic_math_functions.h"/>
        <files mask="basic_math_functions_f16.h"/>
        <files mask="bayes_functions.h"/>
        <files mask="bayes_functions_f16.h"/>
        <files mask="complex_math_functions.h"/>
        <files mask="complex_math_functions_f16.h"/>
        <files mask="controller_functions.h"/>
        <files mask="controller_functions_f16.h"/>
        <files mask="debug.h"/>
        <files mask="distance_functions.h"/>
        <files mask="distance_functions_f16.h"/>
        <files mask="fast_math_functions.h"/>
        <files mask="fast_math_functions_f16.h"/>
        <files mask="filtering_functions.h"/>
        <files mask="filtering_functions_f16.h"/>
        <files mask="interpolation_functions.h"/>
        <files mask="interpolation_functions_f16.h"/>
        <files mask="matrix_functions.h"/>
        <files mask="matrix_functions_f16.h"/>
        <files mask="matrix_utils.h"/>
        <files mask="none.h"/>
        <files mask="quaternion_math_functions.h"/>
        <files mask="statistics_functions.h"/>
        <files mask="statistics_functions_f16.h"/>
        <files mask="support_functions.h"/>
        <files mask="support_functions_f16.h"/>
        <files mask="svm_defines.h"/>
        <files mask="svm_functions.h"/>
        <files mask="svm_functions_f16.h"/>
        <files mask="transform_functions.h"/>
        <files mask="transform_functions_f16.h"/>
        <files mask="utils.h"/>
        <files mask="window_functions.h"/>
      </source>
      <source relative_path="PrivateInclude" type="c_include">
        <files mask="arm_sorting.h"/>
        <files mask="arm_vec_fft.h"/>
        <files mask="arm_vec_filtering.h"/>
      </source>
      <source relative_path="Source/BasicMathFunctions" type="src">
        <files mask="BasicMathFunctions.c"/>
        <files mask="BasicMathFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/BasicMathFunctions" type="src">
        <files mask="arm_abs_f32.c"/>
        <files mask="arm_abs_f64.c"/>
        <files mask="arm_abs_q15.c"/>
        <files mask="arm_abs_q31.c"/>
        <files mask="arm_abs_q7.c"/>
        <files mask="arm_add_f32.c"/>
        <files mask="arm_add_f64.c"/>
        <files mask="arm_add_q15.c"/>
        <files mask="arm_add_q31.c"/>
        <files mask="arm_add_q7.c"/>
        <files mask="arm_and_u16.c"/>
        <files mask="arm_and_u32.c"/>
        <files mask="arm_and_u8.c"/>
        <files mask="arm_clip_f32.c"/>
        <files mask="arm_clip_q15.c"/>
        <files mask="arm_clip_q31.c"/>
        <files mask="arm_clip_q7.c"/>
        <files mask="arm_dot_prod_f32.c"/>
        <files mask="arm_dot_prod_f64.c"/>
        <files mask="arm_dot_prod_q15.c"/>
        <files mask="arm_dot_prod_q31.c"/>
        <files mask="arm_dot_prod_q7.c"/>
        <files mask="arm_mult_f32.c"/>
        <files mask="arm_mult_f64.c"/>
        <files mask="arm_mult_q15.c"/>
        <files mask="arm_mult_q31.c"/>
        <files mask="arm_mult_q7.c"/>
        <files mask="arm_negate_f32.c"/>
        <files mask="arm_negate_f64.c"/>
        <files mask="arm_negate_q15.c"/>
        <files mask="arm_negate_q31.c"/>
        <files mask="arm_negate_q7.c"/>
        <files mask="arm_not_u16.c"/>
        <files mask="arm_not_u32.c"/>
        <files mask="arm_not_u8.c"/>
        <files mask="arm_offset_f32.c"/>
        <files mask="arm_offset_f64.c"/>
        <files mask="arm_offset_q15.c"/>
        <files mask="arm_offset_q31.c"/>
        <files mask="arm_offset_q7.c"/>
        <files mask="arm_or_u16.c"/>
        <files mask="arm_or_u32.c"/>
        <files mask="arm_or_u8.c"/>
        <files mask="arm_scale_f32.c"/>
        <files mask="arm_scale_f64.c"/>
        <files mask="arm_scale_q15.c"/>
        <files mask="arm_scale_q31.c"/>
        <files mask="arm_scale_q7.c"/>
        <files mask="arm_shift_q15.c"/>
        <files mask="arm_shift_q31.c"/>
        <files mask="arm_shift_q7.c"/>
        <files mask="arm_sub_f32.c"/>
        <files mask="arm_sub_f64.c"/>
        <files mask="arm_sub_q15.c"/>
        <files mask="arm_sub_q31.c"/>
        <files mask="arm_sub_q7.c"/>
        <files mask="arm_xor_u16.c"/>
        <files mask="arm_xor_u32.c"/>
        <files mask="arm_xor_u8.c"/>
        <files mask="arm_abs_f16.c"/>
        <files mask="arm_add_f16.c"/>
        <files mask="arm_clip_f16.c"/>
        <files mask="arm_dot_prod_f16.c"/>
        <files mask="arm_mult_f16.c"/>
        <files mask="arm_negate_f16.c"/>
        <files mask="arm_offset_f16.c"/>
        <files mask="arm_scale_f16.c"/>
        <files mask="arm_sub_f16.c"/>
      </source>
      <source relative_path="Source/BayesFunctions" type="src">
        <files mask="BayesFunctions.c"/>
        <files mask="BayesFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/BayesFunctions" type="src">
        <files mask="arm_gaussian_naive_bayes_predict_f32.c"/>
        <files mask="arm_gaussian_naive_bayes_predict_f16.c"/>
      </source>
      <source relative_path="Source/CommonTables" type="src">
        <files mask="CommonTables.c"/>
        <files mask="CommonTablesF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/CommonTables" type="src">
        <files mask="arm_common_tables.c"/>
        <files mask="arm_const_structs.c"/>
        <files mask="arm_mve_tables.c"/>
        <files mask="arm_common_tables_f16.c"/>
        <files mask="arm_const_structs_f16.c"/>
        <files mask="arm_mve_tables_f16.c"/>
      </source>
      <source relative_path="Source/ComplexMathFunctions" type="src">
        <files mask="ComplexMathFunctions.c"/>
        <files mask="ComplexMathFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/ComplexMathFunctions" type="src">
        <files mask="arm_cmplx_conj_f32.c"/>
        <files mask="arm_cmplx_conj_q15.c"/>
        <files mask="arm_cmplx_conj_q31.c"/>
        <files mask="arm_cmplx_dot_prod_f32.c"/>
        <files mask="arm_cmplx_dot_prod_q15.c"/>
        <files mask="arm_cmplx_dot_prod_q31.c"/>
        <files mask="arm_cmplx_mag_f32.c"/>
        <files mask="arm_cmplx_mag_f64.c"/>
        <files mask="arm_cmplx_mag_fast_q15.c"/>
        <files mask="arm_cmplx_mag_q15.c"/>
        <files mask="arm_cmplx_mag_q31.c"/>
        <files mask="arm_cmplx_mag_squared_f32.c"/>
        <files mask="arm_cmplx_mag_squared_f64.c"/>
        <files mask="arm_cmplx_mag_squared_q15.c"/>
        <files mask="arm_cmplx_mag_squared_q31.c"/>
        <files mask="arm_cmplx_mult_cmplx_f32.c"/>
        <files mask="arm_cmplx_mult_cmplx_f64.c"/>
        <files mask="arm_cmplx_mult_cmplx_q15.c"/>
        <files mask="arm_cmplx_mult_cmplx_q31.c"/>
        <files mask="arm_cmplx_mult_real_f32.c"/>
        <files mask="arm_cmplx_mult_real_q15.c"/>
        <files mask="arm_cmplx_mult_real_q31.c"/>
        <files mask="arm_cmplx_conj_f16.c"/>
        <files mask="arm_cmplx_dot_prod_f16.c"/>
        <files mask="arm_cmplx_mag_f16.c"/>
        <files mask="arm_cmplx_mag_squared_f16.c"/>
        <files mask="arm_cmplx_mult_cmplx_f16.c"/>
        <files mask="arm_cmplx_mult_real_f16.c"/>
      </source>
      <source relative_path="Source/ControllerFunctions" type="src">
        <files mask="ControllerFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/ControllerFunctions" type="src">
        <files mask="arm_pid_init_f32.c"/>
        <files mask="arm_pid_init_q15.c"/>
        <files mask="arm_pid_init_q31.c"/>
        <files mask="arm_pid_reset_f32.c"/>
        <files mask="arm_pid_reset_q15.c"/>
        <files mask="arm_pid_reset_q31.c"/>
        <files mask="arm_sin_cos_f32.c"/>
        <files mask="arm_sin_cos_q31.c"/>
      </source>
      <source relative_path="Source/DistanceFunctions" type="src">
        <files mask="DistanceFunctions.c"/>
        <files mask="DistanceFunctionsF16.c"/>
      </source>
      <source relative_path="Source/DistanceFunctions" type="c_include">
        <files mask="arm_boolean_distance_template.h"/>
      </source>
      <source exclude="true" relative_path="Source/DistanceFunctions" type="src">
        <files mask="arm_boolean_distance.c"/>
        <files mask="arm_braycurtis_distance_f32.c"/>
        <files mask="arm_canberra_distance_f32.c"/>
        <files mask="arm_chebyshev_distance_f32.c"/>
        <files mask="arm_chebyshev_distance_f64.c"/>
        <files mask="arm_cityblock_distance_f32.c"/>
        <files mask="arm_cityblock_distance_f64.c"/>
        <files mask="arm_correlation_distance_f32.c"/>
        <files mask="arm_cosine_distance_f32.c"/>
        <files mask="arm_cosine_distance_f64.c"/>
        <files mask="arm_dice_distance.c"/>
        <files mask="arm_dtw_distance_f32.c"/>
        <files mask="arm_dtw_init_window_q7.c"/>
        <files mask="arm_dtw_path_f32.c"/>
        <files mask="arm_euclidean_distance_f32.c"/>
        <files mask="arm_euclidean_distance_f64.c"/>
        <files mask="arm_hamming_distance.c"/>
        <files mask="arm_jaccard_distance.c"/>
        <files mask="arm_jensenshannon_distance_f32.c"/>
        <files mask="arm_kulsinski_distance.c"/>
        <files mask="arm_minkowski_distance_f32.c"/>
        <files mask="arm_rogerstanimoto_distance.c"/>
        <files mask="arm_russellrao_distance.c"/>
        <files mask="arm_sokalmichener_distance.c"/>
        <files mask="arm_sokalsneath_distance.c"/>
        <files mask="arm_yule_distance.c"/>
        <files mask="arm_braycurtis_distance_f16.c"/>
        <files mask="arm_chebyshev_distance_f16.c"/>
        <files mask="arm_canberra_distance_f16.c"/>
        <files mask="arm_cityblock_distance_f16.c"/>
        <files mask="arm_correlation_distance_f16.c"/>
        <files mask="arm_cosine_distance_f16.c"/>
        <files mask="arm_euclidean_distance_f16.c"/>
        <files mask="arm_jensenshannon_distance_f16.c"/>
        <files mask="arm_minkowski_distance_f16.c"/>
      </source>
      <source relative_path="Source/FastMathFunctions" type="src">
        <files mask="FastMathFunctions.c"/>
        <files mask="FastMathFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/FastMathFunctions" type="src">
        <files mask="arm_atan2_f32.c"/>
        <files mask="arm_atan2_q15.c"/>
        <files mask="arm_atan2_q31.c"/>
        <files mask="arm_cos_f32.c"/>
        <files mask="arm_cos_q15.c"/>
        <files mask="arm_cos_q31.c"/>
        <files mask="arm_divide_q15.c"/>
        <files mask="arm_divide_q31.c"/>
        <files mask="arm_sin_f32.c"/>
        <files mask="arm_sin_q15.c"/>
        <files mask="arm_sin_q31.c"/>
        <files mask="arm_sqrt_q15.c"/>
        <files mask="arm_sqrt_q31.c"/>
        <files mask="arm_vexp_f32.c"/>
        <files mask="arm_vexp_f64.c"/>
        <files mask="arm_vlog_f32.c"/>
        <files mask="arm_vlog_f64.c"/>
        <files mask="arm_vlog_q15.c"/>
        <files mask="arm_vlog_q31.c"/>
        <files mask="arm_atan2_f16.c"/>
        <files mask="arm_vexp_f16.c"/>
        <files mask="arm_vinverse_f16.c"/>
        <files mask="arm_vlog_f16.c"/>
      </source>
      <source relative_path="Source/FilteringFunctions" type="src">
        <files mask="FilteringFunctions.c"/>
        <files mask="FilteringFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/FilteringFunctions" type="src">
        <files mask="arm_biquad_cascade_df1_32x64_init_q31.c"/>
        <files mask="arm_biquad_cascade_df1_32x64_q31.c"/>
        <files mask="arm_biquad_cascade_df1_f32.c"/>
        <files mask="arm_biquad_cascade_df1_fast_q15.c"/>
        <files mask="arm_biquad_cascade_df1_fast_q31.c"/>
        <files mask="arm_biquad_cascade_df1_init_f32.c"/>
        <files mask="arm_biquad_cascade_df1_init_q15.c"/>
        <files mask="arm_biquad_cascade_df1_init_q31.c"/>
        <files mask="arm_biquad_cascade_df1_q15.c"/>
        <files mask="arm_biquad_cascade_df1_q31.c"/>
        <files mask="arm_biquad_cascade_df2T_f32.c"/>
        <files mask="arm_biquad_cascade_df2T_f64.c"/>
        <files mask="arm_biquad_cascade_df2T_init_f32.c"/>
        <files mask="arm_biquad_cascade_df2T_init_f64.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_f32.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_init_f32.c"/>
        <files mask="arm_conv_f32.c"/>
        <files mask="arm_conv_fast_opt_q15.c"/>
        <files mask="arm_conv_fast_q15.c"/>
        <files mask="arm_conv_fast_q31.c"/>
        <files mask="arm_conv_opt_q15.c"/>
        <files mask="arm_conv_opt_q7.c"/>
        <files mask="arm_conv_partial_f32.c"/>
        <files mask="arm_conv_partial_fast_opt_q15.c"/>
        <files mask="arm_conv_partial_fast_q15.c"/>
        <files mask="arm_conv_partial_fast_q31.c"/>
        <files mask="arm_conv_partial_opt_q15.c"/>
        <files mask="arm_conv_partial_opt_q7.c"/>
        <files mask="arm_conv_partial_q15.c"/>
        <files mask="arm_conv_partial_q31.c"/>
        <files mask="arm_conv_partial_q7.c"/>
        <files mask="arm_conv_q15.c"/>
        <files mask="arm_conv_q31.c"/>
        <files mask="arm_conv_q7.c"/>
        <files mask="arm_correlate_f32.c"/>
        <files mask="arm_correlate_f64.c"/>
        <files mask="arm_correlate_fast_opt_q15.c"/>
        <files mask="arm_correlate_fast_q15.c"/>
        <files mask="arm_correlate_fast_q31.c"/>
        <files mask="arm_correlate_opt_q15.c"/>
        <files mask="arm_correlate_opt_q7.c"/>
        <files mask="arm_correlate_q15.c"/>
        <files mask="arm_correlate_q31.c"/>
        <files mask="arm_correlate_q7.c"/>
        <files mask="arm_fir_decimate_f32.c"/>
        <files mask="arm_fir_decimate_fast_q15.c"/>
        <files mask="arm_fir_decimate_fast_q31.c"/>
        <files mask="arm_fir_decimate_init_f32.c"/>
        <files mask="arm_fir_decimate_init_q15.c"/>
        <files mask="arm_fir_decimate_init_q31.c"/>
        <files mask="arm_fir_decimate_q15.c"/>
        <files mask="arm_fir_decimate_q31.c"/>
        <files mask="arm_fir_f32.c"/>
        <files mask="arm_fir_f64.c"/>
        <files mask="arm_fir_fast_q15.c"/>
        <files mask="arm_fir_fast_q31.c"/>
        <files mask="arm_fir_init_f32.c"/>
        <files mask="arm_fir_init_f64.c"/>
        <files mask="arm_fir_init_q15.c"/>
        <files mask="arm_fir_init_q31.c"/>
        <files mask="arm_fir_init_q7.c"/>
        <files mask="arm_fir_interpolate_f32.c"/>
        <files mask="arm_fir_interpolate_init_f32.c"/>
        <files mask="arm_fir_interpolate_init_q15.c"/>
        <files mask="arm_fir_interpolate_init_q31.c"/>
        <files mask="arm_fir_interpolate_q15.c"/>
        <files mask="arm_fir_interpolate_q31.c"/>
        <files mask="arm_fir_lattice_f32.c"/>
        <files mask="arm_fir_lattice_init_f32.c"/>
        <files mask="arm_fir_lattice_init_q15.c"/>
        <files mask="arm_fir_lattice_init_q31.c"/>
        <files mask="arm_fir_lattice_q15.c"/>
        <files mask="arm_fir_lattice_q31.c"/>
        <files mask="arm_fir_q15.c"/>
        <files mask="arm_fir_q31.c"/>
        <files mask="arm_fir_q7.c"/>
        <files mask="arm_fir_sparse_f32.c"/>
        <files mask="arm_fir_sparse_init_f32.c"/>
        <files mask="arm_fir_sparse_init_q15.c"/>
        <files mask="arm_fir_sparse_init_q31.c"/>
        <files mask="arm_fir_sparse_init_q7.c"/>
        <files mask="arm_fir_sparse_q15.c"/>
        <files mask="arm_fir_sparse_q31.c"/>
        <files mask="arm_fir_sparse_q7.c"/>
        <files mask="arm_iir_lattice_f32.c"/>
        <files mask="arm_iir_lattice_init_f32.c"/>
        <files mask="arm_iir_lattice_init_q15.c"/>
        <files mask="arm_iir_lattice_init_q31.c"/>
        <files mask="arm_iir_lattice_q15.c"/>
        <files mask="arm_iir_lattice_q31.c"/>
        <files mask="arm_levinson_durbin_f32.c"/>
        <files mask="arm_levinson_durbin_q31.c"/>
        <files mask="arm_lms_f32.c"/>
        <files mask="arm_lms_init_f32.c"/>
        <files mask="arm_lms_init_q15.c"/>
        <files mask="arm_lms_init_q31.c"/>
        <files mask="arm_lms_norm_f32.c"/>
        <files mask="arm_lms_norm_init_f32.c"/>
        <files mask="arm_lms_norm_init_q15.c"/>
        <files mask="arm_lms_norm_init_q31.c"/>
        <files mask="arm_lms_norm_q15.c"/>
        <files mask="arm_lms_norm_q31.c"/>
        <files mask="arm_lms_q15.c"/>
        <files mask="arm_lms_q31.c"/>
        <files mask="arm_biquad_cascade_df1_f16.c"/>
        <files mask="arm_biquad_cascade_df1_init_f16.c"/>
        <files mask="arm_biquad_cascade_df2T_f16.c"/>
        <files mask="arm_biquad_cascade_df2T_init_f16.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_f16.c"/>
        <files mask="arm_biquad_cascade_stereo_df2T_init_f16.c"/>
        <files mask="arm_correlate_f16.c"/>
        <files mask="arm_fir_f16.c"/>
        <files mask="arm_fir_init_f16.c"/>
        <files mask="arm_levinson_durbin_f16.c"/>
        <files mask="arm_fir_decimate_f64.c"/>
        <files mask="arm_fir_decimate_init_f64.c"/>
      </source>
      <source relative_path="Source/InterpolationFunctions" type="src">
        <files mask="InterpolationFunctions.c"/>
        <files mask="InterpolationFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/InterpolationFunctions" type="src">
        <files mask="arm_bilinear_interp_f32.c"/>
        <files mask="arm_bilinear_interp_q15.c"/>
        <files mask="arm_bilinear_interp_q31.c"/>
        <files mask="arm_bilinear_interp_q7.c"/>
        <files mask="arm_linear_interp_f32.c"/>
        <files mask="arm_linear_interp_q15.c"/>
        <files mask="arm_linear_interp_q31.c"/>
        <files mask="arm_linear_interp_q7.c"/>
        <files mask="arm_spline_interp_f32.c"/>
        <files mask="arm_spline_interp_init_f32.c"/>
        <files mask="arm_bilinear_interp_f16.c"/>
        <files mask="arm_linear_interp_f16.c"/>
      </source>
      <source relative_path="Source/MatrixFunctions" type="src">
        <files mask="MatrixFunctions.c"/>
        <files mask="MatrixFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/MatrixFunctions" type="src">
        <files mask="arm_householder_f32.c"/>
        <files mask="arm_householder_f64.c"/>
        <files mask="arm_mat_add_f32.c"/>
        <files mask="arm_mat_add_q15.c"/>
        <files mask="arm_mat_add_q31.c"/>
        <files mask="arm_mat_cholesky_f32.c"/>
        <files mask="arm_mat_cholesky_f64.c"/>
        <files mask="arm_mat_cmplx_mult_f32.c"/>
        <files mask="arm_mat_cmplx_mult_q15.c"/>
        <files mask="arm_mat_cmplx_mult_q31.c"/>
        <files mask="arm_mat_cmplx_trans_f32.c"/>
        <files mask="arm_mat_cmplx_trans_q15.c"/>
        <files mask="arm_mat_cmplx_trans_q31.c"/>
        <files mask="arm_mat_init_f32.c"/>
        <files mask="arm_mat_init_f64.c"/>
        <files mask="arm_mat_init_q15.c"/>
        <files mask="arm_mat_init_q31.c"/>
        <files mask="arm_mat_inverse_f32.c"/>
        <files mask="arm_mat_inverse_f64.c"/>
        <files mask="arm_mat_ldlt_f32.c"/>
        <files mask="arm_mat_ldlt_f64.c"/>
        <files mask="arm_mat_mult_f32.c"/>
        <files mask="arm_mat_mult_f64.c"/>
        <files mask="arm_mat_mult_fast_q15.c"/>
        <files mask="arm_mat_mult_fast_q31.c"/>
        <files mask="arm_mat_mult_opt_q31.c"/>
        <files mask="arm_mat_mult_q15.c"/>
        <files mask="arm_mat_mult_q31.c"/>
        <files mask="arm_mat_mult_q7.c"/>
        <files mask="arm_mat_qr_f32.c"/>
        <files mask="arm_mat_qr_f64.c"/>
        <files mask="arm_mat_scale_f32.c"/>
        <files mask="arm_mat_scale_q15.c"/>
        <files mask="arm_mat_scale_q31.c"/>
        <files mask="arm_mat_solve_lower_triangular_f32.c"/>
        <files mask="arm_mat_solve_lower_triangular_f64.c"/>
        <files mask="arm_mat_solve_upper_triangular_f32.c"/>
        <files mask="arm_mat_solve_upper_triangular_f64.c"/>
        <files mask="arm_mat_sub_f32.c"/>
        <files mask="arm_mat_sub_f64.c"/>
        <files mask="arm_mat_sub_q15.c"/>
        <files mask="arm_mat_sub_q31.c"/>
        <files mask="arm_mat_trans_f32.c"/>
        <files mask="arm_mat_trans_f64.c"/>
        <files mask="arm_mat_trans_q15.c"/>
        <files mask="arm_mat_trans_q31.c"/>
        <files mask="arm_mat_trans_q7.c"/>
        <files mask="arm_mat_vec_mult_f32.c"/>
        <files mask="arm_mat_vec_mult_q15.c"/>
        <files mask="arm_mat_vec_mult_q31.c"/>
        <files mask="arm_mat_vec_mult_q7.c"/>
        <files mask="arm_householder_f16.c"/>
        <files mask="arm_mat_add_f16.c"/>
        <files mask="arm_mat_cholesky_f16.c"/>
        <files mask="arm_mat_cmplx_mult_f16.c"/>
        <files mask="arm_mat_cmplx_trans_f16.c"/>
        <files mask="arm_mat_init_f16.c"/>
        <files mask="arm_mat_inverse_f16.c"/>
        <files mask="arm_mat_qr_f16.c"/>
        <files mask="arm_mat_mult_f16.c"/>
        <files mask="arm_mat_scale_f16.c"/>
        <files mask="arm_mat_solve_lower_triangular_f16.c"/>
        <files mask="arm_mat_solve_upper_triangular_f16.c"/>
        <files mask="arm_mat_sub_f16.c"/>
        <files mask="arm_mat_trans_f16.c"/>
        <files mask="arm_mat_vec_mult_f16.c"/>
      </source>
      <source relative_path="Source/QuaternionMathFunctions" type="src">
        <files mask="QuaternionMathFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/QuaternionMathFunctions" type="src">
        <files mask="arm_quaternion2rotation_f32.c"/>
        <files mask="arm_quaternion_conjugate_f32.c"/>
        <files mask="arm_quaternion_inverse_f32.c"/>
        <files mask="arm_quaternion_normalize_f32.c"/>
        <files mask="arm_quaternion_norm_f32.c"/>
        <files mask="arm_quaternion_product_f32.c"/>
        <files mask="arm_quaternion_product_single_f32.c"/>
        <files mask="arm_rotation2quaternion_f32.c"/>
      </source>
      <source relative_path="Source/SVMFunctions" type="src">
        <files mask="SVMFunctions.c"/>
        <files mask="SVMFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/SVMFunctions" type="src">
        <files mask="arm_svm_linear_init_f32.c"/>
        <files mask="arm_svm_linear_predict_f32.c"/>
        <files mask="arm_svm_polynomial_init_f32.c"/>
        <files mask="arm_svm_polynomial_predict_f32.c"/>
        <files mask="arm_svm_rbf_init_f32.c"/>
        <files mask="arm_svm_rbf_predict_f32.c"/>
        <files mask="arm_svm_sigmoid_init_f32.c"/>
        <files mask="arm_svm_sigmoid_predict_f32.c"/>
        <files mask="arm_svm_linear_init_f16.c"/>
        <files mask="arm_svm_linear_predict_f16.c"/>
        <files mask="arm_svm_polynomial_init_f16.c"/>
        <files mask="arm_svm_polynomial_predict_f16.c"/>
        <files mask="arm_svm_rbf_init_f16.c"/>
        <files mask="arm_svm_rbf_predict_f16.c"/>
        <files mask="arm_svm_sigmoid_init_f16.c"/>
        <files mask="arm_svm_sigmoid_predict_f16.c"/>
      </source>
      <source relative_path="Source/StatisticsFunctions" type="src">
        <files mask="StatisticsFunctions.c"/>
        <files mask="StatisticsFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/StatisticsFunctions" type="src">
        <files mask="arm_absmax_f32.c"/>
        <files mask="arm_absmax_f64.c"/>
        <files mask="arm_absmax_no_idx_f32.c"/>
        <files mask="arm_absmax_no_idx_f64.c"/>
        <files mask="arm_absmax_no_idx_q15.c"/>
        <files mask="arm_absmax_no_idx_q31.c"/>
        <files mask="arm_absmax_no_idx_q7.c"/>
        <files mask="arm_absmax_q15.c"/>
        <files mask="arm_absmax_q31.c"/>
        <files mask="arm_absmax_q7.c"/>
        <files mask="arm_absmin_f32.c"/>
        <files mask="arm_absmin_f64.c"/>
        <files mask="arm_absmin_no_idx_f32.c"/>
        <files mask="arm_absmin_no_idx_f64.c"/>
        <files mask="arm_absmin_no_idx_q15.c"/>
        <files mask="arm_absmin_no_idx_q31.c"/>
        <files mask="arm_absmin_no_idx_q7.c"/>
        <files mask="arm_absmin_q15.c"/>
        <files mask="arm_absmin_q31.c"/>
        <files mask="arm_absmin_q7.c"/>
        <files mask="arm_accumulate_f32.c"/>
        <files mask="arm_accumulate_f64.c"/>
        <files mask="arm_entropy_f32.c"/>
        <files mask="arm_entropy_f64.c"/>
        <files mask="arm_kullback_leibler_f32.c"/>
        <files mask="arm_kullback_leibler_f64.c"/>
        <files mask="arm_logsumexp_dot_prod_f32.c"/>
        <files mask="arm_logsumexp_f32.c"/>
        <files mask="arm_max_f32.c"/>
        <files mask="arm_max_f64.c"/>
        <files mask="arm_max_no_idx_f32.c"/>
        <files mask="arm_max_no_idx_f64.c"/>
        <files mask="arm_max_no_idx_q15.c"/>
        <files mask="arm_max_no_idx_q31.c"/>
        <files mask="arm_max_no_idx_q7.c"/>
        <files mask="arm_max_q15.c"/>
        <files mask="arm_max_q31.c"/>
        <files mask="arm_max_q7.c"/>
        <files mask="arm_mean_f32.c"/>
        <files mask="arm_mean_f64.c"/>
        <files mask="arm_mean_q15.c"/>
        <files mask="arm_mean_q31.c"/>
        <files mask="arm_mean_q7.c"/>
        <files mask="arm_min_f32.c"/>
        <files mask="arm_min_f64.c"/>
        <files mask="arm_min_no_idx_f32.c"/>
        <files mask="arm_min_no_idx_f64.c"/>
        <files mask="arm_min_no_idx_q15.c"/>
        <files mask="arm_min_no_idx_q31.c"/>
        <files mask="arm_min_no_idx_q7.c"/>
        <files mask="arm_min_q15.c"/>
        <files mask="arm_min_q31.c"/>
        <files mask="arm_min_q7.c"/>
        <files mask="arm_mse_f32.c"/>
        <files mask="arm_mse_f64.c"/>
        <files mask="arm_mse_q15.c"/>
        <files mask="arm_mse_q31.c"/>
        <files mask="arm_mse_q7.c"/>
        <files mask="arm_power_f32.c"/>
        <files mask="arm_power_f64.c"/>
        <files mask="arm_power_q15.c"/>
        <files mask="arm_power_q31.c"/>
        <files mask="arm_power_q7.c"/>
        <files mask="arm_rms_f32.c"/>
        <files mask="arm_rms_q15.c"/>
        <files mask="arm_rms_q31.c"/>
        <files mask="arm_std_f32.c"/>
        <files mask="arm_std_f64.c"/>
        <files mask="arm_std_q15.c"/>
        <files mask="arm_std_q31.c"/>
        <files mask="arm_var_f32.c"/>
        <files mask="arm_var_f64.c"/>
        <files mask="arm_var_q15.c"/>
        <files mask="arm_var_q31.c"/>
        <files mask="arm_absmax_f16.c"/>
        <files mask="arm_absmax_no_idx_f16.c"/>
        <files mask="arm_absmin_f16.c"/>
        <files mask="arm_absmin_no_idx_f16.c"/>
        <files mask="arm_accumulate_f16.c"/>
        <files mask="arm_entropy_f16.c"/>
        <files mask="arm_kullback_leibler_f16.c"/>
        <files mask="arm_logsumexp_dot_prod_f16.c"/>
        <files mask="arm_logsumexp_f16.c"/>
        <files mask="arm_max_f16.c"/>
        <files mask="arm_max_no_idx_f16.c"/>
        <files mask="arm_mean_f16.c"/>
        <files mask="arm_min_f16.c"/>
        <files mask="arm_min_no_idx_f16.c"/>
        <files mask="arm_mse_f16.c"/>
        <files mask="arm_power_f16.c"/>
        <files mask="arm_rms_f16.c"/>
        <files mask="arm_std_f16.c"/>
        <files mask="arm_var_f16.c"/>
      </source>
      <source relative_path="Source/SupportFunctions" type="src">
        <files mask="SupportFunctions.c"/>
        <files mask="SupportFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/SupportFunctions" type="src">
        <files mask="arm_barycenter_f32.c"/>
        <files mask="arm_bitonic_sort_f32.c"/>
        <files mask="arm_bubble_sort_f32.c"/>
        <files mask="arm_copy_f32.c"/>
        <files mask="arm_copy_f64.c"/>
        <files mask="arm_copy_q15.c"/>
        <files mask="arm_copy_q31.c"/>
        <files mask="arm_copy_q7.c"/>
        <files mask="arm_f64_to_float.c"/>
        <files mask="arm_f64_to_q31.c"/>
        <files mask="arm_f64_to_q15.c"/>
        <files mask="arm_f64_to_q7.c"/>
        <files mask="arm_fill_f32.c"/>
        <files mask="arm_fill_f64.c"/>
        <files mask="arm_fill_q15.c"/>
        <files mask="arm_fill_q31.c"/>
        <files mask="arm_fill_q7.c"/>
        <files mask="arm_float_to_f64.c"/>
        <files mask="arm_float_to_q15.c"/>
        <files mask="arm_float_to_q31.c"/>
        <files mask="arm_float_to_q7.c"/>
        <files mask="arm_heap_sort_f32.c"/>
        <files mask="arm_insertion_sort_f32.c"/>
        <files mask="arm_merge_sort_f32.c"/>
        <files mask="arm_merge_sort_init_f32.c"/>
        <files mask="arm_q15_to_f64.c"/>
        <files mask="arm_q15_to_float.c"/>
        <files mask="arm_q15_to_q31.c"/>
        <files mask="arm_q15_to_q7.c"/>
        <files mask="arm_q31_to_f64.c"/>
        <files mask="arm_q31_to_float.c"/>
        <files mask="arm_q31_to_q15.c"/>
        <files mask="arm_q31_to_q7.c"/>
        <files mask="arm_q7_to_f64.c"/>
        <files mask="arm_q7_to_float.c"/>
        <files mask="arm_q7_to_q15.c"/>
        <files mask="arm_q7_to_q31.c"/>
        <files mask="arm_quick_sort_f32.c"/>
        <files mask="arm_selection_sort_f32.c"/>
        <files mask="arm_sort_f32.c"/>
        <files mask="arm_sort_init_f32.c"/>
        <files mask="arm_weighted_average_f32.c"/>
        <files mask="arm_barycenter_f16.c"/>
        <files mask="arm_copy_f16.c"/>
        <files mask="arm_f16_to_float.c"/>
        <files mask="arm_f16_to_q15.c"/>
        <files mask="arm_f16_to_f64.c"/>
        <files mask="arm_f64_to_f16.c"/>
        <files mask="arm_fill_f16.c"/>
        <files mask="arm_float_to_f16.c"/>
        <files mask="arm_q15_to_f16.c"/>
        <files mask="arm_weighted_average_f16.c"/>
      </source>
      <source relative_path="Source/TransformFunctions" type="src">
        <files mask="TransformFunctions.c"/>
        <files mask="TransformFunctionsF16.c"/>
      </source>
      <source exclude="true" relative_path="Source/TransformFunctions" type="src">
        <files mask="arm_bitreversal.c"/>
        <files mask="arm_bitreversal2.c"/>
        <files mask="arm_cfft_f32.c"/>
        <files mask="arm_cfft_f64.c"/>
        <files mask="arm_cfft_init_f32.c"/>
        <files mask="arm_cfft_init_f64.c"/>
        <files mask="arm_cfft_init_q15.c"/>
        <files mask="arm_cfft_init_q31.c"/>
        <files mask="arm_cfft_q15.c"/>
        <files mask="arm_cfft_q31.c"/>
        <files mask="arm_cfft_radix2_f32.c"/>
        <files mask="arm_cfft_radix2_init_f32.c"/>
        <files mask="arm_cfft_radix2_init_q15.c"/>
        <files mask="arm_cfft_radix2_init_q31.c"/>
        <files mask="arm_cfft_radix2_q15.c"/>
        <files mask="arm_cfft_radix2_q31.c"/>
        <files mask="arm_cfft_radix4_f32.c"/>
        <files mask="arm_cfft_radix4_init_f32.c"/>
        <files mask="arm_cfft_radix4_init_q15.c"/>
        <files mask="arm_cfft_radix4_init_q31.c"/>
        <files mask="arm_cfft_radix4_q15.c"/>
        <files mask="arm_cfft_radix4_q31.c"/>
        <files mask="arm_cfft_radix8_f32.c"/>
        <files mask="arm_dct4_f32.c"/>
        <files mask="arm_dct4_init_f32.c"/>
        <files mask="arm_dct4_init_q15.c"/>
        <files mask="arm_dct4_init_q31.c"/>
        <files mask="arm_dct4_q15.c"/>
        <files mask="arm_dct4_q31.c"/>
        <files mask="arm_mfcc_f32.c"/>
        <files mask="arm_mfcc_init_f32.c"/>
        <files mask="arm_mfcc_init_q15.c"/>
        <files mask="arm_mfcc_init_q31.c"/>
        <files mask="arm_mfcc_q15.c"/>
        <files mask="arm_mfcc_q31.c"/>
        <files mask="arm_rfft_f32.c"/>
        <files mask="arm_rfft_fast_f32.c"/>
        <files mask="arm_rfft_fast_f64.c"/>
        <files mask="arm_rfft_fast_init_f32.c"/>
        <files mask="arm_rfft_fast_init_f64.c"/>
        <files mask="arm_rfft_init_f32.c"/>
        <files mask="arm_rfft_init_q15.c"/>
        <files mask="arm_rfft_init_q31.c"/>
        <files mask="arm_rfft_q15.c"/>
        <files mask="arm_rfft_q31.c"/>
        <files mask="arm_bitreversal_f16.c"/>
        <files mask="arm_cfft_f16.c"/>
        <files mask="arm_cfft_init_f16.c"/>
        <files mask="arm_cfft_radix2_f16.c"/>
        <files mask="arm_cfft_radix2_init_f16.c"/>
        <files mask="arm_cfft_radix4_f16.c"/>
        <files mask="arm_cfft_radix8_f16.c"/>
        <files mask="arm_mfcc_f16.c"/>
        <files mask="arm_cfft_radix4_init_f16.c"/>
        <files mask="arm_mfcc_init_f16.c"/>
        <files mask="arm_rfft_fast_f16.c"/>
        <files mask="arm_rfft_fast_init_f16.c"/>
      </source>
      <source relative_path="Source/WindowFunctions" type="src">
        <files mask="WindowFunctions.c"/>
      </source>
      <source exclude="true" relative_path="Source/WindowFunctions" type="src">
        <files mask="arm_bartlett_f32.c"/>
        <files mask="arm_bartlett_f64.c"/>
        <files mask="arm_blackman_harris_92db_f32.c"/>
        <files mask="arm_blackman_harris_92db_f64.c"/>
        <files mask="arm_hamming_f32.c"/>
        <files mask="arm_hamming_f64.c"/>
        <files mask="arm_hanning_f32.c"/>
        <files mask="arm_hanning_f64.c"/>
        <files mask="arm_hft116d_f32.c"/>
        <files mask="arm_hft116d_f64.c"/>
        <files mask="arm_hft144d_f32.c"/>
        <files mask="arm_hft144d_f64.c"/>
        <files mask="arm_hft169d_f32.c"/>
        <files mask="arm_hft169d_f64.c"/>
        <files mask="arm_hft196d_f32.c"/>
        <files mask="arm_hft196d_f64.c"/>
        <files mask="arm_hft223d_f32.c"/>
        <files mask="arm_hft223d_f64.c"/>
        <files mask="arm_hft248d_f32.c"/>
        <files mask="arm_hft248d_f64.c"/>
        <files mask="arm_hft90d_f32.c"/>
        <files mask="arm_hft90d_f64.c"/>
        <files mask="arm_hft95_f32.c"/>
        <files mask="arm_hft95_f64.c"/>
        <files mask="arm_nuttall3a_f32.c"/>
        <files mask="arm_nuttall3a_f64.c"/>
        <files mask="arm_nuttall3b_f32.c"/>
        <files mask="arm_nuttall3b_f64.c"/>
        <files mask="arm_nuttall3_f32.c"/>
        <files mask="arm_nuttall3_f64.c"/>
        <files mask="arm_nuttall4a_f32.c"/>
        <files mask="arm_nuttall4a_f64.c"/>
        <files mask="arm_nuttall4b_f32.c"/>
        <files mask="arm_nuttall4b_f64.c"/>
        <files mask="arm_nuttall4c_f32.c"/>
        <files mask="arm_nuttall4c_f64.c"/>
        <files mask="arm_nuttall4_f32.c"/>
        <files mask="arm_nuttall4_f64.c"/>
        <files mask="arm_welch_f32.c"/>
        <files mask="arm_welch_f64.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_DSP_Source.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="PrivateInclude" type="c_include"/>
        <include_path relative_path="Source/DistanceFunctions" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
        <include_path relative_path="PrivateInclude" type="asm_include"/>
        <include_path relative_path="Source/DistanceFunctions" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Device_API_OSTick.MIMXRT595S" name="CMSIS_Device_API_OSTick" brief="Device interrupt controller interface" version="1.0.2" full_name="CMSIS Device API OSTick" category="Device/OS Tick" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/RTOS2/Include" project_base_path="CMSIS/RTOS2/Include">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="os_tick.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Device_API_OSTick.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Device_API_RTOS2.MIMXRT595S" name="CMSIS_Device_API_RTOS2" brief="CMSIS-RTOS API for Cortex-M, SC000, and SC300" version="2.3.0" full_name="CMSIS Device API RTOS2" category="CMSIS/RTOS2" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/RTOS2/Include" project_base_path="CMSIS/RTOS2/Include">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="cmsis_os2.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Device_API_RTOS2.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.CAN.MIMXRT595S" name="CMSIS_Driver_CAN" brief="Access to #include Driver_CAN.h file for custom implementation" version="1.3.0" full_name="CMSIS Driver CAN" category="CMSIS Driver/CAN" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_CAN.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_CAN.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Ethernet.MIMXRT595S" name="CMSIS_Driver_Ethernet_Common" brief="Access to #include Driver_ETH.h file for custom implementation" version="2.2.0" full_name="CMSIS Driver Ethernet Common" category="CMSIS Driver/Ethernet" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_Common.h"/>
        <files mask="Driver_ETH.h"/>
        <files mask="Driver_ETH_MAC.h"/>
        <files mask="Driver_ETH_PHY.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_Ethernet.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Ethernet_MAC.MIMXRT595S" name="CMSIS_Driver_Ethernet_MAC" brief="Access to #include Driver_ETH_MAC.h file for custom implementation" version="2.2.0" full_name="CMSIS Driver Ethernet MAC" category="CMSIS Driver/Ethernet MAC" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_ETH.h"/>
        <files mask="Driver_Common.h"/>
        <files mask="Driver_ETH_MAC.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_Ethernet_MAC.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Ethernet_PHY.MIMXRT595S" name="CMSIS_Driver_Ethernet_PHY" brief="Access to #include Driver_ETH_PHY.h file for custom implementation" version="2.2.0" full_name="CMSIS Driver Ethernet PHY" category="CMSIS Driver/Ethernet PHY" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_ETH.h"/>
        <files mask="Driver_ETH_PHY.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_Ethernet_PHY.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.Flash.MIMXRT595S" name="CMSIS_Driver_Flash" brief="Access to #include Driver_Flash.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver Flash" category="CMSIS Driver/Flash" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_Flash.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_Flash.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.GPIO.MIMXRT595S" name="CMSIS_Driver_GPIO" brief="Access to #include Driver_GPIO.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver GPIO" category="CMSIS Driver/GPIO" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="Include/GPIO" template="true" type="c_include">
        <files mask="Driver_GPIO.h"/>
      </source>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_Common.h"/>
      </source>
      <source relative_path="Include/GPIO" type="c_include">
        <files mask="Driver_GPIO.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_GPIO.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include/GPIO" type="c_include"/>
        <include_path relative_path="Include/GPIO" type="asm_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.I2C.MIMXRT595S" name="CMSIS_Driver_I2C" brief="Access to #include Driver_I2C.h file for custom implementation" version="2.4.0" full_name="CMSIS Driver I2C" category="CMSIS Driver/I2C" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_I2C.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_I2C.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.MCI.MIMXRT595S" name="CMSIS_Driver_MCI" brief="Access to #include Driver_MCI.h file for custom implementation" version="2.4.0" full_name="CMSIS Driver MCI" category="CMSIS Driver/MCI" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_MCI.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_MCI.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.NAND.MIMXRT595S" name="CMSIS_Driver_NAND" brief="Access to #include Driver_NAND.h file for custom implementation" version="2.4.0" full_name="CMSIS Driver NAND" category="CMSIS Driver/NAND" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_NAND.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_NAND.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.SAI.MIMXRT595S" name="CMSIS_Driver_SAI" brief="Access to #include Driver_SAI.h file for custom implementation" version="1.2.0" full_name="CMSIS Driver SAI" category="CMSIS Driver/SAI" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_SAI.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_SAI.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.SPI.MIMXRT595S" name="CMSIS_Driver_SPI" brief="Access to #include Driver_SPI.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver SPI" category="CMSIS Driver/SPI" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_SPI.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_SPI.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.USART.MIMXRT595S" name="CMSIS_Driver_USART" brief="Access to #include Driver_USART.h file for custom implementation" version="2.4.0" full_name="CMSIS Driver USART" category="CMSIS Driver/USART" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_USART.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_USART.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.USB_Device.MIMXRT595S" name="CMSIS_Driver_USB_Device" brief="Access to #include Driver_USBD.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver USB Device" category="CMSIS Driver/USB Device" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_USBD.h"/>
        <files mask="Driver_USB.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_USB_Device.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.USB_Host.MIMXRT595S" name="CMSIS_Driver_USB_Host" brief="Access to #include Driver_USBH.h file for custom implementation" version="2.3.0" full_name="CMSIS Driver USB Host" category="CMSIS Driver/USB Host" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_USBH.h"/>
        <files mask="Driver_USB.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_USB_Host.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Driver_Include.WiFi.MIMXRT595S" name="CMSIS_Driver_WiFi" brief="Access to #include Driver_WiFi.h file" version="1.1.0" full_name="CMSIS Driver WiFi" category="CMSIS Driver/WiFi" user_visible="false" type="CMSIS_driver" package_base_path="CMSIS/Driver" project_base_path="CMSIS_driver">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="Include" type="c_include">
        <files mask="Driver_WiFi.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Driver_Include_WiFi.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_NN_Source.MIMXRT595S" name="CMSIS_NN_Library_Source" brief="CMSIS-NN Library" version="6.0.0" full_name="CMSIS NN Library Source" category="CMSIS/NN" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/NN" project_base_path="CMSIS/NN">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="README.md" hidden="true"/>
      </source>
      <source relative_path="Include" type="c_include">
        <files mask="arm_nnfunctions.h"/>
        <files mask="arm_nnsupportfunctions.h"/>
        <files mask="arm_nn_math_types.h"/>
        <files mask="arm_nn_tables.h"/>
        <files mask="arm_nn_types.h"/>
      </source>
      <source relative_path="Include/Internal" type="c_include">
        <files mask="arm_nn_compiler.h"/>
      </source>
      <source relative_path="Source/ActivationFunctions" type="src">
        <files mask="arm_nn_activation_s16.c"/>
        <files mask="arm_relu6_s8.c"/>
        <files mask="arm_relu_q15.c"/>
        <files mask="arm_relu_q7.c"/>
      </source>
      <source relative_path="Source/BasicMathFunctions" type="src">
        <files mask="arm_elementwise_add_s16.c"/>
        <files mask="arm_elementwise_add_s8.c"/>
        <files mask="arm_elementwise_mul_acc_s16.c"/>
        <files mask="arm_elementwise_mul_s16.c"/>
        <files mask="arm_elementwise_mul_s16_s8.c"/>
        <files mask="arm_elementwise_mul_s8.c"/>
        <files mask="arm_elementwise_mul_s16_batch_offset.c"/>
      </source>
      <source relative_path="Source/ConcatenationFunctions" type="src">
        <files mask="arm_concatenation_s8_w.c"/>
        <files mask="arm_concatenation_s8_x.c"/>
        <files mask="arm_concatenation_s8_y.c"/>
        <files mask="arm_concatenation_s8_z.c"/>
      </source>
      <source relative_path="Source/ConvolutionFunctions" type="src">
        <files mask="arm_convolve_1x1_s4.c"/>
        <files mask="arm_convolve_1x1_s4_fast.c"/>
        <files mask="arm_convolve_1x1_s8.c"/>
        <files mask="arm_convolve_1x1_s8_fast.c"/>
        <files mask="arm_convolve_1_x_n_s4.c"/>
        <files mask="arm_convolve_1_x_n_s8.c"/>
        <files mask="arm_convolve_get_buffer_sizes_s16.c"/>
        <files mask="arm_convolve_get_buffer_sizes_s4.c"/>
        <files mask="arm_convolve_get_buffer_sizes_s8.c"/>
        <files mask="arm_convolve_s16.c"/>
        <files mask="arm_convolve_s4.c"/>
        <files mask="arm_convolve_s8.c"/>
        <files mask="arm_convolve_wrapper_s16.c"/>
        <files mask="arm_convolve_wrapper_s4.c"/>
        <files mask="arm_convolve_wrapper_s8.c"/>
        <files mask="arm_depthwise_conv_3x3_s8.c"/>
        <files mask="arm_depthwise_conv_fast_s16.c"/>
        <files mask="arm_depthwise_conv_get_buffer_sizes_s16.c"/>
        <files mask="arm_depthwise_conv_get_buffer_sizes_s4.c"/>
        <files mask="arm_depthwise_conv_get_buffer_sizes_s8.c"/>
        <files mask="arm_depthwise_conv_s16.c"/>
        <files mask="arm_depthwise_conv_s4.c"/>
        <files mask="arm_depthwise_conv_s4_opt.c"/>
        <files mask="arm_depthwise_conv_s8.c"/>
        <files mask="arm_depthwise_conv_s8_opt.c"/>
        <files mask="arm_depthwise_conv_wrapper_s16.c"/>
        <files mask="arm_depthwise_conv_wrapper_s4.c"/>
        <files mask="arm_depthwise_conv_wrapper_s8.c"/>
        <files mask="arm_nn_depthwise_conv_s8_core.c"/>
        <files mask="arm_nn_mat_mult_kernel_row_offset_s8_s16.c"/>
        <files mask="arm_nn_mat_mult_kernel_s4_s16.c"/>
        <files mask="arm_nn_mat_mult_kernel_s8_s16.c"/>
        <files mask="arm_nn_mat_mult_kernel_s16.c"/>
        <files mask="arm_nn_mat_mult_s8.c"/>
        <files mask="arm_transpose_conv_get_buffer_sizes_s8.c"/>
        <files mask="arm_transpose_conv_s8.c"/>
      </source>
      <source relative_path="Source/FullyConnectedFunctions" type="src">
        <files mask="arm_fully_connected_get_buffer_sizes_s16.c"/>
        <files mask="arm_fully_connected_get_buffer_sizes_s8.c"/>
        <files mask="arm_fully_connected_s16.c"/>
        <files mask="arm_fully_connected_s4.c"/>
        <files mask="arm_fully_connected_s8.c"/>
        <files mask="arm_vector_sum_s8.c"/>
        <files mask="arm_vector_sum_s8_s64.c"/>
      </source>
      <source relative_path="Source/LSTMFunctions" type="src">
        <files mask="arm_lstm_unidirectional_s16.c"/>
        <files mask="arm_lstm_unidirectional_s8.c"/>
      </source>
      <source relative_path="Source/NNSupportFunctions" type="src">
        <files mask="arm_nntables.c"/>
        <files mask="arm_nn_depthwise_conv_nt_t_padded_s8.c"/>
        <files mask="arm_nn_depthwise_conv_nt_t_s16.c"/>
        <files mask="arm_nn_depthwise_conv_nt_t_s4.c"/>
        <files mask="arm_nn_depthwise_conv_nt_t_s8.c"/>
        <files mask="arm_nn_lstm_calculate_gate_s16.c"/>
        <files mask="arm_nn_lstm_calculate_gate_s8_s16.c"/>
        <files mask="arm_nn_lstm_step_s16.c"/>
        <files mask="arm_nn_lstm_step_s8.c"/>
        <files mask="arm_nn_mat_mult_nt_t_s16.c"/>
        <files mask="arm_nn_mat_mult_nt_t_s4.c"/>
        <files mask="arm_nn_mat_mult_nt_t_s8.c"/>
        <files mask="arm_nn_mat_mult_nt_t_s8_s32.c"/>
        <files mask="arm_nn_mat_mul_core_1x_s4.c"/>
        <files mask="arm_nn_mat_mul_core_1x_s8.c"/>
        <files mask="arm_nn_mat_mul_core_4x_s8.c"/>
        <files mask="arm_nn_vec_mat_mul_result_acc_s16.c"/>
        <files mask="arm_nn_vec_mat_mul_result_acc_s8_s16.c"/>
        <files mask="arm_nn_vec_mat_mult_t_s16.c"/>
        <files mask="arm_nn_vec_mat_mult_t_s4.c"/>
        <files mask="arm_nn_vec_mat_mult_t_s8.c"/>
        <files mask="arm_nn_vec_mat_mult_t_svdf_s8.c"/>
        <files mask="arm_q7_to_q15_with_offset.c"/>
        <files mask="arm_s8_to_s16_unordered_with_offset.c"/>
      </source>
      <source relative_path="Source/PoolingFunctions" type="src">
        <files mask="arm_avgpool_get_buffer_sizes_s16.c"/>
        <files mask="arm_avgpool_get_buffer_sizes_s8.c"/>
        <files mask="arm_avgpool_s16.c"/>
        <files mask="arm_avgpool_s8.c"/>
        <files mask="arm_max_pool_s16.c"/>
        <files mask="arm_max_pool_s8.c"/>
      </source>
      <source relative_path="Source/ReshapeFunctions" type="src">
        <files mask="arm_reshape_s8.c"/>
      </source>
      <source relative_path="Source/SoftmaxFunctions" type="src">
        <files mask="arm_nn_softmax_common_s8.c"/>
        <files mask="arm_softmax_s16.c"/>
        <files mask="arm_softmax_s8.c"/>
        <files mask="arm_softmax_s8_s16.c"/>
        <files mask="arm_softmax_u8.c"/>
      </source>
      <source relative_path="Source/SVDFunctions" type="src">
        <files mask="arm_svdf_get_buffer_sizes_s8.c"/>
        <files mask="arm_svdf_s8.c"/>
        <files mask="arm_svdf_state_s16_s8.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_NN_Source.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Include" type="c_include"/>
        <include_path relative_path="Include" type="asm_include"/>
      </include_paths>
    </component>
    <!--<component id="container.CMSIS_all_files.MIMXRT595S" name="MIMXRT595S" version="1.0.0" package_base_path="CMSIS" project_base_path="./">
  <source relative_path="Driver/Include" type="c_include">
    <files mask="Driver_CAN.h"/>
    <files mask="Driver_Common.h"/>
    <files mask="Driver_ETH.h"/>
    <files mask="Driver_ETH_MAC.h"/>
    <files mask="Driver_ETH_PHY.h"/>
    <files mask="Driver_Flash.h"/>
    <files mask="Driver_I2C.h"/>
    <files mask="Driver_MCI.h"/>
    <files mask="Driver_NAND.h"/>
    <files mask="Driver_SAI.h"/>
    <files mask="Driver_SPI.h"/>
    <files mask="Driver_Storage.h"/>
    <files mask="Driver_USART.h"/>
    <files mask="Driver_USB.h"/>
    <files mask="Driver_USBD.h"/>
    <files mask="Driver_USBH.h"/>
    <files mask="Driver_WiFi.h"/>
  </source>
  <source relative_path="Driver/Include/GPIO" type="c_include">
    <files mask="Driver_GPIO.h"/>
  </source>
  <source relative_path="Driver/VIO/Include" type="c_include">
    <files mask="cmsis_vio.h"/>
  </source>
  <source relative_path="Driver/VIO/Source" type="src">
    <files mask="vio.c"/>
    <files mask="vio_memory.c"/>
  </source>
  <source relative_path="Driver/VIO" type="other">
    <files mask="cmsis_vio.scvd"/>
  </source>
  <source relative_path="Core/Include" type="c_include">
    <files mask="cmsis_clang.h"/>
  </source>
  <source relative_path="Core/Include/m-profile" type="c_include">
    <files mask="cmsis_clang_m.h"/>
  </source>
</component>-->
    <component id="middleware.tfm.s.platform_common.MIMXRT595S" name="TFM_S Platform" brief="TFM Library" version="1.8" full_name="Middleware tfm s platform subset" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m" project_base_path="tf-m">
      <defines>
        <define name="PLATFORM_DEFAULT_NV_COUNTERS" value=""/>
      </defines>
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="platform/ext/common/template" type="src">
        <files mask="crypto_keys.c"/>
        <files mask="nv_counters.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_s_platform_common.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="platform/include" type="c_include"/>
        <include_path relative_path="platform/include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.tfm.s.platform.sp_common.MIMXRT595S" name="TFM_S_Platform_RW61x" brief="TFM Platform Service for RW61x" version="1.8" full_name="Middleware tfm s platform for RW61x" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m" project_base_path="tf-m">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="secure_fw/partitions/platform" type="src">
        <files mask="platform_sp.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_s_platform_sp_common.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.tfm.s.its.load_info_common.MIMXRT595S" name="TFM_S_Internal_Trusted_Storage_Load_Info" brief="TFM Internal Trusted Storage Service Load Info" version="1.8" full_name="Middleware tfm s its load info common" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m" project_base_path="tf-m">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="secure_fw/partitions/internal_trusted_storage/auto_generated" type="src">
        <files mask="load_info_tfm_internal_trusted_storage.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_s_its_load_info_common.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.psatest.ns.tgt_dev_apis_nxp.MIMXRT595S" name="PSATEST_NS_TGT_DEV_APIS_NXP" brief="PSA Test Suite Non Secure target dev_apis" version="1.4" full_name="Middleware psatest ns" category="Security/Arm PSA Test Suite" user_visible="false" type="other" package_base_path="middleware/tfm/psa-arch-tests/api-tests" project_base_path="api-tests">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source relative_path="platform/targets/tgt_dev_apis_nxp/nspe" type="c_include">
        <files mask="pal_attestation_config.h"/>
        <files mask="pal_config.h"/>
        <files mask="pal_crypto_config.h"/>
        <files mask="pal_storage_config.h"/>
        <files mask="target_database.h"/>
      </source>
      <source relative_path="platform/targets/tgt_dev_apis_nxp/nspe" type="src">
        <files mask="pal_driver_intf.c"/>
        <files mask="target_database.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_psatest_ns_tgt_dev_apis_nxp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="platform/targets/tgt_dev_apis_nxp/nspe" type="c_include"/>
        <include_path relative_path="platform/targets/tgt_dev_apis_nxp/nspe" type="asm_include"/>
      </include_paths>
    </component>
    <component id="project_template.MIMXRT595S.MIMXRT595S" name="MIMXRT595S" brief="Devices_project_template MIMXRT595S" version="1.0.0" full_name="Devices_project_template MIMXRT595S" category="Board Support/SDK Project Template" user_visible="true" type="project_template" package_base_path="devices/MIMXRT595S/project_template" project_base_path="board">
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="component.serial_manager.MIMXRT595S"/>
              <component_dependency value="component.serial_manager_uart.MIMXRT595S"/>
              <component_dependency value="platform.utilities.assert.MIMXRT595S"/>
              <component_dependency value="utility.debug_console.MIMXRT595S"/>
              <component_dependency value="utility.debug_console_template_config.MIMXRT595S"/>
            </all>
            <all>
              <component_dependency value="platform.utilities.assert_lite.MIMXRT595S"/>
              <component_dependency value="utility.debug_console_lite.MIMXRT595S"/>
            </all>
          </any_of>
          <component_dependency value="component.usart_adapter.MIMXRT595S"/>
          <component_dependency value="device.MIMXRT595S_startup.MIMXRT595S"/>
          <component_dependency value="platform.drivers.cache_cache64.MIMXRT595S"/>
          <component_dependency value="platform.drivers.clock.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="platform.drivers.flexcomm_usart.MIMXRT595S"/>
          <component_dependency value="platform.drivers.flexspi.MIMXRT595S"/>
          <component_dependency value="platform.drivers.lpc_gpio.MIMXRT595S"/>
          <component_dependency value="platform.drivers.lpc_iopctl.MIMXRT595S"/>
          <component_dependency value="platform.drivers.power.MIMXRT595S"/>
          <component_dependency value="platform.drivers.reset.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" config="true" type="c_include">
        <files mask="board.h"/>
        <files mask="clock_config.h"/>
        <files mask="pin_mux.h"/>
        <files mask="peripherals.h"/>
      </source>
      <source relative_path="./" config="true" type="src">
        <files mask="board.c"/>
        <files mask="clock_config.c"/>
        <files mask="pin_mux.c"/>
        <files mask="peripherals.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="device_project_template.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
      </include_paths>
    </component>
    <component id="platform.devices.MIMXRT595S_linker.MIMXRT595S" name="MIMXRT595S_linker" brief="Device MIMXRT595S_linker" version="1.0.0" full_name="Device MIMXRT595S_linker" category="Device/SDK Utilities" user_visible="true" type="linker" package_base_path="devices/MIMXRT595S" project_base_path="MIMXRT595S">
      <dependencies>
        <device_dependency value="MIMXRT595S"/>
      </dependencies>
      <source toolchain="mdk" relative_path="arm" config="true" type="linker" device_cores="cm33_MIMXRT595S">
        <files mask="MIMXRT595Sxxxx_cm33_ram.scf"/>
        <files mask="MIMXRT595Sxxxx_cm33_flash.scf"/>
      </source>
      <source toolchain="armgcc" relative_path="gcc" config="true" type="linker" device_cores="cm33_MIMXRT595S">
        <files mask="MIMXRT595Sxxxx_cm33_ram.ld"/>
        <files mask="MIMXRT595Sxxxx_cm33_flash.ld"/>
        <files mask="MIMXRT595Sxxxx_cm33_ram_s.ld"/>
        <files mask="MIMXRT595Sxxxx_cm33_flash_s.ld"/>
        <files mask="MIMXRT595Sxxxx_cm33_ram_ns.ld"/>
        <files mask="MIMXRT595Sxxxx_cm33_flash_ns.ld"/>
      </source>
      <source toolchain="iar" relative_path="iar" config="true" type="linker" device_cores="cm33_MIMXRT595S">
        <files mask="MIMXRT595Sxxxx_cm33_ram.icf"/>
        <files mask="MIMXRT595Sxxxx_cm33_flash.icf"/>
        <files mask="MIMXRT595Sxxxx_cm33_ram_s.icf"/>
        <files mask="MIMXRT595Sxxxx_cm33_flash_s.icf"/>
        <files mask="MIMXRT595Sxxxx_cm33_ram_ns.icf"/>
        <files mask="MIMXRT595Sxxxx_cm33_flash_ns.icf"/>
      </source>
    </component>
    <component id="utility.str.MIMXRT595S" name="utility_str" brief="Utility str" version="1.0.0" full_name="Utility str" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT595S/utilities" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="str" type="c_include">
        <files mask="fsl_str.h"/>
      </source>
      <source relative_path="str" type="src">
        <files mask="fsl_str.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_str.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="str" type="c_include"/>
        <include_path relative_path="str" type="asm_include"/>
      </include_paths>
    </component>
    <component id="utility.debug_console_lite.MIMXRT595S" name="debug_console_lite" brief="Utility debug_console_lite" version="1.0.0" full_name="Utility debug_console_lite" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT595S/utilities" project_base_path="utilities">
      <dependencies>
        <all>
          <not>
            <component_dependency value="utility.debug_console.MIMXRT595S"/>
          </not>
          <component_dependency value="platform.drivers.flexcomm_usart.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="utility.str.MIMXRT595S"/>
          <component_dependency value="component.usart_adapter.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="debug_console_lite" type="c_include">
        <files mask="fsl_debug_console.h"/>
      </source>
      <source relative_path="debug_console_lite" type="src">
        <files mask="fsl_debug_console.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_debug_console_lite.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="debug_console_lite" type="c_include"/>
        <include_path relative_path="debug_console_lite" type="asm_include"/>
      </include_paths>
    </component>
    <component id="utility.debug_console.MIMXRT595S" name="debug_console" brief="Utility debug_console" version="1.0.1" full_name="Utility debug_console" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT595S/utilities" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="component.serial_manager.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="utility.str.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="debug_console" type="c_include">
        <files mask="fsl_debug_console.h"/>
      </source>
      <source relative_path="debug_console" type="src">
        <files mask="fsl_debug_console.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_debug_console.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="debug_console" type="c_include"/>
        <include_path relative_path="debug_console" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.utilities.assert.MIMXRT595S" name="assert" brief="Utility assert" version="1.0.0" full_name="Utility assert" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT595S/utilities" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="utility.debug_console.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_assert.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_assert.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_assert.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.utilities.assert_lite.MIMXRT595S" name="assert_lite" brief="Utility assert_lite" version="1.0.0" full_name="Utility assert_lite" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT595S/utilities/debug_console_lite" project_base_path="utilities">
      <dependencies>
        <all>
          <not>
            <component_dependency value="platform.utilities.assert.MIMXRT595S"/>
          </not>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="utility.debug_console_lite.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_assert.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_assert.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_assert_lite.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="device.MIMXRT595S_startup.MIMXRT595S" name="MIMXRT595S_startup" brief="Device MIMXRT595S_startup" version="1.0.0" full_name="Device MIMXRT595S_startup" category="Device/Startup" user_visible="true" type="startup" package_base_path="devices/MIMXRT595S" project_base_path="startup">
      <dependencies>
        <all>
          <component_dependency value="device.MIMXRT595S_system.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" config="true" type="src_c" device_cores="cm33_MIMXRT595S">
        <files mask="startup_mimxrt595s_cm33.c"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="mcuxpresso" project_relative_path="./" config="true" type="src_cpp" device_cores="cm33_MIMXRT595S">
        <files mask="startup_mimxrt595s_cm33.cpp"/>
      </source>
      <source toolchain="iar" relative_path="iar" config="true" type="asm_include" device_cores="cm33_MIMXRT595S">
        <files mask="startup_MIMXRT595S_cm33.s"/>
      </source>
      <source toolchain="armgcc" relative_path="gcc" config="true" type="asm_include" device_cores="cm33_MIMXRT595S">
        <files mask="startup_MIMXRT595S_cm33.S"/>
      </source>
      <source toolchain="mdk" relative_path="arm" config="true" type="asm_include" device_cores="cm33_MIMXRT595S">
        <files mask="startup_MIMXRT595S_cm33.S"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="device_startup.MIMXRT595S.cmake" hidden="true"/>
      </source>
    </component>
    <component id="platform.drivers.dsp.MIMXRT595S" name="dsp" brief="dsp Driver" version="2.0.1" full_name="dsp Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.power.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
          <device_core_dependency value="cm33_MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_dsp.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dsp.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dsp.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.memory.MIMXRT595S" name="memory" brief="MEMORY Driver" version="2.0.0" full_name="Memory Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <device_dependency value="MIMXRT595S"/>
          <device_core_dependency value="cm33_MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_memory.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_memory.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.power.MIMXRT595S" name="power" brief="Power driver" version="2.6.1" full_name="Driver power" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <device_dependency value="MIMXRT595S"/>
          <device_core_dependency value="cm33_MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_power.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_power.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_power.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wireless.framework.MIMXRT595S" name="Connectivity Framework" brief="Enable the Connectivity Framework for wireless applications" version="1.0.0" full_name="wireless framework" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="Common" type="c_include">
        <files mask="EmbeddedTypes.h"/>
        <files mask="fwk_hal_macros.h"/>
      </source>
      <source relative_path="services/DBG" type="c_include">
        <files mask="fwk_debug.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Common" type="c_include"/>
        <include_path relative_path="services/DBG" type="c_include"/>
        <include_path relative_path="Common" type="asm_include"/>
        <include_path relative_path="services/DBG" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wireless.framework.systicks.MIMXRT595S" name="FreeRTOS IDLE hooks for Time Compensation" brief="Those RTOS hooks provides a Pre Idle and Post Idle hooks to ensure timing compensation after low power exit." version="1.0.0" full_name="wireless framework systicks" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="Common/rtos/freertos" type="src">
        <files mask="fwk_freertos_utils.c"/>
      </source>
      <source relative_path="Common/rtos/freertos" type="c_include">
        <files mask="fwk_freertos_utils.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_systicks.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="Common/rtos/freertos" type="c_include"/>
        <include_path relative_path="Common/rtos/freertos" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wireless.framework.heap_mem_manager.MIMXRT595S" name="FreeRTOS Heap API wrapper to MCUX SDK memory manager" brief="FreeRTOS Heap API wrapper to MCUX SDK memory manager" version="1.0.0" full_name="wireless framework heap_mem_manager" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="Common/rtos/freertos" type="src">
        <files mask="heap_mem_manager.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_heap_mem_manager.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.wireless.framework.factory_data_provider.MIMXRT595S" name="Factory Data Provider (FDP) for Matter" brief="This module provides an interface to retrieve factory data used in Matter context." version="1.0.0" full_name="wireless framework factory_data_provider" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="services/FactoryDataProvider" type="src">
        <files mask="fwk_factory_data_provider.c"/>
      </source>
      <source relative_path="services/FactoryDataProvider" type="c_include">
        <files mask="fwk_factory_data_provider.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_factory_data_provider.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="services/FactoryDataProvider" type="c_include"/>
        <include_path relative_path="services/FactoryDataProvider" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wireless.framework.function_lib.MIMXRT595S" name="Memory FunctionLib" brief="Memory manipulation wrapper APIs to either toolchain functions or nxp redefined functions." version="1.0.0" full_name="wireless framework function_lib" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="services/FunctionLib" type="src">
        <files mask="FunctionLib.c"/>
      </source>
      <source relative_path="services/FunctionLib" type="c_include">
        <files mask="FunctionLib.h"/>
      </source>
      <source relative_path="services/FunctionLib" type="doc">
        <files mask="README.md"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_function_lib.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="services/FunctionLib" type="c_include"/>
        <include_path relative_path="services/FunctionLib" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wireless.framework.function_lib.use_toolchain_mem_function.MIMXRT595S" name="Use toolchain memory functions" brief="Use toolchain mem functions like memcpy or memcmp." version="1.0.0" full_name="wireless framework function_lib use_toolchain_mem_function" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <defines>
        <define name="gUseToolchainMemFunc_d" value="1"/>
      </defines>
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_function_lib_use_toolchain_mem_function.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.wireless.framework.hw_parameter.MIMXRT595S" name="Factory HW/Applications Parameters" brief="Read and Write APIs to Flash for Factory HW parameters and Application specific parameters." version="1.0.0" full_name="wireless framework hw_parameter" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="services/HWParameter" type="src">
        <files mask="HWParameter.c"/>
      </source>
      <source relative_path="services/HWParameter" type="c_include">
        <files mask="HWParameter.h"/>
      </source>
      <source relative_path="services/HWParameter" type="doc">
        <files mask="README.md"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_hw_parameter.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="services/HWParameter" type="c_include"/>
        <include_path relative_path="services/HWParameter" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wireless.framework.module_info.MIMXRT595S" name="ModuleInfo" brief="Version module register APIs in order for connectivity component to register Module version, extracted by FSCI." version="1.0.0" full_name="wireless framework module_info" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="services/ModuleInfo" type="src">
        <files mask="ModuleInfo.c"/>
      </source>
      <source relative_path="services/ModuleInfo" type="c_include">
        <files mask="ModuleInfo.h"/>
      </source>
      <source relative_path="services/ModuleInfo" type="doc">
        <files mask="README.md"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_module_info.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="services/ModuleInfo" type="c_include"/>
        <include_path relative_path="services/ModuleInfo" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wireless.framework.nvm.MIMXRT595S" name="Non-Volatile-Memory File System (NVM)" brief="NXP proprietary file system in internal flash for connectivity Applications." version="1.0.0" full_name="wireless framework nvm" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="services/NVM/Interface" type="c_include">
        <files mask="NVM_Interface.h"/>
      </source>
      <source relative_path="services/NVM/Source" type="src">
        <files mask="NV_Flash.c"/>
      </source>
      <source relative_path="services/NVM/Source" type="c_include">
        <files mask="NV_Flash.h"/>
      </source>
      <source relative_path="services/NVM" type="doc">
        <files mask="README.md"/>
      </source>
      <source relative_path="services/NVM/pics" type="other">
        <files mask="flash_active_page_layout.PNG"/>
        <files mask="flash_copy_of_ram_table_entry_structure.PNG"/>
        <files mask="NVM_entry_example.PNG"/>
        <files mask="NVM_MIT_structure.PNG"/>
        <files mask="NVM_Page_copy_and_defragmentation.PNG"/>
        <files mask="NVM_table_entry_list_example.PNG"/>
        <files mask="NVM_virtual_page_getting_full_example.PNG"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_nvm.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="services/NVM/Interface" type="c_include"/>
        <include_path relative_path="services/NVM/Source" type="c_include"/>
        <include_path relative_path="services/NVM/Interface" type="asm_include"/>
        <include_path relative_path="services/NVM/Source" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wireless.framework.nvm.fsci.MIMXRT595S" name="NVM FSCI wrapper" brief="This Component provides an FSCI wrapper to NVM" version="1.0.0" full_name="wireless framework nvm fsci" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <defines>
        <define name="gFsciIncluded_c" value="1"/>
      </defines>
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="services/NVM/Source" type="src">
        <files mask="NV_FsciCommands.c"/>
      </source>
      <source relative_path="services/NVM/Source" type="c_include">
        <files mask="NV_FsciCommands.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_nvm_fsci.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="services/NVM/Source" type="c_include"/>
        <include_path relative_path="services/NVM/Source" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wireless.framework.nvm.interval_policy.w_jitter.MIMXRT595S" name="Save on timer interval policy with jitter" brief="Save on timer interval policy with jitter" version="1.0.0" full_name="wireless framework nvm interval_policy w_jitter" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <defines>
        <define name="gNvmSaveOnIdlePolicy_d" value="3"/>
      </defines>
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_nvm_interval_policy_w_jitter.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.wireless.framework.nvm.interval_policy.wo_jitter.MIMXRT595S" name="Save on timer interval policy" brief="Save on timer interval policy" version="1.0.0" full_name="wireless framework nvm interval_policy wo_jitter" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <defines>
        <define name="gNvmSaveOnIdlePolicy_d" value="1"/>
      </defines>
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_nvm_interval_policy_wo_jitter.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.wireless.framework.nvm.interval_policy.none.MIMXRT595S" name="No use save operations in Idle task on timer" brief="No use save operations in Idle task on timer" version="1.0.0" full_name="wireless framework nvm interval_policy none" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <defines>
        <define name="gNvmSaveOnIdlePolicy_d" value="0"/>
      </defines>
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_nvm_interval_policy_none.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.wireless.framework.ota_support.MIMXRT595S" name="Over-The-Air Firmware update (OTA)" brief="Over-The-Air Firmware update APIs to store new OTA firmware chunks into the OTA flash region." version="1.0.0" full_name="wireless framework ota_support" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="services/OtaSupport/Source" type="src">
        <files mask="OtaSupport.c"/>
      </source>
      <source relative_path="services/OtaSupport/Source" type="c_include">
        <files mask="OtaPrivate.h"/>
      </source>
      <source relative_path="services/OtaSupport/Interface" type="c_include">
        <files mask="OtaSupport.h"/>
        <files mask="OtaServerSupport.h"/>
      </source>
      <source relative_path="services/OtaSupport" type="doc">
        <files mask="README.md"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_ota_support.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="services/OtaSupport/Interface" type="c_include"/>
        <include_path relative_path="services/OtaSupport/Source" type="c_include"/>
        <include_path relative_path="services/OtaSupport/Interface" type="asm_include"/>
        <include_path relative_path="services/OtaSupport/Source" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wireless.framework.ota_support.external_flash.MIMXRT595S" name="External flash" brief="Use external flash for OTA Support." version="1.0.0" full_name="wireless framework ota_support external_flash" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="services/OtaSupport/Source" type="src">
        <files mask="OtaExternalFlash.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_ota_support_external_flash.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.wireless.framework.ota_support.internal_flash.MIMXRT595S" name="Internal flash" brief="Use internal flash for OTA Support." version="1.0.0" full_name="wireless framework ota_support internal_flash" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="services/OtaSupport/Source" type="src">
        <files mask="OtaInternalFlash.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_ota_support_internal_flash.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.wireless.framework.ota_support.no_flash_selected.MIMXRT595S" name="Internal/External flash" brief="Do not select flash for OTA Support, all sources files are added to project. User will have to select manaually setting for linker script variable gUseInternalStorageLink_d." version="1.0.0" full_name="wireless framework ota_support no_flash_selected" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="services/OtaSupport/Source" type="src">
        <files mask="OtaInternalFlash.c"/>
        <files mask="OtaExternalFlash.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_ota_support_no_flash_selected.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.wireless.framework.pdm.MIMXRT595S" name="Persistent Data Manager (PDM) for Zigbee" brief="Persistent Data Manager APIs." version="1.0.0" full_name="wireless framework pdm" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="services/PDM/Include" type="c_include">
        <files mask="PDM.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_pdm.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="services/PDM/Include" type="c_include"/>
        <include_path relative_path="services/PDM/Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wireless.framework.pdum.MIMXRT595S" name="Protocol Data Unit Manager (PDUM) for Zigbee" brief="Protocol Data Unit Manager APIs for Zigbee." version="1.0.0" full_name="wireless framework pdum" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="services/PDUM/Include" type="c_include">
        <files mask="pdum_nwk.h"/>
        <files mask="pdum_apl.h"/>
        <files mask="pdum_common.h"/>
      </source>
      <source relative_path="services/PDUM/Library" type="lib" device_cores="cm33_MIMXRT595S" fpu="true">
        <files mask="libPDUM.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_pdum.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="services/PDUM/Include" type="c_include"/>
        <include_path relative_path="services/PDUM/Include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wireless.framework.platform.MIMXRT595S" name="Platform" brief="Platform" version="1.0.0" full_name="wireless framework platform" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <defines>
        <define name="RPMSG_ADAPTER_NON_BLOCKING_MODE" value="1"/>
      </defines>
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="platform/MIMXRT595S" type="src">
        <files mask="fwk_platform.c"/>
      </source>
      <source relative_path="platform/MIMXRT595S" type="c_include">
        <files mask="fwk_platform.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_platform.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="platform/MIMXRT595S" type="c_include"/>
        <include_path relative_path="platform/MIMXRT595S" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wireless.framework.platform.external_flash.MIMXRT595S" name="External Flash" brief="External Flash platform APIs." version="1.0.0" full_name="wireless framework platform external_flash" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_platform_external_flash.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.wireless.framework.platform.rng.MIMXRT595S" name="Random Number Generator (RNG)" brief="Random Number Generator platform APIs." version="1.0.0" full_name="wireless framework platform rng" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_platform_rng.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.wireless.framework.platform.ble.MIMXRT595S" name="BLE" brief="BLE platform APIs." version="1.0.0" full_name="wireless framework platform ble" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_platform_ble.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.wireless.framework.platform.ics.MIMXRT595S" name="Inter Core (ICS)" brief="Inter core service (ICS) platform APIs min order to manage communication between the 2 cores." version="1.0.0" full_name="wireless framework platform ics" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_platform_ics.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.wireless.framework.platform.sensors.MIMXRT595S" name="Sensors" brief="Sensor platform APIs." version="1.0.0" full_name="wireless framework platform sensors" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_platform_sensors.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.wireless.framework.platform.lowpower.MIMXRT595S" name="Low Power" brief="Low power platform APIs (exclude Timers)." version="1.0.0" full_name="wireless framework platform lowpower" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="platform/MIMXRT595S" type="src">
        <files mask="fwk_platform_lowpower.c"/>
      </source>
      <source relative_path="platform/MIMXRT595S" type="c_include">
        <files mask="fwk_platform_lowpower.h"/>
        <files mask="fwk_platform_lowpower_timer.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_platform_lowpower.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.wireless.framework.platform.lowpower_timer.MIMXRT595S" name="Low Power Timer" brief="Low Power Timer platform APIs." version="1.0.0" full_name="wireless framework platform lowpower_timer" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_platform_lowpower_timer.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.wireless.framework.platform.genfsk.MIMXRT595S" name="GenFSK" brief="GenFSK platform APIs." version="1.0.0" full_name="wireless framework platform genfsk" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_platform_genfsk.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.wireless.framework.platform.internal_flash.MIMXRT595S" name="Internal flash" brief="Internal Flash platform APIs." version="1.0.0" full_name="wireless framework platform internal_flash" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_platform_internal_flash.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.wireless.framework.platform.mws.MIMXRT595S" name="Coexistence (MWS)" brief="Coexistence platform parameters APIs." version="1.0.0" full_name="wireless framework platform mws" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_platform_mws.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.wireless.framework.platform.ot.MIMXRT595S" name="OpenThread" brief="OpenThread platform APIs." version="1.0.0" full_name="wireless framework platform ot" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_platform_ot.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.wireless.framework.platform.reset.MIMXRT595S" name="Deep Power Down Reset" brief="Device Reset APIs via Deep Power Down transition in order to turn power domains OFF." version="1.0.0" full_name="wireless framework platform reset" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_platform_reset.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.wireless.framework.platform.ota.MIMXRT595S" name="OTA firmware update (OTA)" brief="Over-The-Air firmware update platform APIs." version="1.0.0" full_name="wireless framework platform ota" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_platform_ota.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.wireless.framework.platform.lcl.MIMXRT595S" name="Localization (LCL)" brief="Localization platform APIs." version="1.0.0" full_name="wireless framework platform lcl" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_platform_lcl.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.wireless.framework.platform.zb.MIMXRT595S" name="Zigbee" brief="Zigbee platform APIs." version="1.0.0" full_name="wireless framework platform zb" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_platform_zb.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.wireless.framework.platform.crypto.MIMXRT595S" name="Crypto" brief="SecLib SSS crypto APIs." version="1.0.0" full_name="wireless framework platform crypto" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_platform_crypto.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.wireless.framework.platform.coex.MIMXRT595S" name="External Coexistence" brief="External Coexistence platform API in order to manage external controllers." version="1.0.0" full_name="wireless framework platform coex" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_platform_coex.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.wireless.framework.platform.hdlc.MIMXRT595S" name="HDLC" brief="Implements platform API to manage HDLC interface." version="1.0.0" full_name="wireless framework platform hdlc" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_platform_hdlc.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.wireless.framework.file_system.MIMXRT595S" name="Wrapper to Little FS (FileSystem)" brief="Basic Flash read/write APIs using LittleFS." version="1.0.0" full_name="wireless framework file_system" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="services/FileSystem" type="src">
        <files mask="fwk_filesystem.c"/>
      </source>
      <source relative_path="services/FileSystem" type="c_include">
        <files mask="fwk_filesystem.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_file_system.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="services/FileSystem" type="c_include"/>
        <include_path relative_path="services/FileSystem" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wireless.framework.platform.imx_rt.MIMXRT595S" name="i.MX RT platforms" brief="Common platform implementations for i.MX RT platforms." version="1.0.0" full_name="wireless framework platform imx_rt" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_platform_imx_rt.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.wireless.framework.platform.coex.k32w0.MIMXRT595S" name="Coex platform support for k32w0 transceiver" brief="Use coex platform implementation to manage k32w0 controller." version="1.0.0" full_name="wireless framework platform coex k32w0" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_platform_coex_k32w0.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.wireless.framework.platform.coex.iw612.MIMXRT595S" name="Coex platform support for iw612 transceiver" brief="Use coex platform implementation to manage iw612 controller." version="1.0.0" full_name="wireless framework platform coex iw612" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_platform_coex_iw612.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.wireless.framework.platform.lfs_config.MIMXRT595S" name="LittleFS config" brief="Littlefs config for given platform." version="1.0.0" full_name="wireless framework platform lfs_config" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_platform_lfs_config.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.wireless.framework.seclib_rng.MIMXRT595S" name="Security librairies - Random Number Generator (SecLib_RNG)" brief="Crypto algorithms API and Random number generator APIs to connectivity applications." version="1.0.0" full_name="wireless framework seclib_rng" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="services/SecLib_RNG" type="c_include">
        <files mask="SecLib.h"/>
        <files mask="SecLib_ecp256.h"/>
        <files mask="CryptoLibSW.h"/>
        <files mask="RNG_Interface.h"/>
      </source>
      <source relative_path="services/SecLib_RNG" type="src">
        <files mask="SecLib_aes_mmo.c"/>
      </source>
      <source relative_path="services/SecLib_RNG" type="doc">
        <files mask="README.md"/>
      </source>
      <source relative_path="services/SecLib_RNG" type="lib" device_cores="cm33_MIMXRT595S" fpu="true">
        <files mask="lib_crypto_m33.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_seclib_rng.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="services/SecLib_RNG" type="c_include"/>
        <include_path relative_path="services/SecLib_RNG" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wireless.framework.seclib_rng_port.mbedtls.MIMXRT595S" name="Use MbedTLS" brief="Use MbedTLS" version="1.0.0" full_name="wireless framework seclib_rng_port mbedtls" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <defines>
        <define name="CONNFWK_SECLIB_MBEDTLS" value=""/>
        <define name="gRngUseSecureSubSystem_d" value="0"/>
      </defines>
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="services/SecLib_RNG" type="src">
        <files mask="SecLib_mbedTLS.c"/>
        <files mask="RNG_mbedTLS.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_seclib_rng_port_mbedtls.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.wireless.framework.seclib_rng_port.secure_subsystem.MIMXRT595S" name="Use Secure Subsystem" brief="Use Secure Subsystem" version="1.0.0" full_name="wireless framework seclib_rng_port secure_subsystem" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <defines>
        <define name="gRngUseSecureSubSystem_d" value="1"/>
      </defines>
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="services/SecLib_RNG" type="src">
        <files mask="SecLib_sss.c"/>
        <files mask="RNG.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_seclib_rng_port_secure_subsystem.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.wireless.framework.seclib_rng_port.sw.MIMXRT595S" name="Use Software Algorithm" brief="Use Software Algorithm" version="1.0.0" full_name="wireless framework seclib_rng_port sw" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <defines>
        <define name="gRngUseSecureSubSystem_d" value="0"/>
      </defines>
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="services/SecLib_RNG" type="src">
        <files mask="SecLib.c"/>
        <files mask="RNG.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_seclib_rng_port_sw.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.wireless.framework.sensors.MIMXRT595S" name="Sensors for Battery/Temperature measurements" brief="Sensors APIs for Battery/Temperature measurements." version="1.0.0" full_name="wireless framework sensors" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="services/Sensors" type="src">
        <files mask="sensors.c"/>
      </source>
      <source relative_path="services/Sensors" type="c_include">
        <files mask="sensors.h"/>
      </source>
      <source relative_path="services/Sensors" type="doc">
        <files mask="README.md"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_sensors.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="services/Sensors" type="c_include"/>
        <include_path relative_path="services/Sensors" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wireless.framework.lowpower.MIMXRT595S" name="Low Power Module (PWR)" brief="Low-power wrapper APIs to SDK power manager component for connectivity platforms." version="1.0.0" full_name="wireless framework lowpower" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="services/LowPower" type="c_include">
        <files mask="PWR_Interface.h"/>
      </source>
      <source relative_path="services/LowPower" type="src">
        <files mask="PWR.c"/>
      </source>
      <source relative_path="services/LowPower" type="doc">
        <files mask="README.md"/>
      </source>
      <source relative_path="services/LowPower/pics" type="other">
        <files mask="fig4.PNG"/>
        <files mask="fig8.PNG"/>
        <files mask="fig9.PNG"/>
        <files mask="fig10.PNG"/>
      </source>
      <source condition="middleware.freertos-kernel.MIMXRT595S" relative_path="services/LowPower" type="src">
        <files mask="PWR_systicks.c"/>
      </source>
      <source condition="component.osa_bm.MIMXRT595S" relative_path="services/LowPower" type="src">
        <files mask="PWR_systicks_bm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_lowpower.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="services/LowPower" type="c_include"/>
        <include_path relative_path="services/LowPower" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wireless.framework.lowpower.cli.MIMXRT595S" name="Low Power CLI" brief="Low Power CLI APIs in order to configure low power through a serial interface using the SDK debug console." version="1.0.0" full_name="wireless framework lowpower cli" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="services/LowPower" type="c_include">
        <files mask="PWR_cli.h"/>
      </source>
      <source relative_path="services/LowPower" type="src">
        <files mask="PWR_cli.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_lowpower_cli.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="services/LowPower" type="c_include"/>
        <include_path relative_path="services/LowPower" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wireless.framework.zephyr_common.MIMXRT595S" name="wireless framework zephyr_common" brief="wireless framework zephyr_common" version="1.0.0" full_name="wireless framework zephyr_common" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="zephyr/include/zephyr/fs" type="c_include">
        <files mask="nvs.h"/>
      </source>
      <source relative_path="zephyr/include/zephyr/settings" type="c_include">
        <files mask="settings.h"/>
      </source>
      <source relative_path="zephyr/include/zephyr/sys" type="c_include">
        <files mask="crc.h"/>
        <files mask="list_gen.h"/>
        <files mask="slist.h"/>
      </source>
      <source relative_path="zephyr/port/common" type="c_include">
        <files mask="zephyr_errno.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_zephyr_common.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="zephyr/include" type="c_include"/>
        <include_path relative_path="zephyr/include/zephyr/fs" type="c_include"/>
        <include_path relative_path="zephyr/include/zephyr/settings" type="c_include"/>
        <include_path relative_path="zephyr/include/zephyr/sys" type="c_include"/>
        <include_path relative_path="zephyr/port/common" type="c_include"/>
        <include_path relative_path="zephyr/include" type="asm_include"/>
        <include_path relative_path="zephyr/include/zephyr/fs" type="asm_include"/>
        <include_path relative_path="zephyr/include/zephyr/settings" type="asm_include"/>
        <include_path relative_path="zephyr/include/zephyr/sys" type="asm_include"/>
        <include_path relative_path="zephyr/port/common" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wireless.framework.zephyr_port.nvs.MIMXRT595S" name="wireless framework zephyr_port nvs" brief="This Component provides a port of Zephyr NVS file system for connectivity Applications." version="1.0.0" full_name="wireless framework zephyr_port nvs" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="zephyr/port/nvs" type="src">
        <files mask="fwk_nvs_flash.c"/>
      </source>
      <source relative_path="zephyr/port/nvs" type="c_include">
        <files mask="nvs_port.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_zephyr_port_nvs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="zephyr/port/nvs" type="c_include"/>
        <include_path relative_path="zephyr/port/nvs" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wireless.framework.zephyr_port.nvs.internal_flash.MIMXRT595S" name="Internal flash" brief="Use internal flash for NVS file system." version="1.0.0" full_name="wireless framework zephyr_port nvs internal_flash" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <defines>
        <define name="gAppNvsExternalFlash_c" value="0"/>
        <define name="gAppNvsInternalFlash_c" value="1"/>
      </defines>
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="zephyr/port/nvs" type="src">
        <files mask="fwk_nvs_InternalFlash.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_zephyr_port_nvs_internal_flash.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.wireless.framework.zephyr_port.nvs.external_flash.MIMXRT595S" name="External flash" brief="Use external flash for NVS file system." version="1.0.0" full_name="wireless framework zephyr_port nvs external_flash" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <defines>
        <define name="gAppNvsExternalFlash_c" value="1"/>
        <define name="gAppNvsInternalFlash_c" value="0"/>
      </defines>
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="zephyr/port/nvs" type="src">
        <files mask="fwk_nvs_ExternalFlash.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_zephyr_port_nvs_external_flash.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.wireless.framework.zephyr_port.nvs.stats.MIMXRT595S" name="NVS Statistics" brief="Enable Non-volatile storage statistics." version="1.0.0" full_name="wireless framework zephyr_port nvs stats" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="zephyr/port/nvs" type="src">
        <files mask="fwk_nvs_stats.c"/>
      </source>
      <source relative_path="zephyr/port/nvs" type="c_include">
        <files mask="fwk_nvs_stats.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_zephyr_port_nvs_stats.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.wireless.framework.zephyr_port.settings.MIMXRT595S" name="wireless framework zephyr_port settings" brief="This Component is a port of Zephyr Settings for connectivity Applications." version="1.0.0" full_name="wireless framework zephyr_port settings" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="zephyr/include/zephyr/sys" type="c_include">
        <files mask="list_gen.h"/>
        <files mask="slist.h"/>
      </source>
      <source relative_path="zephyr/port/settings" type="c_include">
        <files mask="settings_port.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_zephyr_port_settings.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="zephyr/port/settings" type="c_include"/>
        <include_path relative_path="zephyr/port/settings" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wireless.framework.fsci.MIMXRT595S" name="BLE Flexible Serial Communication Interface (FSCI)" brief="Flexible Serial Communication interface for BLE applications to communicate with NXP BLE host stack." version="1.0.0" full_name="wireless framework fsci" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="services/FSCI/Source" type="src">
        <files mask="FsciCommands.c"/>
        <files mask="FsciCommunication.c"/>
        <files mask="FsciLogging.c"/>
        <files mask="FsciMain.c"/>
      </source>
      <source relative_path="services/FSCI/Source" type="c_include">
        <files mask="FsciCommands.h"/>
        <files mask="FsciCommunication.h"/>
      </source>
      <source relative_path="services/FSCI/Interface" type="c_include">
        <files mask="FsciInterface.h"/>
      </source>
      <source relative_path="services/FSCI" type="doc">
        <files mask="README.md"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_fsci.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="services/FSCI/Source" type="c_include"/>
        <include_path relative_path="services/FSCI/Interface" type="c_include"/>
        <include_path relative_path="services/FSCI/Source" type="asm_include"/>
        <include_path relative_path="services/FSCI/Interface" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wireless.framework.sfc.MIMXRT595S" name="Smart Frequency Calibration for FRO32K (SFC)" brief="Collection of APIs for FRO32K calibration when XTAL32K is not present on the board." version="1.0.0" full_name="wireless framework sfc" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_sfc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="services/SFC" type="c_include"/>
        <include_path relative_path="services/SFC" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wireless.framework.otw.MIMXRT595S" name="Over-The-Wire External Device Communication (OTW) for Matter" brief="Read/Write/Flash operation APIs to communicate Over The Wire with external transceiver." version="1.0.0" full_name="wireless framework otw" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="services/OTW/k32w0_transceiver" type="src">
        <files mask="fwk_otw.c"/>
      </source>
      <source relative_path="services/OTW/Interface" type="c_include">
        <files mask="fwk_otw.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_otw.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="services/OTW/Interface" type="c_include"/>
        <include_path relative_path="services/OTW/Interface" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wireless.framework.platform.mbedtls_config.MIMXRT595S" name="mbedtls config" brief="Use the mbedtls config provided by the Connectivity Framework for the current platform. This should be left disabled if the user wants to use a custom configuration." version="1.0.0" full_name="wireless framework platform mbedtls_config" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_platform_mbedtls_config.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.wireless.framework.sfc.deps.MIMXRT595S" name="wireless framework sfc deps" brief="wireless framework sfc deps" version="1.0.0" full_name="wireless framework sfc deps" category="Connectivity Framework Class/Connectivity Framework Group" user_visible="true" type="middleware" package_base_path="middleware/wireless/framework" project_base_path="framework">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_framework_sfc_deps.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.pal.MIMXRT595S" name="middleware.edgefast_bluetooth.pal" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.pal" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="middleware.edgefast_bluetooth.btble.ethermind.MIMXRT595S"/>
              <component_dependency value="middleware.edgefast_bluetooth.btble.ethermind.lib.MIMXRT595S"/>
              <component_dependency value="middleware.edgefast_bluetooth.template.MIMXRT595S"/>
            </all>
            <all>
              <component_dependency value="middleware.edgefast_bluetooth.ble.ethermind.MIMXRT595S"/>
              <component_dependency value="middleware.edgefast_bluetooth.ble.ethermind.lib.MIMXRT595S"/>
              <component_dependency value="middleware.edgefast_bluetooth.template.MIMXRT595S"/>
            </all>
            <all>
              <component_dependency value="middleware.edgefast_bluetooth.br.ethermind.MIMXRT595S"/>
              <component_dependency value="middleware.edgefast_bluetooth.br.ethermind.lib.MIMXRT595S"/>
              <component_dependency value="middleware.edgefast_bluetooth.template.MIMXRT595S"/>
            </all>
          </any_of>
          <component_dependency value="middleware.mbedtls.MIMXRT595S"/>
          <component_dependency value="middleware.edgefast_bluetooth.common.ethermind.MIMXRT595S"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.crypto.ethermind.MIMXRT595S"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.db_gen.ethermind.MIMXRT595S"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.host_msd_fatfs.ethermind.MIMXRT595S"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.platform.ethermind.MIMXRT595S"/>
          <component_dependency value="middleware.edgefast_bluetooth.porting.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
          <component_dependency value="middleware.usb.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="boards/template" project_relative_path="./" type="doc">
        <files mask="dummy.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_pal.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.common.ethermind.hci.MIMXRT595S" name="middleware.edgefast_bluetooth.common.ethermind.hci" brief="edgefast_bluetooth HCI" version="1.0.0" full_name="middleware.edgefast_bluetooth.common.ethermind.hci" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="port/pal/mcux/bluetooth" project_relative_path="./" type="doc">
        <files mask="dummy.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_common_ethermind_hci.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.common.ethermind.hci_uart.MIMXRT595S" name="middleware.edgefast_bluetooth.common.ethermind.hci_uart" brief="edgefast_bluetooth HCI UART" version="1.0.0" full_name="middleware.edgefast_bluetooth.common.ethermind.hci_uart" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <defines>
        <define name="DEBUG_CONSOLE_TRANSFER_NON_BLOCKING" value="1"/>
        <define name="SERIAL_PORT_TYPE_UART" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_usart_dma.MIMXRT595S"/>
          <component_dependency value="component.serial_manager.MIMXRT595S"/>
          <component_dependency value="component.serial_manager_uart.MIMXRT595S"/>
          <component_dependency value="middleware.edgefast_bluetooth.common.ethermind.hci.MIMXRT595S"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="port/pal/mcux/bluetooth" type="src">
        <files mask="hci_uart.c"/>
      </source>
      <source relative_path="port/pal/mcux/bluetooth" type="c_include">
        <files mask="hci_uart.h"/>
        <files mask="hci_uart_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_common_ethermind_hci_uart.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.common.ethermind.MIMXRT595S" name="middleware.edgefast_bluetooth.common.ethermind" brief="edgefast_bluetooth bt_ble host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.common.ethermind" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <defines>
        <define name="LFS_NO_INTRINSICS" value="1"/>
        <define name="LFS_NO_ERROR" value="1"/>
        <define name="LFS_THREADSAFE" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMXRT595S"/>
          <component_dependency value="component.osa_free_rtos.MIMXRT595S"/>
          <component_dependency value="middleware.edgefast_bluetooth.common.ethermind.hci.MIMXRT595S"/>
          <component_dependency value="middleware.edgefast_bluetooth.config.ethermind.MIMXRT595S"/>
          <component_dependency value="middleware.edgefast_bluetooth.extension.common.ethermind.MIMXRT595S"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <component_dependency value="middleware.fatfs.MIMXRT595S"/>
          <component_dependency value="middleware.littlefs.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="mcuxpresso" relative_path="port/pal/mcux/toolspec/mcuxpresso" type="src">
        <files mask="toolspec.c"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="port/pal/mcux/toolspec/mcuxpresso" type="c_include">
        <files mask="toolspec.h"/>
      </source>
      <source relative_path="bluetooth/export/eOSAL" type="c_include">
        <files mask="eBT_assert.h"/>
        <files mask="eBT_config.h"/>
        <files mask="eBT_debug_api.h"/>
        <files mask="eBT_fops.h"/>
        <files mask="eBT_os.h"/>
        <files mask="eBT_serial.h"/>
        <files mask="eBT_timer.h"/>
      </source>
      <source relative_path="bluetooth/export/include" type="c_include">
        <files mask="BT_a2dp_api.h"/>
        <files mask="BT_analyzer.h"/>
        <files mask="BT_api.h"/>
        <files mask="BT_assigned_numbers.h"/>
        <files mask="BT_at_parser_api.h"/>
        <files mask="BT_att_api.h"/>
        <files mask="BT_avctp_api.h"/>
        <files mask="BT_avdtp_api.h"/>
        <files mask="BT_avrcp_api.h"/>
        <files mask="BT_avrcp_ca_api.h"/>
        <files mask="BT_bip_api.h"/>
        <files mask="BT_bnep_api.h"/>
        <files mask="BT_bottom_half.h"/>
        <files mask="BT_bpp_api.h"/>
        <files mask="BT_common.h"/>
        <files mask="BT_ctn_api.h"/>
        <files mask="BT_dbase_api.h"/>
        <files mask="BT_device_queue.h"/>
        <files mask="BT_error.h"/>
        <files mask="BT_ftp_api.h"/>
        <files mask="BT_gap_api.h"/>
        <files mask="BT_gatt_db_api.h"/>
        <files mask="BT_hci_api.h"/>
        <files mask="BT_hdp_api.h"/>
        <files mask="BT_hfp_ag_api.h"/>
        <files mask="BT_hfp_unit_api.h"/>
        <files mask="BT_hid_device_api.h"/>
        <files mask="BT_hid_host_api.h"/>
        <files mask="BT_irobex_api.h"/>
        <files mask="BT_jpl_api.h"/>
        <files mask="BT_map_api.h"/>
        <files mask="BT_mcap_api.h"/>
        <files mask="BT_obex_api.h"/>
        <files mask="BT_opp_api.h"/>
        <files mask="BT_pan_api.h"/>
        <files mask="BT_pbap_api.h"/>
        <files mask="BT_racp.h"/>
        <files mask="BT_rfcomm_api.h"/>
        <files mask="BT_sap_api.h"/>
        <files mask="BT_sdp_api.h"/>
        <files mask="BT_security.h"/>
        <files mask="BT_sm_api.h"/>
        <files mask="BT_smp_api.h"/>
        <files mask="BT_snoop.h"/>
        <files mask="BT_spp_api.h"/>
        <files mask="BT_status.h"/>
        <files mask="BT_storage.h"/>
        <files mask="BT_version.h"/>
        <files mask="fsm_defines.h"/>
        <files mask="fsm_engine.h"/>
        <files mask="gatt_defines.h"/>
        <files mask="hci_transport.h"/>
        <files mask="l2cap.h"/>
        <files mask="write_task.h"/>
      </source>
      <source relative_path="bluetooth/export/vendor" type="c_include">
        <files mask="vendor_specific_commands.h"/>
        <files mask="vendor_specific_init.h"/>
      </source>
      <source relative_path="bluetooth/export/vendor" type="src">
        <files mask="vendor_specific_init.c"/>
      </source>
      <source relative_path="bluetooth/private/protocols/att" type="c_include">
        <files mask="att.h"/>
      </source>
      <source relative_path="bluetooth/private/protocols/avctp" type="c_include">
        <files mask="avctp.h"/>
      </source>
      <source relative_path="bluetooth/private/protocols/avdtp" type="c_include">
        <files mask="avdtp.h"/>
      </source>
      <source relative_path="bluetooth/private/protocols/bnep" type="c_include">
        <files mask="bnep.h"/>
      </source>
      <source relative_path="bluetooth/private/protocols/dbase" type="c_include">
        <files mask="database.h"/>
      </source>
      <source relative_path="bluetooth/private/protocols/hci_1.2" type="c_include">
        <files mask="hci_h.h"/>
      </source>
      <source relative_path="bluetooth/private/protocols/mcap" type="c_include">
        <files mask="mcap.h"/>
      </source>
      <source relative_path="bluetooth/private/protocols/obex" type="c_include">
        <files mask="obex.h"/>
      </source>
      <source relative_path="bluetooth/private/protocols/rfcomm" type="c_include">
        <files mask="rfcomm.h"/>
      </source>
      <source relative_path="bluetooth/private/protocols/sdp" type="c_include">
        <files mask="sdp.h"/>
      </source>
      <source relative_path="bluetooth/private/protocols/sm" type="c_include">
        <files mask="sm.h"/>
        <files mask="sm_extern.h"/>
        <files mask="sm_internal.h"/>
      </source>
      <source relative_path="bluetooth/private/protocols/smp" type="c_include">
        <files mask="smp.h"/>
        <files mask="smp_extern.h"/>
        <files mask="smp_fsm.h"/>
        <files mask="smp_fsm_engine.h"/>
        <files mask="smp_internal.h"/>
      </source>
      <source relative_path="bluetooth/private/utils/aes_cmac" type="c_include">
        <files mask="aes_cmac.h"/>
      </source>
      <source relative_path="bluetooth/private/utils/at_parser" type="c_include">
        <files mask="at_parser_hsp_hfp.h"/>
      </source>
      <source relative_path="bluetooth/private/utils/object_parser" type="c_include">
        <files mask="object_parser_api.h"/>
        <files mask="tokenizer.h"/>
      </source>
      <source relative_path="bluetooth/private/utils/racp" type="c_include">
        <files mask="racp.h"/>
      </source>
      <source relative_path="bluetooth/private/utils/storage" type="c_include">
        <files mask="storage.h"/>
      </source>
      <source relative_path="bluetooth/private/utils/xml_parser" type="c_include">
        <files mask="xml_common_defines.h"/>
        <files mask="xml_encoder.h"/>
        <files mask="xml_parser.h"/>
      </source>
      <source relative_path="port/osal/src/freertos" type="c_include">
        <files mask="EM_assert.h"/>
        <files mask="EM_config.h"/>
        <files mask="EM_debug.h"/>
        <files mask="EM_debug_api.h"/>
        <files mask="EM_debug_internal.h"/>
        <files mask="EM_fops.h"/>
        <files mask="EM_os.h"/>
        <files mask="EM_serial.h"/>
        <files mask="EM_timer.h"/>
        <files mask="EM_timer_internal.h"/>
      </source>
      <source relative_path="port/osal/src/freertos" type="src">
        <files mask="EM_config.c"/>
        <files mask="EM_debug.c"/>
        <files mask="EM_fops.c"/>
        <files mask="EM_os.c"/>
        <files mask="EM_serial.c"/>
        <files mask="EM_timer.c"/>
      </source>
      <source relative_path="port/pal/mcux/bluetooth" type="c_include">
        <files mask="BT_assert.h"/>
        <files mask="BT_config.h"/>
        <files mask="BT_debug.h"/>
        <files mask="BT_debug_api.h"/>
        <files mask="BT_fops.h"/>
        <files mask="BT_os.h"/>
        <files mask="BT_storage_pl.h"/>
        <files mask="BT_timer.h"/>
        <files mask="btsnoop_pl.h"/>
        <files mask="sco_audio_pl.h"/>
        <files mask="ctn_pl.h"/>
        <files mask="ftp_pl.h"/>
        <files mask="hci_uart_internal.h"/>
        <files mask="map_pl.h"/>
        <files mask="obex_pl.h"/>
        <files mask="pbap_pl.h"/>
        <files mask="write_task_extern_pl.h"/>
        <files mask="write_task_pl.h"/>
        <files mask="littlefs_pl.h"/>
        <files mask="fw_loader_uart.h"/>
      </source>
      <source relative_path="port/pal/mcux/bluetooth" type="src">
        <files mask="BT_status_pl.c"/>
        <files mask="BT_storage_pl.c"/>
        <files mask="btsnoop_pl.c"/>
        <files mask="sco_audio_pl.c"/>
        <files mask="ctn_pl.c"/>
        <files mask="ftp_pl.c"/>
        <files mask="ht_read_task_pl.c"/>
        <files mask="map_pl.c"/>
        <files mask="obex_pl.c"/>
        <files mask="pbap_pl.c"/>
        <files mask="write_task_pl.c"/>
        <files mask="littlefs_pl.c"/>
        <files mask="fw_loader_uart.c"/>
      </source>
      <source relative_path="port/pal/mcux/ethal" type="c_include">
        <files mask="ethal_assert.h"/>
        <files mask="ethal_config.h"/>
        <files mask="ethal_debug.h"/>
        <files mask="ethal_debug_api.h"/>
        <files mask="ethal_debug_internal.h"/>
        <files mask="ethal_fops.h"/>
        <files mask="ethal_os.h"/>
        <files mask="ethal_serial.h"/>
        <files mask="ethal_timer.h"/>
        <files mask="ethal_timer_internal.h"/>
      </source>
      <source relative_path="port/pal/mcux/ethal" type="src">
        <files mask="ethal_config.c"/>
        <files mask="ethal_debug.c"/>
        <files mask="ethal_fops.c"/>
        <files mask="ethal_os.c"/>
        <files mask="ethal_serial.c"/>
        <files mask="ethal_timer.c"/>
      </source>
      <source relative_path="port/pal/mcux/sbc" type="c_include">
        <files mask="sbc_os.h"/>
      </source>
      <source relative_path="port/pal/mcux" type="src">
        <files mask="EM_platform.c"/>
      </source>
      <source relative_path="port/pal/mcux" type="c_include">
        <files mask="EM_platform.h"/>
      </source>
      <source relative_path="bluetooth/private/utils/sbc" type="c_include">
        <files mask="sbc_api.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_common_ethermind.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/pal/mcux/toolspec/mcuxpresso" toolchain="mcuxpresso" type="c_include"/>
        <include_path relative_path="bluetooth/export/eOSAL" type="c_include"/>
        <include_path relative_path="bluetooth/export/include" type="c_include"/>
        <include_path relative_path="bluetooth/export/vendor" type="c_include"/>
        <include_path relative_path="bluetooth/private/protocols/att" type="c_include"/>
        <include_path relative_path="bluetooth/private/protocols/avctp" type="c_include"/>
        <include_path relative_path="bluetooth/private/protocols/avdtp" type="c_include"/>
        <include_path relative_path="bluetooth/private/protocols/bnep" type="c_include"/>
        <include_path relative_path="bluetooth/private/protocols/dbase" type="c_include"/>
        <include_path relative_path="bluetooth/private/protocols/hci_1.2" type="c_include"/>
        <include_path relative_path="bluetooth/private/protocols/mcap" type="c_include"/>
        <include_path relative_path="bluetooth/private/protocols/obex" type="c_include"/>
        <include_path relative_path="bluetooth/private/protocols/rfcomm" type="c_include"/>
        <include_path relative_path="bluetooth/private/protocols/sdp" type="c_include"/>
        <include_path relative_path="bluetooth/private/protocols/sm" type="c_include"/>
        <include_path relative_path="bluetooth/private/protocols/smp" type="c_include"/>
        <include_path relative_path="bluetooth/private/utils/aes_cmac" type="c_include"/>
        <include_path relative_path="bluetooth/private/utils/at_parser" type="c_include"/>
        <include_path relative_path="bluetooth/private/utils/object_parser" type="c_include"/>
        <include_path relative_path="bluetooth/private/utils/racp" type="c_include"/>
        <include_path relative_path="bluetooth/private/utils/storage" type="c_include"/>
        <include_path relative_path="bluetooth/private/utils/xml_parser" type="c_include"/>
        <include_path relative_path="port/pal/mcux/bluetooth" type="c_include"/>
        <include_path relative_path="port/pal/mcux/ethal" type="c_include"/>
        <include_path relative_path="port/pal/mcux/sbc" type="c_include"/>
        <include_path relative_path="port/osal/src/freertos" type="c_include"/>
        <include_path relative_path="port/pal/mcux" type="c_include"/>
        <include_path relative_path="bluetooth/private/utils/sbc" type="c_include"/>
        <include_path relative_path="bluetooth/export/eOSAL" type="asm_include"/>
        <include_path relative_path="bluetooth/export/include" type="asm_include"/>
        <include_path relative_path="bluetooth/export/vendor" type="asm_include"/>
        <include_path relative_path="bluetooth/private/protocols/att" type="asm_include"/>
        <include_path relative_path="bluetooth/private/protocols/avctp" type="asm_include"/>
        <include_path relative_path="bluetooth/private/protocols/avdtp" type="asm_include"/>
        <include_path relative_path="bluetooth/private/protocols/bnep" type="asm_include"/>
        <include_path relative_path="bluetooth/private/protocols/dbase" type="asm_include"/>
        <include_path relative_path="bluetooth/private/protocols/hci_1.2" type="asm_include"/>
        <include_path relative_path="bluetooth/private/protocols/mcap" type="asm_include"/>
        <include_path relative_path="bluetooth/private/protocols/obex" type="asm_include"/>
        <include_path relative_path="bluetooth/private/protocols/rfcomm" type="asm_include"/>
        <include_path relative_path="bluetooth/private/protocols/sdp" type="asm_include"/>
        <include_path relative_path="bluetooth/private/protocols/sm" type="asm_include"/>
        <include_path relative_path="bluetooth/private/protocols/smp" type="asm_include"/>
        <include_path relative_path="bluetooth/private/utils/aes_cmac" type="asm_include"/>
        <include_path relative_path="bluetooth/private/utils/at_parser" type="asm_include"/>
        <include_path relative_path="bluetooth/private/utils/object_parser" type="asm_include"/>
        <include_path relative_path="bluetooth/private/utils/racp" type="asm_include"/>
        <include_path relative_path="bluetooth/private/utils/storage" type="asm_include"/>
        <include_path relative_path="bluetooth/private/utils/xml_parser" type="asm_include"/>
        <include_path relative_path="port/pal/mcux/bluetooth" type="asm_include"/>
        <include_path relative_path="port/pal/mcux/ethal" type="asm_include"/>
        <include_path relative_path="port/pal/mcux/sbc" type="asm_include"/>
        <include_path relative_path="port/osal/src/freertos" type="asm_include"/>
        <include_path relative_path="port/pal/mcux" type="asm_include"/>
        <include_path relative_path="bluetooth/private/utils/sbc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.common.ethermind.lc3.MIMXRT595S" name="middleware.edgefast_bluetooth.common.ethermind.lc3" brief="edgefast_bluetooth bt_ble host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.common.ethermind.lc3" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <defines>
        <define name="LC3_DSP" value="1"/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="middleware.edgefast_bluetooth.ble.ethermind.MIMXRT595S"/>
              <component_dependency value="middleware.edgefast_bluetooth.ble.ethermind.lib.lc3.MIMXRT595S"/>
            </all>
            <all>
              <component_dependency value="middleware.edgefast_bluetooth.br.ethermind.MIMXRT595S"/>
              <component_dependency value="middleware.edgefast_bluetooth.br.ethermind.lib.lc3.MIMXRT595S"/>
            </all>
            <all>
              <component_dependency value="middleware.edgefast_bluetooth.btble.ethermind.MIMXRT595S"/>
              <component_dependency value="middleware.edgefast_bluetooth.btble.ethermind.lib.lc3.MIMXRT595S"/>
            </all>
          </any_of>
          <component_dependency value="middleware.edgefast_bluetooth.le_audio.config.template.MIMXRT595S"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="port/pal/mcux/lc3" type="c_include">
        <files mask="LC3_os.h"/>
      </source>
      <source relative_path="bluetooth/private/utils/lc3/export/include" type="c_include">
        <files mask="LC3_api.h"/>
      </source>
      <source relative_path="bluetooth/private/utils/lc3/private/fixed/config" type="c_include">
        <files mask="LC3_limits.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_common_ethermind_lc3.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/pal/mcux/lc3" type="c_include"/>
        <include_path relative_path="bluetooth/private/utils/lc3/export/include" type="c_include"/>
        <include_path relative_path="bluetooth/private/utils/lc3/private/fixed/config" type="c_include"/>
        <include_path relative_path="port/pal/mcux/lc3" type="asm_include"/>
        <include_path relative_path="bluetooth/private/utils/lc3/export/include" type="asm_include"/>
        <include_path relative_path="bluetooth/private/utils/lc3/private/fixed/config" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.wifi_nxp.controller.base.MIMXRT595S" name="middleware.edgefast_bluetooth.wifi_nxp.controller.base" brief="edgefast_bluetooth wifi_nxp controller" version="1.0.0" full_name="middleware.edgefast_bluetooth.wifi_nxp.controller.base" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <defines>
        <define name="SDIO_ENABLED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="component.rt_gpio_adapter.MIMXRT595S"/>
              <component_dependency value="platform.drivers.lpc_gpio.MIMXRT595S"/>
            </all>
            <all>
              <not>
                <component_dependency value="middleware.lwip.MIMXRT595S"/>
              </not>
              <component_dependency value="middleware.edgefast_bluetooth.wifi_nxp.controller.lwip.config.MIMXRT595S"/>
            </all>
            <all>
              <not>
                <component_dependency value="middleware.wifi.MIMXRT595S"/>
              </not>
              <component_dependency value="middleware.edgefast_bluetooth.wifi_nxp.controller.wifi.config.MIMXRT595S"/>
            </all>
          </any_of>
          <component_dependency value="middleware.edgefast_bluetooth.common.ethermind.hci_uart.MIMXRT595S"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <component_dependency value="middleware.sdmmc.host.usdhc.MIMXRT595S"/>
          <component_dependency value="middleware.sdmmc.sdio.MIMXRT595S"/>
          <component_dependency value="middleware.wifi.fwdnld.MIMXRT595S"/>
          <component_dependency value="middleware.wifi.osa_free_rtos.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="port/pal/mcux/bluetooth/controller" type="c_include">
        <files mask="controller.h"/>
        <files mask="controller_hci_uart.h"/>
      </source>
      <source relative_path="port/pal/mcux/bluetooth/controller" type="src">
        <files mask="controller_wifi_nxp.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_wifi_nxp_controller_base.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/pal/mcux/bluetooth/controller" type="c_include"/>
        <include_path relative_path="port/pal/mcux/bluetooth/controller" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.k32w061.controller.MIMXRT595S" name="middleware.edgefast_bluetooth.k32w061.controller" brief="edgefast_bluetooth k32w061 controller" version="1.0.0" full_name="middleware.edgefast_bluetooth.k32w061.controller" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.common.ethermind.hci_uart.MIMXRT595S"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="port/pal/mcux/bluetooth/controller/k32w061" type="doc">
        <files mask="DK6-RN-0065-Production-Flash-Programmer.pdf" hidden="true"/>
        <files mask="JN-SW-4407+DK6+Production+Flash+Programmer+v2282.exe" hidden="true"/>
        <files mask="readme.txt"/>
        <files mask="DK6-RN-0065-Production-Flash-Programmer.pdf"/>
      </source>
      <source relative_path="port/pal/mcux/bluetooth/controller/k32w061" type="other">
        <files mask="hci_black_box_bm.bin"/>
        <files mask="ot-rcp.bin"/>
        <files mask="ot_rcp_ble_hci_bb_bm_2_uart.bin"/>
        <files mask="ot_rcp_ble_hci_bb_bm_single_uart.bin"/>
        <files mask="JN-SW-4407+DK6+Production+Flash+Programmer+v2282.exe"/>
      </source>
      <source relative_path="port/pal/mcux/bluetooth/controller/k32w061" type="binary">
        <files mask="hci_black_box_bm.bin"/>
        <files mask="ot-rcp.bin"/>
        <files mask="ot_rcp_ble_hci_bb_bm_2_uart.bin"/>
        <files mask="ot_rcp_ble_hci_bb_bm_single_uart.bin"/>
      </source>
      <source relative_path="port/pal/mcux/bluetooth/controller" type="c_include">
        <files mask="controller.h"/>
        <files mask="controller_hci_uart.h"/>
      </source>
      <source relative_path="port/pal/mcux/bluetooth/controller" type="src">
        <files mask="controller_k32w.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_k32w061_controller.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/pal/mcux/bluetooth/controller" type="c_include"/>
        <include_path relative_path="port/pal/mcux/bluetooth/controller" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.rw610.controller.MIMXRT595S" name="middleware.edgefast_bluetooth.rw610.controller" brief="edgefast_bluetooth rw610 controller" version="1.0.0" full_name="middleware.edgefast_bluetooth.rw610.controller" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="port/pal/mcux/bluetooth/controller" type="c_include">
        <files mask="controller.h"/>
      </source>
      <source relative_path="port/pal/mcux/bluetooth/controller" type="src">
        <files mask="controller_rw610.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_rw610_controller.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/pal/mcux/bluetooth/controller" type="c_include"/>
        <include_path relative_path="port/pal/mcux/bluetooth/controller" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.config.ethermind.MIMXRT595S" name="middleware.edgefast_bluetooth.config.ethermind" brief="edgefast_bluetooth configuration for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.config.ethermind" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="bluetooth/private/lib/mcux/default/config" project_relative_path="bluetooth/private/lib/config" type="c_include">
        <files mask="BT_features.h"/>
        <files mask="BT_limits.h"/>
        <files mask="db_gen.h"/>
      </source>
      <source relative_path="bluetooth/private/lib/mcux/default/config" project_relative_path="bluetooth/private/lib/config" type="doc">
        <files mask="dummy.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_config_ethermind.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="bluetooth/private/lib/mcux/default/config" project_relative_path="bluetooth/private/lib/config" type="c_include"/>
        <include_path relative_path="bluetooth/private/lib/mcux/default/config" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.extension.common.ethermind.MIMXRT595S" name="middleware.edgefast_bluetooth.extension.common.ethermind" brief="edgefast_bluetooth extension for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.extension.common.ethermind" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="bluetooth/export/extension" type="src">
        <files mask="aes_cmac_pl.c"/>
        <files mask="BT_common_pl.c"/>
        <files mask="device_queue_pl.c"/>
        <files mask="sm_pl.c"/>
        <files mask="sm_ssp_pl.c"/>
        <files mask="smp_pl.c"/>
        <files mask="gatt_db_pl.c"/>
      </source>
      <source relative_path="bluetooth/export/extension" type="c_include">
        <files mask="aes_cmac_pl.h"/>
        <files mask="BT_common_pl.h"/>
        <files mask="device_queue_pl.h"/>
        <files mask="sm_pl.h"/>
        <files mask="sm_ssp_pl.h"/>
        <files mask="smp_pl.h"/>
        <files mask="gatt_db_pl.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_extension_common_ethermind.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="bluetooth/export/extension" type="c_include"/>
        <include_path relative_path="bluetooth/export/extension" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.btble.ethermind.MIMXRT595S" name="middleware.edgefast_bluetooth.btble.ethermind.dsp" brief="edgefast_bluetooth bt_ble Host stack(including BR and BLE)" version="1.0.0" full_name="middleware.edgefast_bluetooth.btble.ethermind.dsp" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.btble.ethermind.lib.MIMXRT595S"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <component_dependency value="middleware.edgefast_bluetooth.template.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind/host" type="src">
        <files mask="bt_pal_a2dp.c"/>
        <files mask="bt_pal_avrcp.c"/>
        <files mask="bt_pal_avrcp_al_internal.c"/>
        <files mask="bt_pal_avrcp_al_api.c"/>
        <files mask="bt_pal_att.c"/>
        <files mask="bt_pal_eatt.c"/>
        <files mask="bt_pal_conn.c"/>
        <files mask="bt_pal_data.c"/>
        <files mask="bt_pal_ead.c"/>
        <files mask="bt_pal_crypto.c"/>
        <files mask="bt_pal_aes_ccm.c"/>
        <files mask="bt_pal_gatt.c"/>
        <files mask="bt_pal_hci_core.c"/>
        <files mask="bt_pal_adv.c"/>
        <files mask="bt_pal_br.c"/>
        <files mask="bt_pal_id.c"/>
        <files mask="bt_pal_long_wq.c"/>
        <files mask="bt_pal_iso.c"/>
        <files mask="bt_pal_scan.c"/>
        <files mask="bt_pal_ecc.c"/>
        <files mask="bt_pal_addr.c"/>
        <files mask="bt_pal_buf.c"/>
        <files mask="bt_pal_direction.c"/>
        <files mask="bt_pal_keys.c"/>
        <files mask="bt_pal_keys_br.c"/>
        <files mask="bt_pal_l2cap.c"/>
        <files mask="bt_pal_l2cap_br.c"/>
        <files mask="bt_pal_map_mce.c"/>
        <files mask="bt_pal_map_mse.c"/>
        <files mask="bt_pal_monitor.c"/>
        <files mask="bt_pal_rfcomm.c"/>
        <files mask="bt_pal_spp.c"/>
        <files mask="bt_pal_rpa.c"/>
        <files mask="bt_pal_settings.c"/>
        <files mask="bt_pal_sdp.c"/>
        <files mask="bt_pal_smp.c"/>
        <files mask="bt_pal_ssp.c"/>
        <files mask="bt_pal_uuid.c"/>
        <files mask="bt_pal_hfp_ag.c"/>
        <files mask="bt_pal_hfp_hf.c"/>
        <files mask="bt_pal_pbap_pce.c"/>
        <files mask="bt_pal_pbap_pse.c"/>
        <files mask="bt_pal_sco.c"/>
      </source>
      <source relative_path="source/impl/ethermind/host" type="c_include">
        <files mask="bt_pal_a2dp_internal.h"/>
        <files mask="bt_pal_avrcp_al_api.h"/>
        <files mask="bt_pal_avrcp_al_internal.h"/>
        <files mask="bt_pal_avrcp_internal.h"/>
        <files mask="bt_pal_at.h"/>
        <files mask="bt_pal_att_internal.h"/>
        <files mask="bt_pal_avdtp_internal.h"/>
        <files mask="bt_pal_conn_internal.h"/>
        <files mask="bt_pal_crypto_internal.h"/>
        <files mask="bt_pal_gatt_internal.h"/>
        <files mask="bt_pal_hci_core.h"/>
        <files mask="bt_pal_adv.h"/>
        <files mask="bt_pal_br.h"/>
        <files mask="bt_pal_id.h"/>
        <files mask="bt_pal_long_wq.h"/>
        <files mask="bt_pal_iso_internal.h"/>
        <files mask="bt_pal_scan.h"/>
        <files mask="bt_pal_ecc.h"/>
        <files mask="bt_pal_addr_internal.h"/>
        <files mask="bt_pal_buf_view.h"/>
        <files mask="bt_pal_direction_internal.h"/>
        <files mask="bt_pal_hci_ecc.h"/>
        <files mask="bt_pal_keys.h"/>
        <files mask="bt_pal_l2cap_internal.h"/>
        <files mask="bt_pal_l2cap_br_internal.h"/>
        <files mask="bt_pal_l2cap_br_interface.h"/>
        <files mask="bt_pal_map_internal.h"/>
        <files mask="bt_pal_monitor.h"/>
        <files mask="bt_pal_rfcomm_internal.h"/>
        <files mask="bt_pal_rpa.h"/>
        <files mask="bt_pal_settings.h"/>
        <files mask="bt_pal_sdp_internal.h"/>
        <files mask="bt_pal_smp.h"/>
        <files mask="bt_pal_ssp.h"/>
        <files mask="bt_pal_hfp_internal.h"/>
        <files mask="bt_pal_pbap_internal.h"/>
        <files mask="bt_pal_sco_internal.h"/>
      </source>
      <source relative_path="source/impl/ethermind/host/a2dp_codec/sbc" type="src">
        <files mask="a2dp_codec_sbc.c"/>
      </source>
      <source relative_path="include/bluetooth" type="c_include">
        <files mask="pbap_pce.h"/>
        <files mask="pbap_pse.h"/>
        <files mask="pbap_types.h"/>
        <files mask="a2dp.h"/>
        <files mask="avrcp.h"/>
        <files mask="a2dp_codec_sbc.h"/>
        <files mask="addr.h"/>
        <files mask="att.h"/>
        <files mask="avdtp.h"/>
        <files mask="bluetooth.h"/>
        <files mask="direction.h"/>
        <files mask="buf.h"/>
        <files mask="l2cap.h"/>
        <files mask="map_mce.h"/>
        <files mask="map_mse.h"/>
        <files mask="map_types.h"/>
        <files mask="obex.h"/>
        <files mask="rfcomm.h"/>
        <files mask="spp.h"/>
        <files mask="sdp.h"/>
        <files mask="conn.h"/>
        <files mask="crypto.h"/>
        <files mask="gap.h"/>
        <files mask="gatt.h"/>
        <files mask="hci.h"/>
        <files mask="byteorder.h"/>
        <files mask="hci_types.h"/>
        <files mask="ead.h"/>
        <files mask="hci_raw.h"/>
        <files mask="hci_vs.h"/>
        <files mask="hfp_hf.h"/>
        <files mask="hfp_ag.h"/>
        <files mask="iso.h"/>
        <files mask="testing.h"/>
        <files mask="uuid.h"/>
      </source>
      <source relative_path="source/impl/ethermind/common" type="src">
        <files mask="addr.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_btble_ethermind.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/impl/ethermind/host" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/host" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.ble.ethermind.MIMXRT595S" name="middleware.edgefast_bluetooth.ble.ethermind.dsp" brief="edgefast_bluetooth bt_ble Host stack(including BLE only)" version="1.0.0" full_name="middleware.edgefast_bluetooth.ble.ethermind.dsp" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <defines>
        <define name="CFG_BLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.ble.ethermind.lib.MIMXRT595S"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <component_dependency value="middleware.edgefast_bluetooth.template.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind/host" type="src">
        <files mask="bt_pal_att.c"/>
        <files mask="bt_pal_eatt.c"/>
        <files mask="bt_pal_conn.c"/>
        <files mask="bt_pal_data.c"/>
        <files mask="bt_pal_ead.c"/>
        <files mask="bt_pal_crypto.c"/>
        <files mask="bt_pal_aes_ccm.c"/>
        <files mask="bt_pal_gatt.c"/>
        <files mask="bt_pal_hci_core.c"/>
        <files mask="bt_pal_adv.c"/>
        <files mask="bt_pal_br.c"/>
        <files mask="bt_pal_id.c"/>
        <files mask="bt_pal_long_wq.c"/>
        <files mask="bt_pal_iso.c"/>
        <files mask="bt_pal_scan.c"/>
        <files mask="bt_pal_ecc.c"/>
        <files mask="bt_pal_addr.c"/>
        <files mask="bt_pal_buf.c"/>
        <files mask="bt_pal_direction.c"/>
        <files mask="bt_pal_keys.c"/>
        <files mask="bt_pal_l2cap.c"/>
        <files mask="bt_pal_monitor.c"/>
        <files mask="bt_pal_rpa.c"/>
        <files mask="bt_pal_settings.c"/>
        <files mask="bt_pal_smp.c"/>
        <files mask="bt_pal_smp_null.c"/>
        <files mask="bt_pal_uuid.c"/>
      </source>
      <source relative_path="source/impl/ethermind/host" type="c_include">
        <files mask="bt_pal_att_internal.h"/>
        <files mask="bt_pal_conn_internal.h"/>
        <files mask="bt_pal_crypto_internal.h"/>
        <files mask="bt_pal_gatt_internal.h"/>
        <files mask="bt_pal_hci_core.h"/>
        <files mask="bt_pal_adv.h"/>
        <files mask="bt_pal_br.h"/>
        <files mask="bt_pal_id.h"/>
        <files mask="bt_pal_long_wq.h"/>
        <files mask="bt_pal_iso_internal.h"/>
        <files mask="bt_pal_scan.h"/>
        <files mask="bt_pal_ecc.h"/>
        <files mask="bt_pal_addr_internal.h"/>
        <files mask="bt_pal_buf_view.h"/>
        <files mask="bt_pal_direction_internal.h"/>
        <files mask="bt_pal_hci_ecc.h"/>
        <files mask="bt_pal_keys.h"/>
        <files mask="bt_pal_l2cap_internal.h"/>
        <files mask="bt_pal_l2cap_br_internal.h"/>
        <files mask="bt_pal_l2cap_br_interface.h"/>
        <files mask="bt_pal_monitor.h"/>
        <files mask="bt_pal_rpa.h"/>
        <files mask="bt_pal_settings.h"/>
        <files mask="bt_pal_smp.h"/>
        <files mask="bt_pal_ssp.h"/>
      </source>
      <source relative_path="include/bluetooth" type="c_include">
        <files mask="addr.h"/>
        <files mask="att.h"/>
        <files mask="bluetooth.h"/>
        <files mask="direction.h"/>
        <files mask="buf.h"/>
        <files mask="l2cap.h"/>
        <files mask="conn.h"/>
        <files mask="crypto.h"/>
        <files mask="gap.h"/>
        <files mask="gatt.h"/>
        <files mask="hci.h"/>
        <files mask="hci_types.h"/>
        <files mask="ead.h"/>
        <files mask="byteorder.h"/>
        <files mask="hci_raw.h"/>
        <files mask="hci_vs.h"/>
        <files mask="iso.h"/>
        <files mask="testing.h"/>
        <files mask="uuid.h"/>
      </source>
      <source relative_path="source/impl/ethermind/common" type="src">
        <files mask="addr.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_ble_ethermind.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/impl/ethermind/host" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/host" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.br.ethermind.MIMXRT595S" name="middleware.edgefast_bluetooth.br.ethermind.dsp" brief="edgefast_bluetooth bt_ble Host stack(including BR only)" version="1.0.0" full_name="middleware.edgefast_bluetooth.br.ethermind.dsp" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <defines>
        <define name="CFG_CLASSIC" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.br.ethermind.lib.MIMXRT595S"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <component_dependency value="middleware.edgefast_bluetooth.template.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind/host" type="src">
        <files mask="bt_pal_a2dp.c"/>
        <files mask="bt_pal_avrcp.c"/>
        <files mask="bt_pal_avrcp_al_internal.c"/>
        <files mask="bt_pal_avrcp_al_api.c"/>
        <files mask="bt_pal_conn.c"/>
        <files mask="bt_pal_data.c"/>
        <files mask="bt_pal_ead.c"/>
        <files mask="bt_pal_crypto.c"/>
        <files mask="bt_pal_aes_ccm.c"/>
        <files mask="bt_pal_hci_core.c"/>
        <files mask="bt_pal_adv.c"/>
        <files mask="bt_pal_br.c"/>
        <files mask="bt_pal_id.c"/>
        <files mask="bt_pal_long_wq.c"/>
        <files mask="bt_pal_scan.c"/>
        <files mask="bt_pal_ecc.c"/>
        <files mask="bt_pal_addr.c"/>
        <files mask="bt_pal_buf.c"/>
        <files mask="bt_pal_direction.c"/>
        <files mask="bt_pal_keys.c"/>
        <files mask="bt_pal_keys_br.c"/>
        <files mask="bt_pal_l2cap.c"/>
        <files mask="bt_pal_l2cap_br.c"/>
        <files mask="bt_pal_map_mce.c"/>
        <files mask="bt_pal_map_mse.c"/>
        <files mask="bt_pal_monitor.c"/>
        <files mask="bt_pal_rfcomm.c"/>
        <files mask="bt_pal_spp.c"/>
        <files mask="bt_pal_rpa.c"/>
        <files mask="bt_pal_settings.c"/>
        <files mask="bt_pal_sdp.c"/>
        <files mask="bt_pal_smp.c"/>
        <files mask="bt_pal_ssp.c"/>
        <files mask="bt_pal_uuid.c"/>
        <files mask="bt_pal_hfp_ag.c"/>
        <files mask="bt_pal_hfp_hf.c"/>
        <files mask="bt_pal_pbap_pce.c"/>
        <files mask="bt_pal_pbap_pse.c"/>
        <files mask="bt_pal_sco.c"/>
      </source>
      <source relative_path="source/impl/ethermind/host" type="c_include">
        <files mask="bt_pal_a2dp_internal.h"/>
        <files mask="bt_pal_avrcp_al_api.h"/>
        <files mask="bt_pal_avrcp_al_internal.h"/>
        <files mask="bt_pal_avrcp_internal.h"/>
        <files mask="bt_pal_at.h"/>
        <files mask="bt_pal_att_internal.h"/>
        <files mask="bt_pal_avdtp_internal.h"/>
        <files mask="bt_pal_conn_internal.h"/>
        <files mask="bt_pal_crypto_internal.h"/>
        <files mask="bt_pal_gatt_internal.h"/>
        <files mask="bt_pal_hci_core.h"/>
        <files mask="bt_pal_adv.h"/>
        <files mask="bt_pal_br.h"/>
        <files mask="bt_pal_id.h"/>
        <files mask="bt_pal_long_wq.h"/>
        <files mask="bt_pal_scan.h"/>
        <files mask="bt_pal_ecc.h"/>
        <files mask="bt_pal_addr_internal.h"/>
        <files mask="bt_pal_buf_view.h"/>
        <files mask="bt_pal_direction_internal.h"/>
        <files mask="bt_pal_hci_ecc.h"/>
        <files mask="bt_pal_keys.h"/>
        <files mask="bt_pal_l2cap_internal.h"/>
        <files mask="bt_pal_l2cap_br_internal.h"/>
        <files mask="bt_pal_l2cap_br_interface.h"/>
        <files mask="bt_pal_map_internal.h"/>
        <files mask="bt_pal_monitor.h"/>
        <files mask="bt_pal_rfcomm_internal.h"/>
        <files mask="bt_pal_rpa.h"/>
        <files mask="bt_pal_settings.h"/>
        <files mask="bt_pal_sdp_internal.h"/>
        <files mask="bt_pal_smp.h"/>
        <files mask="bt_pal_ssp.h"/>
        <files mask="bt_pal_hfp_internal.h"/>
        <files mask="bt_pal_pbap_internal.h"/>
        <files mask="bt_pal_sco_internal.h"/>
      </source>
      <source relative_path="source/impl/ethermind/host/a2dp_codec/sbc" type="src">
        <files mask="a2dp_codec_sbc.c"/>
      </source>
      <source relative_path="include/bluetooth" type="c_include">
        <files mask="pbap_pce.h"/>
        <files mask="pbap_pse.h"/>
        <files mask="pbap_types.h"/>
        <files mask="a2dp.h"/>
        <files mask="avrcp.h"/>
        <files mask="a2dp_codec_sbc.h"/>
        <files mask="addr.h"/>
        <files mask="att.h"/>
        <files mask="avdtp.h"/>
        <files mask="bluetooth.h"/>
        <files mask="direction.h"/>
        <files mask="buf.h"/>
        <files mask="l2cap.h"/>
        <files mask="map_mce.h"/>
        <files mask="map_mse.h"/>
        <files mask="map_types.h"/>
        <files mask="obex.h"/>
        <files mask="rfcomm.h"/>
        <files mask="spp.h"/>
        <files mask="sdp.h"/>
        <files mask="conn.h"/>
        <files mask="crypto.h"/>
        <files mask="gap.h"/>
        <files mask="gatt.h"/>
        <files mask="hci.h"/>
        <files mask="byteorder.h"/>
        <files mask="hci_types.h"/>
        <files mask="ead.h"/>
        <files mask="hci_raw.h"/>
        <files mask="hci_vs.h"/>
        <files mask="hfp_hf.h"/>
        <files mask="hfp_ag.h"/>
        <files mask="iso.h"/>
        <files mask="testing.h"/>
        <files mask="uuid.h"/>
      </source>
      <source relative_path="source/impl/ethermind/common" type="src">
        <files mask="addr.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_br_ethermind.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/impl/ethermind/host" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/host" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.config.template.MIMXRT595S" name="middleware.edgefast_bluetooth.le_audio.config.template" brief="edgefast_bluetooth configuration template for LE audio" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.config.template" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_config_template.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.cap.MIMXRT595S" name="middleware.edgefast_bluetooth.le_audio.cap" brief="edgefast_bluetooth le_audio.cap" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.cap" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="cap.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="cap_acceptor.c"/>
        <files mask="cap_commander.c"/>
        <files mask="cap_common.c"/>
        <files mask="cap_initiator.c"/>
        <files mask="cap_stream.c"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="c_include">
        <files mask="cap_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_cap.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.aics.MIMXRT595S" name="middleware.edgefast_bluetooth.le_audio.aics" brief="edgefast_bluetooth le_audio.aics" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.aics" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="aics.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="aics.c"/>
        <files mask="aics_client.c"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="c_include">
        <files mask="aics_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_aics.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.vocs.MIMXRT595S" name="middleware.edgefast_bluetooth.le_audio.vocs" brief="edgefast_bluetooth le_audio.vocs" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.vocs" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="vocs.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="vocs.c"/>
        <files mask="vocs_client.c"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="c_include">
        <files mask="vocs_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_vocs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.vcp.MIMXRT595S" name="middleware.edgefast_bluetooth.le_audio.vcs" brief="edgefast_bluetooth le_audio.vcs" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.vcs" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.le_audio.aics.MIMXRT595S"/>
          <component_dependency value="middleware.edgefast_bluetooth.le_audio.vocs.MIMXRT595S"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="vcp.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="c_include">
        <files mask="vcp_internal.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="vcp_vol_ctlr.c"/>
        <files mask="vcp_vol_rend.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_vcp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.micp.MIMXRT595S" name="middleware.edgefast_bluetooth.le_audio.micp" brief="edgefast_bluetooth le_audio.micp" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.micp" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.le_audio.aics.MIMXRT595S"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="micp.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="micp_mic_ctlr.c"/>
        <files mask="micp_mic_dev.c"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="c_include">
        <files mask="micp_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_micp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.csip.MIMXRT595S" name="middleware.edgefast_bluetooth.le_audio.csip" brief="edgefast_bluetooth le_audio.csis" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.csip" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="csip.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="csip_crypto.c"/>
        <files mask="csip_set_coordinator.c"/>
        <files mask="csip_set_member.c"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="c_include">
        <files mask="csip_crypto.h"/>
        <files mask="csip_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_csip.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.ccid.MIMXRT595S" name="middleware.edgefast_bluetooth.le_audio.ccid" brief="edgefast_bluetooth le_audio.ccid" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.ccid" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind/audio" type="c_include">
        <files mask="ccid_internal.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="ccid.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_ccid.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.mcs.MIMXRT595S" name="middleware.edgefast_bluetooth.le_audio.mcs" brief="edgefast_bluetooth le_audio.mcs" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.mcs" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.le_audio.ccid.MIMXRT595S"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="mcs.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="mcs.c"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="c_include">
        <files mask="mcs_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_mcs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.mcc.MIMXRT595S" name="middleware.edgefast_bluetooth.le_audio.mcc" brief="edgefast_bluetooth le_audio.mcc" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.mcc" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.le_audio.ccid.MIMXRT595S"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="mcc.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="mcc.c"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="c_include">
        <files mask="mcc_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_mcc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.mpl.MIMXRT595S" name="middleware.edgefast_bluetooth.le_audio.mpl" brief="edgefast_bluetooth le_audio.mpl" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.mpl" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.le_audio.ccid.MIMXRT595S"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="media_proxy.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="media_proxy.c"/>
        <files mask="mpl.c"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="c_include">
        <files mask="media_proxy_internal.h"/>
        <files mask="mpl_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_mpl.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.bap.MIMXRT595S" name="middleware.edgefast_bluetooth.le_audio.bap" brief="edgefast_bluetooth le_audio.baps" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.bap" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="audio.h"/>
        <files mask="bap_lc3_preset.h"/>
        <files mask="bap.h"/>
        <files mask="lc3.h"/>
        <files mask="pacs.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="c_include">
        <files mask="ascs_internal.h"/>
        <files mask="audio_internal.h"/>
        <files mask="bap_iso.h"/>
        <files mask="bap_endpoint.h"/>
        <files mask="pacs_internal.h"/>
        <files mask="bap_stream.h"/>
        <files mask="bap_unicast_client_internal.h"/>
        <files mask="bap_unicast_server.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="ascs.c"/>
        <files mask="bap_iso.c"/>
        <files mask="audio.c"/>
        <files mask="bap_base.c"/>
        <files mask="bap_broadcast_sink.c"/>
        <files mask="bap_broadcast_source.c"/>
        <files mask="codec.c"/>
        <files mask="pacs.c"/>
        <files mask="bap_stream.c"/>
        <files mask="bap_unicast_client.c"/>
        <files mask="bap_unicast_server.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_bap.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.bass.MIMXRT595S" name="middleware.edgefast_bluetooth.le_audio.bass" brief="edgefast_bluetooth le_audio.bass" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.bass" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="bap.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="bap_broadcast_assistant.c"/>
        <files mask="bap_scan_delegator.c"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="c_include">
        <files mask="bap_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_bass.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.has.MIMXRT595S" name="middleware.edgefast_bluetooth.le_audio.has" brief="edgefast_bluetooth le_audio.has" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.has" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="has.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="has_client.c"/>
        <files mask="has.c"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="c_include">
        <files mask="has_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_has.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.tbs.MIMXRT595S" name="middleware.edgefast_bluetooth.le_audio.tbs" brief="edgefast_bluetooth le_audio.tbs" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.tbs" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="tbs.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="tbs_client.c"/>
        <files mask="tbs.c"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="c_include">
        <files mask="tbs_internal.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_tbs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.tmap.MIMXRT595S" name="middleware.edgefast_bluetooth.le_audio.tmap" brief="edgefast_bluetooth le_audio.tmap" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.tmap" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="tmap.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="tmap.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_tmap.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.gmap.MIMXRT595S" name="middleware.edgefast_bluetooth.le_audio.gmap" brief="edgefast_bluetooth le_audio.gmap" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.gmap" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="gmap.h"/>
        <files mask="gmap_lc3_preset.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="gmap_client.c"/>
        <files mask="gmap_server.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_gmap.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.le_audio.pbp.MIMXRT595S" name="middleware.edgefast_bluetooth.le_audio.pbp" brief="edgefast_bluetooth le_audio.pbp" version="1.0.0" full_name="middleware.edgefast_bluetooth.le_audio.pbp" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="include/bluetooth/audio" type="c_include">
        <files mask="pbp.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio" type="src">
        <files mask="pbp.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_le_audio_pbp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/bluetooth/audio" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="c_include"/>
        <include_path relative_path="include/bluetooth/audio" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.profile.hrs.MIMXRT595S" name="middleware.edgefast_bluetooth.profile.hrs" brief="edgefast_bluetooth profile hrs" version="1.0.0" full_name="middleware.edgefast_bluetooth.profile.hrs" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source/services" type="src">
        <files mask="hrs.c"/>
      </source>
      <source relative_path="include/bluetooth/services" type="c_include">
        <files mask="hrs.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_profile_hrs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/services" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/services" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.profile.bas.MIMXRT595S" name="middleware.edgefast_bluetooth.profile.bas" brief="edgefast_bluetooth profile bas" version="1.0.0" full_name="middleware.edgefast_bluetooth.profile.bas" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source/services" type="src">
        <files mask="bas.c"/>
      </source>
      <source relative_path="include/bluetooth/services" type="c_include">
        <files mask="bas.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_profile_bas.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/services" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/services" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.profile.dis.MIMXRT595S" name="middleware.edgefast_bluetooth.profile.dis" brief="edgefast_bluetooth profile dis" version="1.0.0" full_name="middleware.edgefast_bluetooth.profile.dis" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source/services" type="src">
        <files mask="dis.c"/>
      </source>
      <source relative_path="include/bluetooth/services" type="c_include">
        <files mask="dis.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_profile_dis.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/services" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/services" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.profile.hts.MIMXRT595S" name="middleware.edgefast_bluetooth.profile.hts" brief="edgefast_bluetooth profile hts" version="1.0.0" full_name="middleware.edgefast_bluetooth.profile.hts" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source/services" type="src">
        <files mask="hts.c"/>
      </source>
      <source relative_path="include/bluetooth/services" type="c_include">
        <files mask="hts.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_profile_hts.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/services" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/services" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.profile.ias.MIMXRT595S" name="middleware.edgefast_bluetooth.profile.ias" brief="edgefast_bluetooth profile ias" version="1.0.0" full_name="middleware.edgefast_bluetooth.profile.ias" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source/services/ias" type="src">
        <files mask="ias.c"/>
        <files mask="ias_client.c"/>
      </source>
      <source relative_path="include/bluetooth/services" type="c_include">
        <files mask="ias.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_profile_ias.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/services" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/services" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.profile.hps.MIMXRT595S" name="middleware.edgefast_bluetooth.profile.hps" brief="edgefast_bluetooth profile hps" version="1.0.0" full_name="middleware.edgefast_bluetooth.profile.hps" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source/services" type="src">
        <files mask="hps.c"/>
      </source>
      <source relative_path="include/bluetooth/services" type="c_include">
        <files mask="hps.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_profile_hps.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/services" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/services" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.profile.pxr.MIMXRT595S" name="middleware.edgefast_bluetooth.profile.pxr" brief="edgefast_bluetooth profile pxr" version="1.0.0" full_name="middleware.edgefast_bluetooth.profile.pxr" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source/services" type="src">
        <files mask="pxr.c"/>
      </source>
      <source relative_path="include/bluetooth/services" type="c_include">
        <files mask="pxr.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_profile_pxr.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/services" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/services" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.profile.ipsp.MIMXRT595S" name="middleware.edgefast_bluetooth.profile.ipsp" brief="edgefast_bluetooth profile ipsp" version="1.0.0" full_name="middleware.edgefast_bluetooth.profile.ipsp" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source/services" type="src">
        <files mask="ipsp.c"/>
      </source>
      <source relative_path="include/bluetooth/services" type="c_include">
        <files mask="ipsp.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_profile_ipsp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/services" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/services" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.profile.ots.MIMXRT595S" name="middleware.edgefast_bluetooth.profile.ots" brief="edgefast_bluetooth profile ots" version="1.0.0" full_name="middleware.edgefast_bluetooth.profile.ots" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source/services/ots" type="src">
        <files mask="ots.c"/>
        <files mask="ots_client.c"/>
        <files mask="ots_dir_list.c"/>
        <files mask="ots_l2cap.c"/>
        <files mask="ots_oacp.c"/>
        <files mask="ots_obj_manager.c"/>
        <files mask="ots_olcp.c"/>
      </source>
      <source relative_path="source/services/ots" type="c_include">
        <files mask="ots_client_internal.h"/>
        <files mask="ots_dir_list_internal.h"/>
        <files mask="ots_internal.h"/>
        <files mask="ots_l2cap_internal.h"/>
        <files mask="ots_oacp_internal.h"/>
        <files mask="ots_obj_manager_internal.h"/>
        <files mask="ots_olcp_internal.h"/>
      </source>
      <source relative_path="include/bluetooth/services" type="c_include">
        <files mask="ots.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_profile_ots.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/services" type="c_include"/>
        <include_path relative_path="source/services/ots" type="c_include"/>
        <include_path relative_path="include/bluetooth/services" type="c_include"/>
        <include_path relative_path="source/services" type="asm_include"/>
        <include_path relative_path="source/services/ots" type="asm_include"/>
        <include_path relative_path="include/bluetooth/services" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.profile.wu.MIMXRT595S" name="middleware.edgefast_bluetooth.profile.wu" brief="edgefast_bluetooth profile wu" version="1.0.0" full_name="middleware.edgefast_bluetooth.profile.wu" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source/services" type="src">
        <files mask="wu.c"/>
      </source>
      <source relative_path="include/bluetooth/services" type="c_include">
        <files mask="wu.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_profile_wu.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/services" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/services" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.profile.fmp.MIMXRT595S" name="middleware.edgefast_bluetooth.profile.fmp" brief="edgefast_bluetooth profile fmp" version="1.0.0" full_name="middleware.edgefast_bluetooth.profile.fmp" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source/services" type="src">
        <files mask="fmp.c"/>
      </source>
      <source relative_path="include/bluetooth/services" type="c_include">
        <files mask="fmp.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_profile_fmp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/services" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/services" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.profile.tip.MIMXRT595S" name="middleware.edgefast_bluetooth.profile.tip" brief="edgefast_bluetooth profile tip" version="1.0.0" full_name="middleware.edgefast_bluetooth.profile.tip" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source/services" type="src">
        <files mask="tip.c"/>
      </source>
      <source relative_path="include/bluetooth/services" type="c_include">
        <files mask="tip.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_profile_tip.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/services" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/services" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.pal.crypto.ethermind.MIMXRT595S" name="middleware.edgefast_bluetooth.pal.crypto.ethermind" brief="edgefast_bluetooth PAL crypto support for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.pal.crypto.ethermind" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind/crypto" type="src">
        <files mask="bt_crypto.c"/>
      </source>
      <source relative_path="source/impl/ethermind/crypto" type="c_include">
        <files mask="bt_crypto.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_pal_crypto_ethermind.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/impl/ethermind/crypto" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/host" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/crypto" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/host" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.pal.platform.ethermind.MIMXRT595S" name="middleware.edgefast_bluetooth.pal.platform.ethermind" brief="edgefast_bluetooth PAL platform for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.pal.platform.ethermind" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind/platform" type="src">
        <files mask="bt_ble_platform.c"/>
        <files mask="bt_ble_settings.c"/>
      </source>
      <source relative_path="source/impl/ethermind/platform" type="c_include">
        <files mask="bt_ble_platform.h"/>
        <files mask="bt_ble_settings.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_pal_platform_ethermind.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/impl/ethermind/platform" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/platform" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.pal.host_msd_fatfs.ethermind.MIMXRT595S" name="middleware.edgefast_bluetooth.pal.host_msd_fatfs.ethermind" brief="edgefast_bluetooth host_msd_fatfs for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.pal.host_msd_fatfs.ethermind" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.host_msd_fatfs.ethermind.config.MIMXRT595S"/>
          <component_dependency value="middleware.fatfs.usb.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind/platform" type="src">
        <files mask="host_msd_fatfs.c"/>
      </source>
      <source relative_path="source/impl/ethermind/platform" type="c_include">
        <files mask="host_msd_fatfs.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_pal_host_msd_fatfs_ethermind.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/impl/ethermind/platform" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/platform" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.pal.db_gen.ethermind.MIMXRT595S" name="middleware.edgefast_bluetooth.pal.db_gen.ethermind" brief="edgefast_bluetooth db_gen for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.pal.db_gen.ethermind" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind" type="src">
        <files mask="bt_db_gen.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_pal_db_gen_ethermind.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/impl/ethermind" type="c_include"/>
        <include_path relative_path="source/impl/ethermind" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.porting.atomic.MIMXRT595S" name="middleware.edgefast_bluetooth.porting.atomic" brief="edgefast_bluetooth porting.atomic" version="1.0.0" full_name="middleware.edgefast_bluetooth.porting.atomic" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source/porting" project_relative_path="porting" type="src">
        <files mask="atomic_c.c"/>
      </source>
      <source relative_path="include/sys" type="c_include">
        <files mask="atomic.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_porting_atomic.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/porting" project_relative_path="porting" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/porting" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.porting.list.MIMXRT595S" name="middleware.edgefast_bluetooth.porting.list" brief="edgefast_bluetooth porting.list" version="1.0.0" full_name="middleware.edgefast_bluetooth.porting.list" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="include/sys" type="c_include">
        <files mask="slist.h"/>
        <files mask="dlist.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_porting_list.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/porting" project_relative_path="porting" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/porting" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.porting.net.MIMXRT595S" name="middleware.edgefast_bluetooth.porting.net" brief="edgefast_bluetooth porting.netbuf" version="1.0.0" full_name="middleware.edgefast_bluetooth.porting.net" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source/porting/net" type="src">
        <files mask="buf.c"/>
        <files mask="buf_simple.c"/>
      </source>
      <source relative_path="include/net" type="c_include">
        <files mask="buf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_porting_net.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/porting" project_relative_path="porting" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/porting" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.porting.toolchain.MIMXRT595S" name="middleware.edgefast_bluetooth.porting.toolchain" brief="edgefast_bluetooth porting.toolchain" version="1.0.0" full_name="middleware.edgefast_bluetooth.porting.toolchain" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <defines>
        <define name="CONFIG_ARM" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="include/toolchain" type="c_include">
        <files mask="common.h"/>
        <files mask="gcc.h"/>
        <files mask="iar.h"/>
        <files mask="armcc.h"/>
      </source>
      <source relative_path="include" type="c_include">
        <files mask="toolchain.h"/>
      </source>
      <source relative_path="boards/template" project_relative_path="./" type="doc">
        <files mask="dummy.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_porting_toolchain.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.porting.work_queue.MIMXRT595S" name="middleware.edgefast_bluetooth.porting.work_queue" brief="edgefast_bluetooth porting.work_queue" version="1.0.0" full_name="middleware.edgefast_bluetooth.porting.work_queue" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source/porting/work" type="src">
        <files mask="work.c"/>
      </source>
      <source relative_path="source/porting/work" type="c_include">
        <files mask="work.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_porting_work_queue.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/porting" project_relative_path="porting" type="c_include"/>
        <include_path relative_path="source/porting" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.template.MIMXRT595S" name="EdgeFast Bluetooth configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="EdgeFast Bluetooth configuration template" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="project_template" package_base_path="middleware/edgefast_bluetooth" project_base_path="source">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind/controller/configs/mbedtls" config="true" type="c_include">
        <files mask="mbedtls_config_client.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/impl/ethermind/controller/configs/mbedtls" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/controller/configs/mbedtls" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.porting.MIMXRT595S" name="middleware.edgefast_bluetooth.porting" brief="edgefast_bluetooth porting" version="1.0.0" full_name="middleware.edgefast_bluetooth.porting" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <defines>
        <define name="LOG_ENABLE_ASYNC_MODE" value="1"/>
        <define name="LOG_MAX_ARGUMENT_COUNT" value="10"/>
        <define name="LOG_ENABLE_OVERWRITE" value="0"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.log.MIMXRT595S"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <component_dependency value="middleware.edgefast_bluetooth.porting.atomic.MIMXRT595S"/>
          <component_dependency value="middleware.edgefast_bluetooth.porting.list.MIMXRT595S"/>
          <component_dependency value="middleware.edgefast_bluetooth.porting.net.MIMXRT595S"/>
          <component_dependency value="middleware.edgefast_bluetooth.porting.toolchain.MIMXRT595S"/>
          <component_dependency value="middleware.edgefast_bluetooth.porting.work_queue.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="include/sys" type="c_include">
        <files mask="util.h"/>
        <files mask="util_internal.h"/>
        <files mask="util_loops.h"/>
        <files mask="util_macro.h"/>
        <files mask="printk.h"/>
        <files mask="check.h"/>
        <files mask="byteorder.h"/>
        <files mask="ring_buffer.h"/>
        <files mask="ffs.h"/>
      </source>
      <source relative_path="include/zephyr" type="c_include">
        <files mask="types.h"/>
      </source>
      <source relative_path="source/porting" type="src">
        <files mask="ring_buffer.c"/>
        <files mask="porting.c"/>
        <files mask="utf8.c"/>
      </source>
      <source relative_path="source/porting" type="c_include">
        <files mask="porting.h"/>
        <files mask="system_c.h"/>
      </source>
      <source relative_path="source/porting/errno" type="c_include">
        <files mask="errno.h"/>
      </source>
      <source relative_path="source/porting/fifo" type="src">
        <files mask="fifo.c"/>
      </source>
      <source relative_path="source/porting/fifo" type="c_include">
        <files mask="fifo.h"/>
      </source>
      <source relative_path="source/porting/lifo" type="src">
        <files mask="lifo.c"/>
      </source>
      <source relative_path="source/porting/lifo" type="c_include">
        <files mask="lifo.h"/>
      </source>
      <source relative_path="source/porting/poll" type="src">
        <files mask="poll.c"/>
      </source>
      <source relative_path="source/porting/poll" type="c_include">
        <files mask="poll.h"/>
      </source>
      <source relative_path="source/porting/queue" type="src">
        <files mask="queue.c"/>
      </source>
      <source relative_path="source/porting/queue" type="c_include">
        <files mask="queue.h"/>
      </source>
      <source relative_path="source/porting/sem" type="src">
        <files mask="sem.c"/>
      </source>
      <source relative_path="source/porting/sem" type="c_include">
        <files mask="sem.h"/>
      </source>
      <source relative_path="source/porting/slab" type="src">
        <files mask="slab.c"/>
      </source>
      <source relative_path="source/porting/slab" type="c_include">
        <files mask="slab.h"/>
      </source>
      <source relative_path="source/porting/slist" type="src">
        <files mask="slist.c"/>
      </source>
      <source relative_path="source/porting/spinlock" type="c_include">
        <files mask="spinlock.h"/>
      </source>
      <source relative_path="source/porting/thread" type="src">
        <files mask="thread.c"/>
      </source>
      <source relative_path="source/porting/thread" type="c_include">
        <files mask="thread.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_porting.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/porting" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
        <include_path relative_path="source/porting" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.shell.MIMXRT595S" name="middleware.edgefast_bluetooth.shell" brief="edgefast_bluetooth shell" version="1.0.0" full_name="middleware.edgefast_bluetooth.shell" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <defines>
        <define name="SHELL_ADVANCE" value="1"/>
        <define name="DEBUG_CONSOLE_RX_ENABLE" value="0"/>
        <define name="OSA_USED" value="1"/>
        <define name="SHELL_USE_COMMON_TASK" value="0"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.common_task.MIMXRT595S"/>
          <component_dependency value="middleware.edgefast_bluetooth.btble.ethermind.MIMXRT595S"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source/shell" type="src">
        <files mask="shell_bt.c"/>
        <files mask="shell_bredr.c"/>
        <files mask="shell_gatt.c"/>
        <files mask="shell_hci.c"/>
        <files mask="shell_l2cap.c"/>
        <files mask="shell_rfcomm.c"/>
        <files mask="fsl_shell.c"/>
        <files mask="shell_a2dp.c"/>
        <files mask="shell_avrcp.c"/>
        <files mask="shell_test_mode.c"/>
        <files mask="shell_iso.c"/>
        <files mask="shell_map.c"/>
        <files mask="shell_pbap.c"/>
        <files mask="shell_hfp.c"/>
        <files mask="shell_ble_scan_filter.c"/>
      </source>
      <source relative_path="source/shell" type="c_include">
        <files mask="shell_bt.h"/>
        <files mask="shell_hci.h"/>
        <files mask="fsl_shell.h"/>
        <files mask="shell_test_mode.h"/>
        <files mask="shell_ble_scan_filter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_shell.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/shell" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
        <include_path relative_path="source/shell" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.controller_ind_reset.MIMXRT595S" name="middleware.edgefast_bluetooth.controller_ind_reset" brief="edgefast_bluetooth ind_reset" version="1.0.0" full_name="middleware.edgefast_bluetooth.controller_ind_reset" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind/controller/ind_reset" type="src">
        <files mask="controller_ind_reset.c"/>
      </source>
      <source relative_path="source/impl/ethermind/controller/ind_reset" type="c_include">
        <files mask="controller_ind_reset.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_controller_ind_reset.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/impl/ethermind/controller/ind_reset" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/controller/ind_reset" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.shell.le_audio.MIMXRT595S" name="middleware.edgefast_bluetooth.shell" brief="edgefast_bluetooth shell" version="1.0.0" full_name="middleware.edgefast_bluetooth.shell" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <defines>
        <define name="SHELL_ADVANCE" value="1"/>
        <define name="DEBUG_CONSOLE_RX_ENABLE" value="0"/>
        <define name="OSA_USED" value="1"/>
        <define name="SHELL_USE_COMMON_TASK" value="0"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.common_task.MIMXRT595S"/>
          <component_dependency value="middleware.edgefast_bluetooth.btble.ethermind.MIMXRT595S"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind/audio/shell" type="c_include">
        <files mask="audio.h"/>
      </source>
      <source relative_path="source/impl/ethermind/audio/shell" type="src">
        <files mask="bap_broadcast_assistant.c"/>
        <files mask="bap_scan_delegator.c"/>
        <files mask="bap.c"/>
        <files mask="cap_acceptor.c"/>
        <files mask="cap_commander.c"/>
        <files mask="cap_initiator.c"/>
        <files mask="csip_set_coordinator.c"/>
        <files mask="csip_set_member.c"/>
        <files mask="has_client.c"/>
        <files mask="has.c"/>
        <files mask="mcc.c"/>
        <files mask="media_controller.c"/>
        <files mask="micp_mic_ctlr.c"/>
        <files mask="micp_mic_dev.c"/>
        <files mask="mpl.c"/>
        <files mask="tbs_client.c"/>
        <files mask="tbs.c"/>
        <files mask="tmap.c"/>
        <files mask="gmap.c"/>
        <files mask="pbp.c"/>
        <files mask="vcp_vol_ctlr.c"/>
        <files mask="vcp_vol_rend.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_shell_le_audio.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/shell" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/audio/shell" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
        <include_path relative_path="source/shell" type="asm_include"/>
        <include_path relative_path="source/impl/ethermind/audio/shell" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.liblc3codec.MIMXRT595S" name="middleware.edgefast_bluetooth.liblc3codec" brief="edgefast_bluetooth liblc3codec" version="1.0.0" full_name="middleware.edgefast_bluetooth.liblc3codec" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth/lib" project_base_path="edgefast/lib">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="liblc3codec/include" type="c_include">
        <files mask="lc3.h"/>
        <files mask="lc3_private.h"/>
      </source>
      <source relative_path="liblc3codec/src" type="src">
        <files mask="attdet.c"/>
        <files mask="bits.c"/>
        <files mask="bwdet.c"/>
        <files mask="energy.c"/>
        <files mask="lc3.c"/>
        <files mask="ltpf.c"/>
        <files mask="mdct.c"/>
        <files mask="plc.c"/>
        <files mask="sns.c"/>
        <files mask="spec.c"/>
        <files mask="tns.c"/>
      </source>
      <source relative_path="liblc3codec/src" type="c_include">
        <files mask="attdet.h"/>
        <files mask="bits.h"/>
        <files mask="bwdet.h"/>
        <files mask="common.h"/>
        <files mask="energy.h"/>
        <files mask="ltpf.h"/>
        <files mask="mdct.h"/>
        <files mask="plc.h"/>
        <files mask="sns.h"/>
        <files mask="spec.h"/>
        <files mask="tables.h"/>
        <files mask="tns.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_liblc3codec.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="liblc3codec/include" type="c_include"/>
        <include_path relative_path="liblc3codec" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="liblc3codec/include" type="asm_include"/>
        <include_path relative_path="liblc3codec" type="asm_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.asrc_sw.MIMXRT595S" name="middleware.edgefast_bluetooth.asrc_sw" brief="edgefast_bluetooth asrc_sw" version="1.0.0" full_name="middleware.edgefast_bluetooth.asrc_sw" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/edgefast_bluetooth/lib" project_base_path="edgefast/lib">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="asrc_sw" type="c_include">
        <files mask="srCvtFrm.h"/>
      </source>
      <source relative_path="asrc_sw" type="src">
        <files mask="srCvtFrm.c"/>
      </source>
      <source relative_path="asrc_sw" type="other">
        <files mask="downSmplAllRates.dat"/>
        <files mask="upSmpl_32_32_rev.dat"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_asrc_sw.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="asrc_sw/include" type="c_include"/>
        <include_path relative_path="asrc_sw" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="asrc_sw/include" type="asm_include"/>
        <include_path relative_path="asrc_sw" type="asm_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.shell_ble.MIMXRT595S" name="middleware.edgefast_bluetooth.shell_ble" brief="edgefast_bluetooth shell_ble" version="1.0.0" full_name="middleware.edgefast_bluetooth.shell_ble" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <defines>
        <define name="SHELL_ADVANCE" value="1"/>
        <define name="DEBUG_CONSOLE_RX_ENABLE" value="0"/>
        <define name="OSA_USED" value="1"/>
        <define name="SHELL_USE_COMMON_TASK" value="0"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.common_task.MIMXRT595S"/>
          <component_dependency value="middleware.edgefast_bluetooth.ble.ethermind.MIMXRT595S"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source/shell" type="src">
        <files mask="shell_bt.c"/>
        <files mask="shell_gatt.c"/>
        <files mask="shell_hci.c"/>
        <files mask="shell_l2cap.c"/>
        <files mask="fsl_shell.c"/>
        <files mask="shell_test_mode.c"/>
        <files mask="shell_ble_scan_filter.c"/>
      </source>
      <source relative_path="source/shell" type="c_include">
        <files mask="shell_bt.h"/>
        <files mask="shell_hci.h"/>
        <files mask="fsl_shell.h"/>
        <files mask="shell_test_mode.h"/>
        <files mask="shell_ble_scan_filter.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_shell_ble.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="source/shell" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
        <include_path relative_path="source/shell" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.pal.host_msd_fatfs.ethermind.config.MIMXRT595S" name="middleware.edgefast_bluetooth.pal.host_msd_fatfs.ethermind.config" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.pal.host_msd_fatfs.ethermind.config" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind/platform/configs" type="c_include">
        <files mask="ffconf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_pal_host_msd_fatfs_ethermind_config.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/impl/ethermind/platform/configs" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/platform/configs" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.porting_DEPEND_ANYOF_OPTION_1.MIMXRT595S" name="middleware.edgefast_bluetooth.porting_DEPEND_ANYOF_OPTION_1" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.porting_DEPEND_ANYOF_OPTION_1" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <component_dependency value="middleware.edgefast_bluetooth.porting.MIMXRT595S"/>
          <component_dependency value="platform.utilities.assert.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_porting_DEPEND_ANYOF_OPTION_1.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.porting_DEPEND_ANYOF_OPTION_2.MIMXRT595S" name="middleware.edgefast_bluetooth.porting_DEPEND_ANYOF_OPTION_2" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.porting_DEPEND_ANYOF_OPTION_2" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <component_dependency value="middleware.edgefast_bluetooth.porting.MIMXRT595S"/>
          <component_dependency value="platform.utilities.assert_lite.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_porting_DEPEND_ANYOF_OPTION_2.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.porting_DEPEND_ANYOF_OPTION_3.MIMXRT595S" name="middleware.edgefast_bluetooth.porting_DEPEND_ANYOF_OPTION_3" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.porting_DEPEND_ANYOF_OPTION_3" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <component_dependency value="middleware.edgefast_bluetooth.porting.MIMXRT595S"/>
          <component_dependency value="platform.utilities.assert.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_porting_DEPEND_ANYOF_OPTION_3.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.wifi_nxp.controller.lwip.config.MIMXRT595S" name="middleware.edgefast_bluetooth.wifi_nxp.controller.lwip.config" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.wifi_nxp.controller.lwip.config" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind/controller/configs/lwip" type="c_include">
        <files mask="lwipopts.h"/>
        <files mask="lwippools.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_wifi_nxp_controller_lwip_config.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/impl/ethermind/controller/configs/lwip" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/controller/configs/lwip" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.wifi_nxp.controller.wifi.config.MIMXRT595S" name="middleware.edgefast_bluetooth.wifi_nxp.controller.wifi.config" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.wifi_nxp.controller.wifi.config" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source/impl/ethermind/controller/configs/wifi" type="c_include">
        <files mask="wifi_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_wifi_nxp_controller_wifi_config.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/impl/ethermind/controller/configs/wifi" type="c_include"/>
        <include_path relative_path="source/impl/ethermind/controller/configs/wifi" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.controller_low_power.MIMXRT595S" name="middleware.edgefast_bluetooth.controller_low_power" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.controller_low_power" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="low_power/controller" type="c_include">
        <files mask="controller_low_power.h"/>
        <files mask="controller_low_power_config.h"/>
      </source>
      <source relative_path="low_power/controller" type="src">
        <files mask="controller_low_power.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_controller_low_power.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="low_power/controller" type="c_include"/>
        <include_path relative_path="low_power/controller" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.common.ethermind.lc3_nodsp.MIMXRT595S" name="middleware.edgefast_bluetooth.common.ethermind.lc3_nodsp" brief="edgefast_bluetooth Abstraction Layer" version="1.0.0" full_name="middleware.edgefast_bluetooth.common.ethermind.lc3_nodsp" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/edgefast_bluetooth" project_base_path="edgefast/bluetooth">
      <defines>
        <define name="LC3_DSP" value="0"/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="middleware.edgefast_bluetooth.ble.ethermind.MIMXRT595S"/>
              <component_dependency value="middleware.edgefast_bluetooth.ble.ethermind.lib.lc3_nodsp.MIMXRT595S"/>
            </all>
            <all>
              <component_dependency value="middleware.edgefast_bluetooth.btble.ethermind.MIMXRT595S"/>
              <component_dependency value="middleware.edgefast_bluetooth.btble.ethermind.lib.lc3_nodsp.MIMXRT595S"/>
            </all>
          </any_of>
          <component_dependency value="middleware.edgefast_bluetooth.le_audio.config.template.MIMXRT595S"/>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="../wireless/ethermind/port/pal/mcux/lc3_nodsp" type="c_include">
        <files mask="LC3_os.h"/>
      </source>
      <source relative_path="../wireless/ethermind/bluetooth/private/utils/lc3_nodsp/export/include" type="c_include">
        <files mask="LC3_ndsp_api.h"/>
      </source>
      <source relative_path="../wireless/ethermind/bluetooth/private/utils/lc3_nodsp/private/fixed/common" type="c_include">
        <files mask="lc3_ndsp_defines.h"/>
        <files mask="lc3_ndsp_internal.h"/>
      </source>
      <source relative_path="../wireless/ethermind/bluetooth/private/utils/lc3_nodsp/private/fixed/config" type="c_include">
        <files mask="LC3_ndsp_features.h"/>
        <files mask="LC3_ndsp_limits.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_common_ethermind_lc3_nodsp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="../wireless/ethermind/port/pal/mcux/lc3_nodsp" type="c_include"/>
        <include_path relative_path="../wireless/ethermind/bluetooth/private/utils/lc3_nodsp/export/include" type="c_include"/>
        <include_path relative_path="../wireless/ethermind/bluetooth/private/utils/lc3_nodsp/private/fixed/common" type="c_include"/>
        <include_path relative_path="../wireless/ethermind/bluetooth/private/utils/lc3_nodsp/private/fixed/config" type="c_include"/>
        <include_path relative_path="../wireless/ethermind/port/pal/mcux/lc3_nodsp" type="asm_include"/>
        <include_path relative_path="../wireless/ethermind/bluetooth/private/utils/lc3_nodsp/export/include" type="asm_include"/>
        <include_path relative_path="../wireless/ethermind/bluetooth/private/utils/lc3_nodsp/private/fixed/common" type="asm_include"/>
        <include_path relative_path="../wireless/ethermind/bluetooth/private/utils/lc3_nodsp/private/fixed/config" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_bluetooth.btble.ethermind.lib.MIMXRT595S" name="middleware.edgefast_bluetooth.btble.ethermind.lib.dsp" brief="btble libraries for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.btble.ethermind.lib.dsp" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_bt_a2dp.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_bt_avrcp.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_bt_core.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_bt_gatt.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_bt_hfp.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_bt_map.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_bt_pbap.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_bt_protocol.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_bt_spp.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_bt_util.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_sbc_common.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_sbc_decoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_sbc_encoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/iar" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_bt_a2dp.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/iar" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_bt_avrcp.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/iar" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_bt_core.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/iar" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_bt_gatt.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/iar" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_bt_hfp.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/iar" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_bt_map.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/iar" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_bt_pbap.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/iar" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_bt_protocol.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/iar" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_bt_spp.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/iar" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_bt_util.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/iar" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_sbc_common.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/iar" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_sbc_decoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/iar" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_sbc_encoder.a"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mdk" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_bt_a2dp.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mdk" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_bt_avrcp.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mdk" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_bt_core.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mdk" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_bt_gatt.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mdk" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_bt_hfp.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mdk" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_bt_map.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mdk" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_bt_pbap.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mdk" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_bt_protocol.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mdk" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_bt_spp.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mdk" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_bt_util.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mdk" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_sbc_common.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mdk" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_sbc_decoder.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mdk" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_sbc_encoder.lib"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_bt_a2dp.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_bt_avrcp.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_bt_core.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_bt_gatt.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_bt_hfp.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_bt_map.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_bt_pbap.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_bt_protocol.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_bt_spp.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_bt_util.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_sbc_common.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_sbc_decoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_sbc_encoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_btble_ethermind_lib.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.br.ethermind.lib.MIMXRT595S" name="middleware.edgefast_bluetooth.br.ethermind.lib.dsp" brief="BR libraries for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.br.ethermind.lib.dsp" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm33/gcc" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_br_a2dp.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm33/gcc" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_br_avrcp.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm33/gcc" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_br_core.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm33/gcc" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_br_ctn.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm33/gcc" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_br_hfp.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm33/gcc" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_br_map.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm33/gcc" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_br_pbap.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm33/gcc" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_br_protocol.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm33/gcc" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_br_spp.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm33/gcc" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_br_util.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm33/gcc" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_br_sbc_common.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm33/gcc" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_br_sbc_decoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/br/cm33/gcc" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_br_sbc_encoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/br/cm33/iar" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_br_a2dp.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/br/cm33/iar" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_br_avrcp.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/br/cm33/iar" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_br_core.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/br/cm33/iar" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_br_hfp.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/br/cm33/iar" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_br_map.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/br/cm33/iar" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_br_pbap.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/br/cm33/iar" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_br_protocol.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/br/cm33/iar" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_br_spp.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/br/cm33/iar" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_br_util.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/br/cm33/iar" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_br_sbc_common.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/br/cm33/iar" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_br_sbc_decoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/br/cm33/iar" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_br_sbc_encoder.a"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/br/cm33/mdk" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_br_a2dp.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/br/cm33/mdk" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_br_avrcp.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/br/cm33/mdk" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_br_core.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/br/cm33/mdk" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_br_hfp.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/br/cm33/mdk" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_br_map.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/br/cm33/mdk" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_br_pbap.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/br/cm33/mdk" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_br_protocol.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/br/cm33/mdk" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_br_spp.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/br/cm33/mdk" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_br_util.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/br/cm33/mdk" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_br_sbc_common.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/br/cm33/mdk" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_br_sbc_decoder.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/br/cm33/mdk" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_br_sbc_encoder.lib"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/br/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_br_a2dp.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/br/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_br_avrcp.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/br/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_br_core.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/br/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_br_hfp.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/br/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_br_map.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/br/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_br_pbap.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/br/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_br_protocol.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/br/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_br_spp.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/br/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_br_util.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/br/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_br_sbc_common.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/br/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_br_sbc_decoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/br/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_br_sbc_encoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_br_ethermind_lib.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.ble.ethermind.lib.MIMXRT595S" name="middleware.edgefast_bluetooth.ble.ethermind.lib.dsp" brief="BLE libraries for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.ble.ethermind.lib.dsp" category="Wireless/Middleware Edgefast Bluetooth" user_visible="true" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/gcc" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_ble_core.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/gcc" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_ble_gatt.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/gcc" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_ble_protocol.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/gcc" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_ble_util.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/iar" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_ble_core.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/iar" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_ble_gatt.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/iar" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_ble_protocol.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/iar" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_ble_util.a"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/mdk" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_ble_core.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/mdk" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_ble_gatt.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/mdk" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_ble_protocol.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/mdk" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_ble_util.lib"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_ble_core.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_ble_gatt.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_ble_protocol.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_ble_util.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_ble_ethermind_lib.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.btble.ethermind.lib.lc3.MIMXRT595S" name="middleware.edgefast_bluetooth.btble.ethermind.lib.lc3.dsp" brief="btble libraries for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.btble.ethermind.lib.lc3.dsp" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_common.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_decoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_encoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/iar" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_common.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/iar" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_decoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/iar" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_encoder.a"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mdk" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_common.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mdk" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_decoder.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mdk" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_encoder.lib"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_common.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_decoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_encoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_btble_ethermind_lib_lc3.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.br.ethermind.lib.lc3.MIMXRT595S" name="middleware.edgefast_bluetooth.br.ethermind.lib.lc3.dsp" brief="BR libraries for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.br.ethermind.lib.lc3.dsp" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_common.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_decoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/gcc" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_encoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/iar" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_common.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/iar" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_decoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/iar" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_encoder.a"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mdk" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_common.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mdk" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_decoder.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mdk" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_encoder.lib"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_common.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_decoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_encoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_br_ethermind_lib_lc3.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.ble.ethermind.lib.lc3.MIMXRT595S" name="middleware.edgefast_bluetooth.ble.ethermind.lib.lc3.dsp" brief="BLE libraries for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.ble.ethermind.lib.lc3.dsp" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/gcc" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_common.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/gcc" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_decoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/gcc" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_encoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/iar" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_common.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/iar" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_decoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/iar" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_encoder.a"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/mdk" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_common.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/mdk" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_decoder.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/mdk" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_encoder.lib"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_decoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_encoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/ble/cm33/mcuxpresso" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_common.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_ble_ethermind_lib_lc3.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.btble.ethermind.lib.lc3_nodsp.MIMXRT595S" name="middleware.edgefast_bluetooth.btble.ethermind.lib.lc3_nodsp.dsp" brief="BLE libraries for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.btble.ethermind.lib.lc3_nodsp.dsp" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33nodsp/gcc" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_ndsp_common.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33nodsp/gcc" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_ndsp_decoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33nodsp/gcc" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_ndsp_encoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33nodsp/iar" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_ndsp_common.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33nodsp/iar" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_ndsp_decoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33nodsp/iar" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_ndsp_encoder.a"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33nodsp/mdk" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_ndsp_common.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33nodsp/mdk" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_ndsp_decoder.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33nodsp/mdk" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_ndsp_encoder.lib"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33nodsp/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_ndsp_decoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33nodsp/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_ndsp_encoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/btdm/cm33nodsp/mcuxpresso" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_ndsp_common.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_btble_ethermind_lib_lc3_nodsp.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.edgefast_bluetooth.ble.ethermind.lib.lc3_nodsp.MIMXRT595S" name="middleware.edgefast_bluetooth.ble.ethermind.lib.lc3_nodsp.dsp" brief="BLE libraries for bt_ble Host stack" version="1.0.0" full_name="middleware.edgefast_bluetooth.ble.ethermind.lib.lc3_nodsp.dsp" category="Wireless/Middleware Edgefast Bluetooth" user_visible="false" type="middleware" package_base_path="middleware/wireless/ethermind" project_base_path="bt_ble">
      <dependencies>
        <all>
          <component_dependency value="middleware.edgefast_bluetooth.pal.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/ble/cm33nodsp/gcc" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_ndsp_common.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/ble/cm33nodsp/gcc" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_ndsp_decoder.a"/>
      </source>
      <source toolchain="armgcc" relative_path="bluetooth/private/lib/mcux/default/ble/cm33nodsp/gcc" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_ndsp_encoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/ble/cm33nodsp/iar" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_ndsp_common.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/ble/cm33nodsp/iar" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_ndsp_decoder.a"/>
      </source>
      <source toolchain="iar" relative_path="bluetooth/private/lib/mcux/default/ble/cm33nodsp/iar" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_ndsp_encoder.a"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/ble/cm33nodsp/mdk" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_ndsp_common.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/ble/cm33nodsp/mdk" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_ndsp_decoder.lib"/>
      </source>
      <source toolchain="mdk" relative_path="bluetooth/private/lib/mcux/default/ble/cm33nodsp/mdk" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_ndsp_encoder.lib"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/ble/cm33nodsp/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_ndsp_decoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/ble/cm33nodsp/mcuxpresso" project_relative_path="bluetooth/private/lib" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_ndsp_encoder.a"/>
      </source>
      <source toolchain="mcuxpresso" relative_path="bluetooth/private/lib/mcux/default/ble/cm33nodsp/mcuxpresso" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libethermind_lc3_ndsp_common.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_bluetooth_ble_ethermind_lib_lc3_nodsp.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.MIMXRT595S" name="FreeRTOS kernel" brief="FreeRTOS kernel" version="11.0.1" full_name="FreeRTOS kernel" category="RTOS/Core" user_visible="true" type="OS" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <defines>
        <define name="SDK_OS_FREE_RTOS" value=""/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.freertos-kernel.heap_1.MIMXRT595S"/>
            <component_dependency value="middleware.freertos-kernel.heap_2.MIMXRT595S"/>
            <component_dependency value="middleware.freertos-kernel.heap_3.MIMXRT595S"/>
            <component_dependency value="middleware.freertos-kernel.heap_4.MIMXRT595S"/>
            <component_dependency value="middleware.freertos-kernel.heap_5.MIMXRT595S"/>
          </any_of>
          <component_dependency value="middleware.freertos-kernel.config.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="croutine.c"/>
        <files mask="event_groups.c"/>
        <files mask="list.c"/>
        <files mask="queue.c"/>
        <files mask="stream_buffer.c"/>
        <files mask="tasks.c"/>
        <files mask="timers.c"/>
      </source>
      <source relative_path="include" type="c_include">
        <files mask="atomic.h"/>
        <files mask="croutine.h"/>
        <files mask="deprecated_definitions.h"/>
        <files mask="event_groups.h"/>
        <files mask="FreeRTOS.h"/>
        <files mask="list.h"/>
        <files mask="message_buffer.h"/>
        <files mask="mpu_prototypes.h"/>
        <files mask="mpu_syscall_numbers.h"/>
        <files mask="mpu_wrappers.h"/>
        <files mask="portable.h"/>
        <files mask="projdefs.h"/>
        <files mask="queue.h"/>
        <files mask="semphr.h"/>
        <files mask="stack_macros.h"/>
        <files mask="StackMacros.h"/>
        <files mask="stream_buffer.h"/>
        <files mask="task.h"/>
        <files mask="timers.h"/>
      </source>
      <source relative_path="include" type="doc">
        <files mask="stdint.readme"/>
      </source>
      <source relative_path="portable/MemMang" type="other">
        <files mask="ReadMe.url"/>
      </source>
      <source relative_path="portable" type="doc">
        <files mask="readme.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.cm33_non_trustzone.MIMXRT595S" name="cm33 nontrustzone port" brief="FreeRTOS cm33 non trustzone port" version="11.0.1" full_name="FreeRTOS cm33 non trustzone port" category="RTOS/cm33_non_trustzone_port" user_visible="true" type="middleware" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
          <device_core_dependency value="cm33_MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc mcuxpresso mdk" relative_path="portable/GCC/ARM_CM33_NTZ/non_secure" type="src" device_cores="cm33_MIMXRT595S" fpu="true">
        <files mask="mpu_wrappers_v2_asm.c"/>
        <files mask="port.c"/>
        <files mask="portasm.c"/>
      </source>
      <source toolchain="armgcc mcuxpresso mdk" relative_path="portable/GCC/ARM_CM33_NTZ/non_secure" type="c_include" device_cores="cm33_MIMXRT595S" fpu="true">
        <files mask="portasm.h"/>
        <files mask="portmacro.h"/>
        <files mask="portmacrocommon.h"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33_NTZ/non_secure" type="asm_include" device_cores="cm33_MIMXRT595S" fpu="true">
        <files mask="mpu_wrappers_v2_asm.S"/>
        <files mask="portasm.s"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33_NTZ/non_secure" type="src" device_cores="cm33_MIMXRT595S" fpu="true">
        <files mask="port.c"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33_NTZ/non_secure" type="c_include" device_cores="cm33_MIMXRT595S" fpu="true">
        <files mask="portasm.h"/>
        <files mask="portmacro.h"/>
        <files mask="portmacrocommon.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_cm33_non_trustzone.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="portable/IAR/ARM_CM33_NTZ/non_secure" toolchain="iar" type="c_include" device_cores="cm33_MIMXRT595S" fpu="true"/>
        <include_path relative_path="portable/GCC/ARM_CM33_NTZ/non_secure" toolchain="armgcc mcuxpresso mdk" type="c_include" device_cores="cm33_MIMXRT595S" fpu="true"/>
        <include_path relative_path="portable/IAR/ARM_CM33_NTZ/non_secure" toolchain="iar" type="asm_include" device_cores="cm33_MIMXRT595S" fpu="true"/>
        <include_path relative_path="portable/GCC/ARM_CM33_NTZ/non_secure" toolchain="armgcc mcuxpresso mdk" type="asm_include" device_cores="cm33_MIMXRT595S" fpu="true"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.cm33_trustzone.non_secure.MIMXRT595S" name="cm33 secure port" brief="FreeRTOS cm33 secure port" version="11.0.1" full_name="FreeRTOS cm33 secure port" category="RTOS/cm33_secure_port" user_visible="true" type="middleware" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
          <device_core_dependency value="cm33_MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc mcuxpresso mdk" relative_path="portable/GCC/ARM_CM33/non_secure" type="src" device_cores="cm33_MIMXRT595S" fpu="true">
        <files mask="mpu_wrappers_v2_asm.c"/>
        <files mask="port.c"/>
        <files mask="portasm.c"/>
      </source>
      <source toolchain="armgcc mcuxpresso mdk" relative_path="portable/GCC/ARM_CM33/non_secure" type="c_include" device_cores="cm33_MIMXRT595S" fpu="true">
        <files mask="portasm.h"/>
        <files mask="portmacro.h"/>
        <files mask="portmacrocommon.h"/>
      </source>
      <source toolchain="armgcc mcuxpresso mdk" relative_path="portable/GCC/ARM_CM33/secure" type="c_include" device_cores="cm33_MIMXRT595S" fpu="true">
        <files mask="secure_context.h"/>
        <files mask="secure_init.h"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33/non_secure" type="asm_include" device_cores="cm33_MIMXRT595S" fpu="true">
        <files mask="mpu_wrappers_v2_asm.S"/>
        <files mask="portasm.s"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33/non_secure" type="src" device_cores="cm33_MIMXRT595S" fpu="true">
        <files mask="port.c"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33/non_secure" type="c_include" device_cores="cm33_MIMXRT595S" fpu="true">
        <files mask="portasm.h"/>
        <files mask="portmacro.h"/>
        <files mask="portmacrocommon.h"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33/secure" type="c_include" device_cores="cm33_MIMXRT595S" fpu="true">
        <files mask="secure_context.h"/>
        <files mask="secure_init.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_cm33_trustzone_non_secure.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="portable/IAR/ARM_CM33/non_secure" toolchain="iar" type="c_include" device_cores="cm33_MIMXRT595S" fpu="true"/>
        <include_path relative_path="portable/IAR/ARM_CM33/secure" toolchain="iar" type="c_include" device_cores="cm33_MIMXRT595S" fpu="true"/>
        <include_path relative_path="portable/GCC/ARM_CM33/non_secure" toolchain="armgcc mcuxpresso mdk" type="c_include" device_cores="cm33_MIMXRT595S" fpu="true"/>
        <include_path relative_path="portable/GCC/ARM_CM33/secure" toolchain="armgcc mcuxpresso mdk" type="c_include" device_cores="cm33_MIMXRT595S" fpu="true"/>
        <include_path relative_path="portable/IAR/ARM_CM33/non_secure" toolchain="iar" type="asm_include" device_cores="cm33_MIMXRT595S" fpu="true"/>
        <include_path relative_path="portable/IAR/ARM_CM33/secure" toolchain="iar" type="asm_include" device_cores="cm33_MIMXRT595S" fpu="true"/>
        <include_path relative_path="portable/GCC/ARM_CM33/non_secure" toolchain="armgcc mcuxpresso mdk" type="asm_include" device_cores="cm33_MIMXRT595S" fpu="true"/>
        <include_path relative_path="portable/GCC/ARM_CM33/secure" toolchain="armgcc mcuxpresso mdk" type="asm_include" device_cores="cm33_MIMXRT595S" fpu="true"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.cm33_trustzone.secure.MIMXRT595S" name="cm33 secure port" brief="FreeRTOS Secure Context" version="11.0.1" full_name="FreeRTOS Secure Context" category="RTOS/cm33 secure port" user_visible="true" type="middleware" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <device_dependency value="MIMXRT595S"/>
          <device_core_dependency value="cm33_MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc mcuxpresso mdk" relative_path="portable/GCC/ARM_CM33/secure" type="src" device_cores="cm33_MIMXRT595S" fpu="true">
        <files mask="secure_context.c"/>
        <files mask="secure_context_port.c"/>
        <files mask="secure_heap.c"/>
        <files mask="secure_init.c"/>
      </source>
      <source toolchain="armgcc mcuxpresso mdk" relative_path="portable/GCC/ARM_CM33/secure" type="c_include" device_cores="cm33_MIMXRT595S" fpu="true">
        <files mask="secure_context.h"/>
        <files mask="secure_heap.h"/>
        <files mask="secure_init.h"/>
        <files mask="secure_port_macros.h"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33/secure" type="src" device_cores="cm33_MIMXRT595S">
        <files mask="secure_context.c"/>
        <files mask="secure_heap.c"/>
        <files mask="secure_init.c"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33/secure" type="c_include" device_cores="cm33_MIMXRT595S">
        <files mask="secure_context.h"/>
        <files mask="secure_heap.h"/>
        <files mask="secure_init.h"/>
        <files mask="secure_port_macros.h"/>
      </source>
      <source toolchain="iar" relative_path="portable/IAR/ARM_CM33/secure" type="asm_include" device_cores="cm33_MIMXRT595S">
        <files mask="secure_context_port_asm.s"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_cm33_trustzone_secure.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="portable/GCC/ARM_CM33/secure" toolchain="armgcc mcuxpresso mdk" type="c_include"/>
        <include_path relative_path="portable/GCC/ARM_CM33/non_secure" toolchain="armgcc mcuxpresso mdk" type="c_include"/>
        <include_path relative_path="portable/IAR/ARM_CM33/secure" toolchain="iar" type="c_include"/>
        <include_path relative_path="portable/IAR/ARM_CM33/non_secure" toolchain="iar" type="c_include"/>
        <include_path relative_path="portable/GCC/ARM_CM33/secure" toolchain="armgcc mcuxpresso mdk" type="asm_include"/>
        <include_path relative_path="portable/GCC/ARM_CM33/non_secure" toolchain="armgcc mcuxpresso mdk" type="asm_include"/>
        <include_path relative_path="portable/IAR/ARM_CM33/secure" toolchain="iar" type="asm_include"/>
        <include_path relative_path="portable/IAR/ARM_CM33/non_secure" toolchain="iar" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.tfm_ns.MIMXRT595S" name="TF-M NS support" brief="OS wrapper for running FreeRTOS inside TF-M non secure world" version="11.0.1" full_name="FreeRTOS TF-M NS support" category="RTOS/tfm_ns_support" user_visible="true" type="middleware" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-kernel.cm33_non_trustzone.MIMXRT595S"/>
          <component_dependency value="middleware.tfm.ns.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="portable/ThirdParty/GCC/ARM_TFM" type="src">
        <files mask="os_wrapper_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_tfm_ns.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.extension.MIMXRT595S" name="FreeRTOS NXP extension" brief="FreeRTOS NXP extension" version="11.0.1" full_name="FreeRTOS NXP extension" category="RTOS/TAD extension" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="include" type="c_include">
        <files mask="freertos_tasks_c_additions.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_extension.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos-kernel.heap_1.MIMXRT595S" name="FreeRTOS heap 1" brief="FreeRTOS heap 1" version="11.0.1" full_name="FreeRTOS heap 1" category="RTOS/Heap" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_1.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_heap_1.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_2.MIMXRT595S" name="FreeRTOS heap 2" brief="FreeRTOS heap 2" version="11.0.1" full_name="FreeRTOS heap 2" category="RTOS/Heap" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_2.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_heap_2.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_3.MIMXRT595S" name="FreeRTOS heap 3" brief="FreeRTOS heap 3" version="11.0.1" full_name="FreeRTOS heap_3" category="RTOS/Heap" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_3.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_heap_3.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_4.MIMXRT595S" name="FreeRTOS heap 4" brief="FreeRTOS heap 4" version="11.0.1" full_name="FreeRTOS heap 4" category="RTOS/Heap" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_4.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_heap_4.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.heap_5.MIMXRT595S" name="FreeRTOS heap 5" brief="FreeRTOS heap 5" version="11.0.1" full_name="FreeRTOS heap 5" category="RTOS/Heap" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="portable/MemMang" type="src">
        <files mask="heap_5.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_heap_5.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.mpu_wrappers.MIMXRT595S" name="old FreeRTOS MPU wrappers used before V10.6.0" brief="old FreeRTOS MPU wrappers used before V10.6.0" version="11.0.1" full_name="old FreeRTOS MPU wrappers used before V10.6.0" category="RTOS/MPU wrappers" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="portable/Common" type="src">
        <files mask="mpu_wrappers.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_mpu_wrappers.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.mpu_wrappers_v2.MIMXRT595S" name="new V2 FreeRTOS MPU wrappers introduced in V10.6.0" brief="new V2 FreeRTOS MPU wrappers introduced in V10.6.0" version="11.0.1" full_name="new V2 FreeRTOS MPU wrappers introduced in V10.6.0" category="RTOS/MPU wrappers V2" user_visible="true" type="other" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="portable/Common" type="src">
        <files mask="mpu_wrappers_v2.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_mpu_wrappers_v2.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos-kernel.config.MIMXRT595S" name="FreeRTOS configuration template" brief="Template configuration file to be edited by user. Provides also memory allocator (heap_x), change variant if needed." version="11.0.1" full_name="FreeRTOS configuration template" category="RTOS/freertos template" user_visible="true" type="project_template" package_base_path="rtos/freertos/freertos-kernel" project_base_path="freertos/freertos-kernel">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="template" config="true" type="c_include">
        <files mask="FreeRTOSConfig.h"/>
      </source>
      <source relative_path="template/ARM_CM33_3_priority_bits" config="true" type="c_include" device_cores="cm33_MIMXRT595S" fpu="true">
        <files mask="FreeRTOSConfig_Gen.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos-kernel_config.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template/ARM_CM33_3_priority_bits" type="c_include" device_cores="cm33_MIMXRT595S" fpu="true"/>
        <include_path relative_path="template" type="asm_include"/>
        <include_path relative_path="template/ARM_CM33_3_priority_bits" type="asm_include" device_cores="cm33_MIMXRT595S" fpu="true"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_usart_freertos.MIMXRT595S" name="usart_freertos" brief="FLEXCOMM USART FreeRTOS Driver" version="2.0.8" full_name="FLEXCOMM USART FreeRTOS Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm.MIMXRT595S"/>
          <component_dependency value="platform.drivers.flexcomm_usart.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_usart_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_usart_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexcomm_usart_freertos.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_spi_freertos.MIMXRT595S" name="spi_freertos" brief="FLEXCOMM SPI FreeRTOS Driver" version="2.1.0" full_name="FLEXCOMM SPI FreeRTOS Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="platform.drivers.flexcomm.MIMXRT595S"/>
          <component_dependency value="platform.drivers.flexcomm_spi.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_spi_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_spi_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexcomm_spi_freertos.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_i2c_freertos.MIMXRT595S" name="i2c_freertos" brief="FLEXCOMM I2C FreeRTOS Driver" version="2.0.8" full_name="FLEXCOMM I2C FreeRTOS Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers/freertos">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="platform.drivers.flexcomm.MIMXRT595S"/>
          <component_dependency value="platform.drivers.flexcomm_i2c.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i2c_freertos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_i2c_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexcomm_i2c_freertos.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos.corepkcs11.template.MIMXRT595S" name="corepkcs11 configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="corePKCS11 configuration template" category="FreeRTOS/corePKCS11" user_visible="false" type="project_template" package_base_path="rtos/freertos/corepkcs11" project_base_path="freertos/corepkcs11">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
          <component_dependency value="middleware.freertos.corepkcs11.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="template" config="true" type="c_include">
        <files mask="core_pkcs11_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos_corepkcs11_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos.corepkcs11.MIMXRT595S" name="corepkcs11" brief="Software implementation of the PKCS #11 standard." version="3.5.0" full_name="corePKCS11" category="FreeRTOS/corePKCS11" user_visible="true" type="middleware" package_base_path="rtos/freertos/corepkcs11" project_base_path="freertos/corepkcs11">
      <dependencies>
        <all>
          <component_dependency value="middleware.pkcs11.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="core_pkcs11.c"/>
        <files mask="core_pki_utils.c"/>
      </source>
      <source relative_path="source/include" type="c_include">
        <files mask="core_pkcs11.h"/>
        <files mask="core_pkcs11_config_defaults.h"/>
        <files mask="core_pkcs11_pal.h"/>
        <files mask="core_pki_utils.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos_corepkcs11.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/include" type="c_include"/>
        <include_path relative_path="source/include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos.corepkcs11.mbedtls.MIMXRT595S" name="corepkcs11 mbedtls" brief="PKCS #11, mbedtls port." version="3.5.0" full_name="corePKCS11 mbedtls" category="FreeRTOS/corePKCS11" user_visible="true" type="middleware" package_base_path="rtos/freertos/corepkcs11" project_base_path="freertos/corepkcs11">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos.corepkcs11.MIMXRT595S"/>
          <component_dependency value="middleware.pkcs11.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source/portable/mbedtls" type="src">
        <files mask="core_pkcs11_mbedtls.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos_corepkcs11_mbedtls.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.freertos.corepkcs11.mbedtls_utils.MIMXRT595S" name="corepkcs11 mbedtls_utils" brief="PKCS #11, mbedtls_utils" version="3.5.0" full_name="corePKCS11 mbedtls_utils" category="FreeRTOS/corePKCS11" user_visible="true" type="middleware" package_base_path="rtos/freertos/corepkcs11" project_base_path="freertos/corepkcs11">
      <defines>
        <define name="MBEDTLS_THREADING_ALT" value=""/>
        <define name="MBEDTLS_THREADING_C" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos.corepkcs11.MIMXRT595S"/>
          <component_dependency value="middleware.pkcs11.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source/dependency/3rdparty/mbedtls_utils" type="src">
        <files mask="mbedtls_utils.c"/>
      </source>
      <source relative_path="source/dependency/3rdparty/mbedtls_utils" type="c_include">
        <files mask="mbedtls_utils.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos_corepkcs11_mbedtls_utils.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/dependency/3rdparty/mbedtls_utils" type="c_include"/>
        <include_path relative_path="source/dependency/3rdparty/mbedtls_utils" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos.coremqtt.template.MIMXRT595S" name="coremqtt configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="coreMQTT configuration template" category="FreeRTOS/coreMQTT" user_visible="false" type="project_template" package_base_path="rtos/freertos/coremqtt" project_base_path="freertos/coremqtt">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos.coremqtt.MIMXRT595S"/>
          <component_dependency value="middleware.iot_reference.logging.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="template" type="c_include">
        <files mask="core_mqtt_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos_coremqtt_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos.coremqtt-agent.MIMXRT595S" name="coremqtt-agent" brief="Agent for thread-safe use of coreMQTT." version="1.2.0" full_name="coreMQTT-Agent" category="FreeRTOS/coreMQTT Agent" user_visible="true" type="middleware" package_base_path="rtos/freertos/coremqtt-agent" project_base_path="freertos/coremqtt-agent">
      <defines>
        <define name="MQTT_AGENT_DO_NOT_USE_CUSTOM_CONFIG" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos.coremqtt.MIMXRT595S"/>
          <component_dependency value="middleware.iot_reference.logging.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source/include" type="c_include">
        <files mask="core_mqtt_agent.h"/>
        <files mask="core_mqtt_agent_command_functions.h"/>
        <files mask="core_mqtt_agent_config_defaults.h"/>
        <files mask="core_mqtt_agent_default_logging.h"/>
        <files mask="core_mqtt_agent_message_interface.h"/>
      </source>
      <source relative_path="source" type="src">
        <files mask="core_mqtt_agent_command_functions.c"/>
        <files mask="core_mqtt_agent.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos_coremqtt-agent.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/include" type="c_include"/>
        <include_path relative_path="source/include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.freertos.corehttp.MIMXRT595S" name="corehttp" brief="Client implementation of the HTTP/1.1 specification for embedded devices." version="3.0.0" full_name="coreHTTP" category="FreeRTOS/coreHTTP" user_visible="false" type="middleware" package_base_path="rtos/freertos/corehttp" project_base_path="freertos/corehttp">
      <dependencies>
        <all>
          <component_dependency value="middleware.llhttp.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="core_http_client.c"/>
      </source>
      <source relative_path="source/include" type="c_include">
        <files mask="core_http_client.h"/>
        <files mask="core_http_client_private.h"/>
        <files mask="core_http_config_defaults.h"/>
      </source>
      <source relative_path="source/interface" type="c_include">
        <files mask="transport_interface.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_freertos_corehttp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/include" type="c_include"/>
        <include_path relative_path="source/interface" type="c_include"/>
        <include_path relative_path="source/include" type="asm_include"/>
        <include_path relative_path="source/interface" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.wwdt.MIMXRT595S" name="wwdt" brief="WWDT Driver" version="2.1.9" full_name="WWDT Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wwdt.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wwdt.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_wwdt.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.utick.MIMXRT595S" name="utick" brief="UTICK Driver" version="2.0.5" full_name="UTICK Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="platform.drivers.power.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_utick.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_utick.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_utick.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.usdhc.MIMXRT595S" name="sdhc" brief="USDHC Driver" version="2.8.4" full_name="USDHC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_usdhc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_usdhc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_usdhc.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.trng.MIMXRT595S" name="trng" brief="TRNG Driver" version="2.0.17" full_name="TRNG Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_trng.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_trng.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_trng.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.smartdma.MIMXRT595S" name="smartdma" brief="SMARTDMA Driver" version="2.10.0" full_name="SMARTDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_smartdma.h"/>
        <files mask="fsl_smartdma_prv.h"/>
        <files mask="fsl_smartdma_rt500.h"/>
        <files mask="fsl_smartdma_mcxn.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_smartdma.c"/>
        <files mask="fsl_smartdma_rt500.c"/>
        <files mask="fsl_smartdma_mcxn.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_smartdma.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sema42.MIMXRT595S" name="sema42" brief="SEMA42 Driver" version="2.0.4" full_name="SEMA42 Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sema42.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sema42.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_sema42.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.sctimer.MIMXRT595S" name="sctimer" brief="SCT Driver" version="2.5.1" full_name="SCT Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sctimer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sctimer.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_sctimer.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.puf.MIMXRT595S" name="PUF" brief="PUF Driver" version="2.1.6" full_name="PUF Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_puf.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_puf.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_puf.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.powerquad.MIMXRT595S" name="powerquad" brief="POWERQUAD Driver" version="2.2.0" full_name="POWERQUAD Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_powerquad_data.h"/>
        <files mask="fsl_powerquad.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_powerquad_data.c"/>
        <files mask="fsl_powerquad_basic.c"/>
        <files mask="fsl_powerquad_math.c"/>
        <files mask="fsl_powerquad_matrix.c"/>
        <files mask="fsl_powerquad_filter.c"/>
        <files mask="fsl_powerquad_transform.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_powerquad.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.powerquad_cmsis.MIMXRT595S" name="powerquad_cmsis" brief="CMSIS DSP functions based on POWERQUAD" version="2.0.4" full_name="POWERQUAD CMSIS DSP Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_DSP_Include.MIMXRT595S"/>
          <component_dependency value="platform.drivers.powerquad.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_powerquad.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_powerquad_cmsis.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_powerquad_cmsis.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.pint.MIMXRT595S" name="pint" brief="PINT Driver" version="2.1.13" full_name="PINT Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pint.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pint.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_pint.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.otfad.MIMXRT595S" name="otfad" brief="OTFAD Driver" version="2.1.4" full_name="OTFAD Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_otfad.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_otfad.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_otfad.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.ostimer.MIMXRT595S" name="ostimer" brief="OSTimer Driver" version="2.2.2" full_name="OSTimer Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ostimer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ostimer.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_ostimer.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.mu.MIMXRT595S" name="mu" brief="MU Driver" version="2.2.0" full_name="MU Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mu.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mu.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_mu.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.mrt.MIMXRT595S" name="mrt" brief="MRT Driver" version="2.0.4" full_name="MRT Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mrt.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mrt.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_mrt.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.mipi_dsi.MIMXRT595S" name="mipi_dsi" brief="MIPI DSI Driver" version="2.2.1" full_name="MIPI DSI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="platform.drivers.soc_mipi_dsi.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_mipi_dsi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mipi_dsi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_mipi_dsi.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.mipi_dsi_smartdma.MIMXRT595S" name="mipi_dsi_smartdma" brief="MIPI DSI Driver" version="2.3.2" full_name="MIPI DSI SMARTDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.mipi_dsi.MIMXRT595S"/>
          <component_dependency value="platform.drivers.smartdma.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_mipi_dsi_smartdma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mipi_dsi_smartdma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_mipi_dsi_smartdma.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpc_rtc.MIMXRT595S" name="lpc_rtc" brief="RTC Driver" version="2.2.0" full_name="RTC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rtc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rtc.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpc_rtc.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpc_iopctl.MIMXRT595S" name="iopctl" brief="iopctl Driver" version="2.0.0" full_name="iopctl Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_iopctl.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpc_iopctl.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpc_gpio.MIMXRT595S" name="gpio" brief="GPIO Driver" version="2.1.7" full_name="GPIO Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_gpio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_gpio.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpc_gpio.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpc_dma.MIMXRT595S" name="dma" brief="DMA Driver" version="2.5.3" full_name="DMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_dma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpc_dma.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpc_crc.MIMXRT595S" name="lpc_crc" brief="CRC Driver" version="2.1.1" full_name="CRC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_crc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_crc.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpc_crc.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lpadc.MIMXRT595S" name="lpadc" brief="LPADC Driver" version="2.9.1" full_name="LPADC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_lpadc.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lpadc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lpadc.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.lcdif.MIMXRT595S" name="lcdif" brief="LCDIF Driver" version="2.2.0" full_name="LCDIF Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lcdif.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lcdif.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lcdif.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.inputmux.MIMXRT595S" name="inputmux" brief="INPUTMUX Driver" version="2.0.7" full_name="INPUTMUX Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="platform.drivers.inputmux_connections.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_inputmux.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_inputmux.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_inputmux.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.iap3.MIMXRT595S" name="iap3" brief="IAP3 Driver" version="2.1.3" full_name="IAP3 Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_iap.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_iap.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_iap3.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.i3c.MIMXRT595S" name="i3c" brief="I3C Driver" version="2.13.0" full_name="I3C Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i3c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_i3c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_i3c.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.i3c_dma.MIMXRT595S" name="i3c_dma" brief="I3C DMA Driver" version="2.1.7" full_name="I3C DMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.i3c.MIMXRT595S"/>
          <component_dependency value="platform.drivers.lpc_dma.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_i3c_dma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i3c_dma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_i3c_dma.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.hashcrypt.MIMXRT595S" name="hashcrypt" brief="Hashcrypt Driver" version="2.2.16" full_name="Hashcrypt Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_hashcrypt.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_hashcrypt.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_hashcrypt.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.fmeas.MIMXRT595S" name="fmeas" brief="FMEAS Driver" version="2.1.1" full_name="FMEAS Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_fmeas.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_fmeas.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_fmeas.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexspi.MIMXRT595S" name="flexspi" brief="FLEXSPI Driver" version="2.6.2" full_name="FLEXSPI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexspi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexspi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexspi.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexspi_dma.MIMXRT595S" name="flexspi_dma" brief="FLEXSPI DMA Driver" version="2.2.1" full_name="FLEXSPI DMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexspi.MIMXRT595S"/>
          <component_dependency value="platform.drivers.lpc_dma.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexspi_dma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexspi_dma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexspi_dma.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_uart.MIMXRT595S" name="flexio_uart" brief="FLEXIO UART Driver" version="2.5.0" full_name="FLEXIO UART Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_uart.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_uart.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_uart.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_spi.MIMXRT595S" name="flexio_spi" brief="FLEXIO SPI Driver" version="2.3.4" full_name="FLEXIO SPI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_spi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_spi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_spi.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_mculcd.MIMXRT595S" name="flexio_mculcd" brief="FLEXIO MCULCD Driver" version="2.1.0" full_name="FLEXIO MCULCD Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_mculcd.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_mculcd.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_mculcd.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_mculcd_smartdma.MIMXRT595S" name="flexio_mculcd_smartdma" brief="FLEXIO MCULCD SMARTDMA Driver" version="2.0.4" full_name="FLEXIO MCULCD SMARTDMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio_mculcd.MIMXRT595S"/>
          <component_dependency value="platform.drivers.smartdma.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_mculcd_smartdma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_mculcd_smartdma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_mculcd_smartdma.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_i2s.MIMXRT595S" name="flexio_i2s" brief="FLEXIO I2S Driver" version="2.2.0" full_name="FLEXIO I2S Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_i2s.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_i2s.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_i2s.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio_i2c_master.MIMXRT595S" name="flexio_i2c_master" brief="FLEXIO I2C Driver" version="2.5.0" full_name="FLEXIO I2C Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexio.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio_i2c_master.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio_i2c_master.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio_i2c_master.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexio.MIMXRT595S" name="flexio" brief="FLEXIO Driver" version="2.2.3" full_name="FLEXIO Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_flexio.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexio.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexio.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_usart.MIMXRT595S" name="usart" brief="usart Driver" version="2.3.3" full_name="FLEXCOMM usart Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_usart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_usart.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexcomm_usart.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_usart_dma.MIMXRT595S" name="usart_dma" brief="usart Driver" version="2.3.1" full_name="FLEXCOMM usart DMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_usart.MIMXRT595S"/>
          <component_dependency value="platform.drivers.lpc_dma.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_usart_dma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_usart_dma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexcomm_usart_dma.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_spi.MIMXRT595S" name="spi" brief="SPI Driver" version="2.3.2" full_name="FLEXCOMM SPI Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="platform.drivers.flexcomm.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_spi.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_spi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexcomm_spi.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_spi_dma.MIMXRT595S" name="spi_dma" brief="SPI Driver" version="2.2.1" full_name="FLEXCOMM SPI DMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_spi.MIMXRT595S"/>
          <component_dependency value="platform.drivers.lpc_dma.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_spi_dma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_spi_dma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexcomm_spi_dma.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_i2s.MIMXRT595S" name="i2s" brief="i2s Driver" version="2.3.2" full_name="FLEXCOMM i2s Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="platform.drivers.flexcomm.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i2s.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_i2s.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexcomm_i2s.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_i2s_dma.MIMXRT595S" name="i2s_dma" brief="i2s Driver" version="2.3.3" full_name="FLEXCOMM i2s DMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_i2s.MIMXRT595S"/>
          <component_dependency value="platform.drivers.lpc_dma.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i2s_dma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_i2s_dma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexcomm_i2s_dma.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_i2c.MIMXRT595S" name="i2c" brief="I2C Driver" version="2.3.3" full_name="FLEXCOMM I2C Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="platform.drivers.flexcomm.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i2c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_i2c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexcomm_i2c.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_i2c_dma.MIMXRT595S" name="i2c_dma" brief="I2C Driver" version="2.3.1" full_name="FLEXCOMM I2C DMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_i2c.MIMXRT595S"/>
          <component_dependency value="platform.drivers.lpc_dma.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_i2c_dma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i2c_dma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexcomm_i2c_dma.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm.MIMXRT595S" name="flexcomm" brief="FLEXCOMM Driver" version="2.0.2" full_name="FLEXCOMM Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_flexcomm.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_flexcomm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_flexcomm.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_spi_cmsis.MIMXRT595S" name="spi_cmsis" brief="SPI CMSIS Driver" version="1.0.0" full_name="SPI CMSIS Driver" category="CMSIS Driver/SPI" user_visible="true" type="CMSIS_driver" package_base_path="devices/MIMXRT595S/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Driver_Include.SPI.MIMXRT595S"/>
          <component_dependency value="device.RTE.MIMXRT595S"/>
          <component_dependency value="platform.drivers.flexcomm_spi_dma.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_spi_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_spi_cmsis.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_cmsis_flexcomm_spi.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_i2c_cmsis.MIMXRT595S" name="i2c_cmsis" brief="I2C CMSIS Driver" version="1.0.0" full_name="I2C CMSIS Driver" category="CMSIS Driver/I2C" user_visible="true" type="CMSIS_driver" package_base_path="devices/MIMXRT595S/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Driver_Include.I2C.MIMXRT595S"/>
          <component_dependency value="device.RTE.MIMXRT595S"/>
          <component_dependency value="platform.drivers.flexcomm_i2c_dma.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_i2c_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_i2c_cmsis.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_cmsis_flexcomm_i2c.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.flexcomm_usart_cmsis.MIMXRT595S" name="usart_cmsis" brief="USART CMSIS Driver" version="1.0.0" full_name="USART CMSIS Driver" category="CMSIS Driver/USART" user_visible="true" type="CMSIS_driver" package_base_path="devices/MIMXRT595S/cmsis_drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Driver_Include.USART.MIMXRT595S"/>
          <component_dependency value="device.RTE.MIMXRT595S"/>
          <component_dependency value="platform.drivers.flexcomm_usart_dma.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_usart_cmsis.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_usart_cmsis.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_cmsis_flexcomm_usart.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dmic.MIMXRT595S" name="dmic" brief="DMIC Driver" version="2.3.2" full_name="DMIC Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_dmic.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dmic.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dmic.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dmic_dma.MIMXRT595S" name="dmic_dma" brief="DMIC DMA Driver" version="2.4.0" full_name="DMIC DMA Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.dmic.MIMXRT595S"/>
          <component_dependency value="platform.drivers.lpc_dma.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_dmic_dma.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dmic_dma.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dmic_dma.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.dmic_hwvad.MIMXRT595S" name="dmic_hwvad" brief="DMIC HWVAD Driver" version="2.3.0" full_name="DMIC HWVAD Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.dmic.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_dmic.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dmic.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dmic_hwvad.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.ctimer.MIMXRT595S" name="ctimer" brief="CTimer Driver" version="2.3.1" full_name="CTimer Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ctimer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ctimer.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_ctimer.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.casper.MIMXRT595S" name="casper" brief="CASPER Driver" version="2.2.4" full_name="CASPER Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_casper.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_casper.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_casper.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.cache_cache64.MIMXRT595S" name="cache" brief="CACHE Driver" version="2.0.9" full_name="CACHE Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_cache.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cache.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_cache_cache64.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="platform.drivers.acmp.MIMXRT595S" name="acmp" brief="ACMP Driver" version="2.3.0" full_name="ACMP Driver" category="Device/SDK Drivers" user_visible="true" type="driver" package_base_path="devices/MIMXRT595S/drivers" project_base_path="drivers">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_acmp.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_acmp.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_acmp.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wireless.wpa_supplicant.rtos.MIMXRT595S" name="wpa_supplicant-rtos" brief="Wpa supplicant rtos" version="2.11.0" full_name="Wpa supplicant rtos" category="Wireless/wpa_supplicant" user_visible="true" type="middleware" package_base_path="middleware/wireless/wpa_supplicant-rtos" project_base_path="wpa_supplicant-rtos">
      <defines>
        <define name="USE_RTOS" value="1"/>
        <define name="SDK_OS_FREE_RTOS" value=""/>
        <define name="FSL_OSA_TASK_ENABLE" value="1"/>
        <define name="PRINTF_ADVANCED_ENABLE" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
          <component_dependency value="middleware.lwip.MIMXRT595S"/>
          <component_dependency value="middleware.mbedtls.MIMXRT595S"/>
          <component_dependency value="middleware.wifi.MIMXRT595S"/>
          <component_dependency value="middleware.wifi.cli.MIMXRT595S"/>
          <component_dependency value="utility.debug_console.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="port/mbedtls" type="c_include">
        <files mask="wpa_supp_mbedtls_config.h"/>
        <files mask="wpa_supp_els_pkc_mbedtls_config.h"/>
        <files mask="wpa_supp_ele_s400_mbedtls_config.h"/>
        <files mask="supp_crypto.h"/>
      </source>
      <source relative_path="port/mbedtls" type="src">
        <files mask="supp_crypto.c"/>
      </source>
      <source relative_path="src/common" type="src">
        <files mask="wpa_common.c"/>
        <files mask="ieee802_11_common.c"/>
        <files mask="hw_features_common.c"/>
        <files mask="wpa_ctrl.c"/>
        <files mask="sae.c"/>
        <files mask="dragonfly.c"/>
        <files mask="gas.c"/>
        <files mask="dpp.c"/>
        <files mask="dpp_auth.c"/>
        <files mask="dpp_backup.c"/>
        <files mask="dpp_crypto.c"/>
        <files mask="dpp_pkex.c"/>
        <files mask="dpp_reconfig.c"/>
        <files mask="dpp_tcp.c"/>
        <files mask="gas_server.c"/>
      </source>
      <source relative_path="src/drivers" type="src">
        <files mask="driver_common.c"/>
        <files mask="drivers.c"/>
        <files mask="driver_freertos.c"/>
      </source>
      <source relative_path="src/l2_packet" type="c_include">
        <files mask="l2_packet.h"/>
      </source>
      <source relative_path="src/l2_packet" type="src">
        <files mask="l2_packet_freertos.c"/>
      </source>
      <source relative_path="src/utils" type="src">
        <files mask="base64.c"/>
        <files mask="common.c"/>
        <files mask="wpabuf.c"/>
        <files mask="bitfield.c"/>
        <files mask="os_freertos.c"/>
        <files mask="crc32.c"/>
        <files mask="ip_addr.c"/>
        <files mask="block_alloc.c"/>
        <files mask="wpa_debug.c"/>
        <files mask="uuid.c"/>
        <files mask="eloop_freertos.c"/>
        <files mask="json.c"/>
      </source>
      <source relative_path="src/utils" type="c_include">
        <files mask="dl_list.h"/>
        <files mask="base64.h"/>
        <files mask="bitfield.h"/>
        <files mask="block_alloc.h"/>
        <files mask="browser.h"/>
        <files mask="build_config.h"/>
        <files mask="common.h"/>
        <files mask="config.h"/>
        <files mask="const_time.h"/>
        <files mask="crc32.h"/>
        <files mask="edit.h"/>
        <files mask="eloop.h"/>
        <files mask="ext_password.h"/>
        <files mask="ext_password_i.h"/>
        <files mask="http-utils.h"/>
        <files mask="includes.h"/>
        <files mask="ip_addr.h"/>
        <files mask="json.h"/>
        <files mask="module_tests.h"/>
        <files mask="os.h"/>
        <files mask="pcsc_funcs.h"/>
        <files mask="platform.h"/>
        <files mask="state_machine.h"/>
        <files mask="trace.h"/>
        <files mask="uuid.h"/>
        <files mask="wpabuf.h"/>
        <files mask="wpa_debug.h"/>
        <files mask="xml-utils.h"/>
      </source>
      <source relative_path="wpa_supplicant" type="c_include">
        <files mask="ap.h"/>
        <files mask="autoscan.h"/>
        <files mask="bgscan.h"/>
        <files mask="bss.h"/>
        <files mask="bssid_ignore.h"/>
        <files mask="config.h"/>
        <files mask="config_ssid.h"/>
        <files mask="ctrl_iface.h"/>
        <files mask="dpp_supplicant.h"/>
        <files mask="driver_i.h"/>
        <files mask="gas_query.h"/>
        <files mask="hs20_supplicant.h"/>
        <files mask="ibss_rsn.h"/>
        <files mask="interworking.h"/>
        <files mask="mesh.h"/>
        <files mask="mesh_mpm.h"/>
        <files mask="mesh_rsn.h"/>
        <files mask="notify.h"/>
        <files mask="offchannel.h"/>
        <files mask="p2p_supplicant.h"/>
        <files mask="scan.h"/>
        <files mask="sme.h"/>
        <files mask="wifi_display.h"/>
        <files mask="wmm_ac.h"/>
        <files mask="wnm_sta.h"/>
        <files mask="wpas_glue.h"/>
        <files mask="wpas_kay.h"/>
        <files mask="wpa_supplicant_i.h"/>
        <files mask="wps_supplicant.h"/>
      </source>
      <source relative_path="wpa_supplicant/binder" type="c_include">
        <files mask="binder.h"/>
      </source>
      <source relative_path="wpa_supplicant/dbus" type="c_include">
        <files mask="dbus_common.h"/>
        <files mask="dbus_new.h"/>
      </source>
      <source relative_path="freertos/src" type="c_include">
        <files mask="supp_main.h"/>
        <files mask="supp_api.h"/>
        <files mask="wpa_cli.h"/>
      </source>
      <source relative_path="freertos/src" type="src">
        <files mask="wpa_cli.c"/>
        <files mask="supp_main.c"/>
        <files mask="supp_api.c"/>
      </source>
      <source relative_path="wpa_supplicant" type="src">
        <files mask="config.c"/>
        <files mask="notify.c"/>
        <files mask="bss.c"/>
        <files mask="eap_register.c"/>
        <files mask="op_classes.c"/>
        <files mask="rrm.c"/>
        <files mask="wmm_ac.c"/>
        <files mask="config_none.c"/>
        <files mask="sme.c"/>
        <files mask="wpa_supplicant.c"/>
        <files mask="events.c"/>
        <files mask="bssid_ignore.c"/>
        <files mask="wpas_glue.c"/>
        <files mask="scan.c"/>
        <files mask="robust_av.c"/>
        <files mask="ctrl_iface.c"/>
        <files mask="ctrl_iface_udp.c"/>
        <files mask="mbo.c"/>
        <files mask="wnm_sta.c"/>
        <files mask="ap.c"/>
        <files mask="p2p_supplicant.c"/>
        <files mask="p2p_supplicant_sd.c"/>
        <files mask="gas_query.c"/>
        <files mask="offchannel.c"/>
        <files mask="wps_supplicant.c"/>
        <files mask="dpp_supplicant.c"/>
        <files mask="interworking.c"/>
      </source>
      <source relative_path="wpa_supplicant" type="other">
        <files mask="README"/>
      </source>
      <source relative_path="src/ap" type="src">
        <files mask="ap_config.c"/>
        <files mask="ap_drv_ops.c"/>
        <files mask="ap_list.c"/>
        <files mask="ap_mlme.c"/>
        <files mask="authsrv.c"/>
        <files mask="beacon.c"/>
        <files mask="bss_load.c"/>
        <files mask="dfs.c"/>
        <files mask="drv_callbacks.c"/>
        <files mask="eap_user_db.c"/>
        <files mask="hostapd.c"/>
        <files mask="hw_features.c"/>
        <files mask="ieee802_11_auth.c"/>
        <files mask="ieee802_11.c"/>
        <files mask="ieee802_11_he.c"/>
        <files mask="ieee802_11_ht.c"/>
        <files mask="ieee802_11_shared.c"/>
        <files mask="ieee802_11_vht.c"/>
        <files mask="ieee802_1x.c"/>
        <files mask="neighbor_db.c"/>
        <files mask="p2p_hostapd.c"/>
        <files mask="pmksa_cache_auth.c"/>
        <files mask="preauth_auth.c"/>
        <files mask="rrm.c"/>
        <files mask="sta_info.c"/>
        <files mask="tkip_countermeasures.c"/>
        <files mask="utils.c"/>
        <files mask="wmm.c"/>
        <files mask="ctrl_iface_ap.c"/>
        <files mask="mbo_ap.c"/>
        <files mask="wpa_auth.c"/>
        <files mask="wpa_auth_ie.c"/>
        <files mask="wpa_auth_ft.c"/>
        <files mask="wpa_auth_glue.c"/>
        <files mask="wps_hostapd.c"/>
        <files mask="wnm_ap.c"/>
        <files mask="gas_query_ap.c"/>
      </source>
      <source relative_path="src/eap_common" type="src">
        <files mask="eap_common.c"/>
        <files mask="eap_wsc_common.c"/>
        <files mask="eap_peap_common.c"/>
        <files mask="chap.c"/>
        <files mask="eap_fast_common.c"/>
        <files mask="eap_sim_common.c"/>
      </source>
      <source relative_path="src/eap_server" type="src">
        <files mask="eap_server.c"/>
        <files mask="eap_server_identity.c"/>
        <files mask="eap_server_methods.c"/>
        <files mask="eap_server_wsc.c"/>
        <files mask="eap_server_tls.c"/>
        <files mask="eap_sim_db.c"/>
        <files mask="eap_server_ttls.c"/>
        <files mask="eap_server_tls_common.c"/>
        <files mask="eap_server_peap.c"/>
        <files mask="eap_server_mschapv2.c"/>
        <files mask="eap_server_md5.c"/>
        <files mask="eap_server_gtc.c"/>
        <files mask="eap_server_fast.c"/>
        <files mask="eap_server_sim.c"/>
        <files mask="eap_server_aka.c"/>
      </source>
      <source relative_path="src/eapol_auth" type="src">
        <files mask="eapol_auth_sm.c"/>
      </source>
      <source relative_path="src/crypto" type="src">
        <files mask="aes-eax.c"/>
        <files mask="aes-encblock.c"/>
        <files mask="aes-ctr.c"/>
        <files mask="aes-cbc.c"/>
        <files mask="aes-siv.c"/>
        <files mask="aes-unwrap.c"/>
        <files mask="aes-wrap.c"/>
        <files mask="des-internal.c"/>
        <files mask="dh_groups.c"/>
        <files mask="rc4.c"/>
        <files mask="md4-internal.c"/>
        <files mask="md5.c"/>
        <files mask="md5-internal.c"/>
        <files mask="sha1-internal.c"/>
        <files mask="fips_prf_internal.c"/>
        <files mask="sha256-internal.c"/>
        <files mask="sha1.c"/>
        <files mask="sha256.c"/>
        <files mask="tls_none.c"/>
        <files mask="ms_funcs.c"/>
        <files mask="sha1-tlsprf.c"/>
        <files mask="sha1-prf.c"/>
        <files mask="sha256-prf.c"/>
        <files mask="sha1-pbkdf2.c"/>
        <files mask="aes-omac1.c"/>
        <files mask="aes-internal-enc.c"/>
        <files mask="aes-internal-dec.c"/>
        <files mask="aes-internal.c"/>
        <files mask="crypto_mbedtls2.c"/>
        <files mask="tls_mbedtls2.c"/>
        <files mask="sha256-kdf.c"/>
        <files mask="sha384-kdf.c"/>
        <files mask="sha512-kdf.c"/>
        <files mask="milenage.c"/>
      </source>
      <source relative_path="src/rsn_supp" type="src">
        <files mask="wpa.c"/>
        <files mask="preauth.c"/>
        <files mask="pmksa_cache.c"/>
        <files mask="wpa_ie.c"/>
        <files mask="wpa_ft.c"/>
      </source>
      <source relative_path="src/p2p" type="src">
        <files mask="p2p.c"/>
        <files mask="p2p_utils.c"/>
        <files mask="p2p_parse.c"/>
        <files mask="p2p_build.c"/>
        <files mask="p2p_go_neg.c"/>
        <files mask="p2p_sd.c"/>
        <files mask="p2p_pd.c"/>
        <files mask="p2p_invitation.c"/>
        <files mask="p2p_dev_disc.c"/>
        <files mask="p2p_group.c"/>
      </source>
      <source relative_path="src/eap_peer" type="src">
        <files mask="eap_wsc.c"/>
        <files mask="eap.c"/>
        <files mask="eap_methods.c"/>
        <files mask="eap_tls.c"/>
        <files mask="eap_tls_common.c"/>
        <files mask="eap_peap.c"/>
        <files mask="eap_ttls.c"/>
        <files mask="eap_mschapv2.c"/>
        <files mask="mschapv2.c"/>
        <files mask="eap_fast.c"/>
        <files mask="eap_fast_pac.c"/>
        <files mask="eap_gtc.c"/>
        <files mask="eap_sim.c"/>
        <files mask="eap_aka.c"/>
      </source>
      <source relative_path="src/wps" type="src">
        <files mask="wps.c"/>
        <files mask="wps_common.c"/>
        <files mask="wps_attr_parse.c"/>
        <files mask="wps_attr_build.c"/>
        <files mask="wps_attr_process.c"/>
        <files mask="wps_dev_attr.c"/>
        <files mask="wps_enrollee.c"/>
        <files mask="wps_registrar.c"/>
      </source>
      <source relative_path="src/eapol_supp" type="src">
        <files mask="eapol_supp_sm.c"/>
      </source>
      <source relative_path="src/radius" type="src">
        <files mask="radius_server.c"/>
        <files mask="radius_das.c"/>
        <files mask="radius_client.c"/>
        <files mask="radius.c"/>
      </source>
      <source relative_path="src/ap" type="c_include">
        <files mask="acs.h"/>
        <files mask="accounting.h"/>
        <files mask="airtime_policy.h"/>
        <files mask="ap_config.h"/>
        <files mask="ap_drv_ops.h"/>
        <files mask="ap_list.h"/>
        <files mask="ap_mlme.h"/>
        <files mask="authsrv.h"/>
        <files mask="beacon.h"/>
        <files mask="bss_load.h"/>
        <files mask="ctrl_iface_ap.h"/>
        <files mask="dfs.h"/>
        <files mask="dhcp_snoop.h"/>
        <files mask="fils_hlp.h"/>
        <files mask="gas_query_ap.h"/>
        <files mask="gas_serv.h"/>
        <files mask="hostapd.h"/>
        <files mask="hs20.h"/>
        <files mask="hw_features.h"/>
        <files mask="ieee802_11_auth.h"/>
        <files mask="ieee802_11.h"/>
        <files mask="ieee802_1x.h"/>
        <files mask="mbo_ap.h"/>
        <files mask="ndisc_snoop.h"/>
        <files mask="neighbor_db.h"/>
        <files mask="p2p_hostapd.h"/>
        <files mask="pmksa_cache_auth.h"/>
        <files mask="preauth_auth.h"/>
        <files mask="rrm.h"/>
        <files mask="sta_info.h"/>
        <files mask="taxonomy.h"/>
        <files mask="tkip_countermeasures.h"/>
        <files mask="vlan.h"/>
        <files mask="vlan_init.h"/>
        <files mask="vlan_util.h"/>
        <files mask="wmm.h"/>
        <files mask="wnm_ap.h"/>
        <files mask="wpa_auth_glue.h"/>
        <files mask="wpa_auth.h"/>
        <files mask="wpa_auth_ie.h"/>
        <files mask="wpa_auth_i.h"/>
        <files mask="wpa_auth_kay.h"/>
        <files mask="wps_hostapd.h"/>
        <files mask="x_snoop.h"/>
      </source>
      <source relative_path="src/tls" type="src">
        <files mask="asn1.c"/>
      </source>
      <source relative_path="src/common" type="c_include">
        <files mask="brcm_vendor.h"/>
        <files mask="ctrl_iface_common.h"/>
        <files mask="defs.h"/>
        <files mask="dhcp.h"/>
        <files mask="dpp.h"/>
        <files mask="dpp_i.h"/>
        <files mask="dragonfly.h"/>
        <files mask="eapol_common.h"/>
        <files mask="gas.h"/>
        <files mask="hw_features_common.h"/>
        <files mask="ieee802_11_common.h"/>
        <files mask="ieee802_11_defs.h"/>
        <files mask="ieee802_1x_defs.h"/>
        <files mask="linux_bridge.h"/>
        <files mask="linux_vlan.h"/>
        <files mask="ocv.h"/>
        <files mask="privsep_commands.h"/>
        <files mask="ptksa_cache.h"/>
        <files mask="qca-vendor-attr.h"/>
        <files mask="qca-vendor.h"/>
        <files mask="sae.h"/>
        <files mask="tnc.h"/>
        <files mask="version.h"/>
        <files mask="wpa_common.h"/>
        <files mask="wpa_ctrl.h"/>
        <files mask="wpa_helpers.h"/>
      </source>
      <source relative_path="src/drivers" type="c_include">
        <files mask="driver.h"/>
        <files mask="driver_hostap.h"/>
        <files mask="driver_freertos.h"/>
        <files mask="rfkill.h"/>
      </source>
      <source relative_path="src/eapol_auth" type="c_include">
        <files mask="eapol_auth_sm.h"/>
        <files mask="eapol_auth_sm_i.h"/>
      </source>
      <source relative_path="src/eap_peer" type="c_include">
        <files mask="eap_config.h"/>
        <files mask="eap_fast_pac.h"/>
        <files mask="eap.h"/>
        <files mask="eap_i.h"/>
        <files mask="eap_methods.h"/>
        <files mask="eap_proxy.h"/>
        <files mask="eap_teap_pac.h"/>
        <files mask="eap_tls_common.h"/>
        <files mask="ikev2.h"/>
        <files mask="mschapv2.h"/>
        <files mask="tncc.h"/>
      </source>
      <source relative_path="src/fst" type="c_include">
        <files mask="fst_ctrl_aux.h"/>
        <files mask="fst_ctrl_defs.h"/>
        <files mask="fst_ctrl_iface.h"/>
        <files mask="fst_defs.h"/>
        <files mask="fst_group.h"/>
        <files mask="fst.h"/>
        <files mask="fst_iface.h"/>
        <files mask="fst_internal.h"/>
        <files mask="fst_session.h"/>
      </source>
      <source relative_path="src/pae" type="c_include">
        <files mask="ieee802_1x_cp.h"/>
        <files mask="ieee802_1x_kay.h"/>
        <files mask="ieee802_1x_kay_i.h"/>
        <files mask="ieee802_1x_key.h"/>
        <files mask="ieee802_1x_secy_ops.h"/>
      </source>
      <source relative_path="src/rsn_supp" type="c_include">
        <files mask="pmksa_cache.h"/>
        <files mask="preauth.h"/>
        <files mask="wpa.h"/>
        <files mask="wpa_ie.h"/>
        <files mask="wpa_i.h"/>
      </source>
      <source relative_path="src/crypto" type="c_include">
        <files mask="aes.h"/>
        <files mask="aes_i.h"/>
        <files mask="aes_siv.h"/>
        <files mask="aes_wrap.h"/>
        <files mask="crypto.h"/>
        <files mask="des_i.h"/>
        <files mask="dh_group5.h"/>
        <files mask="dh_groups.h"/>
        <files mask="md5.h"/>
        <files mask="md5_i.h"/>
        <files mask="milenage.h"/>
        <files mask="ms_funcs.h"/>
        <files mask="random.h"/>
        <files mask="sha1.h"/>
        <files mask="sha1_i.h"/>
        <files mask="sha256.h"/>
        <files mask="sha256_i.h"/>
        <files mask="sha384.h"/>
        <files mask="sha384_i.h"/>
        <files mask="sha512.h"/>
        <files mask="sha512_i.h"/>
        <files mask="tls.h"/>
      </source>
      <source relative_path="src/eap_common" type="c_include">
        <files mask="chap.h"/>
        <files mask="eap_common.h"/>
        <files mask="eap_defs.h"/>
        <files mask="eap_eke_common.h"/>
        <files mask="eap_fast_common.h"/>
        <files mask="eap_gpsk_common.h"/>
        <files mask="eap_ikev2_common.h"/>
        <files mask="eap_pax_common.h"/>
        <files mask="eap_peap_common.h"/>
        <files mask="eap_psk_common.h"/>
        <files mask="eap_pwd_common.h"/>
        <files mask="eap_sake_common.h"/>
        <files mask="eap_sim_common.h"/>
        <files mask="eap_teap_common.h"/>
        <files mask="eap_tlv_common.h"/>
        <files mask="eap_ttls.h"/>
        <files mask="eap_wsc_common.h"/>
        <files mask="ikev2_common.h"/>
      </source>
      <source relative_path="src/eapol_supp" type="c_include">
        <files mask="eapol_supp_sm.h"/>
      </source>
      <source relative_path="src/eap_server" type="c_include">
        <files mask="eap.h"/>
        <files mask="eap_i.h"/>
        <files mask="eap_methods.h"/>
        <files mask="eap_sim_db.h"/>
        <files mask="eap_tls_common.h"/>
        <files mask="ikev2.h"/>
        <files mask="tncs.h"/>
      </source>
      <source relative_path="src/p2p" type="c_include">
        <files mask="p2p.h"/>
        <files mask="p2p_i.h"/>
      </source>
      <source relative_path="src/radius" type="c_include">
        <files mask="radius_client.h"/>
        <files mask="radius_das.h"/>
        <files mask="radius.h"/>
        <files mask="radius_server.h"/>
      </source>
      <source relative_path="src/tls" type="c_include">
        <files mask="asn1.h"/>
        <files mask="bignum.h"/>
        <files mask="pkcs1.h"/>
        <files mask="pkcs5.h"/>
        <files mask="pkcs8.h"/>
        <files mask="rsa.h"/>
        <files mask="tlsv1_client.h"/>
        <files mask="tlsv1_client_i.h"/>
        <files mask="tlsv1_common.h"/>
        <files mask="tlsv1_cred.h"/>
        <files mask="tlsv1_record.h"/>
        <files mask="tlsv1_server.h"/>
        <files mask="tlsv1_server_i.h"/>
        <files mask="x509v3.h"/>
      </source>
      <source relative_path="src/wps" type="c_include">
        <files mask="http_client.h"/>
        <files mask="http.h"/>
        <files mask="httpread.h"/>
        <files mask="http_server.h"/>
        <files mask="upnp_xml.h"/>
        <files mask="wps_attr_parse.h"/>
        <files mask="wps_defs.h"/>
        <files mask="wps_dev_attr.h"/>
        <files mask="wps_er.h"/>
        <files mask="wps.h"/>
        <files mask="wps_i.h"/>
        <files mask="wps_upnp.h"/>
        <files mask="wps_upnp_i.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_wpa_supplicant_rtos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src" type="c_include"/>
        <include_path relative_path="src/utils" type="c_include"/>
        <include_path relative_path="src/common" type="c_include"/>
        <include_path relative_path="src/crypto" type="c_include"/>
        <include_path relative_path="src/ap" type="c_include"/>
        <include_path relative_path="src/drivers" type="c_include"/>
        <include_path relative_path="src/eap_common" type="c_include"/>
        <include_path relative_path="src/eap_peer" type="c_include"/>
        <include_path relative_path="src/eap_server" type="c_include"/>
        <include_path relative_path="src/eapol_auth" type="c_include"/>
        <include_path relative_path="src/eapol_supp" type="c_include"/>
        <include_path relative_path="src/fst" type="c_include"/>
        <include_path relative_path="src/l2_packet" type="c_include"/>
        <include_path relative_path="src/p2p" type="c_include"/>
        <include_path relative_path="src/pae" type="c_include"/>
        <include_path relative_path="src/radius" type="c_include"/>
        <include_path relative_path="src/rsn_supp" type="c_include"/>
        <include_path relative_path="src/tls" type="c_include"/>
        <include_path relative_path="src/wps" type="c_include"/>
        <include_path relative_path="port/mbedtls" type="c_include"/>
        <include_path relative_path="hostapd" type="c_include"/>
        <include_path relative_path="wpa_supplicant" type="c_include"/>
        <include_path relative_path="freertos" type="c_include"/>
        <include_path relative_path="freertos/src" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src" type="asm_include"/>
        <include_path relative_path="src/utils" type="asm_include"/>
        <include_path relative_path="src/common" type="asm_include"/>
        <include_path relative_path="src/crypto" type="asm_include"/>
        <include_path relative_path="src/ap" type="asm_include"/>
        <include_path relative_path="src/drivers" type="asm_include"/>
        <include_path relative_path="src/eap_common" type="asm_include"/>
        <include_path relative_path="src/eap_peer" type="asm_include"/>
        <include_path relative_path="src/eap_server" type="asm_include"/>
        <include_path relative_path="src/eapol_auth" type="asm_include"/>
        <include_path relative_path="src/eapol_supp" type="asm_include"/>
        <include_path relative_path="src/fst" type="asm_include"/>
        <include_path relative_path="src/l2_packet" type="asm_include"/>
        <include_path relative_path="src/p2p" type="asm_include"/>
        <include_path relative_path="src/pae" type="asm_include"/>
        <include_path relative_path="src/radius" type="asm_include"/>
        <include_path relative_path="src/rsn_supp" type="asm_include"/>
        <include_path relative_path="src/tls" type="asm_include"/>
        <include_path relative_path="src/wps" type="asm_include"/>
        <include_path relative_path="port/mbedtls" type="asm_include"/>
        <include_path relative_path="hostapd" type="asm_include"/>
        <include_path relative_path="wpa_supplicant" type="asm_include"/>
        <include_path relative_path="freertos" type="asm_include"/>
        <include_path relative_path="freertos/src" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wireless.wpa_supplicant.rtos.hostapd.MIMXRT595S" name="wpa_supplicant-rtos_hostapd" brief="Wpa supplicant rtos hostapd" version="2.11.0" full_name="Wpa supplicant rtos hostapd" category="Wireless/wpa_supplicant" user_visible="true" type="middleware" package_base_path="middleware/wireless/wpa_supplicant-rtos" project_base_path="wpa_supplicant-rtos">
      <defines>
        <define name="CONFIG_HOSTAPD" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.wireless.wpa_supplicant.rtos.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="hostapd" type="src">
        <files mask="hlr_auc_gw.c"/>
        <files mask="ctrl_iface.c"/>
        <files mask="eap_register.c"/>
      </source>
      <source relative_path="hostapd" type="c_include">
        <files mask="config_file.h"/>
        <files mask="ctrl_iface.h"/>
        <files mask="eap_register.h"/>
      </source>
      <source relative_path="hostapd" type="other">
        <files mask="README"/>
      </source>
      <source relative_path="src/ap" type="src">
        <files mask="dpp_hostapd.c"/>
        <files mask="acs.c"/>
        <files mask="eth_p_oui.c"/>
        <files mask="gas_serv.c"/>
      </source>
      <source relative_path="src/ap" type="c_include">
        <files mask="dpp_hostapd.h"/>
        <files mask="eth_p_oui.h"/>
      </source>
      <source relative_path="src/common" type="c_include">
        <files mask="gas_server.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wireless_wpa_supplicant_rtos_hostapd.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src" type="c_include"/>
        <include_path relative_path="src/ap" type="c_include"/>
        <include_path relative_path="hostapd" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src" type="asm_include"/>
        <include_path relative_path="src/ap" type="asm_include"/>
        <include_path relative_path="hostapd" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.template.MIMXRT595S" name="Wi-Fi configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="Wi-Fi configuration template" category="Wireless/NXP Wi-Fi" user_visible="false" type="project_template" package_base_path="components/wifi_bt_module/template" project_base_path="wifi/template">
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="component.wifi_bt_module.config.MIMXRT595S"/>
              <component_dependency value="component.wifi_bt_module.tx_pwr_limits.MIMXRT595S"/>
              <component_dependency value="middleware.wifi.wifi_bt_config.template.MIMXRT595S"/>
            </all>
            <component_dependency value="component.wifi_bt_module.tx_pwr_limits.MIMXRT595S"/>
          </any_of>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_template.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.wifi.osa.MIMXRT595S" name="nxp wifi osa" brief="NXP WLAN OSA" version="1.0.0" full_name="NXP WLAN OSA" category="Wireless/NXP Wi-Fi" user_visible="true" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="incl/port/osa" type="c_include">
        <files mask="osa.h"/>
        <files mask="mem_pool.h"/>
        <files mask="mem_pool_config.h"/>
        <files mask="slist.h"/>
        <files mask="stack_simple.h"/>
      </source>
      <source relative_path="port/osa" type="src">
        <files mask="osa.c"/>
        <files mask="mem_pool.c"/>
        <files mask="mem_pool_config.c"/>
        <files mask="slist.c"/>
        <files mask="stack_simple.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_osa.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="incl/port" type="c_include"/>
        <include_path relative_path="incl/port/osa" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="incl/port" type="asm_include"/>
        <include_path relative_path="incl/port/osa" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.common_files.MIMXRT595S" name="nxp_wireless_common_files" brief="NXP WLAN common files" version="1.0.0" full_name="NXP WLAN common files" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.osa.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="incl" type="c_include">
        <files mask="wifi_config_default.h"/>
        <files mask="wifi_cal_data_ext.h"/>
        <files mask="wm_utils.h"/>
        <files mask="wmerrno.h"/>
        <files mask="wmlog.h"/>
        <files mask="wmtypes.h"/>
        <files mask="wifi_cal_data_frdmrw61x_1ant.h"/>
        <files mask="wifi_cal_data_rw61x_1ant.h"/>
        <files mask="wifi_cal_data_rw61x_1ant_diversity.h"/>
        <files mask="wifi_cal_data_rw61x_2ant.h"/>
        <files mask="wifi_cal_data_rw61x_3ant_diversity.h"/>
        <files mask="wifi_cal_data_rw61x_override.h"/>
      </source>
      <source relative_path="incl/wifidriver" type="c_include">
        <files mask="wifi-decl.h"/>
        <files mask="wifi.h"/>
        <files mask="wifi_events.h"/>
      </source>
      <source relative_path="wifidriver/incl" type="c_include">
        <files mask="mlan_decl.h"/>
        <files mask="mlan_ioctl.h"/>
        <files mask="type_decls.h"/>
      </source>
      <source relative_path="wifi_bt_firmware" type="c_include">
        <files mask="wlan_bt_fw.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_common_files.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="incl/port/osa" type="c_include"/>
        <include_path relative_path="incl/wifidriver" type="c_include"/>
        <include_path relative_path="wifi_bt_firmware" type="c_include"/>
        <include_path relative_path="wifidriver" type="c_include"/>
        <include_path relative_path="wifidriver/incl" type="c_include"/>
        <include_path relative_path="incl" type="asm_include"/>
        <include_path relative_path="incl/port/osa" type="asm_include"/>
        <include_path relative_path="incl/wifidriver" type="asm_include"/>
        <include_path relative_path="wifi_bt_firmware" type="asm_include"/>
        <include_path relative_path="wifidriver" type="asm_include"/>
        <include_path relative_path="wifidriver/incl" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.fwdnld.MIMXRT595S" name="nxp_wireless_fwdnld" brief="NXP WLAN f/w dnld driver" version="1.0.0" full_name="NXP WLAN f/w dnld driver" category="Wireless/NXP Wi-Fi" user_visible="true" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.common_files.MIMXRT595S"/>
          <component_dependency value="middleware.wifi.fwdnld_intf_abs.MIMXRT595S"/>
          <component_dependency value="middleware.wifi.mlan_sdio.MIMXRT595S"/>
          <component_dependency value="middleware.wifi.template.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="incl" type="c_include">
        <files mask="WIFI_IW416_BOARD_AW_AM457_CAL_DATA_EXT.h"/>
      </source>
      <source relative_path="wifidriver/incl" type="c_include">
        <files mask="mlan_main_defs.h"/>
      </source>
      <source relative_path="wifi_bt_firmware/8801" type="asm_include">
        <files mask="sd8801_wlan.bin.inc"/>
      </source>
      <source relative_path="wifi_bt_firmware/8801" type="c_include">
        <files mask="sd8801_wlan.h"/>
      </source>
      <source relative_path="wifi_bt_firmware/8801" type="src">
        <files mask="8801_cpu1.c"/>
      </source>
      <source relative_path="wifi_bt_firmware/IW416" type="asm_include">
        <files mask="sduartIW416_wlan_bt.bin.inc"/>
        <files mask="sdIW416_wlan.bin.inc"/>
        <files mask="uartIW416_bt.bin.inc"/>
      </source>
      <source relative_path="wifi_bt_firmware/IW416" type="c_include">
        <files mask="sduartIW416_wlan_bt.h"/>
        <files mask="sdIW416_wlan.h"/>
        <files mask="uartIW416_bt.h"/>
      </source>
      <source relative_path="wifi_bt_firmware/IW416" type="src">
        <files mask="IW416_cpu12.c"/>
        <files mask="IW416_cpu1.c"/>
        <files mask="IW416_cpu2.c"/>
      </source>
      <source relative_path="wifi_bt_firmware/8987" type="asm_include">
        <files mask="sduart8987_wlan_bt.bin.inc"/>
        <files mask="sd8987_wlan.bin.inc"/>
        <files mask="uart8987_bt.bin.inc"/>
      </source>
      <source relative_path="wifi_bt_firmware/8987" type="c_include">
        <files mask="sduart8987_wlan_bt.h"/>
        <files mask="sd8987_wlan.h"/>
        <files mask="uart8987_bt.h"/>
      </source>
      <source relative_path="wifi_bt_firmware/8987" type="src">
        <files mask="8987_cpu12.c"/>
        <files mask="8987_cpu1.c"/>
        <files mask="8987_cpu2.c"/>
      </source>
      <source relative_path="wifi_bt_firmware/nw61x" type="asm_include">
        <files mask="sduart_nw61x.bin.se.inc"/>
        <files mask="sd_nw61x.bin.se.inc"/>
        <files mask="uart_nw61x.bin.se.inc"/>
      </source>
      <source relative_path="wifi_bt_firmware/nw61x" type="c_include">
        <files mask="sduart_nw61x_se.h"/>
        <files mask="sd_nw61x_se.h"/>
        <files mask="uart_nw61x_se.h"/>
      </source>
      <source relative_path="wifi_bt_firmware/nw61x" type="src">
        <files mask="nw61x_cpu12_se.c"/>
        <files mask="nw61x_cpu1_se.c"/>
        <files mask="nw61x_cpu2_se.c"/>
      </source>
      <source relative_path="wifi_bt_firmware/iw610" type="asm_include">
        <files mask="sduart_iw610.bin.se.inc"/>
        <files mask="sd_iw610.bin.se.inc"/>
        <files mask="uart_iw610_bt.bin.se.inc"/>
      </source>
      <source relative_path="wifi_bt_firmware/iw610" type="c_include">
        <files mask="sduart_iw610_se.h"/>
        <files mask="sd_iw610_se.h"/>
        <files mask="uart_iw610_se.h"/>
      </source>
      <source relative_path="wifi_bt_firmware/iw610" type="src">
        <files mask="iw610_cpu12_se.c"/>
        <files mask="iw610_cpu2_se.c"/>
        <files mask="iw610_cpu1_se.c"/>
      </source>
      <source relative_path="wifidriver" type="src">
        <files mask="sdio.c"/>
      </source>
      <source relative_path="wifidriver" type="c_include">
        <files mask="sdio.h"/>
      </source>
      <source relative_path="firmware_dnld" type="src">
        <files mask="firmware_dnld.c"/>
      </source>
      <source relative_path="firmware_dnld" type="c_include">
        <files mask="firmware_dnld.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_fwdnld.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="wifi_bt_firmware" type="c_include"/>
        <include_path relative_path="wifi_bt_firmware/8801" type="c_include"/>
        <include_path relative_path="wifi_bt_firmware/IW416" type="c_include"/>
        <include_path relative_path="wifi_bt_firmware/8987" type="c_include"/>
        <include_path relative_path="wifi_bt_firmware/nw61x" type="c_include"/>
        <include_path relative_path="wifi_bt_firmware/iw610" type="c_include"/>
        <include_path relative_path="wifidriver" type="c_include"/>
        <include_path relative_path="wifidriver/incl" type="c_include"/>
        <include_path relative_path="firmware_dnld" type="c_include"/>
        <include_path relative_path="sdio_nxp_abs" type="c_include"/>
        <include_path relative_path="sdio_nxp_abs/incl" type="c_include"/>
        <include_path relative_path="fwdnld_intf_abs" type="c_include"/>
        <include_path relative_path="incl" type="asm_include"/>
        <include_path relative_path="wifi_bt_firmware" type="asm_include"/>
        <include_path relative_path="wifi_bt_firmware/8801" type="asm_include"/>
        <include_path relative_path="wifi_bt_firmware/IW416" type="asm_include"/>
        <include_path relative_path="wifi_bt_firmware/8987" type="asm_include"/>
        <include_path relative_path="wifi_bt_firmware/nw61x" type="asm_include"/>
        <include_path relative_path="wifi_bt_firmware/iw610" type="asm_include"/>
        <include_path relative_path="wifidriver" type="asm_include"/>
        <include_path relative_path="wifidriver/incl" type="asm_include"/>
        <include_path relative_path="firmware_dnld" type="asm_include"/>
        <include_path relative_path="sdio_nxp_abs" type="asm_include"/>
        <include_path relative_path="sdio_nxp_abs/incl" type="asm_include"/>
        <include_path relative_path="fwdnld_intf_abs" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.net_free_rtos.MIMXRT595S" name="nxp wifi osa free_rtos" brief="NXP WLAN OSA" version="1.0.0" full_name="NXP WLAN OSA" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
          <component_dependency value="middleware.lwip.MIMXRT595S"/>
          <component_dependency value="middleware.lwip.apps.lwiperf.MIMXRT595S"/>
          <component_dependency value="middleware.wifi.net.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="incl/port/net" type="c_include">
        <files mask="wm_net.h"/>
      </source>
      <source relative_path="port/net" type="src">
        <files mask="net.c"/>
        <files mask="wifi_netif.c"/>
      </source>
      <source relative_path="port/net" type="c_include">
        <files mask="netif_decl.h"/>
      </source>
      <source relative_path="incl/port/net/hooks" type="c_include">
        <files mask="lwip_default_hooks.h"/>
      </source>
      <source relative_path="port/net/hooks" type="src">
        <files mask="lwip_default_hooks.c"/>
      </source>
      <source relative_path="dhcpd" type="c_include">
        <files mask="dhcp-bootp.h"/>
        <files mask="dhcp-priv.h"/>
        <files mask="dns.h"/>
      </source>
      <source relative_path="dhcpd" type="src">
        <files mask="dhcp-server-main.c"/>
        <files mask="dhcp-server.c"/>
        <files mask="dns-server.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_net_free_rtos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="incl/port/osa" type="c_include"/>
        <include_path relative_path="port/osa" type="c_include"/>
        <include_path relative_path="incl/port/net" type="c_include"/>
        <include_path relative_path="incl/port/net/hooks" type="c_include"/>
        <include_path relative_path="dhcpd" type="c_include"/>
        <include_path relative_path="incl/wlcmgr" type="c_include"/>
        <include_path relative_path="incl/wifidriver" type="c_include"/>
        <include_path relative_path="wifidriver/incl" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="incl" type="asm_include"/>
        <include_path relative_path="incl/port/osa" type="asm_include"/>
        <include_path relative_path="port/osa" type="asm_include"/>
        <include_path relative_path="incl/port/net" type="asm_include"/>
        <include_path relative_path="incl/port/net/hooks" type="asm_include"/>
        <include_path relative_path="dhcpd" type="asm_include"/>
        <include_path relative_path="incl/wlcmgr" type="asm_include"/>
        <include_path relative_path="incl/wifidriver" type="asm_include"/>
        <include_path relative_path="wifidriver/incl" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.net.MIMXRT595S" name="nxp wifi osa" brief="NXP WLAN OSA" version="1.0.0" full_name="NXP WLAN OSA" category="Wireless/NXP Wi-Fi" user_visible="true" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="incl/port/net" type="c_include">
        <files mask="wm_net.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_net.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="incl/port/osa" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="incl/port/osa" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.wifidriver.MIMXRT595S" name="nxp_wifi_driver" brief="NXP Wi-Fi driver" version="1.3.46" full_name="NXP Wi-Fi driver" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="utility.debug_console.MIMXRT595S"/>
            <component_dependency value="utility.debug_console_lite.MIMXRT595S"/>
          </any_of>
          <component_dependency value="middleware.wifi.fwdnld.MIMXRT595S"/>
          <component_dependency value="middleware.wifi.fwdnld_intf_abs.MIMXRT595S"/>
          <component_dependency value="middleware.wifi.sdio.MIMXRT595S"/>
          <component_dependency value="middleware.wifi.net.MIMXRT595S"/>
          <component_dependency value="middleware.wifi.osa.MIMXRT595S"/>
          <component_dependency value="middleware.wifi.template.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="incl" type="c_include">
        <files mask="dhcp-server.h"/>
        <files mask="nxp_wifi.h"/>
      </source>
      <source relative_path="incl/wlcmgr" type="c_include">
        <files mask="wlan.h"/>
        <files mask="wlan_11d.h"/>
      </source>
      <source relative_path="incl/wifidriver" type="c_include">
        <files mask="wifi_nxp.h"/>
      </source>
      <source relative_path="wifidriver/incl" type="c_include">
        <files mask="mlan.h"/>
        <files mask="mlan_11ac.h"/>
        <files mask="mlan_11ax.h"/>
        <files mask="mlan_11h.h"/>
        <files mask="mlan_11n.h"/>
        <files mask="mlan_11n_aggr.h"/>
        <files mask="mlan_11n_rxreorder.h"/>
        <files mask="mlan_11v.h"/>
        <files mask="mlan_action.h"/>
        <files mask="mlan_11k.h"/>
        <files mask="mlan_mbo.h"/>
        <files mask="mlan_api.h"/>
        <files mask="mlan_fw.h"/>
        <files mask="mlan_ieee.h"/>
        <files mask="mlan_init.h"/>
        <files mask="mlan_join.h"/>
        <files mask="mlan_main.h"/>
        <files mask="mlan_meas.h"/>
        <files mask="mlan_remap_mem_operations.h"/>
        <files mask="mlan_uap.h"/>
        <files mask="mlan_util.h"/>
        <files mask="mlan_wmm.h"/>
      </source>
      <source relative_path="wifidriver" type="src">
        <files mask="mlan_11ac.c"/>
        <files mask="mlan_11ax.c"/>
        <files mask="mlan_11d.c"/>
        <files mask="mlan_11h.c"/>
        <files mask="mlan_11n.c"/>
        <files mask="mlan_11n_aggr.c"/>
        <files mask="mlan_11n_rxreorder.c"/>
        <files mask="mlan_11v.c"/>
        <files mask="mlan_action.c"/>
        <files mask="mlan_11k.c"/>
        <files mask="mlan_mbo.c"/>
        <files mask="mlan_api.c"/>
        <files mask="mlan_cfp.c"/>
        <files mask="mlan_cmdevt.c"/>
        <files mask="mlan_glue.c"/>
        <files mask="mlan_init.c"/>
        <files mask="mlan_join.c"/>
        <files mask="mlan_misc.c"/>
        <files mask="mlan_scan.c"/>
        <files mask="mlan_shim.c"/>
        <files mask="mlan_sta_cmd.c"/>
        <files mask="mlan_sta_cmdresp.c"/>
        <files mask="mlan_sta_event.c"/>
        <files mask="mlan_sta_ioctl.c"/>
        <files mask="mlan_sta_rx.c"/>
        <files mask="mlan_txrx.c"/>
        <files mask="mlan_wmm.c"/>
        <files mask="wifi-debug.c"/>
        <files mask="wifi-mem.c"/>
        <files mask="wifi.c"/>
        <files mask="wifi_pwrmgr.c"/>
        <files mask="wifi-wps.c"/>
      </source>
      <source relative_path="wifidriver" type="c_include">
        <files mask="wifi-debug.h"/>
        <files mask="wifi-internal.h"/>
        <files mask="wifi_common.h"/>
      </source>
      <source relative_path="wifidriver/wpa_supp_if/incl" type="c_include">
        <files mask="rtos_wpa_supp_if.h"/>
        <files mask="wifi_nxp_internal.h"/>
      </source>
      <source relative_path="wifidriver/wpa_supp_if" type="src">
        <files mask="wifi_nxp.c"/>
        <files mask="rtos_wpa_supp_if.c"/>
        <files mask="wifi_nxp_internal.c"/>
      </source>
      <source relative_path="certs" type="c_include">
        <files mask="ca-cert.h"/>
        <files mask="client-cert.h"/>
        <files mask="client-key.h"/>
        <files mask="server-cert.h"/>
        <files mask="server-key.h"/>
        <files mask="dh-param.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_wifidriver.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="incl/wlcmgr" type="c_include"/>
        <include_path relative_path="wifidriver" type="c_include"/>
        <include_path relative_path="wifidriver/incl" type="c_include"/>
        <include_path relative_path="wifidriver/wpa_supp_if" type="c_include"/>
        <include_path relative_path="wifidriver/wpa_supp_if/incl" type="c_include"/>
        <include_path relative_path="certs" type="c_include"/>
        <include_path relative_path="firmware_dnld" type="c_include"/>
        <include_path relative_path="sdio_nxp_abs" type="c_include"/>
        <include_path relative_path="sdio_nxp_abs/incl" type="c_include"/>
        <include_path relative_path="incl" type="asm_include"/>
        <include_path relative_path="incl/wlcmgr" type="asm_include"/>
        <include_path relative_path="wifidriver" type="asm_include"/>
        <include_path relative_path="wifidriver/incl" type="asm_include"/>
        <include_path relative_path="wifidriver/wpa_supp_if" type="asm_include"/>
        <include_path relative_path="wifidriver/wpa_supp_if/incl" type="asm_include"/>
        <include_path relative_path="certs" type="asm_include"/>
        <include_path relative_path="firmware_dnld" type="asm_include"/>
        <include_path relative_path="sdio_nxp_abs" type="asm_include"/>
        <include_path relative_path="sdio_nxp_abs/incl" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.wifidriver.softap.MIMXRT595S" name="nxp_wifi_driver_softap" brief="NXP Wi-Fi driver Soft AP" version="1.3.46" full_name="NXP Wi-Fi driver Soft AP" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <defines>
        <define name="CONFIG_NXP_WIFI_SOFTAP_SUPPORT" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.wifidriver.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="wifidriver" type="src">
        <files mask="wifi-uap.c"/>
        <files mask="mlan_uap_ioctl.c"/>
        <files mask="mlan_uap_cmdevent.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_wifidriver_softap.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="wifidriver" type="c_include"/>
        <include_path relative_path="wifidriver" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.MIMXRT595S" name="wifi_nxp" brief="NXP Wi-Fi functionality enables customers to quickly develop applications of interest to add connectivity to different sensors and appliances" version="1.3.46" full_name="NXP Wi-Fi" category="Wireless/NXP Wi-Fi" user_visible="true" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="utility.debug_console.MIMXRT595S"/>
            <component_dependency value="utility.debug_console_lite.MIMXRT595S"/>
          </any_of>
          <component_dependency value="middleware.wifi.template.MIMXRT595S"/>
          <component_dependency value="middleware.wifi.wifidriver.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="dhcpd" type="c_include">
        <files mask="dhcp-bootp.h"/>
        <files mask="dhcp-priv.h"/>
        <files mask="dns.h"/>
      </source>
      <source relative_path="dhcpd" type="src">
        <files mask="dhcp-server-main.c"/>
        <files mask="dhcp-server.c"/>
        <files mask="dns-server.c"/>
      </source>
      <source relative_path="incl/port/net" type="c_include">
        <files mask="wm_net.h"/>
      </source>
      <source relative_path="incl" type="c_include">
        <files mask="wmstats.h"/>
      </source>
      <source relative_path="port/net" type="src">
        <files mask="net.c"/>
        <files mask="wifi_netif.c"/>
      </source>
      <source relative_path="port/net" type="c_include">
        <files mask="netif_decl.h"/>
      </source>
      <source relative_path="wlcmgr" type="src">
        <files mask="wlan.c"/>
        <files mask="wlan_txpwrlimit_cfg.c"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="ChangeLogKSDK.txt"/>
        <files mask="CMakeLists.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="incl/wifidriver" type="c_include"/>
        <include_path relative_path="incl/port/net" type="c_include"/>
        <include_path relative_path="port/net" type="c_include"/>
        <include_path relative_path="incl/port/net/hooks" type="c_include"/>
        <include_path relative_path="incl" type="asm_include"/>
        <include_path relative_path="incl/wifidriver" type="asm_include"/>
        <include_path relative_path="incl/port/net" type="asm_include"/>
        <include_path relative_path="port/net" type="asm_include"/>
        <include_path relative_path="incl/port/net/hooks" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.sdio.MIMXRT595S" name="wifi_nxp_sdio" brief="NXP Wi-Fi SDIO driver" version="1.3.46" full_name="NXP Wi-Fi SDIO" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.mlan_sdio.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="wifidriver" type="src">
        <files mask="wifi-sdio.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_sdio.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.wifi.mlan_sdio.MIMXRT595S" name="wifi_nxp_mlan_sdio" brief="NXP Wi-Fi SDIO driver" version="1.3.46" full_name="NXP Wi-Fi SDIO" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.host.usdhc.MIMXRT595S"/>
          <component_dependency value="middleware.sdmmc.sdio.MIMXRT595S"/>
          <component_dependency value="middleware.wifi.common_files.MIMXRT595S"/>
          <component_dependency value="middleware.wifi.template.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="sdio_nxp_abs" type="src">
        <files mask="mlan_sdio.c"/>
        <files mask="fwdnld_sdio.c"/>
      </source>
      <source relative_path="sdio_nxp_abs/incl" type="c_include">
        <files mask="fwdnld_sdio.h"/>
        <files mask="mlan_sdio_defs.h"/>
        <files mask="mlan_sdio.h"/>
        <files mask="mlan_sdio_api.h"/>
      </source>
      <source relative_path="wifidriver" type="c_include">
        <files mask="wifi-sdio.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_mlan_sdio.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="wifidriver" type="c_include"/>
        <include_path relative_path="sdio_nxp_abs/incl" type="c_include"/>
        <include_path relative_path="wifidriver" type="asm_include"/>
        <include_path relative_path="sdio_nxp_abs/incl" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.cli.MIMXRT595S" name="wifi_nxp_cli" brief="Middlware Wi-Fi CLI" version="1.3.46" full_name="NXP Wi-Fi CLI" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="utility.debug_console.MIMXRT595S"/>
            <component_dependency value="utility.debug_console_lite.MIMXRT595S"/>
          </any_of>
          <component_dependency value="middleware.wifi.MIMXRT595S"/>
          <component_dependency value="middleware.wifi.wifidriver.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="cli" type="c_include">
        <files mask="cli_mem.h"/>
        <files mask="wifi_shell.h"/>
      </source>
      <source relative_path="cli" type="src">
        <files mask="cli.c"/>
        <files mask="cli_mem_simple.c"/>
        <files mask="cli_utils.c"/>
        <files mask="wifi_shell.c"/>
      </source>
      <source relative_path="incl" type="c_include">
        <files mask="cli.h"/>
        <files mask="cli_utils.h"/>
        <files mask="iperf.h"/>
        <files mask="wifi_ping.h"/>
      </source>
      <source relative_path="port/osa" type="src">
        <files mask="osa_cli.c"/>
      </source>
      <source relative_path="dhcpd" type="src">
        <files mask="dhcp-server-cli.c"/>
      </source>
      <source relative_path="nw_utils" type="src">
        <files mask="wifi_ping.c"/>
        <files mask="iperf.c"/>
        <files mask="init_enet.c"/>
      </source>
      <source relative_path="nw_utils" type="c_include">
        <files mask="network_cfg.h"/>
      </source>
      <source relative_path="nw_utils/telnet" type="c_include">
        <files mask="telnet_server.h"/>
      </source>
      <source relative_path="nw_utils/telnet" type="src">
        <files mask="telnet_server.c"/>
      </source>
      <source relative_path="wlcmgr" type="src">
        <files mask="wlan_basic_cli.c"/>
        <files mask="wlan_enhanced_tests.c"/>
        <files mask="wlan_tests.c"/>
        <files mask="wlan_test_mode_tests.c"/>
      </source>
      <source relative_path="incl/wlcmgr" type="c_include">
        <files mask="wlan_tests.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_cli.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="cli" type="c_include"/>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="incl/wlcmgr" type="c_include"/>
        <include_path relative_path="nw_utils" type="c_include"/>
        <include_path relative_path="nw_utils/telnet" type="c_include"/>
        <include_path relative_path="cli" type="asm_include"/>
        <include_path relative_path="incl" type="asm_include"/>
        <include_path relative_path="incl/wlcmgr" type="asm_include"/>
        <include_path relative_path="nw_utils" type="asm_include"/>
        <include_path relative_path="nw_utils/telnet" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.wmcrypto.MIMXRT595S" name="wifi_nxp_wmcrypto" brief="Middlware Wi-Fi WMCRYPTO" version="1.0.0" full_name="NXP Wi-Fi WMCRYPTO" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.MIMXRT595S"/>
          <component_dependency value="middleware.wifi.wifidriver.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="wmcrypto" type="src">
        <files mask="wmcrypto.c"/>
        <files mask="wmcrypto_mem.c"/>
        <files mask="wm_mbedtls_entropy.c"/>
        <files mask="wm_mbedtls_mem.c"/>
        <files mask="wm_mbedtls_net.c"/>
        <files mask="wm_mbedtls_helper_api.c"/>
        <files mask="wm_utils.c"/>
      </source>
      <source relative_path="incl/wmcrypto" type="c_include">
        <files mask="wmcrypto.h"/>
      </source>
      <source relative_path="wmcrypto" type="c_include">
        <files mask="wmcrypto_mem.h"/>
        <files mask="wm_mbedtls_debug.h"/>
        <files mask="wm_mbedtls_entropy.h"/>
        <files mask="wm_mbedtls_mem.h"/>
        <files mask="wm_mbedtls_net.h"/>
        <files mask="wm_mbedtls_helper_api.h"/>
      </source>
      <source relative_path="wmcrypto/aescrypto" type="c_include">
        <files mask="aes.h"/>
        <files mask="aes_siv.h"/>
        <files mask="aes_wrap.h"/>
        <files mask="common.h"/>
        <files mask="crypto.h"/>
        <files mask="includes.h"/>
        <files mask="type_def.h"/>
      </source>
      <source relative_path="wmcrypto/aescrypto" type="src">
        <files mask="aes-siv.c"/>
        <files mask="aes-ctr.c"/>
        <files mask="aes-omac1.c"/>
        <files mask="aes-wrap.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_wmcrypto.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="wmcrypto" type="c_include"/>
        <include_path relative_path="incl/wmcrypto" type="c_include"/>
        <include_path relative_path="wmcrypto/aescrypto" type="c_include"/>
        <include_path relative_path="wmcrypto" type="asm_include"/>
        <include_path relative_path="incl/wmcrypto" type="asm_include"/>
        <include_path relative_path="wmcrypto/aescrypto" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.wmtime.MIMXRT595S" name="wifi_nxp_wmtime" brief="Middlware Wi-Fi WMTIME" version="1.0.0" full_name="NXP Wi-Fi WMTIME" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.MIMXRT595S"/>
          <component_dependency value="middleware.wifi.wifidriver.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="wmtime" type="src">
        <files mask="wmtime.c"/>
      </source>
      <source relative_path="incl" type="c_include">
        <files mask="wmtime.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_wmtime.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="wmtime" type="c_include"/>
        <include_path relative_path="incl" type="c_include"/>
        <include_path relative_path="wmtime" type="asm_include"/>
        <include_path relative_path="incl" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.ncp_supp_wmcrypto.MIMXRT595S" name="ncp_supp_wmcrypto" brief="Middlware Wi-Fi NCP_SUPP_WMCRYPTO" version="1.0.0" full_name="NXP Wi-Fi NCP_SUPP_WMCRYPTO" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.MIMXRT595S"/>
          <component_dependency value="middleware.wifi.wifidriver.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="incl/wmcrypto" type="c_include">
        <files mask="wmcrypto.h"/>
      </source>
      <source relative_path="wmcrypto" type="src">
        <files mask="wmcrypto_mem.c"/>
        <files mask="wm_mbedtls_entropy.c"/>
        <files mask="wm_mbedtls_mem.c"/>
        <files mask="wm_mbedtls_net.c"/>
        <files mask="wm_mbedtls_helper_api.c"/>
        <files mask="wm_utils.c"/>
      </source>
      <source relative_path="wmcrypto" type="c_include">
        <files mask="wmcrypto_mem.h"/>
        <files mask="wm_mbedtls_debug.h"/>
        <files mask="wm_mbedtls_entropy.h"/>
        <files mask="wm_mbedtls_mem.h"/>
        <files mask="wm_mbedtls_net.h"/>
        <files mask="wm_mbedtls_helper_api.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_ncp_supp_wmcrypto.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="wmcrypto" type="c_include"/>
        <include_path relative_path="incl/wmcrypto" type="c_include"/>
        <include_path relative_path="wmcrypto" type="asm_include"/>
        <include_path relative_path="incl/wmcrypto" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.wifi.wls.MIMXRT595S" name="wifi_nxp_wls" brief="Middlware Wi-Fi Location Service" version="1.3.46" full_name="NXP Wi-Fi WLS" category="Wireless/NXP Wi-Fi" user_visible="false" type="middleware" package_base_path="middleware/wifi_nxp" project_base_path="wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.wifi.MIMXRT595S"/>
          <component_dependency value="middleware.wifi.wifidriver.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="wls" type="c_include">
        <files mask="range_kalman.h"/>
        <files mask="wls_api.h"/>
        <files mask="wls_param_defines.h"/>
        <files mask="wls_processing.h"/>
        <files mask="wls_QR_algorithm.h"/>
        <files mask="wls_radix4Fft.h"/>
        <files mask="wls_structure_defs.h"/>
        <files mask="wls_subspace_processing.h"/>
      </source>
      <source relative_path="wls" type="src">
        <files mask="range_kalman.c"/>
        <files mask="wls_api.c"/>
        <files mask="wls_processing.c"/>
        <files mask="wls_QR_algorithm.c"/>
        <files mask="wls_radix4Fft.c"/>
        <files mask="wls_subspace_processing.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_wifi_wls.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="wls" type="c_include"/>
        <include_path relative_path="wls" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.audio_voice.components.voice_seeker.fusionf1.MIMXRT595S" name="voice_seeker" brief="Voice seeker library for FusionF1" version="0.6.9" full_name="middleware voice_seeker FusionF1" category="Voice/Voice Control AFE" user_visible="true" type="middleware" package_base_path="middleware/audio_voice/components/voice_seeker/RT595_FusionF1" project_base_path="voice_seeker">
      <defines>
        <define name="FUSIONDSP" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.audio_voice.components.voice_seeker.rdsp_utilities_public.fusionf1.MIMXRT595S"/>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="doc">
        <files mask="COPYING-BSD-3.txt"/>
        <files mask="LICENSE.txt"/>
        <files mask="SCR-RT595_FusionF1-v0.6.8.txt"/>
        <files mask="SCR-RT595_FusionF1-v0.6.9.txt"/>
        <files mask="SCR-RT595_FusionF1_Voiceseeker-v0.6.9.txt"/>
        <files mask="SCR-RT595_FusionF1_Voiceseeker_no_aec-v0.6.9.txt"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_audio_voice_components_voice_seeker_fusionf1.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.audio_voice.components.voice_seeker.rdsp_utilities_public.fusionf1.MIMXRT595S" name="voice_seeker memory utils" brief="Voice seeker memory utilities for RT595_FusionF1" version="0.6.9" full_name="middleware voice_seeker memory utils fusionf1" category="Voice/Voice Control AFE" user_visible="true" type="middleware" package_base_path="middleware/audio_voice/components/voice_seeker/RT595_FusionF1/rdsp_utilities_public" project_base_path="voice_seeker/RT595_FusionF1/rdsp_utilities_public">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
          <device_core_dependency value="fusionf1_MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_audio_voice_components_voice_seeker_rdsp_utilities_public_fusionf1.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="rdsp_memory_utils_public" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
        <include_path relative_path="rdsp_memory_utils_public" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.audio_voice.components.vit.fusionf1.MIMXRT595S" name="vit" brief="Voice intelligent technology library" version="4.10.0" full_name="middleware vit" category="Voice/Voice Command" user_visible="true" type="middleware" package_base_path="middleware/audio_voice/components/vit" project_base_path="vit">
      <dependencies>
        <all>
          <component_dependency value="middleware.audio_voice.components.vit.fusionf1_models.MIMXRT595S"/>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
          <device_core_dependency value="fusionf1_MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_audio_voice_components_vit_fusionf1.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="FusionF1/Lib" type="c_include"/>
        <include_path relative_path="FusionF1/Lib/Inc" type="c_include"/>
        <include_path relative_path="FusionF1/Lib" type="asm_include"/>
        <include_path relative_path="FusionF1/Lib/Inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.audio_voice.components.vit.fusionf1_models.MIMXRT595S" name="vit fusionf1 models" brief="Voice intelligent technology FusionF1 models" version="4.10.0" full_name="middleware vit fusionf1 models" category="Voice/Voice Command" user_visible="false" type="middleware" package_base_path="middleware/audio_voice/components/vit" project_base_path="vit">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="FusionF1/Lib" type="c_include">
        <files mask="VIT.h"/>
        <files mask="VIT_Model_cn.h"/>
        <files mask="VIT_Model_de.h"/>
        <files mask="VIT_Model_en.h"/>
        <files mask="VIT_Model_es.h"/>
        <files mask="VIT_Model_fr.h"/>
        <files mask="VIT_Model_it.h"/>
        <files mask="VIT_Model_ja.h"/>
        <files mask="VIT_Model_ko.h"/>
        <files mask="VIT_Model_pt.h"/>
        <files mask="VIT_Model_tr.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_audio_voice_components_vit_fusionf1_models.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="FusionF1/Lib" type="c_include"/>
        <include_path relative_path="FusionF1/Lib" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.pd.MIMXRT595S" name="PD Stack" brief="Middleware usb_pd" version="2.11.0" full_name="USB Type-C PD Stack" category="USB/USB Type-C PD Stack" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.pd.phy.ptn5110.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="pd" type="c_include">
        <files mask="usb_pd.h"/>
        <files mask="usb_pd_interface.h"/>
        <files mask="usb_pd_phy.h"/>
        <files mask="usb_pd_spec.h"/>
        <files mask="usb_pd_timer.h"/>
        <files mask="usb_pd_auto_policy.h"/>
      </source>
      <source relative_path="pd" type="src">
        <files mask="usb_pd_connect.c"/>
        <files mask="usb_pd_interface.c"/>
        <files mask="usb_pd_msg.c"/>
        <files mask="usb_pd_policy.c"/>
        <files mask="usb_pd_timer.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_pd.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="pd" type="c_include"/>
        <include_path relative_path="pd" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.pd.altmode.MIMXRT595S" name="PD Alternate Mode" brief="Middleware usb_pd altmode" version="2.11.0" full_name="USB Type-C PD Alternate Mode" category="USB/USB Type-C PD Stack" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.pd.MIMXRT595S"/>
          <component_dependency value="middleware.usb.pd.phy.ptn5110.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="pd/alt_mode" type="src">
        <files mask="usb_pd_alt_mode.c"/>
        <files mask="usb_pd_alt_mode_dp.c"/>
      </source>
      <source relative_path="pd/alt_mode" type="c_include">
        <files mask="usb_pd_alt_mode.h"/>
        <files mask="usb_pd_alt_mode_dp.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_pd_altmode.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="pd/alt_mode" type="c_include"/>
        <include_path relative_path="pd/alt_mode" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.pd.phy.ptn5110.MIMXRT595S" name="PD PTN5110 Driver" brief="Middleware usb_pd phy ptn5110" version="2.11.0" full_name="USB Type-C PD Stack" category="USB/USB PD PHY" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="platform.drivers.flexcomm_i2c.MIMXRT595S"/>
            <component_dependency value="platform.drivers.i3c.MIMXRT595S"/>
          </any_of>
          <component_dependency value="platform.drivers.lpc_gpio.MIMXRT595S"/>
          <component_dependency value="component.i2c_adapter_interface.MIMXRT595S"/>
          <component_dependency value="middleware.usb.common_header.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="pd/ptn5110" type="c_include">
        <files mask="usb_pd_ptn5110.h"/>
        <files mask="usb_pd_ptn5110_register.h"/>
      </source>
      <source relative_path="pd/ptn5110" type="src">
        <files mask="usb_pd_ptn5110_connect.c"/>
        <files mask="usb_pd_ptn5110_hal.c"/>
        <files mask="usb_pd_ptn5110_interface.c"/>
        <files mask="usb_pd_ptn5110_msg.c"/>
      </source>
      <source relative_path="pd" type="src">
        <files mask="usb_pd_timer.c"/>
      </source>
      <source relative_path="pd/phy_interface" type="c_include">
        <files mask="usb_pd_i2c.h"/>
      </source>
      <source relative_path="pd/phy_interface" type="src">
        <files mask="usb_pd_i2c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_pd_phy_ptn5110.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="pd" type="c_include"/>
        <include_path relative_path="pd/ptn5110" type="c_include"/>
        <include_path relative_path="pd/phy_interface" type="c_include"/>
        <include_path relative_path="pd" type="asm_include"/>
        <include_path relative_path="pd/ptn5110" type="asm_include"/>
        <include_path relative_path="pd/phy_interface" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.pd.compliance_test_report.MIMXRT595S" name="PD Compliance Test Report" brief="Middleware usb_pd compliance_test_report" version="2.11.0" full_name="USB Type-C PD Stack" category="USB/USB Type-C PD Stack" user_visible="false" type="middleware" package_base_path="middleware/usb" project_base_path="./">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.pd.phy.ptn5110.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="pd/compliance_test_report/ellisys/consumer_provider" type="doc">
        <files mask="USB Compliance Report.html"/>
      </source>
      <source relative_path="pd/compliance_test_report/ellisys/drp" type="doc">
        <files mask="USB Compliance Report.html"/>
      </source>
      <source relative_path="pd/compliance_test_report/ellisys/drp_try_snk" type="doc">
        <files mask="USB Compliance Report.html"/>
      </source>
      <source relative_path="pd/compliance_test_report/ellisys/drp_try_src" type="doc">
        <files mask="USB Compliance Report.html"/>
      </source>
      <source relative_path="pd/compliance_test_report/ellisys/provider_consumer" type="doc">
        <files mask="USB Compliance Report.html"/>
      </source>
      <source relative_path="pd/compliance_test_report/ellisys/displayport_dock" type="doc">
        <files mask="USB Compliance Report.html"/>
      </source>
      <source relative_path="pd/compliance_test_report/ellisys/displayport_host" type="doc">
        <files mask="USB Compliance Report.html"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_pd_compliance_test_report.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.usb.common_header.MIMXRT595S" name="USB Common Header" brief="Middleware usb common_header" version="2.11.0" full_name="USB Common Header" category="USB/USB Common Header" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="component.osa.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="include" type="c_include">
        <files mask="usb.h"/>
        <files mask="usb_misc.h"/>
        <files mask="usb_spec.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_common_header.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.common_header.MIMXRT595S" name="USB Device Common Header" brief="Middleware usb device common_header" version="2.11.0" full_name="USB Device Common Header" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="device" type="c_include">
        <files mask="usb_device.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_common_header.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device" type="c_include"/>
        <include_path relative_path="device" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device_controller_ip3511hs.MIMXRT595S" name="USB Device IP3511HS Controller Driver(HS)" brief="Middleware usb device ip3511hs" version="2.11.0" full_name="USB Device IP3511HS Controller Driver(HS)" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.device.controller.driver.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="device" type="src">
        <files mask="usb_device_lpcip3511.c"/>
      </source>
      <source relative_path="device" type="c_include">
        <files mask="usb_device_lpcip3511.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_ip3511hs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device" type="c_include"/>
        <include_path relative_path="device" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.controller.driver.MIMXRT595S" name="USB Device Common Controller" brief="Middleware usb device controller driver" version="2.11.0" full_name="USB Device Common Controller" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.device.stack.MIMXRT595S"/>
          <component_dependency value="middleware.usb.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="device" type="src">
        <files mask="usb_device_dci.c"/>
      </source>
      <source relative_path="device" type="c_include">
        <files mask="usb_device_dci.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_controller_driver.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device" type="c_include"/>
        <include_path relative_path="device" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.stack.MIMXRT595S" name="USB Device Stack" brief="Middleware usb device stack" version="2.11.0" full_name="USB Device Stack" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.device.controller.driver.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="device" type="src">
        <files mask="usb_device_ch9.c"/>
      </source>
      <source relative_path="device" type="c_include">
        <files mask="usb_device_ch9.h"/>
      </source>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_class.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_class.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_stack.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device" type="c_include"/>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device" type="asm_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.audio.MIMXRT595S" name="USB Device Audio" brief="Middleware usb device audio" version="2.11.0" full_name="USB Device Audio" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_audio.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_audio.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_audio.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.cdc.MIMXRT595S" name="USB Device CDC" brief="Middleware usb device cdc" version="2.11.0" full_name="USB Device CDC" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_cdc_acm.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_cdc_acm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_cdc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.cdc.ecm.MIMXRT595S" name="USB Device CDC ECM" brief="Middleware usb device cdc ecm" version="2.11.0" full_name="USB Device CDC ECM" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_cdc_ecm.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_cdc_ecm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_cdc_ecm.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.cdc.rndis.MIMXRT595S" name="USB Device CDC RNDIS" brief="Middleware usb device cdc rndis" version="2.11.0" full_name="USB Device CDC RNDIS" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.device.cdc.MIMXRT595S"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_cdc_rndis.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_cdc_rndis.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_cdc_rndis.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.hid.MIMXRT595S" name="USB Device HID" brief="Middleware usb device hid" version="2.11.0" full_name="USB Device HID" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_hid.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_hid.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_hid.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.dfu.MIMXRT595S" name="USB Device DFU" brief="Middleware usb device dfu" version="2.11.0" full_name="USB Device DFU" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_dfu.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_dfu.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_dfu.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.msd.MIMXRT595S" name="USB Device MSD" brief="Middleware usb device msd" version="2.11.0" full_name="USB Device MSD" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_msc.c"/>
        <files mask="usb_device_msc_ufi.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_msc.h"/>
        <files mask="usb_device_msc_ufi.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_msd.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.mtp.MIMXRT595S" name="USB Device MTP" brief="Middleware usb device mtp" version="2.11.0" full_name="USB Device MTP" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_mtp.c"/>
        <files mask="usb_device_mtp_operation.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_mtp.h"/>
        <files mask="usb_device_mtp_operation.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_mtp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.phdc.MIMXRT595S" name="USB Device PHDC" brief="Middleware usb device phdc" version="2.11.0" full_name="USB Device PHDC" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_phdc.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_phdc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_phdc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.video.MIMXRT595S" name="USB Device Video" brief="Middleware usb device video" version="2.11.0" full_name="USB Device Video" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_video.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_video.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_video.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.ccid.MIMXRT595S" name="USB Device CCID" brief="Middleware usb device ccid" version="2.11.0" full_name="USB Device CCID" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_ccid.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_ccid.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_ccid.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.device.printer.MIMXRT595S" name="USB Device Printer" brief="Middleware usb device printer" version="2.11.0" full_name="USB Device Printer" category="USB/USB Device" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.device.stack.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="device/class" type="src">
        <files mask="usb_device_printer.c"/>
      </source>
      <source relative_path="device/class" type="c_include">
        <files mask="usb_device_printer.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_device_printer.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="device/class" type="c_include"/>
        <include_path relative_path="device/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.phy.MIMXRT595S" name="USB PHY" brief="Middleware usb phy" version="2.11.0" full_name="USB PHY" category="USB/USB PHY" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="phy" type="src">
        <files mask="usb_phy.c"/>
      </source>
      <source relative_path="phy" type="c_include">
        <files mask="usb_phy.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_phy.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="phy" type="c_include"/>
        <include_path relative_path="phy" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.hsdcd.MIMXRT595S" name="USB HSDCD" brief="Middleware usb HSDCD (Select manually if needed)" version="2.11.0" full_name="USB HSDCD" category="USB/USB DCD" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="dcd" type="src">
        <files mask="usb_hsdcd.c"/>
      </source>
      <source relative_path="dcd" type="c_include">
        <files mask="usb_hsdcd.h"/>
        <files mask="usb_charger_detect.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_hsdcd.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="dcd" type="c_include"/>
        <include_path relative_path="dcd" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host.common_header.MIMXRT595S" name="USB Host Common Header" brief="Middleware usb host common_header" version="2.11.0" full_name="USB Host Common Header" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="host" type="c_include">
        <files mask="usb_host.h"/>
        <files mask="usb_host_hci.h"/>
        <files mask="usb_host_devices.h"/>
        <files mask="usb_host_framework.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_common_header.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host" type="c_include"/>
        <include_path relative_path="host" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_controller_ip3516hs.MIMXRT595S" name="USB Host IP3516HS Controller Driver(HS)" brief="Middleware usb host ip3516hs" version="2.11.0" full_name="USB Host IP3516HS Controller Driver(HS)" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="host" type="src">
        <files mask="usb_host_ip3516hs.c"/>
      </source>
      <source relative_path="host" type="c_include">
        <files mask="usb_host_ip3516hs.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_ip3516hs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host" type="c_include"/>
        <include_path relative_path="host" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host.stack.MIMXRT595S" name="USB Host Stack" brief="Middleware usb host stack" version="2.11.0" full_name="USB Host Stack" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="host" type="src">
        <files mask="usb_host_hci.c"/>
        <files mask="usb_host_devices.c"/>
        <files mask="usb_host_framework.c"/>
      </source>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_hub.c"/>
        <files mask="usb_host_hub_app.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_hub.h"/>
        <files mask="usb_host_hub_app.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_stack.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host" type="c_include"/>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host" type="asm_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_audio.MIMXRT595S" name="USB Host Audio" brief="Middleware usb host audio" version="2.11.0" full_name="USB Host Audio" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_audio.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_audio.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_audio.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_cdc.MIMXRT595S" name="USB Host CDC" brief="Middleware usb host cdc" version="2.11.0" full_name="USB Host CDC" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_cdc.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_cdc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_cdc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_cdc_ecm.MIMXRT595S" name="USB Host CDC ECM" brief="Middleware usb host cdc_ecm" version="2.11.0" full_name="USB Host CDC ECM" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.host_cdc.MIMXRT595S"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_cdc_ecm.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_cdc_ecm.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_cdc_ecm.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_cdc_rndis.MIMXRT595S" name="USB Host CDC RNDIS" brief="Middleware usb host cdc_rndis" version="2.11.0" full_name="USB Host CDC RNDIS" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.host_cdc.MIMXRT595S"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_cdc_rndis.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_cdc_rndis.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_cdc_rndis.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_hid.MIMXRT595S" name="USB Host HID" brief="Middleware usb host hid" version="2.11.0" full_name="USB Host HID" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_hid.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_hid.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_hid.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_msd.MIMXRT595S" name="USB Host MSD" brief="Middleware usb host msd" version="2.11.0" full_name="USB Host MSD" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_msd.c"/>
        <files mask="usb_host_msd_ufi.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_msd.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_msd.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_video.MIMXRT595S" name="USB Host Video" brief="Middleware usb host video" version="2.11.0" full_name="USB Host Video" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_video.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_video.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_video.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_phdc.MIMXRT595S" name="USB Host PHDC" brief="Middleware usb host phdc" version="2.11.0" full_name="USB Host PHDC" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_phdc.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_phdc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_phdc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.usb.host_printer.MIMXRT595S" name="USB Host Printer" brief="Middleware usb host printer" version="2.11.0" full_name="USB Host Printer" category="USB/USB Host" user_visible="true" type="middleware" package_base_path="middleware/usb" project_base_path="usb">
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.host.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="host/class" type="src">
        <files mask="usb_host_printer.c"/>
      </source>
      <source relative_path="host/class" type="c_include">
        <files mask="usb_host_printer.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_usb_host_printer.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/class" type="c_include"/>
        <include_path relative_path="host/class" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.tfm.usart.MIMXRT595S" name="TFM_USART" brief="TFM CMSIS USART driver" version="1.8" full_name="TFM CMSIS USART driver" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m" project_base_path="tf-m">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_usart.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="platform/ext/target/nxp/common/CMSIS_Driver" type="src">
        <files mask="Driver_USART.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_usart.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.tfm.s.platform.MIMXRT595S" name="TFM_S_Platform" brief="TFM Platform Service" version="1.8" full_name="Middleware tfm s platform" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m" project_base_path="tf-m">
      <defines>
        <define name="TFM_PARTITION_PLATFORM" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.tfm.s.platform.sp_common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="interface/src" type="src">
        <files mask="tfm_platform_api.c"/>
      </source>
      <source relative_path="secure_fw/partitions/platform/auto_generated" type="src">
        <files mask="intermedia_tfm_platform.c"/>
        <files mask="load_info_tfm_platform.c"/>
      </source>
      <source relative_path="secure_fw/partitions/platform" type="c_include">
        <files mask="platform_sp.h"/>
      </source>
      <source relative_path="secure_fw/partitions/platform/psa_manifest" type="c_include">
        <files mask="tfm_platform.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_s_platform.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="secure_fw/partitions/platform" type="c_include"/>
        <include_path relative_path="secure_fw/partitions/platform" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.tfm.s.initial_attestation.asymmetric.MIMXRT595S" name="TFM_S_Initial_Attestation_Asymmetric" brief="TFM Initial Attestation Service asymmetric" version="1.8" full_name="Middleware tfm s initial_attestation asymmetric" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m" project_base_path="tf-m">
      <defines>
        <define name="ATTEST_KEY_BITS" value="256"/>
        <define name="T_COSE_DISABLE_MAC0" value=""/>
        <define name="T_COSE_DISABLE_ES384" value=""/>
        <define name="T_COSE_DISABLE_ES512" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.tfm.s.initial_attestation.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="secure_fw/partitions/initial_attestation" type="src">
        <files mask="attest_asymmetric_key.c"/>
      </source>
      <source relative_path="platform/ext/common/template" type="src">
        <files mask="tfm_initial_attest_pub_key.c"/>
      </source>
      <source relative_path="lib/ext/t_cose/src" type="src">
        <files mask="t_cose_sign1_sign.c"/>
      </source>
      <source relative_path="lib/ext/t_cose/inc" type="c_include">
        <files mask="t_cose_sign1_sign.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_s_initial_attestation_asymmetric.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="lib/ext/t_cose/src" type="c_include"/>
        <include_path relative_path="lib/ext/t_cose/inc" type="c_include"/>
        <include_path relative_path="lib/ext/t_cose/src" type="asm_include"/>
        <include_path relative_path="lib/ext/t_cose/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.tfm.s.initial_attestation.symmetric.MIMXRT595S" name="TFM_S_Initial_Attestation_Asymmetric" brief="TFM Initial Attestation Service asymmetric" version="1.8" full_name="Middleware tfm s initial_attestation asymmetric" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m" project_base_path="tf-m">
      <defines>
        <define name="T_COSE_DISABLE_SIGN1" value=""/>
        <define name="T_COSE_DISABLE_ES384" value=""/>
        <define name="T_COSE_DISABLE_ES512" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.tfm.s.initial_attestation.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="secure_fw/partitions/initial_attestation" type="src">
        <files mask="attest_symmetric_key.c"/>
      </source>
      <source relative_path="lib/ext/t_cose/src" type="src">
        <files mask="t_cose_mac0_sign.c"/>
      </source>
      <source relative_path="lib/ext/t_cose/inc" type="c_include">
        <files mask="t_cose_mac0_sign.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_s_initial_attestation_symmetric.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="lib/ext/t_cose/src" type="c_include"/>
        <include_path relative_path="lib/ext/t_cose/inc" type="c_include"/>
        <include_path relative_path="lib/ext/t_cose/src" type="asm_include"/>
        <include_path relative_path="lib/ext/t_cose/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.tfm.s.initial_attestation.MIMXRT595S" name="TFM_S_Initial_Attestation" brief="TFM Initial Attestation Service" version="1.8" full_name="Middleware tfm s initial_attestation" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m" project_base_path="tf-m">
      <defines>
        <define name="TFM_PARTITION_INITIAL_ATTESTATION" value=""/>
        <define name="T_COSE_USE_PSA_CRYPTO" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.tfm.qcbor.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="interface/include" type="c_include">
        <files mask="tfm_attest_defs.h"/>
        <files mask="tfm_attest_iat_defs.h"/>
      </source>
      <source relative_path="interface/src" type="src">
        <files mask="tfm_attest_api.c"/>
      </source>
      <source relative_path="secure_fw/partitions/initial_attestation/auto_generated" type="src">
        <files mask="intermedia_tfm_initial_attestation.c"/>
        <files mask="load_info_tfm_initial_attestation.c"/>
      </source>
      <source relative_path="secure_fw/partitions/initial_attestation" type="c_include">
        <files mask="attest.h"/>
        <files mask="attest_boot_data.h"/>
        <files mask="attest_key.h"/>
        <files mask="attest_token.h"/>
      </source>
      <source relative_path="secure_fw/partitions/initial_attestation" type="src">
        <files mask="attest_boot_data.c"/>
        <files mask="attest_core.c"/>
        <files mask="attest_token_encode.c"/>
        <files mask="tfm_attest.c"/>
        <files mask="tfm_attest_req_mngr.c"/>
      </source>
      <source relative_path="secure_fw/partitions/initial_attestation/psa_manifest" type="c_include">
        <files mask="tfm_initial_attestation.h"/>
      </source>
      <source relative_path="lib/ext/t_cose/crypto_adapters" type="src">
        <files mask="t_cose_psa_crypto.c"/>
      </source>
      <source relative_path="lib/ext/t_cose/src" type="c_include">
        <files mask="t_cose_crypto.h"/>
        <files mask="t_cose_parameters.h"/>
        <files mask="t_cose_standard_constants.h"/>
        <files mask="t_cose_util.h"/>
      </source>
      <source relative_path="lib/ext/t_cose/src" type="src">
        <files mask="t_cose_parameters.c"/>
        <files mask="t_cose_util.c"/>
      </source>
      <source relative_path="lib/ext/t_cose/inc" type="c_include">
        <files mask="t_cose_common.h"/>
        <files mask="q_useful_buf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_s_initial_attestation.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="secure_fw/partitions/initial_attestation" type="c_include"/>
        <include_path relative_path="lib/ext/t_cose/src" type="c_include"/>
        <include_path relative_path="lib/ext/t_cose/inc" type="c_include"/>
        <include_path relative_path="secure_fw/partitions/initial_attestation" type="asm_include"/>
        <include_path relative_path="lib/ext/t_cose/src" type="asm_include"/>
        <include_path relative_path="lib/ext/t_cose/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.tfm.s.its.MIMXRT595S" name="TFM_S_Internal_Trusted_Storage" brief="TFM Internal Trusted Storage Service" version="1.8" full_name="Middleware tfm s its" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m" project_base_path="tf-m">
      <defines>
        <define name="TFM_PARTITION_INTERNAL_TRUSTED_STORAGE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.tfm.s.its.load_info_common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="interface/include" type="c_include">
        <files mask="tfm_its_defs.h"/>
      </source>
      <source relative_path="interface/src" type="src">
        <files mask="tfm_its_api.c"/>
      </source>
      <source relative_path="secure_fw/partitions/internal_trusted_storage/auto_generated" type="src">
        <files mask="intermedia_tfm_internal_trusted_storage.c"/>
      </source>
      <source relative_path="secure_fw/partitions/internal_trusted_storage" type="src">
        <files mask="its_utils.c"/>
        <files mask="tfm_internal_trusted_storage.c"/>
        <files mask="tfm_its_req_mngr.c"/>
      </source>
      <source relative_path="secure_fw/partitions/internal_trusted_storage" type="c_include">
        <files mask="its_utils.h"/>
        <files mask="tfm_internal_trusted_storage.h"/>
        <files mask="tfm_its_req_mngr.h"/>
      </source>
      <source relative_path="secure_fw/partitions/internal_trusted_storage/psa_manifest" type="c_include">
        <files mask="tfm_internal_trusted_storage.h"/>
      </source>
      <source relative_path="secure_fw/partitions/internal_trusted_storage/flash" type="src">
        <files mask="its_flash.c"/>
        <files mask="its_flash_nand.c"/>
        <files mask="its_flash_nor.c"/>
        <files mask="its_flash_ram.c"/>
      </source>
      <source relative_path="secure_fw/partitions/internal_trusted_storage/flash" type="c_include">
        <files mask="its_flash.h"/>
        <files mask="its_flash_nand.h"/>
        <files mask="its_flash_nor.h"/>
        <files mask="its_flash_ram.h"/>
      </source>
      <source relative_path="secure_fw/partitions/internal_trusted_storage/flash_fs" type="src">
        <files mask="its_flash_fs.c"/>
        <files mask="its_flash_fs_dblock.c"/>
        <files mask="its_flash_fs_mblock.c"/>
      </source>
      <source relative_path="secure_fw/partitions/internal_trusted_storage/flash_fs" type="c_include">
        <files mask="its_flash_fs.h"/>
        <files mask="its_flash_fs_dblock.h"/>
        <files mask="its_flash_fs_mblock.h"/>
      </source>
      <source relative_path="secure_fw/partitions/protected_storage" type="c_include">
        <files mask="ps_object_defs.h"/>
        <files mask="config_ps_check.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_s_its.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="interface/include" type="c_include"/>
        <include_path relative_path="secure_fw/partitions/internal_trusted_storage" type="c_include"/>
        <include_path relative_path="secure_fw/partitions/internal_trusted_storage/flash" type="c_include"/>
        <include_path relative_path="secure_fw/partitions/internal_trusted_storage/flash_fs" type="c_include"/>
        <include_path relative_path="secure_fw/partitions/protected_storage" type="c_include"/>
        <include_path relative_path="secure_fw/partitions/platform" type="c_include"/>
        <include_path relative_path="interface/include" type="asm_include"/>
        <include_path relative_path="secure_fw/partitions/internal_trusted_storage" type="asm_include"/>
        <include_path relative_path="secure_fw/partitions/internal_trusted_storage/flash" type="asm_include"/>
        <include_path relative_path="secure_fw/partitions/internal_trusted_storage/flash_fs" type="asm_include"/>
        <include_path relative_path="secure_fw/partitions/protected_storage" type="asm_include"/>
        <include_path relative_path="secure_fw/partitions/platform" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.tfm.ns.MIMXRT595S" name="TFM_NS" brief="TFM Non Secure" version="1.8" full_name="Middleware tfm ns" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m" project_base_path="tf-m">
      <defines>
        <define name="CONFIG_TFM_FLOAT_ABI" value="2"/>
        <define name="CONFIG_TFM_ENABLE_CP10CP11" value=""/>
        <define name="CONFIG_TFM_LAZY_STACKING" value=""/>
        <define name="__DOMAIN_NS" value="1"/>
        <define name="DOMAIN_NS" value="1"/>
        <define name="CONFIG_TFM_USE_TRUSTZONE" value=""/>
        <define name="ATTEST_TOKEN_PROFILE_PSA_IOT_1" value=""/>
        <define name="PLATFORM_DEFAULT_CRYPTO_KEYS" value=""/>
        <define name="PS_ENCRYPTION" value=""/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.tfm.ns.os_wrapper.baremetal.MIMXRT595S"/>
            <component_dependency value="middleware.tfm.ns.os_wrapper.rtos.MIMXRT595S"/>
          </any_of>
          <component_dependency value="middleware.tfm.ns.board.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="platform/include" type="c_include">
        <files mask="tfm_plat_crypto_keys.h"/>
        <files mask="tfm_hal_device_header.h"/>
        <files mask="tfm_plat_boot_seed.h"/>
        <files mask="tfm_plat_device_id.h"/>
        <files mask="tfm_plat_defs.h"/>
        <files mask="tfm_plat_ns.h"/>
        <files mask="region.h"/>
        <files mask="tfm_plat_test.h"/>
      </source>
      <source relative_path="platform/ext/common" type="c_include">
        <files mask="uart_stdout.h"/>
      </source>
      <source relative_path="platform/ext/common" type="src">
        <files mask="uart_stdout.c"/>
      </source>
      <source relative_path="platform/ext/driver" type="c_include">
        <files mask="Driver_USART.h"/>
        <files mask="Driver_Common.h"/>
      </source>
      <source relative_path="platform/ext/target/nxp/common" type="src">
        <files mask="libc_dummy.c"/>
      </source>
      <source relative_path="platform/ext/target/nxp/common/Device/Include" type="c_include">
        <files mask="cmsis.h"/>
        <files mask="device_definition.h"/>
        <files mask="platform_irq.h"/>
        <files mask="platform_regs.h"/>
      </source>
      <source relative_path="platform/ext/target/nxp/common/Device/Config" type="c_include">
        <files mask="device_cfg.h"/>
      </source>
      <source relative_path="interface/include/crypto_keys" type="c_include">
        <files mask="tfm_builtin_key_ids.h"/>
      </source>
      <source relative_path="interface/include/psa_manifest" type="c_include">
        <files mask="sid.h"/>
      </source>
      <source relative_path="interface/include" type="c_include">
        <files mask="tfm_attest_defs.h"/>
        <files mask="config_impl.h"/>
        <files mask="tfm_crypto_defs.h"/>
        <files mask="tfm_its_defs.h"/>
        <files mask="tfm_ps_defs.h"/>
        <files mask="tfm_api.h"/>
        <files mask="tfm_ns_interface.h"/>
        <files mask="tfm_psa_call_pack.h"/>
        <files mask="tfm_ns_client_ext.h"/>
        <files mask="tfm_platform_api.h"/>
      </source>
      <source relative_path="interface/include/os_wrapper" type="c_include">
        <files mask="common.h"/>
        <files mask="mutex.h"/>
      </source>
      <source relative_path="interface/include/psa" type="c_include">
        <files mask="client.h"/>
        <files mask="crypto_client_struct.h"/>
        <files mask="error.h"/>
        <files mask="framework_feature.h"/>
        <files mask="initial_attestation.h"/>
        <files mask="internal_trusted_storage.h"/>
        <files mask="lifecycle.h"/>
        <files mask="protected_storage.h"/>
        <files mask="service.h"/>
        <files mask="storage_common.h"/>
      </source>
      <source relative_path="interface/include/psa/tfm" type="c_include">
        <files mask="crypto.h"/>
        <files mask="crypto_compat.h"/>
        <files mask="crypto_extra.h"/>
        <files mask="crypto_platform.h"/>
        <files mask="crypto_sizes.h"/>
        <files mask="crypto_struct.h"/>
        <files mask="crypto_types.h"/>
        <files mask="crypto_values.h"/>
      </source>
      <source relative_path="secure_fw/spm/include" type="c_include">
        <files mask="tfm_arch.h"/>
        <files mask="tfm_arch_v8m.h"/>
        <files mask="utilities.h"/>
      </source>
      <source relative_path="secure_fw/include" type="c_include">
        <files mask="config_tfm.h"/>
      </source>
      <source relative_path="config" type="c_include">
        <files mask="config_base.h"/>
      </source>
      <source relative_path="secure_fw/partitions/crypto" type="c_include">
        <files mask="config_crypto_check.h"/>
      </source>
      <source relative_path="secure_fw/partitions/protected_storage" type="c_include">
        <files mask="config_ps_check.h"/>
      </source>
      <source relative_path="interface/src" type="src">
        <files mask="tfm_crypto_api.c"/>
        <files mask="tfm_attest_api.c"/>
        <files mask="tfm_its_api.c"/>
        <files mask="tfm_ps_api.c"/>
        <files mask="tfm_platform_api.c"/>
        <files mask="tfm_psa_ns_api.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_ns.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="platform/include" type="c_include"/>
        <include_path relative_path="platform/ext" type="c_include"/>
        <include_path relative_path="platform/ext/common" type="c_include"/>
        <include_path relative_path="platform/ext/driver" type="c_include"/>
        <include_path relative_path="platform/ext/target/nxp/common/Device/Config" type="c_include"/>
        <include_path relative_path="platform/ext/target/nxp/common/Device/Include" type="c_include"/>
        <include_path relative_path="interface/include" type="c_include"/>
        <include_path relative_path="interface/include/crypto_keys" type="c_include"/>
        <include_path relative_path="interface/include/psa" type="c_include"/>
        <include_path relative_path="interface/include/psa_manifest" type="c_include"/>
        <include_path relative_path="interface/include/os_wrapper" type="c_include"/>
        <include_path relative_path="secure_fw/spm/include" type="c_include"/>
        <include_path relative_path="secure_fw/include" type="c_include"/>
        <include_path relative_path="secure_fw/partitions/crypto" type="c_include"/>
        <include_path relative_path="secure_fw/partitions/initial_attestation" type="c_include"/>
        <include_path relative_path="secure_fw/partitions/internal_trusted_storage" type="c_include"/>
        <include_path relative_path="secure_fw/partitions/protected_storage" type="c_include"/>
        <include_path relative_path="secure_fw/partitions/platform" type="c_include"/>
        <include_path relative_path="config" type="c_include"/>
        <include_path relative_path="platform/include" type="asm_include"/>
        <include_path relative_path="platform/ext" type="asm_include"/>
        <include_path relative_path="platform/ext/common" type="asm_include"/>
        <include_path relative_path="platform/ext/driver" type="asm_include"/>
        <include_path relative_path="platform/ext/target/nxp/common/Device/Config" type="asm_include"/>
        <include_path relative_path="platform/ext/target/nxp/common/Device/Include" type="asm_include"/>
        <include_path relative_path="interface/include" type="asm_include"/>
        <include_path relative_path="interface/include/crypto_keys" type="asm_include"/>
        <include_path relative_path="interface/include/psa" type="asm_include"/>
        <include_path relative_path="interface/include/psa_manifest" type="asm_include"/>
        <include_path relative_path="interface/include/os_wrapper" type="asm_include"/>
        <include_path relative_path="secure_fw/spm/include" type="asm_include"/>
        <include_path relative_path="secure_fw/include" type="asm_include"/>
        <include_path relative_path="secure_fw/partitions/crypto" type="asm_include"/>
        <include_path relative_path="secure_fw/partitions/initial_attestation" type="asm_include"/>
        <include_path relative_path="secure_fw/partitions/internal_trusted_storage" type="asm_include"/>
        <include_path relative_path="secure_fw/partitions/protected_storage" type="asm_include"/>
        <include_path relative_path="secure_fw/partitions/platform" type="asm_include"/>
        <include_path relative_path="config" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.tfm.profile_large.ns_configs.MIMXRT595S" name="TFM_NS_Profile_Large" brief="TFM NS Large Profile" version="1.8" full_name="Middleware tfm ns large profile" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m" project_base_path="tf-m">
      <defines>
        <define name="TFM_LVL" value="2"/>
        <define name="PROJECT_CONFIG_HEADER_FILE" value="'&quot;config_profile_large.h&quot;'"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.tfm.ns.MIMXRT595S"/>
          <component_dependency value="middleware.tfm.profile_large.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="config/profile" type="c_include">
        <files mask="config_profile_large.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_profile_large_ns_configs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="config/profile" type="c_include"/>
        <include_path relative_path="config/profile" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.tfm.profile_medium.ns_configs.MIMXRT595S" name="TFM_NS_Profile_Medium" brief="TFM NS Medium Profile" version="1.8" full_name="Middleware tfm ns medium profile" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m" project_base_path="tf-m">
      <defines>
        <define name="TFM_LVL" value="2"/>
        <define name="PROJECT_CONFIG_HEADER_FILE" value="'&quot;config_profile_medium.h&quot;'"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.tfm.ns.MIMXRT595S"/>
          <component_dependency value="middleware.tfm.profile_medium.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="config/profile" type="c_include">
        <files mask="config_profile_medium.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_profile_medium_ns_configs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="config/profile" type="c_include"/>
        <include_path relative_path="config/profile" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.tfm.profile_small.ns_configs.MIMXRT595S" name="TFM_NS_Profile_Small" brief="TFM NS Small Profile" version="1.8" full_name="Middleware tfm ns small profile" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m" project_base_path="tf-m">
      <defines>
        <define name="TFM_LVL" value="1"/>
        <define name="PROJECT_CONFIG_HEADER_FILE" value="'&quot;config_profile_small.h&quot;'"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.tfm.ns.MIMXRT595S"/>
          <component_dependency value="middleware.tfm.profile_small.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="config/profile" type="c_include">
        <files mask="config_profile_small.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_profile_small_ns_configs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="config/profile" type="c_include"/>
        <include_path relative_path="config/profile" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.tfm.ns.mbedtls_compatibility.MIMXRT595S" name="TFM_NS_MbedTLS_Compatibility" brief="TFM NS mbedTLS compatibility header" version="1.8" full_name="TFM NS mbedTLS compatibility" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m" project_base_path="tf-m">
      <dependencies>
        <all>
          <not>
            <component_dependency value="middleware.tfmtests.ns.MIMXRT595S"/>
          </not>
          <component_dependency value="middleware.tfm.ns.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="interface/include/psa/tfm/psa" type="c_include">
        <files mask="crypto.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_ns_mbedtls_compatibility.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="interface/include/psa/tfm" type="c_include"/>
        <include_path relative_path="interface/include/psa/tfm" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.tfm.ns.os_wrapper.baremetal.MIMXRT595S" name="TFM NS OS wrapper bare metal" brief="TFM NS OS wrapper for bare metal" version="1.8" full_name="TFM NS OS wrapper bare metal" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m" project_base_path="tf-m">
      <dependencies>
        <all>
          <component_dependency value="middleware.tfm.ns.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="interface/src/os_wrapper" type="src">
        <files mask="tfm_ns_interface_bare_metal.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_ns_os_wrapper_baremetal.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.tfm.ns.os_wrapper.rtos.MIMXRT595S" name="TFM NS OS wrapper RTOS" brief="TFM NS OS wrapper for RTOS" version="1.8" full_name="TFM NS OS wrapper RTOS" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m" project_base_path="tf-m">
      <dependencies>
        <all>
          <component_dependency value="middleware.tfm.ns.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="interface/src/os_wrapper" type="src">
        <files mask="tfm_ns_interface_rtos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_ns_os_wrapper_rtos.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.tfmtests.ns.MIMXRT595S" name="TFMTESTS_NS" brief="TFM Tests Non Secure" version="1.8" full_name="Middleware tfm-tests ns" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m-tests" project_base_path="tf-m-tests">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_RTOS2_RTX.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="app" type="src">
        <files mask="os_wrapper_cmsis_rtos_v2.c"/>
        <files mask="main_ns.c"/>
        <files mask="test_app.c"/>
      </source>
      <source relative_path="app" type="c_include">
        <files mask="test_app.h"/>
        <files mask="tfm_log.h"/>
      </source>
      <source relative_path="log" type="src">
        <files mask="tfm_log_raw.c"/>
      </source>
      <source relative_path="log" type="c_include">
        <files mask="tfm_log_raw.h"/>
      </source>
      <source relative_path="ns_interface/os_wrapper" type="c_include">
        <files mask="delay.h"/>
        <files mask="msg_queue.h"/>
        <files mask="semaphore.h"/>
        <files mask="thread.h"/>
      </source>
      <source relative_path="ns_interface/ns_client_ext" type="c_include">
        <files mask="tfm_nsid_manager.h"/>
      </source>
      <source relative_path="ns_interface/ns_client_ext" type="src">
        <files mask="tz_shim_layer.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfmtests_ns.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="app" type="c_include"/>
        <include_path relative_path="log" type="c_include"/>
        <include_path relative_path="ns_interface" type="c_include"/>
        <include_path relative_path="ns_interface/ns_client_ext" type="c_include"/>
        <include_path relative_path="app" type="asm_include"/>
        <include_path relative_path="log" type="asm_include"/>
        <include_path relative_path="ns_interface" type="asm_include"/>
        <include_path relative_path="ns_interface/ns_client_ext" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.tfm.s.test.MIMXRT595S" name="TFM_S_Test" brief="TFM Test Secure Framework" version="1.8" full_name="Middleware tfm s test" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m-tests" project_base_path="tf-m-tests">
      <defines>
        <define name="TFM_S_REG_TEST" value=""/>
        <define name="USE_SP_LOG" value=""/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <all>
              <any_of>
                <component_dependency value="middleware.tfm.profile_large.MIMXRT595S"/>
                <component_dependency value="middleware.tfm.profile_medium.MIMXRT595S"/>
              </any_of>
              <component_dependency value="middleware.tfm.s.test.attestation.asymmetric.MIMXRT595S"/>
            </all>
            <all>
              <component_dependency value="middleware.tfm.profile_small.MIMXRT595S"/>
              <component_dependency value="middleware.tfm.s.test.attestation.symmetric.MIMXRT595S"/>
            </all>
          </any_of>
          <component_dependency value="middleware.tfm.s.test.crypto.MIMXRT595S"/>
          <component_dependency value="middleware.tfm.s.test.its.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="test/secure_fw" type="src">
        <files mask="secure_suites.c"/>
      </source>
      <source relative_path="test/framework" type="src">
        <files mask="test_framework.c"/>
        <files mask="test_framework_helpers.c"/>
        <files mask="test_framework_integ_test_helper.c"/>
      </source>
      <source relative_path="test/framework" type="c_include">
        <files mask="test_framework.h"/>
        <files mask="test_framework_error_codes.h"/>
        <files mask="test_framework_helpers.h"/>
        <files mask="test_framework_integ_test.h"/>
        <files mask="test_framework_integ_test_helper.h"/>
        <files mask="test_log.h"/>
      </source>
      <source relative_path="../tf-m/autogenerated/test/secure_fw/test_services/tfm_secure_client_service/auto_generated" type="src">
        <files mask="intermedia_tfm_secure_client_service.c"/>
        <files mask="load_info_tfm_secure_client_service.c"/>
      </source>
      <source relative_path="test/secure_fw/common_test_services/tfm_secure_client_service" type="src">
        <files mask="tfm_secure_client_service.c"/>
      </source>
      <source relative_path="test/secure_fw/common_test_services/tfm_secure_client_service" type="c_include">
        <files mask="tfm_secure_client_service.h"/>
      </source>
      <source relative_path="../tf-m/autogenerated/test/secure_fw/test_services/tfm_secure_client_service/psa_manifest" type="c_include">
        <files mask="tfm_secure_client_service.h"/>
      </source>
      <source relative_path="../tf-m/autogenerated/test/secure_fw/test_services/tfm_secure_client_2/auto_generated" type="src">
        <files mask="intermedia_tfm_secure_client_2.c"/>
        <files mask="load_info_tfm_secure_client_2.c"/>
      </source>
      <source relative_path="../tf-m/autogenerated/test/secure_fw/test_services/tfm_secure_client_2/psa_manifest" type="c_include">
        <files mask="tfm_secure_client_2.h"/>
      </source>
      <source relative_path="test/secure_fw/common_test_services/tfm_secure_client_2" type="src">
        <files mask="tfm_secure_client_2.c"/>
        <files mask="tfm_secure_client_2_api.c"/>
      </source>
      <source relative_path="test/secure_fw/common_test_services/tfm_secure_client_2" type="c_include">
        <files mask="tfm_secure_client_2_api.h"/>
      </source>
      <source relative_path="test/secure_fw/suites/spm/ipc/secure" type="c_include">
        <files mask="ipc_s_tests.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_s_test.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path=".." type="c_include"/>
        <include_path relative_path="test" type="c_include"/>
        <include_path relative_path="test/framework" type="c_include"/>
        <include_path relative_path="test/secure_fw/common_test_services/tfm_secure_client_service" type="c_include"/>
        <include_path relative_path="test/secure_fw/common_test_services/tfm_secure_client_2" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/spm/ipc/secure" type="c_include"/>
        <include_path relative_path="../tf-m/autogenerated/test/secure_fw/test_services/tfm_secure_client_service/psa_manifest" type="c_include"/>
        <include_path relative_path="../tf-m/autogenerated/test/secure_fw/test_services/tfm_secure_client_service" type="c_include"/>
        <include_path relative_path="../tf-m/autogenerated/test/secure_fw/test_services/tfm_secure_client_2/psa_manifest" type="c_include"/>
        <include_path relative_path="../tf-m/autogenerated/test/secure_fw/test_services/tfm_secure_client_2" type="c_include"/>
        <include_path relative_path=".." type="asm_include"/>
        <include_path relative_path="test" type="asm_include"/>
        <include_path relative_path="test/framework" type="asm_include"/>
        <include_path relative_path="test/secure_fw/common_test_services/tfm_secure_client_service" type="asm_include"/>
        <include_path relative_path="test/secure_fw/common_test_services/tfm_secure_client_2" type="asm_include"/>
        <include_path relative_path="test/secure_fw/suites/spm/ipc/secure" type="asm_include"/>
        <include_path relative_path="../tf-m/autogenerated/test/secure_fw/test_services/tfm_secure_client_service/psa_manifest" type="asm_include"/>
        <include_path relative_path="../tf-m/autogenerated/test/secure_fw/test_services/tfm_secure_client_service" type="asm_include"/>
        <include_path relative_path="../tf-m/autogenerated/test/secure_fw/test_services/tfm_secure_client_2/psa_manifest" type="asm_include"/>
        <include_path relative_path="../tf-m/autogenerated/test/secure_fw/test_services/tfm_secure_client_2" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.tfm.profile_large.MIMXRT595S" name="TFM_Test_Profile_Large" brief="TFM Framework profile large" version="1.8" full_name="Middleware tfm profile large" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m-tests" project_base_path="tf-m-tests">
      <dependencies>
        <all>
          <component_dependency value="middleware.tfm.ns.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_profile_large.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.tfm.profile_medium.MIMXRT595S" name="TFM_Test_Profile_Medium" brief="TFM Framework profile medium" version="1.8" full_name="Middleware tfm profile medium" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m-tests" project_base_path="tf-m-tests">
      <dependencies>
        <all>
          <component_dependency value="middleware.tfm.ns.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_profile_medium.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.tfm.profile_small.MIMXRT595S" name="TFM_Test_Profile_Small" brief="TFM Framework profile small" version="1.8" full_name="Middleware tfm profile small" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m-tests" project_base_path="tf-m-tests">
      <dependencies>
        <all>
          <component_dependency value="middleware.tfm.ns.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_profile_small.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.tfm.profile_large.s_test_configs.MIMXRT595S" name="TFM_S_Test_Profile_Large" brief="TFM Test Secure Framework profile large" version="1.8" full_name="Middleware tfm s test profile large" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m-tests" project_base_path="tf-m-tests">
      <defines>
        <define name="TFM_CRYPTO_TEST_ALG_CBC" value=""/>
        <define name="TFM_CRYPTO_TEST_ALG_CCM" value=""/>
        <define name="TFM_CRYPTO_TEST_ALG_GCM" value=""/>
        <define name="TFM_CRYPTO_TEST_ALG_SHA_512" value=""/>
        <define name="TFM_CRYPTO_TEST_HKDF" value=""/>
        <define name="TFM_CRYPTO_TEST_ECDH" value=""/>
        <define name="TFM_CRYPTO_TEST_UNSUPPORTED_ALG" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.tfm.profile_large.MIMXRT595S"/>
          <component_dependency value="middleware.tfm.s.test.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_profile_large_s_test_configs.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.tfm.profile_medium.s_test_configs.MIMXRT595S" name="TFM_S_Test_Profile_Medium" brief="TFM Test Secure Framework profile medium" version="1.8" full_name="Middleware tfm s test profile medium" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m-tests" project_base_path="tf-m-tests">
      <defines>
        <define name="TFM_CRYPTO_TEST_ALG_CCM" value=""/>
        <define name="TFM_CRYPTO_TEST_ECDH" value=""/>
        <define name="TFM_CRYPTO_TEST_UNSUPPORTED_ALG" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.tfm.profile_medium.MIMXRT595S"/>
          <component_dependency value="middleware.tfm.s.test.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_profile_medium_s_test_configs.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.tfm.profile_small.s_test_configs.MIMXRT595S" name="TFM_S_Test_Profile_Small" brief="TFM Test Secure Framework profile small" version="1.8" full_name="Middleware tfm s test profile small" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m-tests" project_base_path="tf-m-tests">
      <defines>
        <define name="TFM_CRYPTO_TEST_ALG_CCM" value=""/>
        <define name="TFM_CRYPTO_TEST_UNSUPPORTED_ALG" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.tfm.profile_small.MIMXRT595S"/>
          <component_dependency value="middleware.tfm.s.test.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_profile_small_s_test_configs.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.tfm.s.test.attestation.asymmetric.MIMXRT595S" name="TFM_S_Test_attestation_asymmetric" brief="TFM Test Attestation Secure Asymmetric" version="1.8" full_name="Middleware tfm s test attestation asymmetric" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m-tests" project_base_path="tf-m-tests">
      <dependencies>
        <all>
          <component_dependency value="middleware.tfm.s.test.attestation.MIMXRT595S"/>
          <component_dependency value="middleware.tfm.t_cose.sign1_verify.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="test/secure_fw/suites/attestation/secure" type="src">
        <files mask="attest_asymmetric_s_interface_testsuite.c"/>
      </source>
      <source relative_path="test/secure_fw/suites/attestation" type="src">
        <files mask="attest_token_decode_asymmetric.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_s_test_attestation_asymmetric.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.tfm.s.test.attestation.symmetric.MIMXRT595S" name="TFM_S_Test_attestation_symmetric" brief="TFM Test Attestation Secure Symmetric" version="1.8" full_name="Middleware tfm s test attestation symmetric" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m-tests" project_base_path="tf-m-tests">
      <dependencies>
        <all>
          <component_dependency value="middleware.tfm.s.test.attestation.MIMXRT595S"/>
          <component_dependency value="middleware.tfm.t_cose.mac0_verify.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="test/secure_fw/suites/attestation/secure" type="src">
        <files mask="attest_symmetric_s_interface_testsuite.c"/>
      </source>
      <source relative_path="test/secure_fw/suites/attestation" type="src">
        <files mask="attest_token_decode_symmetric.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_s_test_attestation_symmetric.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.tfm.s.test.irq_slih.MIMXRT595S" name="TFM_S_Test_IRQ_SLIH" brief="TFM Test IRQ Service" version="1.8" full_name="Middleware tfm s test irq_slih" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m-tests" project_base_path="tf-m-tests">
      <defines>
        <define name="TEST_NS_SLIH_IRQ" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.tfm.platform_test.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="test/secure_fw/suites/spm/common" type="c_include">
        <files mask="spm_test_defs.h"/>
      </source>
      <source relative_path="../tf-m/autogenerated/test/secure_fw/test_services/tfm_slih_test_service/auto_generated" type="src">
        <files mask="intermedia_tfm_slih_test_service.c"/>
        <files mask="load_info_tfm_slih_test_service.c"/>
      </source>
      <source relative_path="test/secure_fw/suites/spm/irq/service/tfm_slih_test_service" type="src">
        <files mask="tfm_slih_test_service.c"/>
      </source>
      <source relative_path="test/secure_fw/suites/spm/common/service" type="src">
        <files mask="tfm_irq_test_service.c"/>
      </source>
      <source relative_path="test/secure_fw/suites/spm/common/service" type="c_include">
        <files mask="tfm_irq_test_service.h"/>
      </source>
      <source relative_path="../tf-m/autogenerated/test/secure_fw/test_services/tfm_slih_test_service/psa_manifest" type="c_include">
        <files mask="tfm_slih_test_service.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_s_test_irq_slih.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="test/secure_fw/suites/spm/irq/service/tfm_slih_test_service" type="c_include"/>
        <include_path relative_path="../tf-m/autogenerated/test/secure_fw/test_services/tfm_slih_test_service" type="c_include"/>
        <include_path relative_path="../tf-m/autogenerated/test/secure_fw/test_services/tfm_slih_test_service/psa_manifest" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/spm/common" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/spm/common/service" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/spm/irq/service/tfm_slih_test_service" type="asm_include"/>
        <include_path relative_path="../tf-m/autogenerated/test/secure_fw/test_services/tfm_slih_test_service" type="asm_include"/>
        <include_path relative_path="../tf-m/autogenerated/test/secure_fw/test_services/tfm_slih_test_service/psa_manifest" type="asm_include"/>
        <include_path relative_path="test/secure_fw/suites/spm/common" type="asm_include"/>
        <include_path relative_path="test/secure_fw/suites/spm/common/service" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.tfm.s.test.irq_flih.MIMXRT595S" name="TFM_S_Test_IRQ_FLIH" brief="TFM Test IRQ Service" version="1.8" full_name="Middleware tfm s test irq_flih" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m-tests" project_base_path="tf-m-tests">
      <defines>
        <define name="TEST_NS_FLIH_IRQ" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.tfm.platform_test.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="test/secure_fw/suites/spm/common" type="c_include">
        <files mask="spm_test_defs.h"/>
      </source>
      <source relative_path="../tf-m/autogenerated/test/secure_fw/test_services/tfm_flih_test_service/auto_generated" type="src">
        <files mask="intermedia_tfm_flih_test_service.c"/>
        <files mask="load_info_tfm_flih_test_service.c"/>
      </source>
      <source relative_path="test/secure_fw/suites/spm/irq/service/tfm_flih_test_service" type="src">
        <files mask="tfm_flih_test_service.c"/>
      </source>
      <source relative_path="test/secure_fw/suites/spm/common/service" type="src">
        <files mask="tfm_irq_test_service.c"/>
      </source>
      <source relative_path="test/secure_fw/suites/spm/common/service" type="c_include">
        <files mask="tfm_irq_test_service.h"/>
      </source>
      <source relative_path="../tf-m/autogenerated/test/secure_fw/test_services/tfm_flih_test_service/psa_manifest" type="c_include">
        <files mask="tfm_flih_test_service.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_s_test_irq_flih.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="test/secure_fw/suites/spm/irq/service/tfm_flih_test_service" type="c_include"/>
        <include_path relative_path="../tf-m/autogenerated/test/secure_fw/test_services/tfm_flih_test_service" type="c_include"/>
        <include_path relative_path="../tf-m/autogenerated/test/secure_fw/test_services/tfm_flih_test_service/psa_manifest" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/spm/common" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/spm/common/service" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/spm/irq/service/tfm_flih_test_service" type="asm_include"/>
        <include_path relative_path="../tf-m/autogenerated/test/secure_fw/test_services/tfm_flih_test_service" type="asm_include"/>
        <include_path relative_path="../tf-m/autogenerated/test/secure_fw/test_services/tfm_flih_test_service/psa_manifest" type="asm_include"/>
        <include_path relative_path="test/secure_fw/suites/spm/common" type="asm_include"/>
        <include_path relative_path="test/secure_fw/suites/spm/common/service" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.tfm.ns.test.MIMXRT595S" name="TFM_NS_Test" brief="TFM Test Non Secure Framework" version="1.8" full_name="Middleware tfm ns test" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m-tests" project_base_path="tf-m-tests">
      <defines>
        <define name="TFM_NS_REG_TEST" value=""/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <all>
              <any_of>
                <component_dependency value="middleware.tfm.profile_large.MIMXRT595S"/>
                <component_dependency value="middleware.tfm.profile_medium.MIMXRT595S"/>
              </any_of>
              <component_dependency value="middleware.tfm.ns.test.attestation.asymmetric.MIMXRT595S"/>
            </all>
            <all>
              <component_dependency value="middleware.tfm.ns.test.attestation.symmetric.MIMXRT595S"/>
              <component_dependency value="middleware.tfm.profile_small.MIMXRT595S"/>
            </all>
          </any_of>
          <component_dependency value="middleware.tfm.ns.test.crypto.MIMXRT595S"/>
          <component_dependency value="middleware.tfm.ns.test.its.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="test/secure_fw" type="src">
        <files mask="non_secure_suites.c"/>
      </source>
      <source relative_path="test/framework" type="src">
        <files mask="test_framework.c"/>
        <files mask="test_framework_integ_test_helper.c"/>
        <files mask="test_framework_helpers.c"/>
      </source>
      <source relative_path="test/framework" type="c_include">
        <files mask="test_framework.h"/>
        <files mask="test_framework_error_codes.h"/>
        <files mask="test_framework_integ_test.h"/>
        <files mask="test_framework_integ_test_helper.h"/>
        <files mask="test_framework_helpers.h"/>
        <files mask="test_log.h"/>
      </source>
      <source relative_path="test/secure_fw/suites/spm/ipc/non_secure" type="c_include">
        <files mask="ipc_ns_tests.h"/>
      </source>
      <source relative_path="test/secure_fw/suites/t_cose/non_secure" type="c_include">
        <files mask="t_cose_ns_tests.h"/>
      </source>
      <source relative_path="test/secure_fw/suites/multi_core/non_secure" type="c_include">
        <files mask="multi_core_ns_test.h"/>
      </source>
      <source relative_path="test/secure_fw/suites/ps/non_secure" type="c_include">
        <files mask="ps_ns_tests.h"/>
      </source>
      <source relative_path="test/secure_fw/suites/qcbor/non_secure" type="c_include">
        <files mask="qcbor_ns_tests.h"/>
      </source>
      <source relative_path="test/secure_fw/suites/platform/non_secure" type="c_include">
        <files mask="platform_ns_tests.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_ns_test.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="test/framework" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/spm/ipc/non_secure" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/t_cose/non_secure" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/multi_core/non_secure" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/ps/non_secure" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/qcbor/non_secure" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/platform/non_secure" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="test/framework" type="asm_include"/>
        <include_path relative_path="test/secure_fw/suites/spm/ipc/non_secure" type="asm_include"/>
        <include_path relative_path="test/secure_fw/suites/t_cose/non_secure" type="asm_include"/>
        <include_path relative_path="test/secure_fw/suites/multi_core/non_secure" type="asm_include"/>
        <include_path relative_path="test/secure_fw/suites/ps/non_secure" type="asm_include"/>
        <include_path relative_path="test/secure_fw/suites/qcbor/non_secure" type="asm_include"/>
        <include_path relative_path="test/secure_fw/suites/platform/non_secure" type="asm_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.tfm.profile_large.ns_test_configs.MIMXRT595S" name="TFM_NS_Testp_Profile_Large" brief="TFM Test Non Secure Framework profile large" version="1.8" full_name="Middleware tfm ns test profile large" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m-tests" project_base_path="tf-m-tests">
      <defines>
        <define name="TFM_CRYPTO_TEST_ALG_CBC" value=""/>
        <define name="TFM_CRYPTO_TEST_ALG_CCM" value=""/>
        <define name="TFM_CRYPTO_TEST_ALG_GCM" value=""/>
        <define name="TFM_CRYPTO_TEST_ALG_SHA_512" value=""/>
        <define name="TFM_CRYPTO_TEST_HKDF" value=""/>
        <define name="TFM_CRYPTO_TEST_ECDH" value=""/>
        <define name="TFM_CRYPTO_TEST_UNSUPPORTED_ALG" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.tfm.ns.test.MIMXRT595S"/>
          <component_dependency value="middleware.tfm.profile_large.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_profile_large_ns_test_configs.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.tfm.profile_medium.ns_test_configs.MIMXRT595S" name="TFM_NS_Testp_Profile_Medium" brief="TFM Test Non Secure Framework profile medium" version="1.8" full_name="Middleware tfm ns test profile medium" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m-tests" project_base_path="tf-m-tests">
      <defines>
        <define name="TFM_CRYPTO_TEST_ALG_CCM" value=""/>
        <define name="TFM_CRYPTO_TEST_ECDH" value=""/>
        <define name="TFM_CRYPTO_TEST_UNSUPPORTED_ALG" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.tfm.ns.test.MIMXRT595S"/>
          <component_dependency value="middleware.tfm.profile_medium.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_profile_medium_ns_test_configs.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.tfm.profile_small.ns_test_configs.MIMXRT595S" name="TFM_NS_Testp_Profile_Small" brief="TFM Test Non Secure Framework profile small" version="1.8" full_name="Middleware tfm ns test profile small" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m-tests" project_base_path="tf-m-tests">
      <defines>
        <define name="TFM_CRYPTO_TEST_ALG_CCM" value=""/>
        <define name="TFM_CRYPTO_TEST_UNSUPPORTED_ALG" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.tfm.ns.test.MIMXRT595S"/>
          <component_dependency value="middleware.tfm.profile_small.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_profile_small_ns_test_configs.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.tfm.ns.test.attestation.asymmetric.MIMXRT595S" name="TFM_NS_Test_Attestation_Asymmetric" brief="TFM Test Attestation Non Secure asymmetric" version="1.8" full_name="Middleware tfm ns test attestation asymmetric" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m" project_base_path="tf-m">
      <dependencies>
        <all>
          <component_dependency value="middleware.tfm.ns.test.attestation.MIMXRT595S"/>
          <component_dependency value="middleware.tfm.t_cose.sign1_verify.MIMXRT595S"/>
          <component_dependency value="middleware.tfmtests.ns.test.attestation.asymmetric.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="platform/ext/common/template" type="src">
        <files mask="tfm_initial_attest_pub_key.c"/>
      </source>
      <source relative_path="lib/ext/t_cose/src" type="src">
        <files mask="t_cose_sign1_sign.c"/>
      </source>
      <source relative_path="lib/ext/t_cose/inc" type="c_include">
        <files mask="t_cose_sign1_sign.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_ns_test_attestation_asymmetric.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="lib/ext/t_cose/inc" type="c_include"/>
        <include_path relative_path="lib/ext/t_cose/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.tfm.ns.test.attestation.symmetric.MIMXRT595S" name="TFM_NS_Test_Attestation_Asymmetric" brief="TFM Test Attestation Non Secure asymmetric" version="1.8" full_name="Middleware tfm ns test attestation asymmetric" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m" project_base_path="tf-m">
      <defines>
        <define name="SYMMETRIC_INITIAL_ATTESTATION" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.tfm.ns.test.attestation.MIMXRT595S"/>
          <component_dependency value="middleware.tfm.t_cose.mac0_verify.MIMXRT595S"/>
          <component_dependency value="middleware.tfmtests.ns.test.attestation.symmetric.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="lib/ext/t_cose/src" type="src">
        <files mask="t_cose_mac0_sign.c"/>
      </source>
      <source relative_path="lib/ext/t_cose/inc" type="c_include">
        <files mask="t_cose_mac0_sign.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_ns_test_attestation_symmetric.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="lib/ext/t_cose/inc" type="c_include"/>
        <include_path relative_path="lib/ext/t_cose/inc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.tfm.ns.test.attestation.MIMXRT595S" name="TFM_NS_Test_Attestation" brief="TFM Test Attestation Non Secure" version="1.8" full_name="Middleware tfm ns test attestation" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m" project_base_path="tf-m">
      <defines>
        <define name="T_COSE_USE_PSA_CRYPTO" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.tfm.qcbor.MIMXRT595S"/>
          <component_dependency value="middleware.tfm.qcbor.test.MIMXRT595S"/>
          <component_dependency value="middleware.tfmtests.ns.test.attestation.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="interface/include" type="c_include">
        <files mask="tfm_attest_iat_defs.h"/>
      </source>
      <source relative_path="secure_fw/partitions/initial_attestation" type="c_include">
        <files mask="attest.h"/>
        <files mask="attest_token.h"/>
        <files mask="attest_key.h"/>
      </source>
      <source relative_path="secure_fw/spm/include/boot" type="c_include">
        <files mask="tfm_boot_status.h"/>
      </source>
      <source relative_path="lib/ext/t_cose/src" type="c_include">
        <files mask="t_cose_crypto.h"/>
        <files mask="t_cose_parameters.h"/>
        <files mask="t_cose_standard_constants.h"/>
        <files mask="t_cose_util.h"/>
      </source>
      <source relative_path="lib/ext/t_cose/crypto_adapters" type="src">
        <files mask="t_cose_psa_crypto.c"/>
      </source>
      <source relative_path="lib/ext/t_cose/src" type="src">
        <files mask="t_cose_parameters.c"/>
        <files mask="t_cose_sign1_sign.c"/>
        <files mask="t_cose_util.c"/>
      </source>
      <source relative_path="lib/ext/t_cose/inc" type="c_include">
        <files mask="t_cose_common.h"/>
        <files mask="q_useful_buf.h"/>
        <files mask="t_cose_sign1_sign.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_ns_test_attestation.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="interface/include" type="c_include"/>
        <include_path relative_path="secure_fw/partitions/initial_attestation" type="c_include"/>
        <include_path relative_path="secure_fw/spm/include" type="c_include"/>
        <include_path relative_path="secure_fw/spm/include/boot" type="c_include"/>
        <include_path relative_path="lib/ext/t_cose/src" type="c_include"/>
        <include_path relative_path="lib/ext/t_cose/inc" type="c_include"/>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="interface/include" type="asm_include"/>
        <include_path relative_path="secure_fw/partitions/initial_attestation" type="asm_include"/>
        <include_path relative_path="secure_fw/spm/include" type="asm_include"/>
        <include_path relative_path="secure_fw/spm/include/boot" type="asm_include"/>
        <include_path relative_path="lib/ext/t_cose/src" type="asm_include"/>
        <include_path relative_path="lib/ext/t_cose/inc" type="asm_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.tfmtests.ns.test.attestation.asymmetric.MIMXRT595S" name="TFMTESTS_NS_Test_Attestation_Asymmetric" brief="TFM Tests Attestation Non Secure asymmetric" version="1.8" full_name="Middleware tfm tests ns test attestation asymmetric" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m-tests" project_base_path="tf-m-tests">
      <dependencies>
        <all>
          <component_dependency value="middleware.tfmtests.ns.test.attestation.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="test/secure_fw/suites/attestation/non_secure" type="src">
        <files mask="attest_asymmetric_ns_interface_testsuite.c"/>
      </source>
      <source relative_path="test/secure_fw/suites/attestation" type="src">
        <files mask="attest_token_decode_asymmetric.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfmtests_ns_test_attestation_asymmetric.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.tfmtests.ns.test.attestation.symmetric.MIMXRT595S" name="TFMTESTS_NS_Test_Attestation_Symmetric" brief="TFM Tests Attestation Non Secure Symmetric" version="1.8" full_name="Middleware tfm tests ns test attestation symmetric" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m-tests" project_base_path="tf-m-tests">
      <dependencies>
        <all>
          <component_dependency value="middleware.tfmtests.ns.test.attestation.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="test/secure_fw/suites/attestation/non_secure" type="src">
        <files mask="attest_symmetric_ns_interface_testsuite.c"/>
      </source>
      <source relative_path="test/secure_fw/suites/attestation" type="src">
        <files mask="attest_token_decode_symmetric.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfmtests_ns_test_attestation_symmetric.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.tfm.ns.test.irq_slih.MIMXRT595S" name="TFM_NS_Test_IRQ_SLIH" brief="TFM Test IRQ SLIH Mode Non Secure" version="1.8" full_name="Middleware tfm ns test irq_slih" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m-tests" project_base_path="tf-m-tests">
      <defines>
        <define name="TEST_NS_SLIH_IRQ" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.tfm.platform_test.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="test/secure_fw/suites/spm/common" type="c_include">
        <files mask="spm_test_defs.h"/>
      </source>
      <source relative_path="test/secure_fw/suites/spm/common/service" type="c_include">
        <files mask="client_api_test_defs.h"/>
      </source>
      <source relative_path="test/secure_fw/suites/spm/common/suites" type="src">
        <files mask="irq_test.c"/>
      </source>
      <source relative_path="test/secure_fw/suites/spm/common/suites" type="c_include">
        <files mask="irq_test.h"/>
      </source>
      <source relative_path="test/secure_fw/suites/spm/irq" type="src">
        <files mask="irq_testsuite.c"/>
      </source>
      <source relative_path="test/secure_fw/suites/spm/irq" type="c_include">
        <files mask="irq_testsuite.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_ns_test_irq_slih.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="test/secure_fw/suites/spm/common/suites" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/spm/common/service" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/spm/irq" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/spm/common" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/spm/common/suites" type="asm_include"/>
        <include_path relative_path="test/secure_fw/suites/spm/common/service" type="asm_include"/>
        <include_path relative_path="test/secure_fw/suites/spm/irq" type="asm_include"/>
        <include_path relative_path="test/secure_fw/suites/spm/common" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.tfm.ns.test.irq_flih.MIMXRT595S" name="TFM_NS_Test_IRQ_FLIH" brief="TFM Test IRQ FLIH Mode Non Secure" version="1.8" full_name="Middleware tfm ns test irq_flih" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m-tests" project_base_path="tf-m-tests">
      <defines>
        <define name="TEST_NS_FLIH_IRQ" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.tfm.platform_test.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="test/secure_fw/suites/spm/common" type="c_include">
        <files mask="spm_test_defs.h"/>
      </source>
      <source relative_path="test/secure_fw/suites/spm/common/service" type="c_include">
        <files mask="client_api_test_defs.h"/>
      </source>
      <source relative_path="test/secure_fw/suites/spm/common/suites" type="src">
        <files mask="irq_test.c"/>
      </source>
      <source relative_path="test/secure_fw/suites/spm/common/suites" type="c_include">
        <files mask="irq_test.h"/>
      </source>
      <source relative_path="test/secure_fw/suites/spm/irq" type="src">
        <files mask="irq_testsuite.c"/>
      </source>
      <source relative_path="test/secure_fw/suites/spm/irq" type="c_include">
        <files mask="irq_testsuite.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_ns_test_irq_flih.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="test/secure_fw/suites/spm/common/suites" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/spm/common/service" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/spm/irq" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/spm/common" type="c_include"/>
        <include_path relative_path="test/secure_fw/suites/spm/common/suites" type="asm_include"/>
        <include_path relative_path="test/secure_fw/suites/spm/common/service" type="asm_include"/>
        <include_path relative_path="test/secure_fw/suites/spm/irq" type="asm_include"/>
        <include_path relative_path="test/secure_fw/suites/spm/common" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.tfm.ns.test.tcose.MIMXRT595S" name="TFM_NS_Test_t_cose" brief="TFM Test T_COSE Non Secure" version="1.8" full_name="Middleware tfm ns test tcose" category="Security/Trusted Firmware - M library" user_visible="false" type="other" package_base_path="middleware/tfm/tf-m" project_base_path="tf-m">
      <defines>
        <define name="TEST_NS_T_COSE" value=""/>
        <define name="T_COSE_DISABLE_ES384" value=""/>
        <define name="T_COSE_DISABLE_ES512" value=""/>
        <define name="T_COSE_DISABLE_SIGN_VERIFY_TESTS" value=""/>
        <define name="T_COSE_USE_PSA_CRYPTO_FROM_TFM" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.tfmtests.ns.test.tcose.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="lib/ext/t_cose/test" type="src">
        <files mask="t_cose_make_test_messages.c"/>
        <files mask="t_cose_make_psa_test_key.c"/>
        <files mask="t_cose_sign_verify_test.c"/>
        <files mask="t_cose_test.c"/>
        <files mask="run_tests.c"/>
      </source>
      <source relative_path="lib/ext/t_cose/test" type="c_include">
        <files mask="t_cose_make_test_messages.h"/>
        <files mask="t_cose_make_test_pub_key.h"/>
        <files mask="t_cose_sign_verify_test.h"/>
        <files mask="t_cose_test.h"/>
        <files mask="run_tests.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_ns_test_tcose.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="lib/ext/t_cose/test" type="c_include"/>
        <include_path relative_path="lib/ext/t_cose/test" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedcrypto.MIMXRT595S" name="mbedcrypto" brief="Mbed Crypto library" version="3.4.0" full_name="Middleware mbedcrypto" category="Security/Mbed Crypto library" user_visible="false" type="middleware" package_base_path="middleware/tfm/mbed-crypto" project_base_path="mbed-crypto">
      <dependencies>
        <all>
          <component_dependency value="middleware.mbedcrypto.port.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="include/mbedtls" type="c_include">
        <files mask="aes.h"/>
        <files mask="aria.h"/>
        <files mask="asn1.h"/>
        <files mask="asn1write.h"/>
        <files mask="base64.h"/>
        <files mask="bignum.h"/>
        <files mask="build_info.h"/>
        <files mask="camellia.h"/>
        <files mask="ccm.h"/>
        <files mask="chacha20.h"/>
        <files mask="chachapoly.h"/>
        <files mask="check_config.h"/>
        <files mask="cipher.h"/>
        <files mask="compat-2.x.h"/>
        <files mask="cmac.h"/>
        <files mask="config_psa.h"/>
        <files mask="constant_time.h"/>
        <files mask="ctr_drbg.h"/>
        <files mask="debug.h"/>
        <files mask="des.h"/>
        <files mask="dhm.h"/>
        <files mask="ecdh.h"/>
        <files mask="ecdsa.h"/>
        <files mask="ecjpake.h"/>
        <files mask="ecp.h"/>
        <files mask="entropy.h"/>
        <files mask="error.h"/>
        <files mask="gcm.h"/>
        <files mask="hkdf.h"/>
        <files mask="hmac_drbg.h"/>
        <files mask="legacy_or_psa.h"/>
        <files mask="lms.h"/>
        <files mask="md.h"/>
        <files mask="md5.h"/>
        <files mask="memory_buffer_alloc.h"/>
        <files mask="nist_kw.h"/>
        <files mask="oid.h"/>
        <files mask="pem.h"/>
        <files mask="pk.h"/>
        <files mask="pkcs5.h"/>
        <files mask="pkcs12.h"/>
        <files mask="platform.h"/>
        <files mask="platform_time.h"/>
        <files mask="platform_util.h"/>
        <files mask="poly1305.h"/>
        <files mask="private_access.h"/>
        <files mask="psa_util.h"/>
        <files mask="ripemd160.h"/>
        <files mask="rsa.h"/>
        <files mask="sha1.h"/>
        <files mask="sha256.h"/>
        <files mask="sha512.h"/>
        <files mask="threading.h"/>
        <files mask="timing.h"/>
        <files mask="version.h"/>
      </source>
      <source relative_path="include/psa" type="c_include">
        <files mask="crypto.h"/>
        <files mask="crypto_builtin_composites.h"/>
        <files mask="crypto_builtin_primitives.h"/>
        <files mask="crypto_compat.h"/>
        <files mask="crypto_config.h"/>
        <files mask="crypto_driver_common.h"/>
        <files mask="crypto_extra.h"/>
        <files mask="crypto_platform.h"/>
        <files mask="crypto_se_driver.h"/>
        <files mask="crypto_sizes.h"/>
        <files mask="crypto_struct.h"/>
        <files mask="crypto_types.h"/>
        <files mask="crypto_values.h"/>
        <files mask="crypto_driver_contexts_composites.h"/>
        <files mask="crypto_driver_contexts_primitives.h"/>
      </source>
      <source relative_path="library" type="src">
        <files mask="aes.c"/>
        <files mask="aesce.c"/>
        <files mask="aesni.c"/>
        <files mask="asn1parse.c"/>
        <files mask="asn1write.c"/>
        <files mask="base64.c"/>
        <files mask="bignum.c"/>
        <files mask="bignum_core.c"/>
        <files mask="bignum_mod.c"/>
        <files mask="bignum_mod_raw.c"/>
        <files mask="camellia.c"/>
        <files mask="ccm.c"/>
        <files mask="chacha20.c"/>
        <files mask="chachapoly.c"/>
        <files mask="cipher.c"/>
        <files mask="cipher_wrap.c"/>
        <files mask="cmac.c"/>
        <files mask="constant_time.c"/>
        <files mask="ctr_drbg.c"/>
        <files mask="debug.c"/>
        <files mask="des.c"/>
        <files mask="dhm.c"/>
        <files mask="ecdh.c"/>
        <files mask="ecdsa.c"/>
        <files mask="ecjpake.c"/>
        <files mask="ecp.c"/>
        <files mask="ecp_curves.c"/>
        <files mask="entropy.c"/>
        <files mask="entropy_poll.c"/>
        <files mask="error.c"/>
        <files mask="gcm.c"/>
        <files mask="hash_info.c"/>
        <files mask="hkdf.c"/>
        <files mask="hmac_drbg.c"/>
        <files mask="lmots.c"/>
        <files mask="lms.c"/>
        <files mask="md.c"/>
        <files mask="md5.c"/>
        <files mask="memory_buffer_alloc.c"/>
        <files mask="nist_kw.c"/>
        <files mask="oid.c"/>
        <files mask="padlock.c"/>
        <files mask="pem.c"/>
        <files mask="pk.c"/>
        <files mask="pk_wrap.c"/>
        <files mask="pkcs5.c"/>
        <files mask="pkcs12.c"/>
        <files mask="pkparse.c"/>
        <files mask="pkwrite.c"/>
        <files mask="platform.c"/>
        <files mask="platform_util.c"/>
        <files mask="poly1305.c"/>
        <files mask="psa_crypto.c"/>
        <files mask="psa_crypto_aead.c"/>
        <files mask="psa_crypto_cipher.c"/>
        <files mask="psa_crypto_client.c"/>
        <files mask="psa_crypto_driver_wrappers.c"/>
        <files mask="psa_crypto_ecp.c"/>
        <files mask="psa_crypto_hash.c"/>
        <files mask="psa_crypto_mac.c"/>
        <files mask="psa_crypto_pake.c"/>
        <files mask="psa_crypto_rsa.c"/>
        <files mask="psa_crypto_se.c"/>
        <files mask="psa_crypto_slot_management.c"/>
        <files mask="psa_crypto_storage.c"/>
        <files mask="psa_its_file.c"/>
        <files mask="psa_util.c"/>
        <files mask="ripemd160.c"/>
        <files mask="rsa.c"/>
        <files mask="rsa_alt_helpers.c"/>
        <files mask="sha1.c"/>
        <files mask="sha256.c"/>
        <files mask="sha512.c"/>
        <files mask="threading.c"/>
        <files mask="timing.c"/>
        <files mask="version.c"/>
        <files mask="version_features.c"/>
      </source>
      <source relative_path="library" type="c_include">
        <files mask="aesce.h"/>
        <files mask="aesni.h"/>
        <files mask="alignment.h"/>
        <files mask="bignum_core.h"/>
        <files mask="bignum_mod.h"/>
        <files mask="bignum_mod_raw.h"/>
        <files mask="bignum_mod_raw_invasive.h"/>
        <files mask="bn_mul.h"/>
        <files mask="check_crypto_config.h"/>
        <files mask="cipher_wrap.h"/>
        <files mask="common.h"/>
        <files mask="constant_time_internal.h"/>
        <files mask="constant_time_invasive.h"/>
        <files mask="ecp_internal_alt.h"/>
        <files mask="ecp_invasive.h"/>
        <files mask="entropy_poll.h"/>
        <files mask="hash_info.h"/>
        <files mask="lmots.h"/>
        <files mask="md_wrap.h"/>
        <files mask="padlock.h"/>
        <files mask="pk_wrap.h"/>
        <files mask="pkwrite.h"/>
        <files mask="psa_crypto_aead.h"/>
        <files mask="psa_crypto_cipher.h"/>
        <files mask="psa_crypto_core.h"/>
        <files mask="psa_crypto_driver_wrappers.h"/>
        <files mask="psa_crypto_ecp.h"/>
        <files mask="psa_crypto_hash.h"/>
        <files mask="psa_crypto_invasive.h"/>
        <files mask="psa_crypto_its.h"/>
        <files mask="psa_crypto_mac.h"/>
        <files mask="psa_crypto_random_impl.h"/>
        <files mask="psa_crypto_rsa.h"/>
        <files mask="psa_crypto_pake.h"/>
        <files mask="psa_crypto_se.h"/>
        <files mask="psa_crypto_slot_management.h"/>
        <files mask="psa_crypto_storage.h"/>
        <files mask="rsa_alt_helpers.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mbedcrypto.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include/mbedtls" type="c_include"/>
        <include_path relative_path="include/psa" type="c_include"/>
        <include_path relative_path="library" type="c_include"/>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include/mbedtls" type="asm_include"/>
        <include_path relative_path="include/psa" type="asm_include"/>
        <include_path relative_path="library" type="asm_include"/>
        <include_path relative_path="port" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedcrypto.port.MIMXRT595S" name="mbedcrypto_port" brief="Mbed Crypto library HW port" version="3.4.0" full_name="Middleware mbedcrypto port" category="Security/Mbed Crypto library" user_visible="false" type="middleware" package_base_path="middleware/tfm/mbed-crypto" project_base_path="mbed-crypto">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.casper.MIMXRT595S"/>
          <component_dependency value="platform.drivers.hashcrypt.MIMXRT595S"/>
          <component_dependency value="platform.drivers.trng.MIMXRT595S"/>
          <component_dependency value="middleware.mbedcrypto.port.config.MIMXRT595S"/>
          <component_dependency value="middleware.mbedcrypto.port.rng.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="port" type="c_include">
        <files mask="aes_alt.h"/>
        <files mask="mbedcrypto_mcux_config.h"/>
        <files mask="mbedtls_accelerator_config.h"/>
        <files mask="sha1_alt.h"/>
        <files mask="sha512_alt.h"/>
        <files mask="ecdh_alt.h"/>
      </source>
      <source relative_path="port" type="src">
        <files mask="mbedcrypto_mcux_casper.c"/>
        <files mask="mbedcrypto_mcux_els.c"/>
        <files mask="mbedcrypto_mcux_hashcrypt.c"/>
        <files mask="mbedcrypto_mcux_pkc.c"/>
        <files mask="mbedcrypto_mcux_sss.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mbedcrypto_port.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.psatest.ns.MIMXRT595S" name="PSATEST_NS" brief="PSA Test Suite Non Secure" version="1.4" full_name="Middleware psatest ns" category="Security/Arm PSA Test Suite" user_visible="false" type="other" package_base_path="middleware/tfm/psa-arch-tests/api-tests" project_base_path="api-tests">
      <dependencies>
        <all>
          <component_dependency value="middleware.psatest.ns.tgt_dev_apis_nxp.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="val" type="asm_include">
        <files mask="test_entry_list.inc"/>
        <files mask="test_entry_fn_declare_list.inc"/>
      </source>
      <source relative_path="val/nspe" type="c_include">
        <files mask="pal_interfaces_ns.h"/>
        <files mask="val_attestation.h"/>
        <files mask="val_crypto.h"/>
        <files mask="val_entry.h"/>
        <files mask="val_framework.h"/>
        <files mask="val_dispatcher.h"/>
        <files mask="val_interfaces.h"/>
        <files mask="val_peripherals.h"/>
        <files mask="val_platform.h"/>
        <files mask="val_storage.h"/>
      </source>
      <source relative_path="val/nspe" type="src">
        <files mask="val_attestation.c"/>
        <files mask="val_crypto.c"/>
        <files mask="val_entry.c"/>
        <files mask="val_framework.c"/>
        <files mask="val_dispatcher.c"/>
        <files mask="val_interfaces.c"/>
        <files mask="val_peripherals.c"/>
        <files mask="val_platform.c"/>
        <files mask="val_storage.c"/>
      </source>
      <source relative_path="val/common" type="c_include">
        <files mask="val.h"/>
        <files mask="val_client_defs.h"/>
        <files mask="val_target.h"/>
      </source>
      <source relative_path="val/common" type="src">
        <files mask="val_target.c"/>
      </source>
      <source relative_path="platform/drivers/nvmem" type="src">
        <files mask="pal_nvmem.c"/>
      </source>
      <source relative_path="platform/drivers/nvmem" type="c_include">
        <files mask="pal_nvmem.h"/>
      </source>
      <source relative_path="platform/targets/common/nspe/crypto" type="c_include">
        <files mask="pal_crypto_config_check.h"/>
      </source>
      <source relative_path="platform/targets/common/nspe" type="c_include">
        <files mask="pal_common.h"/>
      </source>
      <source relative_path="platform/targets/common/nspe" type="src">
        <files mask="pal_weak.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_psatest_ns.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="val/nspe" type="c_include"/>
        <include_path relative_path="val/common" type="c_include"/>
        <include_path relative_path="platform/drivers/nvmem" type="c_include"/>
        <include_path relative_path="platform/targets/common/nspe/crypto" type="c_include"/>
        <include_path relative_path="platform/targets/common/nspe" type="c_include"/>
        <include_path relative_path="val" type="c_include"/>
        <include_path relative_path="val/nspe" type="asm_include"/>
        <include_path relative_path="val/common" type="asm_include"/>
        <include_path relative_path="platform/drivers/nvmem" type="asm_include"/>
        <include_path relative_path="platform/targets/common/nspe/crypto" type="asm_include"/>
        <include_path relative_path="platform/targets/common/nspe" type="asm_include"/>
        <include_path relative_path="val" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.tfm.profile_large.ns_psatest_configs.MIMXRT595S" name="PSATEST_NS_PROFILE_LARGE" brief="PSA Test Suite Non Secure Large Profile" version="1.4" full_name="Middleware psatest ns large profile" category="Security/Arm PSA Test Suite" user_visible="false" type="other" package_base_path="middleware/tfm/psa-arch-tests/api-tests" project_base_path="api-tests">
      <defines>
        <define name="TF_M_PROFILE_LARGE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.psatest.ns.crypto.MIMXRT595S"/>
          <component_dependency value="middleware.tfm.profile_large.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_profile_large_ns_psatest_configs.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.tfm.profile_medium.ns_psatest_configs.MIMXRT595S" name="PSATEST_NS_PROFILE_MEDIUM" brief="PSA Test Suite Non Secure Medium Profile" version="1.4" full_name="Middleware psatest ns medium profile" category="Security/Arm PSA Test Suite" user_visible="false" type="other" package_base_path="middleware/tfm/psa-arch-tests/api-tests" project_base_path="api-tests">
      <defines>
        <define name="TF_M_PROFILE_MEDIUM" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.psatest.ns.crypto.MIMXRT595S"/>
          <component_dependency value="middleware.tfm.profile_medium.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_profile_medium_ns_psatest_configs.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.tfm.profile_small.ns_psatest_configs.MIMXRT595S" name="PSATEST_NS_PROFILE_SMALL" brief="PSA Test Suite Non Secure Small Profile" version="1.4" full_name="Middleware psatest ns small profile" category="Security/Arm PSA Test Suite" user_visible="false" type="other" package_base_path="middleware/tfm/psa-arch-tests/api-tests" project_base_path="api-tests">
      <defines>
        <define name="TF_M_PROFILE_SMALL" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.psatest.ns.crypto.MIMXRT595S"/>
          <component_dependency value="middleware.tfm.profile_small.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_tfm_profile_small_ns_psatest_configs.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.psatest.ns.initial_attestation.MIMXRT595S" name="PSATEST_NS_INITIAL_ATTESTATION_1" brief="PSA Test Suite Initial Attestation Non Secure part 1" version="1.4" full_name="Middleware psatest ns initial_attestation part 1" category="Security/Arm PSA Test Suite" user_visible="false" type="other" package_base_path="middleware/tfm/psa-arch-tests/api-tests" project_base_path="api-tests">
      <defines>
        <define name="INITIAL_ATTESTATION" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.psatest.ns.t_cose.MIMXRT595S"/>
          <component_dependency value="middleware.tfm.qcbor.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="platform/targets/common/nspe/initial_attestation" type="src">
        <files mask="pal_attestation_crypto.c"/>
        <files mask="pal_attestation_intf.c"/>
      </source>
      <source relative_path="platform/targets/common/nspe/initial_attestation" type="c_include">
        <files mask="pal_attestation_crypto.h"/>
        <files mask="pal_attestation_eat.h"/>
        <files mask="pal_attestation_intf.h"/>
      </source>
      <source relative_path="dev_apis/initial_attestation/test_a001" type="src">
        <files mask="test_a001.c"/>
        <files mask="test_entry_a001.c"/>
      </source>
      <source relative_path="dev_apis/initial_attestation/test_a001" type="c_include">
        <files mask="test_a001.h"/>
        <files mask="test_data.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_psatest_ns_initial_attestation.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="platform/targets/common/nspe/initial_attestation" type="c_include"/>
        <include_path relative_path="dev_apis/initial_attestation/test_a001" type="c_include"/>
        <include_path relative_path="platform/targets/common/nspe/initial_attestation" type="asm_include"/>
        <include_path relative_path="dev_apis/initial_attestation/test_a001" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.osa.freertos.MIMXRT595S" name="sdmmc_osa" brief="Middleware sdmmc osa" version="2.3.0" full_name="SDMMC osa stack" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="osa" type="c_include">
        <files mask="fsl_sdmmc_osa.h"/>
      </source>
      <source relative_path="osa" type="src">
        <files mask="fsl_sdmmc_osa.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_osa.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="osa" type="c_include"/>
        <include_path relative_path="osa" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.sd.MIMXRT595S" name="sd" brief="Middleware sdmmc sd" version="2.4.1" full_name="SDMMC sd stack" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <defines>
        <define name="SD_ENABLED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="sd" type="src">
        <files mask="fsl_sd.c"/>
      </source>
      <source relative_path="sd" type="c_include">
        <files mask="fsl_sd.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_sd.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="sd" type="c_include"/>
        <include_path relative_path="sd" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.mmc.MIMXRT595S" name="mmc" brief="Middleware sdmmc mmc" version="2.5.1" full_name="SDMMC mmc stack" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <defines>
        <define name="MMC_ENABLED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="mmc" type="src">
        <files mask="fsl_mmc.c"/>
      </source>
      <source relative_path="mmc" type="c_include">
        <files mask="fsl_mmc.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_mmc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="mmc" type="c_include"/>
        <include_path relative_path="mmc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.sdio.MIMXRT595S" name="sdio" brief="Middleware sdmmc sdio" version="2.4.1" full_name="SDMMC sdio stack" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <defines>
        <define name="SDIO_ENABLED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="sdio" type="src">
        <files mask="fsl_sdio.c"/>
      </source>
      <source relative_path="sdio" type="c_include">
        <files mask="fsl_sdio.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_sdio.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="sdio" type="c_include"/>
        <include_path relative_path="sdio" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.sdspi.MIMXRT595S" name="sdspi" brief="Middleware sdmmc sdspi" version="2.2.1" full_name="SDMMC sdspi stack" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <defines>
        <define name="SDSPI_ENABLED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="sdspi" type="src">
        <files mask="fsl_sdspi.c"/>
      </source>
      <source relative_path="sdspi" type="c_include">
        <files mask="fsl_sdspi.h"/>
      </source>
      <source relative_path="common" type="c_include">
        <files mask="fsl_sdmmc_spec.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_sdspi.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="sdspi" type="c_include"/>
        <include_path relative_path="common" type="c_include"/>
        <include_path relative_path="sdspi" type="asm_include"/>
        <include_path relative_path="common" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.host.usdhc.MIMXRT595S" name="sdmmc_host_usdhc" brief="Middleware sdmmc host usdhc" version="2.6.3" full_name="Middleware sdmmc host usdhc" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.sdmmc.host.usdhc.polling.MIMXRT595S"/>
            <component_dependency value="middleware.sdmmc.host.usdhc.non_blocking.MIMXRT595S"/>
          </any_of>
          <component_dependency value="platform.drivers.usdhc.MIMXRT595S"/>
          <component_dependency value="middleware.sdmmc.common.MIMXRT595S"/>
          <component_dependency value="middleware.sdmmc.osa.freertos.MIMXRT595S"/>
          <component_dependency value="middleware.sdmmc.usdhc.template.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="host/usdhc" type="c_include">
        <files mask="fsl_sdmmc_host.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_host_usdhc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/usdhc" type="c_include"/>
        <include_path relative_path="host/usdhc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.host.usdhc.non_blocking.MIMXRT595S" name="sdmmc_host_usdhc_non_blocking" brief="Middleware sdmmc host usdhc non_blocking" version="2.6.3" full_name="Middleware sdmmc host usdhc non_blocking" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.host.usdhc.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="host/usdhc/non_blocking" type="src">
        <files mask="fsl_sdmmc_host.c"/>
      </source>
      <source relative_path="host/usdhc" type="c_include">
        <files mask="fsl_sdmmc_host.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_host_usdhc_non_blocking.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/usdhc" type="c_include"/>
        <include_path relative_path="host/usdhc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.sdmmc.host.usdhc.polling.MIMXRT595S" name="sdmmc_host_usdhc_blocking" brief="Middleware sdmmc host usdhc blocking" version="2.6.3" full_name="Middleware sdmmc host usdhc blocking" category="Memories/SDMMC Stack" user_visible="true" type="middleware" package_base_path="middleware/sdmmc" project_base_path="sdmmc">
      <dependencies>
        <all>
          <component_dependency value="middleware.sdmmc.host.usdhc.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="host/usdhc/blocking" type="src">
        <files mask="fsl_sdmmc_host.c"/>
      </source>
      <source relative_path="host/usdhc" type="c_include">
        <files mask="fsl_sdmmc_host.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_sdmmc_host_usdhc_blocking.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="host/usdhc" type="c_include"/>
        <include_path relative_path="host/usdhc" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.bm.MIMXRT595S" name="rpmsg_lite" brief="RPMsg-Lite BM environment sources" version="5.1.2" full_name="RPMsg-Lite baremetal environment layer sources" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include/environment/bm" type="c_include">
        <files mask="rpmsg_env_specific.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite/porting/environment" type="src">
        <files mask="rpmsg_env_bm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_bm.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include/environment/bm" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include/environment/bm" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.freertos.MIMXRT595S" name="rpmsg_lite" brief="RPMsg-Lite FreeRTOS environment sources" version="5.1.2" full_name="RPMsg-Lite FreeRTOS environment layer sources" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include/environment/freertos" type="c_include">
        <files mask="rpmsg_env_specific.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite/porting/environment" type="src">
        <files mask="rpmsg_env_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_freertos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include/environment/freertos" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include/environment/freertos" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.xos.MIMXRT595S" name="rpmsg_lite xos" brief="RPMsg-Lite XOS environment layer sources" version="5.1.2" full_name="RPMsg-Lite XOS environment layer sources" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include/environment/xos" type="c_include">
        <files mask="rpmsg_env_specific.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite/porting/environment" type="src">
        <files mask="rpmsg_env_xos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_xos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include/environment/xos" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include/environment/xos" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.qnx.MIMXRT595S" name="rpmsg_lite qnx" brief="RPMsg-Lite QNX environment layer sources" version="5.1.2" full_name="RPMsg-Lite QNX environment layer sources" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include/environment/qnx" type="c_include">
        <files mask="rpmsg_env_specific.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite/porting/environment" type="src">
        <files mask="rpmsg_env_qnx.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_qnx.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include/environment/qnx" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include/environment/qnx" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.threadx.MIMXRT595S" name="rpmsg_lite threadx" brief="RPMsg-Lite ThreadX environment layer sources" version="5.1.2" full_name="RPMsg-Lite ThreadX environment layer sources" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include/environment/threadx" type="c_include">
        <files mask="rpmsg_env_specific.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite/porting/environment" type="src">
        <files mask="rpmsg_env_threadx.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_threadx.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include/environment/threadx" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include/environment/threadx" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.zephyr.MIMXRT595S" name="rpmsg_lite zephyr" brief="RPMsg-Lite Zephyr environment sources" version="5.1.2" full_name="RPMsg-Lite Zephyr environment layer sources" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include/environment/zephyr" type="c_include">
        <files mask="rpmsg_env_specific.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite/porting/environment" type="src">
        <files mask="rpmsg_env_zephyr.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_zephyr.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include/environment/zephyr" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include/environment/zephyr" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.MIMXRT595S" name="rpmsg_lite" brief="RPMsg-Lite" version="5.1.2" full_name="Remote Procedure Messaging Lite library" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.multicore.rpmsg-lite.bm.MIMXRT595S"/>
            <component_dependency value="middleware.multicore.rpmsg-lite.freertos.MIMXRT595S"/>
            <component_dependency value="middleware.multicore.rpmsg-lite.qnx.MIMXRT595S"/>
            <component_dependency value="middleware.multicore.rpmsg-lite.threadx.MIMXRT595S"/>
            <component_dependency value="middleware.multicore.rpmsg-lite.xos.MIMXRT595S"/>
            <component_dependency value="middleware.multicore.rpmsg-lite.zephyr.MIMXRT595S"/>
          </any_of>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include" type="c_include">
        <files mask="llist.h"/>
        <files mask="rpmsg_compiler.h"/>
        <files mask="rpmsg_default_config.h"/>
        <files mask="rpmsg_env.h"/>
        <files mask="rpmsg_lite.h"/>
        <files mask="virtio_ring.h"/>
        <files mask="virtqueue.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/common" type="src">
        <files mask="llist.c"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite" type="src">
        <files mask="rpmsg_lite.c"/>
      </source>
      <source relative_path="rpmsg-lite/lib/virtio" type="src">
        <files mask="virtqueue.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.ns.MIMXRT595S" name="rpmsg_lite" brief="RPMsg-Lite NS" version="5.1.2" full_name="Remote Procedure Messaging Lite NS library" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include" type="c_include">
        <files mask="rpmsg_ns.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite" type="src">
        <files mask="rpmsg_ns.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_ns.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.rpmsg-lite.queue.MIMXRT595S" name="rpmsg_lite" brief="RPMsg-Lite Queue" version="5.1.2" full_name="Remote Procedure Messaging Queue NS library" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include" type="c_include">
        <files mask="rpmsg_queue.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite" type="src">
        <files mask="rpmsg_queue.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_queue.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.multicore.rpmsg-lite.evkmimxrt595.MIMXRT595S" name="rpmsg_lite_evkmimxrt595" brief="RPMsg-Lite for evkmimxrt595 application" version="5.1.2" full_name="Remote Procedure Messaging Lite porting layer for evkmimxrt595 board" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
          <device_core_dependency value="cm33_MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include/platform/imxrt500_m33" type="c_include">
        <files mask="rpmsg_platform.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite/porting/platform/imxrt500_m33" type="src">
        <files mask="rpmsg_platform.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_evkmimxrt595.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include/platform/imxrt500_m33" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include/platform/imxrt500_m33" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.multicore.rpmsg-lite.evkmimxrt595_fusionf1.MIMXRT595S" name="rpmsg_lite_evkmimxrt595_fusionf1" brief="RPMsg-Lite for evkmimxrt595 fusionf1 application" version="5.1.2" full_name="Remote Procedure Messaging Lite porting layer for evkmimxrt595 fusionf1 board" category="Multicore/Inter-Core Messaging System" user_visible="false" type="middleware" package_base_path="middleware/multicore" project_base_path="rpmsg-lite">
      <dependencies>
        <all>
          <component_dependency value="middleware.multicore.rpmsg-lite.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
          <device_core_dependency value="fusionf1_MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="rpmsg-lite/lib/include/platform/imxrt500_fusionf1" type="c_include">
        <files mask="rpmsg_platform.h"/>
      </source>
      <source relative_path="rpmsg-lite/lib/rpmsg_lite/porting/platform/imxrt500_fusionf1" type="src">
        <files mask="rpmsg_platform.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_multicore_rpmsg-lite_evkmimxrt595_fusionf1.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="rpmsg-lite/lib/include/platform/imxrt500_fusionf1" type="c_include"/>
        <include_path relative_path="rpmsg-lite/lib/include/platform/imxrt500_fusionf1" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcuboot.bootutil.MIMXRT595S" name="mcuboot_bootutil" brief="mcuboot" version="2.0.0" full_name="MCUboot bootloader" category="File System/MCUboot bootloader" user_visible="false" type="middleware" package_base_path="middleware/mcuboot_opensource/boot/bootutil" project_base_path="bootutil">
      <dependencies>
        <all>
          <component_dependency value="middleware.mcuboot.nxp_bootutil_port.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="include/bootutil" type="c_include">
        <files mask="bench.h"/>
        <files mask="boot_hooks.h"/>
        <files mask="boot_public_hooks.h"/>
        <files mask="boot_record.h"/>
        <files mask="boot_status.h"/>
        <files mask="bootutil.h"/>
        <files mask="bootutil_log.h"/>
        <files mask="bootutil_public.h"/>
        <files mask="bootutil_test.h"/>
        <files mask="caps.h"/>
        <files mask="enc_key.h"/>
        <files mask="enc_key_public.h"/>
        <files mask="fault_injection_hardening.h"/>
        <files mask="fault_injection_hardening_delay_rng.h"/>
        <files mask="ignore.h"/>
        <files mask="image.h"/>
        <files mask="mcuboot_status.h"/>
        <files mask="ramload.h"/>
        <files mask="security_cnt.h"/>
        <files mask="sign_key.h"/>
      </source>
      <source relative_path="include/bootutil/crypto" type="c_include">
        <files mask="aes_ctr.h"/>
        <files mask="aes_kw.h"/>
        <files mask="common.h"/>
        <files mask="ecdh_p256.h"/>
        <files mask="ecdh_x25519.h"/>
        <files mask="ecdsa.h"/>
        <files mask="hmac_sha256.h"/>
        <files mask="rsa.h"/>
        <files mask="sha.h"/>
      </source>
      <source relative_path="src" type="src">
        <files mask="boot_record.c"/>
        <files mask="bootutil_misc.c"/>
        <files mask="bootutil_public.c"/>
        <files mask="caps.c"/>
        <files mask="encrypted.c"/>
        <files mask="fault_injection_hardening.c"/>
        <files mask="fault_injection_hardening_delay_rng_mbedtls.c"/>
        <files mask="image_ecdsa.c"/>
        <files mask="image_ed25519.c"/>
        <files mask="image_rsa.c"/>
        <files mask="image_validate.c"/>
        <files mask="loader.c"/>
        <files mask="swap_misc.c"/>
        <files mask="swap_move.c"/>
        <files mask="swap_scratch.c"/>
        <files mask="tlv.c"/>
      </source>
      <source relative_path="src" type="c_include">
        <files mask="bootutil_misc.h"/>
        <files mask="bootutil_priv.h"/>
        <files mask="swap_priv.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mcuboot_bootutil.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src" type="c_include"/>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="src" type="asm_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcuboot.bootutil.flashapi_rt.MIMXRT595S" name="mcuboot_bootutil.flashapi_rt" brief="MCUboot device flash porting layer" version="2.0.0" full_name="MCUboot device flash porting layer RT" category="File System/MCUboot bootloader" user_visible="false" type="middleware" package_base_path="middleware/mcuboot_opensource/boot/nxp_mcux_sdk/flashapi" project_base_path="bootutil/flashapi">
      <dependencies>
        <all>
          <not>
            <component_dependency value="middleware.mcuboot.bootutil.flashapi_mcx.MIMXRT595S"/>
          </not>
          <component_dependency value="middleware.mcuboot.bootutil.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="flash_api.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mcuboot_bootutil_flashapi_rt.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcuboot.bootutil.flashapi_mcx.MIMXRT595S" name="mcuboot_bootutil.flashapi_mcx" brief="MCUboot device flash porting layer" version="2.0.0" full_name="MCUboot device flash porting layer MCX" category="File System/MCUboot bootloader" user_visible="false" type="middleware" package_base_path="middleware/mcuboot_opensource/boot/nxp_mcux_sdk/flashapi" project_base_path="bootutil/flashapi">
      <dependencies>
        <all>
          <component_dependency value="middleware.mcuboot.bootutil.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="flash_api_mcxn10.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mcuboot_bootutil_flashapi_mcx.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mcuboot.tinycrypt.MIMXRT595S" name="mcuboot_tinycrypt" brief="TinyCrypt fork in MCUBoot repository" version="0.2.8" full_name="mcuboot_tinycrypt_fork" category="File System/MCUboot bootloader" user_visible="false" type="middleware" package_base_path="middleware/mcuboot_opensource/ext/tinycrypt/lib" project_base_path="tinycrypt">
      <dependencies>
        <all>
          <not>
            <component_dependency value="middleware.mbedtls.MIMXRT595S"/>
          </not>
          <component_dependency value="middleware.mcuboot.bootutil.MIMXRT595S"/>
          <component_dependency value="middleware.mcuboot.mbedtls-asn1.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="include/tinycrypt" type="c_include">
        <files mask="aes.h"/>
        <files mask="cbc_mode.h"/>
        <files mask="ccm_mode.h"/>
        <files mask="cmac_mode.h"/>
        <files mask="constants.h"/>
        <files mask="ctr_mode.h"/>
        <files mask="ctr_prng.h"/>
        <files mask="ecc.h"/>
        <files mask="ecc_dsa.h"/>
        <files mask="hmac.h"/>
        <files mask="hmac_prng.h"/>
        <files mask="sha256.h"/>
        <files mask="utils.h"/>
        <files mask="ecc_platform_specific.h"/>
      </source>
      <source relative_path="source" type="src">
        <files mask="aes_decrypt.c"/>
        <files mask="aes_encrypt.c"/>
        <files mask="cbc_mode.c"/>
        <files mask="ccm_mode.c"/>
        <files mask="cmac_mode.c"/>
        <files mask="ctr_mode.c"/>
        <files mask="ctr_prng.c"/>
        <files mask="ecc.c"/>
        <files mask="ecc_dsa.c"/>
        <files mask="hmac.c"/>
        <files mask="hmac_prng.c"/>
        <files mask="sha256.c"/>
        <files mask="utils.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mcuboot_tinycrypt.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls.port.ksdk.MIMXRT595S" name="mbedtls_ksdk" brief="mbedTLS port library for KPSDK" version="2.28.8" full_name="MbedTLS MCUX SDK port layer" category="Security/mbedTLS library" user_visible="true" type="middleware" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <defines>
        <define name="MBEDTLS_CONFIG_FILE" value="'&quot;ksdk_mbedtls_config.h&quot;'"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.casper.MIMXRT595S"/>
          <component_dependency value="platform.drivers.hashcrypt.MIMXRT595S"/>
          <component_dependency value="platform.drivers.trng.MIMXRT595S"/>
          <component_dependency value="middleware.mbedtls.MIMXRT595S"/>
          <component_dependency value="middleware.mbedtls.port.ksdk_option.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="port/ksdk" type="src">
        <files mask="ksdk_mbedtls.c"/>
        <files mask="des_alt.c"/>
        <files mask="aes_alt.c"/>
        <files mask="ecp_alt.c"/>
        <files mask="ecp_curves_alt.c"/>
        <files mask="ecp_alt_ksdk.c"/>
      </source>
      <source relative_path="port/ksdk" type="c_include">
        <files mask="ksdk_mbedtls.h"/>
        <files mask="ksdk_mbedtls_config.h"/>
        <files mask="sha1_alt.h"/>
        <files mask="sha256_alt.h"/>
        <files mask="des_alt.h"/>
        <files mask="aes_alt.h"/>
        <files mask="ccm_alt.h"/>
        <files mask="ecp_alt.h"/>
        <files mask="threading_alt.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mbedtls_port_ksdk.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/ksdk" type="c_include"/>
        <include_path relative_path="port/ksdk" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.mbedtls.MIMXRT595S" name="mbedtls" brief="mbedTLS library" version="2.28.8" full_name="MbedTLS open source SSL library" category="Security/mbedTLS library" user_visible="true" type="middleware" package_base_path="middleware/mbedtls" project_base_path="mbedtls">
      <dependencies>
        <all>
          <component_dependency value="middleware.mbedtls.port.ksdk.MIMXRT595S"/>
          <component_dependency value="middleware.mbedtls.port.ksdk_option.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="include/mbedtls" type="c_include">
        <files mask="aes.h"/>
        <files mask="aesni.h"/>
        <files mask="arc4.h"/>
        <files mask="aria.h"/>
        <files mask="asn1.h"/>
        <files mask="asn1write.h"/>
        <files mask="base64.h"/>
        <files mask="bignum.h"/>
        <files mask="blowfish.h"/>
        <files mask="bn_mul.h"/>
        <files mask="camellia.h"/>
        <files mask="ccm.h"/>
        <files mask="certs.h"/>
        <files mask="chacha20.h"/>
        <files mask="chachapoly.h"/>
        <files mask="check_config.h"/>
        <files mask="cipher.h"/>
        <files mask="cipher_internal.h"/>
        <files mask="cmac.h"/>
        <files mask="compat-1.3.h"/>
        <files mask="config.h"/>
        <files mask="config_psa.h"/>
        <files mask="constant_time.h"/>
        <files mask="ctr_drbg.h"/>
        <files mask="debug.h"/>
        <files mask="des.h"/>
        <files mask="dhm.h"/>
        <files mask="ecdh.h"/>
        <files mask="ecdsa.h"/>
        <files mask="ecjpake.h"/>
        <files mask="ecp.h"/>
        <files mask="ecp_internal.h"/>
        <files mask="entropy.h"/>
        <files mask="entropy_poll.h"/>
        <files mask="error.h"/>
        <files mask="gcm.h"/>
        <files mask="havege.h"/>
        <files mask="hkdf.h"/>
        <files mask="hmac_drbg.h"/>
        <files mask="md.h"/>
        <files mask="md_internal.h"/>
        <files mask="md2.h"/>
        <files mask="md4.h"/>
        <files mask="md5.h"/>
        <files mask="memory_buffer_alloc.h"/>
        <files mask="net.h"/>
        <files mask="net_sockets.h"/>
        <files mask="nist_kw.h"/>
        <files mask="oid.h"/>
        <files mask="padlock.h"/>
        <files mask="pem.h"/>
        <files mask="pk.h"/>
        <files mask="pk_internal.h"/>
        <files mask="pkcs5.h"/>
        <files mask="pkcs11.h"/>
        <files mask="pkcs12.h"/>
        <files mask="platform.h"/>
        <files mask="platform_time.h"/>
        <files mask="platform_util.h"/>
        <files mask="poly1305.h"/>
        <files mask="psa_util.h"/>
        <files mask="ripemd160.h"/>
        <files mask="rsa.h"/>
        <files mask="rsa_internal.h"/>
        <files mask="sha1.h"/>
        <files mask="sha256.h"/>
        <files mask="sha512.h"/>
        <files mask="ssl.h"/>
        <files mask="ssl_cache.h"/>
        <files mask="ssl_ciphersuites.h"/>
        <files mask="ssl_cookie.h"/>
        <files mask="ssl_internal.h"/>
        <files mask="ssl_ticket.h"/>
        <files mask="threading.h"/>
        <files mask="timing.h"/>
        <files mask="version.h"/>
        <files mask="x509.h"/>
        <files mask="x509_crl.h"/>
        <files mask="x509_crt.h"/>
        <files mask="x509_csr.h"/>
        <files mask="xtea.h"/>
      </source>
      <source relative_path="include/psa" type="c_include">
        <files mask="crypto.h"/>
        <files mask="crypto_builtin_composites.h"/>
        <files mask="crypto_builtin_primitives.h"/>
        <files mask="crypto_compat.h"/>
        <files mask="crypto_config.h"/>
        <files mask="crypto_driver_common.h"/>
        <files mask="crypto_driver_contexts_composites.h"/>
        <files mask="crypto_driver_contexts_primitives.h"/>
        <files mask="crypto_extra.h"/>
        <files mask="crypto_platform.h"/>
        <files mask="crypto_se_driver.h"/>
        <files mask="crypto_sizes.h"/>
        <files mask="crypto_struct.h"/>
        <files mask="crypto_types.h"/>
        <files mask="crypto_values.h"/>
      </source>
      <source relative_path="library" type="src">
        <files mask="aes.c"/>
        <files mask="aesni.c"/>
        <files mask="arc4.c"/>
        <files mask="aria.c"/>
        <files mask="asn1parse.c"/>
        <files mask="asn1write.c"/>
        <files mask="base64.c"/>
        <files mask="bignum.c"/>
        <files mask="blowfish.c"/>
        <files mask="camellia.c"/>
        <files mask="ccm.c"/>
        <files mask="certs.c"/>
        <files mask="chacha20.c"/>
        <files mask="chachapoly.c"/>
        <files mask="cipher.c"/>
        <files mask="cipher_wrap.c"/>
        <files mask="cmac.c"/>
        <files mask="constant_time.c"/>
        <files mask="ctr_drbg.c"/>
        <files mask="debug.c"/>
        <files mask="des.c"/>
        <files mask="dhm.c"/>
        <files mask="ecdh.c"/>
        <files mask="ecdsa.c"/>
        <files mask="ecjpake.c"/>
        <files mask="ecp.c"/>
        <files mask="ecp_curves.c"/>
        <files mask="entropy.c"/>
        <files mask="entropy_poll.c"/>
        <files mask="error.c"/>
        <files mask="gcm.c"/>
        <files mask="havege.c"/>
        <files mask="hkdf.c"/>
        <files mask="hmac_drbg.c"/>
        <files mask="md.c"/>
        <files mask="md2.c"/>
        <files mask="md4.c"/>
        <files mask="md5.c"/>
        <files mask="memory_buffer_alloc.c"/>
        <files mask="mps_reader.c"/>
        <files mask="mps_trace.c"/>
        <files mask="net_sockets.c"/>
        <files mask="nist_kw.c"/>
        <files mask="oid.c"/>
        <files mask="padlock.c"/>
        <files mask="pem.c"/>
        <files mask="pk.c"/>
        <files mask="pk_wrap.c"/>
        <files mask="pkcs5.c"/>
        <files mask="pkcs11.c"/>
        <files mask="pkcs12.c"/>
        <files mask="pkparse.c"/>
        <files mask="pkwrite.c"/>
        <files mask="platform.c"/>
        <files mask="platform_util.c"/>
        <files mask="poly1305.c"/>
        <files mask="psa_crypto.c"/>
        <files mask="psa_crypto_aead.c"/>
        <files mask="psa_crypto_cipher.c"/>
        <files mask="psa_crypto_client.c"/>
        <files mask="psa_crypto_driver_wrappers.c"/>
        <files mask="psa_crypto_ecp.c"/>
        <files mask="psa_crypto_hash.c"/>
        <files mask="psa_crypto_mac.c"/>
        <files mask="psa_crypto_rsa.c"/>
        <files mask="psa_crypto_se.c"/>
        <files mask="psa_crypto_slot_management.c"/>
        <files mask="psa_crypto_storage.c"/>
        <files mask="psa_its_file.c"/>
        <files mask="ripemd160.c"/>
        <files mask="rsa.c"/>
        <files mask="rsa_internal.c"/>
        <files mask="sha1.c"/>
        <files mask="sha256.c"/>
        <files mask="sha512.c"/>
        <files mask="ssl_cache.c"/>
        <files mask="ssl_ciphersuites.c"/>
        <files mask="ssl_cli.c"/>
        <files mask="ssl_cookie.c"/>
        <files mask="ssl_msg.c"/>
        <files mask="ssl_srv.c"/>
        <files mask="ssl_ticket.c"/>
        <files mask="ssl_tls.c"/>
        <files mask="ssl_tls13_keys.c"/>
        <files mask="threading.c"/>
        <files mask="timing.c"/>
        <files mask="version.c"/>
        <files mask="version_features.c"/>
        <files mask="x509.c"/>
        <files mask="x509_create.c"/>
        <files mask="x509_crl.c"/>
        <files mask="x509_crt.c"/>
        <files mask="x509_csr.c"/>
        <files mask="x509write_crt.c"/>
        <files mask="x509write_csr.c"/>
        <files mask="xtea.c"/>
      </source>
      <source relative_path="library" type="c_include">
        <files mask="bignum_internal.h"/>
        <files mask="check_crypto_config.h"/>
        <files mask="common.h"/>
        <files mask="constant_time_internal.h"/>
        <files mask="constant_time_invasive.h"/>
        <files mask="ecp_invasive.h"/>
        <files mask="mps_common.h"/>
        <files mask="mps_error.h"/>
        <files mask="mps_reader.h"/>
        <files mask="mps_trace.h"/>
        <files mask="psa_crypto_aead.h"/>
        <files mask="psa_crypto_cipher.h"/>
        <files mask="psa_crypto_core.h"/>
        <files mask="psa_crypto_driver_wrappers.h"/>
        <files mask="psa_crypto_ecp.h"/>
        <files mask="psa_crypto_hash.h"/>
        <files mask="psa_crypto_invasive.h"/>
        <files mask="psa_crypto_its.h"/>
        <files mask="psa_crypto_mac.h"/>
        <files mask="psa_crypto_random_impl.h"/>
        <files mask="psa_crypto_rsa.h"/>
        <files mask="psa_crypto_se.h"/>
        <files mask="psa_crypto_slot_management.h"/>
        <files mask="psa_crypto_storage.h"/>
        <files mask="ssl_tls13_keys.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_mbedtls.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="library" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
        <include_path relative_path="library" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.MIMXRT595S" name="lwIP" brief="lwIP - A Lightweight TCP/IP Stack" version="2.2.1" revision="2" full_name="lwIP" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <any_of>
            <all>
              <not>
                <component_dependency value="middleware.lwip.sys_arch.static.MIMXRT595S"/>
              </not>
              <component_dependency value="middleware.lwip.sys_arch.dynamic.MIMXRT595S"/>
            </all>
            <all>
              <not>
                <component_dependency value="middleware.lwip.sys_arch.dynamic.MIMXRT595S"/>
              </not>
              <not>
                <component_dependency value="middleware.lwip.eoe_ethernetif.MIMXRT595S"/>
              </not>
              <component_dependency value="middleware.lwip.sys_arch.static.MIMXRT595S"/>
            </all>
          </any_of>
          <any_of>
            <component_dependency value="middleware.lwip.empty_ethernetif.MIMXRT595S"/>
            <component_dependency value="middleware.lwip.eoe_ethernetif.MIMXRT595S"/>
            <component_dependency value="middleware.wifi.MIMXRT595S"/>
          </any_of>
          <component_dependency value="middleware.lwip.template.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="BUILDING" hidden="true"/>
        <files mask="CHANGELOG" hidden="true"/>
        <files mask="ChangeLogKSDK.txt" hidden="true"/>
        <files mask="COPYING" hidden="true"/>
        <files mask="FEATURES" hidden="true"/>
        <files mask="README" hidden="true"/>
        <files mask="UPGRADING" hidden="true"/>
      </source>
      <source exclude="true" relative_path="./" type="other">
        <files mask="CMakeLists_upstream.txt" hidden="true"/>
        <files mask="codespell_changed_files.sh" hidden="true"/>
        <files mask="codespell_check.sh" hidden="true"/>
        <files mask="FILES" hidden="true"/>
      </source>
      <source exclude="true" relative_path="port" type="doc">
        <files mask="README.md" hidden="true"/>
      </source>
      <source exclude="true" relative_path="doc" type="doc">
        <files mask="FILES" hidden="true"/>
        <files mask="NO_SYS_SampleCode.c" hidden="true"/>
        <files mask="ZeroCopyRx.c" hidden="true"/>
        <files mask="contrib.txt" hidden="true"/>
        <files mask="mdns.txt" hidden="true"/>
        <files mask="mqtt_client.txt" hidden="true"/>
        <files mask="ppp.txt" hidden="true"/>
        <files mask="savannah.txt" hidden="true"/>
      </source>
      <source exclude="true" relative_path="doc/doxygen" type="doc">
        <files mask="generate.bat" hidden="true"/>
        <files mask="generate.sh" hidden="true"/>
        <files mask="lwip.Doxyfile" hidden="true"/>
        <files mask="lwip.Doxyfile.cmake.in" hidden="true"/>
        <files mask="main_page.h" hidden="true"/>
      </source>
      <source exclude="true" relative_path="doc/doxygen/output" type="doc">
        <files mask="index.html" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src" type="other">
        <files mask="FILES" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/netif" type="other">
        <files mask="FILES" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/netif/ppp" type="doc">
        <files mask="PPPD_FOLLOWUP" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/netif/ppp/polarssl" type="src_c">
        <files mask="arc4.c" hidden="true"/>
        <files mask="des.c" hidden="true"/>
        <files mask="md4.c" hidden="true"/>
        <files mask="md5.c" hidden="true"/>
        <files mask="sha1.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/netif/ppp/polarssl" type="doc">
        <files mask="README" hidden="true"/>
      </source>
      <source relative_path="port/arch" type="c_include">
        <files mask="cc.h"/>
        <files mask="perf.h"/>
      </source>
      <source relative_path="src/api" type="src">
        <files mask="api_lib.c"/>
        <files mask="api_msg.c"/>
        <files mask="err.c"/>
        <files mask="if_api.c"/>
        <files mask="netbuf.c"/>
        <files mask="netdb.c"/>
        <files mask="netifapi.c"/>
        <files mask="sockets.c"/>
        <files mask="tcpip.c"/>
      </source>
      <source relative_path="src/core" type="src">
        <files mask="altcp.c"/>
        <files mask="altcp_alloc.c"/>
        <files mask="altcp_tcp.c"/>
        <files mask="def.c"/>
        <files mask="dns.c"/>
        <files mask="inet_chksum.c"/>
        <files mask="init.c"/>
        <files mask="ip.c"/>
        <files mask="mem.c"/>
        <files mask="memp.c"/>
        <files mask="netif.c"/>
        <files mask="pbuf.c"/>
        <files mask="raw.c"/>
        <files mask="stats.c"/>
        <files mask="sys.c"/>
        <files mask="tcp.c"/>
        <files mask="tcp_in.c"/>
        <files mask="tcp_out.c"/>
        <files mask="timeouts.c"/>
        <files mask="udp.c"/>
      </source>
      <source relative_path="src/core/ipv4" type="src">
        <files mask="acd.c"/>
        <files mask="autoip.c"/>
        <files mask="dhcp.c"/>
        <files mask="etharp.c"/>
        <files mask="icmp.c"/>
        <files mask="igmp.c"/>
        <files mask="ip4.c"/>
        <files mask="ip4_addr.c"/>
        <files mask="ip4_frag.c"/>
      </source>
      <source relative_path="src/core/ipv6" type="src">
        <files mask="dhcp6.c"/>
        <files mask="ethip6.c"/>
        <files mask="icmp6.c"/>
        <files mask="inet6.c"/>
        <files mask="ip6.c"/>
        <files mask="ip6_addr.c"/>
        <files mask="ip6_frag.c"/>
        <files mask="mld6.c"/>
        <files mask="nd6.c"/>
      </source>
      <source relative_path="src/include/compat/posix" type="c_include">
        <files mask="netdb.h"/>
      </source>
      <source relative_path="src/include/compat/posix/arpa" type="c_include">
        <files mask="inet.h"/>
      </source>
      <source relative_path="src/include/compat/posix/net" type="c_include">
        <files mask="if.h"/>
      </source>
      <source relative_path="src/include/compat/posix/sys" type="c_include">
        <files mask="socket.h"/>
      </source>
      <source relative_path="src/include/compat/stdc" type="c_include">
        <files mask="errno.h"/>
      </source>
      <source relative_path="src/include/lwip" type="c_include">
        <files mask="acd.h"/>
        <files mask="altcp.h"/>
        <files mask="altcp_tcp.h"/>
        <files mask="altcp_tls.h"/>
        <files mask="api.h"/>
        <files mask="arch.h"/>
        <files mask="autoip.h"/>
        <files mask="debug.h"/>
        <files mask="def.h"/>
        <files mask="dhcp.h"/>
        <files mask="dhcp6.h"/>
        <files mask="dns.h"/>
        <files mask="err.h"/>
        <files mask="errno.h"/>
        <files mask="etharp.h"/>
        <files mask="ethip6.h"/>
        <files mask="icmp.h"/>
        <files mask="icmp6.h"/>
        <files mask="if_api.h"/>
        <files mask="igmp.h"/>
        <files mask="inet.h"/>
        <files mask="inet_chksum.h"/>
        <files mask="init.h"/>
        <files mask="ip.h"/>
        <files mask="ip4.h"/>
        <files mask="ip4_addr.h"/>
        <files mask="ip4_frag.h"/>
        <files mask="ip6.h"/>
        <files mask="ip6_addr.h"/>
        <files mask="ip6_frag.h"/>
        <files mask="ip6_zone.h"/>
        <files mask="ip_addr.h"/>
        <files mask="mem.h"/>
        <files mask="memp.h"/>
        <files mask="mld6.h"/>
        <files mask="nd6.h"/>
        <files mask="netbuf.h"/>
        <files mask="netdb.h"/>
        <files mask="netif.h"/>
        <files mask="netifapi.h"/>
        <files mask="opt.h"/>
        <files mask="pbuf.h"/>
        <files mask="raw.h"/>
        <files mask="sio.h"/>
        <files mask="snmp.h"/>
        <files mask="sockets.h"/>
        <files mask="stats.h"/>
        <files mask="sys.h"/>
        <files mask="tcp.h"/>
        <files mask="tcpbase.h"/>
        <files mask="tcpip.h"/>
        <files mask="timeouts.h"/>
        <files mask="udp.h"/>
      </source>
      <source relative_path="src/include/lwip/priv" type="c_include">
        <files mask="altcp_priv.h"/>
        <files mask="api_msg.h"/>
        <files mask="memp_priv.h"/>
        <files mask="memp_std.h"/>
        <files mask="mem_priv.h"/>
        <files mask="nd6_priv.h"/>
        <files mask="raw_priv.h"/>
        <files mask="sockets_priv.h"/>
        <files mask="tcpip_priv.h"/>
        <files mask="tcp_priv.h"/>
      </source>
      <source relative_path="src/include/lwip/prot" type="c_include">
        <files mask="acd.h"/>
        <files mask="autoip.h"/>
        <files mask="dhcp.h"/>
        <files mask="dhcp6.h"/>
        <files mask="dns.h"/>
        <files mask="etharp.h"/>
        <files mask="ethernet.h"/>
        <files mask="iana.h"/>
        <files mask="icmp.h"/>
        <files mask="icmp6.h"/>
        <files mask="ieee.h"/>
        <files mask="igmp.h"/>
        <files mask="ip.h"/>
        <files mask="ip4.h"/>
        <files mask="ip6.h"/>
        <files mask="mld6.h"/>
        <files mask="nd6.h"/>
        <files mask="tcp.h"/>
        <files mask="udp.h"/>
      </source>
      <source relative_path="src/include/netif" type="c_include">
        <files mask="bridgeif.h"/>
        <files mask="bridgeif_opts.h"/>
        <files mask="etharp.h"/>
        <files mask="ethernet.h"/>
        <files mask="ieee802154.h"/>
        <files mask="lowpan6.h"/>
        <files mask="lowpan6_ble.h"/>
        <files mask="lowpan6_common.h"/>
        <files mask="lowpan6_opts.h"/>
        <files mask="slipif.h"/>
        <files mask="zepif.h"/>
      </source>
      <source relative_path="src/include/netif/ppp" type="c_include">
        <files mask="ccp.h"/>
        <files mask="chap-md5.h"/>
        <files mask="chap-new.h"/>
        <files mask="chap_ms.h"/>
        <files mask="eap.h"/>
        <files mask="ecp.h"/>
        <files mask="eui64.h"/>
        <files mask="fsm.h"/>
        <files mask="ipcp.h"/>
        <files mask="ipv6cp.h"/>
        <files mask="lcp.h"/>
        <files mask="magic.h"/>
        <files mask="mppe.h"/>
        <files mask="ppp.h"/>
        <files mask="pppapi.h"/>
        <files mask="pppcrypt.h"/>
        <files mask="pppdebug.h"/>
        <files mask="pppoe.h"/>
        <files mask="pppol2tp.h"/>
        <files mask="pppos.h"/>
        <files mask="ppp_impl.h"/>
        <files mask="ppp_opts.h"/>
        <files mask="upap.h"/>
        <files mask="vj.h"/>
      </source>
      <source relative_path="src/include/netif/ppp/polarssl" type="c_include">
        <files mask="arc4.h"/>
        <files mask="des.h"/>
        <files mask="md4.h"/>
        <files mask="md5.h"/>
        <files mask="sha1.h"/>
      </source>
      <source relative_path="src/netif" type="src">
        <files mask="bridgeif.c"/>
        <files mask="bridgeif_fdb.c"/>
        <files mask="ethernet.c"/>
        <files mask="lowpan6.c"/>
        <files mask="lowpan6_ble.c"/>
        <files mask="lowpan6_common.c"/>
        <files mask="slipif.c"/>
        <files mask="zepif.c"/>
      </source>
      <source relative_path="src/netif/ppp" type="src">
        <files mask="auth.c"/>
        <files mask="ccp.c"/>
        <files mask="chap-md5.c"/>
        <files mask="chap-new.c"/>
        <files mask="chap_ms.c"/>
        <files mask="demand.c"/>
        <files mask="eap.c"/>
        <files mask="ecp.c"/>
        <files mask="eui64.c"/>
        <files mask="fsm.c"/>
        <files mask="ipcp.c"/>
        <files mask="ipv6cp.c"/>
        <files mask="lcp.c"/>
        <files mask="magic.c"/>
        <files mask="mppe.c"/>
        <files mask="multilink.c"/>
        <files mask="ppp.c"/>
        <files mask="pppapi.c"/>
        <files mask="pppcrypt.c"/>
        <files mask="pppoe.c"/>
        <files mask="pppol2tp.c"/>
        <files mask="pppos.c"/>
        <files mask="upap.c"/>
        <files mask="utils.c"/>
        <files mask="vj.c"/>
      </source>
      <source relative_path="src/netif/ppp/polarssl" type="src_c">
        <files mask="arc4.c"/>
        <files mask="des.c"/>
        <files mask="md4.c"/>
        <files mask="md5.c"/>
        <files mask="sha1.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="src" type="c_include"/>
        <include_path relative_path="src/include" type="c_include"/>
        <include_path relative_path="src/include/lwip" type="c_include"/>
        <include_path relative_path="port" type="asm_include"/>
        <include_path relative_path="src" type="asm_include"/>
        <include_path relative_path="src/include" type="asm_include"/>
        <include_path relative_path="src/include/lwip" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.httpd.MIMXRT595S" name="lwIP_HTTPD" brief="lwIP HTTP Daemon" version="2.2.1" revision="2" full_name="lwIP HTTP Daemon" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT595S"/>
          <component_dependency value="middleware.lwip.apps.httpd.support.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="src/apps/http" type="src">
        <files mask="httpd.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_httpd.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.lwip.apps.httpd.support.MIMXRT595S" name="lwIP_HTTPD_support" brief="lwIP HTTP Daemon Implementation Support Files" version="2.2.1" revision="2" full_name="lwIP HTTP Daemon Implementation Support Files" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source exclude="true" relative_path="src/apps/http" type="other">
        <files mask="fsdata.c" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/http/fs" type="other">
        <files mask="404.html" hidden="true"/>
        <files mask="index.html" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/http/fs/img" type="other">
        <files mask="sics.gif" hidden="true"/>
      </source>
      <source exclude="true" relative_path="src/apps/http/makefsdata" type="other">
        <files mask="makefsdata" hidden="true"/>
        <files mask="makefsdata.c" hidden="true"/>
        <files mask="readme.txt" hidden="true"/>
        <files mask="tinydir.h" hidden="true"/>
      </source>
      <source relative_path="src/apps/http" type="src">
        <files mask="fs.c"/>
      </source>
      <source relative_path="src/apps/http" type="c_include">
        <files mask="fsdata.h"/>
        <files mask="httpd_structs.h"/>
      </source>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="fs.h"/>
        <files mask="httpd.h"/>
        <files mask="httpd_opts.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_httpd_support.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/apps/http" type="c_include"/>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
        <include_path relative_path="src/apps/http" type="asm_include"/>
        <include_path relative_path="src/include/lwip/apps" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.httpsrv.MIMXRT595S" name="lwIP_HTTP_srv" brief="lwIP HTTP Server Implementation" version="2.2.1" revision="2" full_name="lwIP HTTP Server" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source exclude="true" relative_path="src/apps/httpsrv/mkfs" type="other">
        <files mask="mkfs.pl" hidden="true"/>
      </source>
      <source relative_path="src/apps/httpsrv" type="src">
        <files mask="httpsrv.c"/>
        <files mask="httpsrv_base64.c"/>
        <files mask="httpsrv_fs.c"/>
        <files mask="httpsrv_script.c"/>
        <files mask="httpsrv_sha1.c"/>
        <files mask="httpsrv_supp.c"/>
        <files mask="httpsrv_task.c"/>
        <files mask="httpsrv_tls.c"/>
        <files mask="httpsrv_utf8.c"/>
        <files mask="httpsrv_ws.c"/>
        <files mask="httpsrv_ws_api.c"/>
      </source>
      <source relative_path="src/apps/httpsrv" type="c_include">
        <files mask="httpsrv.h"/>
        <files mask="httpsrv_base64.h"/>
        <files mask="httpsrv_config.h"/>
        <files mask="httpsrv_fs.h"/>
        <files mask="httpsrv_port.h"/>
        <files mask="httpsrv_prv.h"/>
        <files mask="httpsrv_script.h"/>
        <files mask="httpsrv_sha1.h"/>
        <files mask="httpsrv_supp.h"/>
        <files mask="httpsrv_tls.h"/>
        <files mask="httpsrv_utf8.h"/>
        <files mask="httpsrv_ws.h"/>
        <files mask="httpsrv_ws_prv.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_httpsrv.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/apps/httpsrv" type="c_include"/>
        <include_path relative_path="src/apps/httpsrv" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.httpssrv.MIMXRT595S" name="lwIP_HTTPS_srv" brief="lwIP HTTPS Server Implementation" version="2.2.1" revision="2" full_name="lwIP HTTPS Server" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <defines>
        <define name="MBEDTLS_THREADING_C" value=""/>
        <define name="MBEDTLS_THREADING_ALT" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.apps.httpsrv.MIMXRT595S"/>
          <component_dependency value="middleware.mbedtls.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_httpssrv.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.lwip.apps.lwiperf.MIMXRT595S" name="lwIP_IPERF" brief="lwIP IPERF Implementation" version="2.2.1" revision="2" full_name="lwIP IPERF" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <defines>
        <define name="SO_REUSE" value="1"/>
        <define name="PRINTF_FLOAT_ENABLE" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="src/apps/lwiperf" type="src">
        <files mask="lwiperf.c"/>
      </source>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="lwiperf.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_lwiperf.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
        <include_path relative_path="src/include/lwip/apps" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.mdns.MIMXRT595S" name="lwIP_MDNS" brief="lwIP mDNS Implementation" version="2.2.1" revision="2" full_name="lwIP mDNS" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="src/apps/mdns" type="src">
        <files mask="mdns_domain.c"/>
        <files mask="mdns_out.c"/>
        <files mask="mdns.c"/>
      </source>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="mdns.h"/>
        <files mask="mdns_domain.h"/>
        <files mask="mdns_priv.h"/>
        <files mask="mdns_opts.h"/>
        <files mask="mdns_out.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_mdns.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
        <include_path relative_path="src/include/lwip/apps" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.mqtt.MIMXRT595S" name="lwIP_MQTT" brief="lwIP MQTT Client" version="2.2.1" revision="2" full_name="lwIP MQTT Client" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="src/apps/mqtt" type="src">
        <files mask="mqtt.c"/>
      </source>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="mqtt.h"/>
        <files mask="mqtt_opts.h"/>
        <files mask="mqtt_priv.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_mqtt.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
        <include_path relative_path="src/include/lwip/apps" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.apps.sntp.MIMXRT595S" name="lwIP_SNTP" brief="lwIP SNTP" version="2.2.1" revision="2" full_name="lwIP SNTP" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="src/include/lwip/apps" type="c_include">
        <files mask="sntp.h"/>
        <files mask="sntp_opts.h"/>
      </source>
      <source relative_path="src/apps/sntp" type="src">
        <files mask="sntp.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_apps_sntp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/include/lwip/apps" type="c_include"/>
        <include_path relative_path="src/include/lwip/apps" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.ping.MIMXRT595S" name="lwIP_ping" brief="lwIP Ping Sender contrib" version="2.2.1" revision="2" full_name="lwIP Ping Sender" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="contrib/apps/ping" type="src">
        <files mask="ping.c"/>
      </source>
      <source relative_path="contrib/apps/ping" type="c_include">
        <files mask="ping.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_contrib_ping.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/ping" type="c_include"/>
        <include_path relative_path="contrib/apps/ping" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.tcpecho.MIMXRT595S" name="lwIP_tcpecho" brief="lwIP TCP Echo contrib" version="2.2.1" revision="2" full_name="lwIP TCP Echo" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="contrib/apps/tcpecho" type="src">
        <files mask="tcpecho.c"/>
      </source>
      <source relative_path="contrib/apps/tcpecho" type="c_include">
        <files mask="tcpecho.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_contrib_tcpecho.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/tcpecho" type="c_include"/>
        <include_path relative_path="contrib/apps/tcpecho" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.tcpecho_raw.MIMXRT595S" name="lwIP_tcpecho_raw" brief="lwIP TCP Echo Raw API contrib" version="2.2.1" revision="2" full_name="lwIP TCP Echo Raw API" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="contrib/apps/tcpecho_raw" type="src">
        <files mask="tcpecho_raw.c"/>
      </source>
      <source relative_path="contrib/apps/tcpecho_raw" type="c_include">
        <files mask="tcpecho_raw.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_contrib_tcpecho_raw.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/tcpecho_raw" type="c_include"/>
        <include_path relative_path="contrib/apps/tcpecho_raw" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.udpecho.MIMXRT595S" name="lwIP_udpecho" brief="lwIP UDP Echo contrib" version="2.2.1" revision="2" full_name="lwIP UDP Echo" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="contrib/apps/udpecho" type="src">
        <files mask="udpecho.c"/>
      </source>
      <source relative_path="contrib/apps/udpecho" type="c_include">
        <files mask="udpecho.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_contrib_udpecho.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/udpecho" type="c_include"/>
        <include_path relative_path="contrib/apps/udpecho" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.contrib.udpecho_raw.MIMXRT595S" name="lwIP_udpecho_raw" brief="lwIP UDP Echo Raw API contrib" version="2.2.1" revision="2" full_name="lwIP UDP Echo Raw API" category="Network/lwIP TCPIP Application protocols" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="contrib/apps/udpecho_raw" type="src">
        <files mask="udpecho_raw.c"/>
      </source>
      <source relative_path="contrib/apps/udpecho_raw" type="c_include">
        <files mask="udpecho_raw.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_contrib_udpecho_raw.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="contrib/apps/udpecho_raw" type="c_include"/>
        <include_path relative_path="contrib/apps/udpecho_raw" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.empty_ethernetif.MIMXRT595S" name="Empty ethernet interface" brief="Empty ethernet interface" version="2.2.1" revision="2" full_name="Empty ethernet interface" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="other">
        <files mask="README"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_empty_ethernetif.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.eoe_ethernetif.MIMXRT595S" name="EtherCAT EOE ethernet interface" brief="EtherCAT EOE ethernet interface" version="2.2.1" revision="2" full_name="EtherCAT EOE ethernet interface" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <defines>
        <define name="CHECKSUM_GEN_IP" value="1"/>
        <define name="CHECKSUM_GEN_UDP" value="1"/>
        <define name="CHECKSUM_GEN_TCP" value="1"/>
        <define name="CHECKSUM_GEN_ICMP" value="1"/>
        <define name="CHECKSUM_CHECK_ICMP" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT595S"/>
          <component_dependency value="middleware.lwip.template.MIMXRT595S"/>
          <component_dependency value="middleware.lwip.sys_arch.dynamic.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="port" type="src">
        <files mask="eoe_ethernetif.c"/>
      </source>
      <source relative_path="port" type="c_include">
        <files mask="eoe_ethernetif.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_eoe_ethernetif.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port" type="c_include"/>
        <include_path relative_path="port" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.sys_arch.dynamic.MIMXRT595S" name="Sys Arch Dynamic interface" brief="lwIP System Abstraction Layer using either FreeRTOS dynamic memory allocation APIs or bare-metal" version="2.2.1" revision="2" full_name="Sys Arch Dynamic interface" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="port/sys_arch/dynamic/arch" type="c_include">
        <files mask="sys_arch.h"/>
      </source>
      <source relative_path="port/sys_arch/dynamic" type="src">
        <files mask="sys_arch.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_sys_arch_dynamic.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/sys_arch/dynamic" type="c_include"/>
        <include_path relative_path="port/sys_arch/dynamic" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.sys_arch.static.MIMXRT595S" name="Sys Arch Static interface" brief="Experimental lwIP System Abstraction Layer using FreeRTOS static memory allocation APIs - it is not supported and not guaranteed to work, also might be removed in future" version="2.2.1" revision="2" full_name="Sys Arch Static interface - experimental" category="Network/lwIP TCPIP Networking Stack" user_visible="true" type="middleware" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT595S"/>
          <component_dependency value="middleware.wifi.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="port/sys_arch/static/arch" type="c_include">
        <files mask="sys_arch.h"/>
      </source>
      <source relative_path="port/sys_arch/static" type="src">
        <files mask="sys_arch.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_sys_arch_static.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="port/sys_arch/static" type="c_include"/>
        <include_path relative_path="port/sys_arch/static" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lwip.template.MIMXRT595S" name="lwIP_template" brief="lwIP Template" version="2.2.1" revision="2" full_name="lwIP Template Application" category="Network/lwIP TCPIP Networking Stack" user_visible="false" type="project_template" package_base_path="middleware/lwip" project_base_path="lwip">
      <dependencies>
        <all>
          <component_dependency value="middleware.lwip.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="template" config="true" type="c_include">
        <files mask="lwipopts.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lwip_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.MIMXRT595S" name="lvgl" brief="lvgl library" version="9.2.1" full_name="Middleware lvgl" category="Graphics/lvgl graphics library" user_visible="true" type="middleware" package_base_path="middleware/lvgl" project_base_path="lvgl">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.template.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="LICENCE.txt" hidden="true"/>
      </source>
      <source relative_path="src" type="src">
        <files mask="lv_init.c"/>
      </source>
      <source relative_path="src/core" type="src">
        <files mask="lv_group.c"/>
        <files mask="lv_obj.c"/>
        <files mask="lv_obj_class.c"/>
        <files mask="lv_obj_draw.c"/>
        <files mask="lv_obj_event.c"/>
        <files mask="lv_obj_id_builtin.c"/>
        <files mask="lv_obj_pos.c"/>
        <files mask="lv_obj_property.c"/>
        <files mask="lv_obj_scroll.c"/>
        <files mask="lv_obj_style.c"/>
        <files mask="lv_obj_style_gen.c"/>
        <files mask="lv_obj_tree.c"/>
        <files mask="lv_refr.c"/>
      </source>
      <source relative_path="src/display" type="src">
        <files mask="lv_display.c"/>
      </source>
      <source relative_path="src/draw" type="src">
        <files mask="lv_draw.c"/>
        <files mask="lv_draw_arc.c"/>
        <files mask="lv_draw_buf.c"/>
        <files mask="lv_draw_image.c"/>
        <files mask="lv_draw_label.c"/>
        <files mask="lv_draw_line.c"/>
        <files mask="lv_draw_mask.c"/>
        <files mask="lv_draw_rect.c"/>
        <files mask="lv_draw_triangle.c"/>
        <files mask="lv_draw_vector.c"/>
        <files mask="lv_image_decoder.c"/>
      </source>
      <source relative_path="src/draw/nxp/pxp" type="src">
        <files mask="lv_draw_buf_pxp.c"/>
        <files mask="lv_draw_pxp.c"/>
        <files mask="lv_draw_pxp_fill.c"/>
        <files mask="lv_draw_pxp_img.c"/>
        <files mask="lv_draw_pxp_layer.c"/>
        <files mask="lv_pxp_cfg.c"/>
        <files mask="lv_pxp_osa.c"/>
        <files mask="lv_pxp_utils.c"/>
      </source>
      <source relative_path="src/draw/nxp/vglite" type="src">
        <files mask="lv_draw_buf_vglite.c"/>
        <files mask="lv_draw_vglite.c"/>
        <files mask="lv_draw_vglite_arc.c"/>
        <files mask="lv_draw_vglite_border.c"/>
        <files mask="lv_draw_vglite_fill.c"/>
        <files mask="lv_draw_vglite_img.c"/>
        <files mask="lv_draw_vglite_label.c"/>
        <files mask="lv_draw_vglite_layer.c"/>
        <files mask="lv_draw_vglite_line.c"/>
        <files mask="lv_draw_vglite_triangle.c"/>
        <files mask="lv_vglite_buf.c"/>
        <files mask="lv_vglite_matrix.c"/>
        <files mask="lv_vglite_path.c"/>
        <files mask="lv_vglite_utils.c"/>
      </source>
      <source relative_path="src/draw/sdl" type="src">
        <files mask="lv_draw_sdl.c"/>
      </source>
      <source relative_path="src/draw/sw/blend" type="src">
        <files mask="lv_draw_sw_blend.c"/>
        <files mask="lv_draw_sw_blend_to_al88.c"/>
        <files mask="lv_draw_sw_blend_to_argb8888.c"/>
        <files mask="lv_draw_sw_blend_to_i1.c"/>
        <files mask="lv_draw_sw_blend_to_l8.c"/>
        <files mask="lv_draw_sw_blend_to_rgb565.c"/>
        <files mask="lv_draw_sw_blend_to_rgb888.c"/>
      </source>
      <source relative_path="src/draw/sw" type="src">
        <files mask="lv_draw_sw.c"/>
        <files mask="lv_draw_sw_arc.c"/>
        <files mask="lv_draw_sw_border.c"/>
        <files mask="lv_draw_sw_box_shadow.c"/>
        <files mask="lv_draw_sw_fill.c"/>
        <files mask="lv_draw_sw_gradient.c"/>
        <files mask="lv_draw_sw_img.c"/>
        <files mask="lv_draw_sw_letter.c"/>
        <files mask="lv_draw_sw_line.c"/>
        <files mask="lv_draw_sw_mask.c"/>
        <files mask="lv_draw_sw_mask_rect.c"/>
        <files mask="lv_draw_sw_transform.c"/>
        <files mask="lv_draw_sw_triangle.c"/>
        <files mask="lv_draw_sw_vector.c"/>
      </source>
      <source relative_path="src/drivers/display/drm" type="src">
        <files mask="lv_linux_drm.c"/>
      </source>
      <source relative_path="src/drivers/display/fb" type="src">
        <files mask="lv_linux_fbdev.c"/>
      </source>
      <source relative_path="src/drivers/display/ili9341" type="src">
        <files mask="lv_ili9341.c"/>
      </source>
      <source relative_path="src/drivers/display/lcd" type="src">
        <files mask="lv_lcd_generic_mipi.c"/>
      </source>
      <source relative_path="src/drivers/display/st7735" type="src">
        <files mask="lv_st7735.c"/>
      </source>
      <source relative_path="src/drivers/display/st7789" type="src">
        <files mask="lv_st7789.c"/>
      </source>
      <source relative_path="src/drivers/display/st7796" type="src">
        <files mask="lv_st7796.c"/>
      </source>
      <source relative_path="src/drivers/evdev" type="src">
        <files mask="lv_evdev.c"/>
      </source>
      <source relative_path="src/drivers/libinput" type="src">
        <files mask="lv_libinput.c"/>
        <files mask="lv_xkb.c"/>
      </source>
      <source relative_path="src/drivers/nuttx" type="src">
        <files mask="lv_nuttx_cache.c"/>
        <files mask="lv_nuttx_entry.c"/>
        <files mask="lv_nuttx_fbdev.c"/>
        <files mask="lv_nuttx_image_cache.c"/>
        <files mask="lv_nuttx_lcd.c"/>
        <files mask="lv_nuttx_libuv.c"/>
        <files mask="lv_nuttx_profiler.c"/>
        <files mask="lv_nuttx_touchscreen.c"/>
      </source>
      <source relative_path="src/drivers/sdl" type="src">
        <files mask="lv_sdl_keyboard.c"/>
        <files mask="lv_sdl_mouse.c"/>
        <files mask="lv_sdl_mousewheel.c"/>
        <files mask="lv_sdl_window.c"/>
      </source>
      <source relative_path="src/drivers/windows" type="src">
        <files mask="lv_windows_context.c"/>
        <files mask="lv_windows_display.c"/>
        <files mask="lv_windows_input.c"/>
      </source>
      <source relative_path="src/drivers/x11" type="src">
        <files mask="lv_x11_display.c"/>
        <files mask="lv_x11_input.c"/>
      </source>
      <source relative_path="src/drivers/glfw" type="src">
        <files mask="lv_glfw_window.c"/>
        <files mask="lv_opengles_debug.c"/>
        <files mask="lv_opengles_driver.c"/>
        <files mask="lv_opengles_texture.c"/>
      </source>
      <source relative_path="src/drivers/qnx" type="src">
        <files mask="lv_qnx.c"/>
      </source>
      <source relative_path="src/drivers/wayland" type="src">
        <files mask="lv_wayland.c"/>
        <files mask="lv_wayland_smm.c"/>
      </source>
      <source relative_path="src/font" type="src">
        <files mask="lv_binfont_loader.c"/>
        <files mask="lv_font.c"/>
        <files mask="lv_font_dejavu_16_persian_hebrew.c"/>
        <files mask="lv_font_fmt_txt.c"/>
        <files mask="lv_font_montserrat_10.c"/>
        <files mask="lv_font_montserrat_12.c"/>
        <files mask="lv_font_montserrat_14.c"/>
        <files mask="lv_font_montserrat_16.c"/>
        <files mask="lv_font_montserrat_18.c"/>
        <files mask="lv_font_montserrat_20.c"/>
        <files mask="lv_font_montserrat_22.c"/>
        <files mask="lv_font_montserrat_24.c"/>
        <files mask="lv_font_montserrat_26.c"/>
        <files mask="lv_font_montserrat_28.c"/>
        <files mask="lv_font_montserrat_28_compressed.c"/>
        <files mask="lv_font_montserrat_30.c"/>
        <files mask="lv_font_montserrat_32.c"/>
        <files mask="lv_font_montserrat_34.c"/>
        <files mask="lv_font_montserrat_36.c"/>
        <files mask="lv_font_montserrat_38.c"/>
        <files mask="lv_font_montserrat_40.c"/>
        <files mask="lv_font_montserrat_42.c"/>
        <files mask="lv_font_montserrat_44.c"/>
        <files mask="lv_font_montserrat_46.c"/>
        <files mask="lv_font_montserrat_48.c"/>
        <files mask="lv_font_montserrat_8.c"/>
        <files mask="lv_font_simsun_14_cjk.c"/>
        <files mask="lv_font_simsun_16_cjk.c"/>
        <files mask="lv_font_unscii_16.c"/>
        <files mask="lv_font_unscii_8.c"/>
      </source>
      <source relative_path="src/indev" type="src">
        <files mask="lv_indev.c"/>
        <files mask="lv_indev_scroll.c"/>
      </source>
      <source relative_path="src/layouts/flex" type="src">
        <files mask="lv_flex.c"/>
      </source>
      <source relative_path="src/layouts/grid" type="src">
        <files mask="lv_grid.c"/>
      </source>
      <source relative_path="src/layouts" type="src">
        <files mask="lv_layout.c"/>
      </source>
      <source relative_path="src/libs/barcode" type="src">
        <files mask="code128.c"/>
        <files mask="lv_barcode.c"/>
      </source>
      <source relative_path="src/libs/bin_decoder" type="src">
        <files mask="lv_bin_decoder.c"/>
      </source>
      <source relative_path="src/libs/bmp" type="src">
        <files mask="lv_bmp.c"/>
      </source>
      <source relative_path="src/libs/ffmpeg" type="src">
        <files mask="lv_ffmpeg.c"/>
      </source>
      <source relative_path="src/libs/freetype" type="src">
        <files mask="lv_freetype.c"/>
        <files mask="lv_freetype_glyph.c"/>
        <files mask="lv_freetype_image.c"/>
        <files mask="lv_freetype_outline.c"/>
        <files mask="lv_ftsystem.c"/>
      </source>
      <source relative_path="src/libs/fsdrv" type="src">
        <files mask="lv_fs_cbfs.c"/>
        <files mask="lv_fs_fatfs.c"/>
        <files mask="lv_fs_littlefs.c"/>
        <files mask="lv_fs_memfs.c"/>
        <files mask="lv_fs_posix.c"/>
        <files mask="lv_fs_rawfs.c"/>
        <files mask="lv_fs_stdio.c"/>
        <files mask="lv_fs_win32.c"/>
      </source>
      <source relative_path="src/libs/gif" type="src">
        <files mask="gifdec.c"/>
        <files mask="lv_gif.c"/>
      </source>
      <source relative_path="src/libs/libjpeg_turbo" type="src">
        <files mask="lv_libjpeg_turbo.c"/>
      </source>
      <source relative_path="src/libs/libpng" type="src">
        <files mask="lv_libpng.c"/>
      </source>
      <source relative_path="src/libs/lodepng" type="src">
        <files mask="lodepng.c"/>
        <files mask="lv_lodepng.c"/>
      </source>
      <source relative_path="src/libs/lz4" type="src">
        <files mask="lz4.c"/>
      </source>
      <source relative_path="src/libs/qrcode" type="src">
        <files mask="lv_qrcode.c"/>
        <files mask="qrcodegen.c"/>
      </source>
      <source relative_path="src/libs/rle" type="src">
        <files mask="lv_rle.c"/>
      </source>
      <source relative_path="src/libs/rlottie" type="src">
        <files mask="lv_rlottie.c"/>
      </source>
      <source relative_path="src/libs/tiny_ttf" type="src">
        <files mask="lv_tiny_ttf.c"/>
      </source>
      <source relative_path="src/libs/tjpgd" type="src">
        <files mask="lv_tjpgd.c"/>
        <files mask="tjpgd.c"/>
      </source>
      <source relative_path="src/misc/cache" type="src">
        <files mask="lv_cache.c"/>
        <files mask="lv_cache_entry.c"/>
        <files mask="lv_cache_lru_rb.c"/>
        <files mask="lv_image_cache.c"/>
        <files mask="lv_image_header_cache.c"/>
      </source>
      <source relative_path="src/misc" type="src">
        <files mask="lv_anim.c"/>
        <files mask="lv_anim_timeline.c"/>
        <files mask="lv_area.c"/>
        <files mask="lv_array.c"/>
        <files mask="lv_async.c"/>
        <files mask="lv_bidi.c"/>
        <files mask="lv_color.c"/>
        <files mask="lv_color_op.c"/>
        <files mask="lv_event.c"/>
        <files mask="lv_fs.c"/>
        <files mask="lv_ll.c"/>
        <files mask="lv_log.c"/>
        <files mask="lv_lru.c"/>
        <files mask="lv_math.c"/>
        <files mask="lv_matrix.c"/>
        <files mask="lv_palette.c"/>
        <files mask="lv_profiler_builtin.c"/>
        <files mask="lv_rb.c"/>
        <files mask="lv_style.c"/>
        <files mask="lv_style_gen.c"/>
        <files mask="lv_templ.c"/>
        <files mask="lv_text.c"/>
        <files mask="lv_text_ap.c"/>
        <files mask="lv_timer.c"/>
        <files mask="lv_utils.c"/>
      </source>
      <source relative_path="src/osal" type="src">
        <files mask="lv_cmsis_rtos2.c"/>
        <files mask="lv_freertos.c"/>
        <files mask="lv_mqx.c"/>
        <files mask="lv_os.c"/>
        <files mask="lv_os_none.c"/>
        <files mask="lv_pthread.c"/>
        <files mask="lv_rtthread.c"/>
        <files mask="lv_windows.c"/>
      </source>
      <source relative_path="src/others/file_explorer" type="src">
        <files mask="lv_file_explorer.c"/>
      </source>
      <source relative_path="src/others/fragment" type="src">
        <files mask="lv_fragment.c"/>
        <files mask="lv_fragment_manager.c"/>
      </source>
      <source relative_path="src/others/gridnav" type="src">
        <files mask="lv_gridnav.c"/>
      </source>
      <source relative_path="src/others/ime" type="src">
        <files mask="lv_ime_pinyin.c"/>
      </source>
      <source relative_path="src/others/imgfont" type="src">
        <files mask="lv_imgfont.c"/>
      </source>
      <source relative_path="src/others/monkey" type="src">
        <files mask="lv_monkey.c"/>
      </source>
      <source relative_path="src/others/observer" type="src">
        <files mask="lv_observer.c"/>
      </source>
      <source relative_path="src/others/snapshot" type="src">
        <files mask="lv_snapshot.c"/>
      </source>
      <source relative_path="src/others/sysmon" type="src">
        <files mask="lv_sysmon.c"/>
      </source>
      <source relative_path="src/others/vg_lite_tvg" type="src">
        <files mask="vg_lite_matrix.c"/>
      </source>
      <source relative_path="src/stdlib/builtin" type="src">
        <files mask="lv_mem_core_builtin.c"/>
        <files mask="lv_sprintf_builtin.c"/>
        <files mask="lv_string_builtin.c"/>
        <files mask="lv_tlsf.c"/>
      </source>
      <source relative_path="src/stdlib/clib" type="src">
        <files mask="lv_mem_core_clib.c"/>
        <files mask="lv_sprintf_clib.c"/>
        <files mask="lv_string_clib.c"/>
      </source>
      <source relative_path="src/stdlib" type="src">
        <files mask="lv_mem.c"/>
      </source>
      <source relative_path="src/stdlib/micropython" type="src">
        <files mask="lv_mem_core_micropython.c"/>
      </source>
      <source relative_path="src/stdlib/rtthread" type="src">
        <files mask="lv_mem_core_rtthread.c"/>
        <files mask="lv_sprintf_rtthread.c"/>
        <files mask="lv_string_rtthread.c"/>
      </source>
      <source relative_path="src/themes/default" type="src">
        <files mask="lv_theme_default.c"/>
      </source>
      <source relative_path="src/themes" type="src">
        <files mask="lv_theme.c"/>
      </source>
      <source relative_path="src/themes/mono" type="src">
        <files mask="lv_theme_mono.c"/>
      </source>
      <source relative_path="src/themes/simple" type="src">
        <files mask="lv_theme_simple.c"/>
      </source>
      <source relative_path="src/tick" type="src">
        <files mask="lv_tick.c"/>
      </source>
      <source relative_path="src/widgets/animimage" type="src">
        <files mask="lv_animimage.c"/>
      </source>
      <source relative_path="src/widgets/arc" type="src">
        <files mask="lv_arc.c"/>
      </source>
      <source relative_path="src/widgets/bar" type="src">
        <files mask="lv_bar.c"/>
      </source>
      <source relative_path="src/widgets/button" type="src">
        <files mask="lv_button.c"/>
      </source>
      <source relative_path="src/widgets/buttonmatrix" type="src">
        <files mask="lv_buttonmatrix.c"/>
      </source>
      <source relative_path="src/widgets/calendar" type="src">
        <files mask="lv_calendar.c"/>
        <files mask="lv_calendar_chinese.c"/>
        <files mask="lv_calendar_header_arrow.c"/>
        <files mask="lv_calendar_header_dropdown.c"/>
      </source>
      <source relative_path="src/widgets/carousel" type="src">
        <files mask="lv_carousel.c"/>
      </source>
      <source relative_path="src/widgets/canvas" type="src">
        <files mask="lv_canvas.c"/>
      </source>
      <source relative_path="src/widgets/chart" type="src">
        <files mask="lv_chart.c"/>
      </source>
      <source relative_path="src/widgets/checkbox" type="src">
        <files mask="lv_checkbox.c"/>
      </source>
      <source relative_path="src/widgets/dropdown" type="src">
        <files mask="lv_dropdown.c"/>
      </source>
      <source relative_path="src/widgets/image" type="src">
        <files mask="lv_image.c"/>
      </source>
      <source relative_path="src/widgets/imagebutton" type="src">
        <files mask="lv_imagebutton.c"/>
      </source>
      <source relative_path="src/widgets/keyboard" type="src">
        <files mask="lv_keyboard.c"/>
      </source>
      <source relative_path="src/widgets/label" type="src">
        <files mask="lv_label.c"/>
      </source>
      <source relative_path="src/widgets/led" type="src">
        <files mask="lv_led.c"/>
      </source>
      <source relative_path="src/widgets/line" type="src">
        <files mask="lv_line.c"/>
      </source>
      <source relative_path="src/widgets/list" type="src">
        <files mask="lv_list.c"/>
      </source>
      <source relative_path="src/widgets/lottie" type="src">
        <files mask="lv_lottie.c"/>
      </source>
      <source relative_path="src/widgets/menu" type="src">
        <files mask="lv_menu.c"/>
      </source>
      <source relative_path="src/widgets/msgbox" type="src">
        <files mask="lv_msgbox.c"/>
      </source>
      <source relative_path="src/widgets/objx_templ" type="src">
        <files mask="lv_objx_templ.c"/>
      </source>
      <source relative_path="src/widgets/roller" type="src">
        <files mask="lv_roller.c"/>
      </source>
      <source relative_path="src/widgets/scale" type="src">
        <files mask="lv_scale.c"/>
      </source>
      <source relative_path="src/widgets/slider" type="src">
        <files mask="lv_slider.c"/>
      </source>
      <source relative_path="src/widgets/span" type="src">
        <files mask="lv_span.c"/>
      </source>
      <source relative_path="src/widgets/spinbox" type="src">
        <files mask="lv_spinbox.c"/>
      </source>
      <source relative_path="src/widgets/spinner" type="src">
        <files mask="lv_spinner.c"/>
      </source>
      <source relative_path="src/widgets/switch" type="src">
        <files mask="lv_switch.c"/>
      </source>
      <source relative_path="src/widgets/table" type="src">
        <files mask="lv_table.c"/>
      </source>
      <source relative_path="src/widgets/tabview" type="src">
        <files mask="lv_tabview.c"/>
      </source>
      <source relative_path="src/widgets/textarea" type="src">
        <files mask="lv_textarea.c"/>
      </source>
      <source relative_path="src/widgets/tileview" type="src">
        <files mask="lv_tileview.c"/>
      </source>
      <source relative_path="src/widgets/win" type="src">
        <files mask="lv_win.c"/>
      </source>
      <source relative_path="src" type="c_include">
        <files mask="lv_api_map_v8.h"/>
        <files mask="lv_api_map_v9_0.h"/>
        <files mask="lv_api_map_v9_1.h"/>
        <files mask="lv_conf_internal.h"/>
        <files mask="lv_conf_kconfig.h"/>
        <files mask="lv_init.h"/>
        <files mask="lvgl.h"/>
        <files mask="lvgl_private.h"/>
      </source>
      <source relative_path="src/core" type="c_include">
        <files mask="lv_global.h"/>
        <files mask="lv_group.h"/>
        <files mask="lv_group_private.h"/>
        <files mask="lv_obj.h"/>
        <files mask="lv_obj_class.h"/>
        <files mask="lv_obj_class_private.h"/>
        <files mask="lv_obj_draw.h"/>
        <files mask="lv_obj_draw_private.h"/>
        <files mask="lv_obj_event.h"/>
        <files mask="lv_obj_event_private.h"/>
        <files mask="lv_obj_pos.h"/>
        <files mask="lv_obj_private.h"/>
        <files mask="lv_obj_property.h"/>
        <files mask="lv_obj_scroll.h"/>
        <files mask="lv_obj_scroll_private.h"/>
        <files mask="lv_obj_style.h"/>
        <files mask="lv_obj_style_gen.h"/>
        <files mask="lv_obj_style_private.h"/>
        <files mask="lv_obj_tree.h"/>
        <files mask="lv_refr.h"/>
        <files mask="lv_refr_private.h"/>
      </source>
      <source relative_path="src/display" type="c_include">
        <files mask="lv_display.h"/>
        <files mask="lv_display_private.h"/>
      </source>
      <source relative_path="src/draw" type="c_include">
        <files mask="lv_draw.h"/>
        <files mask="lv_draw_arc.h"/>
        <files mask="lv_draw_buf.h"/>
        <files mask="lv_draw_buf_private.h"/>
        <files mask="lv_draw_image.h"/>
        <files mask="lv_draw_image_private.h"/>
        <files mask="lv_draw_label.h"/>
        <files mask="lv_draw_label_private.h"/>
        <files mask="lv_draw_line.h"/>
        <files mask="lv_draw_mask.h"/>
        <files mask="lv_draw_mask_private.h"/>
        <files mask="lv_draw_private.h"/>
        <files mask="lv_draw_rect.h"/>
        <files mask="lv_draw_rect_private.h"/>
        <files mask="lv_draw_triangle.h"/>
        <files mask="lv_draw_triangle_private.h"/>
        <files mask="lv_draw_vector.h"/>
        <files mask="lv_draw_vector_private.h"/>
        <files mask="lv_image_decoder.h"/>
        <files mask="lv_image_decoder_private.h"/>
        <files mask="lv_image_dsc.h"/>
      </source>
      <source relative_path="src/draw/nxp/pxp" type="c_include">
        <files mask="lv_draw_pxp.h"/>
        <files mask="lv_pxp_cfg.h"/>
        <files mask="lv_pxp_osa.h"/>
        <files mask="lv_pxp_utils.h"/>
      </source>
      <source relative_path="src/draw/nxp/vglite" type="c_include">
        <files mask="lv_draw_vglite.h"/>
        <files mask="lv_vglite_buf.h"/>
        <files mask="lv_vglite_matrix.h"/>
        <files mask="lv_vglite_path.h"/>
        <files mask="lv_vglite_utils.h"/>
      </source>
      <source relative_path="src/draw/sdl" type="c_include">
        <files mask="lv_draw_sdl.h"/>
      </source>
      <source relative_path="src/draw/sw/arm2d" type="c_include">
        <files mask="lv_draw_sw_arm2d.h"/>
        <files mask="lv_draw_sw_helium.h"/>
      </source>
      <source relative_path="src/draw/sw/blend/arm2d" type="c_include">
        <files mask="lv_blend_arm2d.h"/>
      </source>
      <source relative_path="src/draw/sw/blend" type="c_include">
        <files mask="lv_draw_sw_blend.h"/>
        <files mask="lv_draw_sw_blend_private.h"/>
        <files mask="lv_draw_sw_blend_to_al88.h"/>
        <files mask="lv_draw_sw_blend_to_argb8888.h"/>
        <files mask="lv_draw_sw_blend_to_i1.h"/>
        <files mask="lv_draw_sw_blend_to_l8.h"/>
        <files mask="lv_draw_sw_blend_to_rgb565.h"/>
        <files mask="lv_draw_sw_blend_to_rgb888.h"/>
      </source>
      <source relative_path="src/draw/sw/blend/neon" type="c_include">
        <files mask="lv_blend_neon.h"/>
      </source>
      <source relative_path="src/draw/sw" type="c_include">
        <files mask="lv_draw_sw.h"/>
        <files mask="lv_draw_sw_gradient.h"/>
        <files mask="lv_draw_sw_gradient_private.h"/>
        <files mask="lv_draw_sw_mask.h"/>
        <files mask="lv_draw_sw_mask_private.h"/>
        <files mask="lv_draw_sw_private.h"/>
      </source>
      <source relative_path="src/drivers" type="c_include">
        <files mask="lv_drivers.h"/>
      </source>
      <source relative_path="src/drivers/display/drm" type="c_include">
        <files mask="lv_linux_drm.h"/>
      </source>
      <source relative_path="src/drivers/display/fb" type="c_include">
        <files mask="lv_linux_fbdev.h"/>
      </source>
      <source relative_path="src/drivers/display/ili9341" type="c_include">
        <files mask="lv_ili9341.h"/>
      </source>
      <source relative_path="src/drivers/display/lcd" type="c_include">
        <files mask="lv_lcd_generic_mipi.h"/>
      </source>
      <source relative_path="src/drivers/display/st7735" type="c_include">
        <files mask="lv_st7735.h"/>
      </source>
      <source relative_path="src/drivers/display/st7789" type="c_include">
        <files mask="lv_st7789.h"/>
      </source>
      <source relative_path="src/drivers/display/st7796" type="c_include">
        <files mask="lv_st7796.h"/>
      </source>
      <source relative_path="src/drivers/display/tft_espi" type="c_include">
        <files mask="lv_tft_espi.h"/>
      </source>
      <source relative_path="src/drivers/evdev" type="c_include">
        <files mask="lv_evdev.h"/>
      </source>
      <source relative_path="src/drivers/libinput" type="c_include">
        <files mask="lv_libinput.h"/>
        <files mask="lv_libinput_private.h"/>
        <files mask="lv_xkb.h"/>
        <files mask="lv_xkb_private.h"/>
      </source>
      <source relative_path="src/drivers/nuttx" type="c_include">
        <files mask="lv_nuttx_cache.h"/>
        <files mask="lv_nuttx_entry.h"/>
        <files mask="lv_nuttx_fbdev.h"/>
        <files mask="lv_nuttx_image_cache.h"/>
        <files mask="lv_nuttx_lcd.h"/>
        <files mask="lv_nuttx_libuv.h"/>
        <files mask="lv_nuttx_profiler.h"/>
        <files mask="lv_nuttx_touchscreen.h"/>
      </source>
      <source relative_path="src/drivers/sdl" type="c_include">
        <files mask="lv_sdl_keyboard.h"/>
        <files mask="lv_sdl_mouse.h"/>
        <files mask="lv_sdl_mousewheel.h"/>
        <files mask="lv_sdl_private.h"/>
        <files mask="lv_sdl_window.h"/>
      </source>
      <source relative_path="src/drivers/windows" type="c_include">
        <files mask="lv_windows_context.h"/>
        <files mask="lv_windows_display.h"/>
        <files mask="lv_windows_input.h"/>
        <files mask="lv_windows_input_private.h"/>
      </source>
      <source relative_path="src/drivers/x11" type="c_include">
        <files mask="lv_x11.h"/>
      </source>
      <source relative_path="src/drivers/glfw" type="c_include">
        <files mask="lv_glfw_window.h"/>
        <files mask="lv_glfw_window_private.h"/>
        <files mask="lv_opengles_debug.h"/>
        <files mask="lv_opengles_driver.h"/>
        <files mask="lv_opengles_texture.h"/>
      </source>
      <source relative_path="src/drivers/qnx" type="c_include">
        <files mask="lv_qnx.h"/>
      </source>
      <source relative_path="src/drivers/wayland" type="c_include">
        <files mask="lv_wayland.h"/>
        <files mask="lv_wayland_smm.h"/>
      </source>
      <source relative_path="src/font" type="c_include">
        <files mask="lv_binfont_loader.h"/>
        <files mask="lv_font.h"/>
        <files mask="lv_font_fmt_txt.h"/>
        <files mask="lv_font_fmt_txt_private.h"/>
        <files mask="lv_symbol_def.h"/>
      </source>
      <source relative_path="src/indev" type="c_include">
        <files mask="lv_indev.h"/>
        <files mask="lv_indev_private.h"/>
        <files mask="lv_indev_scroll.h"/>
      </source>
      <source relative_path="src/layouts/flex" type="c_include">
        <files mask="lv_flex.h"/>
      </source>
      <source relative_path="src/layouts/grid" type="c_include">
        <files mask="lv_grid.h"/>
      </source>
      <source relative_path="src/layouts" type="c_include">
        <files mask="lv_layout.h"/>
        <files mask="lv_layout_private.h"/>
      </source>
      <source relative_path="src/libs/barcode" type="c_include">
        <files mask="code128.h"/>
        <files mask="lv_barcode.h"/>
        <files mask="lv_barcode_private.h"/>
      </source>
      <source relative_path="src/libs/bin_decoder" type="c_include">
        <files mask="lv_bin_decoder.h"/>
      </source>
      <source relative_path="src/libs/bmp" type="c_include">
        <files mask="lv_bmp.h"/>
      </source>
      <source relative_path="src/libs/ffmpeg" type="c_include">
        <files mask="lv_ffmpeg.h"/>
        <files mask="lv_ffmpeg_private.h"/>
      </source>
      <source relative_path="src/libs/freetype" type="c_include">
        <files mask="ftmodule.h"/>
        <files mask="ftoption.h"/>
        <files mask="lv_freetype.h"/>
        <files mask="lv_freetype_private.h"/>
      </source>
      <source relative_path="src/libs/fsdrv" type="c_include">
        <files mask="lv_fsdrv.h"/>
      </source>
      <source relative_path="src/libs/gif" type="c_include">
        <files mask="gifdec.h"/>
        <files mask="gifdec_mve.h"/>
        <files mask="lv_gif.h"/>
        <files mask="lv_gif_private.h"/>
      </source>
      <source relative_path="src/libs/libjpeg_turbo" type="c_include">
        <files mask="lv_libjpeg_turbo.h"/>
      </source>
      <source relative_path="src/libs/libpng" type="c_include">
        <files mask="lv_libpng.h"/>
      </source>
      <source relative_path="src/libs/lodepng" type="c_include">
        <files mask="lodepng.h"/>
        <files mask="lv_lodepng.h"/>
      </source>
      <source relative_path="src/libs/lz4" type="c_include">
        <files mask="lz4.h"/>
      </source>
      <source relative_path="src/libs/qrcode" type="c_include">
        <files mask="lv_qrcode.h"/>
        <files mask="lv_qrcode_private.h"/>
        <files mask="qrcodegen.h"/>
      </source>
      <source relative_path="src/libs/rle" type="c_include">
        <files mask="lv_rle.h"/>
      </source>
      <source relative_path="src/libs/rlottie" type="c_include">
        <files mask="lv_rlottie.h"/>
        <files mask="lv_rlottie_private.h"/>
      </source>
      <source relative_path="src/libs/thorvg" type="c_include">
        <files mask="config.h"/>
        <files mask="thorvg.h"/>
        <files mask="thorvg_capi.h"/>
        <files mask="thorvg_lottie.h"/>
        <files mask="tvgAnimation.h"/>
        <files mask="tvgArray.h"/>
        <files mask="tvgBinaryDesc.h"/>
        <files mask="tvgCanvas.h"/>
        <files mask="tvgCommon.h"/>
        <files mask="tvgCompressor.h"/>
        <files mask="tvgFill.h"/>
        <files mask="tvgFrameModule.h"/>
        <files mask="tvgInlist.h"/>
        <files mask="tvgIteratorAccessor.h"/>
        <files mask="tvgLines.h"/>
        <files mask="tvgLoadModule.h"/>
        <files mask="tvgLoader.h"/>
        <files mask="tvgLock.h"/>
        <files mask="tvgLottieBuilder.h"/>
        <files mask="tvgLottieExpressions.h"/>
        <files mask="tvgLottieInterpolator.h"/>
        <files mask="tvgLottieLoader.h"/>
        <files mask="tvgLottieModel.h"/>
        <files mask="tvgLottieParser.h"/>
        <files mask="tvgLottieParserHandler.h"/>
        <files mask="tvgLottieProperty.h"/>
        <files mask="tvgMath.h"/>
        <files mask="tvgPaint.h"/>
        <files mask="tvgPicture.h"/>
        <files mask="tvgRawLoader.h"/>
        <files mask="tvgRender.h"/>
        <files mask="tvgSaveModule.h"/>
        <files mask="tvgScene.h"/>
        <files mask="tvgShape.h"/>
        <files mask="tvgStr.h"/>
        <files mask="tvgSvgCssStyle.h"/>
        <files mask="tvgSvgLoader.h"/>
        <files mask="tvgSvgLoaderCommon.h"/>
        <files mask="tvgSvgPath.h"/>
        <files mask="tvgSvgSceneBuilder.h"/>
        <files mask="tvgSvgUtil.h"/>
        <files mask="tvgSwCommon.h"/>
        <files mask="tvgSwRasterAvx.h"/>
        <files mask="tvgSwRasterC.h"/>
        <files mask="tvgSwRasterNeon.h"/>
        <files mask="tvgSwRasterTexmap.h"/>
        <files mask="tvgSwRenderer.h"/>
        <files mask="tvgTaskScheduler.h"/>
        <files mask="tvgText.h"/>
        <files mask="tvgXmlParser.h"/>
      </source>
      <source relative_path="src/libs/tiny_ttf" type="c_include">
        <files mask="lv_tiny_ttf.h"/>
        <files mask="stb_rect_pack.h"/>
        <files mask="stb_truetype_htcw.h"/>
      </source>
      <source relative_path="src/libs/tjpgd" type="c_include">
        <files mask="lv_tjpgd.h"/>
        <files mask="tjpgd.h"/>
        <files mask="tjpgdcnf.h"/>
      </source>
      <source relative_path="src/misc/cache" type="c_include">
        <files mask="lv_cache.h"/>
        <files mask="lv_cache_entry.h"/>
        <files mask="lv_cache_entry_private.h"/>
        <files mask="lv_cache_lru_rb.h"/>
        <files mask="lv_cache_private.h"/>
        <files mask="lv_image_cache.h"/>
        <files mask="lv_image_header_cache.h"/>
      </source>
      <source relative_path="src/misc" type="c_include">
        <files mask="lv_anim.h"/>
        <files mask="lv_anim_private.h"/>
        <files mask="lv_anim_timeline.h"/>
        <files mask="lv_area.h"/>
        <files mask="lv_area_private.h"/>
        <files mask="lv_array.h"/>
        <files mask="lv_assert.h"/>
        <files mask="lv_async.h"/>
        <files mask="lv_bidi.h"/>
        <files mask="lv_bidi_private.h"/>
        <files mask="lv_color.h"/>
        <files mask="lv_color_op.h"/>
        <files mask="lv_color_op_private.h"/>
        <files mask="lv_event.h"/>
        <files mask="lv_event_private.h"/>
        <files mask="lv_fs.h"/>
        <files mask="lv_fs_private.h"/>
        <files mask="lv_ll.h"/>
        <files mask="lv_log.h"/>
        <files mask="lv_lru.h"/>
        <files mask="lv_math.h"/>
        <files mask="lv_matrix.h"/>
        <files mask="lv_palette.h"/>
        <files mask="lv_profiler.h"/>
        <files mask="lv_profiler_builtin.h"/>
        <files mask="lv_profiler_builtin_private.h"/>
        <files mask="lv_rb.h"/>
        <files mask="lv_rb_private.h"/>
        <files mask="lv_style.h"/>
        <files mask="lv_style_gen.h"/>
        <files mask="lv_style_private.h"/>
        <files mask="lv_templ.h"/>
        <files mask="lv_text.h"/>
        <files mask="lv_text_ap.h"/>
        <files mask="lv_text_private.h"/>
        <files mask="lv_timer.h"/>
        <files mask="lv_timer_private.h"/>
        <files mask="lv_types.h"/>
        <files mask="lv_utils.h"/>
      </source>
      <source relative_path="src/osal" type="c_include">
        <files mask="lv_cmsis_rtos2.h"/>
        <files mask="lv_freertos.h"/>
        <files mask="lv_mqx.h"/>
        <files mask="lv_os.h"/>
        <files mask="lv_os_none.h"/>
        <files mask="lv_os_private.h"/>
        <files mask="lv_pthread.h"/>
        <files mask="lv_rtthread.h"/>
        <files mask="lv_windows.h"/>
      </source>
      <source relative_path="src/others/file_explorer" type="c_include">
        <files mask="lv_file_explorer.h"/>
        <files mask="lv_file_explorer_private.h"/>
      </source>
      <source relative_path="src/others/fragment" type="c_include">
        <files mask="lv_fragment.h"/>
        <files mask="lv_fragment_private.h"/>
      </source>
      <source relative_path="src/others/gridnav" type="c_include">
        <files mask="lv_gridnav.h"/>
      </source>
      <source relative_path="src/others/ime" type="c_include">
        <files mask="lv_ime_pinyin.h"/>
        <files mask="lv_ime_pinyin_private.h"/>
      </source>
      <source relative_path="src/others/imgfont" type="c_include">
        <files mask="lv_imgfont.h"/>
      </source>
      <source relative_path="src/others/monkey" type="c_include">
        <files mask="lv_monkey.h"/>
        <files mask="lv_monkey_private.h"/>
      </source>
      <source relative_path="src/others/observer" type="c_include">
        <files mask="lv_observer.h"/>
        <files mask="lv_observer_private.h"/>
      </source>
      <source relative_path="src/others/snapshot" type="c_include">
        <files mask="lv_snapshot.h"/>
      </source>
      <source relative_path="src/others/sysmon" type="c_include">
        <files mask="lv_sysmon.h"/>
        <files mask="lv_sysmon_private.h"/>
      </source>
      <source relative_path="src/others/vg_lite_tvg" type="c_include">
        <files mask="vg_lite.h"/>
      </source>
      <source relative_path="src/stdlib/builtin" type="c_include">
        <files mask="lv_tlsf.h"/>
        <files mask="lv_tlsf_private.h"/>
      </source>
      <source relative_path="src/stdlib" type="c_include">
        <files mask="lv_mem.h"/>
        <files mask="lv_mem_private.h"/>
        <files mask="lv_sprintf.h"/>
        <files mask="lv_string.h"/>
      </source>
      <source relative_path="src/themes/default" type="c_include">
        <files mask="lv_theme_default.h"/>
      </source>
      <source relative_path="src/themes" type="c_include">
        <files mask="lv_theme.h"/>
        <files mask="lv_theme_private.h"/>
      </source>
      <source relative_path="src/themes/mono" type="c_include">
        <files mask="lv_theme_mono.h"/>
      </source>
      <source relative_path="src/themes/simple" type="c_include">
        <files mask="lv_theme_simple.h"/>
      </source>
      <source relative_path="src/tick" type="c_include">
        <files mask="lv_tick.h"/>
        <files mask="lv_tick_private.h"/>
      </source>
      <source relative_path="src/widgets/animimage" type="c_include">
        <files mask="lv_animimage.h"/>
        <files mask="lv_animimage_private.h"/>
      </source>
      <source relative_path="src/widgets/arc" type="c_include">
        <files mask="lv_arc.h"/>
        <files mask="lv_arc_private.h"/>
      </source>
      <source relative_path="src/widgets/bar" type="c_include">
        <files mask="lv_bar.h"/>
        <files mask="lv_bar_private.h"/>
      </source>
      <source relative_path="src/widgets/button" type="c_include">
        <files mask="lv_button.h"/>
        <files mask="lv_button_private.h"/>
      </source>
      <source relative_path="src/widgets/buttonmatrix" type="c_include">
        <files mask="lv_buttonmatrix.h"/>
        <files mask="lv_buttonmatrix_private.h"/>
      </source>
      <source relative_path="src/widgets/calendar" type="c_include">
        <files mask="lv_calendar.h"/>
        <files mask="lv_calendar_chinese.h"/>
        <files mask="lv_calendar_chinese_private.h"/>
        <files mask="lv_calendar_header_arrow.h"/>
        <files mask="lv_calendar_header_dropdown.h"/>
        <files mask="lv_calendar_private.h"/>
      </source>
      <source relative_path="src/widgets/canvas" type="c_include">
        <files mask="lv_canvas.h"/>
        <files mask="lv_canvas_private.h"/>
      </source>
      <source relative_path="src/widgets/carousel" type="c_include">
        <files mask="lv_carousel.h"/>
        <files mask="lv_carousel_private.h"/>
      </source>
      <source relative_path="src/widgets/chart" type="c_include">
        <files mask="lv_chart.h"/>
        <files mask="lv_chart_private.h"/>
      </source>
      <source relative_path="src/widgets/checkbox" type="c_include">
        <files mask="lv_checkbox.h"/>
        <files mask="lv_checkbox_private.h"/>
      </source>
      <source relative_path="src/widgets/dropdown" type="c_include">
        <files mask="lv_dropdown.h"/>
        <files mask="lv_dropdown_private.h"/>
      </source>
      <source relative_path="src/widgets/image" type="c_include">
        <files mask="lv_image.h"/>
        <files mask="lv_image_private.h"/>
      </source>
      <source relative_path="src/widgets/imagebutton" type="c_include">
        <files mask="lv_imagebutton.h"/>
        <files mask="lv_imagebutton_private.h"/>
      </source>
      <source relative_path="src/widgets/keyboard" type="c_include">
        <files mask="lv_keyboard.h"/>
        <files mask="lv_keyboard_private.h"/>
      </source>
      <source relative_path="src/widgets/label" type="c_include">
        <files mask="lv_label.h"/>
        <files mask="lv_label_private.h"/>
      </source>
      <source relative_path="src/widgets/led" type="c_include">
        <files mask="lv_led.h"/>
        <files mask="lv_led_private.h"/>
      </source>
      <source relative_path="src/widgets/line" type="c_include">
        <files mask="lv_line.h"/>
        <files mask="lv_line_private.h"/>
      </source>
      <source relative_path="src/widgets/list" type="c_include">
        <files mask="lv_list.h"/>
      </source>
      <source relative_path="src/widgets/lottie" type="c_include">
        <files mask="lv_lottie.h"/>
        <files mask="lv_lottie_private.h"/>
      </source>
      <source relative_path="src/widgets/menu" type="c_include">
        <files mask="lv_menu.h"/>
        <files mask="lv_menu_private.h"/>
      </source>
      <source relative_path="src/widgets/msgbox" type="c_include">
        <files mask="lv_msgbox.h"/>
        <files mask="lv_msgbox_private.h"/>
      </source>
      <source relative_path="src/widgets/objx_templ" type="c_include">
        <files mask="lv_objx_templ.h"/>
      </source>
      <source relative_path="src/widgets/roller" type="c_include">
        <files mask="lv_roller.h"/>
        <files mask="lv_roller_private.h"/>
      </source>
      <source relative_path="src/widgets/scale" type="c_include">
        <files mask="lv_scale.h"/>
        <files mask="lv_scale_private.h"/>
      </source>
      <source relative_path="src/widgets/slider" type="c_include">
        <files mask="lv_slider.h"/>
        <files mask="lv_slider_private.h"/>
      </source>
      <source relative_path="src/widgets/span" type="c_include">
        <files mask="lv_span.h"/>
        <files mask="lv_span_private.h"/>
      </source>
      <source relative_path="src/widgets/spinbox" type="c_include">
        <files mask="lv_spinbox.h"/>
        <files mask="lv_spinbox_private.h"/>
      </source>
      <source relative_path="src/widgets/spinner" type="c_include">
        <files mask="lv_spinner.h"/>
      </source>
      <source relative_path="src/widgets/switch" type="c_include">
        <files mask="lv_switch.h"/>
        <files mask="lv_switch_private.h"/>
      </source>
      <source relative_path="src/widgets/table" type="c_include">
        <files mask="lv_table.h"/>
        <files mask="lv_table_private.h"/>
      </source>
      <source relative_path="src/widgets/tabview" type="c_include">
        <files mask="lv_tabview.h"/>
        <files mask="lv_tabview_private.h"/>
      </source>
      <source relative_path="src/widgets/textarea" type="c_include">
        <files mask="lv_textarea.h"/>
        <files mask="lv_textarea_private.h"/>
      </source>
      <source relative_path="src/widgets/tileview" type="c_include">
        <files mask="lv_tileview.h"/>
        <files mask="lv_tileview_private.h"/>
      </source>
      <source relative_path="src/widgets/win" type="c_include">
        <files mask="lv_win.h"/>
        <files mask="lv_win_private.h"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_conf_template.h"/>
        <files mask="lv_version.h"/>
        <files mask="lvgl.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="src/draw/nxp/vglite" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="src/draw/nxp/vglite" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.benchmark.MIMXRT595S" name="LVGL benchamrk demo" brief="LVGL benchmark demo" version="9.2.1" full_name="LVGL benchark demo" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/benchmark" project_base_path="lvgl/demos/benchmark">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_benchmark.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_benchmark.h"/>
      </source>
      <source relative_path="assets" type="src">
        <files mask="img_benchmark_avatar.c"/>
        <files mask="img_benchmark_cogwheel_alpha256.c"/>
        <files mask="img_benchmark_cogwheel_argb.c"/>
        <files mask="img_benchmark_cogwheel_indexed16.c"/>
        <files mask="img_benchmark_cogwheel_rgb.c"/>
        <files mask="lv_font_benchmark_montserrat_12_compr_az.c.c"/>
        <files mask="lv_font_benchmark_montserrat_16_compr_az.c.c"/>
        <files mask="lv_font_benchmark_montserrat_28_compr_az.c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_benchmark.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="assets" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="assets" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.common.MIMXRT595S" name="LVGL demo common" brief="LVGL demo common" version="9.2.1" full_name="LVGL demo common" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos" project_base_path="lvgl/demos">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demos.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demos.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_common.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.transform.MIMXRT595S" name="LVGL demo transform" brief="LVGL demo transform" version="9.2.1" full_name="LVGL demo transform" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/transform" project_base_path="lvgl/demos/transform">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_transform.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_transform.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_transform.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.multilang.MIMXRT595S" name="LVGL demo multilang" brief="LVGL demo multilang" version="9.2.1" full_name="LVGL demo multilang" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/multilang" project_base_path="lvgl/demos/multilang">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_multilang.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_multilang.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_multilang.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.flex_layout.MIMXRT595S" name="LVGL demo flex_layout" brief="LVGL demo flex_layout" version="9.2.1" full_name="LVGL demo flex_layout" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/flex_layout" project_base_path="lvgl/demos/flex_layout">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_flex_layout_ctrl_pad.c"/>
        <files mask="lv_demo_flex_layout_flex_loader.c"/>
        <files mask="lv_demo_flex_layout_main.c"/>
        <files mask="lv_demo_flex_layout_view.c"/>
        <files mask="lv_demo_flex_layout_view_child_node.c"/>
        <files mask="lv_demo_flex_layout_view_ctrl_pad.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_flex_layout.h"/>
        <files mask="lv_demo_flex_layout_main.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_flex_layout.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.scroll.MIMXRT595S" name="LVGL demo scroll" brief="LVGL demo scroll" version="9.2.1" full_name="LVGL demo scroll" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/scroll" project_base_path="lvgl/demos/scroll">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_scroll.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_scroll.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_scroll.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.music.MIMXRT595S" name="LVGL demo music" brief="LVGL demo music" version="9.2.1" full_name="LVGL demo music" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/music" project_base_path="lvgl/demos/music">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_music.c"/>
        <files mask="lv_demo_music_list.c"/>
        <files mask="lv_demo_music_main.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_music.h"/>
        <files mask="lv_demo_music_list.h"/>
        <files mask="lv_demo_music_main.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_music.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.keypad_encoder.MIMXRT595S" name="LVGL demo keypad_encoder" brief="LVGL demo keypad_encoder" version="9.2.1" full_name="LVGL demo keypad_encoder" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/keypad_encoder" project_base_path="lvgl/demos/keypad_encoder">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_keypad_encoder.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_keypad_encoder.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_keypad_encoder.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.stress.MIMXRT595S" name="LVGL stress demo" brief="LVGL stress demo" version="9.2.1" full_name="LVGL stress demo" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/stress" project_base_path="lvgl/demos/stress">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT595S"/>
          <component_dependency value="middleware.lvgl.demo.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_stress.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_stress.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_stress.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.lvgl.demo.widgets.MIMXRT595S" name="LVGL widgets demo" brief="LVGL widgets demo" version="9.2.1" full_name="LVGL  demo" category="Graphics/lvgl graphics library" user_visible="false" type="other" package_base_path="middleware/lvgl/demos/widgets" project_base_path="lvgl/demos/widgets">
      <defines>
        <define name="LV_CONF_INCLUDE_SIMPLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.lvgl.MIMXRT595S"/>
          <component_dependency value="middleware.lvgl.demo.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="lv_demo_widgets.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="lv_demo_widgets.h"/>
      </source>
      <source relative_path="assets" type="src">
        <files mask="img_clothes.c"/>
        <files mask="img_demo_widgets_avatar.c"/>
        <files mask="img_demo_widgets_needle.c"/>
        <files mask="img_lvgl_logo.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_lvgl_demo_widgets.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="assets" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="assets" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.llhttp.MIMXRT595S" name="llhttp" brief="HTTP parser in LLVM IR" version="6.0.5" full_name="llhttp" category="AWS IoT/llhttp" user_visible="true" type="middleware" package_base_path="middleware/llhttp" project_base_path="llhttp">
      <dependencies>
        <all>
          <component_dependency value="utility.debug_console.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="include" type="c_include">
        <files mask="llhttp.h"/>
      </source>
      <source relative_path="src" type="src">
        <files mask="api.c"/>
        <files mask="http.c"/>
        <files mask="llhttp.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_llhttp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.MIMXRT595S" name="FreeMASTER driver common files" brief="Common FreeMASTER driver code." version="3.0.7" full_name="FreeMASTER communication driver common code" category="FreeMASTER/FreeMASTER Driver" user_visible="true" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="middleware.fmstr.platform_56f800e.MIMXRT595S"/>
            <component_dependency value="middleware.fmstr.platform_gen32le.MIMXRT595S"/>
            <component_dependency value="middleware.fmstr.platform_pa32.MIMXRT595S"/>
            <component_dependency value="middleware.fmstr.platform_s12z.MIMXRT595S"/>
            <component_dependency value="middleware.fmstr.platform_s32.MIMXRT595S"/>
          </any_of>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="src/common" type="c_include">
        <files mask="freemaster.h"/>
        <files mask="freemaster_defcfg.h"/>
        <files mask="freemaster_private.h"/>
        <files mask="freemaster_protocol.h"/>
        <files mask="freemaster_rec.h"/>
        <files mask="freemaster_tsa.h"/>
        <files mask="freemaster_ures.h"/>
        <files mask="freemaster_utils.h"/>
        <files mask="freemaster_can.h"/>
        <files mask="freemaster_serial.h"/>
        <files mask="freemaster_net.h"/>
      </source>
      <source relative_path="src/common" type="src">
        <files mask="freemaster_appcmd.c"/>
        <files mask="freemaster_pipes.c"/>
        <files mask="freemaster_protocol.c"/>
        <files mask="freemaster_rec.c"/>
        <files mask="freemaster_scope.c"/>
        <files mask="freemaster_tsa.c"/>
        <files mask="freemaster_ures.c"/>
        <files mask="freemaster_utils.c"/>
        <files mask="freemaster_can.c"/>
        <files mask="freemaster_sha.c"/>
        <files mask="freemaster_pdbdm.c"/>
        <files mask="freemaster_serial.c"/>
        <files mask="freemaster_net.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fmstr.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/common" type="c_include"/>
        <include_path relative_path="src/common" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.platform_gen32le.MIMXRT595S" name="FreeMASTER 32bit driver" brief="FreeMASTER driver code for 32bit platforms, enabling communication between FreeMASTER or FreeMASTER Lite tools and MCU application. Supports Serial, CAN, USB and BDM/JTAG physical interface." version="3.0.7" full_name="FreeMASTER communication driver for 32bit platforms" category="FreeMASTER/FreeMASTER Driver" user_visible="true" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <all>
          <component_dependency value="middleware.fmstr.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="src/platforms/gen32le" type="c_include">
        <files mask="freemaster_gen32le.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/can" type="src">
        <files mask="freemaster_flexcan.c"/>
        <files mask="freemaster_mscan.c"/>
        <files mask="freemaster_mcan.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/can" type="c_include">
        <files mask="freemaster_flexcan.h"/>
        <files mask="freemaster_mscan.h"/>
        <files mask="freemaster_mcan.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/serial" type="src">
        <files mask="freemaster_serial_uart.c"/>
        <files mask="freemaster_serial_lpsci.c"/>
        <files mask="freemaster_serial_lpuart.c"/>
        <files mask="freemaster_serial_usart.c"/>
        <files mask="freemaster_serial_miniusart.c"/>
        <files mask="freemaster_serial_usb.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/serial" type="c_include">
        <files mask="freemaster_serial_uart.h"/>
        <files mask="freemaster_serial_lpsci.h"/>
        <files mask="freemaster_serial_lpuart.h"/>
        <files mask="freemaster_serial_usart.h"/>
        <files mask="freemaster_serial_miniusart.h"/>
        <files mask="freemaster_serial_usb.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/network" type="src">
        <files mask="freemaster_net_segger_rtt.c"/>
        <files mask="freemaster_net_lwip_udp.c"/>
        <files mask="freemaster_net_lwip_tcp.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/network" type="c_include">
        <files mask="freemaster_net_segger_rtt.h"/>
        <files mask="freemaster_net_lwip_udp.h"/>
        <files mask="freemaster_net_lwip_tcp.h"/>
      </source>
      <source relative_path="src/template/gen32le" config="true" type="c_include">
        <files mask="freemaster_cfg.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fmstr_platform_gen32le.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/platforms/gen32le" type="c_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/can" type="c_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/serial" type="c_include"/>
        <include_path relative_path="src/template/gen32le" type="c_include"/>
        <include_path relative_path="src/platforms/gen32le" type="asm_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/can" type="asm_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/serial" type="asm_include"/>
        <include_path relative_path="src/template/gen32le" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.platform_56f800e.MIMXRT595S" name="FreeMASTER DSC driver" brief="FreeMASTER driver code for DSC platforms, enabling communication between FreeMASTER or FreeMASTER Lite tools and MCU application. Supports Serial, CAN, USB and BDM/JTAG physical interface." version="3.0.7" full_name="FreeMASTER communication driver for DSC platforms" category="FreeMASTER/FreeMASTER Driver" user_visible="true" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <all>
          <component_dependency value="middleware.fmstr.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="src/platforms/56f800e" type="c_include">
        <files mask="freemaster_56f800e.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/can" type="src">
        <files mask="freemaster_flexcan_dsc.c"/>
        <files mask="freemaster_mscan_dsc.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/can" type="c_include">
        <files mask="freemaster_flexcan_dsc.h"/>
        <files mask="freemaster_mscan_dsc.h"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/serial" type="src">
        <files mask="freemaster_serial_qsci.c"/>
        <files mask="freemaster_56f800e_eonce.c"/>
        <files mask="freemaster_serial_usb.c"/>
      </source>
      <source relative_path="src/drivers/mcuxsdk/serial" type="c_include">
        <files mask="freemaster_serial_qsci.h"/>
        <files mask="freemaster_56f800e_eonce.h"/>
        <files mask="freemaster_serial_usb.h"/>
      </source>
      <source relative_path="src/template/56f800e" config="true" type="c_include">
        <files mask="freemaster_cfg.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fmstr_platform_56f800e.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/platforms/56f800e" type="c_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/can" type="c_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/serial" type="c_include"/>
        <include_path relative_path="src/template/56f800e" type="c_include"/>
        <include_path relative_path="src/platforms/56f800e" type="asm_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/can" type="asm_include"/>
        <include_path relative_path="src/drivers/mcuxsdk/serial" type="asm_include"/>
        <include_path relative_path="src/template/56f800e" type="asm_include"/>
      </include_paths>
    </component>
    <!--<component id="middleware.fmstr.all_files.MIMXRT595S" name="FreeMASTER driver all files" version="3.0.7" package_base_path="middleware/freemaster" project_base_path="freemaster">
  <source relative_path="src/common" type="c_include">
    <files mask="freemaster.h"/>
    <files mask="freemaster_can.h"/>
    <files mask="freemaster_defcfg.h"/>
    <files mask="freemaster_net.h"/>
    <files mask="freemaster_private.h"/>
    <files mask="freemaster_protocol.h"/>
    <files mask="freemaster_rec.h"/>
    <files mask="freemaster_serial.h"/>
    <files mask="freemaster_tsa.h"/>
    <files mask="freemaster_ures.h"/>
    <files mask="freemaster_utils.h"/>
  </source>
  <source relative_path="src/common" type="src">
    <files mask="freemaster_appcmd.c"/>
    <files mask="freemaster_can.c"/>
    <files mask="freemaster_net.c"/>
    <files mask="freemaster_pdbdm.c"/>
    <files mask="freemaster_pipes.c"/>
    <files mask="freemaster_protocol.c"/>
    <files mask="freemaster_rec.c"/>
    <files mask="freemaster_scope.c"/>
    <files mask="freemaster_serial.c"/>
    <files mask="freemaster_sha.c"/>
    <files mask="freemaster_tsa.c"/>
    <files mask="freemaster_ures.c"/>
    <files mask="freemaster_utils.c"/>
  </source>
  <source relative_path="src/common" type="other">
    <files mask="freemaster_cfg.h.example"/>
  </source>
  <source relative_path="src/platforms/56f800e" type="c_include">
    <files mask="freemaster_56f800e.h"/>
  </source>
  <source relative_path="src/platforms/gen32be" type="c_include">
    <files mask="freemaster_gen32be.h"/>
  </source>
  <source relative_path="src/platforms/gen32le" type="c_include">
    <files mask="freemaster_gen32le.h"/>
  </source>
  <source relative_path="src/platforms/s12z" type="c_include">
    <files mask="freemaster_s12z.h"/>
  </source>
  <source relative_path="src/drivers" type="doc">
    <files mask="readme.txt"/>
  </source>
  <source relative_path="src/drivers/dreg/DSC" type="src">
    <files mask="freemaster_56f800e_eonce.c"/>
    <files mask="freemaster_56f800e_flexcan.c"/>
    <files mask="freemaster_56f800e_qsci.c"/>
  </source>
  <source relative_path="src/drivers/dreg/DSC" type="c_include">
    <files mask="freemaster_56f800e_eonce.h"/>
    <files mask="freemaster_56f800e_flexcan.h"/>
    <files mask="freemaster_56f800e_qsci.h"/>
  </source>
  <source relative_path="src/drivers/dreg/Kxx" type="src">
    <files mask="freemaster_kxx_uart.c"/>
  </source>
  <source relative_path="src/drivers/dreg/Kxx" type="c_include">
    <files mask="freemaster_kxx_uart.h"/>
  </source>
  <source relative_path="src/drivers/dreg/MPC" type="src">
    <files mask="freemaster_mpc574xp_linflex.c"/>
  </source>
  <source relative_path="src/drivers/dreg/MPC" type="c_include">
    <files mask="freemaster_mpc574xp_linflex.h"/>
  </source>
  <source relative_path="src/drivers/dreg/S12Z" type="src">
    <files mask="freemaster_s12z_mscan.c"/>
    <files mask="freemaster_s12z_sci.c"/>
  </source>
  <source relative_path="src/drivers/dreg/S12Z" type="c_include">
    <files mask="freemaster_s12z_mscan.h"/>
    <files mask="freemaster_s12z_sci.h"/>
  </source>
  <source relative_path="src/drivers/dreg/S32G" type="src">
    <files mask="freemaster_s32g274a_linflexd.c"/>
  </source>
  <source relative_path="src/drivers/dreg/S32G" type="c_include">
    <files mask="freemaster_s32g274a_linflexd.h"/>
  </source>
  <source relative_path="src/drivers/dreg/S32K" type="src">
    <files mask="freemaster_s32k144_lpuart.c"/>
    <files mask="freemaster_s32k3xx_lpuart.c"/>
  </source>
  <source relative_path="src/drivers/dreg/S32K" type="c_include">
    <files mask="freemaster_s32k144_lpuart.h"/>
    <files mask="freemaster_s32k3xx_lpuart.h"/>
  </source>
  <source relative_path="src/drivers/dreg/S32R" type="src">
    <files mask="freemaster_s32r45_linflexd.c"/>
  </source>
  <source relative_path="src/drivers/dreg/S32R" type="c_include">
    <files mask="freemaster_s32r45_linflexd.h"/>
  </source>
  <source relative_path="src/drivers/dreg/S32S" type="src">
    <files mask="freemaster_s32s247tv_linflexd.c"/>
  </source>
  <source relative_path="src/drivers/dreg/S32S" type="c_include">
    <files mask="freemaster_s32s247tv_linflexd.h"/>
  </source>
  <source relative_path="src/drivers/mcuxsdk/can" type="src">
    <files mask="freemaster_flexcan.c"/>
    <files mask="freemaster_flexcan_dsc.c"/>
    <files mask="freemaster_mcan.c"/>
    <files mask="freemaster_mscan.c"/>
    <files mask="freemaster_mscan_dsc.c"/>
  </source>
  <source relative_path="src/drivers/mcuxsdk/can" type="c_include">
    <files mask="freemaster_flexcan.h"/>
    <files mask="freemaster_flexcan_dsc.h"/>
    <files mask="freemaster_mcan.h"/>
    <files mask="freemaster_mscan.h"/>
    <files mask="freemaster_mscan_dsc.h"/>
  </source>
  <source relative_path="src/drivers/mcuxsdk/serial" type="src">
    <files mask="freemaster_56f800e_eonce.c"/>
    <files mask="freemaster_serial_lpsci.c"/>
    <files mask="freemaster_serial_lpuart.c"/>
    <files mask="freemaster_serial_miniusart.c"/>
    <files mask="freemaster_serial_qsci.c"/>
    <files mask="freemaster_serial_uart.c"/>
    <files mask="freemaster_serial_usart.c"/>
    <files mask="freemaster_serial_usb.c"/>
  </source>
  <source relative_path="src/drivers/mcuxsdk/serial" type="c_include">
    <files mask="freemaster_56f800e_eonce.h"/>
    <files mask="freemaster_serial_lpsci.h"/>
    <files mask="freemaster_serial_lpuart.h"/>
    <files mask="freemaster_serial_miniusart.h"/>
    <files mask="freemaster_serial_qsci.h"/>
    <files mask="freemaster_serial_uart.h"/>
    <files mask="freemaster_serial_usart.h"/>
    <files mask="freemaster_serial_usb.h"/>
  </source>
  <source relative_path="src/drivers/ampxsdk/uart/S32K1x" type="src">
    <files mask="freemaster_serial_lpuart.c"/>
  </source>
  <source relative_path="src/drivers/ampxsdk/uart/S32K1x" type="c_include">
    <files mask="freemaster_serial_lpuart.h"/>
  </source>
  <source relative_path="src/drivers/ampxsdk/can/S32K1x" type="src">
    <files mask="freemaster_flexcan.c"/>
  </source>
  <source relative_path="src/drivers/ampxsdk/can/S32K1x" type="c_include">
    <files mask="freemaster_flexcan.h"/>
  </source>
  <source relative_path="src/support/mcuxsdk_usb" type="src">
    <files mask="freemaster_usb.c"/>
    <files mask="freemaster_usb_device_descriptor.c"/>
  </source>
  <source relative_path="src/support/mcuxsdk_usb" type="c_include">
    <files mask="freemaster_usb.h"/>
    <files mask="freemaster_usb_device_descriptor.h"/>
    <files mask="usb_device_descriptor.h"/>
  </source>
  <source relative_path="src/support/mcuxsdk_usb" type="doc">
    <files mask="readme.txt"/>
  </source>
</component>-->
    <component id="middleware.fmstr.platform_s32.MIMXRT595S" name="FreeMASTER S32 driver" brief="FreeMASTER driver code for S32 platform." version="3.0.7" full_name="FreeMASTER communication driver for S32 platform" category="FreeMASTER/FreeMASTER Driver" user_visible="false" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <all>
          <component_dependency value="middleware.fmstr.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="src/platforms/gen32le" type="c_include">
        <files mask="freemaster_gen32le.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fmstr_platform_s32.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/platforms/gen32le" type="c_include"/>
        <include_path relative_path="src/platforms/gen32le" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.platform_pa32.MIMXRT595S" name="FreeMASTER Power Architecture driver" brief="FreeMASTER driver code for Power Architecture 32bit platform." version="3.0.7" full_name="FreeMASTER communication driver for Power Architecture 32bit platform" category="FreeMASTER/FreeMASTER Driver" user_visible="false" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <all>
          <component_dependency value="middleware.fmstr.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="src/platforms/gen32be" type="c_include">
        <files mask="freemaster_gen32be.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fmstr_platform_pa32.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/platforms/gen32be" type="c_include"/>
        <include_path relative_path="src/platforms/gen32be" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fmstr.platform_s12z.MIMXRT595S" name="FreeMASTER S12Z driver" brief="FreeMASTER driver code for S12Z platform." version="3.0.7" full_name="FreeMASTER communication driver for S12Z platform" category="FreeMASTER/FreeMASTER Driver" user_visible="false" type="middleware" package_base_path="middleware/freemaster" project_base_path="freemaster">
      <dependencies>
        <all>
          <component_dependency value="middleware.fmstr.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="src/platforms/s12z" type="c_include">
        <files mask="freemaster_s12z.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fmstr_platform_s12z.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="src/platforms/s12z" type="c_include"/>
        <include_path relative_path="src/platforms/s12z" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.mmc.MIMXRT595S" name="mmc" brief="FatFs_MMC" version="0.15.0" full_name="Fatfs MMC layer" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.MIMXRT595S"/>
          <component_dependency value="middleware.fatfs.template_mmc.MIMXRT595S"/>
          <component_dependency value="middleware.sdmmc.mmc.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_mmc_disk" type="src">
        <files mask="fsl_mmc_disk.c"/>
      </source>
      <source relative_path="source/fsl_mmc_disk" type="c_include">
        <files mask="fsl_mmc_disk.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_mmc.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_mmc_disk" type="c_include"/>
        <include_path relative_path="source/fsl_mmc_disk" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.ram.MIMXRT595S" name="ram" brief="FatFs_RAM" version="0.15.0" full_name="Fatfs RAM layer" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.MIMXRT595S"/>
          <component_dependency value="middleware.fatfs.template_ram.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_ram_disk" type="src">
        <files mask="fsl_ram_disk.c"/>
      </source>
      <source relative_path="source/fsl_ram_disk" type="c_include">
        <files mask="fsl_ram_disk.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_ram.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_ram_disk" type="c_include"/>
        <include_path relative_path="source/fsl_ram_disk" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.sd.MIMXRT595S" name="sd" brief="FatFs_SD" version="0.15.0" full_name="Fatfs SD layer" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.MIMXRT595S"/>
          <component_dependency value="middleware.fatfs.template_sd.MIMXRT595S"/>
          <component_dependency value="middleware.sdmmc.sd.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_sd_disk" type="src">
        <files mask="fsl_sd_disk.c"/>
      </source>
      <source relative_path="source/fsl_sd_disk" type="c_include">
        <files mask="fsl_sd_disk.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_sd.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_sd_disk" type="c_include"/>
        <include_path relative_path="source/fsl_sd_disk" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.sdspi.MIMXRT595S" name="sdspi" brief="FatFs_SDSPI" version="0.15.0" full_name="Fatfs SDSPI layer" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.MIMXRT595S"/>
          <component_dependency value="middleware.fatfs.template_sdspi.MIMXRT595S"/>
          <component_dependency value="middleware.sdmmc.sdspi.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_sdspi_disk" type="src">
        <files mask="fsl_sdspi_disk.c"/>
      </source>
      <source relative_path="source/fsl_sdspi_disk" type="c_include">
        <files mask="fsl_sdspi_disk.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_sdspi.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_sdspi_disk" type="c_include"/>
        <include_path relative_path="source/fsl_sdspi_disk" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.fatfs.usb.MIMXRT595S" name="usb" brief="FatFs_USB" version="0.15.0" full_name="Fatfs USB layer" category="File System/FAT File System" user_visible="true" type="middleware" package_base_path="middleware/fatfs" project_base_path="fatfs">
      <dependencies>
        <all>
          <component_dependency value="middleware.fatfs.MIMXRT595S"/>
          <component_dependency value="middleware.fatfs.template_usb.MIMXRT595S"/>
          <component_dependency value="middleware.usb.host_msd.MIMXRT595S"/>
          <component_dependency value="middleware.usb.host.stack.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source/fsl_usb_disk" type="c_include">
        <files mask="fsl_usb_disk.h"/>
      </source>
      <source condition="component.osa_bm.MIMXRT595S" relative_path="source/fsl_usb_disk" type="src">
        <files mask="fsl_usb_disk_bm.c"/>
      </source>
      <source condition="component.osa_free_rtos.MIMXRT595S" relative_path="source/fsl_usb_disk" type="src">
        <files mask="fsl_usb_disk_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_fatfs_usb.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/fsl_usb_disk" type="c_include"/>
        <include_path relative_path="source/fsl_usb_disk" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.emwin.MIMXRT595S" name="emwin" brief="emWin library" version="6.38" full_name="middleware emWin" category="Graphics/emWin graphics library" user_visible="true" type="middleware" package_base_path="middleware/emwin" project_base_path="emwin">
      <dependencies>
        <all>
          <component_dependency value="middleware.emwin.template.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source exclude="true" relative_path="./" type="doc">
        <files mask="ChangeLogKSDK.txt" hidden="true"/>
        <files mask="readme.txt" hidden="true"/>
      </source>
      <source relative_path="emWin_header" type="c_include">
        <files mask="AppWizard.h"/>
        <files mask="BUTTON.h"/>
        <files mask="BUTTON_Private.h"/>
        <files mask="CALENDAR.h"/>
        <files mask="CHECKBOX.h"/>
        <files mask="CHECKBOX_Private.h"/>
        <files mask="CHOOSECOLOR.h"/>
        <files mask="CHOOSEFILE.h"/>
        <files mask="DIALOG.h"/>
        <files mask="DIALOG_Type.h"/>
        <files mask="DROPDOWN.h"/>
        <files mask="DROPDOWN_Private.h"/>
        <files mask="EDIT.h"/>
        <files mask="EDIT_Private.h"/>
        <files mask="FRAMEWIN.h"/>
        <files mask="FRAMEWIN_Private.h"/>
        <files mask="GAUGE.h"/>
        <files mask="GAUGE_Private.h"/>
        <files mask="GRAPH.h"/>
        <files mask="GRAPH_Private.h"/>
        <files mask="GUI.h"/>
        <files mask="GUIDRV_BitPlains.h"/>
        <files mask="GUIDRV_DCache.h"/>
        <files mask="GUIDRV_DCache_Private.h"/>
        <files mask="GUIDRV_Dist.h"/>
        <files mask="GUIDRV_FlexColor.h"/>
        <files mask="GUIDRV_FlexColor_Private.h"/>
        <files mask="GUIDRV_IST3088.h"/>
        <files mask="GUIDRV_IST3088_Private.h"/>
        <files mask="GUIDRV_Lin.h"/>
        <files mask="GUIDRV_Lin_Opt_16.h"/>
        <files mask="GUIDRV_Lin_Opt_24.h"/>
        <files mask="GUIDRV_Lin_Opt_32.h"/>
        <files mask="GUIDRV_Lin_Opt_8.h"/>
        <files mask="GUIDRV_Lin_Private.h"/>
        <files mask="GUIDRV_NoOpt_1_8.h"/>
        <files mask="GUIDRV_Null.h"/>
        <files mask="GUIDRV_S1D13748.h"/>
        <files mask="GUIDRV_S1D13748_Private.h"/>
        <files mask="GUIDRV_S1D13781.h"/>
        <files mask="GUIDRV_S1D13781_Private.h"/>
        <files mask="GUIDRV_S1D15G00.h"/>
        <files mask="GUIDRV_SH_MEM.h"/>
        <files mask="GUIDRV_SH_MEM_Private.h"/>
        <files mask="GUIDRV_SLin.h"/>
        <files mask="GUIDRV_SLin_Private.h"/>
        <files mask="GUIDRV_SPage.h"/>
        <files mask="GUIDRV_SPage_Private.h"/>
        <files mask="GUIDRV_SSD1926.h"/>
        <files mask="GUIDRV_SSD1926_Private.h"/>
        <files mask="GUIDRV_Template.h"/>
        <files mask="GUIDRV_TemplateI.h"/>
        <files mask="GUIDRV_TemplateI_Private.h"/>
        <files mask="GUITDRV_ADS7846.h"/>
        <files mask="GUI_ARRAY.h"/>
        <files mask="GUI_ARRAY_Private.h"/>
        <files mask="GUI_BMP_Private.h"/>
        <files mask="GUI_ConfDefaults.h"/>
        <files mask="GUI_Debug.h"/>
        <files mask="GUI_FontIntern.h"/>
        <files mask="GUI_GCache_Private.h"/>
        <files mask="GUI_GIF_Private.h"/>
        <files mask="GUI_HOOK.h"/>
        <files mask="GUI_JPEG_Private.h"/>
        <files mask="GUI_Private.h"/>
        <files mask="GUI_Resource.h"/>
        <files mask="GUI_SIM_Win32.h"/>
        <files mask="GUI_SPRITE_Private.h"/>
        <files mask="GUI_SPY_Private.h"/>
        <files mask="GUI_SVG_Global.h"/>
        <files mask="GUI_SVG_NanoVG.h"/>
        <files mask="GUI_SVG_NemaVG.h"/>
        <files mask="GUI_SVG_OpenVG.h"/>
        <files mask="GUI_SVG_Private.h"/>
        <files mask="GUI_SVG_VGLite.h"/>
        <files mask="GUI_SetOrientation.h"/>
        <files mask="GUI_SetOrientationCX.h"/>
        <files mask="GUI_Type.h"/>
        <files mask="GUI_VNC.h"/>
        <files mask="GUI_Version.h"/>
        <files mask="GUI__BiDi2_Brackets_800.h"/>
        <files mask="GUI__BiDi2_Types_800.h"/>
        <files mask="Global.h"/>
        <files mask="HEADER.h"/>
        <files mask="HEADER_Private.h"/>
        <files mask="ICONVIEW.h"/>
        <files mask="ICONVIEW_Private.h"/>
        <files mask="IMAGE.h"/>
        <files mask="IMAGE_Private.h"/>
        <files mask="IP_FS.h"/>
        <files mask="JPEGConf.h"/>
        <files mask="KEYBOARD.h"/>
        <files mask="KEYBOARD_Private.h"/>
        <files mask="KNOB.h"/>
        <files mask="KNOB_Private.h"/>
        <files mask="LCD.h"/>
        <files mask="LCD_ConfDefaults.h"/>
        <files mask="LCD_Private.h"/>
        <files mask="LCD_Protected.h"/>
        <files mask="LCD_SIM.h"/>
        <files mask="LCD_X_8080_16.h"/>
        <files mask="LCD_X_8080_8.h"/>
        <files mask="LCD_X_I2C.h"/>
        <files mask="LCD_X_Serial_3Pin.h"/>
        <files mask="LISTBOX.h"/>
        <files mask="LISTBOX_Private.h"/>
        <files mask="LISTVIEW.h"/>
        <files mask="LISTVIEW_Private.h"/>
        <files mask="LISTWHEEL.h"/>
        <files mask="LISTWHEEL_Private.h"/>
        <files mask="MENU.h"/>
        <files mask="MENU_Private.h"/>
        <files mask="MESSAGEBOX.h"/>
        <files mask="MOVIE.h"/>
        <files mask="MOVIE_Private.h"/>
        <files mask="MULTIEDIT.h"/>
        <files mask="MULTIEDIT_Private.h"/>
        <files mask="MULTIPAGE.h"/>
        <files mask="MULTIPAGE_Private.h"/>
        <files mask="PROGBAR.h"/>
        <files mask="PROGBAR_Private.h"/>
        <files mask="QRCODE.h"/>
        <files mask="QRCODE_Private.h"/>
        <files mask="RADIO.h"/>
        <files mask="RADIO_Private.h"/>
        <files mask="ROTARY.h"/>
        <files mask="ROTARY_Private.h"/>
        <files mask="SCROLLBAR.h"/>
        <files mask="SCROLLBAR_Private.h"/>
        <files mask="SCROLLER.h"/>
        <files mask="SCROLLER_Private.h"/>
        <files mask="SEGGER.h"/>
        <files mask="SLIDER.h"/>
        <files mask="SLIDER_Private.h"/>
        <files mask="SPINBOX.h"/>
        <files mask="SPINBOX_Private.h"/>
        <files mask="SWIPELIST.h"/>
        <files mask="SWIPELIST_Private.h"/>
        <files mask="SWITCH.h"/>
        <files mask="SWITCH_Private.h"/>
        <files mask="TEXT.h"/>
        <files mask="TEXT_Private.h"/>
        <files mask="TICKER.h"/>
        <files mask="TICKER_Private.h"/>
        <files mask="TREEVIEW.h"/>
        <files mask="TREEVIEW_Private.h"/>
        <files mask="WHEEL.h"/>
        <files mask="WHEEL_Private.h"/>
        <files mask="WIDGET.h"/>
        <files mask="WIDGET_ID.h"/>
        <files mask="WINDOW_Private.h"/>
        <files mask="WM.h"/>
        <files mask="WM_GUI.h"/>
        <files mask="WM_Intern.h"/>
      </source>
      <source relative_path="emWin_Config" type="c_include">
        <files mask="GUIConf.h"/>
        <files mask="LCDConf.h"/>
      </source>
      <source toolchain="armgcc mcuxpresso" relative_path="emWin_library/ARMGCC" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="libemWin_M33.a"/>
      </source>
      <source toolchain="iar" relative_path="emWin_library/IAR" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="emWin_M33.a"/>
      </source>
      <source toolchain="mdk" relative_path="emWin_library/Keil" type="lib" device_cores="cm33_MIMXRT595S" dsp="true">
        <files mask="emWin_M33.lib"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_emwin.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="emWin_header" type="c_include"/>
        <include_path relative_path="emWin_Config" type="c_include"/>
      </include_paths>
    </component>
    <component id="middleware.cadence.nnlib_rt500_fusionf1.MIMXRT595S" name="nnlib_fusionf1_rt500" brief="DSP Neural Networks" version="4.1.0" full_name="Middleware nnlib fusionf1 rt500" category="DSP/Middleware nnlib" user_visible="false" type="middleware" package_base_path="middleware/cadence/nnlib" project_base_path="nnlib">
      <dependencies>
        <all>
          <component_dependency value="middleware.cadence.nnlib.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
          <device_core_dependency value="fusionf1_MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_cadence_nnlib_rt500_fusionf1.cmake" hidden="true"/>
      </source>
    </component>
    <component id="middleware.cadence.naturedsp_fusionf1.MIMXRT595S" name="naturedsp_fusionf1" brief="NatureDSP" version="1.2.0" full_name="NatureDSP FusionF1 library" category="Audio/NatureDSP" user_visible="false" type="middleware" package_base_path="middleware/cadence/naturedsp/fusionf1" project_base_path="naturedsp">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
          <device_core_dependency value="fusionf1_MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="include" type="c_include">
        <files mask="NatureDSP_Signal.h"/>
        <files mask="NatureDSP_types.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_cadence_naturedsp_fusionf1.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.cadence.multicore_xaf.MIMXRT595S" name="multicore-xaf" brief="DSP Audio Streamer" version="3.6.0" full_name="Middleware multicore-xaf libxa_af_hostless" category="Audio/DSP Audio Streamer" user_visible="false" type="middleware" package_base_path="middleware/cadence/multicore-xaf" project_base_path="multicore-xaf">
      <dependencies>
        <all>
          <device_dependency value="MIMXRT595S"/>
          <device_core_dependency value="fusionf1_MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="xa_af_hostless/algo/hifi-dpf/src" type="src">
        <files mask="rbtree.c"/>
        <files mask="xa-class-audio-codec.c"/>
        <files mask="xa-class-base.c"/>
        <files mask="xa-class-capturer.c"/>
        <files mask="xa-class-mimo-proc.c"/>
        <files mask="xa-class-mixer.c"/>
        <files mask="xa-class-renderer.c"/>
        <files mask="xf-core.c"/>
        <files mask="xf-io.c"/>
        <files mask="xf-ipc-if.c"/>
        <files mask="xf-ipi.c"/>
        <files mask="xf-isr.c"/>
        <files mask="xf-main.c"/>
        <files mask="xf-mem-ipc.c"/>
        <files mask="xf-mem.c"/>
        <files mask="xf-msg.c"/>
        <files mask="xf-msgq.c"/>
        <files mask="xf-sched.c"/>
      </source>
      <source relative_path="xa_af_hostless/algo/hifi-dpf/include" type="c_include">
        <files mask="xf-component.h"/>
        <files mask="xf-core.h"/>
        <files mask="xf-dp.h"/>
        <files mask="xf-dp_opcode.h"/>
        <files mask="xf-dp_proxy.h"/>
        <files mask="xf-flx-lock-if.h"/>
        <files mask="xf-io.h"/>
        <files mask="xf-mm.h"/>
        <files mask="xf-msg.h"/>
        <files mask="xf-plugin.h"/>
        <files mask="xf-probe.h"/>
        <files mask="xf-sched.h"/>
        <files mask="xf-timebase.h"/>
        <files mask="xf-trace.h"/>
      </source>
      <source relative_path="xa_af_hostless/algo/hifi-dpf/include/audio" type="c_include">
        <files mask="xa-class-base.h"/>
      </source>
      <source relative_path="xa_af_hostless/algo/hifi-dpf/include/lib" type="c_include">
        <files mask="rbtree.h"/>
      </source>
      <source relative_path="xa_af_hostless/algo/hifi-dpf/include/sys/xos-msgq" type="c_include">
        <files mask="xf-dp_config.h"/>
        <files mask="xf-dp_hal.h"/>
        <files mask="xf-dp_ipc.h"/>
        <files mask="xf-dp_runtime.h"/>
        <files mask="xf-dp_types.h"/>
        <files mask="xf-ipc-if.h"/>
        <files mask="xf-mem-ipc.h"/>
        <files mask="xf-mem.h"/>
        <files mask="xf-shmem.h"/>
        <files mask="xf-sys.h"/>
      </source>
      <source relative_path="xa_af_hostless/algo/hifi-dpf/include/sys/xos-msgq/iss" type="c_include">
        <files mask="xf-board.h"/>
      </source>
      <source relative_path="xa_af_hostless/algo/host-apf/src" type="src">
        <files mask="xaf-api.c"/>
        <files mask="xf-msgq1.c"/>
        <files mask="xf-proxy.c"/>
        <files mask="xf-trace.c"/>
      </source>
      <source relative_path="xa_af_hostless/algo/host-apf/include" type="c_include">
        <files mask="xaf-structs.h"/>
        <files mask="xaf-threads-priority.h"/>
        <files mask="xaf-version.h"/>
        <files mask="xf-opcode.h"/>
        <files mask="xf-proto.h"/>
        <files mask="xf-proxy.h"/>
        <files mask="xf.h"/>
      </source>
      <source relative_path="xa_af_hostless/algo/host-apf/include/sys/xos-msgq" type="c_include">
        <files mask="xf-config.h"/>
        <files mask="xf-hal.h"/>
        <files mask="xf-ipc.h"/>
        <files mask="xf-runtime.h"/>
        <files mask="xf-types.h"/>
      </source>
      <source relative_path="xa_af_hostless/algo/xa_af_hostless/include" type="c_include">
        <files mask="xa_af_hostless_definitions.h"/>
        <files mask="xa_api_defs.h"/>
        <files mask="xf-ap-dp-common.h"/>
        <files mask="xf-msgq-if.h"/>
      </source>
      <source relative_path="xa_af_hostless/include" type="c_include">
        <files mask="xaf-api.h"/>
        <files mask="xaf-config-user.h"/>
        <files mask="xf-debug.h"/>
      </source>
      <source relative_path="xa_af_hostless/include/audio" type="c_include">
        <files mask="xa-audio-decoder-api.h"/>
        <files mask="xa-capturer-api.h"/>
        <files mask="xa-mimo-proc-api.h"/>
        <files mask="xa-mixer-api.h"/>
        <files mask="xa-renderer-api.h"/>
        <files mask="xa_apicmd_standards.h"/>
        <files mask="xa_error_standards.h"/>
        <files mask="xa_memory_standards.h"/>
        <files mask="xa_type_def.h"/>
      </source>
      <source relative_path="xa_af_hostless/include/sysdeps/freertos/include" type="c_include">
        <files mask="osal-isr.h"/>
        <files mask="osal-msgq.h"/>
        <files mask="osal-thread.h"/>
        <files mask="osal-timer.h"/>
      </source>
      <source relative_path="xa_af_hostless/include/sysdeps/mc_ipc" type="c_include">
        <files mask="xf-mc-ipc.h"/>
      </source>
      <source relative_path="xa_af_hostless/include/sysdeps/xos/include" type="c_include">
        <files mask="osal-isr.h"/>
        <files mask="osal-msgq.h"/>
        <files mask="osal-thread.h"/>
        <files mask="osal-timer.h"/>
      </source>
      <source relative_path="xa_af_hostless/test/include" type="c_include">
        <files mask="host_fio.h"/>
        <files mask="xaf-app-threads-priority.h"/>
        <files mask="xaf-clk-test.h"/>
        <files mask="xaf-fio-test.h"/>
        <files mask="xaf-mem.h"/>
        <files mask="xaf-test.h"/>
        <files mask="xaf-utils-test.h"/>
      </source>
      <source relative_path="xa_af_hostless/test/include/audio" type="c_include">
        <files mask="xa-aec22-api.h"/>
        <files mask="xa-aec23-api.h"/>
        <files mask="xa-microspeech-frontend-api.h"/>
        <files mask="xa-microspeech-inference-api.h"/>
        <files mask="xa-mimo-mix-api.h"/>
        <files mask="xa-opus-decoder-api.h"/>
        <files mask="xa-opus-encoder-api.h"/>
        <files mask="xa-pcm-gain-api.h"/>
        <files mask="xa-pcm-split-api.h"/>
        <files mask="xa-pcm-stereo-api.h"/>
        <files mask="xa-person-detect-inference-api.h"/>
        <files mask="xa_amr_wb_dec_definitions.h"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins" type="c_include">
        <files mask="xa-gain-factor-event.h"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins" type="src">
        <files mask="xa-factory.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/cadence/aac_dec" type="src">
        <files mask="xa-aac-decoder.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/cadence/aec22" type="src">
        <files mask="xa-aec22.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/cadence/aec23" type="src">
        <files mask="xa-aec23.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/cadence/mixer" type="src">
        <files mask="xa-mixer.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/cadence/mp3_dec" type="src">
        <files mask="xa-mp3-decoder.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/cadence/mp3_enc" type="src">
        <files mask="xa-mp3-encoder.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/cadence/opus_dec" type="src">
        <files mask="opus_header.c"/>
        <files mask="xa-opus-decoder.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/cadence/opus_dec" type="c_include">
        <files mask="opus_header.h"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/cadence/opus_enc" type="src">
        <files mask="xa-opus-encoder.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/cadence/pcm_gain" type="src">
        <files mask="xa-pcm-gain.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/cadence/pcm_split" type="src">
        <files mask="xa-pcm-split.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/cadence/src-pp" type="src">
        <files mask="xa-src-pp.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/cadence/vorbis_dec" type="src">
        <files mask="xa-vorbis-decoder.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/nxp/capturer" type="src">
        <files mask="xa-capturer-dmic.c"/>
        <files mask="xa-capturer-i2s.c"/>
        <files mask="xa-capturer-pdm.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/nxp/pcm_stereo" type="src">
        <files mask="xa-pcm-stereo.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/nxp/renderer" type="src">
        <files mask="xa-renderer-sai.c"/>
        <files mask="xa-renderer.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/nxp/sbc_dec" type="src">
        <files mask="xa-sbc-decoder.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/nxp/sbc_enc" type="src">
        <files mask="xa-sbc-encoder.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/nxp/vit_pre_proc" type="src">
        <files mask="vit_pre_proc.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/nxp/vit_pre_proc" type="c_include">
        <files mask="vit_pre_proc.h"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/nxp/voice_seeker" type="src">
        <files mask="voice_seeker.c"/>
      </source>
      <source relative_path="xa_af_hostless/test/plugins/nxp/voice_seeker" type="c_include">
        <files mask="voice_seeker.h"/>
      </source>
      <source relative_path="xa_af_hostless/test/src" type="src">
        <files mask="xaf-fio-test.c"/>
        <files mask="xaf-mem-test.c"/>
      </source>
      <source relative_path="xa_af_hostless/xf_shared/include" type="c_include">
        <files mask="xf-shared.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_cadence_multicore_xaf.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="xa_af_hostless/algo/hifi-dpf/include" type="c_include"/>
        <include_path relative_path="xa_af_hostless/algo/hifi-dpf/include/audio" type="c_include"/>
        <include_path relative_path="xa_af_hostless/algo/hifi-dpf/include/lib" type="c_include"/>
        <include_path relative_path="xa_af_hostless/algo/hifi-dpf/include/sys/xos-msgq" type="c_include"/>
        <include_path relative_path="xa_af_hostless/algo/hifi-dpf/include/sys/xos-msgq/iss" type="c_include"/>
        <include_path relative_path="xa_af_hostless/algo/host-apf/include" type="c_include"/>
        <include_path relative_path="xa_af_hostless/algo/host-apf/include/sys/xos-msgq" type="c_include"/>
        <include_path relative_path="xa_af_hostless/algo/xa_af_hostless/include" type="c_include"/>
        <include_path relative_path="xa_af_hostless/include" type="c_include"/>
        <include_path relative_path="xa_af_hostless/include/audio" type="c_include"/>
        <include_path relative_path="xa_af_hostless/include/sysdeps/xos/include" type="c_include"/>
        <include_path relative_path="xa_af_hostless/include/sysdeps/mc_ipc" type="c_include"/>
        <include_path relative_path="xa_af_hostless/test/include" type="c_include"/>
        <include_path relative_path="xa_af_hostless/test/include/audio" type="c_include"/>
        <include_path relative_path="xa_af_hostless/test/plugins" type="c_include"/>
        <include_path relative_path="xa_af_hostless/test/plugins/nxp/vit_pre_proc" type="c_include"/>
        <include_path relative_path="xa_af_hostless/test/plugins/nxp/voice_seeker" type="c_include"/>
        <include_path relative_path="xa_af_hostless/xf_shared/include" type="c_include"/>
        <include_path relative_path="xa_af_hostless/algo/hifi-dpf/include" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/algo/hifi-dpf/include/audio" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/algo/hifi-dpf/include/lib" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/algo/hifi-dpf/include/sys/xos-msgq" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/algo/hifi-dpf/include/sys/xos-msgq/iss" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/algo/host-apf/include" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/algo/host-apf/include/sys/xos-msgq" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/algo/xa_af_hostless/include" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/include" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/include/audio" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/include/sysdeps/xos/include" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/include/sysdeps/mc_ipc" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/test/include" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/test/include/audio" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/test/plugins" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/test/plugins/nxp/vit_pre_proc" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/test/plugins/nxp/voice_seeker" type="asm_include"/>
        <include_path relative_path="xa_af_hostless/xf_shared/include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.cadence.codecs_fusionf1.MIMXRT595S" name="cadence.codecs_fusionf1" brief="DSP Audio Streamer FusionF1 codecs" version="1.0.0" full_name="DSP Audio Streamer FusionF1 codecs" category="Audio/FusionF1 codecs" user_visible="false" type="middleware" package_base_path="middleware/cadence/codecs" project_base_path="codecs">
      <dependencies>
        <all>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
          <device_core_dependency value="fusionf1_MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="aacplus_dec/fusionf1/lib" type="lib">
        <files mask="xa_aacplus_v2_dec.a" hidden="true"/>
      </source>
      <source relative_path="aacplus_dec/fusionf1" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="aacplus_dec/fusionf1/doc" type="doc">
        <files mask="HiFi-AAC-DecoderProgrammersGuide.pdf" hidden="true"/>
      </source>
      <source relative_path="aacplus_dec/fusionf1/include" type="c_include">
        <files mask="xa_apicmd_standards.h" hidden="true"/>
        <files mask="xa_error_handler.h" hidden="true"/>
        <files mask="xa_error_standards.h" hidden="true"/>
        <files mask="xa_memory_standards.h" hidden="true"/>
        <files mask="xa_type_def.h" hidden="true"/>
        <files mask="xa_apicmd_standards.h"/>
        <files mask="xa_error_handler.h"/>
        <files mask="xa_error_standards.h"/>
        <files mask="xa_memory_standards.h"/>
        <files mask="xa_type_def.h"/>
      </source>
      <source relative_path="aacplus_dec/fusionf1/include/aac_dec" type="c_include">
        <files mask="xa_aac_dec_api.h" hidden="true"/>
        <files mask="xa_aac_dec_api.h"/>
      </source>
      <source relative_path="aacplus_dec/fusionf1/test/build" type="other">
        <files mask="makefile_testbench_sample" hidden="true"/>
      </source>
      <source relative_path="aacplus_dec/fusionf1/test/build" type="doc">
        <files mask="paramfilesimple.txt" hidden="true"/>
        <files mask="paramfilesimple_loas.txt" hidden="true"/>
      </source>
      <source relative_path="aacplus_dec/fusionf1/test/src" type="src">
        <files mask="xa_aac_dec_error_handler.c" hidden="true"/>
        <files mask="xa_aac_dec_sample_testbench.c" hidden="true"/>
      </source>
      <source relative_path="aacplus_dec/fusionf1/test/test_inp" type="binary">
        <files mask="sample_loas.bin" hidden="true"/>
      </source>
      <source relative_path="aacplus_dec/fusionf1/test/test_inp" type="other">
        <files mask="thetest.adts" hidden="true"/>
      </source>
      <source relative_path="aacplus_dec/fusionf1/test/test_out" type="doc">
        <files mask="empty.txt" hidden="true"/>
      </source>
      <source relative_path="aacplus_dec/fusionf1/test/test_ref" type="other">
        <files mask="sample_loas.wav" hidden="true"/>
        <files mask="thetest.wav" hidden="true"/>
      </source>
      <source relative_path="asrc_src_pp/fusionf1" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="asrc_src_pp/fusionf1/doc" type="doc">
        <files mask="HiFi-ASRC-SRC-PP-ProgrammersGuide.pdf" hidden="true"/>
      </source>
      <source relative_path="asrc_src_pp/fusionf1/include" type="c_include">
        <files mask="xa_api_defs.h" hidden="true"/>
        <files mask="xa_apicmd_standards.h" hidden="true"/>
        <files mask="xa_error_handler.h" hidden="true"/>
        <files mask="xa_error_standards.h" hidden="true"/>
        <files mask="xa_memory_standards.h" hidden="true"/>
        <files mask="xa_type_def.h" hidden="true"/>
        <files mask="xa_api_defs.h"/>
        <files mask="xa_apicmd_standards.h"/>
        <files mask="xa_error_handler.h"/>
        <files mask="xa_error_standards.h"/>
        <files mask="xa_memory_standards.h"/>
        <files mask="xa_type_def.h"/>
      </source>
      <source relative_path="asrc_src_pp/fusionf1/include/src_pp" type="c_include">
        <files mask="xa_src_pp_api.h" hidden="true"/>
        <files mask="xa_src_pp_api.h"/>
      </source>
      <source relative_path="asrc_src_pp/fusionf1/test/build" type="other">
        <files mask="makefile_testbench_sample" hidden="true"/>
      </source>
      <source relative_path="asrc_src_pp/fusionf1/test/build" type="doc">
        <files mask="paramfile_src_pp.txt" hidden="true"/>
      </source>
      <source relative_path="asrc_src_pp/fusionf1/test/build" type="script">
        <files mask="test_common.mk" hidden="true"/>
        <files mask="test_common_win.mk" hidden="true"/>
      </source>
      <source relative_path="asrc_src_pp/fusionf1/test/src" type="src">
        <files mask="xa_src_pp_error_handler.c" hidden="true"/>
        <files mask="xa_src_pp_sample_testbench_hifi3.c" hidden="true"/>
        <files mask="xa_src_pp_waveio.c" hidden="true"/>
      </source>
      <source relative_path="asrc_src_pp/fusionf1/test/src" type="c_include">
        <files mask="xa_src_pp_waveio.h" hidden="true"/>
      </source>
      <source relative_path="asrc_src_pp/fusionf1/test/test_inp" type="other">
        <files mask="sinusoid_8960Hz_32kHz.wav" hidden="true"/>
      </source>
      <source relative_path="asrc_src_pp/fusionf1/test/test_out" type="doc">
        <files mask="empty.txt" hidden="true"/>
      </source>
      <source relative_path="asrc_src_pp/fusionf1/test/test_ref" type="other">
        <files mask="out_src_sinusoid_8960Hz_48kHz.wav" hidden="true"/>
        <files mask="out_src_sinusoid_8960Hz_48kHz_asrc.wav" hidden="true"/>
      </source>
      <source relative_path="mp3_dec/fusionf1" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="mp3_dec/fusionf1/doc" type="doc">
        <files mask="HiFi-MP3-DecoderProgrammersGuide.pdf" hidden="true"/>
      </source>
      <source relative_path="mp3_dec/fusionf1/include" type="c_include">
        <files mask="xa_apicmd_standards.h" hidden="true"/>
        <files mask="xa_error_handler.h" hidden="true"/>
        <files mask="xa_error_standards.h" hidden="true"/>
        <files mask="xa_memory_standards.h" hidden="true"/>
        <files mask="xa_type_def.h" hidden="true"/>
        <files mask="xa_apicmd_standards.h"/>
        <files mask="xa_error_handler.h"/>
        <files mask="xa_error_standards.h"/>
        <files mask="xa_memory_standards.h"/>
        <files mask="xa_type_def.h"/>
      </source>
      <source relative_path="mp3_dec/fusionf1/include/mp3_dec" type="c_include">
        <files mask="xa_mp3_dec_api.h" hidden="true"/>
        <files mask="xa_mp3_dec_api.h"/>
      </source>
      <source relative_path="mp3_dec/fusionf1/test/build" type="other">
        <files mask="makefile_testbench_sample" hidden="true"/>
      </source>
      <source relative_path="mp3_dec/fusionf1/test/build" type="doc">
        <files mask="ldscript_stream_data.txt" hidden="true"/>
        <files mask="paramfilesimple.txt" hidden="true"/>
      </source>
      <source relative_path="mp3_dec/fusionf1/test/include" type="c_include">
        <files mask="id3_tag_decode.h" hidden="true"/>
      </source>
      <source relative_path="mp3_dec/fusionf1/test/src" type="src">
        <files mask="id3_tag_decode.c" hidden="true"/>
        <files mask="stream_data.c" hidden="true"/>
        <files mask="xa_mp3_dec_error_handler.c" hidden="true"/>
        <files mask="xa_mp3_dec_sample_testbench.c" hidden="true"/>
      </source>
      <source relative_path="mp3_dec/fusionf1/test/test_inp" type="other">
        <files mask="compl.mp3" hidden="true"/>
        <files mask="hihat.mp3" hidden="true"/>
      </source>
      <source relative_path="mp3_dec/fusionf1/test/test_out" type="doc">
        <files mask="force_mkdir.txt" hidden="true"/>
      </source>
      <source relative_path="mp3_dec/fusionf1/test/test_ref" type="other">
        <files mask="hihat_16bit.wav" hidden="true"/>
      </source>
      <source relative_path="mp3_enc/fusionf1" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="mp3_enc/fusionf1/doc" type="doc">
        <files mask="HiFi-MP3-EncoderProgrammersGuide.pdf" hidden="true"/>
      </source>
      <source relative_path="mp3_enc/fusionf1/include" type="c_include">
        <files mask="xa_apicmd_standards.h" hidden="true"/>
        <files mask="xa_error_handler.h" hidden="true"/>
        <files mask="xa_error_standards.h" hidden="true"/>
        <files mask="xa_memory_standards.h" hidden="true"/>
        <files mask="xa_type_def.h" hidden="true"/>
        <files mask="xa_apicmd_standards.h"/>
        <files mask="xa_error_handler.h"/>
        <files mask="xa_error_standards.h"/>
        <files mask="xa_memory_standards.h"/>
        <files mask="xa_type_def.h"/>
      </source>
      <source relative_path="mp3_enc/fusionf1/include/mp3_enc" type="c_include">
        <files mask="xa_mp3_enc_api.h" hidden="true"/>
        <files mask="xa_mp3_enc_api.h"/>
      </source>
      <source relative_path="mp3_enc/fusionf1/test/build" type="other">
        <files mask="makefile_testbench_sample" hidden="true"/>
      </source>
      <source relative_path="mp3_enc/fusionf1/test/build" type="doc">
        <files mask="paramfilesimple.txt" hidden="true"/>
      </source>
      <source relative_path="mp3_enc/fusionf1/test/include" type="c_include">
        <files mask="xa_mp3_enc_error.h" hidden="true"/>
      </source>
      <source relative_path="mp3_enc/fusionf1/test/src" type="src">
        <files mask="xa_mp3_enc_error_handler.c" hidden="true"/>
        <files mask="xa_mp3_enc_sample_testbench.c" hidden="true"/>
      </source>
      <source relative_path="mp3_enc/fusionf1/test/test_inp" type="other">
        <files mask="hihat.wav" hidden="true"/>
      </source>
      <source relative_path="mp3_enc/fusionf1/test/test_out" type="doc">
        <files mask="force_mkdir.txt" hidden="true"/>
      </source>
      <source relative_path="mp3_enc/fusionf1/test/test_ref" type="other">
        <files mask="hihat_128.mp3" hidden="true"/>
      </source>
      <source relative_path="opus/fusionf1" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="opus/fusionf1/doc" type="doc">
        <files mask="HiFi-OPUS-CodecProgrammersGuide.pdf" hidden="true"/>
      </source>
      <source relative_path="opus/fusionf1/include" type="c_include">
        <files mask="xa_error_handler.h" hidden="true"/>
        <files mask="xa_error_standards.h" hidden="true"/>
        <files mask="xa_type_def.h" hidden="true"/>
        <files mask="xa_error_handler.h"/>
        <files mask="xa_error_standards.h"/>
        <files mask="xa_type_def.h"/>
      </source>
      <source relative_path="opus/fusionf1/include/opus_codec" type="c_include">
        <files mask="xa_opus_codec_api.h" hidden="true"/>
        <files mask="xa_opus_codec_api.h"/>
      </source>
      <source relative_path="opus/fusionf1/include/ogg_lib" type="c_include">
        <files mask="xa_ogg_lib_api.h" hidden="true"/>
        <files mask="xa_ogg_lib_api.h"/>
      </source>
      <source relative_path="opus/fusionf1/test/build" type="other">
        <files mask="makefile_testbench_sample" hidden="true"/>
      </source>
      <source relative_path="opus/fusionf1/test/build" type="doc">
        <files mask="paramfilesimple_decode.txt" hidden="true"/>
        <files mask="paramfilesimple_decode_celt.txt" hidden="true"/>
        <files mask="paramfilesimple_decode_silk.txt" hidden="true"/>
        <files mask="paramfilesimple_encode.txt" hidden="true"/>
        <files mask="paramfilesimple_encode_celt.txt" hidden="true"/>
        <files mask="paramfilesimple_encode_silk.txt" hidden="true"/>
      </source>
      <source relative_path="opus/fusionf1/test/include" type="c_include">
        <files mask="opus_header.h" hidden="true"/>
        <files mask="xa_profiler.h" hidden="true"/>
      </source>
      <source relative_path="opus/fusionf1/test/src" type="src">
        <files mask="opus_header.c" hidden="true"/>
        <files mask="xa_common_error_handler.c" hidden="true"/>
        <files mask="xa_ogg_lib_error_handler.c" hidden="true"/>
        <files mask="xa_opus_codec_error_handler.c" hidden="true"/>
        <files mask="xa_opus_decoder_sample_testbench.c" hidden="true"/>
        <files mask="xa_opus_encoder_sample_testbench.c" hidden="true"/>
      </source>
      <source relative_path="opus/fusionf1/test/test_inp" type="other">
        <files mask="opus51_trim.webm.ogg" hidden="true"/>
        <files mask="testvector04.bit" hidden="true"/>
        <files mask="testvector04.bit.opus" hidden="true"/>
        <files mask="testvector04_trim.bit" hidden="true"/>
        <files mask="testvector11-16000-1ch.out" hidden="true"/>
        <files mask="testvector11-16000-1ch_trim.out" hidden="true"/>
        <files mask="testvector11-16kHz-1ch-20kbps_trim.bit" hidden="true"/>
        <files mask="testvector11-48000-2ch.out" hidden="true"/>
        <files mask="testvector11-48000-2ch_trim.out" hidden="true"/>
        <files mask="testvector11-48kHz-2ch-128kbps_trim.bit" hidden="true"/>
      </source>
      <source relative_path="opus/fusionf1/test/test_out" type="doc">
        <files mask="empty.txt" hidden="true"/>
      </source>
      <source relative_path="opus/fusionf1/test/test_ref" type="other">
        <files mask="opus51_trim-48000-6ch.out" hidden="true"/>
        <files mask="opus51_trim-48000-6ch_celt.out" hidden="true"/>
        <files mask="testvector04-48000-2ch-ogg-opus.out" hidden="true"/>
        <files mask="testvector04-48000-2ch.out" hidden="true"/>
        <files mask="testvector04-48000-2ch_trim.out" hidden="true"/>
        <files mask="testvector11-16000-1ch_trim.out" hidden="true"/>
        <files mask="testvector11-16kHz-1ch-20kbps.bit" hidden="true"/>
        <files mask="testvector11-16kHz-1ch-20kbps_trim.bit" hidden="true"/>
        <files mask="testvector11-16kHz-1ch-20kbps_trim_silk.bit" hidden="true"/>
        <files mask="testvector11-48kHz-2ch-128kbps.bit" hidden="true"/>
        <files mask="testvector11-48kHz-2ch-128kbps_trim.bit" hidden="true"/>
        <files mask="testvector11-48kHz-2ch-128kbps_trim.out" hidden="true"/>
        <files mask="testvector11-48kHz-2ch-128kbps_trim_celt.bit" hidden="true"/>
      </source>
      <source relative_path="sbc_dec/fusionf1" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="sbc_dec/fusionf1/doc" type="doc">
        <files mask="HiFi-SBC-DecoderProgrammersGuide.pdf" hidden="true"/>
      </source>
      <source relative_path="sbc_dec/fusionf1/include" type="c_include">
        <files mask="xa_apicmd_standards.h" hidden="true"/>
        <files mask="xa_error_handler.h" hidden="true"/>
        <files mask="xa_error_standards.h" hidden="true"/>
        <files mask="xa_memory_standards.h" hidden="true"/>
        <files mask="xa_type_def.h" hidden="true"/>
        <files mask="xa_apicmd_standards.h"/>
        <files mask="xa_error_handler.h"/>
        <files mask="xa_error_standards.h"/>
        <files mask="xa_memory_standards.h"/>
        <files mask="xa_type_def.h"/>
      </source>
      <source relative_path="sbc_dec/fusionf1/include/sbc_dec" type="c_include">
        <files mask="xa_sbc_dec_api.h" hidden="true"/>
        <files mask="xa_sbc_dec_api.h"/>
      </source>
      <source relative_path="sbc_dec/fusionf1/test/build" type="other">
        <files mask="makefile_testbench_sample" hidden="true"/>
      </source>
      <source relative_path="sbc_dec/fusionf1/test/build" type="doc">
        <files mask="paramfilesimple_sbc_dec.txt" hidden="true"/>
      </source>
      <source relative_path="sbc_dec/fusionf1/test/src" type="src">
        <files mask="xa_sbc_dec_error_handler.c" hidden="true"/>
        <files mask="xa_sbc_dec_sample_testbench.c" hidden="true"/>
      </source>
      <source relative_path="sbc_dec/fusionf1/test/test_inp" type="other">
        <files mask="sbc_test_02.sbc" hidden="true"/>
      </source>
      <source relative_path="sbc_dec/fusionf1/test/test_out" type="doc">
        <files mask="placeholder.txt" hidden="true"/>
      </source>
      <source relative_path="sbc_dec/fusionf1/test/test_ref" type="other">
        <files mask="sbc_test_02.wav" hidden="true"/>
      </source>
      <source relative_path="sbc_enc/fusionf1" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="sbc_enc/fusionf1/doc" type="doc">
        <files mask="HiFi-SBC-EncoderProgrammersGuide.pdf" hidden="true"/>
      </source>
      <source relative_path="sbc_enc/fusionf1/include" type="c_include">
        <files mask="xa_apicmd_standards.h" hidden="true"/>
        <files mask="xa_error_handler.h" hidden="true"/>
        <files mask="xa_error_standards.h" hidden="true"/>
        <files mask="xa_memory_standards.h" hidden="true"/>
        <files mask="xa_type_def.h" hidden="true"/>
        <files mask="xa_apicmd_standards.h"/>
        <files mask="xa_error_handler.h"/>
        <files mask="xa_error_standards.h"/>
        <files mask="xa_memory_standards.h"/>
        <files mask="xa_type_def.h"/>
      </source>
      <source relative_path="sbc_enc/fusionf1/include/sbc_enc" type="c_include">
        <files mask="xa_sbc_enc_api.h" hidden="true"/>
        <files mask="xa_sbc_enc_api.h"/>
      </source>
      <source relative_path="sbc_enc/fusionf1/test/build" type="other">
        <files mask="makefile_testbench_sample" hidden="true"/>
      </source>
      <source relative_path="sbc_enc/fusionf1/test/build" type="doc">
        <files mask="paramfilesimple_sbc_enc.txt" hidden="true"/>
      </source>
      <source relative_path="sbc_enc/fusionf1/test/src" type="src">
        <files mask="xa_sbc_enc_error_handler.c" hidden="true"/>
        <files mask="xa_sbc_enc_sample_testbench.c" hidden="true"/>
      </source>
      <source relative_path="sbc_enc/fusionf1/test/test_inp" type="other">
        <files mask="hihat.wav" hidden="true"/>
      </source>
      <source relative_path="sbc_enc/fusionf1/test/test_out" type="doc">
        <files mask="placeholder.txt" hidden="true"/>
      </source>
      <source relative_path="sbc_enc/fusionf1/test/test_ref" type="other">
        <files mask="hihat.sbc" hidden="true"/>
      </source>
      <source relative_path="vorbis_dec/fusionf1" type="doc">
        <files mask="README.txt" hidden="true"/>
      </source>
      <source relative_path="vorbis_dec/fusionf1/doc" type="doc">
        <files mask="HiFi-Vorbis-DecoderProgrammersGuide.pdf" hidden="true"/>
      </source>
      <source relative_path="vorbis_dec/fusionf1/doc" type="other">
        <files mask="COPYING" hidden="true"/>
        <files mask="COPYING"/>
      </source>
      <source relative_path="vorbis_dec/fusionf1/include" type="c_include">
        <files mask="xa_apicmd_standards.h" hidden="true"/>
        <files mask="xa_error_handler.h" hidden="true"/>
        <files mask="xa_error_standards.h" hidden="true"/>
        <files mask="xa_memory_standards.h" hidden="true"/>
        <files mask="xa_type_def.h" hidden="true"/>
        <files mask="xa_apicmd_standards.h"/>
        <files mask="xa_error_handler.h"/>
        <files mask="xa_error_standards.h"/>
        <files mask="xa_memory_standards.h"/>
        <files mask="xa_type_def.h"/>
      </source>
      <source relative_path="vorbis_dec/fusionf1/include/vorbis_dec" type="c_include">
        <files mask="xa_vorbis_dec_api.h" hidden="true"/>
        <files mask="xa_vorbis_dec_api.h"/>
      </source>
      <source relative_path="vorbis_dec/fusionf1/test/build" type="other">
        <files mask="makefile_testbench_sample" hidden="true"/>
      </source>
      <source relative_path="vorbis_dec/fusionf1/test/build" type="doc">
        <files mask="parameter.txt" hidden="true"/>
      </source>
      <source relative_path="vorbis_dec/fusionf1/test/src" type="src">
        <files mask="xa_vorbis_dec_error_handler.c" hidden="true"/>
        <files mask="xa_vorbis_dec_test.c" hidden="true"/>
      </source>
      <source relative_path="vorbis_dec/fusionf1/test/test_inp" type="other">
        <files mask="hihat.ogg" hidden="true"/>
        <files mask="i9.vor" hidden="true"/>
      </source>
      <source relative_path="vorbis_dec/fusionf1/test/test_out" type="doc">
        <files mask="force_mkdir.txt" hidden="true"/>
      </source>
      <source relative_path="vorbis_dec/fusionf1/test/test_ref" type="other">
        <files mask="hihat.pcm" hidden="true"/>
        <files mask="i9.pcm" hidden="true"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_cadence_codecs_fusionf1.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="aacplus_dec/fusionf1/include/aac_dec" type="c_include"/>
        <include_path relative_path="asrc_src_pp/fusionf1/include/src_pp" type="c_include"/>
        <include_path relative_path="mp3_dec/fusionf1/include/mp3_dec" type="c_include"/>
        <include_path relative_path="mp3_enc/fusionf1/include/mp3_enc" type="c_include"/>
        <include_path relative_path="opus/fusionf1/include/opus_codec" type="c_include"/>
        <include_path relative_path="opus/fusionf1/include/ogg_lib" type="c_include"/>
        <include_path relative_path="sbc_dec/fusionf1/include/sbc_dec" type="c_include"/>
        <include_path relative_path="sbc_enc/fusionf1/include/sbc_enc" type="c_include"/>
        <include_path relative_path="vorbis_dec/fusionf1/include/vorbis_dec" type="c_include"/>
        <include_path relative_path="aacplus_dec/fusionf1/include/aac_dec" type="asm_include"/>
        <include_path relative_path="asrc_src_pp/fusionf1/include/src_pp" type="asm_include"/>
        <include_path relative_path="mp3_dec/fusionf1/include/mp3_dec" type="asm_include"/>
        <include_path relative_path="mp3_enc/fusionf1/include/mp3_enc" type="asm_include"/>
        <include_path relative_path="opus/fusionf1/include/opus_codec" type="asm_include"/>
        <include_path relative_path="opus/fusionf1/include/ogg_lib" type="asm_include"/>
        <include_path relative_path="sbc_dec/fusionf1/include/sbc_dec" type="asm_include"/>
        <include_path relative_path="sbc_enc/fusionf1/include/sbc_enc" type="asm_include"/>
        <include_path relative_path="vorbis_dec/fusionf1/include/vorbis_dec" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.aws_iot.ota.MIMXRT595S" name="ota-for-aws-iot-embedded-sdk" brief="Client library for using the AWS Over-the-air Update service on embedded devices." version="3.4.0" full_name="AWS IoT Over-the-air Update Library" category="AWS IoT/AWS IoT Over-the-air Update" user_visible="false" type="middleware" package_base_path="middleware/aws_iot/ota" project_base_path="aws_iot/ota">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos.corejson.MIMXRT595S"/>
          <component_dependency value="middleware.tinycbor.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="ota.c"/>
        <files mask="ota_base64.c"/>
        <files mask="ota_cbor.c"/>
        <files mask="ota_http.c"/>
        <files mask="ota_interface.c"/>
        <files mask="ota_mqtt.c"/>
      </source>
      <source relative_path="source/include" type="c_include">
        <files mask="ota.h"/>
        <files mask="ota_appversion32.h"/>
        <files mask="ota_base64_private.h"/>
        <files mask="ota_cbor_private.h"/>
        <files mask="ota_config_defaults.h"/>
        <files mask="ota_http_interface.h"/>
        <files mask="ota_http_private.h"/>
        <files mask="ota_interface_private.h"/>
        <files mask="ota_mqtt_interface.h"/>
        <files mask="ota_mqtt_private.h"/>
        <files mask="ota_os_interface.h"/>
        <files mask="ota_platform_interface.h"/>
        <files mask="ota_private.h"/>
      </source>
      <source relative_path="source/include" type="doc">
        <files mask="stdbool.readme"/>
        <files mask="stdint.readme"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_aws_iot_ota.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/include" type="c_include"/>
        <include_path relative_path="source/include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.aws_iot.ota.freertos.MIMXRT595S" name="ota-for-aws-iot-embedded-sdk - freertos" brief="Client library for using the AWS Over-the-air Update service on embedded devices. FreeRTOS port." version="3.4.0" full_name="ota-for-aws-iot-embedded-sdk - FreeRTOS" category="AWS IoT/AWS IoT Over-the-air Update" user_visible="false" type="middleware" package_base_path="middleware/aws_iot/ota" project_base_path="aws_iot/ota">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source/portable/os" type="src">
        <files mask="ota_os_freertos.c"/>
      </source>
      <source relative_path="source/portable/os" type="c_include">
        <files mask="ota_os_freertos.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_aws_iot_ota_freertos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/portable/os" type="c_include"/>
        <include_path relative_path="source/portable/os" type="asm_include"/>
      </include_paths>
    </component>
    <component id="docs.AWS.OTA.MIMXRT595S" name="doc_AWS_OTA" brief="Amazon FreeRTOS Over-The-Air documentation" version="1.0.0" full_name="AWS OTA documentation" category="docs/AWS IoT Over-the-air" user_visible="true" type="documentation" package_base_path="docs/AWS" project_base_path="AWS">
      <dependencies>
        <all>
          <component_dependency value="middleware.aws_iot.ota.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
    </component>
    <component id="middleware.aws_iot.jobs.MIMXRT595S" name="jobs-for-aws-iot-embedded-sdk" brief="Library for using the AWS IoT Jobs service on embedded devices." version="1.3.0" full_name="AWS IoT Jobs library" category="AWS IoT/AWS IoT Jobs" user_visible="false" type="middleware" package_base_path="middleware/aws_iot/jobs" project_base_path="aws_iot/jobs">
      <dependencies>
        <all>
          <component_dependency value="middleware.llhttp.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="jobs.c"/>
      </source>
      <source relative_path="source/include" type="c_include">
        <files mask="jobs.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_aws_iot_jobs.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/include" type="c_include"/>
        <include_path relative_path="source/include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.iot_reference.kvstore.MIMXRT595S" name="kvstore" brief="kvstore, IoT reference common example component" version="1.0.0" full_name="kvstore" category="AWS IoT/IoT Reference" user_visible="false" type="middleware" package_base_path="components/aws_iot/kvstore" project_base_path="aws_iot/kvstore">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="kvstore.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="kvstore.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_iot_reference_kvstore.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.iot_reference.logging.MIMXRT595S" name="logging" brief="logging, IoT reference common example component" version="1.0.0" full_name="logging" category="AWS IoT/IoT Reference" user_visible="true" type="middleware" package_base_path="components/aws_iot/logging" project_base_path="aws_iot/logging">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="logging.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="logging.h"/>
        <files mask="logging_levels.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_iot_reference_logging.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.iot_reference.mqtt_agent.MIMXRT595S" name="mqtt_agent" brief="mqtt_agent, IoT reference common example component" version="1.0.0" full_name="mqtt_agent" category="AWS IoT/IoT Reference" user_visible="true" type="middleware" package_base_path="components/aws_iot/mqtt_agent" project_base_path="aws_iot/mqtt_agent">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
          <component_dependency value="middleware.freertos.backoffalgorithm.MIMXRT595S"/>
          <component_dependency value="middleware.freertos.coremqtt-agent.MIMXRT595S"/>
          <component_dependency value="middleware.freertos.corepkcs11.MIMXRT595S"/>
          <component_dependency value="middleware.iot_reference.kvstore.MIMXRT595S"/>
          <component_dependency value="middleware.iot_reference.mqtt_agent_interface.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="mqtt_agent_task.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="mqtt_agent_task.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_iot_reference_mqtt_agent.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.iot_reference.mqtt_agent_interface.MIMXRT595S" name="mqtt-agent-interface" brief="mqtt-agent-interface, IoT reference common example component" version="1.0.0" full_name="mqtt-agent-interface" category="AWS IoT/IoT Reference" user_visible="false" type="middleware" package_base_path="components/aws_iot/mqtt-agent-interface" project_base_path="aws_iot/mqtt-agent-interface">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
          <component_dependency value="middleware.freertos.coremqtt-agent.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="freertos_agent_message.c"/>
        <files mask="freertos_command_pool.c"/>
      </source>
      <source relative_path="include" type="c_include">
        <files mask="freertos_agent_message.h"/>
        <files mask="freertos_command_pool.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_iot_reference_mqtt_agent_interface.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.iot_reference.transport_mbedtls.MIMXRT595S" name="transport_mbedtls" brief="transport_mbedtls, IoT reference common example component" version="1.0.0" full_name="transport_mbedtls" category="AWS IoT/IoT Reference" user_visible="true" type="middleware" package_base_path="components/aws_iot/using_mbedtls_pkcs11" project_base_path="aws_iot/using_mbedtls_pkcs11">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos.coremqtt.MIMXRT595S"/>
          <component_dependency value="middleware.freertos.corepkcs11.MIMXRT595S"/>
          <component_dependency value="middleware.iot_reference.logging.MIMXRT595S"/>
          <component_dependency value="middleware.lwip.MIMXRT595S"/>
          <component_dependency value="middleware.mbedtls.MIMXRT595S"/>
          <component_dependency value="middleware.pkcs11.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="using_mbedtls.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="using_mbedtls.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_iot_reference_transport_mbedtls.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.iot_reference.transport_mbedtls_psa.MIMXRT595S" name="transport_mbedtls_psa" brief="transport_mbedtls_psa, IoT reference common example component" version="1.0.0" full_name="transport_mbedtls_psa" category="AWS IoT/IoT Reference" user_visible="true" type="middleware" package_base_path="components/aws_iot/using_mbedtls_psa" project_base_path="aws_iot/using_mbedtls_psa">
      <dependencies>
        <all>
          <component_dependency value="middleware.iot_reference.logging.MIMXRT595S"/>
          <component_dependency value="middleware.lwip.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="using_mbedtls.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="using_mbedtls.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_iot_reference_transport_mbedtls_psa.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.aws_iot.device_shadow.template.MIMXRT595S" name="device_shadow configuration template" brief="Template configuration file to be edited by user." version="1.0.0" full_name="device_shadow configuration template" category="AWS IoT/AWS IoT Device Shadow" user_visible="false" type="project_template" package_base_path="middleware/aws_iot/device-shadow" project_base_path="aws_iot/device-shadow">
      <dependencies>
        <all>
          <component_dependency value="middleware.iot_reference.logging.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="template" type="c_include">
        <files mask="shadow_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_aws_iot_device_shadow_template.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="template" type="c_include"/>
        <include_path relative_path="template" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.aws_iot.device_shadow.MIMXRT595S" name="device_shadow" brief="Client library for using the AWS IoT Device Shadow service on embedded devices." version="1.3.0" full_name="AWS IoT Device Shadow library" category="AWS IoT/AWS IoT Device Shadow" user_visible="true" type="middleware" package_base_path="middleware/aws_iot/device-shadow" project_base_path="aws_iot/device-shadow">
      <dependencies>
        <all>
          <component_dependency value="middleware.aws_iot.device_shadow.template.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="source" type="src">
        <files mask="shadow.c"/>
      </source>
      <source relative_path="source/include" type="c_include">
        <files mask="shadow.h"/>
        <files mask="shadow_config_defaults.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_aws_iot_device_shadow.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="source/include" type="c_include"/>
        <include_path relative_path="source/include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-common.MIMXRT595S" name="camera-common" brief="Driver camera-common" version="1.0.0" full_name="Driver camera-common" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/camera" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.video-common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_camera.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_camera-common.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-ap1302.MIMXRT595S" name="camera-device-ap1302" brief="Driver camera-device-ap1302" version="1.0.1" full_name="Driver camera-device-ap1302" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/camera/device/ap1302" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-device-common.MIMXRT595S"/>
          <component_dependency value="driver.video-i2c.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ap1302.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ap1302.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_camera-device-ap1302.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-common.MIMXRT595S" name="camera-device-common" brief="Driver camera-device-common" version="1.0.0" full_name="Driver camera-device-common" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/camera/device" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_camera_device.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_camera-device-common.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-max9286.MIMXRT595S" name="camera-device-max9286" brief="Driver camera-device-max9286" version="1.0.2" full_name="Driver camera-device-max9286" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/camera/device/max9286" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-device-common.MIMXRT595S"/>
          <component_dependency value="driver.video-i2c.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_max9286.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_max9286.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_camera-device-max9286.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-mt9m114.MIMXRT595S" name="camera-device-mt9m114" brief="Driver camera-device-mt9m114" version="1.0.2" full_name="Driver camera-device-mt9m114" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/camera/device/mt9m114" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-device-common.MIMXRT595S"/>
          <component_dependency value="driver.video-i2c.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mt9m114.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mt9m114.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_camera-device-mt9m114.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-ov5640.MIMXRT595S" name="camera-device-ov5640" brief="Driver camera-device-ov5640" version="1.0.1" full_name="Driver camera-device-ov5640" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/camera/device/ov5640" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-device-common.MIMXRT595S"/>
          <component_dependency value="driver.camera-device-sccb.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ov5640.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ov5640.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_camera-device-ov5640.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-ov7670.MIMXRT595S" name="camera-device-ov7670" brief="Driver camera-device-ov7670" version="1.0.2" full_name="Driver camera-device-ov7670" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/camera/device/ov7670" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-device-common.MIMXRT595S"/>
          <component_dependency value="driver.camera-device-sccb.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ov7670.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ov7670.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_camera-device-ov7670.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-ov7725.MIMXRT595S" name="camera-device-ov7725" brief="Driver camera-device-ov7725" version="1.0.1" full_name="Driver camera-device-ov7725" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/camera/device/ov7725" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-device-common.MIMXRT595S"/>
          <component_dependency value="driver.camera-device-sccb.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ov7725.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ov7725.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_camera-device-ov7725.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-device-sccb.MIMXRT595S" name="camera-device-sccb" brief="Driver camera-device-sccb" version="1.0.1" full_name="Driver camera-device-sccb" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/video/camera/device/sccb" project_base_path="video">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_i2c.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sccb.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sccb.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_camera-device-sccb.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.camera-receiver-common.MIMXRT595S" name="camera-receiver-common" brief="Driver camera-receiver-common" version="1.0.0" full_name="Driver camera-receiver-common" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/camera/receiver" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.camera-common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_camera_receiver.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_camera-receiver-common.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dbi.MIMXRT595S" name="dbi" brief="Driver dbi" version="1.0.0" full_name="Driver dbi" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dbi" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.video-common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dbi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dbi.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dbi.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dbi_flexio_smartdma.MIMXRT595S" name="dbi_flexio_smartdma" brief="Driver dbi_flexio_smartdma" version="1.0.1" full_name="Driver dbi_flexio_smartdma" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dbi/flexio" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.dbi.MIMXRT595S"/>
          <component_dependency value="platform.drivers.flexio_mculcd.MIMXRT595S"/>
          <component_dependency value="platform.drivers.flexio_mculcd_smartdma.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dbi_flexio_smartdma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dbi_flexio_smartdma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dbi_flexio_smartdma.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dbi_lcdif.MIMXRT595S" name="dbi_lcdif" brief="Driver dbi_lcdif" version="1.0.1" full_name="Driver dbi_lcdif" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dbi/lcdif" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.dbi.MIMXRT595S"/>
          <component_dependency value="platform.drivers.lcdif.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dbi_lcdif.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dbi_lcdif.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dbi_lcdif.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dbi_lpc_spi_dma.MIMXRT595S" name="dbi_lpc_spi_dma" brief="Driver dbi_lpc_spi_dma" version="1.0.0" full_name="Driver dbi_lpc_spi_dma" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dbi/lpc_spi" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.dbi.MIMXRT595S"/>
          <component_dependency value="platform.drivers.flexcomm_spi_dma.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dbi_spi_dma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dbi_spi_dma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dbi_lpc_spi_dma.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dc-fb-common.MIMXRT595S" name="dc-fb-common" brief="Driver dc-fb-common" version="1.0.0" full_name="Driver dc-fb-common" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dc" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.video-common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dc_fb.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dc-fb-common.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dc-fb-dbi.MIMXRT595S" name="dc-fb-dbi" brief="Driver dc-fb-dbi" version="1.0.0" full_name="Driver dc-fb-dbi" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dc/dbi" project_base_path="video">
      <defines>
        <define name="MCUX_DBI_LEGACY" value="0"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="driver.dbi.MIMXRT595S"/>
          <component_dependency value="driver.dc-fb-common.MIMXRT595S"/>
          <component_dependency value="driver.display-common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dc_fb_dbi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dc_fb_dbi.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dc-fb-dbi.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dc-fb-dsi-cmd.MIMXRT595S" name="dc-fb-dsi-cmd" brief="Driver dc-fb-dsi-cmd" version="1.1.1" full_name="Driver dc-fb-dsi-cmd" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dc/dsi_cmd" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="driver.dc-fb-common.MIMXRT595S"/>
          <component_dependency value="driver.display-common.MIMXRT595S"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dc_fb_dsi_cmd.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dc_fb_dsi_cmd.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dc-fb-dsi-cmd.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dc-fb-lcdif.MIMXRT595S" name="dc-fb-lcdif" brief="Driver dc-fb-lcdif" version="1.0.1" full_name="Driver dc-fb-lcdif" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dc/lcdif" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="driver.dc-fb-common.MIMXRT595S"/>
          <component_dependency value="driver.display-common.MIMXRT595S"/>
          <component_dependency value="platform.drivers.lcdif.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dc_fb_lcdif.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dc_fb_lcdif.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dc-fb-lcdif.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dc-fb-ssd1963.MIMXRT595S" name="dc-fb-ssd1963" brief="Driver dc-fb-ssd1963" version="1.0.2" full_name="Driver dc-fb-ssd1963" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display/dc/ssd1963" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="driver.dc-fb-common.MIMXRT595S"/>
          <component_dependency value="driver.display-common.MIMXRT595S"/>
          <component_dependency value="driver.ssd1963.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dc_fb_ssd1963.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dc_fb_ssd1963.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dc-fb-ssd1963.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-adv7535.MIMXRT595S" name="display-adv7535" brief="Driver display-adv7535" version="1.0.1" full_name="Driver display-adv7535" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/adv7535" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT595S"/>
          <component_dependency value="driver.video-i2c.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adv7535.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adv7535.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_display-adv7535.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-sn65dsi83.MIMXRT595S" name="display-sn65dsi83" brief="Driver display-sn65dsi83" version="1.0.0" full_name="Driver display-sn65dsi83" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/sn65dsi83" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT595S"/>
          <component_dependency value="driver.video-i2c.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sn65dsi83.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sn65dsi83.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_display-sn65dsi83.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-common.MIMXRT595S" name="display-common" brief="Driver display-common" version="1.0.0" full_name="Driver display-common" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/display" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.video-common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_display.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_display-common.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-hx8394.MIMXRT595S" name="display-hx8394" brief="Driver display-hx8394" version="1.0.0" full_name="Driver display-hx8394" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/hx8394" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT595S"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_hx8394.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_hx8394.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_display-hx8394.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-it6161.MIMXRT595S" name="display-it6161" brief="Driver display-it6161" version="1.0.0" full_name="Driver display-it6161" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/it6161" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT595S"/>
          <component_dependency value="driver.video-i2c.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_it6161.h"/>
        <files mask="hdmi_tx.h"/>
        <files mask="mipi_rx.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_it6161.c"/>
        <files mask="hdmi_tx.c"/>
        <files mask="mipi_rx.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_display-it6161.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-it6263.MIMXRT595S" name="display-it6263" brief="Driver display-it6263" version="1.0.1" full_name="Driver display-it6263" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/it6263" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT595S"/>
          <component_dependency value="driver.video-i2c.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_it6263.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_it6263.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_display-it6263.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-mipi-dsi-cmd.MIMXRT595S" name="display-mipi-dsi-cmd" brief="Driver display-mipi-dsi-cmd" version="1.0.2" full_name="Driver display-mipi-dsi-cmd" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/video/display/mipi_dsi_cmd" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.mipi_dsi.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mipi_dsi_cmd.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mipi_dsi_cmd.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_display-mipi-dsi-cmd.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-rm67162.MIMXRT595S" name="display-rm67162" brief="Driver display-rm67162" version="1.0.2" full_name="Driver display-rm67162" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/rm67162" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT595S"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rm67162.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rm67162.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_display-rm67162.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-co5300.MIMXRT595S" name="display-co5300" brief="Driver display-co5300" version="1.0.0" full_name="Driver display-co5300" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/co5300" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT595S"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_co5300.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_co5300.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_display-co5300.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-rm67191.MIMXRT595S" name="display-rm67191" brief="Driver display-rm67191" version="1.1.0" full_name="Driver display-rm67191" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/rm67191" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT595S"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rm67191.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rm67191.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_display-rm67191.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-rm68191.MIMXRT595S" name="display-rm68191" brief="Driver display-rm68191" version="1.1.0" full_name="Driver display-rm68191" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/rm68191" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT595S"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rm68191.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rm68191.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_display-rm68191.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-rm68200.MIMXRT595S" name="display-rm68200" brief="Driver display-rm68200" version="1.1.1" full_name="Driver display-rm68200" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/rm68200" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT595S"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rm68200.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rm68200.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_display-rm68200.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-rm692c9.MIMXRT595S" name="display-rm692c9" brief="Driver display-rm692c9" version="1.1.0" full_name="Driver display-rm692c9" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/rm692c9" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT595S"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rm692c9.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rm692c9.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_display-rm692c9.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.display-rpi.MIMXRT595S" name="display-rpi" brief="Driver display-rpi" version="1.0.0" full_name="Driver display-rpi" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/video/display/rpi" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.display-common.MIMXRT595S"/>
          <component_dependency value="driver.display-mipi-dsi-cmd.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_rpi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_rpi.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_display-rpi.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.fbdev.MIMXRT595S" name="fbdev" brief="Driver fbdev" version="1.0.4" full_name="Driver fbdev" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/video/display/fbdev" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="driver.video-common.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_fbdev.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_fbdev.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_fbdev.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.video-common.MIMXRT595S" name="video-common" brief="Driver video-common" version="1.1.0" full_name="Driver video-common" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/video" project_base_path="video">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_video_common.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_video_common.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_video-common.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.video-i2c.MIMXRT595S" name="video-i2c" brief="Driver video-i2c" version="1.0.1" full_name="Driver video-i2c" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/video/i2c" project_base_path="video">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_i2c.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_video_i2c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_video_i2c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_video-i2c.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.usart_adapter.MIMXRT595S" name="usart_adapter" brief="Component usart_adapter" version="1.0.0" full_name="usart_adapter" category="Device/SDK Drivers" user_visible="true" type="utilities" package_base_path="components/uart" project_base_path="component/uart">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm.MIMXRT595S"/>
          <component_dependency value="platform.drivers.flexcomm_usart.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_usart.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_usart_adapter.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.ft6x06.MIMXRT595S" name="ft6x06" brief="Driver ft6x06" version="1.0.0" full_name="Driver ft6x06" category="Device/SDK Drivers" user_visible="false" type="board_component" package_base_path="components/touch/ft6x06" project_base_path="touchpanel">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Driver_Include.I2C.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ft6x06.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ft6x06.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_ft6x06.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.timer_manager.MIMXRT595S" name="timer_manager" brief="Component timer_manager" version="1.0.0" full_name="Component timer_manager" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/timer_manager" project_base_path="component/timer_manager">
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="component.ctimer_adapter.MIMXRT595S"/>
              <component_dependency value="platform.drivers.ctimer.MIMXRT595S"/>
            </all>
            <all>
              <component_dependency value="component.mrt_adapter.MIMXRT595S"/>
              <component_dependency value="platform.drivers.mrt.MIMXRT595S"/>
            </all>
            <all>
              <component_dependency value="component.ostimer_adapter.MIMXRT595S"/>
              <component_dependency value="platform.drivers.ostimer.MIMXRT595S"/>
            </all>
          </any_of>
          <component_dependency value="component.lists.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_timer_manager.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_timer_manager.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_timer_manager.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.ctimer_adapter.MIMXRT595S" name="ctimer_adapter" brief="Component ctimer_adapter" version="1.0.0" full_name="Component ctimer_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/timer" project_base_path="component/timer">
      <defines>
        <define name="TIMER_PORT_TYPE_CTIMER" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.ctimer.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_ctimer.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_ctimer_adapter.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.mrt_adapter.MIMXRT595S" name="mrt_adapter" brief="Component mrt_adapter" version="1.0.0" full_name="Component mrt_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/timer" project_base_path="component/timer">
      <defines>
        <define name="TIMER_PORT_TYPE_MRT" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.mrt.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_mrt.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_mrt_adapter.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.ostimer_adapter.MIMXRT595S" name="ostimer_adapter" brief="Component ostimer_adapter" version="1.0.0" full_name="Component ostimer_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/timer" project_base_path="component/timer">
      <defines>
        <define name="TIMER_PORT_TYPE_OSTIMER" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.ostimer.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_timer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_ostimer.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_ostimer_adapter.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.ctimer_time_stamp_adapter.MIMXRT595S" name="ctimer time stamp adapter" brief="Component ctimer time stamp adapter" version="1.0.0" full_name="component ctimer time stamp adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/time_stamp" project_base_path="component/time_stamp">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.ctimer.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_time_stamp.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_ctimer_time_stamp.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_ctimer_time_stamp_adapter.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.ostimer_time_stamp_adapter.MIMXRT595S" name="ostimer time stamp adapter" brief="Component ostimer time stamp adapter" version="1.0.0" full_name="component ostimer time stamp adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/time_stamp" project_base_path="component/time_stamp">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.ostimer.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_time_stamp.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_ostimer_time_stamp.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_ostimer_time_stamp_adapter.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.flexcomm_spi_adapter.MIMXRT595S" name="flexcomm_spi_adapter" brief="Component flexcomm_spi_adapter" version="1.0.0" full_name="Component flexcomm_spi_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/spi" project_base_path="component/spi">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="platform.drivers.flexcomm_spi.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_spi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_flexcomm_spi.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_flexcomm_spi_adapter.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="utility.shell.MIMXRT595S" name="shell" brief="Utility shell" version="1.0.0" full_name="Utility shell" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="devices/MIMXRT595S/utilities/shell" project_base_path="utilities">
      <dependencies>
        <all>
          <component_dependency value="component.lists.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="utility.str.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_shell.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_shell.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="utility_shell.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager.MIMXRT595S" name="serial_manager" brief="Component serial_manager" version="1.0.1" full_name="Serial Manager" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="component.serial_manager_spi.MIMXRT595S"/>
            <component_dependency value="component.serial_manager_swo.MIMXRT595S"/>
            <component_dependency value="component.serial_manager_uart.MIMXRT595S"/>
            <component_dependency value="component.serial_manager_usb_cdc.MIMXRT595S"/>
            <component_dependency value="component.serial_manager_virtual.MIMXRT595S"/>
          </any_of>
          <component_dependency value="component.lists.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_manager.h"/>
        <files mask="fsl_component_serial_port_internal.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_manager.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_serial_manager.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_spi.MIMXRT595S" name="serial_manager_spi" brief="Component serial_manager_spi" version="1.0.0" full_name="Serial Manager spi" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_SPI" value="1"/>
        <define name="SERIAL_PORT_TYPE_SPI_MASTER" value="1"/>
        <define name="SERIAL_PORT_TYPE_SPI_SLAVE" value="1"/>
        <define name="SERIAL_MANAGER_NON_BLOCKING_MODE" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.flexcomm_spi_adapter.MIMXRT595S"/>
          <component_dependency value="platform.drivers.flexcomm_spi.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_spi.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_spi.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_serial_manager_spi.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_uart.MIMXRT595S" name="serial_manager_uart" brief="Component serial_manager_uart" version="1.0.0" full_name="Serial Manager uart" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_UART" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_usart.MIMXRT595S"/>
          <component_dependency value="component.usart_adapter.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_uart.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_uart.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_serial_manager_uart.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.serial_manager_usb_cdc.MIMXRT595S" name="serial_manager_usb_cdc" brief="Component serial_manager_usb_cdc" version="1.0.0" full_name="Serial Manager USB CDC" category="Device/SDK Utilities" user_visible="true" type="utilities" package_base_path="components/serial_manager" project_base_path="component/serial_manager">
      <defines>
        <define name="SERIAL_PORT_TYPE_USBCDC" value="1"/>
        <define name="DEBUG_CONSOLE_TRANSFER_NON_BLOCKING" value=""/>
        <define name="USB_DEVICE_CONFIG_CDC_ACM" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="middleware.usb.common_header.MIMXRT595S"/>
          <component_dependency value="middleware.usb.device.cdc.MIMXRT595S"/>
          <component_dependency value="middleware.usb.device.common_header.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_serial_port_usb.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_serial_port_usb.c"/>
      </source>
      <source relative_path="usb_cdc_adapter" type="c_include">
        <files mask="usb_device_descriptor.h"/>
        <files mask="usb_device_config.h"/>
      </source>
      <source relative_path="usb_cdc_adapter" type="src">
        <files mask="usb_device_descriptor.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_serial_manager_usb_cdc.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="usb_cdc_adapter" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="usb_cdc_adapter" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.fxas21002cq.MIMXRT595S" name="fxas21002cq" brief="Driver fxas21002cq" version="1.0.0" full_name="Driver fxas21002cq" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/fxas21002cq" project_base_path="gyroscope">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_i2c.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_fxas.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_fxas.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_fxas21002cq.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.fxls8974cf.MIMXRT595S" name="fxls8974cf" brief="Driver fxls8974cf" version="1.0.0" full_name="Driver fxls8974cf" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/fxls8974cf" project_base_path="accel">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_i2c.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_fxls.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_fxls.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_fxls8974cf.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.fxos8700cq.MIMXRT595S" name="fxos8700cq" brief="Driver fxos8700cq" version="1.0.0" full_name="Driver fxos8700cq" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/fxos8700cq" project_base_path="accel">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_i2c.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_fxos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_fxos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_fxos8700cq.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.htu21d.MIMXRT595S" name="htu21d" brief="Driver htu21d" version="1.0.0" full_name="Driver htu21d" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/htu21d" project_base_path="htu">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_i2c.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_htu21d.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_htu21d.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_htu21d.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.icm42688p.MIMXRT595S" name="icm42688p" brief="Driver icm42688p" version="1.0.0" full_name="Driver icm42688p" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/icm42688p" project_base_path="icm42688p">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_i2c.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_icm42688p.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_icm42688p.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_icm42688p.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.lsm6dso.MIMXRT595S" name="lsm6dso" brief="Driver lsm6dso" version="1.0.0" full_name="Driver lsm6dso" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/lsm6dso" project_base_path="tilt_pedo">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_i2c.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_lsm.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_lsm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_lsm6dso.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.max30101.MIMXRT595S" name="max30101" brief="Driver max30101" version="1.0.0" full_name="Driver max30101" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/max30101" project_base_path="heartrate">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_i2c.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_max.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_max.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_max30101.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.mma8451q.MIMXRT595S" name="mma8451q" brief="Driver mma8451q" version="1.0.0" full_name="Driver mma8451q" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/mma8451q" project_base_path="accel">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_i2c.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_mma8451q.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.mma8652fc.MIMXRT595S" name="mma8652fc" brief="Driver mma8652fc" version="1.0.0" full_name="Driver mma8652fc" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/mma8652fc" project_base_path="accel">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_i2c.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_mma.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_mma.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_mma8652fc.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.p3t1755.MIMXRT595S" name="p3t1755" brief="Driver p3t1755" version="2.0.0" full_name="Driver p3t1755" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/p3t1755" project_base_path="component/p3t1755">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_i2c.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_p3t1755.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_p3t1755.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_p3t1755.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.tsl2561.MIMXRT595S" name="tsl2561" brief="Driver tsl2561" version="1.0.0" full_name="Driver tsl2561" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/sensor/tsl2561" project_base_path="tsl">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_i2c.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_tsl2561.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_tsl2561.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_tsl2561.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.lpcrtc.MIMXRT595S" name="lpcrtc" brief="Component lpcrtc" version="1.0.0" full_name="Component lpcrtc" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/rtc" project_base_path="component/rtc">
      <defines>
        <define name="RTC_LEGACY_FUNCTION_PROTOTYPE" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpc_rtc.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_rtc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpcrtc.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_lpcrtc.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.trng_adapter.MIMXRT595S" name="trng_adapter" brief="Component trng_adapter" version="1.0.0" full_name="Component trng_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/rng" project_base_path="component/rng">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.trng.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_rng.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_trng.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_trng_adapter.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.pwm_ctimer_adapter.MIMXRT595S" name="pwm_ctimer_adapter" brief="Component pwm_ctimer_adapter" version="1.0.0" full_name="Component pwm_ctimer_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/pwm" project_base_path="component/pwm">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.ctimer.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_pwm.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_pwm_ctimer.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_pwm_ctimer_adapter.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.power_manager_framework.MIMXRT595S" name="power_manager_core" brief="Component power manager core level" version="2.0.0" full_name="Component power manager core" category="Device/SDK Drivers" user_visible="false" type="software_component" package_base_path="components/power_manager/core" project_base_path="component/power_manager">
      <defines>
        <define name="GENERIC_LIST_LIGHT" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="component.lists.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pm_core.h"/>
        <files mask="fsl_pm_config.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pm_core.c"/>
      </source>
      <source relative_path="../devices/MIMXRT595S" type="src">
        <files mask="fsl_pm_device.c"/>
      </source>
      <source relative_path="../devices/MIMXRT595S" type="c_include">
        <files mask="fsl_pm_device.h"/>
        <files mask="fsl_pm_device_config.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_power_manager_framework.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="../devices/MIMXRT595S" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="../devices/MIMXRT595S" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.pca9420.MIMXRT595S" name="pca9420" brief="Driver pca9420" version="1.0.0" full_name="Driver pca9420" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/pmic/pca9420" project_base_path="component/pmic/pca9420">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_i2c.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="platform.drivers.power.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pca9420.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pca9420.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_pca9420.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.pca9422.MIMXRT595S" name="pca9422" brief="Driver pca9422" version="1.0.0" full_name="Driver pca9422" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/pmic/pca9422" project_base_path="component/pmic/pca9422">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_i2c.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="platform.drivers.power.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pca9422.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pca9422.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_pca9422.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.pf1550.MIMXRT595S" name="pf1550" brief="Driver pf1550" version="1.0.0" full_name="Driver pf1550" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/pmic/pf1550" project_base_path="component/pmic/pf1550">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_i2c.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pf1550.c"/>
        <files mask="fsl_pf1550_charger.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pf1550.h"/>
        <files mask="fsl_pf1550_charger.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_pf1550.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.pf3000.MIMXRT595S" name="pf3000" brief="Driver pf3000" version="1.0.0" full_name="Driver pf3000" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/pmic/pf3000" project_base_path="component/pmic/pf3000">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_i2c.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pf3000.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pf3000.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_pf3000.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.pf5020.MIMXRT595S" name="pf5020" brief="Driver pf5020" version="2.0.0" full_name="Driver pf5020" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/pmic/pf5020" project_base_path="component/pmic/pf5020">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_i2c.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_pf5020.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pf5020.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_pf5020.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.osa.MIMXRT595S" name="osa" brief="Component osa" version="1.0.0" full_name="Component osa" category="NXP Component/OS Abstraction Layer" user_visible="false" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <any_of>
            <all>
              <not>
                <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
              </not>
              <component_dependency value="component.osa_bm.MIMXRT595S"/>
            </all>
            <all>
              <component_dependency value="component.osa_free_rtos.MIMXRT595S"/>
              <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
            </all>
          </any_of>
          <component_dependency value="component.osa_interface.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_osa.cmake" hidden="true"/>
      </source>
    </component>
    <component id="component.osa_bm.MIMXRT595S" name="osa_bm" brief="Component osa_bm" version="1.0.0" full_name="Component osa_bm" category="NXP Component/OS Abstraction Layer" user_visible="true" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <defines>
        <define name="USE_RTOS" value="0"/>
      </defines>
      <dependencies>
        <all>
          <not>
            <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
          </not>
          <component_dependency value="component.osa.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction_bm.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_os_abstraction_bm.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_osa_bm.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.osa_free_rtos.MIMXRT595S" name="osa_free_rtos" brief="Component osa_free_rtos" version="1.0.0" full_name="Component osa_free_rtos" category="NXP Component/OS Abstraction Layer" user_visible="true" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <defines>
        <define name="USE_RTOS" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction_free_rtos.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_os_abstraction_free_rtos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_osa_free_rtos.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.osa_interface.MIMXRT595S" name="osa_interface" brief="Component osa interface" version="1.0.0" full_name="Component osa interface" category="NXP Component/OS Abstraction Layer" user_visible="true" type="software_component" package_base_path="components/osa" project_base_path="component/osa">
      <dependencies>
        <all>
          <component_dependency value="component.lists.MIMXRT595S"/>
          <component_dependency value="component.osa_template_config.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_os_abstraction.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_osa_interface.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.messaging.MIMXRT595S" name="messaging" brief="Component messaging" version="1.0.0" full_name="Component messaging" category="Device/SDK Drivers" user_visible="true" type="other" package_base_path="components/messaging" project_base_path="component/messaging">
      <dependencies>
        <all>
          <component_dependency value="component.lists.MIMXRT595S"/>
          <component_dependency value="component.mem_manager.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_messaging.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_messaging.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_messaging.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.mem_manager.MIMXRT595S" name="mem_manager" brief="Component mem_manager" version="1.0.0" full_name="Component mem_manager" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/mem_manager" project_base_path="component/mem_manager">
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="component.mem_manager_freertos.MIMXRT595S"/>
              <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
            </all>
            <component_dependency value="component.mem_manager_legacy.MIMXRT595S"/>
            <component_dependency value="component.mem_manager_light.MIMXRT595S"/>
          </any_of>
          <component_dependency value="component.lists.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_mem_manager.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_mem_manager.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.mem_manager_legacy.MIMXRT595S" name="mem_manager_legacy" brief="Component mem_manager_legacy" version="1.0.0" full_name="Component mem_manager_legacy" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/mem_manager" project_base_path="component/mem_manager">
      <dependencies>
        <all>
          <component_dependency value="component.mem_manager.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_component_mem_manager.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_mem_manager_legacy.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.mem_manager_freertos.MIMXRT595S" name="mem_manager_freertos" brief="Component mem_manager_freertos" version="1.0.0" full_name="Component mem_manager_freertos" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/mem_manager" project_base_path="component/mem_manager">
      <dependencies>
        <all>
          <component_dependency value="component.mem_manager.MIMXRT595S"/>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_component_mem_manager_freertos.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_mem_manager_freertos.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.mem_manager_light.MIMXRT595S" name="mem_manager_light" brief="Component mem_manager_light" version="1.0.0" full_name="Component mem_manager_light" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/mem_manager" project_base_path="component/mem_manager">
      <dependencies>
        <all>
          <component_dependency value="component.mem_manager.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_component_mem_manager_light.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_mem_manager_light.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.log.MIMXRT595S" name="log" brief="Component log" version="1.0.0" full_name="Component log" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="utility.str.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log.h"/>
        <files mask="fsl_component_log_config.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_log.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.log.backend.debug_console.MIMXRT595S" name="log_backend_debug_console" brief="Component log backend debug console" version="1.0.0" full_name="Component log backend debug console" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="component.log.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="utility.debug_console.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log_backend_debugconsole.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log_backend_debugconsole.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_log_backend_debug_console.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.log.backend.debug_console_lite.MIMXRT595S" name="log_backend_debug_console_lite" brief="Component log backend debug console lite" version="1.0.0" full_name="Component log backend debug console lite" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="component.log.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <component_dependency value="utility.debug_console_lite.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log_backend_debugconsole.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log_backend_debugconsole.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_log_backend_debug_console_lite.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.log.backend.ringbuffer.MIMXRT595S" name="log_backend_ring_buffer" brief="Component log backend ring buffer" version="1.0.0" full_name="Component log backend ring buffer" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/log" project_base_path="component/log">
      <dependencies>
        <all>
          <component_dependency value="component.log.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_log_backend_ringbuffer.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_log_backend_ringbuffer.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_log_backend_ringbuffer.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.lists.MIMXRT595S" name="lists" brief="Component lists" version="1.0.0" full_name="Component lists" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/lists" project_base_path="component/lists">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_generic_list.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_generic_list.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_lists.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.led.MIMXRT595S" name="led" brief="Component led" version="1.0.0" full_name="Component led" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/led" project_base_path="component/led">
      <dependencies>
        <all>
          <component_dependency value="component.lpc_gpio_adapter.MIMXRT595S"/>
          <component_dependency value="platform.drivers.lpc_gpio.MIMXRT595S"/>
          <component_dependency value="component.timer_manager.MIMXRT595S"/>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_led.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_led.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_led.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.flash_adapter.MIMXRT595S" name="flash_adapter" brief="Component flash_adapter" version="1.0.0" full_name="Component flash_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/internal_flash" project_base_path="component/internal_flash">
      <dependencies>
        <all>
          <component_dependency value="component.flexspi_nor_flash_adapter_rt595evk.MIMXRT595S"/>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_flash_adapter.MIMXRT595S.cmake" hidden="true"/>
      </source>
    </component>
    <component id="component.flexspi_nor_flash_adapter_rt595evk.MIMXRT595S" name="flexspi_nor_flash_adapter_rt595evk" brief="Component flexspi_nor_flash_adapter_rt595evk" version="1.0.0" full_name="Component flexspi_nor_flash_adapter_rt595evk" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/internal_flash/" project_base_path="component/internal_flash">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexspi.MIMXRT595S"/>
          <board_dependency value="evkmimxrt595"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="octal_flash/RT595" type="src">
        <files mask="fsl_adapter_flexspi_nor_flash.c"/>
      </source>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_flash.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_flexspi_nor_flash_adapter_rt595evk.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.i3c_bus.MIMXRT595S" name="i3c_bus" brief="Component i3c_bus" version="1.0.1" full_name="Component i3c_bus" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/i3c_bus" project_base_path="component/i3c_bus">
      <dependencies>
        <all>
          <component_dependency value="component.lists.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_i3c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_i3c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_i3c_bus.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.i3c_bus_adapter.MIMXRT595S" name="i3c_bus_adapter" brief="Component i3c_bus_adapter" version="1.1.0" full_name="Component i3c_bus_adapter" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/i3c_bus" project_base_path="component/i3c_bus">
      <dependencies>
        <all>
          <component_dependency value="component.i3c_bus.MIMXRT595S"/>
          <component_dependency value="platform.drivers.i3c.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_i3c_adapter.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_i3c_adapter.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_i3c_bus_adapter.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.flexcomm_i2c_adapter.MIMXRT595S" name="flexcomm_i2c_adapter" brief="Component flexcomm_i2c_adapter" version="1.0.0" full_name="Component flexcomm_i2c_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/i2c" project_base_path="component/i2c">
      <dependencies>
        <all>
          <component_dependency value="component.i2c_adapter_interface.MIMXRT595S"/>
          <component_dependency value="platform.drivers.flexcomm_i2c.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_flexcomm_i2c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_flexcomm_i2c_adapter.MIMXRT595S.cmake" hidden="true"/>
      </source>
    </component>
    <component id="component.i3c_adapter.MIMXRT595S" name="i3c_adapter" brief="Component i3c_adapter" version="1.0.0" full_name="Component i3c_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/i2c" project_base_path="component/i2c">
      <defines>
        <define name="SDK_I3C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.i2c_adapter_interface.MIMXRT595S"/>
          <component_dependency value="platform.drivers.i3c.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_i3c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_i3c_adapter.MIMXRT595S.cmake" hidden="true"/>
      </source>
    </component>
    <component id="component.i2c_adapter_interface.MIMXRT595S" name="i2c_adapter_interface" brief="Component i2c_adapter_interface" version="1.0.0" full_name="Component i2c_adapter_interface" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/i2c" project_base_path="component/i2c">
      <dependencies>
        <all>
          <any_of>
            <all>
              <component_dependency value="component.flexcomm_i2c_adapter.MIMXRT595S"/>
              <component_dependency value="platform.drivers.flexcomm_i2c.MIMXRT595S"/>
            </all>
            <all>
              <component_dependency value="component.i3c_adapter.MIMXRT595S"/>
              <component_dependency value="platform.drivers.i3c.MIMXRT595S"/>
            </all>
          </any_of>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_i2c.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_i2c_adapter_interface.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.lpc_gpio_adapter.MIMXRT595S" name="lpc_gpio_adapter" brief="Component lpc_gpio_adapter" version="1.0.1" full_name="Component lpc_gpio_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/gpio" project_base_path="component/gpio">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.inputmux.MIMXRT595S"/>
          <component_dependency value="platform.drivers.lpc_gpio.MIMXRT595S"/>
          <component_dependency value="platform.drivers.pint.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_gpio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpc_gpio.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_lpc_gpio_adapter.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.rt_gpio_adapter.MIMXRT595S" name="rt_gpio_adapter" brief="Component rt_gpio_adapter" version="1.0.1" full_name="Component rt_gpio_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/gpio" project_base_path="component/gpio">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpc_gpio.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_gpio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_rt_gpio.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_rt_gpio_adapter.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.flash_nand_flexspi.MIMXRT595S" name="flash_nand_flexspi" brief="Component.flash_nand_flexspi" version="1.0.0" full_name="Component flash_nand_flexspi" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/flash" project_base_path="nand_flash">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexspi.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="nand" type="c_include">
        <files mask="fsl_nand_flash.h"/>
      </source>
      <source relative_path="nand/flexspi" type="src">
        <files mask="fsl_flexspi_nand_flash.c"/>
      </source>
      <source relative_path="nand/flexspi" type="c_include">
        <files mask="fsl_flexspi_nand_flash.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_flash_nand_flexspi.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="nand" type="c_include"/>
        <include_path relative_path="nand/flexspi" type="c_include"/>
        <include_path relative_path="nand" type="asm_include"/>
        <include_path relative_path="nand/flexspi" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.flash_nor_flexspi.MIMXRT595S" name="flash_nor_flexspi" brief="Component flash_nor_flexspi" version="1.0.0" full_name="Component flash_nor_flexspi" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/flash" project_base_path="nor_flash">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexspi.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="nor" type="c_include">
        <files mask="fsl_nor_flash.h"/>
      </source>
      <source relative_path="nor/flexspi" type="src">
        <files mask="fsl_flexspi_nor_flash.c"/>
      </source>
      <source relative_path="nor/flexspi" type="c_include">
        <files mask="fsl_flexspi_nor_flash.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_flash_nor_flexspi.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="nor" type="c_include"/>
        <include_path relative_path="nor/flexspi" type="c_include"/>
        <include_path relative_path="nor" type="asm_include"/>
        <include_path relative_path="nor/flexspi" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.mflash_offchip.MIMXRT595S" name="mflash offchip" brief="mflash offchip" version="1.0.0" full_name="mflash offchip" category="Device/SDK Drivers" user_visible="false" type="software_component" package_base_path="components/flash/mflash" project_base_path="flash/mflash">
      <defines>
        <define name="MFLASH_FILE_BASEADDR" value="7340032"/>
      </defines>
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="platform.drivers.cache_cache64.MIMXRT595S"/>
            <component_dependency value="platform.drivers.flexspi.MIMXRT595S"/>
          </any_of>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="mflash_common.h"/>
        <files mask="mflash_file.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="mflash_file.c"/>
      </source>
      <source relative_path="mimxrt595" type="src">
        <files mask="mflash_drv.c"/>
      </source>
      <source relative_path="mimxrt595" type="c_include">
        <files mask="mflash_drv.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_mflash_offchip.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="mimxrt595" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="mimxrt595" type="asm_include"/>
      </include_paths>
    </component>
    <component id="middleware.edgefast_wifi_nxp.MIMXRT595S" name="edgefast_wifi_nxp" brief="Edgefast Wi-Fi NXP is a blocking layer for Wi-Fi NXP" version="1.0.0" full_name="Edgefast Wi-Fi NXP" category="Wireless/Edgefast Wi-Fi" user_visible="true" type="middleware" package_base_path="components/edgefast_wifi" project_base_path="edgefast_wifi">
      <dependencies>
        <all>
          <component_dependency value="middleware.freertos-kernel.MIMXRT595S"/>
          <component_dependency value="middleware.lwip.MIMXRT595S"/>
          <component_dependency value="middleware.wifi.MIMXRT595S"/>
          <component_dependency value="middleware.wifi.osa_free_rtos.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="include" type="c_include">
        <files mask="wpl.h"/>
      </source>
      <source relative_path="source" type="src">
        <files mask="wpl_nxp.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="middleware_edgefast_wifi_nxp.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="include" type="c_include"/>
        <include_path relative_path="include" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.ili9341.MIMXRT595S" name="ili9341" brief="Driver ili9341" version="1.0.2" full_name="Driver ili9341" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/display/ili9341" project_base_path="lcdc">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ili9341.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ili9341.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_ili9341.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.psp27801.MIMXRT595S" name="psp27801" brief="Driver psp27801" version="1.0.0" full_name="Driver psp27801" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/display/psp27801" project_base_path="oled">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.common.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_psp27801.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_psp27801.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_psp27801.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.ssd1963.MIMXRT595S" name="ssd1963" brief="Driver ssd1963" version="1.2.0" full_name="Driver ssd1963" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/display/ssd1963" project_base_path="lcdc">
      <dependencies>
        <all>
          <component_dependency value="driver.dbi.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ssd1963.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ssd1963.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_ssd1963.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.st7796s.MIMXRT595S" name="st7796s" brief="Driver st7796s" version="1.0.0" full_name="Driver st7796s" category="Device/SDK Drivers" user_visible="true" type="board_component" package_base_path="components/display/st7796s" project_base_path="lcdc">
      <dependencies>
        <all>
          <component_dependency value="driver.dbi.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_st7796s.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_st7796s.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_st7796s.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.lpc_crc_adapter.MIMXRT595S" name="lpc_crc_adapter" brief="Component lpc_crc_adapter" version="1.0.0" full_name="Component lpc_crc_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/crc" project_base_path="component/crc">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.lpc_crc.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_crc.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_lpc_crc.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_lpc_crc_adapter.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.common_task.MIMXRT595S" name="common_task" brief="Component common_task" version="1.0.0" full_name="Component common_task" category="NXP Component/OS Abstraction Layer" user_visible="true" type="software_component" package_base_path="components/common_task" project_base_path="component/common_task">
      <dependencies>
        <all>
          <component_dependency value="component.osa.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_common_task.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_common_task.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_common_task.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.codec_i2c.MIMXRT595S" name="codec_i2c" brief="Component codec_i2c" version="2.1.0" full_name="Component codec_i2c" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/i2c" project_base_path="codec">
      <defines>
        <define name="SDK_I2C_BASED_COMPONENT_USED" value="1"/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.i2c_adapter_interface.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_codec_i2c.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_codec_i2c.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_codec_i2c.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.ak4497.MIMXRT595S" name="ak4497" brief="Driver ak4497" version="2.1.2" full_name="Driver ak4497" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/ak4497" project_base_path="codec">
      <defines>
        <define name="CODEC_AK4497_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.ak4497_adapter.MIMXRT595S"/>
          <component_dependency value="component.codec_adapters.MIMXRT595S"/>
          <component_dependency value="component.codec_i2c.MIMXRT595S"/>
          <component_dependency value="driver.codec.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_ak4497.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_ak4497.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_ak4497.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.cs42448.MIMXRT595S" name="cs42448" brief="Driver cs42448" version="2.0.1" full_name="Driver cs42448" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/cs42448" project_base_path="codec">
      <defines>
        <define name="CODEC_CS42448_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT595S"/>
          <component_dependency value="component.codec_i2c.MIMXRT595S"/>
          <component_dependency value="component.cs42448_adapter.MIMXRT595S"/>
          <component_dependency value="driver.codec.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cs42448.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_cs42448.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_cs42448.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.cs42888.MIMXRT595S" name="cs42888" brief="Driver cs42888" version="2.1.3" full_name="Driver cs42888" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/cs42888" project_base_path="codec">
      <defines>
        <define name="CODEC_CS42888_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT595S"/>
          <component_dependency value="component.codec_i2c.MIMXRT595S"/>
          <component_dependency value="component.cs42888_adapter.MIMXRT595S"/>
          <component_dependency value="driver.codec.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_cs42888.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_cs42888.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_cs42888.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.dialog7212.MIMXRT595S" name="dialog7212" brief="Driver dialog7212" version="2.3.1" full_name="Driver dialog7212" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/da7212" project_base_path="codec">
      <defines>
        <define name="CODEC_DA7212_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT595S"/>
          <component_dependency value="component.codec_i2c.MIMXRT595S"/>
          <component_dependency value="component.da7212_adapter.MIMXRT595S"/>
          <component_dependency value="driver.codec.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_dialog7212.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_dialog7212.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_dialog7212.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.pcm186x.MIMXRT595S" name="pcm186x" brief="Driver pcm186x" version="2.0.1" full_name="Driver pcm186x" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/pcm186x" project_base_path="codec">
      <defines>
        <define name="CODEC_PCM186X_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT595S"/>
          <component_dependency value="component.codec_i2c.MIMXRT595S"/>
          <component_dependency value="component.pcm186x_adapter.MIMXRT595S"/>
          <component_dependency value="driver.codec.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pcm186x.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pcm186x.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_pcm186x.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.pcm512x.MIMXRT595S" name="pcm512x" brief="Driver pcm512x" version="2.0.1" full_name="Driver pcm512x" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/pcm512x" project_base_path="codec">
      <defines>
        <define name="CODEC_PCM512X_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT595S"/>
          <component_dependency value="component.codec_i2c.MIMXRT595S"/>
          <component_dependency value="component.pcm512x_adapter.MIMXRT595S"/>
          <component_dependency value="driver.codec.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_pcm512x.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_pcm512x.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_pcm512x.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.sgtl5000.MIMXRT595S" name="sgtl5000" brief="Driver sgtl5000" version="2.1.1" full_name="Driver sgtl5000" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/sgtl5000" project_base_path="codec">
      <defines>
        <define name="CODEC_SGTL5000_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT595S"/>
          <component_dependency value="component.codec_i2c.MIMXRT595S"/>
          <component_dependency value="component.sgtl_adapter.MIMXRT595S"/>
          <component_dependency value="driver.codec.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_sgtl5000.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_sgtl5000.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_sgtl5000.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.tfa9896.MIMXRT595S" name="tfa9896" brief="Driver tfa9896" version="6.0.2" full_name="Driver tfa9896" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/tfa9896" project_base_path="codec">
      <defines>
        <define name="CODEC_TFA9896_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT595S"/>
          <component_dependency value="component.codec_i2c.MIMXRT595S"/>
          <component_dependency value="component.tfa9896_adapter.MIMXRT595S"/>
          <component_dependency value="driver.codec.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_tfa9896_buffer.h"/>
        <files mask="fsl_tfa9896.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_hal_registers.c"/>
        <files mask="fsl_tfa9896.c"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="MIMXRT595595-EVK_TFA9896_SW.pdf"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_tfa9896.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.tfa9xxx.MIMXRT595S" name="tfa9xxx" brief="Driver tfa9xxx" version="2.1.0" full_name="Driver tfa9xxx" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/tfa9xxx" project_base_path="codec/tfa9xxx">
      <defines>
        <define name="CODEC_TFA9XXX_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT595S"/>
          <component_dependency value="component.codec_i2c.MIMXRT595S"/>
          <component_dependency value="component.tfa9xxx_adapter.MIMXRT595S"/>
          <component_dependency value="driver.codec.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="tfa_config_TFA9892N1.h"/>
        <files mask="tfa_config_TFA9894N1.h"/>
        <files mask="tfa_config_TFA9894N2.h"/>
        <files mask="fsl_tfa9xxx.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_tfa9xxx.c"/>
        <files mask="fsl_tfa9xxx_IMX.c"/>
      </source>
      <source relative_path="./" type="doc">
        <files mask="README.md"/>
      </source>
      <source relative_path="vas_tfa_drv" type="c_include">
        <files mask="config.h"/>
        <files mask="tfa2_container.h"/>
        <files mask="tfa2_dev.h"/>
        <files mask="tfa2_dsp_fw.h"/>
        <files mask="tfa2_haptic.h"/>
        <files mask="tfa9xxx_parameters.h"/>
        <files mask="tfa_haptic_fw_defs.h"/>
      </source>
      <source relative_path="vas_tfa_drv" type="src">
        <files mask="tfa2_container.c"/>
        <files mask="tfa2_dev.c"/>
        <files mask="tfa2_haptic.c"/>
        <files mask="tfa2_init.c"/>
        <files mask="tfa_container_crc32.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_tfa9xxx.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="vas_tfa_drv" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="vas_tfa_drv" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.tfa9xxx_hal.MIMXRT595S" name="tfa9xxx_hal" brief="Driver tfa9xxx_hal" version="2.1.0" full_name="Driver tfa9xxx_hal" category="Device/SDK Drivers" user_visible="false" type="software_component" package_base_path="components/codec/tfa9xxx" project_base_path="codec/tfa9xxx">
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT595S"/>
          <component_dependency value="component.codec_i2c.MIMXRT595S"/>
          <component_dependency value="driver.codec.MIMXRT595S"/>
          <component_dependency value="driver.tfa9xxx.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="tfa_device_hal.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="tfa_device_hal.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_tfa9xxx_hal.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.wm8524.MIMXRT595S" name="wm8524" brief="Driver wm8524" version="2.1.1" full_name="Driver wm8524" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/wm8524" project_base_path="codec">
      <defines>
        <define name="CODEC_WM8524_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT595S"/>
          <component_dependency value="component.codec_i2c.MIMXRT595S"/>
          <component_dependency value="component.wm8524_adapter.MIMXRT595S"/>
          <component_dependency value="driver.codec.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wm8524.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wm8524.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_wm8524.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.wm8904.MIMXRT595S" name="wm8904" brief="Driver wm8904" version="2.5.1" full_name="Driver wm8904" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/wm8904" project_base_path="codec">
      <defines>
        <define name="CODEC_WM8904_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT595S"/>
          <component_dependency value="component.codec_i2c.MIMXRT595S"/>
          <component_dependency value="component.wm8904_adapter.MIMXRT595S"/>
          <component_dependency value="driver.codec.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wm8904.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wm8904.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_wm8904.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.wm8960.MIMXRT595S" name="wm8960" brief="Driver wm8960" version="2.2.4" full_name="Driver wm8960" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/wm8960" project_base_path="codec">
      <defines>
        <define name="CODEC_WM8960_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT595S"/>
          <component_dependency value="component.codec_i2c.MIMXRT595S"/>
          <component_dependency value="component.wm8960_adapter.MIMXRT595S"/>
          <component_dependency value="driver.codec.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wm8960.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wm8960.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_wm8960.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="driver.wm8962.MIMXRT595S" name="wm8962" brief="Driver wm8962" version="2.2.0" full_name="Driver wm8962" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/codec/wm8962" project_base_path="codec">
      <defines>
        <define name="CODEC_WM8962_ENABLE" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="component.codec_adapters.MIMXRT595S"/>
          <component_dependency value="component.codec_i2c.MIMXRT595S"/>
          <component_dependency value="component.wm8962_adapter.MIMXRT595S"/>
          <component_dependency value="driver.codec.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_wm8962.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_wm8962.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="driver_wm8962.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.button.MIMXRT595S" name="button" brief="Component button" version="1.0.0" full_name="Component button" category="Device/SDK Drivers" user_visible="true" type="software_component" package_base_path="components/button" project_base_path="component/button">
      <dependencies>
        <all>
          <any_of>
            <component_dependency value="platform.drivers.lpc_gpio.MIMXRT595S"/>
            <board_dependency value="evkmimxrt595"/>
          </any_of>
          <component_dependency value="component.rt_gpio_adapter.MIMXRT595S"/>
          <component_dependency value="component.timer_manager.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_component_button.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_component_button.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_button.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="component.audio_flexcomm_i2s_dma_adapter.MIMXRT595S" name="flexcomm_i2s_dma_adapter" brief="Component flexcomm_i2s_dma_adapter" version="1.0.0" full_name="Component flexcomm_i2s_dma_adapter" category="Device/SDK Drivers" user_visible="true" type="abstraction_layer" package_base_path="components/audio" project_base_path="component/audio">
      <dependencies>
        <all>
          <component_dependency value="platform.drivers.flexcomm_i2s_dma.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_adapter_audio.h"/>
      </source>
      <source relative_path="./" type="src">
        <files mask="fsl_adapter_flexcomm_i2s.c"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="component_audio_flexcomm_i2s_dma_adapter.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="device.MIMXRT595S_CMSIS.MIMXRT595S" name="MIMXRT595S_CMSIS" brief="Device MIMXRT595S_cmsis" version="1.0.0" full_name="Device MIMXRT595S_cmsis" category="Device/CMSIS" user_visible="true" type="CMSIS_Include" package_base_path="devices/MIMXRT595S" project_base_path="device">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Include_core_cm.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="c_include">
        <files mask="fsl_device_registers.h"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm33_MIMXRT595S">
        <files mask="MIMXRT595S_cm33.h"/>
        <files mask="MIMXRT595S_cm33_COMMON.h"/>
        <files mask="MIMXRT595S_cm33_features.h"/>
      </source>
      <source relative_path="periph" type="c_include">
        <files mask="PERI_ADC.h"/>
        <files mask="PERI_AHB_SECURE_CTRL.h"/>
        <files mask="PERI_AXI_SWITCH_AMIB.h"/>
        <files mask="PERI_AXI_SWITCH_ASIB.h"/>
        <files mask="PERI_CACHE64_CTRL.h"/>
        <files mask="PERI_CACHE64_POLSEL.h"/>
        <files mask="PERI_CASPER.h"/>
        <files mask="PERI_CLKCTL0.h"/>
        <files mask="PERI_CLKCTL1.h"/>
        <files mask="PERI_CMP.h"/>
        <files mask="PERI_CRC.h"/>
        <files mask="PERI_CTIMER.h"/>
        <files mask="PERI_DEBUGGER_MAILBOX.h"/>
        <files mask="PERI_DMA.h"/>
        <files mask="PERI_DMIC.h"/>
        <files mask="PERI_FLEXCOMM.h"/>
        <files mask="PERI_FLEXIO.h"/>
        <files mask="PERI_FLEXSPI.h"/>
        <files mask="PERI_FREQME.h"/>
        <files mask="PERI_GPIO.h"/>
        <files mask="PERI_HASHCRYPT.h"/>
        <files mask="PERI_I2C.h"/>
        <files mask="PERI_I2S.h"/>
        <files mask="PERI_I3C.h"/>
        <files mask="PERI_INPUTMUX.h"/>
        <files mask="PERI_IOPCTL.h"/>
        <files mask="PERI_LCDIF.h"/>
        <files mask="PERI_MIPI_DSI_HOST.h"/>
        <files mask="PERI_MRT.h"/>
        <files mask="PERI_MU.h"/>
        <files mask="PERI_OCOTP.h"/>
        <files mask="PERI_OSTIMER.h"/>
        <files mask="PERI_OTFAD.h"/>
        <files mask="PERI_PINT.h"/>
        <files mask="PERI_PMC.h"/>
        <files mask="PERI_POWERQUAD.h"/>
        <files mask="PERI_PUF.h"/>
        <files mask="PERI_ROMCP.h"/>
        <files mask="PERI_RSTCTL0.h"/>
        <files mask="PERI_RSTCTL1.h"/>
        <files mask="PERI_RTC.h"/>
        <files mask="PERI_SCT.h"/>
        <files mask="PERI_SEMA42.h"/>
        <files mask="PERI_SPI.h"/>
        <files mask="PERI_SYSCTL0.h"/>
        <files mask="PERI_SYSCTL1.h"/>
        <files mask="PERI_TRNG.h"/>
        <files mask="PERI_USART.h"/>
        <files mask="PERI_USBHSD.h"/>
        <files mask="PERI_USBHSDCD.h"/>
        <files mask="PERI_USBHSH.h"/>
        <files mask="PERI_USBPHY.h"/>
        <files mask="PERI_USDHC.h"/>
        <files mask="PERI_UTICK.h"/>
        <files mask="PERI_WWDT.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="device_CMSIS.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="periph" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="periph" type="asm_include"/>
      </include_paths>
    </component>
    <component id="device.MIMXRT595S_system.MIMXRT595S" name="MIMXRT595S_system" brief="Device MIMXRT595S_system" version="1.0.0" full_name="Device MIMXRT595S_system" category="Device/CMSIS" user_visible="true" type="CMSIS_Include" package_base_path="devices/MIMXRT595S" project_base_path="device">
      <dependencies>
        <all>
          <component_dependency value="device.MIMXRT595S_CMSIS.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="./" type="src" device_cores="cm33_MIMXRT595S">
        <files mask="system_MIMXRT595S_cm33.c"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm33_MIMXRT595S">
        <files mask="system_MIMXRT595S_cm33.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="device_system.MIMXRT595S.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_Include_core_cm.MIMXRT595S" name="CMSIS_Include_CM" brief="CMSIS-CORE for Cortex-M, ARMv8-M, ARMv8.1-M" version="6.1.0" full_name="CMSIS Include For Cortex-M, ARMv8-M, ARMv8.1-M" category="CMSIS/CORE" user_visible="true" type="CMSIS_Include" package_base_path="CMSIS/Core/Include" project_base_path="CMSIS">
      <dependencies>
        <all>
          <device_dependency value="MIMXRT595S"/>
          <device_core_dependency value="cm33_MIMXRT595S"/>
        </all>
      </dependencies>
      <source compiler="compiler_armclang" relative_path="./" type="c_include">
        <files mask="cmsis_armclang.h"/>
      </source>
      <source compiler="compiler_armclang" relative_path="m-profile" type="c_include">
        <files mask="cmsis_armclang_m.h"/>
      </source>
      <source compiler="compiler_armclang compiler_gcc compiler_iar" relative_path="./" type="c_include">
        <files mask="cmsis_compiler.h"/>
        <files mask="cmsis_version.h"/>
      </source>
      <source compiler="compiler_iar" relative_path="m-profile" type="c_include">
        <files mask="cmsis_iccarm_m.h"/>
      </source>
      <source compiler="compiler_gcc" relative_path="./" type="c_include">
        <files mask="cmsis_gcc.h"/>
      </source>
      <source compiler="compiler_gcc" relative_path="m-profile" type="c_include">
        <files mask="cmsis_gcc_m.h"/>
      </source>
      <source relative_path="./" type="c_include" device_cores="cm33_MIMXRT595S">
        <files mask="core_cm33.h"/>
        <files mask="tz_context.h"/>
      </source>
      <source relative_path="m-profile" type="c_include" device_cores="cm33_MIMXRT595S">
        <files mask="armv8m_mpu.h"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_Include_core_cm.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="./" type="c_include"/>
        <include_path relative_path="m-profile" type="c_include"/>
        <include_path relative_path="./" type="asm_include"/>
        <include_path relative_path="m-profile" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_RTOS2_RTX.MIMXRT595S" name="CMSIS_RTOS2_RTX5" brief="CMSIS-RTOS2 RTX5 for Cortex-M, SC000, C300 and Armv8-M (Library)" version="5.9.0" full_name="CMSIS RTOS2 RTX5" category="CMSIS/RTOS2" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/RTOS2" project_base_path="CMSIS/RTOS2">
      <defines>
        <define name="CMSIS_device_header" value="'&quot;fsl_device_registers.h&quot;'"/>
        <define name="RTE_COMPONENTS_H" value=""/>
      </defines>
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Device_API_OSTick.MIMXRT595S"/>
          <component_dependency value="CMSIS_Device_API_RTOS2.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source relative_path="RTX/Source" type="c_include">
        <files mask="rtx_core_c.h"/>
        <files mask="rtx_core_ca.h"/>
        <files mask="rtx_core_cm.h"/>
        <files mask="rtx_lib.h"/>
      </source>
      <source relative_path="RTX/Source" type="src">
        <files mask="rtx_delay.c"/>
        <files mask="rtx_evflags.c"/>
        <files mask="rtx_evr.c"/>
        <files mask="rtx_kernel.c"/>
        <files mask="rtx_memory.c"/>
        <files mask="rtx_mempool.c"/>
        <files mask="rtx_msgqueue.c"/>
        <files mask="rtx_mutex.c"/>
        <files mask="rtx_semaphore.c"/>
        <files mask="rtx_system.c"/>
        <files mask="rtx_thread.c"/>
        <files mask="rtx_timer.c"/>
        <files mask="rtx_lib.c"/>
      </source>
      <source relative_path="RTX/Include" type="c_include">
        <files mask="rtx_evr.h"/>
        <files mask="rtx_os.h"/>
        <files mask="rtx_def.h"/>
      </source>
      <source relative_path="RTX/Config" type="src">
        <files mask="RTX_Config.c"/>
      </source>
      <source relative_path="RTX/Config" type="c_include">
        <files mask="RTX_Config.h"/>
      </source>
      <source relative_path="Source" type="src" device_cores="cm33_MIMXRT595S">
        <files mask="os_systick.c"/>
      </source>
      <source toolchain="mdk armgcc mcuxpresso" relative_path="RTX/Source/GCC" type="asm_include" device_cores="cm33_MIMXRT595S">
        <files mask="irq_armv8mml.S"/>
      </source>
      <source toolchain="iar" relative_path="RTX/Source/IAR" type="asm_include" device_cores="cm33_MIMXRT595S">
        <files mask="irq_armv8mml.s"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_RTOS2_RTX.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="RTX/Include" type="c_include"/>
        <include_path relative_path="RTX/Config" type="c_include"/>
        <include_path relative_path="RTX/Include" type="asm_include"/>
        <include_path relative_path="RTX/Config" type="asm_include"/>
      </include_paths>
    </component>
    <component id="CMSIS_RTOS2_RTX_LIB.MIMXRT595S" name="CMSIS_RTOS2_RTX5_Library" brief="CMSIS-RTOS2 RTX5 for Cortex-M, SC000, C300 and Armv8-M (Library)" version="5.9.0" full_name="CMSIS RTOS2 RTX5" category="CMSIS/RTOS2" user_visible="true" type="CMSIS_driver" package_base_path="CMSIS/RTOS2" project_base_path="CMSIS/RTOS2">
      <dependencies>
        <all>
          <component_dependency value="CMSIS_Device_API_OSTick.MIMXRT595S"/>
          <component_dependency value="CMSIS_Device_API_RTOS2.MIMXRT595S"/>
          <device_dependency value="MIMXRT595S"/>
        </all>
      </dependencies>
      <source toolchain="iar" relative_path="RTX/Library/IAR" project_relative_path="./" type="lib" device_cores="cm33_MIMXRT595S" dsp="true" fpu="true">
        <files mask="RTX_V8MMF.a"/>
      </source>
      <source toolchain="iar" relative_path="RTX/Library/IAR" project_relative_path="./" type="lib" device_cores="cm33_MIMXRT595S" dsp="true" fpu="true">
        <files mask="RTX_V8MMFN.a"/>
      </source>
      <source compiler="compiler_gcc" relative_path="RTX/Library/GCC" project_relative_path="./" type="lib" device_cores="cm33_MIMXRT595S" dsp="true" fpu="true">
        <files mask="libRTX_V8MMF.a"/>
      </source>
      <source compiler="compiler_gcc" relative_path="RTX/Library/GCC" project_relative_path="./" type="lib" device_cores="cm33_MIMXRT595S" dsp="true" fpu="true">
        <files mask="libRTX_V8MMFN.a"/>
      </source>
      <source compiler="compiler_armclang" relative_path="RTX/Library/CLANG" project_relative_path="./" type="lib" device_cores="cm33_MIMXRT595S" dsp="true" fpu="true">
        <files mask="libRTX_V8MMF.a"/>
      </source>
      <source compiler="compiler_armclang" relative_path="RTX/Library/CLANG" project_relative_path="./" type="lib" device_cores="cm33_MIMXRT595S" dsp="true" fpu="true">
        <files mask="libRTX_V8MMFN.a"/>
      </source>
      <source relative_path="RTX/Source" type="c_include">
        <files mask="rtx_core_c.h"/>
        <files mask="rtx_core_ca.h"/>
        <files mask="rtx_core_cm.h"/>
        <files mask="rtx_lib.h"/>
      </source>
      <source relative_path="RTX/Source" type="src">
        <files mask="rtx_lib.c"/>
      </source>
      <source relative_path="RTX/Include" type="c_include">
        <files mask="rtx_evr.h"/>
        <files mask="rtx_os.h"/>
        <files mask="rtx_def.h"/>
      </source>
      <source relative_path="RTX/Config" type="src">
        <files mask="RTX_Config.c"/>
      </source>
      <source relative_path="RTX/Config" type="c_include">
        <files mask="RTX_Config.h"/>
      </source>
      <source toolchain="iar" relative_path="RTX/Library/IAR" type="lib" device_cores="cm33_MIMXRT595S" dsp="true" fpu="true" tz="true">
        <files mask="RTX_V8MMF.a"/>
      </source>
      <source toolchain="iar" relative_path="RTX/Library/IAR" type="lib" device_cores="cm33_MIMXRT595S" dsp="true" fpu="true">
        <files mask="RTX_V8MMFN.a"/>
      </source>
      <source compiler="compiler_gcc" relative_path="RTX/Library/GCC" type="lib" device_cores="cm33_MIMXRT595S" dsp="true" fpu="true" tz="true">
        <files mask="libRTX_V8MMF.a"/>
      </source>
      <source compiler="compiler_gcc" relative_path="RTX/Library/GCC" type="lib" device_cores="cm33_MIMXRT595S" dsp="true" fpu="true">
        <files mask="libRTX_V8MMFN.a"/>
      </source>
      <source compiler="compiler_armclang" relative_path="RTX/Library/CLANG" type="lib" device_cores="cm33_MIMXRT595S" dsp="true" fpu="true" tz="true">
        <files mask="libRTX_V8MMF.a"/>
      </source>
      <source compiler="compiler_armclang" relative_path="RTX/Library/CLANG" type="lib" device_cores="cm33_MIMXRT595S" dsp="true" fpu="true">
        <files mask="libRTX_V8MMFN.a"/>
      </source>
      <source toolchain="armgcc" relative_path="./" type="workspace">
        <files mask="CMSIS_RTOS2_RTX_LIB.cmake" hidden="true"/>
      </source>
      <include_paths>
        <include_path relative_path="RTX/Source" type="c_include"/>
        <include_path relative_path="RTX/Include" type="c_include"/>
        <include_path relative_path="RTX/Config" type="c_include"/>
        <include_path relative_path="RTX/Source" type="asm_include"/>
        <include_path relative_path="RTX/Include" type="asm_include"/>
        <include_path relative_path="RTX/Config" type="asm_include"/>
      </include_paths>
    </component>
  </components>
</ksdk:manifest>
